var by=Object.defineProperty;var Sy=(s,e,t)=>e in s?by(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var rn=(s,e,t)=>Sy(s,typeof e!="symbol"?e+"":e,t);import"../chunks/Bzak7iHL.js";import{g as My,w as Qs,d as Fh,b as ao,o as D0,r as If,c as wy,s as ms}from"../chunks/BWb1CHp6.js";import{aE as L0,h as K,aF as qd,M as Df,e as pl,aG as Hp,N as Ey,R as Ty,ad as Wp,ae as Xp,ag as Ay,$ as Lf,C as vi,D as Zd,v as Cy,Y as Ry,F as Py,H as Iy,G as jp,I as Jd,J as Pu,K as ks,aj as U0,an as Dy,x as Kd,z as Ly,y as Fo,ar as N0,af as Uy,w as Ny,P as Oy,aH as Fy,A as O0,B as ky,aI as By,aJ as Iu,aK as F0,aL as zy,aM as Vy,al as k0,aN as Gy,aq as Hy,aO as Wy,t as es,aP as Xy,ao as jy,am as Yy,at as Yp,aQ as qy,ai as Rl,aR as Zy,aS as Jy,aT as Ky,aU as Qy,aV as $y,aW as ex,aX as tx,aC as Ei,aA as qn,u as Et,d as Ya,ab as st,aa as B0,p as Ln,c as gt,f as Ye,s as Wi,a as We,m as Un,l as Qt,n as Bs,a9 as xi,o as zs,Q as li,O as kr,q as yt,Z as is,aY as ca,aZ as qp}from"../chunks/9bJCRzkd.js";import{r as sr,i as Ot,b as Zp,s as Br,p as Ve,a as Wo,d as ml,c as Ut}from"../chunks/C3oTXJKI.js";import{p as nx}from"../chunks/aErRTtE-.js";function ix(s){let e=0,t=qd(0),i;return()=>{L0()&&(K(t),Df(()=>(e===0&&(i=pl(()=>s(()=>Hp(t)))),e+=1,()=>{Ey(()=>{e-=1,e===0&&(i==null||i(),i=void 0,Hp(t))})})))}}let Jp=!1;function z0(){Jp||(Jp=!0,document.addEventListener("reset",s=>{Promise.resolve().then(()=>{var e;if(!s.defaultPrevented)for(const t of s.target.elements)(e=t.__on_r)==null||e.call(t)})},{capture:!0}))}function rx(s,e,t,i=!0){i&&t();for(var n of e)s.addEventListener(n,t);Ty(()=>{for(var r of e)s.removeEventListener(r,t)})}function V0(s){var e=Ay,t=Lf;Wp(null),Xp(null);try{return s()}finally{Wp(e),Xp(t)}}function G0(s,e,t,i=t){s.addEventListener(e,()=>V0(t));const n=s.__on_r;n?s.__on_r=()=>{n(),i(!0)}:s.__on_r=()=>i(!0),z0()}function Lr(s,e){return e}function sx(s,e,t){for(var i=s.items,n=[],r=e.length,o=0;o<r;o++)Gy(e[o].e,n,!0);var a=r>0&&n.length===0&&t!==null;if(a){var l=t.parentNode;Hy(l),l.append(t),i.clear(),fr(s,e[0].prev,e[r-1].next)}Wy(n,()=>{for(var c=0;c<r;c++){var h=e[c];a||(i.delete(h.k),fr(s,h.prev,h.next)),F0(h.e,!a)}})}function Ur(s,e,t,i,n,r=null){var o=s,a={flags:e,items:new Map,first:null};vi&&Zd();var l=null,c=!1,h=new Map,u=Ry(()=>{var v=t();return Uy(v)?v:v==null?[]:N0(v)}),d,f;function p(){ox(f,d,a,h,o,n,e,i,t),r!==null&&(d.length===0?l?O0(l):l=Kd(()=>r(o)):l!==null&&ky(l,()=>{l=null}))}Cy(()=>{f??(f=Lf),d=K(u);var v=d.length;if(c&&v===0)return;c=v===0;let m=!1;if(vi){var g=Py(o)===Iy;g!==(v===0)&&(o=jp(),Jd(o),Pu(!1),m=!0)}if(vi){for(var x=null,y,_=0;_<v;_++){if(ks.nodeType===U0&&ks.data===Dy){o=ks,m=!0,Pu(!1);break}var E=d[_],w=i(E,_);y=Qd(ks,a,x,null,E,w,_,n,e,t),a.items.set(w,y),x=y}v>0&&Jd(jp())}if(vi)v===0&&r&&(l=Kd(()=>r(o)));else if(Ly()){var M=new Set,T=Fo;for(_=0;_<v;_+=1){E=d[_],w=i(E,_);var S=a.items.get(w)??h.get(w);S?H0(S,E,_):(y=Qd(null,a,null,null,E,w,_,n,e,t,!0),h.set(w,y)),M.add(w)}for(const[b,P]of a.items)M.has(b)||T.skipped_effects.add(P.e);T.add_callback(p)}else p();m&&Pu(!0),K(u)}),vi&&(o=ks)}function ox(s,e,t,i,n,r,o,a,l){var c=e.length,h=t.items,u=t.first,d=u,f,p=null,v=[],m=[],g,x,y,_;for(_=0;_<c;_+=1){if(g=e[_],x=a(g,_),y=h.get(x),y===void 0){var E=i.get(x);if(E!==void 0){i.delete(x),h.set(x,E);var w=p?p.next:d;fr(t,p,E),fr(t,E,w),Du(E,w,n),p=E}else{var M=d?d.e.nodes_start:n;p=Qd(M,t,p,p===null?t.first:p.next,g,x,_,r,o,l)}h.set(x,p),v=[],m=[],d=p.next;continue}if(H0(y,g,_),(y.e.f&Iu)!==0&&O0(y.e),y!==d){if(f!==void 0&&f.has(y)){if(v.length<m.length){var T=m[0],S;p=T.prev;var b=v[0],P=v[v.length-1];for(S=0;S<v.length;S+=1)Du(v[S],T,n);for(S=0;S<m.length;S+=1)f.delete(m[S]);fr(t,b.prev,P.next),fr(t,p,b),fr(t,P,T),d=T,p=P,_-=1,v=[],m=[]}else f.delete(y),Du(y,d,n),fr(t,y.prev,y.next),fr(t,y,p===null?t.first:p.next),fr(t,p,y),p=y;continue}for(v=[],m=[];d!==null&&d.k!==x;)(d.e.f&Iu)===0&&(f??(f=new Set)).add(d),m.push(d),d=d.next;if(d===null)continue;y=d}v.push(y),p=y,d=y.next}if(d!==null||f!==void 0){for(var D=f===void 0?[]:N0(f);d!==null;)(d.e.f&Iu)===0&&D.push(d),d=d.next;var G=D.length;if(G>0){var H=null;sx(t,D,H)}}s.first=t.first&&t.first.e,s.last=p&&p.e;for(var q of i.values())F0(q.e);i.clear()}function H0(s,e,t,i){Fy(s.v,e),s.i=t}function Qd(s,e,t,i,n,r,o,a,l,c,h){var u=(l&zy)!==0,d=(l&Vy)===0,f=u?d?Oy(n,!1,!1):qd(n):n,p=(l&By)===0?o:qd(o),v={i:p,v:f,k:r,a:null,e:null,prev:t,next:i};try{if(s===null){var m=document.createDocumentFragment();m.append(s=Ny())}return v.e=Kd(()=>a(s,f,p,c),vi),v.e.prev=t&&t.e,v.e.next=i&&i.e,t===null?h||(e.first=v):(t.next=v,t.e.next=v.e),i!==null&&(i.prev=v,i.e.prev=v.e),v}finally{}}function Du(s,e,t){for(var i=s.next?s.next.e.nodes_start:t,n=e?e.e.nodes_start:t,r=s.e.nodes_start;r!==null&&r!==i;){var o=k0(r);n.before(r),r=o}}function fr(s,e,t){e===null?s.first=t:(e.next=t,e.e.next=t&&t.e),t!==null&&(t.prev=e,t.e.prev=e&&e.e)}function gl(s,e,t=!1,i=!1,n=!1){var r=s,o="";es(()=>{var a=Lf;if(o===(o=e()??"")){vi&&Zd();return}if(a.nodes_start!==null&&(Xy(a.nodes_start,a.nodes_end),a.nodes_start=a.nodes_end=null),o!==""){if(vi){ks.data;for(var l=Zd(),c=l;l!==null&&(l.nodeType!==U0||l.data!=="");)c=l,l=k0(l);if(l===null)throw jy(),Yy;Yp(ks,c),r=Jd(l);return}var h=o+"";t?h=`<svg>${h}</svg>`:i&&(h=`<math>${h}</math>`);var u=qy(h);if((t||i)&&(u=Rl(u)),Yp(Rl(u),u.lastChild),t||i)for(;Rl(u);)r.before(Rl(u));else r.before(u)}})}function Kp(s,e=!1){var t=e?" !important;":";",i="";for(var n in s){var r=s[n];r!=null&&r!==""&&(i+=" "+n+": "+r+t)}return i}function ax(s,e){if(e){var t="",i,n;return Array.isArray(e)?(i=e[0],n=e[1]):i=e,i&&(t+=Kp(i)),n&&(t+=Kp(n,!0)),t=t.trim(),t===""?null:t}return String(s)}function Lu(s,e={},t,i){for(var n in t){var r=t[n];e[n]!==r&&(t[n]==null?s.style.removeProperty(n):s.style.setProperty(n,r,i))}}function lx(s,e,t,i){var n=s.__style;if(vi||n!==e){var r=ax(e,i);(!vi||r!==s.getAttribute("style"))&&(r==null?s.removeAttribute("style"):s.style.cssText=r),s.__style=e}else i&&(Array.isArray(i)?(Lu(s,t==null?void 0:t[0],i[0]),Lu(s,t==null?void 0:t[1],i[1],"important")):Lu(s,t,i));return i}const cx=Symbol("is custom element"),hx=Symbol("is html");function ii(s){if(vi){var e=!1,t=()=>{if(!e){if(e=!0,s.hasAttribute("value")){var i=s.value;gi(s,"value",null),s.value=i}if(s.hasAttribute("checked")){var n=s.checked;gi(s,"checked",null),s.checked=n}}};s.__on_r=t,$y(t),z0()}}function ux(s,e){var t=W0(s);t.value===(t.value=e??void 0)||s.value===e&&(e!==0||s.nodeName!=="PROGRESS")||(s.value=e??"")}function gi(s,e,t,i){var n=W0(s);vi&&(n[e]=s.getAttribute(e),e==="src"||e==="srcset"||e==="href"&&s.nodeName==="LINK")||n[e]!==(n[e]=t)&&(e==="loading"&&(s[Zy]=t),t==null?s.removeAttribute(e):typeof t!="string"&&dx(s).includes(e)?s[e]=t:s.setAttribute(e,t))}function W0(s){return s.__attributes??(s.__attributes={[cx]:s.nodeName.includes("-"),[hx]:s.namespaceURI===Jy})}var Qp=new Map;function dx(s){var e=Qp.get(s.nodeName);if(e)return e;Qp.set(s.nodeName,e=[]);for(var t,i=s,n=Element.prototype;n!==i;){t=Qy(i);for(var r in t)t[r].set&&e.push(r);i=Ky(i)}return e}function Mr(s,e,t=e){var i=ex(),n=new WeakSet;G0(s,"input",r=>{var o=r?s.defaultValue:s.value;if(o=Uu(s)?Nu(o):o,t(o),Fo!==null&&n.add(Fo),i&&o!==(o=e())){var a=s.selectionStart,l=s.selectionEnd;s.value=o??"",l!==null&&(s.selectionStart=a,s.selectionEnd=Math.min(l,s.value.length))}}),(vi&&s.defaultValue!==s.value||pl(e)==null&&s.value)&&(t(Uu(s)?Nu(s.value):s.value),Fo!==null&&n.add(Fo)),Df(()=>{var r=e();if(s===document.activeElement){var o=tx??Fo;if(n.has(o))return}Uu(s)&&r===Nu(s.value)||s.type==="date"&&!r&&!s.value||r!==s.value&&(s.value=r??"")})}function ha(s,e,t=e){G0(s,"change",i=>{var n=i?s.defaultChecked:s.checked;t(n)}),(vi&&s.defaultChecked!==s.checked||pl(e)==null)&&t(s.checked),Df(()=>{var i=e();s.checked=!!i})}function Uu(s){var e=s.type;return e==="number"||e==="range"}function Nu(s){return s===""?null:+s}function $p(s,e){rx(window,["resize"],()=>V0(()=>e(window[s])))}function Xc(s){let e;const t=ix(n=>{let r=!1;const o=s.subscribe(a=>{e=a,r&&n()});return r=!0,o});function i(){return L0()?(t(),e):My(s)}return"set"in s?{get current(){return i()},set current(n){s.set(n)}}:{get current(){return i()}}}const em=(s,e)=>{if(s===e)return!0;if(!s||!e)return!1;const t=s.length;if(e.length!==t)return!1;for(let i=0;i<t;i++)if(s[i]!==e[i])return!1;return!0},fx=()=>{const s=[],i={items:s,remember:(n,r)=>{for(let a=0;a<s.length;a++){const l=s[a];if(em(r,l.keys)&&l.promise)return l.promise}const o={promise:n(),keys:r};return s.push(o),o.promise},clear:n=>{for(let r=0;r<s.length;r++){const o=s[r];if(em(n,o.keys)){s.splice(r,1);return}}}};return Ei("threlte-cache",i),i},px=()=>{const s=qn("threlte-cache");if(!s)throw new Error("No cache found. The cache can only be used in a child component to <Canvas>.");return s};/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const kh="178",Ui={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Gs={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},X0=0,$d=1,j0=2,mx=3,gx=0,Uf=1,La=2,pr=3,br=0,ti=1,_i=2,Or=0,Ys=1,ef=2,tf=3,nf=4,Y0=5,ns=100,q0=101,Z0=102,J0=103,K0=104,Q0=200,$0=201,ev=202,tv=203,jc=204,Yc=205,nv=206,iv=207,rv=208,sv=209,ov=210,av=211,lv=212,cv=213,hv=214,qc=0,Zc=1,Jc=2,$s=3,Kc=4,Qc=5,$c=6,eh=7,vl=0,uv=1,dv=2,yr=0,fv=1,pv=2,mv=3,gv=4,vv=5,th=6,_v=7,rf="attached",yv="detached",Bh=300,zr=301,ss=302,qa=303,Za=304,Qo=306,tr=1e3,bi=1001,Ja=1002,Yn=1003,Nf=1004,vx=1004,ko=1005,_x=1005,Mn=1006,Ua=1007,yx=1007,nr=1008,xx=1008,rr=1009,Of=1010,Ff=1011,Xo=1012,zh=1013,Vr=1014,Si=1015,$o=1016,Vh=1017,Gh=1018,jo=1020,kf=35902,Bf=1021,zf=1022,ci=1023,Yo=1026,qo=1027,Hh=1028,_l=1029,Vf=1030,Wh=1031,bx=1032,Xh=1033,Na=33776,Oa=33777,Fa=33778,ka=33779,nh=35840,ih=35841,rh=35842,sh=35843,oh=36196,ah=37492,lh=37496,ch=37808,hh=37809,uh=37810,dh=37811,fh=37812,ph=37813,mh=37814,gh=37815,vh=37816,_h=37817,yh=37818,xh=37819,bh=37820,Sh=37821,Ba=36492,Mh=36494,wh=36495,Gf=36283,Eh=36284,Th=36285,Ah=36286,xv=2200,bv=2201,Sv=2202,Ka=2300,Ch=2301,Fc=2302,Hs=2400,Ws=2401,Qa=2402,jh=2500,Hf=2501,Sx=0,Mx=1,wx=2,Mv=3200,Wf=3201,Ex=3202,Tx=3203,os=0,wv=1,Pr="",on="srgb",eo="srgb-linear",$a="linear",Kt="srgb",Ax=0,Ns=7680,Cx=7681,Rx=7682,Px=7683,Ix=34055,Dx=34056,Lx=5386,Ux=512,Nx=513,Ox=514,Fx=515,kx=516,Bx=517,zx=518,sf=519,Ev=512,Tv=513,Av=514,Xf=515,Cv=516,Rv=517,Pv=518,Iv=519,el=35044,Vx=35048,Gx=35040,Hx=35045,Wx=35049,Xx=35041,jx=35046,Yx=35050,qx=35042,Zx="100",of="300 es",Hi=2e3,tl=2001,Jx={COMPUTE:"compute",RENDER:"render"},Kx={PERSPECTIVE:"perspective",LINEAR:"linear",FLAT:"flat"},Qx={NORMAL:"normal",CENTROID:"centroid",SAMPLE:"sample",FIRST:"first",EITHER:"either"};class Sr{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){const i=this._listeners;return i===void 0?!1:i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){const i=this._listeners;if(i===void 0)return;const n=i[e];if(n!==void 0){const r=n.indexOf(t);r!==-1&&n.splice(r,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const i=t[e.type];if(i!==void 0){e.target=this;const n=i.slice(0);for(let r=0,o=n.length;r<o;r++)n[r].call(this,e);e.target=null}}}const Kn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let tm=1234567;const qs=Math.PI/180,Zo=180/Math.PI;function Ni(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(Kn[s&255]+Kn[s>>8&255]+Kn[s>>16&255]+Kn[s>>24&255]+"-"+Kn[e&255]+Kn[e>>8&255]+"-"+Kn[e>>16&15|64]+Kn[e>>24&255]+"-"+Kn[t&63|128]+Kn[t>>8&255]+"-"+Kn[t>>16&255]+Kn[t>>24&255]+Kn[i&255]+Kn[i>>8&255]+Kn[i>>16&255]+Kn[i>>24&255]).toLowerCase()}function Ct(s,e,t){return Math.max(e,Math.min(t,s))}function jf(s,e){return(s%e+e)%e}function $x(s,e,t,i,n){return i+(s-e)*(n-i)/(t-e)}function eb(s,e,t){return s!==e?(t-s)/(e-s):0}function za(s,e,t){return(1-t)*s+t*e}function tb(s,e,t,i){return za(s,e,1-Math.exp(-t*i))}function nb(s,e=1){return e-Math.abs(jf(s,e*2)-e)}function ib(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*(3-2*s))}function rb(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*s*(s*(s*6-15)+10))}function sb(s,e){return s+Math.floor(Math.random()*(e-s+1))}function ob(s,e){return s+Math.random()*(e-s)}function ab(s){return s*(.5-Math.random())}function lb(s){s!==void 0&&(tm=s);let e=tm+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function cb(s){return s*qs}function hb(s){return s*Zo}function ub(s){return(s&s-1)===0&&s!==0}function db(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function fb(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function pb(s,e,t,i,n){const r=Math.cos,o=Math.sin,a=r(t/2),l=o(t/2),c=r((e+i)/2),h=o((e+i)/2),u=r((e-i)/2),d=o((e-i)/2),f=r((i-e)/2),p=o((i-e)/2);switch(n){case"XYX":s.set(a*h,l*u,l*d,a*c);break;case"YZY":s.set(l*d,a*h,l*u,a*c);break;case"ZXZ":s.set(l*u,l*d,a*h,a*c);break;case"XZX":s.set(a*h,l*p,l*f,a*c);break;case"YXY":s.set(l*f,a*h,l*p,a*c);break;case"ZYZ":s.set(l*p,l*f,a*h,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+n)}}function ai(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function Pt(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const gr={DEG2RAD:qs,RAD2DEG:Zo,generateUUID:Ni,clamp:Ct,euclideanModulo:jf,mapLinear:$x,inverseLerp:eb,lerp:za,damp:tb,pingpong:nb,smoothstep:ib,smootherstep:rb,randInt:sb,randFloat:ob,randFloatSpread:ab,seededRandom:lb,degToRad:cb,radToDeg:hb,isPowerOfTwo:ub,ceilPowerOfTwo:db,floorPowerOfTwo:fb,setQuaternionFromProperEuler:pb,normalize:Pt,denormalize:ai};class Me{constructor(e=0,t=0){Me.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6],this.y=n[1]*t+n[4]*i+n[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Ct(this.x,e.x,t.x),this.y=Ct(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=Ct(this.x,e,t),this.y=Ct(this.y,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Ct(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(Ct(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),n=Math.sin(t),r=this.x-e.x,o=this.y-e.y;return this.x=r*i-o*n+e.x,this.y=r*n+o*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Ht{constructor(e=0,t=0,i=0,n=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=n}static slerpFlat(e,t,i,n,r,o,a){let l=i[n+0],c=i[n+1],h=i[n+2],u=i[n+3];const d=r[o+0],f=r[o+1],p=r[o+2],v=r[o+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=h,e[t+3]=u;return}if(a===1){e[t+0]=d,e[t+1]=f,e[t+2]=p,e[t+3]=v;return}if(u!==v||l!==d||c!==f||h!==p){let m=1-a;const g=l*d+c*f+h*p+u*v,x=g>=0?1:-1,y=1-g*g;if(y>Number.EPSILON){const E=Math.sqrt(y),w=Math.atan2(E,g*x);m=Math.sin(m*w)/E,a=Math.sin(a*w)/E}const _=a*x;if(l=l*m+d*_,c=c*m+f*_,h=h*m+p*_,u=u*m+v*_,m===1-a){const E=1/Math.sqrt(l*l+c*c+h*h+u*u);l*=E,c*=E,h*=E,u*=E}}e[t]=l,e[t+1]=c,e[t+2]=h,e[t+3]=u}static multiplyQuaternionsFlat(e,t,i,n,r,o){const a=i[n],l=i[n+1],c=i[n+2],h=i[n+3],u=r[o],d=r[o+1],f=r[o+2],p=r[o+3];return e[t]=a*p+h*u+l*f-c*d,e[t+1]=l*p+h*d+c*u-a*f,e[t+2]=c*p+h*f+a*d-l*u,e[t+3]=h*p-a*u-l*d-c*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,n){return this._x=e,this._y=t,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const i=e._x,n=e._y,r=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(i/2),h=a(n/2),u=a(r/2),d=l(i/2),f=l(n/2),p=l(r/2);switch(o){case"XYZ":this._x=d*h*u+c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u-d*f*p;break;case"YXZ":this._x=d*h*u+c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u+d*f*p;break;case"ZXY":this._x=d*h*u-c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u-d*f*p;break;case"ZYX":this._x=d*h*u-c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u+d*f*p;break;case"YZX":this._x=d*h*u+c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u-d*f*p;break;case"XZY":this._x=d*h*u-c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,n=Math.sin(i);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],n=t[4],r=t[8],o=t[1],a=t[5],l=t[9],c=t[2],h=t[6],u=t[10],d=i+a+u;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(h-l)*f,this._y=(r-c)*f,this._z=(o-n)*f}else if(i>a&&i>u){const f=2*Math.sqrt(1+i-a-u);this._w=(h-l)/f,this._x=.25*f,this._y=(n+o)/f,this._z=(r+c)/f}else if(a>u){const f=2*Math.sqrt(1+a-i-u);this._w=(r-c)/f,this._x=(n+o)/f,this._y=.25*f,this._z=(l+h)/f}else{const f=2*Math.sqrt(1+u-i-a);this._w=(o-n)/f,this._x=(r+c)/f,this._y=(l+h)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<1e-8?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Ct(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const n=Math.min(1,t/i);return this.slerp(e,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,n=e._y,r=e._z,o=e._w,a=t._x,l=t._y,c=t._z,h=t._w;return this._x=i*h+o*a+n*c-r*l,this._y=n*h+o*l+r*a-i*c,this._z=r*h+o*c+i*l-n*a,this._w=o*h-i*a-n*l-r*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,n=this._y,r=this._z,o=this._w;let a=o*e._w+i*e._x+n*e._y+r*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=i,this._y=n,this._z=r,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-t;return this._w=f*o+t*this._w,this._x=f*i+t*this._x,this._y=f*n+t*this._y,this._z=f*r+t*this._z,this.normalize(),this}const c=Math.sqrt(l),h=Math.atan2(c,a),u=Math.sin((1-t)*h)/c,d=Math.sin(t*h)/c;return this._w=o*u+this._w*d,this._x=i*u+this._x*d,this._y=n*u+this._y*d,this._z=r*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),i=Math.random(),n=Math.sqrt(1-i),r=Math.sqrt(i);return this.set(n*Math.sin(e),n*Math.cos(e),r*Math.sin(t),r*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class I{constructor(e=0,t=0,i=0){I.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(nm.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(nm.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6]*n,this.y=r[1]*t+r[4]*i+r[7]*n,this.z=r[2]*t+r[5]*i+r[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,r=e.elements,o=1/(r[3]*t+r[7]*i+r[11]*n+r[15]);return this.x=(r[0]*t+r[4]*i+r[8]*n+r[12])*o,this.y=(r[1]*t+r[5]*i+r[9]*n+r[13])*o,this.z=(r[2]*t+r[6]*i+r[10]*n+r[14])*o,this}applyQuaternion(e){const t=this.x,i=this.y,n=this.z,r=e.x,o=e.y,a=e.z,l=e.w,c=2*(o*n-a*i),h=2*(a*t-r*n),u=2*(r*i-o*t);return this.x=t+l*c+o*u-a*h,this.y=i+l*h+a*c-r*u,this.z=n+l*u+r*h-o*c,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[4]*i+r[8]*n,this.y=r[1]*t+r[5]*i+r[9]*n,this.z=r[2]*t+r[6]*i+r[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Ct(this.x,e.x,t.x),this.y=Ct(this.y,e.y,t.y),this.z=Ct(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=Ct(this.x,e,t),this.y=Ct(this.y,e,t),this.z=Ct(this.z,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Ct(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,n=e.y,r=e.z,o=t.x,a=t.y,l=t.z;return this.x=n*l-r*a,this.y=r*o-i*l,this.z=i*a-n*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return Ou.copy(this).projectOnVector(e),this.sub(Ou)}reflect(e){return this.sub(Ou.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(Ct(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,n=this.z-e.z;return t*t+i*i+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const n=Math.sin(t)*e;return this.x=n*Math.sin(i),this.y=Math.cos(t)*e,this.z=n*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=n,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,i=Math.sqrt(1-t*t);return this.x=i*Math.cos(e),this.y=t,this.z=i*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Ou=new I,nm=new Ht;class At{constructor(e,t,i,n,r,o,a,l,c){At.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,i,n,r,o,a,l,c)}set(e,t,i,n,r,o,a,l,c){const h=this.elements;return h[0]=e,h[1]=n,h[2]=a,h[3]=t,h[4]=r,h[5]=l,h[6]=i,h[7]=o,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,r=this.elements,o=i[0],a=i[3],l=i[6],c=i[1],h=i[4],u=i[7],d=i[2],f=i[5],p=i[8],v=n[0],m=n[3],g=n[6],x=n[1],y=n[4],_=n[7],E=n[2],w=n[5],M=n[8];return r[0]=o*v+a*x+l*E,r[3]=o*m+a*y+l*w,r[6]=o*g+a*_+l*M,r[1]=c*v+h*x+u*E,r[4]=c*m+h*y+u*w,r[7]=c*g+h*_+u*M,r[2]=d*v+f*x+p*E,r[5]=d*m+f*y+p*w,r[8]=d*g+f*_+p*M,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],o=e[4],a=e[5],l=e[6],c=e[7],h=e[8];return t*o*h-t*a*c-i*r*h+i*a*l+n*r*c-n*o*l}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],o=e[4],a=e[5],l=e[6],c=e[7],h=e[8],u=h*o-a*c,d=a*l-h*r,f=c*r-o*l,p=t*u+i*d+n*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const v=1/p;return e[0]=u*v,e[1]=(n*c-h*i)*v,e[2]=(a*i-n*o)*v,e[3]=d*v,e[4]=(h*t-n*l)*v,e[5]=(n*r-a*t)*v,e[6]=f*v,e[7]=(i*l-c*t)*v,e[8]=(o*t-i*r)*v,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,n,r,o,a){const l=Math.cos(r),c=Math.sin(r);return this.set(i*l,i*c,-i*(l*o+c*a)+o+e,-n*c,n*l,-n*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(Fu.makeScale(e,t)),this}rotate(e){return this.premultiply(Fu.makeRotation(-e)),this}translate(e,t){return this.premultiply(Fu.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<9;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Fu=new At;function Dv(s){for(let e=s.length-1;e>=0;--e)if(s[e]>=65535)return!0;return!1}const mb={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Bo(s,e){return new mb[s](e)}function nl(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function Lv(){const s=nl("canvas");return s.style.display="block",s}const im={};function Go(s){s in im||(im[s]=!0,console.warn(s))}function gb(s,e,t){return new Promise(function(i,n){function r(){switch(s.clientWaitSync(e,s.SYNC_FLUSH_COMMANDS_BIT,0)){case s.WAIT_FAILED:n();break;case s.TIMEOUT_EXPIRED:setTimeout(r,t);break;default:i()}}setTimeout(r,t)})}function vb(s){const e=s.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function _b(s){const e=s.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const rm=new At().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),sm=new At().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function yb(){const s={enabled:!0,workingColorSpace:eo,spaces:{},convert:function(n,r,o){return this.enabled===!1||r===o||!r||!o||(this.spaces[r].transfer===Kt&&(n.r=Fr(n.r),n.g=Fr(n.g),n.b=Fr(n.b)),this.spaces[r].primaries!==this.spaces[o].primaries&&(n.applyMatrix3(this.spaces[r].toXYZ),n.applyMatrix3(this.spaces[o].fromXYZ)),this.spaces[o].transfer===Kt&&(n.r=Ho(n.r),n.g=Ho(n.g),n.b=Ho(n.b))),n},workingToColorSpace:function(n,r){return this.convert(n,this.workingColorSpace,r)},colorSpaceToWorking:function(n,r){return this.convert(n,r,this.workingColorSpace)},getPrimaries:function(n){return this.spaces[n].primaries},getTransfer:function(n){return n===Pr?$a:this.spaces[n].transfer},getLuminanceCoefficients:function(n,r=this.workingColorSpace){return n.fromArray(this.spaces[r].luminanceCoefficients)},define:function(n){Object.assign(this.spaces,n)},_getMatrix:function(n,r,o){return n.copy(this.spaces[r].toXYZ).multiply(this.spaces[o].fromXYZ)},_getDrawingBufferColorSpace:function(n){return this.spaces[n].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(n=this.workingColorSpace){return this.spaces[n].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(n,r){return Go("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),s.workingToColorSpace(n,r)},toWorkingColorSpace:function(n,r){return Go("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),s.colorSpaceToWorking(n,r)}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],i=[.3127,.329];return s.define({[eo]:{primaries:e,whitePoint:i,transfer:$a,toXYZ:rm,fromXYZ:sm,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:on},outputColorSpaceConfig:{drawingBufferColorSpace:on}},[on]:{primaries:e,whitePoint:i,transfer:Kt,toXYZ:rm,fromXYZ:sm,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:on}}}),s}const Nt=yb();function Fr(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function Ho(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}let mo;class Uv{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let i;if(e instanceof HTMLCanvasElement)i=e;else{mo===void 0&&(mo=nl("canvas")),mo.width=e.width,mo.height=e.height;const n=mo.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),i=mo}return i.toDataURL(t)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=nl("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const n=i.getImageData(0,0,e.width,e.height),r=n.data;for(let o=0;o<r.length;o++)r[o]=Fr(r[o]/255)*255;return i.putImageData(n,0,0),t}else if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor(Fr(t[i]/255)*255):t[i]=Fr(t[i]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let xb=0;class rs{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:xb++}),this.uuid=Ni(),this.data=e,this.dataReady=!0,this.version=0}getSize(e){const t=this.data;return t instanceof HTMLVideoElement?e.set(t.videoWidth,t.videoHeight):t!==null?e.set(t.width,t.height,t.depth||0):e.set(0,0,0),e}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},n=this.data;if(n!==null){let r;if(Array.isArray(n)){r=[];for(let o=0,a=n.length;o<a;o++)n[o].isDataTexture?r.push(ku(n[o].image)):r.push(ku(n[o]))}else r=ku(n);i.url=r}return t||(e.images[this.uuid]=i),i}}function ku(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?Uv.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let bb=0;const Bu=new I;class fn extends Sr{constructor(e=fn.DEFAULT_IMAGE,t=fn.DEFAULT_MAPPING,i=bi,n=bi,r=Mn,o=nr,a=ci,l=rr,c=fn.DEFAULT_ANISOTROPY,h=Pr){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:bb++}),this.uuid=Ni(),this.name="",this.source=new rs(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=i,this.wrapT=n,this.magFilter=r,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new Me(0,0),this.repeat=new Me(1,1),this.center=new Me(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new At,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(e&&e.depth&&e.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(Bu).x}get height(){return this.source.getSize(Bu).y}get depth(){return this.source.getSize(Bu).z}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.isArrayTexture=e.isArrayTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}setValues(e){for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Texture.setValues(): parameter '${t}' has value of undefined.`);continue}const n=this[t];if(n===void 0){console.warn(`THREE.Texture.setValues(): property '${t}' does not exist.`);continue}n&&i&&n.isVector2&&i.isVector2||n&&i&&n.isVector3&&i.isVector3||n&&i&&n.isMatrix3&&i.isMatrix3?n.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Bh)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case tr:e.x=e.x-Math.floor(e.x);break;case bi:e.x=e.x<0?0:1;break;case Ja:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case tr:e.y=e.y-Math.floor(e.y);break;case bi:e.y=e.y<0?0:1;break;case Ja:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}fn.DEFAULT_IMAGE=null;fn.DEFAULT_MAPPING=Bh;fn.DEFAULT_ANISOTROPY=1;class It{constructor(e=0,t=0,i=0,n=1){It.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,n){return this.x=e,this.y=t,this.z=i,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,r=this.w,o=e.elements;return this.x=o[0]*t+o[4]*i+o[8]*n+o[12]*r,this.y=o[1]*t+o[5]*i+o[9]*n+o[13]*r,this.z=o[2]*t+o[6]*i+o[10]*n+o[14]*r,this.w=o[3]*t+o[7]*i+o[11]*n+o[15]*r,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,n,r;const l=e.elements,c=l[0],h=l[4],u=l[8],d=l[1],f=l[5],p=l[9],v=l[2],m=l[6],g=l[10];if(Math.abs(h-d)<.01&&Math.abs(u-v)<.01&&Math.abs(p-m)<.01){if(Math.abs(h+d)<.1&&Math.abs(u+v)<.1&&Math.abs(p+m)<.1&&Math.abs(c+f+g-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const y=(c+1)/2,_=(f+1)/2,E=(g+1)/2,w=(h+d)/4,M=(u+v)/4,T=(p+m)/4;return y>_&&y>E?y<.01?(i=0,n=.707106781,r=.707106781):(i=Math.sqrt(y),n=w/i,r=M/i):_>E?_<.01?(i=.707106781,n=0,r=.707106781):(n=Math.sqrt(_),i=w/n,r=T/n):E<.01?(i=.707106781,n=.707106781,r=0):(r=Math.sqrt(E),i=M/r,n=T/r),this.set(i,n,r,t),this}let x=Math.sqrt((m-p)*(m-p)+(u-v)*(u-v)+(d-h)*(d-h));return Math.abs(x)<.001&&(x=1),this.x=(m-p)/x,this.y=(u-v)/x,this.z=(d-h)/x,this.w=Math.acos((c+f+g-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Ct(this.x,e.x,t.x),this.y=Ct(this.y,e.y,t.y),this.z=Ct(this.z,e.z,t.z),this.w=Ct(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=Ct(this.x,e,t),this.y=Ct(this.y,e,t),this.z=Ct(this.z,e,t),this.w=Ct(this.w,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Ct(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Yf extends Sr{constructor(e=1,t=1,i={}){super(),i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Mn,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},i),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=i.depth,this.scissor=new It(0,0,e,t),this.scissorTest=!1,this.viewport=new It(0,0,e,t);const n={width:e,height:t,depth:i.depth},r=new fn(n);this.textures=[];const o=i.count;for(let a=0;a<o;a++)this.textures[a]=r.clone(),this.textures[a].isRenderTargetTexture=!0,this.textures[a].renderTarget=this;this._setTextureOptions(i),this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=i.depthTexture,this.samples=i.samples,this.multiview=i.multiview}_setTextureOptions(e={}){const t={minFilter:Mn,generateMipmaps:!1,flipY:!1,internalFormat:null};e.mapping!==void 0&&(t.mapping=e.mapping),e.wrapS!==void 0&&(t.wrapS=e.wrapS),e.wrapT!==void 0&&(t.wrapT=e.wrapT),e.wrapR!==void 0&&(t.wrapR=e.wrapR),e.magFilter!==void 0&&(t.magFilter=e.magFilter),e.minFilter!==void 0&&(t.minFilter=e.minFilter),e.format!==void 0&&(t.format=e.format),e.type!==void 0&&(t.type=e.type),e.anisotropy!==void 0&&(t.anisotropy=e.anisotropy),e.colorSpace!==void 0&&(t.colorSpace=e.colorSpace),e.flipY!==void 0&&(t.flipY=e.flipY),e.generateMipmaps!==void 0&&(t.generateMipmaps=e.generateMipmaps),e.internalFormat!==void 0&&(t.internalFormat=e.internalFormat);for(let i=0;i<this.textures.length;i++)this.textures[i].setValues(t)}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let n=0,r=this.textures.length;n<r;n++)this.textures[n].image.width=e,this.textures[n].image.height=t,this.textures[n].image.depth=i,this.textures[n].isArrayTexture=this.textures[n].image.depth>1;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,i=e.textures.length;t<i;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;const n=Object.assign({},e.textures[t].image);this.textures[t].source=new rs(n)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Xi extends Yf{constructor(e=1,t=1,i={}){super(e,t,i),this.isWebGLRenderTarget=!0}}class Yh extends fn{constructor(e=null,t=1,i=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=Yn,this.minFilter=Yn,this.wrapR=bi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class Sb extends Xi{constructor(e=1,t=1,i=1,n={}){super(e,t,n),this.isWebGLArrayRenderTarget=!0,this.depth=i,this.texture=new Yh(null,e,t,i),this._setTextureOptions(n),this.texture.isRenderTargetTexture=!0}}class qh extends fn{constructor(e=null,t=1,i=1,n=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=Yn,this.minFilter=Yn,this.wrapR=bi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Mb extends Xi{constructor(e=1,t=1,i=1,n={}){super(e,t,n),this.isWebGL3DRenderTarget=!0,this.depth=i,this.texture=new qh(null,e,t,i),this._setTextureOptions(n),this.texture.isRenderTargetTexture=!0}}class _n{constructor(e=new I(1/0,1/0,1/0),t=new I(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t+=3)this.expandByPoint(Ki.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,i=e.count;t<i;t++)this.expandByPoint(Ki.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=Ki.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0){const r=i.getAttribute("position");if(t===!0&&r!==void 0&&e.isInstancedMesh!==!0)for(let o=0,a=r.count;o<a;o++)e.isMesh===!0?e.getVertexPosition(o,Ki):Ki.fromBufferAttribute(r,o),Ki.applyMatrix4(e.matrixWorld),this.expandByPoint(Ki);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),Pl.copy(e.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),Pl.copy(i.boundingBox)),Pl.applyMatrix4(e.matrixWorld),this.union(Pl)}const n=e.children;for(let r=0,o=n.length;r<o;r++)this.expandByObject(n[r],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,Ki),Ki.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(ua),Il.subVectors(this.max,ua),go.subVectors(e.a,ua),vo.subVectors(e.b,ua),_o.subVectors(e.c,ua),Xr.subVectors(vo,go),jr.subVectors(_o,vo),gs.subVectors(go,_o);let t=[0,-Xr.z,Xr.y,0,-jr.z,jr.y,0,-gs.z,gs.y,Xr.z,0,-Xr.x,jr.z,0,-jr.x,gs.z,0,-gs.x,-Xr.y,Xr.x,0,-jr.y,jr.x,0,-gs.y,gs.x,0];return!zu(t,go,vo,_o,Il)||(t=[1,0,0,0,1,0,0,0,1],!zu(t,go,vo,_o,Il))?!1:(Dl.crossVectors(Xr,jr),t=[Dl.x,Dl.y,Dl.z],zu(t,go,vo,_o,Il))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Ki).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Ki).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(wr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),wr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),wr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),wr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),wr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),wr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),wr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),wr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(wr),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(e){return this.min.fromArray(e.min),this.max.fromArray(e.max),this}}const wr=[new I,new I,new I,new I,new I,new I,new I,new I],Ki=new I,Pl=new _n,go=new I,vo=new I,_o=new I,Xr=new I,jr=new I,gs=new I,ua=new I,Il=new I,Dl=new I,vs=new I;function zu(s,e,t,i,n){for(let r=0,o=s.length-3;r<=o;r+=3){vs.fromArray(s,r);const a=n.x*Math.abs(vs.x)+n.y*Math.abs(vs.y)+n.z*Math.abs(vs.z),l=e.dot(vs),c=t.dot(vs),h=i.dot(vs);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>a)return!1}return!0}const wb=new _n,da=new I,Vu=new I;class wn{constructor(e=new I,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):wb.setFromPoints(e).getCenter(i);let n=0;for(let r=0,o=e.length;r<o;r++)n=Math.max(n,i.distanceToSquared(e[r]));return this.radius=Math.sqrt(n),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;da.subVectors(e,this.center);const t=da.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),n=(i-this.radius)*.5;this.center.addScaledVector(da,n/i),this.radius+=n}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Vu.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(da.copy(e.center).add(Vu)),this.expandByPoint(da.copy(e.center).sub(Vu))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(e){return this.radius=e.radius,this.center.fromArray(e.center),this}}const Er=new I,Gu=new I,Ll=new I,Yr=new I,Hu=new I,Ul=new I,Wu=new I;class as{constructor(e=new I,t=new I(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Er)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Er.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Er.copy(this.origin).addScaledVector(this.direction,t),Er.distanceToSquared(e))}distanceSqToSegment(e,t,i,n){Gu.copy(e).add(t).multiplyScalar(.5),Ll.copy(t).sub(e).normalize(),Yr.copy(this.origin).sub(Gu);const r=e.distanceTo(t)*.5,o=-this.direction.dot(Ll),a=Yr.dot(this.direction),l=-Yr.dot(Ll),c=Yr.lengthSq(),h=Math.abs(1-o*o);let u,d,f,p;if(h>0)if(u=o*l-a,d=o*a-l,p=r*h,u>=0)if(d>=-p)if(d<=p){const v=1/h;u*=v,d*=v,f=u*(u+o*d+2*a)+d*(o*u+d+2*l)+c}else d=r,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*l)+c;else d=-r,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*l)+c;else d<=-p?(u=Math.max(0,-(-o*r+a)),d=u>0?-r:Math.min(Math.max(-r,-l),r),f=-u*u+d*(d+2*l)+c):d<=p?(u=0,d=Math.min(Math.max(-r,-l),r),f=d*(d+2*l)+c):(u=Math.max(0,-(o*r+a)),d=u>0?r:Math.min(Math.max(-r,-l),r),f=-u*u+d*(d+2*l)+c);else d=o>0?-r:r,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*l)+c;return i&&i.copy(this.origin).addScaledVector(this.direction,u),n&&n.copy(Gu).addScaledVector(Ll,d),f}intersectSphere(e,t){Er.subVectors(e.center,this.origin);const i=Er.dot(this.direction),n=Er.dot(Er)-i*i,r=e.radius*e.radius;if(n>r)return null;const o=Math.sqrt(r-n),a=i-o,l=i+o;return l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return e.radius<0?!1:this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,n,r,o,a,l;const c=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,d=this.origin;return c>=0?(i=(e.min.x-d.x)*c,n=(e.max.x-d.x)*c):(i=(e.max.x-d.x)*c,n=(e.min.x-d.x)*c),h>=0?(r=(e.min.y-d.y)*h,o=(e.max.y-d.y)*h):(r=(e.max.y-d.y)*h,o=(e.min.y-d.y)*h),i>o||r>n||((r>i||isNaN(i))&&(i=r),(o<n||isNaN(n))&&(n=o),u>=0?(a=(e.min.z-d.z)*u,l=(e.max.z-d.z)*u):(a=(e.max.z-d.z)*u,l=(e.min.z-d.z)*u),i>l||a>n)||((a>i||i!==i)&&(i=a),(l<n||n!==n)&&(n=l),n<0)?null:this.at(i>=0?i:n,t)}intersectsBox(e){return this.intersectBox(e,Er)!==null}intersectTriangle(e,t,i,n,r){Hu.subVectors(t,e),Ul.subVectors(i,e),Wu.crossVectors(Hu,Ul);let o=this.direction.dot(Wu),a;if(o>0){if(n)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Yr.subVectors(this.origin,e);const l=a*this.direction.dot(Ul.crossVectors(Yr,Ul));if(l<0)return null;const c=a*this.direction.dot(Hu.cross(Yr));if(c<0||l+c>o)return null;const h=-a*Yr.dot(Wu);return h<0?null:this.at(h/o,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class ct{constructor(e,t,i,n,r,o,a,l,c,h,u,d,f,p,v,m){ct.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,i,n,r,o,a,l,c,h,u,d,f,p,v,m)}set(e,t,i,n,r,o,a,l,c,h,u,d,f,p,v,m){const g=this.elements;return g[0]=e,g[4]=t,g[8]=i,g[12]=n,g[1]=r,g[5]=o,g[9]=a,g[13]=l,g[2]=c,g[6]=h,g[10]=u,g[14]=d,g[3]=f,g[7]=p,g[11]=v,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ct().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,n=1/yo.setFromMatrixColumn(e,0).length(),r=1/yo.setFromMatrixColumn(e,1).length(),o=1/yo.setFromMatrixColumn(e,2).length();return t[0]=i[0]*n,t[1]=i[1]*n,t[2]=i[2]*n,t[3]=0,t[4]=i[4]*r,t[5]=i[5]*r,t[6]=i[6]*r,t[7]=0,t[8]=i[8]*o,t[9]=i[9]*o,t[10]=i[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,n=e.y,r=e.z,o=Math.cos(i),a=Math.sin(i),l=Math.cos(n),c=Math.sin(n),h=Math.cos(r),u=Math.sin(r);if(e.order==="XYZ"){const d=o*h,f=o*u,p=a*h,v=a*u;t[0]=l*h,t[4]=-l*u,t[8]=c,t[1]=f+p*c,t[5]=d-v*c,t[9]=-a*l,t[2]=v-d*c,t[6]=p+f*c,t[10]=o*l}else if(e.order==="YXZ"){const d=l*h,f=l*u,p=c*h,v=c*u;t[0]=d+v*a,t[4]=p*a-f,t[8]=o*c,t[1]=o*u,t[5]=o*h,t[9]=-a,t[2]=f*a-p,t[6]=v+d*a,t[10]=o*l}else if(e.order==="ZXY"){const d=l*h,f=l*u,p=c*h,v=c*u;t[0]=d-v*a,t[4]=-o*u,t[8]=p+f*a,t[1]=f+p*a,t[5]=o*h,t[9]=v-d*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const d=o*h,f=o*u,p=a*h,v=a*u;t[0]=l*h,t[4]=p*c-f,t[8]=d*c+v,t[1]=l*u,t[5]=v*c+d,t[9]=f*c-p,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const d=o*l,f=o*c,p=a*l,v=a*c;t[0]=l*h,t[4]=v-d*u,t[8]=p*u+f,t[1]=u,t[5]=o*h,t[9]=-a*h,t[2]=-c*h,t[6]=f*u+p,t[10]=d-v*u}else if(e.order==="XZY"){const d=o*l,f=o*c,p=a*l,v=a*c;t[0]=l*h,t[4]=-u,t[8]=c*h,t[1]=d*u+v,t[5]=o*h,t[9]=f*u-p,t[2]=p*u-f,t[6]=a*h,t[10]=v*u+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Eb,e,Tb)}lookAt(e,t,i){const n=this.elements;return Pi.subVectors(e,t),Pi.lengthSq()===0&&(Pi.z=1),Pi.normalize(),qr.crossVectors(i,Pi),qr.lengthSq()===0&&(Math.abs(i.z)===1?Pi.x+=1e-4:Pi.z+=1e-4,Pi.normalize(),qr.crossVectors(i,Pi)),qr.normalize(),Nl.crossVectors(Pi,qr),n[0]=qr.x,n[4]=Nl.x,n[8]=Pi.x,n[1]=qr.y,n[5]=Nl.y,n[9]=Pi.y,n[2]=qr.z,n[6]=Nl.z,n[10]=Pi.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,r=this.elements,o=i[0],a=i[4],l=i[8],c=i[12],h=i[1],u=i[5],d=i[9],f=i[13],p=i[2],v=i[6],m=i[10],g=i[14],x=i[3],y=i[7],_=i[11],E=i[15],w=n[0],M=n[4],T=n[8],S=n[12],b=n[1],P=n[5],D=n[9],G=n[13],H=n[2],q=n[6],F=n[10],te=n[14],Y=n[3],j=n[7],$=n[11],L=n[15];return r[0]=o*w+a*b+l*H+c*Y,r[4]=o*M+a*P+l*q+c*j,r[8]=o*T+a*D+l*F+c*$,r[12]=o*S+a*G+l*te+c*L,r[1]=h*w+u*b+d*H+f*Y,r[5]=h*M+u*P+d*q+f*j,r[9]=h*T+u*D+d*F+f*$,r[13]=h*S+u*G+d*te+f*L,r[2]=p*w+v*b+m*H+g*Y,r[6]=p*M+v*P+m*q+g*j,r[10]=p*T+v*D+m*F+g*$,r[14]=p*S+v*G+m*te+g*L,r[3]=x*w+y*b+_*H+E*Y,r[7]=x*M+y*P+_*q+E*j,r[11]=x*T+y*D+_*F+E*$,r[15]=x*S+y*G+_*te+E*L,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],n=e[8],r=e[12],o=e[1],a=e[5],l=e[9],c=e[13],h=e[2],u=e[6],d=e[10],f=e[14],p=e[3],v=e[7],m=e[11],g=e[15];return p*(+r*l*u-n*c*u-r*a*d+i*c*d+n*a*f-i*l*f)+v*(+t*l*f-t*c*d+r*o*d-n*o*f+n*c*h-r*l*h)+m*(+t*c*u-t*a*f-r*o*u+i*o*f+r*a*h-i*c*h)+g*(-n*a*h-t*l*u+t*a*d+n*o*u-i*o*d+i*l*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],o=e[4],a=e[5],l=e[6],c=e[7],h=e[8],u=e[9],d=e[10],f=e[11],p=e[12],v=e[13],m=e[14],g=e[15],x=u*m*c-v*d*c+v*l*f-a*m*f-u*l*g+a*d*g,y=p*d*c-h*m*c-p*l*f+o*m*f+h*l*g-o*d*g,_=h*v*c-p*u*c+p*a*f-o*v*f-h*a*g+o*u*g,E=p*u*l-h*v*l-p*a*d+o*v*d+h*a*m-o*u*m,w=t*x+i*y+n*_+r*E;if(w===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/w;return e[0]=x*M,e[1]=(v*d*r-u*m*r-v*n*f+i*m*f+u*n*g-i*d*g)*M,e[2]=(a*m*r-v*l*r+v*n*c-i*m*c-a*n*g+i*l*g)*M,e[3]=(u*l*r-a*d*r-u*n*c+i*d*c+a*n*f-i*l*f)*M,e[4]=y*M,e[5]=(h*m*r-p*d*r+p*n*f-t*m*f-h*n*g+t*d*g)*M,e[6]=(p*l*r-o*m*r-p*n*c+t*m*c+o*n*g-t*l*g)*M,e[7]=(o*d*r-h*l*r+h*n*c-t*d*c-o*n*f+t*l*f)*M,e[8]=_*M,e[9]=(p*u*r-h*v*r-p*i*f+t*v*f+h*i*g-t*u*g)*M,e[10]=(o*v*r-p*a*r+p*i*c-t*v*c-o*i*g+t*a*g)*M,e[11]=(h*a*r-o*u*r-h*i*c+t*u*c+o*i*f-t*a*f)*M,e[12]=E*M,e[13]=(h*v*n-p*u*n+p*i*d-t*v*d-h*i*m+t*u*m)*M,e[14]=(p*a*n-o*v*n-p*i*l+t*v*l+o*i*m-t*a*m)*M,e[15]=(o*u*n-h*a*n+h*i*l-t*u*l-o*i*d+t*a*d)*M,this}scale(e){const t=this.elements,i=e.x,n=e.y,r=e.z;return t[0]*=i,t[4]*=n,t[8]*=r,t[1]*=i,t[5]*=n,t[9]*=r,t[2]*=i,t[6]*=n,t[10]*=r,t[3]*=i,t[7]*=n,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,n))}makeTranslation(e,t,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),n=Math.sin(t),r=1-i,o=e.x,a=e.y,l=e.z,c=r*o,h=r*a;return this.set(c*o+i,c*a-n*l,c*l+n*a,0,c*a+n*l,h*a+i,h*l-n*o,0,c*l-n*a,h*l+n*o,r*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,n,r,o){return this.set(1,i,r,0,e,1,o,0,t,n,1,0,0,0,0,1),this}compose(e,t,i){const n=this.elements,r=t._x,o=t._y,a=t._z,l=t._w,c=r+r,h=o+o,u=a+a,d=r*c,f=r*h,p=r*u,v=o*h,m=o*u,g=a*u,x=l*c,y=l*h,_=l*u,E=i.x,w=i.y,M=i.z;return n[0]=(1-(v+g))*E,n[1]=(f+_)*E,n[2]=(p-y)*E,n[3]=0,n[4]=(f-_)*w,n[5]=(1-(d+g))*w,n[6]=(m+x)*w,n[7]=0,n[8]=(p+y)*M,n[9]=(m-x)*M,n[10]=(1-(d+v))*M,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,i){const n=this.elements;let r=yo.set(n[0],n[1],n[2]).length();const o=yo.set(n[4],n[5],n[6]).length(),a=yo.set(n[8],n[9],n[10]).length();this.determinant()<0&&(r=-r),e.x=n[12],e.y=n[13],e.z=n[14],Qi.copy(this);const c=1/r,h=1/o,u=1/a;return Qi.elements[0]*=c,Qi.elements[1]*=c,Qi.elements[2]*=c,Qi.elements[4]*=h,Qi.elements[5]*=h,Qi.elements[6]*=h,Qi.elements[8]*=u,Qi.elements[9]*=u,Qi.elements[10]*=u,t.setFromRotationMatrix(Qi),i.x=r,i.y=o,i.z=a,this}makePerspective(e,t,i,n,r,o,a=Hi){const l=this.elements,c=2*r/(t-e),h=2*r/(i-n),u=(t+e)/(t-e),d=(i+n)/(i-n);let f,p;if(a===Hi)f=-(o+r)/(o-r),p=-2*o*r/(o-r);else if(a===tl)f=-o/(o-r),p=-o*r/(o-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return l[0]=c,l[4]=0,l[8]=u,l[12]=0,l[1]=0,l[5]=h,l[9]=d,l[13]=0,l[2]=0,l[6]=0,l[10]=f,l[14]=p,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,i,n,r,o,a=Hi){const l=this.elements,c=1/(t-e),h=1/(i-n),u=1/(o-r),d=(t+e)*c,f=(i+n)*h;let p,v;if(a===Hi)p=(o+r)*u,v=-2*u;else if(a===tl)p=r*u,v=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-d,l[1]=0,l[5]=2*h,l[9]=0,l[13]=-f,l[2]=0,l[6]=0,l[10]=v,l[14]=-p,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<16;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}const yo=new I,Qi=new ct,Eb=new I(0,0,0),Tb=new I(1,1,1),qr=new I,Nl=new I,Pi=new I,om=new ct,am=new Ht;class Mi{constructor(e=0,t=0,i=0,n=Mi.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,n=this._order){return this._x=e,this._y=t,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const n=e.elements,r=n[0],o=n[4],a=n[8],l=n[1],c=n[5],h=n[9],u=n[2],d=n[6],f=n[10];switch(t){case"XYZ":this._y=Math.asin(Ct(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,f),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-Ct(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(Ct(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,f),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-Ct(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(Ct(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-Ct(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-h,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return om.makeRotationFromQuaternion(e),this.setFromRotationMatrix(om,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return am.setFromEuler(this),this.setFromQuaternion(am,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Mi.DEFAULT_ORDER="XYZ";class Zh{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let Ab=0;const lm=new I,xo=new Ht,Tr=new ct,Ol=new I,fa=new I,Cb=new I,Rb=new Ht,cm=new I(1,0,0),hm=new I(0,1,0),um=new I(0,0,1),dm={type:"added"},Pb={type:"removed"},bo={type:"childadded",child:null},Xu={type:"childremoved",child:null};class Lt extends Sr{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Ab++}),this.uuid=Ni(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Lt.DEFAULT_UP.clone();const e=new I,t=new Mi,i=new Ht,n=new I(1,1,1);function r(){i.setFromEuler(t,!1)}function o(){t.setFromQuaternion(i,void 0,!1)}t._onChange(r),i._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new ct},normalMatrix:{value:new At}}),this.matrix=new ct,this.matrixWorld=new ct,this.matrixAutoUpdate=Lt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Lt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Zh,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return xo.setFromAxisAngle(e,t),this.quaternion.multiply(xo),this}rotateOnWorldAxis(e,t){return xo.setFromAxisAngle(e,t),this.quaternion.premultiply(xo),this}rotateX(e){return this.rotateOnAxis(cm,e)}rotateY(e){return this.rotateOnAxis(hm,e)}rotateZ(e){return this.rotateOnAxis(um,e)}translateOnAxis(e,t){return lm.copy(e).applyQuaternion(this.quaternion),this.position.add(lm.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(cm,e)}translateY(e){return this.translateOnAxis(hm,e)}translateZ(e){return this.translateOnAxis(um,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Tr.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?Ol.copy(e):Ol.set(e,t,i);const n=this.parent;this.updateWorldMatrix(!0,!1),fa.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Tr.lookAt(fa,Ol,this.up):Tr.lookAt(Ol,fa,this.up),this.quaternion.setFromRotationMatrix(Tr),n&&(Tr.extractRotation(n.matrixWorld),xo.setFromRotationMatrix(Tr),this.quaternion.premultiply(xo.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(dm),bo.child=e,this.dispatchEvent(bo),bo.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Pb),Xu.child=e,this.dispatchEvent(Xu),Xu.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Tr.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Tr.multiply(e.parent.matrixWorld)),e.applyMatrix4(Tr),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(dm),bo.child=e,this.dispatchEvent(bo),bo.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,n=this.children.length;i<n;i++){const o=this.children[i].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t,i=[]){this[e]===t&&i.push(this);const n=this.children;for(let r=0,o=n.length;r<o;r++)n[r].getObjectsByProperty(e,t,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(fa,e,Cb),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(fa,Rb,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){const i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const n=this.children;for(let r=0,o=n.length;r<o;r++)n[r].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const n={};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.castShadow===!0&&(n.castShadow=!0),this.receiveShadow===!0&&(n.receiveShadow=!0),this.visible===!1&&(n.visible=!1),this.frustumCulled===!1&&(n.frustumCulled=!1),this.renderOrder!==0&&(n.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),n.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(n.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(n.type="BatchedMesh",n.perObjectFrustumCulled=this.perObjectFrustumCulled,n.sortObjects=this.sortObjects,n.drawRanges=this._drawRanges,n.reservedRanges=this._reservedRanges,n.geometryInfo=this._geometryInfo.map(a=>({...a,boundingBox:a.boundingBox?a.boundingBox.toJSON():void 0,boundingSphere:a.boundingSphere?a.boundingSphere.toJSON():void 0})),n.instanceInfo=this._instanceInfo.map(a=>({...a})),n.availableInstanceIds=this._availableInstanceIds.slice(),n.availableGeometryIds=this._availableGeometryIds.slice(),n.nextIndexStart=this._nextIndexStart,n.nextVertexStart=this._nextVertexStart,n.geometryCount=this._geometryCount,n.maxInstanceCount=this._maxInstanceCount,n.maxVertexCount=this._maxVertexCount,n.maxIndexCount=this._maxIndexCount,n.geometryInitialized=this._geometryInitialized,n.matricesTexture=this._matricesTexture.toJSON(e),n.indirectTexture=this._indirectTexture.toJSON(e),this._colorsTexture!==null&&(n.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(n.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(n.boundingBox=this.boundingBox.toJSON()));function r(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(n.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=r(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,h=l.length;c<h;c++){const u=l[c];r(e.shapes,u)}else r(e.shapes,l)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(r(e.materials,this.material[l]));n.material=a}else n.material=r(e.materials,this.material);if(this.children.length>0){n.children=[];for(let a=0;a<this.children.length;a++)n.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){n.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];n.animations.push(r(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),h=o(e.images),u=o(e.shapes),d=o(e.skeletons),f=o(e.animations),p=o(e.nodes);a.length>0&&(i.geometries=a),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),h.length>0&&(i.images=h),u.length>0&&(i.shapes=u),d.length>0&&(i.skeletons=d),f.length>0&&(i.animations=f),p.length>0&&(i.nodes=p)}return i.object=n,i;function o(a){const l=[];for(const c in a){const h=a[c];delete h.metadata,l.push(h)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){const n=e.children[i];this.add(n.clone())}return this}}Lt.DEFAULT_UP=new I(0,1,0);Lt.DEFAULT_MATRIX_AUTO_UPDATE=!0;Lt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const $i=new I,Ar=new I,ju=new I,Cr=new I,So=new I,Mo=new I,fm=new I,Yu=new I,qu=new I,Zu=new I,Ju=new It,Ku=new It,Qu=new It;class yi{constructor(e=new I,t=new I,i=new I){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,n){n.subVectors(i,t),$i.subVectors(e,t),n.cross($i);const r=n.lengthSq();return r>0?n.multiplyScalar(1/Math.sqrt(r)):n.set(0,0,0)}static getBarycoord(e,t,i,n,r){$i.subVectors(n,t),Ar.subVectors(i,t),ju.subVectors(e,t);const o=$i.dot($i),a=$i.dot(Ar),l=$i.dot(ju),c=Ar.dot(Ar),h=Ar.dot(ju),u=o*c-a*a;if(u===0)return r.set(0,0,0),null;const d=1/u,f=(c*l-a*h)*d,p=(o*h-a*l)*d;return r.set(1-f-p,p,f)}static containsPoint(e,t,i,n){return this.getBarycoord(e,t,i,n,Cr)===null?!1:Cr.x>=0&&Cr.y>=0&&Cr.x+Cr.y<=1}static getInterpolation(e,t,i,n,r,o,a,l){return this.getBarycoord(e,t,i,n,Cr)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(r,Cr.x),l.addScaledVector(o,Cr.y),l.addScaledVector(a,Cr.z),l)}static getInterpolatedAttribute(e,t,i,n,r,o){return Ju.setScalar(0),Ku.setScalar(0),Qu.setScalar(0),Ju.fromBufferAttribute(e,t),Ku.fromBufferAttribute(e,i),Qu.fromBufferAttribute(e,n),o.setScalar(0),o.addScaledVector(Ju,r.x),o.addScaledVector(Ku,r.y),o.addScaledVector(Qu,r.z),o}static isFrontFacing(e,t,i,n){return $i.subVectors(i,t),Ar.subVectors(e,t),$i.cross(Ar).dot(n)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,n){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[n]),this}setFromAttributeAndIndices(e,t,i,n){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return $i.subVectors(this.c,this.b),Ar.subVectors(this.a,this.b),$i.cross(Ar).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return yi.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return yi.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,i,n,r){return yi.getInterpolation(e,this.a,this.b,this.c,t,i,n,r)}containsPoint(e){return yi.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return yi.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,n=this.b,r=this.c;let o,a;So.subVectors(n,i),Mo.subVectors(r,i),Yu.subVectors(e,i);const l=So.dot(Yu),c=Mo.dot(Yu);if(l<=0&&c<=0)return t.copy(i);qu.subVectors(e,n);const h=So.dot(qu),u=Mo.dot(qu);if(h>=0&&u<=h)return t.copy(n);const d=l*u-h*c;if(d<=0&&l>=0&&h<=0)return o=l/(l-h),t.copy(i).addScaledVector(So,o);Zu.subVectors(e,r);const f=So.dot(Zu),p=Mo.dot(Zu);if(p>=0&&f<=p)return t.copy(r);const v=f*c-l*p;if(v<=0&&c>=0&&p<=0)return a=c/(c-p),t.copy(i).addScaledVector(Mo,a);const m=h*p-f*u;if(m<=0&&u-h>=0&&f-p>=0)return fm.subVectors(r,n),a=(u-h)/(u-h+(f-p)),t.copy(n).addScaledVector(fm,a);const g=1/(m+v+d);return o=v*g,a=d*g,t.copy(i).addScaledVector(So,o).addScaledVector(Mo,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const Nv={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Zr={h:0,s:0,l:0},Fl={h:0,s:0,l:0};function $u(s,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?s+(e-s)*6*t:t<1/2?e:t<2/3?s+(e-s)*6*(2/3-t):s}class Ge{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,i)}set(e,t,i){if(t===void 0&&i===void 0){const n=e;n&&n.isColor?this.copy(n):typeof n=="number"?this.setHex(n):typeof n=="string"&&this.setStyle(n)}else this.setRGB(e,t,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=on){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Nt.colorSpaceToWorking(this,t),this}setRGB(e,t,i,n=Nt.workingColorSpace){return this.r=e,this.g=t,this.b=i,Nt.colorSpaceToWorking(this,n),this}setHSL(e,t,i,n=Nt.workingColorSpace){if(e=jf(e,1),t=Ct(t,0,1),i=Ct(i,0,1),t===0)this.r=this.g=this.b=i;else{const r=i<=.5?i*(1+t):i+t-i*t,o=2*i-r;this.r=$u(o,r,e+1/3),this.g=$u(o,r,e),this.b=$u(o,r,e-1/3)}return Nt.colorSpaceToWorking(this,n),this}setStyle(e,t=on){function i(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const o=n[1],a=n[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=n[1],o=r.length;if(o===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=on){const i=Nv[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Fr(e.r),this.g=Fr(e.g),this.b=Fr(e.b),this}copyLinearToSRGB(e){return this.r=Ho(e.r),this.g=Ho(e.g),this.b=Ho(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=on){return Nt.workingToColorSpace(Qn.copy(this),e),Math.round(Ct(Qn.r*255,0,255))*65536+Math.round(Ct(Qn.g*255,0,255))*256+Math.round(Ct(Qn.b*255,0,255))}getHexString(e=on){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Nt.workingColorSpace){Nt.workingToColorSpace(Qn.copy(this),t);const i=Qn.r,n=Qn.g,r=Qn.b,o=Math.max(i,n,r),a=Math.min(i,n,r);let l,c;const h=(a+o)/2;if(a===o)l=0,c=0;else{const u=o-a;switch(c=h<=.5?u/(o+a):u/(2-o-a),o){case i:l=(n-r)/u+(n<r?6:0);break;case n:l=(r-i)/u+2;break;case r:l=(i-n)/u+4;break}l/=6}return e.h=l,e.s=c,e.l=h,e}getRGB(e,t=Nt.workingColorSpace){return Nt.workingToColorSpace(Qn.copy(this),t),e.r=Qn.r,e.g=Qn.g,e.b=Qn.b,e}getStyle(e=on){Nt.workingToColorSpace(Qn.copy(this),e);const t=Qn.r,i=Qn.g,n=Qn.b;return e!==on?`color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${n.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(i*255)},${Math.round(n*255)})`}offsetHSL(e,t,i){return this.getHSL(Zr),this.setHSL(Zr.h+e,Zr.s+t,Zr.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(Zr),e.getHSL(Fl);const i=za(Zr.h,Fl.h,t),n=za(Zr.s,Fl.s,t),r=za(Zr.l,Fl.l,t);return this.setHSL(i,n,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,i=this.g,n=this.b,r=e.elements;return this.r=r[0]*t+r[3]*i+r[6]*n,this.g=r[1]*t+r[4]*i+r[7]*n,this.b=r[2]*t+r[5]*i+r[8]*n,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Qn=new Ge;Ge.NAMES=Nv;let Ib=0;class kn extends Sr{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Ib++}),this.uuid=Ni(),this.name="",this.type="Material",this.blending=Ys,this.side=br,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=jc,this.blendDst=Yc,this.blendEquation=ns,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Ge(0,0,0),this.blendAlpha=0,this.depthFunc=$s,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=sf,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ns,this.stencilZFail=Ns,this.stencilZPass=Ns,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const n=this[t];if(n===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const i={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==Ys&&(i.blending=this.blending),this.side!==br&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==jc&&(i.blendSrc=this.blendSrc),this.blendDst!==Yc&&(i.blendDst=this.blendDst),this.blendEquation!==ns&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==$s&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==sf&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Ns&&(i.stencilFail=this.stencilFail),this.stencilZFail!==Ns&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==Ns&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function n(r){const o=[];for(const a in r){const l=r[a];delete l.metadata,o.push(l)}return o}if(t){const r=n(e.textures),o=n(e.images);r.length>0&&(i.textures=r),o.length>0&&(i.images=o)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(t!==null){const n=t.length;i=new Array(n);for(let r=0;r!==n;++r)i[r]=t[r].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Bn extends kn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ge(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Mi,this.combine=vl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Ir=Db();function Db(){const s=new ArrayBuffer(4),e=new Float32Array(s),t=new Uint32Array(s),i=new Uint32Array(512),n=new Uint32Array(512);for(let l=0;l<256;++l){const c=l-127;c<-27?(i[l]=0,i[l|256]=32768,n[l]=24,n[l|256]=24):c<-14?(i[l]=1024>>-c-14,i[l|256]=1024>>-c-14|32768,n[l]=-c-1,n[l|256]=-c-1):c<=15?(i[l]=c+15<<10,i[l|256]=c+15<<10|32768,n[l]=13,n[l|256]=13):c<128?(i[l]=31744,i[l|256]=64512,n[l]=24,n[l|256]=24):(i[l]=31744,i[l|256]=64512,n[l]=13,n[l|256]=13)}const r=new Uint32Array(2048),o=new Uint32Array(64),a=new Uint32Array(64);for(let l=1;l<1024;++l){let c=l<<13,h=0;for(;(c&8388608)===0;)c<<=1,h-=8388608;c&=-8388609,h+=947912704,r[l]=c|h}for(let l=1024;l<2048;++l)r[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)o[l]=l<<23;o[31]=1199570944,o[32]=2147483648;for(let l=33;l<63;++l)o[l]=2147483648+(l-32<<23);o[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(a[l]=1024);return{floatView:e,uint32View:t,baseTable:i,shiftTable:n,mantissaTable:r,exponentTable:o,offsetTable:a}}function mi(s){Math.abs(s)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),s=Ct(s,-65504,65504),Ir.floatView[0]=s;const e=Ir.uint32View[0],t=e>>23&511;return Ir.baseTable[t]+((e&8388607)>>Ir.shiftTable[t])}function Aa(s){const e=s>>10;return Ir.uint32View[0]=Ir.mantissaTable[Ir.offsetTable[e]+(s&1023)]+Ir.exponentTable[e],Ir.floatView[0]}class Lb{static toHalfFloat(e){return mi(e)}static fromHalfFloat(e){return Aa(e)}}const Cn=new I,kl=new Me;let Ub=0;class Rt{constructor(e,t,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:Ub++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i,this.usage=el,this.updateRanges=[],this.gpuType=Si,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let n=0,r=this.itemSize;n<r;n++)this.array[e+n]=t.array[i+n];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)kl.fromBufferAttribute(this,t),kl.applyMatrix3(e),this.setXY(t,kl.x,kl.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)Cn.fromBufferAttribute(this,t),Cn.applyMatrix3(e),this.setXYZ(t,Cn.x,Cn.y,Cn.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)Cn.fromBufferAttribute(this,t),Cn.applyMatrix4(e),this.setXYZ(t,Cn.x,Cn.y,Cn.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)Cn.fromBufferAttribute(this,t),Cn.applyNormalMatrix(e),this.setXYZ(t,Cn.x,Cn.y,Cn.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)Cn.fromBufferAttribute(this,t),Cn.transformDirection(e),this.setXYZ(t,Cn.x,Cn.y,Cn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let i=this.array[e*this.itemSize+t];return this.normalized&&(i=ai(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=Pt(i,this.array)),this.array[e*this.itemSize+t]=i,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=ai(t,this.array)),t}setX(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=ai(t,this.array)),t}setY(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=ai(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=ai(t,this.array)),t}setW(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=Pt(t,this.array),i=Pt(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=Pt(t,this.array),i=Pt(i,this.array),n=Pt(n,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this}setXYZW(e,t,i,n,r){return e*=this.itemSize,this.normalized&&(t=Pt(t,this.array),i=Pt(i,this.array),n=Pt(n,this.array),r=Pt(r,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==el&&(e.usage=this.usage),e}}class Nb extends Rt{constructor(e,t,i){super(new Int8Array(e),t,i)}}class Ob extends Rt{constructor(e,t,i){super(new Uint8Array(e),t,i)}}class Fb extends Rt{constructor(e,t,i){super(new Uint8ClampedArray(e),t,i)}}class kb extends Rt{constructor(e,t,i){super(new Int16Array(e),t,i)}}class qf extends Rt{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class Bb extends Rt{constructor(e,t,i){super(new Int32Array(e),t,i)}}class Zf extends Rt{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class zb extends Rt{constructor(e,t,i){super(new Uint16Array(e),t,i),this.isFloat16BufferAttribute=!0}getX(e){let t=Aa(this.array[e*this.itemSize]);return this.normalized&&(t=ai(t,this.array)),t}setX(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize]=mi(t),this}getY(e){let t=Aa(this.array[e*this.itemSize+1]);return this.normalized&&(t=ai(t,this.array)),t}setY(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize+1]=mi(t),this}getZ(e){let t=Aa(this.array[e*this.itemSize+2]);return this.normalized&&(t=ai(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize+2]=mi(t),this}getW(e){let t=Aa(this.array[e*this.itemSize+3]);return this.normalized&&(t=ai(t,this.array)),t}setW(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize+3]=mi(t),this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=Pt(t,this.array),i=Pt(i,this.array)),this.array[e+0]=mi(t),this.array[e+1]=mi(i),this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=Pt(t,this.array),i=Pt(i,this.array),n=Pt(n,this.array)),this.array[e+0]=mi(t),this.array[e+1]=mi(i),this.array[e+2]=mi(n),this}setXYZW(e,t,i,n,r){return e*=this.itemSize,this.normalized&&(t=Pt(t,this.array),i=Pt(i,this.array),n=Pt(n,this.array),r=Pt(r,this.array)),this.array[e+0]=mi(t),this.array[e+1]=mi(i),this.array[e+2]=mi(n),this.array[e+3]=mi(r),this}}class qe extends Rt{constructor(e,t,i){super(new Float32Array(e),t,i)}}let Vb=0;const zi=new ct,ed=new Lt,wo=new I,Ii=new _n,pa=new _n,Fn=new I;class xt extends Sr{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Vb++}),this.uuid=Ni(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Dv(e)?Zf:qf)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const r=new At().getNormalMatrix(e);i.applyNormalMatrix(r),i.needsUpdate=!0}const n=this.attributes.tangent;return n!==void 0&&(n.transformDirection(e),n.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return zi.makeRotationFromQuaternion(e),this.applyMatrix4(zi),this}rotateX(e){return zi.makeRotationX(e),this.applyMatrix4(zi),this}rotateY(e){return zi.makeRotationY(e),this.applyMatrix4(zi),this}rotateZ(e){return zi.makeRotationZ(e),this.applyMatrix4(zi),this}translate(e,t,i){return zi.makeTranslation(e,t,i),this.applyMatrix4(zi),this}scale(e,t,i){return zi.makeScale(e,t,i),this.applyMatrix4(zi),this}lookAt(e){return ed.lookAt(e),ed.updateMatrix(),this.applyMatrix4(ed.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(wo).negate(),this.translate(wo.x,wo.y,wo.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const i=[];for(let n=0,r=e.length;n<r;n++){const o=e[n];i.push(o.x,o.y,o.z||0)}this.setAttribute("position",new qe(i,3))}else{const i=Math.min(e.length,t.count);for(let n=0;n<i;n++){const r=e[n];t.setXYZ(n,r.x,r.y,r.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new _n);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new I(-1/0,-1/0,-1/0),new I(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,n=t.length;i<n;i++){const r=t[i];Ii.setFromBufferAttribute(r),this.morphTargetsRelative?(Fn.addVectors(this.boundingBox.min,Ii.min),this.boundingBox.expandByPoint(Fn),Fn.addVectors(this.boundingBox.max,Ii.max),this.boundingBox.expandByPoint(Fn)):(this.boundingBox.expandByPoint(Ii.min),this.boundingBox.expandByPoint(Ii.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new wn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new I,1/0);return}if(e){const i=this.boundingSphere.center;if(Ii.setFromBufferAttribute(e),t)for(let r=0,o=t.length;r<o;r++){const a=t[r];pa.setFromBufferAttribute(a),this.morphTargetsRelative?(Fn.addVectors(Ii.min,pa.min),Ii.expandByPoint(Fn),Fn.addVectors(Ii.max,pa.max),Ii.expandByPoint(Fn)):(Ii.expandByPoint(pa.min),Ii.expandByPoint(pa.max))}Ii.getCenter(i);let n=0;for(let r=0,o=e.count;r<o;r++)Fn.fromBufferAttribute(e,r),n=Math.max(n,i.distanceToSquared(Fn));if(t)for(let r=0,o=t.length;r<o;r++){const a=t[r],l=this.morphTargetsRelative;for(let c=0,h=a.count;c<h;c++)Fn.fromBufferAttribute(a,c),l&&(wo.fromBufferAttribute(e,c),Fn.add(wo)),n=Math.max(n,i.distanceToSquared(Fn))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=t.position,n=t.normal,r=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Rt(new Float32Array(4*i.count),4));const o=this.getAttribute("tangent"),a=[],l=[];for(let T=0;T<i.count;T++)a[T]=new I,l[T]=new I;const c=new I,h=new I,u=new I,d=new Me,f=new Me,p=new Me,v=new I,m=new I;function g(T,S,b){c.fromBufferAttribute(i,T),h.fromBufferAttribute(i,S),u.fromBufferAttribute(i,b),d.fromBufferAttribute(r,T),f.fromBufferAttribute(r,S),p.fromBufferAttribute(r,b),h.sub(c),u.sub(c),f.sub(d),p.sub(d);const P=1/(f.x*p.y-p.x*f.y);isFinite(P)&&(v.copy(h).multiplyScalar(p.y).addScaledVector(u,-f.y).multiplyScalar(P),m.copy(u).multiplyScalar(f.x).addScaledVector(h,-p.x).multiplyScalar(P),a[T].add(v),a[S].add(v),a[b].add(v),l[T].add(m),l[S].add(m),l[b].add(m))}let x=this.groups;x.length===0&&(x=[{start:0,count:e.count}]);for(let T=0,S=x.length;T<S;++T){const b=x[T],P=b.start,D=b.count;for(let G=P,H=P+D;G<H;G+=3)g(e.getX(G+0),e.getX(G+1),e.getX(G+2))}const y=new I,_=new I,E=new I,w=new I;function M(T){E.fromBufferAttribute(n,T),w.copy(E);const S=a[T];y.copy(S),y.sub(E.multiplyScalar(E.dot(S))).normalize(),_.crossVectors(w,S);const P=_.dot(l[T])<0?-1:1;o.setXYZW(T,y.x,y.y,y.z,P)}for(let T=0,S=x.length;T<S;++T){const b=x[T],P=b.start,D=b.count;for(let G=P,H=P+D;G<H;G+=3)M(e.getX(G+0)),M(e.getX(G+1)),M(e.getX(G+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new Rt(new Float32Array(t.count*3),3),this.setAttribute("normal",i);else for(let d=0,f=i.count;d<f;d++)i.setXYZ(d,0,0,0);const n=new I,r=new I,o=new I,a=new I,l=new I,c=new I,h=new I,u=new I;if(e)for(let d=0,f=e.count;d<f;d+=3){const p=e.getX(d+0),v=e.getX(d+1),m=e.getX(d+2);n.fromBufferAttribute(t,p),r.fromBufferAttribute(t,v),o.fromBufferAttribute(t,m),h.subVectors(o,r),u.subVectors(n,r),h.cross(u),a.fromBufferAttribute(i,p),l.fromBufferAttribute(i,v),c.fromBufferAttribute(i,m),a.add(h),l.add(h),c.add(h),i.setXYZ(p,a.x,a.y,a.z),i.setXYZ(v,l.x,l.y,l.z),i.setXYZ(m,c.x,c.y,c.z)}else for(let d=0,f=t.count;d<f;d+=3)n.fromBufferAttribute(t,d+0),r.fromBufferAttribute(t,d+1),o.fromBufferAttribute(t,d+2),h.subVectors(o,r),u.subVectors(n,r),h.cross(u),i.setXYZ(d+0,h.x,h.y,h.z),i.setXYZ(d+1,h.x,h.y,h.z),i.setXYZ(d+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)Fn.fromBufferAttribute(e,t),Fn.normalize(),e.setXYZ(t,Fn.x,Fn.y,Fn.z)}toNonIndexed(){function e(a,l){const c=a.array,h=a.itemSize,u=a.normalized,d=new c.constructor(l.length*h);let f=0,p=0;for(let v=0,m=l.length;v<m;v++){a.isInterleavedBufferAttribute?f=l[v]*a.data.stride+a.offset:f=l[v]*h;for(let g=0;g<h;g++)d[p++]=c[f++]}return new Rt(d,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new xt,i=this.index.array,n=this.attributes;for(const a in n){const l=n[a],c=e(l,i);t.setAttribute(a,c)}const r=this.morphAttributes;for(const a in r){const l=[],c=r[a];for(let h=0,u=c.length;h<u;h++){const d=c[h],f=e(d,i);l.push(f)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const l in i){const c=i[l];e.data.attributes[l]=c.toJSON(e.data)}const n={};let r=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],h=[];for(let u=0,d=c.length;u<d;u++){const f=c[u];h.push(f.toJSON(e.data))}h.length>0&&(n[l]=h,r=!0)}r&&(e.data.morphAttributes=n,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere=a.toJSON()),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone());const n=e.attributes;for(const c in n){const h=n[c];this.setAttribute(c,h.clone(t))}const r=e.morphAttributes;for(const c in r){const h=[],u=r[c];for(let d=0,f=u.length;d<f;d++)h.push(u[d].clone(t));this.morphAttributes[c]=h}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,h=o.length;c<h;c++){const u=o[c];this.addGroup(u.start,u.count,u.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const pm=new ct,_s=new as,Bl=new wn,mm=new I,zl=new I,Vl=new I,Gl=new I,td=new I,Hl=new I,gm=new I,Wl=new I;class ze extends Lt{constructor(e=new xt,t=new Bn){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=n.length;r<o;r++){const a=n[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}getVertexPosition(e,t){const i=this.geometry,n=i.attributes.position,r=i.morphAttributes.position,o=i.morphTargetsRelative;t.fromBufferAttribute(n,e);const a=this.morphTargetInfluences;if(r&&a){Hl.set(0,0,0);for(let l=0,c=r.length;l<c;l++){const h=a[l],u=r[l];h!==0&&(td.fromBufferAttribute(u,e),o?Hl.addScaledVector(td,h):Hl.addScaledVector(td.sub(t),h))}t.add(Hl)}return t}raycast(e,t){const i=this.geometry,n=this.material,r=this.matrixWorld;n!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),Bl.copy(i.boundingSphere),Bl.applyMatrix4(r),_s.copy(e.ray).recast(e.near),!(Bl.containsPoint(_s.origin)===!1&&(_s.intersectSphere(Bl,mm)===null||_s.origin.distanceToSquared(mm)>(e.far-e.near)**2))&&(pm.copy(r).invert(),_s.copy(e.ray).applyMatrix4(pm),!(i.boundingBox!==null&&_s.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,t,_s)))}_computeIntersections(e,t,i){let n;const r=this.geometry,o=this.material,a=r.index,l=r.attributes.position,c=r.attributes.uv,h=r.attributes.uv1,u=r.attributes.normal,d=r.groups,f=r.drawRange;if(a!==null)if(Array.isArray(o))for(let p=0,v=d.length;p<v;p++){const m=d[p],g=o[m.materialIndex],x=Math.max(m.start,f.start),y=Math.min(a.count,Math.min(m.start+m.count,f.start+f.count));for(let _=x,E=y;_<E;_+=3){const w=a.getX(_),M=a.getX(_+1),T=a.getX(_+2);n=Xl(this,g,e,i,c,h,u,w,M,T),n&&(n.faceIndex=Math.floor(_/3),n.face.materialIndex=m.materialIndex,t.push(n))}}else{const p=Math.max(0,f.start),v=Math.min(a.count,f.start+f.count);for(let m=p,g=v;m<g;m+=3){const x=a.getX(m),y=a.getX(m+1),_=a.getX(m+2);n=Xl(this,o,e,i,c,h,u,x,y,_),n&&(n.faceIndex=Math.floor(m/3),t.push(n))}}else if(l!==void 0)if(Array.isArray(o))for(let p=0,v=d.length;p<v;p++){const m=d[p],g=o[m.materialIndex],x=Math.max(m.start,f.start),y=Math.min(l.count,Math.min(m.start+m.count,f.start+f.count));for(let _=x,E=y;_<E;_+=3){const w=_,M=_+1,T=_+2;n=Xl(this,g,e,i,c,h,u,w,M,T),n&&(n.faceIndex=Math.floor(_/3),n.face.materialIndex=m.materialIndex,t.push(n))}}else{const p=Math.max(0,f.start),v=Math.min(l.count,f.start+f.count);for(let m=p,g=v;m<g;m+=3){const x=m,y=m+1,_=m+2;n=Xl(this,o,e,i,c,h,u,x,y,_),n&&(n.faceIndex=Math.floor(m/3),t.push(n))}}}}function Gb(s,e,t,i,n,r,o,a){let l;if(e.side===ti?l=i.intersectTriangle(o,r,n,!0,a):l=i.intersectTriangle(n,r,o,e.side===br,a),l===null)return null;Wl.copy(a),Wl.applyMatrix4(s.matrixWorld);const c=t.ray.origin.distanceTo(Wl);return c<t.near||c>t.far?null:{distance:c,point:Wl.clone(),object:s}}function Xl(s,e,t,i,n,r,o,a,l,c){s.getVertexPosition(a,zl),s.getVertexPosition(l,Vl),s.getVertexPosition(c,Gl);const h=Gb(s,e,t,i,zl,Vl,Gl,gm);if(h){const u=new I;yi.getBarycoord(gm,zl,Vl,Gl,u),n&&(h.uv=yi.getInterpolatedAttribute(n,a,l,c,u,new Me)),r&&(h.uv1=yi.getInterpolatedAttribute(r,a,l,c,u,new Me)),o&&(h.normal=yi.getInterpolatedAttribute(o,a,l,c,u,new I),h.normal.dot(i.direction)>0&&h.normal.multiplyScalar(-1));const d={a,b:l,c,normal:new I,materialIndex:0};yi.getNormal(zl,Vl,Gl,d.normal),h.face=d,h.barycoord=u}return h}class gn extends xt{constructor(e=1,t=1,i=1,n=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:n,heightSegments:r,depthSegments:o};const a=this;n=Math.floor(n),r=Math.floor(r),o=Math.floor(o);const l=[],c=[],h=[],u=[];let d=0,f=0;p("z","y","x",-1,-1,i,t,e,o,r,0),p("z","y","x",1,-1,i,t,-e,o,r,1),p("x","z","y",1,1,e,i,t,n,o,2),p("x","z","y",1,-1,e,i,-t,n,o,3),p("x","y","z",1,-1,e,t,i,n,r,4),p("x","y","z",-1,-1,e,t,-i,n,r,5),this.setIndex(l),this.setAttribute("position",new qe(c,3)),this.setAttribute("normal",new qe(h,3)),this.setAttribute("uv",new qe(u,2));function p(v,m,g,x,y,_,E,w,M,T,S){const b=_/M,P=E/T,D=_/2,G=E/2,H=w/2,q=M+1,F=T+1;let te=0,Y=0;const j=new I;for(let $=0;$<F;$++){const L=$*P-G;for(let Z=0;Z<q;Z++){const Q=Z*b-D;j[v]=Q*x,j[m]=L*y,j[g]=H,c.push(j.x,j.y,j.z),j[v]=0,j[m]=0,j[g]=w>0?1:-1,h.push(j.x,j.y,j.z),u.push(Z/M),u.push(1-$/T),te+=1}}for(let $=0;$<T;$++)for(let L=0;L<M;L++){const Z=d+L+q*$,Q=d+L+q*($+1),k=d+(L+1)+q*($+1),W=d+(L+1)+q*$;l.push(Z,Q,W),l.push(Q,k,W),Y+=6}a.addGroup(f,Y,S),f+=Y,d+=te}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new gn(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Jo(s){const e={};for(const t in s){e[t]={};for(const i in s[t]){const n=s[t][i];n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture||n.isQuaternion)?n.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][i]=null):e[t][i]=n.clone():Array.isArray(n)?e[t][i]=n.slice():e[t][i]=n}}return e}function si(s){const e={};for(let t=0;t<s.length;t++){const i=Jo(s[t]);for(const n in i)e[n]=i[n]}return e}function Hb(s){const e=[];for(let t=0;t<s.length;t++)e.push(s[t].clone());return e}function Ov(s){const e=s.getRenderTarget();return e===null?s.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:Nt.workingColorSpace}const yl={clone:Jo,merge:si};var Wb=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Xb=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class wi extends kn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Wb,this.fragmentShader=Xb,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Jo(e.uniforms),this.uniformsGroups=Hb(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const o=this.uniforms[n].value;o&&o.isTexture?t.uniforms[n]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[n]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[n]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[n]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[n]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[n]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[n]={type:"m4",value:o.toArray()}:t.uniforms[n]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const i={};for(const n in this.extensions)this.extensions[n]===!0&&(i[n]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}class Jh extends Lt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ct,this.projectionMatrix=new ct,this.projectionMatrixInverse=new ct,this.coordinateSystem=Hi}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const Jr=new I,vm=new Me,_m=new Me;class Sn extends Jh{constructor(e=50,t=1,i=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Zo*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(qs*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Zo*2*Math.atan(Math.tan(qs*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,i){Jr.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(Jr.x,Jr.y).multiplyScalar(-e/Jr.z),Jr.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(Jr.x,Jr.y).multiplyScalar(-e/Jr.z)}getViewSize(e,t){return this.getViewBounds(e,vm,_m),t.subVectors(_m,vm)}setViewOffset(e,t,i,n,r,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(qs*.5*this.fov)/this.zoom,i=2*t,n=this.aspect*i,r=-.5*n;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;r+=o.offsetX*n/l,t-=o.offsetY*i/c,n*=o.width/l,i*=o.height/c}const a=this.filmOffset;a!==0&&(r+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+n,t,t-i,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Eo=-90,To=1;class Fv extends Lt{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const n=new Sn(Eo,To,e,t);n.layers=this.layers,this.add(n);const r=new Sn(Eo,To,e,t);r.layers=this.layers,this.add(r);const o=new Sn(Eo,To,e,t);o.layers=this.layers,this.add(o);const a=new Sn(Eo,To,e,t);a.layers=this.layers,this.add(a);const l=new Sn(Eo,To,e,t);l.layers=this.layers,this.add(l);const c=new Sn(Eo,To,e,t);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[i,n,r,o,a,l]=t;for(const c of t)this.remove(c);if(e===Hi)i.up.set(0,1,0),i.lookAt(1,0,0),n.up.set(0,1,0),n.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===tl)i.up.set(0,-1,0),i.lookAt(-1,0,0),n.up.set(0,-1,0),n.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const c of t)this.add(c),c.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:n}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[r,o,a,l,c,h]=this.children,u=e.getRenderTarget(),d=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const v=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,n),e.render(t,r),e.setRenderTarget(i,1,n),e.render(t,o),e.setRenderTarget(i,2,n),e.render(t,a),e.setRenderTarget(i,3,n),e.render(t,l),e.setRenderTarget(i,4,n),e.render(t,c),i.texture.generateMipmaps=v,e.setRenderTarget(i,5,n),e.render(t,h),e.setRenderTarget(u,d,f),e.xr.enabled=p,i.texture.needsPMREMUpdate=!0}}class xl extends fn{constructor(e=[],t=zr,i,n,r,o,a,l,c,h){super(e,t,i,n,r,o,a,l,c,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class kv extends Xi{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},n=[i,i,i,i,i,i];this.texture=new xl(n),this._setTextureOptions(t),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},n=new gn(5,5,5),r=new wi({name:"CubemapFromEquirect",uniforms:Jo(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:ti,blending:Or});r.uniforms.tEquirect.value=t;const o=new ze(n,r),a=t.minFilter;return t.minFilter===nr&&(t.minFilter=Mn),new Fv(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t=!0,i=!0,n=!0){const r=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,i,n);e.setRenderTarget(r)}}class Di extends Lt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const jb={type:"move"};class kc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Di,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Di,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new I,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new I),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Di,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new I,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new I),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const i of e.hand.values())this._getHandJoint(t,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,i){let n=null,r=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){o=!0;for(const v of e.hand.values()){const m=t.getJointPose(v,i),g=this._getHandJoint(c,v);m!==null&&(g.matrix.fromArray(m.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),g.matrixWorldNeedsUpdate=!0,g.jointRadius=m.radius),g.visible=m!==null}const h=c.joints["index-finger-tip"],u=c.joints["thumb-tip"],d=h.position.distanceTo(u.position),f=.02,p=.005;c.inputState.pinching&&d>f+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&d<=f-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,i),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(n=t.getPose(e.targetRaySpace,i),n===null&&r!==null&&(n=r),n!==null&&(a.matrix.fromArray(n.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,n.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(n.linearVelocity)):a.hasLinearVelocity=!1,n.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(n.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(jb)))}return a!==null&&(a.visible=n!==null),l!==null&&(l.visible=r!==null),c!==null&&(c.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const i=new Di;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[t.jointName]=i,e.add(i)}return e.joints[t.jointName]}}class Kh{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Ge(e),this.density=t}clone(){return new Kh(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class Qh{constructor(e,t=1,i=1e3){this.isFog=!0,this.name="",this.color=new Ge(e),this.near=t,this.far=i}clone(){return new Qh(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class bl extends Lt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Mi,this.environmentIntensity=1,this.environmentRotation=new Mi,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class $h{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=el,this.updateRanges=[],this.version=0,this.uuid=Ni()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,i){e*=this.stride,i*=t.stride;for(let n=0,r=this.stride;n<r;n++)this.array[e+n]=t.array[i+n];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Ni()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(t,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Ni()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const ri=new I;class Li{constructor(e,t,i,n=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,i=this.data.count;t<i;t++)ri.fromBufferAttribute(this,t),ri.applyMatrix4(e),this.setXYZ(t,ri.x,ri.y,ri.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)ri.fromBufferAttribute(this,t),ri.applyNormalMatrix(e),this.setXYZ(t,ri.x,ri.y,ri.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)ri.fromBufferAttribute(this,t),ri.transformDirection(e),this.setXYZ(t,ri.x,ri.y,ri.z);return this}getComponent(e,t){let i=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(i=ai(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=Pt(i,this.array)),this.data.array[e*this.data.stride+this.offset+t]=i,this}setX(e,t){return this.normalized&&(t=Pt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=Pt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=Pt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=Pt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=ai(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=ai(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=ai(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=ai(t,this.array)),t}setXY(e,t,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=Pt(t,this.array),i=Pt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this}setXYZ(e,t,i,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=Pt(t,this.array),i=Pt(i,this.array),n=Pt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this}setXYZW(e,t,i,n,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=Pt(t,this.array),i=Pt(i,this.array),n=Pt(n,this.array),r=Pt(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[n+r])}return new Rt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Li(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[n+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class ea extends kn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Ge(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Ao;const ma=new I,Co=new I,Ro=new I,Po=new Me,ga=new Me,Bv=new ct,jl=new I,va=new I,Yl=new I,ym=new Me,nd=new Me,xm=new Me;class Sl extends Lt{constructor(e=new ea){if(super(),this.isSprite=!0,this.type="Sprite",Ao===void 0){Ao=new xt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),i=new $h(t,5);Ao.setIndex([0,1,2,0,2,3]),Ao.setAttribute("position",new Li(i,3,0,!1)),Ao.setAttribute("uv",new Li(i,2,3,!1))}this.geometry=Ao,this.material=e,this.center=new Me(.5,.5),this.count=1}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Co.setFromMatrixScale(this.matrixWorld),Bv.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Ro.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Co.multiplyScalar(-Ro.z);const i=this.material.rotation;let n,r;i!==0&&(r=Math.cos(i),n=Math.sin(i));const o=this.center;ql(jl.set(-.5,-.5,0),Ro,o,Co,n,r),ql(va.set(.5,-.5,0),Ro,o,Co,n,r),ql(Yl.set(.5,.5,0),Ro,o,Co,n,r),ym.set(0,0),nd.set(1,0),xm.set(1,1);let a=e.ray.intersectTriangle(jl,va,Yl,!1,ma);if(a===null&&(ql(va.set(-.5,.5,0),Ro,o,Co,n,r),nd.set(0,1),a=e.ray.intersectTriangle(jl,Yl,va,!1,ma),a===null))return;const l=e.ray.origin.distanceTo(ma);l<e.near||l>e.far||t.push({distance:l,point:ma.clone(),uv:yi.getInterpolation(ma,jl,va,Yl,ym,nd,xm,new Me),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function ql(s,e,t,i,n,r){Po.subVectors(s,t).addScalar(.5).multiply(i),n!==void 0?(ga.x=r*Po.x-n*Po.y,ga.y=n*Po.x+r*Po.y):ga.copy(Po),s.copy(e),s.x+=ga.x,s.y+=ga.y,s.applyMatrix4(Bv)}const Zl=new I,bm=new I;class zv extends Lt{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let i=0,n=t.length;i<n;i++){const r=t[i];this.addLevel(r.object.clone(),r.distance,r.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,i=0){t=Math.abs(t);const n=this.levels;let r;for(r=0;r<n.length&&!(t<n[r].distance);r++);return n.splice(r,0,{distance:t,hysteresis:i,object:e}),this.add(e),this}removeLevel(e){const t=this.levels;for(let i=0;i<t.length;i++)if(t[i].distance===e){const n=t.splice(i,1);return this.remove(n[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let i,n;for(i=1,n=t.length;i<n;i++){let r=t[i].distance;if(t[i].object.visible&&(r-=r*t[i].hysteresis),e<r)break}return t[i-1].object}return null}raycast(e,t){if(this.levels.length>0){Zl.setFromMatrixPosition(this.matrixWorld);const n=e.ray.origin.distanceTo(Zl);this.getObjectForDistance(n).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){Zl.setFromMatrixPosition(e.matrixWorld),bm.setFromMatrixPosition(this.matrixWorld);const i=Zl.distanceTo(bm)/e.zoom;t[0].object.visible=!0;let n,r;for(n=1,r=t.length;n<r;n++){let o=t[n].distance;if(t[n].object.visible&&(o-=o*t[n].hysteresis),i>=o)t[n-1].object.visible=!1,t[n].object.visible=!0;else break}for(this._currentLevel=n-1;n<r;n++)t[n].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const i=this.levels;for(let n=0,r=i.length;n<r;n++){const o=i[n];t.object.levels.push({object:o.object.uuid,distance:o.distance,hysteresis:o.hysteresis})}return t}}const Sm=new I,Mm=new It,wm=new It,Yb=new I,Em=new ct,Jl=new I,id=new wn,Tm=new ct,rd=new as;class Jf extends ze{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=rf,this.bindMatrix=new ct,this.bindMatrixInverse=new ct,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new _n),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let i=0;i<t.count;i++)this.getVertexPosition(i,Jl),this.boundingBox.expandByPoint(Jl)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new wn),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let i=0;i<t.count;i++)this.getVertexPosition(i,Jl),this.boundingSphere.expandByPoint(Jl)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const i=this.material,n=this.matrixWorld;i!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),id.copy(this.boundingSphere),id.applyMatrix4(n),e.ray.intersectsSphere(id)!==!1&&(Tm.copy(n).invert(),rd.copy(e.ray).applyMatrix4(Tm),!(this.boundingBox!==null&&rd.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,rd)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new It,t=this.geometry.attributes.skinWeight;for(let i=0,n=t.count;i<n;i++){e.fromBufferAttribute(t,i);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(i,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===rf?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===yv?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const i=this.skeleton,n=this.geometry;Mm.fromBufferAttribute(n.attributes.skinIndex,e),wm.fromBufferAttribute(n.attributes.skinWeight,e),Sm.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const o=wm.getComponent(r);if(o!==0){const a=Mm.getComponent(r);Em.multiplyMatrices(i.bones[a].matrixWorld,i.boneInverses[a]),t.addScaledVector(Yb.copy(Sm).applyMatrix4(Em),o)}}return t.applyMatrix4(this.bindMatrixInverse)}}class eu extends Lt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class xr extends fn{constructor(e=null,t=1,i=1,n,r,o,a,l,c=Yn,h=Yn,u,d){super(null,o,a,l,c,h,n,r,u,d),this.isDataTexture=!0,this.image={data:e,width:t,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Am=new ct,qb=new ct;class Ml{constructor(e=[],t=[]){this.uuid=Ni(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let i=0,n=this.bones.length;i<n;i++)this.boneInverses.push(new ct)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const i=new ct;this.bones[e]&&i.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(i)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];i&&i.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];i&&(i.parent&&i.parent.isBone?(i.matrix.copy(i.parent.matrixWorld).invert(),i.matrix.multiply(i.matrixWorld)):i.matrix.copy(i.matrixWorld),i.matrix.decompose(i.position,i.quaternion,i.scale))}}update(){const e=this.bones,t=this.boneInverses,i=this.boneMatrices,n=this.boneTexture;for(let r=0,o=e.length;r<o;r++){const a=e[r]?e[r].matrixWorld:qb;Am.multiplyMatrices(a,t[r]),Am.toArray(i,r*16)}n!==null&&(n.needsUpdate=!0)}clone(){return new Ml(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const i=new xr(t,e,e,ci,Si);return i.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=i,this}getBoneByName(e){for(let t=0,i=this.bones.length;t<i;t++){const n=this.bones[t];if(n.name===e)return n}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let i=0,n=e.bones.length;i<n;i++){const r=e.bones[i];let o=t[r];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),o=new eu),this.bones.push(o),this.boneInverses.push(new ct().fromArray(e.boneInverses[i]))}return this.init(),this}toJSON(){const e={metadata:{version:4.7,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,i=this.boneInverses;for(let n=0,r=t.length;n<r;n++){const o=t[n];e.bones.push(o.uuid);const a=i[n];e.boneInverses.push(a.toArray())}return e}}class to extends Rt{constructor(e,t,i,n=1){super(e,t,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Io=new ct,Cm=new ct,Kl=[],Rm=new _n,Zb=new ct,_a=new ze,ya=new wn;class Vv extends ze{constructor(e,t,i){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new to(new Float32Array(i*16),16),this.instanceColor=null,this.morphTexture=null,this.count=i,this.boundingBox=null,this.boundingSphere=null;for(let n=0;n<i;n++)this.setMatrixAt(n,Zb)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new _n),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,Io),Rm.copy(e.boundingBox).applyMatrix4(Io),this.boundingBox.union(Rm)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new wn),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,Io),ya.copy(e.boundingSphere).applyMatrix4(Io),this.boundingSphere.union(ya)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const i=t.morphTargetInfluences,n=this.morphTexture.source.data.data,r=i.length+1,o=e*r+1;for(let a=0;a<i.length;a++)i[a]=n[o+a]}raycast(e,t){const i=this.matrixWorld,n=this.count;if(_a.geometry=this.geometry,_a.material=this.material,_a.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),ya.copy(this.boundingSphere),ya.applyMatrix4(i),e.ray.intersectsSphere(ya)!==!1))for(let r=0;r<n;r++){this.getMatrixAt(r,Io),Cm.multiplyMatrices(i,Io),_a.matrixWorld=Cm,_a.raycast(e,Kl);for(let o=0,a=Kl.length;o<a;o++){const l=Kl[o];l.instanceId=r,l.object=this,t.push(l)}Kl.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new to(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const i=t.morphTargetInfluences,n=i.length+1;this.morphTexture===null&&(this.morphTexture=new xr(new Float32Array(n*this.count),n,this.count,Hh,Si));const r=this.morphTexture.source.data.data;let o=0;for(let c=0;c<i.length;c++)o+=i[c];const a=this.geometry.morphTargetsRelative?1:1-o,l=n*e;r[l]=a,r.set(i,l+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const sd=new I,Jb=new I,Kb=new At;class mr{constructor(e=new I(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,n){return this.normal.set(e,t,i),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const n=sd.subVectors(i,t).cross(Jb.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const i=e.delta(sd),n=this.normal.dot(i);if(n===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/n;return r<0||r>1?null:t.copy(e.start).addScaledVector(i,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||Kb.getNormalMatrix(e),n=this.coplanarPoint(sd).applyMatrix4(e),r=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const ys=new wn,Qb=new Me(.5,.5),Ql=new I;class ta{constructor(e=new mr,t=new mr,i=new mr,n=new mr,r=new mr,o=new mr){this.planes=[e,t,i,n,r,o]}set(e,t,i,n,r,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(n),a[4].copy(r),a[5].copy(o),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,t=Hi){const i=this.planes,n=e.elements,r=n[0],o=n[1],a=n[2],l=n[3],c=n[4],h=n[5],u=n[6],d=n[7],f=n[8],p=n[9],v=n[10],m=n[11],g=n[12],x=n[13],y=n[14],_=n[15];if(i[0].setComponents(l-r,d-c,m-f,_-g).normalize(),i[1].setComponents(l+r,d+c,m+f,_+g).normalize(),i[2].setComponents(l+o,d+h,m+p,_+x).normalize(),i[3].setComponents(l-o,d-h,m-p,_-x).normalize(),i[4].setComponents(l-a,d-u,m-v,_-y).normalize(),t===Hi)i[5].setComponents(l+a,d+u,m+v,_+y).normalize();else if(t===tl)i[5].setComponents(a,u,v,y).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),ys.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),ys.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(ys)}intersectsSprite(e){ys.center.set(0,0,0);const t=Qb.distanceTo(e.center);return ys.radius=.7071067811865476+t,ys.applyMatrix4(e.matrixWorld),this.intersectsSphere(ys)}intersectsSphere(e){const t=this.planes,i=e.center,n=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(i)<n)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const n=t[i];if(Ql.x=n.normal.x>0?e.max.x:e.min.x,Ql.y=n.normal.y>0?e.max.y:e.min.y,Ql.z=n.normal.z>0?e.max.z:e.min.z,n.distanceToPoint(Ql)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}const lr=new ct,cr=new ta;class tu{constructor(){this.coordinateSystem=Hi}intersectsObject(e,t){if(!t.isArrayCamera||t.cameras.length===0)return!1;for(let i=0;i<t.cameras.length;i++){const n=t.cameras[i];if(lr.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),cr.setFromProjectionMatrix(lr,this.coordinateSystem),cr.intersectsObject(e))return!0}return!1}intersectsSprite(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let i=0;i<t.cameras.length;i++){const n=t.cameras[i];if(lr.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),cr.setFromProjectionMatrix(lr,this.coordinateSystem),cr.intersectsSprite(e))return!0}return!1}intersectsSphere(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let i=0;i<t.cameras.length;i++){const n=t.cameras[i];if(lr.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),cr.setFromProjectionMatrix(lr,this.coordinateSystem),cr.intersectsSphere(e))return!0}return!1}intersectsBox(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let i=0;i<t.cameras.length;i++){const n=t.cameras[i];if(lr.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),cr.setFromProjectionMatrix(lr,this.coordinateSystem),cr.intersectsBox(e))return!0}return!1}containsPoint(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let i=0;i<t.cameras.length;i++){const n=t.cameras[i];if(lr.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),cr.setFromProjectionMatrix(lr,this.coordinateSystem),cr.containsPoint(e))return!0}return!1}clone(){return new tu}}function od(s,e){return s-e}function $b(s,e){return s.z-e.z}function e1(s,e){return e.z-s.z}class t1{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t,i,n){const r=this.pool,o=this.list;this.index>=r.length&&r.push({start:-1,count:-1,z:-1,index:-1});const a=r[this.index];o.push(a),this.index++,a.start=e,a.count=t,a.z=i,a.index=n}reset(){this.list.length=0,this.index=0}}const fi=new ct,n1=new Ge(1,1,1),Pm=new ta,i1=new tu,$l=new _n,xs=new wn,xa=new I,Im=new I,r1=new I,ad=new t1,$n=new ze,ec=[];function s1(s,e,t=0){const i=e.itemSize;if(s.isInterleavedBufferAttribute||s.array.constructor!==e.array.constructor){const n=s.count;for(let r=0;r<n;r++)for(let o=0;o<i;o++)e.setComponent(r+t,o,s.getComponent(r,o))}else e.array.set(s.array,t*i);e.needsUpdate=!0}function bs(s,e){if(s.constructor!==e.constructor){const t=Math.min(s.length,e.length);for(let i=0;i<t;i++)e[i]=s[i]}else{const t=Math.min(s.length,e.length);e.set(new s.constructor(s.buffer,0,t))}}class Gv extends ze{constructor(e,t,i=t*2,n){super(new xt,n),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=e,this._maxVertexCount=t,this._maxIndexCount=i,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}_initMatricesTexture(){let e=Math.sqrt(this._maxInstanceCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),i=new xr(t,e,e,ci,Si);this._matricesTexture=i}_initIndirectTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Uint32Array(e*e),i=new xr(t,e,e,_l,Vr);this._indirectTexture=i}_initColorsTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Float32Array(e*e*4).fill(1),i=new xr(t,e,e,ci,Si);i.colorSpace=Nt.workingColorSpace,this._colorsTexture=i}_initializeGeometry(e){const t=this.geometry,i=this._maxVertexCount,n=this._maxIndexCount;if(this._geometryInitialized===!1){for(const r in e.attributes){const o=e.getAttribute(r),{array:a,itemSize:l,normalized:c}=o,h=new a.constructor(i*l),u=new Rt(h,l,c);t.setAttribute(r,u)}if(e.getIndex()!==null){const r=i>65535?new Uint32Array(n):new Uint16Array(n);t.setIndex(new Rt(r,1))}this._geometryInitialized=!0}}_validateGeometry(e){const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const i in t.attributes){if(!e.hasAttribute(i))throw new Error(`THREE.BatchedMesh: Added geometry missing "${i}". All geometries must have consistent attributes.`);const n=e.getAttribute(i),r=t.getAttribute(i);if(n.itemSize!==r.itemSize||n.normalized!==r.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(e){const t=this._instanceInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${e}. Instance is either out of range or has been deleted.`)}validateGeometryId(e){const t=this._geometryInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${e}. Geometry is either out of range or has been deleted.`)}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new _n);const e=this.boundingBox,t=this._instanceInfo;e.makeEmpty();for(let i=0,n=t.length;i<n;i++){if(t[i].active===!1)continue;const r=t[i].geometryIndex;this.getMatrixAt(i,fi),this.getBoundingBoxAt(r,$l).applyMatrix4(fi),e.union($l)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new wn);const e=this.boundingSphere,t=this._instanceInfo;e.makeEmpty();for(let i=0,n=t.length;i<n;i++){if(t[i].active===!1)continue;const r=t[i].geometryIndex;this.getMatrixAt(i,fi),this.getBoundingSphereAt(r,xs).applyMatrix4(fi),e.union(xs)}}addInstance(e){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const i={visible:!0,active:!0,geometryIndex:e};let n=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(od),n=this._availableInstanceIds.shift(),this._instanceInfo[n]=i):(n=this._instanceInfo.length,this._instanceInfo.push(i));const r=this._matricesTexture;fi.identity().toArray(r.image.data,n*16),r.needsUpdate=!0;const o=this._colorsTexture;return o&&(n1.toArray(o.image.data,n*4),o.needsUpdate=!0),this._visibilityChanged=!0,n}addGeometry(e,t=-1,i=-1){this._initializeGeometry(e),this._validateGeometry(e);const n={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},r=this._geometryInfo;n.vertexStart=this._nextVertexStart,n.reservedVertexCount=t===-1?e.getAttribute("position").count:t;const o=e.getIndex();if(o!==null&&(n.indexStart=this._nextIndexStart,n.reservedIndexCount=i===-1?o.count:i),n.indexStart!==-1&&n.indexStart+n.reservedIndexCount>this._maxIndexCount||n.vertexStart+n.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let l;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(od),l=this._availableGeometryIds.shift(),r[l]=n):(l=this._geometryCount,this._geometryCount++,r.push(n)),this.setGeometryAt(l,e),this._nextIndexStart=n.indexStart+n.reservedIndexCount,this._nextVertexStart=n.vertexStart+n.reservedVertexCount,l}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const i=this.geometry,n=i.getIndex()!==null,r=i.getIndex(),o=t.getIndex(),a=this._geometryInfo[e];if(n&&o.count>a.reservedIndexCount||t.attributes.position.count>a.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const l=a.vertexStart,c=a.reservedVertexCount;a.vertexCount=t.getAttribute("position").count;for(const h in i.attributes){const u=t.getAttribute(h),d=i.getAttribute(h);s1(u,d,l);const f=u.itemSize;for(let p=u.count,v=c;p<v;p++){const m=l+p;for(let g=0;g<f;g++)d.setComponent(m,g,0)}d.needsUpdate=!0,d.addUpdateRange(l*f,c*f)}if(n){const h=a.indexStart,u=a.reservedIndexCount;a.indexCount=t.getIndex().count;for(let d=0;d<o.count;d++)r.setX(h+d,l+o.getX(d));for(let d=o.count,f=u;d<f;d++)r.setX(h+d,l);r.needsUpdate=!0,r.addUpdateRange(h,a.reservedIndexCount)}return a.start=n?a.indexStart:a.vertexStart,a.count=n?a.indexCount:a.vertexCount,a.boundingBox=null,t.boundingBox!==null&&(a.boundingBox=t.boundingBox.clone()),a.boundingSphere=null,t.boundingSphere!==null&&(a.boundingSphere=t.boundingSphere.clone()),this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._geometryInfo;if(e>=t.length||t[e].active===!1)return this;const i=this._instanceInfo;for(let n=0,r=i.length;n<r;n++)i[n].active&&i[n].geometryIndex===e&&this.deleteInstance(n);return t[e].active=!1,this._availableGeometryIds.push(e),this._visibilityChanged=!0,this}deleteInstance(e){return this.validateInstanceId(e),this._instanceInfo[e].active=!1,this._availableInstanceIds.push(e),this._visibilityChanged=!0,this}optimize(){let e=0,t=0;const i=this._geometryInfo,n=i.map((o,a)=>a).sort((o,a)=>i[o].vertexStart-i[a].vertexStart),r=this.geometry;for(let o=0,a=i.length;o<a;o++){const l=n[o],c=i[l];if(c.active!==!1){if(r.index!==null){if(c.indexStart!==t){const{indexStart:h,vertexStart:u,reservedIndexCount:d}=c,f=r.index,p=f.array,v=e-u;for(let m=h;m<h+d;m++)p[m]=p[m]+v;f.array.copyWithin(t,h,h+d),f.addUpdateRange(t,d),c.indexStart=t}t+=c.reservedIndexCount}if(c.vertexStart!==e){const{vertexStart:h,reservedVertexCount:u}=c,d=r.attributes;for(const f in d){const p=d[f],{array:v,itemSize:m}=p;v.copyWithin(e*m,h*m,(h+u)*m),p.addUpdateRange(e*m,u*m)}c.vertexStart=e}e+=c.reservedVertexCount,c.start=r.index?c.indexStart:c.vertexStart,this._nextIndexStart=r.index?c.indexStart+c.reservedIndexCount:0,this._nextVertexStart=c.vertexStart+c.reservedVertexCount}}return this}getBoundingBoxAt(e,t){if(e>=this._geometryCount)return null;const i=this.geometry,n=this._geometryInfo[e];if(n.boundingBox===null){const r=new _n,o=i.index,a=i.attributes.position;for(let l=n.start,c=n.start+n.count;l<c;l++){let h=l;o&&(h=o.getX(h)),r.expandByPoint(xa.fromBufferAttribute(a,h))}n.boundingBox=r}return t.copy(n.boundingBox),t}getBoundingSphereAt(e,t){if(e>=this._geometryCount)return null;const i=this.geometry,n=this._geometryInfo[e];if(n.boundingSphere===null){const r=new wn;this.getBoundingBoxAt(e,$l),$l.getCenter(r.center);const o=i.index,a=i.attributes.position;let l=0;for(let c=n.start,h=n.start+n.count;c<h;c++){let u=c;o&&(u=o.getX(u)),xa.fromBufferAttribute(a,u),l=Math.max(l,r.center.distanceToSquared(xa))}r.radius=Math.sqrt(l),n.boundingSphere=r}return t.copy(n.boundingSphere),t}setMatrixAt(e,t){this.validateInstanceId(e);const i=this._matricesTexture,n=this._matricesTexture.image.data;return t.toArray(n,e*16),i.needsUpdate=!0,this}getMatrixAt(e,t){return this.validateInstanceId(e),t.fromArray(this._matricesTexture.image.data,e*16)}setColorAt(e,t){return this.validateInstanceId(e),this._colorsTexture===null&&this._initColorsTexture(),t.toArray(this._colorsTexture.image.data,e*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(e,t){return this.validateInstanceId(e),t.fromArray(this._colorsTexture.image.data,e*4)}setVisibleAt(e,t){return this.validateInstanceId(e),this._instanceInfo[e].visible===t?this:(this._instanceInfo[e].visible=t,this._visibilityChanged=!0,this)}getVisibleAt(e){return this.validateInstanceId(e),this._instanceInfo[e].visible}setGeometryIdAt(e,t){return this.validateInstanceId(e),this.validateGeometryId(t),this._instanceInfo[e].geometryIndex=t,this}getGeometryIdAt(e){return this.validateInstanceId(e),this._instanceInfo[e].geometryIndex}getGeometryRangeAt(e,t={}){this.validateGeometryId(e);const i=this._geometryInfo[e];return t.vertexStart=i.vertexStart,t.vertexCount=i.vertexCount,t.reservedVertexCount=i.reservedVertexCount,t.indexStart=i.indexStart,t.indexCount=i.indexCount,t.reservedIndexCount=i.reservedIndexCount,t.start=i.start,t.count=i.count,t}setInstanceCount(e){const t=this._availableInstanceIds,i=this._instanceInfo;for(t.sort(od);t[t.length-1]===i.length;)i.pop(),t.pop();if(e<i.length)throw new Error(`BatchedMesh: Instance ids outside the range ${e} are being used. Cannot shrink instance count.`);const n=new Int32Array(e),r=new Int32Array(e);bs(this._multiDrawCounts,n),bs(this._multiDrawStarts,r),this._multiDrawCounts=n,this._multiDrawStarts=r,this._maxInstanceCount=e;const o=this._indirectTexture,a=this._matricesTexture,l=this._colorsTexture;o.dispose(),this._initIndirectTexture(),bs(o.image.data,this._indirectTexture.image.data),a.dispose(),this._initMatricesTexture(),bs(a.image.data,this._matricesTexture.image.data),l&&(l.dispose(),this._initColorsTexture(),bs(l.image.data,this._colorsTexture.image.data))}setGeometrySize(e,t){const i=[...this._geometryInfo].filter(a=>a.active);if(Math.max(...i.map(a=>a.vertexStart+a.reservedVertexCount))>e)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${t}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...i.map(l=>l.indexStart+l.reservedIndexCount))>t)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${t}. Cannot shrink further.`);const r=this.geometry;r.dispose(),this._maxVertexCount=e,this._maxIndexCount=t,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new xt,this._initializeGeometry(r));const o=this.geometry;r.index&&bs(r.index.array,o.index.array);for(const a in r.attributes)bs(r.attributes[a].array,o.attributes[a].array)}raycast(e,t){const i=this._instanceInfo,n=this._geometryInfo,r=this.matrixWorld,o=this.geometry;$n.material=this.material,$n.geometry.index=o.index,$n.geometry.attributes=o.attributes,$n.geometry.boundingBox===null&&($n.geometry.boundingBox=new _n),$n.geometry.boundingSphere===null&&($n.geometry.boundingSphere=new wn);for(let a=0,l=i.length;a<l;a++){if(!i[a].visible||!i[a].active)continue;const c=i[a].geometryIndex,h=n[c];$n.geometry.setDrawRange(h.start,h.count),this.getMatrixAt(a,$n.matrixWorld).premultiply(r),this.getBoundingBoxAt(c,$n.geometry.boundingBox),this.getBoundingSphereAt(c,$n.geometry.boundingSphere),$n.raycast(e,ec);for(let u=0,d=ec.length;u<d;u++){const f=ec[u];f.object=this,f.batchId=a,t.push(f)}ec.length=0}$n.material=null,$n.geometry.index=null,$n.geometry.attributes={},$n.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._geometryInfo=e._geometryInfo.map(t=>({...t,boundingBox:t.boundingBox!==null?t.boundingBox.clone():null,boundingSphere:t.boundingSphere!==null?t.boundingSphere.clone():null})),this._instanceInfo=e._instanceInfo.map(t=>({...t})),this._availableInstanceIds=e._availableInstanceIds.slice(),this._availableGeometryIds=e._availableGeometryIds.slice(),this._nextIndexStart=e._nextIndexStart,this._nextVertexStart=e._nextVertexStart,this._geometryCount=e._geometryCount,this._maxInstanceCount=e._maxInstanceCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._indirectTexture=e._indirectTexture.clone(),this._indirectTexture.image.data=this._indirectTexture.image.data.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=e._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null)}onBeforeRender(e,t,i,n,r){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const o=n.getIndex(),a=o===null?1:o.array.BYTES_PER_ELEMENT,l=this._instanceInfo,c=this._multiDrawStarts,h=this._multiDrawCounts,u=this._geometryInfo,d=this.perObjectFrustumCulled,f=this._indirectTexture,p=f.image.data,v=i.isArrayCamera?i1:Pm;d&&!i.isArrayCamera&&(fi.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse).multiply(this.matrixWorld),Pm.setFromProjectionMatrix(fi,e.coordinateSystem));let m=0;if(this.sortObjects){fi.copy(this.matrixWorld).invert(),xa.setFromMatrixPosition(i.matrixWorld).applyMatrix4(fi),Im.set(0,0,-1).transformDirection(i.matrixWorld).transformDirection(fi);for(let y=0,_=l.length;y<_;y++)if(l[y].visible&&l[y].active){const E=l[y].geometryIndex;this.getMatrixAt(y,fi),this.getBoundingSphereAt(E,xs).applyMatrix4(fi);let w=!1;if(d&&(w=!v.intersectsSphere(xs,i)),!w){const M=u[E],T=r1.subVectors(xs.center,xa).dot(Im);ad.push(M.start,M.count,T,y)}}const g=ad.list,x=this.customSort;x===null?g.sort(r.transparent?e1:$b):x.call(this,g,i);for(let y=0,_=g.length;y<_;y++){const E=g[y];c[m]=E.start*a,h[m]=E.count,p[m]=E.index,m++}ad.reset()}else for(let g=0,x=l.length;g<x;g++)if(l[g].visible&&l[g].active){const y=l[g].geometryIndex;let _=!1;if(d&&(this.getMatrixAt(g,fi),this.getBoundingSphereAt(y,xs).applyMatrix4(fi),_=!v.intersectsSphere(xs,i)),!_){const E=u[y];c[m]=E.start*a,h[m]=E.count,p[m]=g,m++}}f.needsUpdate=!0,this._multiDrawCount=m,this._visibilityChanged=!1}onBeforeShadow(e,t,i,n,r,o){this.onBeforeRender(e,null,n,r,o)}}class En extends kn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Ge(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Rh=new I,Ph=new I,Dm=new ct,ba=new as,tc=new wn,ld=new I,Lm=new I;class jn extends Lt{constructor(e=new xt,t=new En){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[0];for(let n=1,r=t.count;n<r;n++)Rh.fromBufferAttribute(t,n-1),Ph.fromBufferAttribute(t,n),i[n]=i[n-1],i[n]+=Rh.distanceTo(Ph);e.setAttribute("lineDistance",new qe(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const i=this.geometry,n=this.matrixWorld,r=e.params.Line.threshold,o=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),tc.copy(i.boundingSphere),tc.applyMatrix4(n),tc.radius+=r,e.ray.intersectsSphere(tc)===!1)return;Dm.copy(n).invert(),ba.copy(e.ray).applyMatrix4(Dm);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=this.isLineSegments?2:1,h=i.index,d=i.attributes.position;if(h!==null){const f=Math.max(0,o.start),p=Math.min(h.count,o.start+o.count);for(let v=f,m=p-1;v<m;v+=c){const g=h.getX(v),x=h.getX(v+1),y=nc(this,e,ba,l,g,x,v);y&&t.push(y)}if(this.isLineLoop){const v=h.getX(p-1),m=h.getX(f),g=nc(this,e,ba,l,v,m,p-1);g&&t.push(g)}}else{const f=Math.max(0,o.start),p=Math.min(d.count,o.start+o.count);for(let v=f,m=p-1;v<m;v+=c){const g=nc(this,e,ba,l,v,v+1,v);g&&t.push(g)}if(this.isLineLoop){const v=nc(this,e,ba,l,p-1,f,p-1);v&&t.push(v)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=n.length;r<o;r++){const a=n[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}function nc(s,e,t,i,n,r,o){const a=s.geometry.attributes.position;if(Rh.fromBufferAttribute(a,n),Ph.fromBufferAttribute(a,r),t.distanceSqToSegment(Rh,Ph,ld,Lm)>i)return;ld.applyMatrix4(s.matrixWorld);const c=e.ray.origin.distanceTo(ld);if(!(c<e.near||c>e.far))return{distance:c,point:Lm.clone().applyMatrix4(s.matrixWorld),index:o,face:null,faceIndex:null,barycoord:null,object:s}}const Um=new I,Nm=new I;class Oi extends jn{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[];for(let n=0,r=t.count;n<r;n+=2)Um.fromBufferAttribute(t,n),Nm.fromBufferAttribute(t,n+1),i[n]=n===0?0:i[n-1],i[n+1]=i[n]+Um.distanceTo(Nm);e.setAttribute("lineDistance",new qe(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Hv extends jn{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class Xs extends kn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Ge(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const Om=new ct,af=new as,ic=new wn,rc=new I;class Va extends Lt{constructor(e=new xt,t=new Xs){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const i=this.geometry,n=this.matrixWorld,r=e.params.Points.threshold,o=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),ic.copy(i.boundingSphere),ic.applyMatrix4(n),ic.radius+=r,e.ray.intersectsSphere(ic)===!1)return;Om.copy(n).invert(),af.copy(e.ray).applyMatrix4(Om);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=i.index,u=i.attributes.position;if(c!==null){const d=Math.max(0,o.start),f=Math.min(c.count,o.start+o.count);for(let p=d,v=f;p<v;p++){const m=c.getX(p);rc.fromBufferAttribute(u,m),Fm(rc,m,l,n,e,t,this)}}else{const d=Math.max(0,o.start),f=Math.min(u.count,o.start+o.count);for(let p=d,v=f;p<v;p++)rc.fromBufferAttribute(u,p),Fm(rc,p,l,n,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=n.length;r<o;r++){const a=n[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}function Fm(s,e,t,i,n,r,o){const a=af.distanceSqToPoint(s);if(a<t){const l=new I;af.closestPointToPoint(s,l),l.applyMatrix4(i);const c=n.ray.origin.distanceTo(l);if(c<n.near||c>n.far)return;r.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,faceIndex:null,barycoord:null,object:o})}}class Wv extends fn{constructor(e,t,i,n,r=Mn,o=Mn,a,l,c){super(e,t,i,n,r,o,a,l,c),this.isVideoTexture=!0,this.generateMipmaps=!1;const h=this;function u(){h.needsUpdate=!0,e.requestVideoFrameCallback(u)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(u)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class o1 extends Wv{constructor(e,t,i,n,r,o,a,l){super({},e,t,i,n,r,o,a,l),this.isVideoFrameTexture=!0}update(){}clone(){return new this.constructor().copy(this)}setFrame(e){this.image=e,this.needsUpdate=!0}}class a1 extends fn{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Yn,this.minFilter=Yn,this.generateMipmaps=!1,this.needsUpdate=!0}}class nu extends fn{constructor(e,t,i,n,r,o,a,l,c,h,u,d){super(null,o,a,l,c,h,n,r,u,d),this.isCompressedTexture=!0,this.image={width:t,height:i},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class l1 extends nu{constructor(e,t,i,n,r,o){super(e,t,i,r,o),this.isCompressedArrayTexture=!0,this.image.depth=n,this.wrapR=bi,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class c1 extends nu{constructor(e,t,i){super(void 0,e[0].width,e[0].height,t,i,zr),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class Xv extends fn{constructor(e,t,i,n,r,o,a,l,c){super(e,t,i,n,r,o,a,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Kf extends fn{constructor(e,t,i=Vr,n,r,o,a=Yn,l=Yn,c,h=Yo,u=1){if(h!==Yo&&h!==qo)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const d={width:e,height:t,depth:u};super(d,n,r,o,a,l,h,i,c),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new rs(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class iu extends xt{constructor(e=1,t=1,i=4,n=8,r=1){super(),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:i,radialSegments:n,heightSegments:r},t=Math.max(0,t),i=Math.max(1,Math.floor(i)),n=Math.max(3,Math.floor(n)),r=Math.max(1,Math.floor(r));const o=[],a=[],l=[],c=[],h=t/2,u=Math.PI/2*e,d=t,f=2*u+d,p=i*2+r,v=n+1,m=new I,g=new I;for(let x=0;x<=p;x++){let y=0,_=0,E=0,w=0;if(x<=i){const S=x/i,b=S*Math.PI/2;_=-h-e*Math.cos(b),E=e*Math.sin(b),w=-e*Math.cos(b),y=S*u}else if(x<=i+r){const S=(x-i)/r;_=-h+S*t,E=e,w=0,y=u+S*d}else{const S=(x-i-r)/i,b=S*Math.PI/2;_=h+e*Math.sin(b),E=e*Math.cos(b),w=e*Math.sin(b),y=u+d+S*u}const M=Math.max(0,Math.min(1,y/f));let T=0;x===0?T=.5/n:x===p&&(T=-.5/n);for(let S=0;S<=n;S++){const b=S/n,P=b*Math.PI*2,D=Math.sin(P),G=Math.cos(P);g.x=-E*G,g.y=_,g.z=E*D,a.push(g.x,g.y,g.z),m.set(-E*G,w,E*D),m.normalize(),l.push(m.x,m.y,m.z),c.push(b+T,M)}if(x>0){const S=(x-1)*v;for(let b=0;b<n;b++){const P=S+b,D=S+b+1,G=x*v+b,H=x*v+b+1;o.push(P,D,G),o.push(D,H,G)}}}this.setIndex(o),this.setAttribute("position",new qe(a,3)),this.setAttribute("normal",new qe(l,3)),this.setAttribute("uv",new qe(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new iu(e.radius,e.height,e.capSegments,e.radialSegments,e.heightSegments)}}class ru extends xt{constructor(e=1,t=32,i=0,n=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:n},t=Math.max(3,t);const r=[],o=[],a=[],l=[],c=new I,h=new Me;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let u=0,d=3;u<=t;u++,d+=3){const f=i+u/t*n;c.x=e*Math.cos(f),c.y=e*Math.sin(f),o.push(c.x,c.y,c.z),a.push(0,0,1),h.x=(o[d]/e+1)/2,h.y=(o[d+1]/e+1)/2,l.push(h.x,h.y)}for(let u=1;u<=t;u++)r.push(u,u+1,0);this.setIndex(r),this.setAttribute("position",new qe(o,3)),this.setAttribute("normal",new qe(a,3)),this.setAttribute("uv",new qe(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ru(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Pn extends xt{constructor(e=1,t=1,i=1,n=32,r=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:n,heightSegments:r,openEnded:o,thetaStart:a,thetaLength:l};const c=this;n=Math.floor(n),r=Math.floor(r);const h=[],u=[],d=[],f=[];let p=0;const v=[],m=i/2;let g=0;x(),o===!1&&(e>0&&y(!0),t>0&&y(!1)),this.setIndex(h),this.setAttribute("position",new qe(u,3)),this.setAttribute("normal",new qe(d,3)),this.setAttribute("uv",new qe(f,2));function x(){const _=new I,E=new I;let w=0;const M=(t-e)/i;for(let T=0;T<=r;T++){const S=[],b=T/r,P=b*(t-e)+e;for(let D=0;D<=n;D++){const G=D/n,H=G*l+a,q=Math.sin(H),F=Math.cos(H);E.x=P*q,E.y=-b*i+m,E.z=P*F,u.push(E.x,E.y,E.z),_.set(q,M,F).normalize(),d.push(_.x,_.y,_.z),f.push(G,1-b),S.push(p++)}v.push(S)}for(let T=0;T<n;T++)for(let S=0;S<r;S++){const b=v[S][T],P=v[S+1][T],D=v[S+1][T+1],G=v[S][T+1];(e>0||S!==0)&&(h.push(b,P,G),w+=3),(t>0||S!==r-1)&&(h.push(P,D,G),w+=3)}c.addGroup(g,w,0),g+=w}function y(_){const E=p,w=new Me,M=new I;let T=0;const S=_===!0?e:t,b=_===!0?1:-1;for(let D=1;D<=n;D++)u.push(0,m*b,0),d.push(0,b,0),f.push(.5,.5),p++;const P=p;for(let D=0;D<=n;D++){const H=D/n*l+a,q=Math.cos(H),F=Math.sin(H);M.x=S*F,M.y=m*b,M.z=S*q,u.push(M.x,M.y,M.z),d.push(0,b,0),w.x=q*.5+.5,w.y=F*.5*b+.5,f.push(w.x,w.y),p++}for(let D=0;D<n;D++){const G=E+D,H=P+D;_===!0?h.push(H,H+1,G):h.push(H+1,H,G),T+=3}c.addGroup(g,T,_===!0?1:2),g+=T}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Pn(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class wl extends Pn{constructor(e=1,t=1,i=32,n=1,r=!1,o=0,a=Math.PI*2){super(0,e,t,i,n,r,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:o,thetaLength:a}}static fromJSON(e){return new wl(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class ls extends xt{constructor(e=[],t=[],i=1,n=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:n};const r=[],o=[];a(n),c(i),h(),this.setAttribute("position",new qe(r,3)),this.setAttribute("normal",new qe(r.slice(),3)),this.setAttribute("uv",new qe(o,2)),n===0?this.computeVertexNormals():this.normalizeNormals();function a(x){const y=new I,_=new I,E=new I;for(let w=0;w<t.length;w+=3)f(t[w+0],y),f(t[w+1],_),f(t[w+2],E),l(y,_,E,x)}function l(x,y,_,E){const w=E+1,M=[];for(let T=0;T<=w;T++){M[T]=[];const S=x.clone().lerp(_,T/w),b=y.clone().lerp(_,T/w),P=w-T;for(let D=0;D<=P;D++)D===0&&T===w?M[T][D]=S:M[T][D]=S.clone().lerp(b,D/P)}for(let T=0;T<w;T++)for(let S=0;S<2*(w-T)-1;S++){const b=Math.floor(S/2);S%2===0?(d(M[T][b+1]),d(M[T+1][b]),d(M[T][b])):(d(M[T][b+1]),d(M[T+1][b+1]),d(M[T+1][b]))}}function c(x){const y=new I;for(let _=0;_<r.length;_+=3)y.x=r[_+0],y.y=r[_+1],y.z=r[_+2],y.normalize().multiplyScalar(x),r[_+0]=y.x,r[_+1]=y.y,r[_+2]=y.z}function h(){const x=new I;for(let y=0;y<r.length;y+=3){x.x=r[y+0],x.y=r[y+1],x.z=r[y+2];const _=m(x)/2/Math.PI+.5,E=g(x)/Math.PI+.5;o.push(_,1-E)}p(),u()}function u(){for(let x=0;x<o.length;x+=6){const y=o[x+0],_=o[x+2],E=o[x+4],w=Math.max(y,_,E),M=Math.min(y,_,E);w>.9&&M<.1&&(y<.2&&(o[x+0]+=1),_<.2&&(o[x+2]+=1),E<.2&&(o[x+4]+=1))}}function d(x){r.push(x.x,x.y,x.z)}function f(x,y){const _=x*3;y.x=e[_+0],y.y=e[_+1],y.z=e[_+2]}function p(){const x=new I,y=new I,_=new I,E=new I,w=new Me,M=new Me,T=new Me;for(let S=0,b=0;S<r.length;S+=9,b+=6){x.set(r[S+0],r[S+1],r[S+2]),y.set(r[S+3],r[S+4],r[S+5]),_.set(r[S+6],r[S+7],r[S+8]),w.set(o[b+0],o[b+1]),M.set(o[b+2],o[b+3]),T.set(o[b+4],o[b+5]),E.copy(x).add(y).add(_).divideScalar(3);const P=m(E);v(w,b+0,x,P),v(M,b+2,y,P),v(T,b+4,_,P)}}function v(x,y,_,E){E<0&&x.x===1&&(o[y]=x.x-1),_.x===0&&_.z===0&&(o[y]=E/2/Math.PI+.5)}function m(x){return Math.atan2(x.z,-x.x)}function g(x){return Math.atan2(-x.y,Math.sqrt(x.x*x.x+x.z*x.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ls(e.vertices,e.indices,e.radius,e.details)}}class su extends ls{constructor(e=1,t=0){const i=(1+Math.sqrt(5))/2,n=1/i,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-i,0,-n,i,0,n,-i,0,n,i,-n,-i,0,-n,i,0,n,-i,0,n,i,0,-i,0,-n,i,0,-n,-i,0,n,i,0,n],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,o,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new su(e.radius,e.detail)}}const sc=new I,oc=new I,cd=new I,ac=new yi;class jv extends xt{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const n=Math.pow(10,4),r=Math.cos(qs*t),o=e.getIndex(),a=e.getAttribute("position"),l=o?o.count:a.count,c=[0,0,0],h=["a","b","c"],u=new Array(3),d={},f=[];for(let p=0;p<l;p+=3){o?(c[0]=o.getX(p),c[1]=o.getX(p+1),c[2]=o.getX(p+2)):(c[0]=p,c[1]=p+1,c[2]=p+2);const{a:v,b:m,c:g}=ac;if(v.fromBufferAttribute(a,c[0]),m.fromBufferAttribute(a,c[1]),g.fromBufferAttribute(a,c[2]),ac.getNormal(cd),u[0]=`${Math.round(v.x*n)},${Math.round(v.y*n)},${Math.round(v.z*n)}`,u[1]=`${Math.round(m.x*n)},${Math.round(m.y*n)},${Math.round(m.z*n)}`,u[2]=`${Math.round(g.x*n)},${Math.round(g.y*n)},${Math.round(g.z*n)}`,!(u[0]===u[1]||u[1]===u[2]||u[2]===u[0]))for(let x=0;x<3;x++){const y=(x+1)%3,_=u[x],E=u[y],w=ac[h[x]],M=ac[h[y]],T=`${_}_${E}`,S=`${E}_${_}`;S in d&&d[S]?(cd.dot(d[S].normal)<=r&&(f.push(w.x,w.y,w.z),f.push(M.x,M.y,M.z)),d[S]=null):T in d||(d[T]={index0:c[x],index1:c[y],normal:cd.clone()})}}for(const p in d)if(d[p]){const{index0:v,index1:m}=d[p];sc.fromBufferAttribute(a,v),oc.fromBufferAttribute(a,m),f.push(sc.x,sc.y,sc.z),f.push(oc.x,oc.y,oc.z)}this.setAttribute("position",new qe(f,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class or{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(e,t){const i=this.getUtoTmapping(e);return this.getPoint(i,t)}getPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return t}getSpacedPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPointAt(i/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let i,n=this.getPoint(0),r=0;t.push(0);for(let o=1;o<=e;o++)i=this.getPoint(o/e),r+=i.distanceTo(n),t.push(r),n=i;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t=null){const i=this.getLengths();let n=0;const r=i.length;let o;t?o=t:o=e*i[r-1];let a=0,l=r-1,c;for(;a<=l;)if(n=Math.floor(a+(l-a)/2),c=i[n]-o,c<0)a=n+1;else if(c>0)l=n-1;else{l=n;break}if(n=l,i[n]===o)return n/(r-1);const h=i[n],d=i[n+1]-h,f=(o-h)/d;return(n+f)/(r-1)}getTangent(e,t){let n=e-1e-4,r=e+1e-4;n<0&&(n=0),r>1&&(r=1);const o=this.getPoint(n),a=this.getPoint(r),l=t||(o.isVector2?new Me:new I);return l.copy(a).sub(o).normalize(),l}getTangentAt(e,t){const i=this.getUtoTmapping(e);return this.getTangent(i,t)}computeFrenetFrames(e,t=!1){const i=new I,n=[],r=[],o=[],a=new I,l=new ct;for(let f=0;f<=e;f++){const p=f/e;n[f]=this.getTangentAt(p,new I)}r[0]=new I,o[0]=new I;let c=Number.MAX_VALUE;const h=Math.abs(n[0].x),u=Math.abs(n[0].y),d=Math.abs(n[0].z);h<=c&&(c=h,i.set(1,0,0)),u<=c&&(c=u,i.set(0,1,0)),d<=c&&i.set(0,0,1),a.crossVectors(n[0],i).normalize(),r[0].crossVectors(n[0],a),o[0].crossVectors(n[0],r[0]);for(let f=1;f<=e;f++){if(r[f]=r[f-1].clone(),o[f]=o[f-1].clone(),a.crossVectors(n[f-1],n[f]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(Ct(n[f-1].dot(n[f]),-1,1));r[f].applyMatrix4(l.makeRotationAxis(a,p))}o[f].crossVectors(n[f],r[f])}if(t===!0){let f=Math.acos(Ct(r[0].dot(r[e]),-1,1));f/=e,n[0].dot(a.crossVectors(r[0],r[e]))>0&&(f=-f);for(let p=1;p<=e;p++)r[p].applyMatrix4(l.makeRotationAxis(n[p],f*p)),o[p].crossVectors(n[p],r[p])}return{tangents:n,normals:r,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.7,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class ou extends or{constructor(e=0,t=0,i=1,n=1,r=0,o=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=n,this.aStartAngle=r,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(e,t=new Me){const i=t,n=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const o=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=n;for(;r>n;)r-=n;r<Number.EPSILON&&(o?r=0:r=n),this.aClockwise===!0&&!o&&(r===n?r=-n:r=r-n);const a=this.aStartAngle+e*r;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const h=Math.cos(this.aRotation),u=Math.sin(this.aRotation),d=l-this.aX,f=c-this.aY;l=d*h-f*u+this.aX,c=d*u+f*h+this.aY}return i.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class Yv extends ou{constructor(e,t,i,n,r,o){super(e,t,i,i,n,r,o),this.isArcCurve=!0,this.type="ArcCurve"}}function Qf(){let s=0,e=0,t=0,i=0;function n(r,o,a,l){s=r,e=a,t=-3*r+3*o-2*a-l,i=2*r-2*o+a+l}return{initCatmullRom:function(r,o,a,l,c){n(o,a,c*(a-r),c*(l-o))},initNonuniformCatmullRom:function(r,o,a,l,c,h,u){let d=(o-r)/c-(a-r)/(c+h)+(a-o)/h,f=(a-o)/h-(l-o)/(h+u)+(l-a)/u;d*=h,f*=h,n(o,a,d,f)},calc:function(r){const o=r*r,a=o*r;return s+e*r+t*o+i*a}}}const lc=new I,hd=new Qf,ud=new Qf,dd=new Qf;class qv extends or{constructor(e=[],t=!1,i="centripetal",n=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=i,this.tension=n}getPoint(e,t=new I){const i=t,n=this.points,r=n.length,o=(r-(this.closed?0:1))*e;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/r)+1)*r:l===0&&a===r-1&&(a=r-2,l=1);let c,h;this.closed||a>0?c=n[(a-1)%r]:(lc.subVectors(n[0],n[1]).add(n[0]),c=lc);const u=n[a%r],d=n[(a+1)%r];if(this.closed||a+2<r?h=n[(a+2)%r]:(lc.subVectors(n[r-1],n[r-2]).add(n[r-1]),h=lc),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let p=Math.pow(c.distanceToSquared(u),f),v=Math.pow(u.distanceToSquared(d),f),m=Math.pow(d.distanceToSquared(h),f);v<1e-4&&(v=1),p<1e-4&&(p=v),m<1e-4&&(m=v),hd.initNonuniformCatmullRom(c.x,u.x,d.x,h.x,p,v,m),ud.initNonuniformCatmullRom(c.y,u.y,d.y,h.y,p,v,m),dd.initNonuniformCatmullRom(c.z,u.z,d.z,h.z,p,v,m)}else this.curveType==="catmullrom"&&(hd.initCatmullRom(c.x,u.x,d.x,h.x,this.tension),ud.initCatmullRom(c.y,u.y,d.y,h.y,this.tension),dd.initCatmullRom(c.z,u.z,d.z,h.z,this.tension));return i.set(hd.calc(l),ud.calc(l),dd.calc(l)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(n.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const n=this.points[t];e.points.push(n.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(new I().fromArray(n))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function km(s,e,t,i,n){const r=(i-e)*.5,o=(n-t)*.5,a=s*s,l=s*a;return(2*t-2*i+r+o)*l+(-3*t+3*i-2*r-o)*a+r*s+t}function h1(s,e){const t=1-s;return t*t*e}function u1(s,e){return 2*(1-s)*s*e}function d1(s,e){return s*s*e}function Ga(s,e,t,i){return h1(s,e)+u1(s,t)+d1(s,i)}function f1(s,e){const t=1-s;return t*t*t*e}function p1(s,e){const t=1-s;return 3*t*t*s*e}function m1(s,e){return 3*(1-s)*s*s*e}function g1(s,e){return s*s*s*e}function Ha(s,e,t,i,n){return f1(s,e)+p1(s,t)+m1(s,i)+g1(s,n)}class $f extends or{constructor(e=new Me,t=new Me,i=new Me,n=new Me){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new Me){const i=t,n=this.v0,r=this.v1,o=this.v2,a=this.v3;return i.set(Ha(e,n.x,r.x,o.x,a.x),Ha(e,n.y,r.y,o.y,a.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Zv extends or{constructor(e=new I,t=new I,i=new I,n=new I){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new I){const i=t,n=this.v0,r=this.v1,o=this.v2,a=this.v3;return i.set(Ha(e,n.x,r.x,o.x,a.x),Ha(e,n.y,r.y,o.y,a.y),Ha(e,n.z,r.z,o.z,a.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class ep extends or{constructor(e=new Me,t=new Me){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new Me){const i=t;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new Me){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Jv extends or{constructor(e=new I,t=new I){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new I){const i=t;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new I){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class tp extends or{constructor(e=new Me,t=new Me,i=new Me){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new Me){const i=t,n=this.v0,r=this.v1,o=this.v2;return i.set(Ga(e,n.x,r.x,o.x),Ga(e,n.y,r.y,o.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class np extends or{constructor(e=new I,t=new I,i=new I){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new I){const i=t,n=this.v0,r=this.v1,o=this.v2;return i.set(Ga(e,n.x,r.x,o.x),Ga(e,n.y,r.y,o.y),Ga(e,n.z,r.z,o.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class ip extends or{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new Me){const i=t,n=this.points,r=(n.length-1)*e,o=Math.floor(r),a=r-o,l=n[o===0?o:o-1],c=n[o],h=n[o>n.length-2?n.length-1:o+1],u=n[o>n.length-3?n.length-1:o+2];return i.set(km(a,l.x,c.x,h.x,u.x),km(a,l.y,c.y,h.y,u.y)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(n.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const n=this.points[t];e.points.push(n.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(new Me().fromArray(n))}return this}}var Ih=Object.freeze({__proto__:null,ArcCurve:Yv,CatmullRomCurve3:qv,CubicBezierCurve:$f,CubicBezierCurve3:Zv,EllipseCurve:ou,LineCurve:ep,LineCurve3:Jv,QuadraticBezierCurve:tp,QuadraticBezierCurve3:np,SplineCurve:ip});class Kv extends or{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const i=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Ih[i](t,e))}return this}getPoint(e,t){const i=e*this.getLength(),n=this.getCurveLengths();let r=0;for(;r<n.length;){if(n[r]>=i){const o=n[r]-i,a=this.curves[r],l=a.getLength(),c=l===0?0:1-o/l;return a.getPointAt(c,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let i=0,n=this.curves.length;i<n;i++)t+=this.curves[i].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let i;for(let n=0,r=this.curves;n<r.length;n++){const o=r[n],a=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,l=o.getPoints(a);for(let c=0;c<l.length;c++){const h=l[c];i&&i.equals(h)||(t.push(h),i=h)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const n=e.curves[t];this.curves.push(n.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,i=this.curves.length;t<i;t++){const n=this.curves[t];e.curves.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const n=e.curves[t];this.curves.push(new Ih[n.type]().fromJSON(n))}return this}}class Dh extends Kv{constructor(e){super(),this.type="Path",this.currentPoint=new Me,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const i=new ep(this.currentPoint.clone(),new Me(e,t));return this.curves.push(i),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,i,n){const r=new tp(this.currentPoint.clone(),new Me(e,t),new Me(i,n));return this.curves.push(r),this.currentPoint.set(i,n),this}bezierCurveTo(e,t,i,n,r,o){const a=new $f(this.currentPoint.clone(),new Me(e,t),new Me(i,n),new Me(r,o));return this.curves.push(a),this.currentPoint.set(r,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),i=new ip(t);return this.curves.push(i),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,i,n,r,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+a,t+l,i,n,r,o),this}absarc(e,t,i,n,r,o){return this.absellipse(e,t,i,i,n,r,o),this}ellipse(e,t,i,n,r,o,a,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+c,t+h,i,n,r,o,a,l),this}absellipse(e,t,i,n,r,o,a,l){const c=new ou(e,t,i,n,r,o,a,l);if(this.curves.length>0){const u=c.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(c);const h=c.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Zs extends Dh{constructor(e){super(e),this.uuid=Ni(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let i=0,n=this.holes.length;i<n;i++)t[i]=this.holes[i].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const n=e.holes[t];this.holes.push(n.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,i=this.holes.length;t<i;t++){const n=this.holes[t];e.holes.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const n=e.holes[t];this.holes.push(new Dh().fromJSON(n))}return this}}function v1(s,e,t=2){const i=e&&e.length,n=i?e[0]*t:s.length;let r=Qv(s,0,n,t,!0);const o=[];if(!r||r.next===r.prev)return o;let a,l,c;if(i&&(r=S1(s,e,r,t)),s.length>80*t){a=1/0,l=1/0;let h=-1/0,u=-1/0;for(let d=t;d<n;d+=t){const f=s[d],p=s[d+1];f<a&&(a=f),p<l&&(l=p),f>h&&(h=f),p>u&&(u=p)}c=Math.max(h-a,u-l),c=c!==0?32767/c:0}return il(r,o,t,a,l,c,0),o}function Qv(s,e,t,i,n){let r;if(n===L1(s,e,t,i)>0)for(let o=e;o<t;o+=i)r=Bm(o/i|0,s[o],s[o+1],r);else for(let o=t-i;o>=e;o-=i)r=Bm(o/i|0,s[o],s[o+1],r);return r&&Ko(r,r.next)&&(sl(r),r=r.next),r}function no(s,e){if(!s)return s;e||(e=s);let t=s,i;do if(i=!1,!t.steiner&&(Ko(t,t.next)||un(t.prev,t,t.next)===0)){if(sl(t),t=e=t.prev,t===t.next)break;i=!0}else t=t.next;while(i||t!==e);return e}function il(s,e,t,i,n,r,o){if(!s)return;!o&&r&&A1(s,i,n,r);let a=s;for(;s.prev!==s.next;){const l=s.prev,c=s.next;if(r?y1(s,i,n,r):_1(s)){e.push(l.i,s.i,c.i),sl(s),s=c.next,a=c.next;continue}if(s=c,s===a){o?o===1?(s=x1(no(s),e),il(s,e,t,i,n,r,2)):o===2&&b1(s,e,t,i,n,r):il(no(s),e,t,i,n,r,1);break}}}function _1(s){const e=s.prev,t=s,i=s.next;if(un(e,t,i)>=0)return!1;const n=e.x,r=t.x,o=i.x,a=e.y,l=t.y,c=i.y,h=Math.min(n,r,o),u=Math.min(a,l,c),d=Math.max(n,r,o),f=Math.max(a,l,c);let p=i.next;for(;p!==e;){if(p.x>=h&&p.x<=d&&p.y>=u&&p.y<=f&&Ca(n,a,r,l,o,c,p.x,p.y)&&un(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function y1(s,e,t,i){const n=s.prev,r=s,o=s.next;if(un(n,r,o)>=0)return!1;const a=n.x,l=r.x,c=o.x,h=n.y,u=r.y,d=o.y,f=Math.min(a,l,c),p=Math.min(h,u,d),v=Math.max(a,l,c),m=Math.max(h,u,d),g=lf(f,p,e,t,i),x=lf(v,m,e,t,i);let y=s.prevZ,_=s.nextZ;for(;y&&y.z>=g&&_&&_.z<=x;){if(y.x>=f&&y.x<=v&&y.y>=p&&y.y<=m&&y!==n&&y!==o&&Ca(a,h,l,u,c,d,y.x,y.y)&&un(y.prev,y,y.next)>=0||(y=y.prevZ,_.x>=f&&_.x<=v&&_.y>=p&&_.y<=m&&_!==n&&_!==o&&Ca(a,h,l,u,c,d,_.x,_.y)&&un(_.prev,_,_.next)>=0))return!1;_=_.nextZ}for(;y&&y.z>=g;){if(y.x>=f&&y.x<=v&&y.y>=p&&y.y<=m&&y!==n&&y!==o&&Ca(a,h,l,u,c,d,y.x,y.y)&&un(y.prev,y,y.next)>=0)return!1;y=y.prevZ}for(;_&&_.z<=x;){if(_.x>=f&&_.x<=v&&_.y>=p&&_.y<=m&&_!==n&&_!==o&&Ca(a,h,l,u,c,d,_.x,_.y)&&un(_.prev,_,_.next)>=0)return!1;_=_.nextZ}return!0}function x1(s,e){let t=s;do{const i=t.prev,n=t.next.next;!Ko(i,n)&&e_(i,t,t.next,n)&&rl(i,n)&&rl(n,i)&&(e.push(i.i,t.i,n.i),sl(t),sl(t.next),t=s=n),t=t.next}while(t!==s);return no(t)}function b1(s,e,t,i,n,r){let o=s;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&P1(o,a)){let l=t_(o,a);o=no(o,o.next),l=no(l,l.next),il(o,e,t,i,n,r,0),il(l,e,t,i,n,r,0);return}a=a.next}o=o.next}while(o!==s)}function S1(s,e,t,i){const n=[];for(let r=0,o=e.length;r<o;r++){const a=e[r]*i,l=r<o-1?e[r+1]*i:s.length,c=Qv(s,a,l,i,!1);c===c.next&&(c.steiner=!0),n.push(R1(c))}n.sort(M1);for(let r=0;r<n.length;r++)t=w1(n[r],t);return t}function M1(s,e){let t=s.x-e.x;if(t===0&&(t=s.y-e.y,t===0)){const i=(s.next.y-s.y)/(s.next.x-s.x),n=(e.next.y-e.y)/(e.next.x-e.x);t=i-n}return t}function w1(s,e){const t=E1(s,e);if(!t)return e;const i=t_(t,s);return no(i,i.next),no(t,t.next)}function E1(s,e){let t=e;const i=s.x,n=s.y;let r=-1/0,o;if(Ko(s,t))return t;do{if(Ko(s,t.next))return t.next;if(n<=t.y&&n>=t.next.y&&t.next.y!==t.y){const u=t.x+(n-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(u<=i&&u>r&&(r=u,o=t.x<t.next.x?t:t.next,u===i))return o}t=t.next}while(t!==e);if(!o)return null;const a=o,l=o.x,c=o.y;let h=1/0;t=o;do{if(i>=t.x&&t.x>=l&&i!==t.x&&$v(n<c?i:r,n,l,c,n<c?r:i,n,t.x,t.y)){const u=Math.abs(n-t.y)/(i-t.x);rl(t,s)&&(u<h||u===h&&(t.x>o.x||t.x===o.x&&T1(o,t)))&&(o=t,h=u)}t=t.next}while(t!==a);return o}function T1(s,e){return un(s.prev,s,e.prev)<0&&un(e.next,s,s.next)<0}function A1(s,e,t,i){let n=s;do n.z===0&&(n.z=lf(n.x,n.y,e,t,i)),n.prevZ=n.prev,n.nextZ=n.next,n=n.next;while(n!==s);n.prevZ.nextZ=null,n.prevZ=null,C1(n)}function C1(s){let e,t=1;do{let i=s,n;s=null;let r=null;for(e=0;i;){e++;let o=i,a=0;for(let c=0;c<t&&(a++,o=o.nextZ,!!o);c++);let l=t;for(;a>0||l>0&&o;)a!==0&&(l===0||!o||i.z<=o.z)?(n=i,i=i.nextZ,a--):(n=o,o=o.nextZ,l--),r?r.nextZ=n:s=n,n.prevZ=r,r=n;i=o}r.nextZ=null,t*=2}while(e>1);return s}function lf(s,e,t,i,n){return s=(s-t)*n|0,e=(e-i)*n|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function R1(s){let e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function $v(s,e,t,i,n,r,o,a){return(n-o)*(e-a)>=(s-o)*(r-a)&&(s-o)*(i-a)>=(t-o)*(e-a)&&(t-o)*(r-a)>=(n-o)*(i-a)}function Ca(s,e,t,i,n,r,o,a){return!(s===o&&e===a)&&$v(s,e,t,i,n,r,o,a)}function P1(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!I1(s,e)&&(rl(s,e)&&rl(e,s)&&D1(s,e)&&(un(s.prev,s,e.prev)||un(s,e.prev,e))||Ko(s,e)&&un(s.prev,s,s.next)>0&&un(e.prev,e,e.next)>0)}function un(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function Ko(s,e){return s.x===e.x&&s.y===e.y}function e_(s,e,t,i){const n=hc(un(s,e,t)),r=hc(un(s,e,i)),o=hc(un(t,i,s)),a=hc(un(t,i,e));return!!(n!==r&&o!==a||n===0&&cc(s,t,e)||r===0&&cc(s,i,e)||o===0&&cc(t,s,i)||a===0&&cc(t,e,i))}function cc(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function hc(s){return s>0?1:s<0?-1:0}function I1(s,e){let t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&e_(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function rl(s,e){return un(s.prev,s,s.next)<0?un(s,e,s.next)>=0&&un(s,s.prev,e)>=0:un(s,e,s.prev)<0||un(s,s.next,e)<0}function D1(s,e){let t=s,i=!1;const n=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&n<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(i=!i),t=t.next;while(t!==s);return i}function t_(s,e){const t=cf(s.i,s.x,s.y),i=cf(e.i,e.x,e.y),n=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=n,n.prev=t,i.next=t,t.prev=i,r.next=i,i.prev=r,i}function Bm(s,e,t,i){const n=cf(s,e,t);return i?(n.next=i.next,n.prev=i,i.next.prev=n,i.next=n):(n.prev=n,n.next=n),n}function sl(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function cf(s,e,t){return{i:s,x:e,y:t,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function L1(s,e,t,i){let n=0;for(let r=e,o=t-i;r<t;r+=i)n+=(s[o]-s[r])*(s[r+1]+s[o+1]),o=r;return n}class U1{static triangulate(e,t,i=2){return v1(e,t,i)}}class ir{static area(e){const t=e.length;let i=0;for(let n=t-1,r=0;r<t;n=r++)i+=e[n].x*e[r].y-e[r].x*e[n].y;return i*.5}static isClockWise(e){return ir.area(e)<0}static triangulateShape(e,t){const i=[],n=[],r=[];zm(e),Vm(i,e);let o=e.length;t.forEach(zm);for(let l=0;l<t.length;l++)n.push(o),o+=t[l].length,Vm(i,t[l]);const a=U1.triangulate(i,n);for(let l=0;l<a.length;l+=3)r.push(a.slice(l,l+3));return r}}function zm(s){const e=s.length;e>2&&s[e-1].equals(s[0])&&s.pop()}function Vm(s,e){for(let t=0;t<e.length;t++)s.push(e[t].x),s.push(e[t].y)}class au extends xt{constructor(e=new Zs([new Me(.5,.5),new Me(-.5,.5),new Me(-.5,-.5),new Me(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const i=this,n=[],r=[];for(let a=0,l=e.length;a<l;a++){const c=e[a];o(c)}this.setAttribute("position",new qe(n,3)),this.setAttribute("uv",new qe(r,2)),this.computeVertexNormals();function o(a){const l=[],c=t.curveSegments!==void 0?t.curveSegments:12,h=t.steps!==void 0?t.steps:1,u=t.depth!==void 0?t.depth:1;let d=t.bevelEnabled!==void 0?t.bevelEnabled:!0,f=t.bevelThickness!==void 0?t.bevelThickness:.2,p=t.bevelSize!==void 0?t.bevelSize:f-.1,v=t.bevelOffset!==void 0?t.bevelOffset:0,m=t.bevelSegments!==void 0?t.bevelSegments:3;const g=t.extrudePath,x=t.UVGenerator!==void 0?t.UVGenerator:N1;let y,_=!1,E,w,M,T;g&&(y=g.getSpacedPoints(h),_=!0,d=!1,E=g.computeFrenetFrames(h,!1),w=new I,M=new I,T=new I),d||(m=0,f=0,p=0,v=0);const S=a.extractPoints(c);let b=S.shape;const P=S.holes;if(!ir.isClockWise(b)){b=b.reverse();for(let U=0,fe=P.length;U<fe;U++){const he=P[U];ir.isClockWise(he)&&(P[U]=he.reverse())}}function G(U){const he=10000000000000001e-36;let xe=U[0];for(let re=1;re<=U.length;re++){const Te=re%U.length,pe=U[Te],ce=pe.x-xe.x,ke=pe.y-xe.y,O=ce*ce+ke*ke,A=Math.max(Math.abs(pe.x),Math.abs(pe.y),Math.abs(xe.x),Math.abs(xe.y)),ee=he*A*A;if(O<=ee){U.splice(Te,1),re--;continue}xe=pe}}G(b),P.forEach(G);const H=P.length,q=b;for(let U=0;U<H;U++){const fe=P[U];b=b.concat(fe)}function F(U,fe,he){return fe||console.error("THREE.ExtrudeGeometry: vec does not exist"),U.clone().addScaledVector(fe,he)}const te=b.length;function Y(U,fe,he){let xe,re,Te;const pe=U.x-fe.x,ce=U.y-fe.y,ke=he.x-U.x,O=he.y-U.y,A=pe*pe+ce*ce,ee=pe*O-ce*ke;if(Math.abs(ee)>Number.EPSILON){const de=Math.sqrt(A),ue=Math.sqrt(ke*ke+O*O),ae=fe.x-ce/de,De=fe.y+pe/de,Pe=he.x-O/ue,He=he.y+ke/ue,je=((Pe-ae)*O-(He-De)*ke)/(pe*O-ce*ke);xe=ae+pe*je-U.x,re=De+ce*je-U.y;const Se=xe*xe+re*re;if(Se<=2)return new Me(xe,re);Te=Math.sqrt(Se/2)}else{let de=!1;pe>Number.EPSILON?ke>Number.EPSILON&&(de=!0):pe<-Number.EPSILON?ke<-Number.EPSILON&&(de=!0):Math.sign(ce)===Math.sign(O)&&(de=!0),de?(xe=-ce,re=pe,Te=Math.sqrt(A)):(xe=pe,re=ce,Te=Math.sqrt(A/2))}return new Me(xe/Te,re/Te)}const j=[];for(let U=0,fe=q.length,he=fe-1,xe=U+1;U<fe;U++,he++,xe++)he===fe&&(he=0),xe===fe&&(xe=0),j[U]=Y(q[U],q[he],q[xe]);const $=[];let L,Z=j.concat();for(let U=0,fe=H;U<fe;U++){const he=P[U];L=[];for(let xe=0,re=he.length,Te=re-1,pe=xe+1;xe<re;xe++,Te++,pe++)Te===re&&(Te=0),pe===re&&(pe=0),L[xe]=Y(he[xe],he[Te],he[pe]);$.push(L),Z=Z.concat(L)}let Q;if(m===0)Q=ir.triangulateShape(q,P);else{const U=[],fe=[];for(let he=0;he<m;he++){const xe=he/m,re=f*Math.cos(xe*Math.PI/2),Te=p*Math.sin(xe*Math.PI/2)+v;for(let pe=0,ce=q.length;pe<ce;pe++){const ke=F(q[pe],j[pe],Te);me(ke.x,ke.y,-re),xe===0&&U.push(ke)}for(let pe=0,ce=H;pe<ce;pe++){const ke=P[pe];L=$[pe];const O=[];for(let A=0,ee=ke.length;A<ee;A++){const de=F(ke[A],L[A],Te);me(de.x,de.y,-re),xe===0&&O.push(de)}xe===0&&fe.push(O)}}Q=ir.triangulateShape(U,fe)}const k=Q.length,W=p+v;for(let U=0;U<te;U++){const fe=d?F(b[U],Z[U],W):b[U];_?(M.copy(E.normals[0]).multiplyScalar(fe.x),w.copy(E.binormals[0]).multiplyScalar(fe.y),T.copy(y[0]).add(M).add(w),me(T.x,T.y,T.z)):me(fe.x,fe.y,0)}for(let U=1;U<=h;U++)for(let fe=0;fe<te;fe++){const he=d?F(b[fe],Z[fe],W):b[fe];_?(M.copy(E.normals[U]).multiplyScalar(he.x),w.copy(E.binormals[U]).multiplyScalar(he.y),T.copy(y[U]).add(M).add(w),me(T.x,T.y,T.z)):me(he.x,he.y,u/h*U)}for(let U=m-1;U>=0;U--){const fe=U/m,he=f*Math.cos(fe*Math.PI/2),xe=p*Math.sin(fe*Math.PI/2)+v;for(let re=0,Te=q.length;re<Te;re++){const pe=F(q[re],j[re],xe);me(pe.x,pe.y,u+he)}for(let re=0,Te=P.length;re<Te;re++){const pe=P[re];L=$[re];for(let ce=0,ke=pe.length;ce<ke;ce++){const O=F(pe[ce],L[ce],xe);_?me(O.x,O.y+y[h-1].y,y[h-1].x+he):me(O.x,O.y,u+he)}}}J(),X();function J(){const U=n.length/3;if(d){let fe=0,he=te*fe;for(let xe=0;xe<k;xe++){const re=Q[xe];be(re[2]+he,re[1]+he,re[0]+he)}fe=h+m*2,he=te*fe;for(let xe=0;xe<k;xe++){const re=Q[xe];be(re[0]+he,re[1]+he,re[2]+he)}}else{for(let fe=0;fe<k;fe++){const he=Q[fe];be(he[2],he[1],he[0])}for(let fe=0;fe<k;fe++){const he=Q[fe];be(he[0]+te*h,he[1]+te*h,he[2]+te*h)}}i.addGroup(U,n.length/3-U,0)}function X(){const U=n.length/3;let fe=0;ne(q,fe),fe+=q.length;for(let he=0,xe=P.length;he<xe;he++){const re=P[he];ne(re,fe),fe+=re.length}i.addGroup(U,n.length/3-U,1)}function ne(U,fe){let he=U.length;for(;--he>=0;){const xe=he;let re=he-1;re<0&&(re=U.length-1);for(let Te=0,pe=h+m*2;Te<pe;Te++){const ce=te*Te,ke=te*(Te+1),O=fe+xe+ce,A=fe+re+ce,ee=fe+re+ke,de=fe+xe+ke;we(O,A,ee,de)}}}function me(U,fe,he){l.push(U),l.push(fe),l.push(he)}function be(U,fe,he){ve(U),ve(fe),ve(he);const xe=n.length/3,re=x.generateTopUV(i,n,xe-3,xe-2,xe-1);Ie(re[0]),Ie(re[1]),Ie(re[2])}function we(U,fe,he,xe){ve(U),ve(fe),ve(xe),ve(fe),ve(he),ve(xe);const re=n.length/3,Te=x.generateSideWallUV(i,n,re-6,re-3,re-2,re-1);Ie(Te[0]),Ie(Te[1]),Ie(Te[3]),Ie(Te[1]),Ie(Te[2]),Ie(Te[3])}function ve(U){n.push(l[U*3+0]),n.push(l[U*3+1]),n.push(l[U*3+2])}function Ie(U){r.push(U.x),r.push(U.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,i=this.parameters.options;return O1(t,i,e)}static fromJSON(e,t){const i=[];for(let r=0,o=e.shapes.length;r<o;r++){const a=t[e.shapes[r]];i.push(a)}const n=e.options.extrudePath;return n!==void 0&&(e.options.extrudePath=new Ih[n.type]().fromJSON(n)),new au(i,e.options)}}const N1={generateTopUV:function(s,e,t,i,n){const r=e[t*3],o=e[t*3+1],a=e[i*3],l=e[i*3+1],c=e[n*3],h=e[n*3+1];return[new Me(r,o),new Me(a,l),new Me(c,h)]},generateSideWallUV:function(s,e,t,i,n,r){const o=e[t*3],a=e[t*3+1],l=e[t*3+2],c=e[i*3],h=e[i*3+1],u=e[i*3+2],d=e[n*3],f=e[n*3+1],p=e[n*3+2],v=e[r*3],m=e[r*3+1],g=e[r*3+2];return Math.abs(a-h)<Math.abs(o-c)?[new Me(o,1-l),new Me(c,1-u),new Me(d,1-p),new Me(v,1-g)]:[new Me(a,1-l),new Me(h,1-u),new Me(f,1-p),new Me(m,1-g)]}};function O1(s,e,t){if(t.shapes=[],Array.isArray(s))for(let i=0,n=s.length;i<n;i++){const r=s[i];t.shapes.push(r.uuid)}else t.shapes.push(s.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class lu extends ls{constructor(e=1,t=0){const i=(1+Math.sqrt(5))/2,n=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(n,r,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new lu(e.radius,e.detail)}}class cu extends xt{constructor(e=[new Me(0,-.5),new Me(.5,0),new Me(0,.5)],t=12,i=0,n=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:i,phiLength:n},t=Math.floor(t),n=Ct(n,0,Math.PI*2);const r=[],o=[],a=[],l=[],c=[],h=1/t,u=new I,d=new Me,f=new I,p=new I,v=new I;let m=0,g=0;for(let x=0;x<=e.length-1;x++)switch(x){case 0:m=e[x+1].x-e[x].x,g=e[x+1].y-e[x].y,f.x=g*1,f.y=-m,f.z=g*0,v.copy(f),f.normalize(),l.push(f.x,f.y,f.z);break;case e.length-1:l.push(v.x,v.y,v.z);break;default:m=e[x+1].x-e[x].x,g=e[x+1].y-e[x].y,f.x=g*1,f.y=-m,f.z=g*0,p.copy(f),f.x+=v.x,f.y+=v.y,f.z+=v.z,f.normalize(),l.push(f.x,f.y,f.z),v.copy(p)}for(let x=0;x<=t;x++){const y=i+x*h*n,_=Math.sin(y),E=Math.cos(y);for(let w=0;w<=e.length-1;w++){u.x=e[w].x*_,u.y=e[w].y,u.z=e[w].x*E,o.push(u.x,u.y,u.z),d.x=x/t,d.y=w/(e.length-1),a.push(d.x,d.y);const M=l[3*w+0]*_,T=l[3*w+1],S=l[3*w+0]*E;c.push(M,T,S)}}for(let x=0;x<t;x++)for(let y=0;y<e.length-1;y++){const _=y+x*e.length,E=_,w=_+e.length,M=_+e.length+1,T=_+1;r.push(E,w,T),r.push(M,T,w)}this.setIndex(r),this.setAttribute("position",new qe(o,3)),this.setAttribute("uv",new qe(a,2)),this.setAttribute("normal",new qe(c,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new cu(e.points,e.segments,e.phiStart,e.phiLength)}}class Nr extends ls{constructor(e=1,t=0){const i=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],n=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(i,n,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Nr(e.radius,e.detail)}}class ar extends xt{constructor(e=1,t=1,i=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:n};const r=e/2,o=t/2,a=Math.floor(i),l=Math.floor(n),c=a+1,h=l+1,u=e/a,d=t/l,f=[],p=[],v=[],m=[];for(let g=0;g<h;g++){const x=g*d-o;for(let y=0;y<c;y++){const _=y*u-r;p.push(_,-x,0),v.push(0,0,1),m.push(y/a),m.push(1-g/l)}}for(let g=0;g<l;g++)for(let x=0;x<a;x++){const y=x+c*g,_=x+c*(g+1),E=x+1+c*(g+1),w=x+1+c*g;f.push(y,_,w),f.push(_,E,w)}this.setIndex(f),this.setAttribute("position",new qe(p,3)),this.setAttribute("normal",new qe(v,3)),this.setAttribute("uv",new qe(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ar(e.width,e.height,e.widthSegments,e.heightSegments)}}class hu extends xt{constructor(e=.5,t=1,i=32,n=1,r=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:n,thetaStart:r,thetaLength:o},i=Math.max(3,i),n=Math.max(1,n);const a=[],l=[],c=[],h=[];let u=e;const d=(t-e)/n,f=new I,p=new Me;for(let v=0;v<=n;v++){for(let m=0;m<=i;m++){const g=r+m/i*o;f.x=u*Math.cos(g),f.y=u*Math.sin(g),l.push(f.x,f.y,f.z),c.push(0,0,1),p.x=(f.x/t+1)/2,p.y=(f.y/t+1)/2,h.push(p.x,p.y)}u+=d}for(let v=0;v<n;v++){const m=v*(i+1);for(let g=0;g<i;g++){const x=g+m,y=x,_=x+i+1,E=x+i+2,w=x+1;a.push(y,_,w),a.push(_,E,w)}}this.setIndex(a),this.setAttribute("position",new qe(l,3)),this.setAttribute("normal",new qe(c,3)),this.setAttribute("uv",new qe(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new hu(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class uu extends xt{constructor(e=new Zs([new Me(0,.5),new Me(-.5,-.5),new Me(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const i=[],n=[],r=[],o=[];let a=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let h=0;h<e.length;h++)c(e[h]),this.addGroup(a,l,h),a+=l,l=0;this.setIndex(i),this.setAttribute("position",new qe(n,3)),this.setAttribute("normal",new qe(r,3)),this.setAttribute("uv",new qe(o,2));function c(h){const u=n.length/3,d=h.extractPoints(t);let f=d.shape;const p=d.holes;ir.isClockWise(f)===!1&&(f=f.reverse());for(let m=0,g=p.length;m<g;m++){const x=p[m];ir.isClockWise(x)===!0&&(p[m]=x.reverse())}const v=ir.triangulateShape(f,p);for(let m=0,g=p.length;m<g;m++){const x=p[m];f=f.concat(x)}for(let m=0,g=f.length;m<g;m++){const x=f[m];n.push(x.x,x.y,0),r.push(0,0,1),o.push(x.x,x.y)}for(let m=0,g=v.length;m<g;m++){const x=v[m],y=x[0]+u,_=x[1]+u,E=x[2]+u;i.push(y,_,E),l+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return F1(t,e)}static fromJSON(e,t){const i=[];for(let n=0,r=e.shapes.length;n<r;n++){const o=t[e.shapes[n]];i.push(o)}return new uu(i,e.curveSegments)}}function F1(s,e){if(e.shapes=[],Array.isArray(s))for(let t=0,i=s.length;t<i;t++){const n=s[t];e.shapes.push(n.uuid)}else e.shapes.push(s.uuid);return e}class lo extends xt{constructor(e=1,t=32,i=16,n=0,r=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:n,phiLength:r,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));const l=Math.min(o+a,Math.PI);let c=0;const h=[],u=new I,d=new I,f=[],p=[],v=[],m=[];for(let g=0;g<=i;g++){const x=[],y=g/i;let _=0;g===0&&o===0?_=.5/t:g===i&&l===Math.PI&&(_=-.5/t);for(let E=0;E<=t;E++){const w=E/t;u.x=-e*Math.cos(n+w*r)*Math.sin(o+y*a),u.y=e*Math.cos(o+y*a),u.z=e*Math.sin(n+w*r)*Math.sin(o+y*a),p.push(u.x,u.y,u.z),d.copy(u).normalize(),v.push(d.x,d.y,d.z),m.push(w+_,1-y),x.push(c++)}h.push(x)}for(let g=0;g<i;g++)for(let x=0;x<t;x++){const y=h[g][x+1],_=h[g][x],E=h[g+1][x],w=h[g+1][x+1];(g!==0||o>0)&&f.push(y,_,w),(g!==i-1||l<Math.PI)&&f.push(_,E,w)}this.setIndex(f),this.setAttribute("position",new qe(p,3)),this.setAttribute("normal",new qe(v,3)),this.setAttribute("uv",new qe(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new lo(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class du extends ls{constructor(e=1,t=0){const i=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],n=[2,1,0,0,3,2,1,3,0,2,3,1];super(i,n,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new du(e.radius,e.detail)}}class Dr extends xt{constructor(e=1,t=.4,i=12,n=48,r=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:n,arc:r},i=Math.floor(i),n=Math.floor(n);const o=[],a=[],l=[],c=[],h=new I,u=new I,d=new I;for(let f=0;f<=i;f++)for(let p=0;p<=n;p++){const v=p/n*r,m=f/i*Math.PI*2;u.x=(e+t*Math.cos(m))*Math.cos(v),u.y=(e+t*Math.cos(m))*Math.sin(v),u.z=t*Math.sin(m),a.push(u.x,u.y,u.z),h.x=e*Math.cos(v),h.y=e*Math.sin(v),d.subVectors(u,h).normalize(),l.push(d.x,d.y,d.z),c.push(p/n),c.push(f/i)}for(let f=1;f<=i;f++)for(let p=1;p<=n;p++){const v=(n+1)*f+p-1,m=(n+1)*(f-1)+p-1,g=(n+1)*(f-1)+p,x=(n+1)*f+p;o.push(v,m,x),o.push(m,g,x)}this.setIndex(o),this.setAttribute("position",new qe(a,3)),this.setAttribute("normal",new qe(l,3)),this.setAttribute("uv",new qe(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Dr(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class fu extends xt{constructor(e=1,t=.4,i=64,n=8,r=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:n,p:r,q:o},i=Math.floor(i),n=Math.floor(n);const a=[],l=[],c=[],h=[],u=new I,d=new I,f=new I,p=new I,v=new I,m=new I,g=new I;for(let y=0;y<=i;++y){const _=y/i*r*Math.PI*2;x(_,r,o,e,f),x(_+.01,r,o,e,p),m.subVectors(p,f),g.addVectors(p,f),v.crossVectors(m,g),g.crossVectors(v,m),v.normalize(),g.normalize();for(let E=0;E<=n;++E){const w=E/n*Math.PI*2,M=-t*Math.cos(w),T=t*Math.sin(w);u.x=f.x+(M*g.x+T*v.x),u.y=f.y+(M*g.y+T*v.y),u.z=f.z+(M*g.z+T*v.z),l.push(u.x,u.y,u.z),d.subVectors(u,f).normalize(),c.push(d.x,d.y,d.z),h.push(y/i),h.push(E/n)}}for(let y=1;y<=i;y++)for(let _=1;_<=n;_++){const E=(n+1)*(y-1)+(_-1),w=(n+1)*y+(_-1),M=(n+1)*y+_,T=(n+1)*(y-1)+_;a.push(E,w,T),a.push(w,M,T)}this.setIndex(a),this.setAttribute("position",new qe(l,3)),this.setAttribute("normal",new qe(c,3)),this.setAttribute("uv",new qe(h,2));function x(y,_,E,w,M){const T=Math.cos(y),S=Math.sin(y),b=E/_*y,P=Math.cos(b);M.x=w*(2+P)*.5*T,M.y=w*(2+P)*S*.5,M.z=w*Math.sin(b)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new fu(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class pu extends xt{constructor(e=new np(new I(-1,-1,0),new I(-1,1,0),new I(1,1,0)),t=64,i=1,n=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:n,closed:r};const o=e.computeFrenetFrames(t,r);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new I,l=new I,c=new Me;let h=new I;const u=[],d=[],f=[],p=[];v(),this.setIndex(p),this.setAttribute("position",new qe(u,3)),this.setAttribute("normal",new qe(d,3)),this.setAttribute("uv",new qe(f,2));function v(){for(let y=0;y<t;y++)m(y);m(r===!1?t:0),x(),g()}function m(y){h=e.getPointAt(y/t,h);const _=o.normals[y],E=o.binormals[y];for(let w=0;w<=n;w++){const M=w/n*Math.PI*2,T=Math.sin(M),S=-Math.cos(M);l.x=S*_.x+T*E.x,l.y=S*_.y+T*E.y,l.z=S*_.z+T*E.z,l.normalize(),d.push(l.x,l.y,l.z),a.x=h.x+i*l.x,a.y=h.y+i*l.y,a.z=h.z+i*l.z,u.push(a.x,a.y,a.z)}}function g(){for(let y=1;y<=t;y++)for(let _=1;_<=n;_++){const E=(n+1)*(y-1)+(_-1),w=(n+1)*y+(_-1),M=(n+1)*y+_,T=(n+1)*(y-1)+_;p.push(E,w,T),p.push(w,M,T)}}function x(){for(let y=0;y<=t;y++)for(let _=0;_<=n;_++)c.x=y/t,c.y=_/n,f.push(c.x,c.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new pu(new Ih[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class rp extends xt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],i=new Set,n=new I,r=new I;if(e.index!==null){const o=e.attributes.position,a=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:a.count,materialIndex:0}]);for(let c=0,h=l.length;c<h;++c){const u=l[c],d=u.start,f=u.count;for(let p=d,v=d+f;p<v;p+=3)for(let m=0;m<3;m++){const g=a.getX(p+m),x=a.getX(p+(m+1)%3);n.fromBufferAttribute(o,g),r.fromBufferAttribute(o,x),Gm(n,r,i)===!0&&(t.push(n.x,n.y,n.z),t.push(r.x,r.y,r.z))}}}else{const o=e.attributes.position;for(let a=0,l=o.count/3;a<l;a++)for(let c=0;c<3;c++){const h=3*a+c,u=3*a+(c+1)%3;n.fromBufferAttribute(o,h),r.fromBufferAttribute(o,u),Gm(n,r,i)===!0&&(t.push(n.x,n.y,n.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new qe(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function Gm(s,e,t){const i=`${s.x},${s.y},${s.z}-${e.x},${e.y},${e.z}`,n=`${e.x},${e.y},${e.z}-${s.x},${s.y},${s.z}`;return t.has(i)===!0||t.has(n)===!0?!1:(t.add(i),t.add(n),!0)}var Hm=Object.freeze({__proto__:null,BoxGeometry:gn,CapsuleGeometry:iu,CircleGeometry:ru,ConeGeometry:wl,CylinderGeometry:Pn,DodecahedronGeometry:su,EdgesGeometry:jv,ExtrudeGeometry:au,IcosahedronGeometry:lu,LatheGeometry:cu,OctahedronGeometry:Nr,PlaneGeometry:ar,PolyhedronGeometry:ls,RingGeometry:hu,ShapeGeometry:uu,SphereGeometry:lo,TetrahedronGeometry:du,TorusGeometry:Dr,TorusKnotGeometry:fu,TubeGeometry:pu,WireframeGeometry:rp});class n_ extends kn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Ge(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class i_ extends wi{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class sp extends kn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new Ge(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=os,this.normalScale=new Me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Mi,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class r_ extends sp{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Me(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Ct(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Ge(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Ge(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Ge(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class ol extends kn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Ge(16777215),this.specular=new Ge(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=os,this.normalScale=new Me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Mi,this.combine=vl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class s_ extends kn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ge(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=os,this.normalScale=new Me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class o_ extends kn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=os,this.normalScale=new Me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class op extends kn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Ge(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=os,this.normalScale=new Me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Mi,this.combine=vl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class El extends kn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Mv,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class mu extends kn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class a_ extends kn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ge(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=os,this.normalScale=new Me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class l_ extends En{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function js(s,e){return!s||s.constructor===e?s:typeof e.BYTES_PER_ELEMENT=="number"?new e(s):Array.prototype.slice.call(s)}function c_(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}function h_(s){function e(n,r){return s[n]-s[r]}const t=s.length,i=new Array(t);for(let n=0;n!==t;++n)i[n]=n;return i.sort(e),i}function hf(s,e,t){const i=s.length,n=new s.constructor(i);for(let r=0,o=0;o!==i;++r){const a=t[r]*e;for(let l=0;l!==e;++l)n[o++]=s[a+l]}return n}function ap(s,e,t,i){let n=1,r=s[0];for(;r!==void 0&&r[i]===void 0;)r=s[n++];if(r===void 0)return;let o=r[i];if(o!==void 0)if(Array.isArray(o))do o=r[i],o!==void 0&&(e.push(r.time),t.push(...o)),r=s[n++];while(r!==void 0);else if(o.toArray!==void 0)do o=r[i],o!==void 0&&(e.push(r.time),o.toArray(t,t.length)),r=s[n++];while(r!==void 0);else do o=r[i],o!==void 0&&(e.push(r.time),t.push(o)),r=s[n++];while(r!==void 0)}function k1(s,e,t,i,n=30){const r=s.clone();r.name=e;const o=[];for(let l=0;l<r.tracks.length;++l){const c=r.tracks[l],h=c.getValueSize(),u=[],d=[];for(let f=0;f<c.times.length;++f){const p=c.times[f]*n;if(!(p<t||p>=i)){u.push(c.times[f]);for(let v=0;v<h;++v)d.push(c.values[f*h+v])}}u.length!==0&&(c.times=js(u,c.times.constructor),c.values=js(d,c.values.constructor),o.push(c))}r.tracks=o;let a=1/0;for(let l=0;l<r.tracks.length;++l)a>r.tracks[l].times[0]&&(a=r.tracks[l].times[0]);for(let l=0;l<r.tracks.length;++l)r.tracks[l].shift(-1*a);return r.resetDuration(),r}function B1(s,e=0,t=s,i=30){i<=0&&(i=30);const n=t.tracks.length,r=e/i;for(let o=0;o<n;++o){const a=t.tracks[o],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const c=s.tracks.find(function(g){return g.name===a.name&&g.ValueTypeName===l});if(c===void 0)continue;let h=0;const u=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=u/3);let d=0;const f=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=f/3);const p=a.times.length-1;let v;if(r<=a.times[0]){const g=h,x=u-h;v=a.values.slice(g,x)}else if(r>=a.times[p]){const g=p*u+h,x=g+u-h;v=a.values.slice(g,x)}else{const g=a.createInterpolant(),x=h,y=u-h;g.evaluate(r),v=g.resultBuffer.slice(x,y)}l==="quaternion"&&new Ht().fromArray(v).normalize().conjugate().toArray(v);const m=c.times.length;for(let g=0;g<m;++g){const x=g*f+d;if(l==="quaternion")Ht.multiplyQuaternionsFlat(c.values,x,v,0,c.values,x);else{const y=f-d*2;for(let _=0;_<y;++_)c.values[x+_]-=v[_]}}}return s.blendMode=Hf,s}class z1{static convertArray(e,t){return js(e,t)}static isTypedArray(e){return c_(e)}static getKeyframeOrder(e){return h_(e)}static sortedArray(e,t,i){return hf(e,t,i)}static flattenJSON(e,t,i,n){ap(e,t,i,n)}static subclip(e,t,i,n,r=30){return k1(e,t,i,n,r)}static makeClipAdditive(e,t=0,i=e,n=30){return B1(e,t,i,n)}}class Tl{constructor(e,t,i,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=n!==void 0?n:new t.constructor(i),this.sampleValues=t,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let i=this._cachedIndex,n=t[i],r=t[i-1];e:{t:{let o;n:{i:if(!(e<n)){for(let a=i+2;;){if(n===void 0){if(e<r)break i;return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===a)break;if(r=n,n=t[++i],e<n)break t}o=t.length;break n}if(!(e>=r)){const a=t[1];e<a&&(i=2,r=a);for(let l=i-2;;){if(r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===l)break;if(n=r,r=t[--i-1],e>=r)break t}o=i,i=0;break n}break e}for(;i<o;){const a=i+o>>>1;e<t[a]?o=a:i=a+1}if(n=t[i],r=t[i-1],r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===void 0)return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,r,n)}return this.interpolate_(i,r,e,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,i=this.sampleValues,n=this.valueSize,r=e*n;for(let o=0;o!==n;++o)t[o]=i[r+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class u_ extends Tl{constructor(e,t,i,n){super(e,t,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Hs,endingEnd:Hs}}intervalChanged_(e,t,i){const n=this.parameterPositions;let r=e-2,o=e+1,a=n[r],l=n[o];if(a===void 0)switch(this.getSettings_().endingStart){case Ws:r=e,a=2*t-i;break;case Qa:r=n.length-2,a=t+n[r]-n[r+1];break;default:r=e,a=i}if(l===void 0)switch(this.getSettings_().endingEnd){case Ws:o=e,l=2*i-t;break;case Qa:o=1,l=i+n[1]-n[0];break;default:o=e-1,l=t}const c=(i-t)*.5,h=this.valueSize;this._weightPrev=c/(t-a),this._weightNext=c/(l-i),this._offsetPrev=r*h,this._offsetNext=o*h}interpolate_(e,t,i,n){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,h=this._offsetPrev,u=this._offsetNext,d=this._weightPrev,f=this._weightNext,p=(i-t)/(n-t),v=p*p,m=v*p,g=-d*m+2*d*v-d*p,x=(1+d)*m+(-1.5-2*d)*v+(-.5+d)*p+1,y=(-1-f)*m+(1.5+f)*v+.5*p,_=f*m-f*v;for(let E=0;E!==a;++E)r[E]=g*o[h+E]+x*o[c+E]+y*o[l+E]+_*o[u+E];return r}}class lp extends Tl{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,h=(i-t)/(n-t),u=1-h;for(let d=0;d!==a;++d)r[d]=o[c+d]*u+o[l+d]*h;return r}}class d_ extends Tl{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e){return this.copySampleValue_(e-1)}}class Yi{constructor(e,t,i,n){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=js(t,this.TimeBufferType),this.values=js(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let i;if(t.toJSON!==this.toJSON)i=t.toJSON(e);else{i={name:e.name,times:js(e.times,Array),values:js(e.values,Array)};const n=e.getInterpolation();n!==e.DefaultInterpolation&&(i.interpolation=n)}return i.type=e.ValueTypeName,i}InterpolantFactoryMethodDiscrete(e){return new d_(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new lp(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new u_(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Ka:t=this.InterpolantFactoryMethodDiscrete;break;case Ch:t=this.InterpolantFactoryMethodLinear;break;case Fc:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(i);return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Ka;case this.InterpolantFactoryMethodLinear:return Ch;case this.InterpolantFactoryMethodSmooth:return Fc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]*=e}return this}trim(e,t){const i=this.times,n=i.length;let r=0,o=n-1;for(;r!==n&&i[r]<e;)++r;for(;o!==-1&&i[o]>t;)--o;if(++o,r!==0||o!==n){r>=o&&(o=Math.max(o,1),r=o-1);const a=this.getValueSize();this.times=i.slice(r,o),this.values=this.values.slice(r*a,o*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const i=this.times,n=this.values,r=i.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let a=0;a!==r;a++){const l=i[a];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),e=!1;break}if(o!==null&&o>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,o),e=!1;break}o=l}if(n!==void 0&&c_(n))for(let a=0,l=n.length;a!==l;++a){const c=n[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),i=this.getValueSize(),n=this.getInterpolation()===Fc,r=e.length-1;let o=1;for(let a=1;a<r;++a){let l=!1;const c=e[a],h=e[a+1];if(c!==h&&(a!==1||c!==e[0]))if(n)l=!0;else{const u=a*i,d=u-i,f=u+i;for(let p=0;p!==i;++p){const v=t[u+p];if(v!==t[d+p]||v!==t[f+p]){l=!0;break}}}if(l){if(a!==o){e[o]=e[a];const u=a*i,d=o*i;for(let f=0;f!==i;++f)t[d+f]=t[u+f]}++o}}if(r>0){e[o]=e[r];for(let a=r*i,l=o*i,c=0;c!==i;++c)t[l+c]=t[a+c];++o}return o!==e.length?(this.times=e.slice(0,o),this.values=t.slice(0,o*i)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),i=this.constructor,n=new i(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}Yi.prototype.ValueTypeName="";Yi.prototype.TimeBufferType=Float32Array;Yi.prototype.ValueBufferType=Float32Array;Yi.prototype.DefaultInterpolation=Ch;class co extends Yi{constructor(e,t,i){super(e,t,i)}}co.prototype.ValueTypeName="bool";co.prototype.ValueBufferType=Array;co.prototype.DefaultInterpolation=Ka;co.prototype.InterpolantFactoryMethodLinear=void 0;co.prototype.InterpolantFactoryMethodSmooth=void 0;class cp extends Yi{constructor(e,t,i,n){super(e,t,i,n)}}cp.prototype.ValueTypeName="color";class al extends Yi{constructor(e,t,i,n){super(e,t,i,n)}}al.prototype.ValueTypeName="number";class f_ extends Tl{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=(i-t)/(n-t);let c=e*a;for(let h=c+a;c!==h;c+=4)Ht.slerpFlat(r,0,o,c-a,o,c,l);return r}}class na extends Yi{constructor(e,t,i,n){super(e,t,i,n)}InterpolantFactoryMethodLinear(e){return new f_(this.times,this.values,this.getValueSize(),e)}}na.prototype.ValueTypeName="quaternion";na.prototype.InterpolantFactoryMethodSmooth=void 0;class ho extends Yi{constructor(e,t,i){super(e,t,i)}}ho.prototype.ValueTypeName="string";ho.prototype.ValueBufferType=Array;ho.prototype.DefaultInterpolation=Ka;ho.prototype.InterpolantFactoryMethodLinear=void 0;ho.prototype.InterpolantFactoryMethodSmooth=void 0;class io extends Yi{constructor(e,t,i,n){super(e,t,i,n)}}io.prototype.ValueTypeName="vector";class ro{constructor(e="",t=-1,i=[],n=jh){this.name=e,this.tracks=i,this.duration=t,this.blendMode=n,this.uuid=Ni(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],i=e.tracks,n=1/(e.fps||1);for(let o=0,a=i.length;o!==a;++o)t.push(G1(i[o]).scale(n));const r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r}static toJSON(e){const t=[],i=e.tracks,n={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,o=i.length;r!==o;++r)t.push(Yi.toJSON(i[r]));return n}static CreateFromMorphTargetSequence(e,t,i,n){const r=t.length,o=[];for(let a=0;a<r;a++){let l=[],c=[];l.push((a+r-1)%r,a,(a+1)%r),c.push(0,1,0);const h=h_(l);l=hf(l,1,h),c=hf(c,1,h),!n&&l[0]===0&&(l.push(r),c.push(c[0])),o.push(new al(".morphTargetInfluences["+t[a].name+"]",l,c).scale(1/i))}return new this(e,-1,o)}static findByName(e,t){let i=e;if(!Array.isArray(e)){const n=e;i=n.geometry&&n.geometry.animations||n.animations}for(let n=0;n<i.length;n++)if(i[n].name===t)return i[n];return null}static CreateClipsFromMorphTargetSequences(e,t,i){const n={},r=/^([\w-]*?)([\d]+)$/;for(let a=0,l=e.length;a<l;a++){const c=e[a],h=c.name.match(r);if(h&&h.length>1){const u=h[1];let d=n[u];d||(n[u]=d=[]),d.push(c)}}const o=[];for(const a in n)o.push(this.CreateFromMorphTargetSequence(a,n[a],t,i));return o}static parseAnimation(e,t){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const i=function(u,d,f,p,v){if(f.length!==0){const m=[],g=[];ap(f,m,g,p),m.length!==0&&v.push(new u(d,m,g))}},n=[],r=e.name||"default",o=e.fps||30,a=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let u=0;u<c.length;u++){const d=c[u].keys;if(!(!d||d.length===0))if(d[0].morphTargets){const f={};let p;for(p=0;p<d.length;p++)if(d[p].morphTargets)for(let v=0;v<d[p].morphTargets.length;v++)f[d[p].morphTargets[v]]=-1;for(const v in f){const m=[],g=[];for(let x=0;x!==d[p].morphTargets.length;++x){const y=d[p];m.push(y.time),g.push(y.morphTarget===v?1:0)}n.push(new al(".morphTargetInfluence["+v+"]",m,g))}l=f.length*o}else{const f=".bones["+t[u].name+"]";i(io,f+".position",d,"pos",n),i(na,f+".quaternion",d,"rot",n),i(io,f+".scale",d,"scl",n)}}return n.length===0?null:new this(r,l,n,a)}resetDuration(){const e=this.tracks;let t=0;for(let i=0,n=e.length;i!==n;++i){const r=this.tracks[i];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function V1(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return al;case"vector":case"vector2":case"vector3":case"vector4":return io;case"color":return cp;case"quaternion":return na;case"bool":case"boolean":return co;case"string":return ho}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function G1(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=V1(s.type);if(s.times===void 0){const t=[],i=[];ap(s.keys,t,i,"value"),s.times=t,s.values=i}return e.parse!==void 0?e.parse(s):new e(s.name,s.times,s.values,s.interpolation)}const _r={enabled:!1,files:{},add:function(s,e){this.enabled!==!1&&(this.files[s]=e)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class hp{constructor(e,t,i){const n=this;let r=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(h){a++,r===!1&&n.onStart!==void 0&&n.onStart(h,o,a),r=!0},this.itemEnd=function(h){o++,n.onProgress!==void 0&&n.onProgress(h,o,a),o===a&&(r=!1,n.onLoad!==void 0&&n.onLoad())},this.itemError=function(h){n.onError!==void 0&&n.onError(h)},this.resolveURL=function(h){return l?l(h):h},this.setURLModifier=function(h){return l=h,this},this.addHandler=function(h,u){return c.push(h,u),this},this.removeHandler=function(h){const u=c.indexOf(h);return u!==-1&&c.splice(u,2),this},this.getHandler=function(h){for(let u=0,d=c.length;u<d;u+=2){const f=c[u],p=c[u+1];if(f.global&&(f.lastIndex=0),f.test(h))return p}return null}}}const uo=new hp;class zn{constructor(e){this.manager=e!==void 0?e:uo,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const i=this;return new Promise(function(n,r){i.load(e,n,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}zn.DEFAULT_MATERIAL_NAME="__DEFAULT";const Rr={};class H1 extends Error{constructor(e,t){super(e),this.response=t}}class ji extends zn{constructor(e){super(e),this.mimeType="",this.responseType=""}load(e,t,i,n){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=_r.get(`file:${e}`);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(Rr[e]!==void 0){Rr[e].push({onLoad:t,onProgress:i,onError:n});return}Rr[e]=[],Rr[e].push({onLoad:t,onProgress:i,onError:n});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,l=this.responseType;fetch(o).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const h=Rr[e],u=c.body.getReader(),d=c.headers.get("X-File-Size")||c.headers.get("Content-Length"),f=d?parseInt(d):0,p=f!==0;let v=0;const m=new ReadableStream({start(g){x();function x(){u.read().then(({done:y,value:_})=>{if(y)g.close();else{v+=_.byteLength;const E=new ProgressEvent("progress",{lengthComputable:p,loaded:v,total:f});for(let w=0,M=h.length;w<M;w++){const T=h[w];T.onProgress&&T.onProgress(E)}g.enqueue(_),x()}},y=>{g.error(y)})}}});return new Response(m)}else throw new H1(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(h=>new DOMParser().parseFromString(h,a));case"json":return c.json();default:if(a==="")return c.text();{const u=/charset="?([^;"\s]*)"?/i.exec(a),d=u&&u[1]?u[1].toLowerCase():void 0,f=new TextDecoder(d);return c.arrayBuffer().then(p=>f.decode(p))}}}).then(c=>{_r.add(`file:${e}`,c);const h=Rr[e];delete Rr[e];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onLoad&&f.onLoad(c)}}).catch(c=>{const h=Rr[e];if(h===void 0)throw this.manager.itemError(e),c;delete Rr[e];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onError&&f.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class W1 extends zn{constructor(e){super(e)}load(e,t,i,n){const r=this,o=new ji(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(r.parse(JSON.parse(a)))}catch(l){n?n(l):console.error(l),r.manager.itemError(e)}},i,n)}parse(e){const t=[];for(let i=0;i<e.length;i++){const n=ro.parse(e[i]);t.push(n)}return t}}class X1 extends zn{constructor(e){super(e)}load(e,t,i,n){const r=this,o=[],a=new nu,l=new ji(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(r.withCredentials);let c=0;function h(u){l.load(e[u],function(d){const f=r.parse(d,!0);o[u]={width:f.width,height:f.height,format:f.format,mipmaps:f.mipmaps},c+=1,c===6&&(f.mipmapCount===1&&(a.minFilter=Mn),a.image=o,a.format=f.format,a.needsUpdate=!0,t&&t(a))},i,n)}if(Array.isArray(e))for(let u=0,d=e.length;u<d;++u)h(u);else l.load(e,function(u){const d=r.parse(u,!0);if(d.isCubemap){const f=d.mipmaps.length/d.mipmapCount;for(let p=0;p<f;p++){o[p]={mipmaps:[]};for(let v=0;v<d.mipmapCount;v++)o[p].mipmaps.push(d.mipmaps[p*d.mipmapCount+v]),o[p].format=d.format,o[p].width=d.width,o[p].height=d.height}a.image=o}else a.image.width=d.width,a.image.height=d.height,a.mipmaps=d.mipmaps;d.mipmapCount===1&&(a.minFilter=Mn),a.format=d.format,a.needsUpdate=!0,t&&t(a)},i,n);return a}}const Do=new WeakMap;class ll extends zn{constructor(e){super(e)}load(e,t,i,n){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=_r.get(`image:${e}`);if(o!==void 0){if(o.complete===!0)r.manager.itemStart(e),setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0);else{let u=Do.get(o);u===void 0&&(u=[],Do.set(o,u)),u.push({onLoad:t,onError:n})}return o}const a=nl("img");function l(){h(),t&&t(this);const u=Do.get(this)||[];for(let d=0;d<u.length;d++){const f=u[d];f.onLoad&&f.onLoad(this)}Do.delete(this),r.manager.itemEnd(e)}function c(u){h(),n&&n(u),_r.remove(`image:${e}`);const d=Do.get(this)||[];for(let f=0;f<d.length;f++){const p=d[f];p.onError&&p.onError(u)}Do.delete(this),r.manager.itemError(e),r.manager.itemEnd(e)}function h(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),_r.add(`image:${e}`,a),r.manager.itemStart(e),a.src=e,a}}class j1 extends zn{constructor(e){super(e)}load(e,t,i,n){const r=new xl;r.colorSpace=on;const o=new ll(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function l(c){o.load(e[c],function(h){r.images[c]=h,a++,a===6&&(r.needsUpdate=!0,t&&t(r))},void 0,n)}for(let c=0;c<e.length;++c)l(c);return r}}class p_ extends zn{constructor(e){super(e)}load(e,t,i,n){const r=this,o=new xr,a=new ji(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(r.withCredentials),a.load(e,function(l){let c;try{c=r.parse(l)}catch(h){if(n!==void 0)n(h);else{console.error(h);return}}c.image!==void 0?o.image=c.image:c.data!==void 0&&(o.image.width=c.width,o.image.height=c.height,o.image.data=c.data),o.wrapS=c.wrapS!==void 0?c.wrapS:bi,o.wrapT=c.wrapT!==void 0?c.wrapT:bi,o.magFilter=c.magFilter!==void 0?c.magFilter:Mn,o.minFilter=c.minFilter!==void 0?c.minFilter:Mn,o.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.colorSpace!==void 0&&(o.colorSpace=c.colorSpace),c.flipY!==void 0&&(o.flipY=c.flipY),c.format!==void 0&&(o.format=c.format),c.type!==void 0&&(o.type=c.type),c.mipmaps!==void 0&&(o.mipmaps=c.mipmaps,o.minFilter=nr),c.mipmapCount===1&&(o.minFilter=Mn),c.generateMipmaps!==void 0&&(o.generateMipmaps=c.generateMipmaps),o.needsUpdate=!0,t&&t(o,c)},i,n),o}}class m_ extends zn{constructor(e){super(e)}load(e,t,i,n){const r=new fn,o=new ll(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){r.image=a,r.needsUpdate=!0,t!==void 0&&t(r)},i,n),r}}class cs extends Lt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Ge(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class g_ extends cs{constructor(e,t,i){super(e,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Lt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Ge(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const fd=new ct,Wm=new I,Xm=new I;class up{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Me(512,512),this.mapType=rr,this.map=null,this.mapPass=null,this.matrix=new ct,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new ta,this._frameExtents=new Me(1,1),this._viewportCount=1,this._viewports=[new It(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,i=this.matrix;Wm.setFromMatrixPosition(e.matrixWorld),t.position.copy(Wm),Xm.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Xm),t.updateMatrixWorld(),fd.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(fd),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(fd)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.autoUpdate=e.autoUpdate,this.needsUpdate=e.needsUpdate,this.normalBias=e.normalBias,this.blurSamples=e.blurSamples,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class Y1 extends up{constructor(){super(new Sn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(e){const t=this.camera,i=Zo*2*e.angle*this.focus,n=this.mapSize.width/this.mapSize.height*this.aspect,r=e.distance||t.far;(i!==t.fov||n!==t.aspect||r!==t.far)&&(t.fov=i,t.aspect=n,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class dp extends cs{constructor(e,t,i=0,n=Math.PI/3,r=0,o=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Lt.DEFAULT_UP),this.updateMatrix(),this.target=new Lt,this.distance=i,this.angle=n,this.penumbra=r,this.decay=o,this.map=null,this.shadow=new Y1}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const jm=new ct,Sa=new I,pd=new I;class q1 extends up{constructor(){super(new Sn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new Me(4,2),this._viewportCount=6,this._viewports=[new It(2,1,1,1),new It(0,1,1,1),new It(3,1,1,1),new It(1,1,1,1),new It(3,0,1,1),new It(1,0,1,1)],this._cubeDirections=[new I(1,0,0),new I(-1,0,0),new I(0,0,1),new I(0,0,-1),new I(0,1,0),new I(0,-1,0)],this._cubeUps=[new I(0,1,0),new I(0,1,0),new I(0,1,0),new I(0,1,0),new I(0,0,1),new I(0,0,-1)]}updateMatrices(e,t=0){const i=this.camera,n=this.matrix,r=e.distance||i.far;r!==i.far&&(i.far=r,i.updateProjectionMatrix()),Sa.setFromMatrixPosition(e.matrixWorld),i.position.copy(Sa),pd.copy(i.position),pd.add(this._cubeDirections[t]),i.up.copy(this._cubeUps[t]),i.lookAt(pd),i.updateMatrixWorld(),n.makeTranslation(-Sa.x,-Sa.y,-Sa.z),jm.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(jm)}}class fp extends cs{constructor(e,t,i=0,n=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=n,this.shadow=new q1}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class hs extends Jh{constructor(e=-1,t=1,i=1,n=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=n,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,n,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let r=i-e,o=i+e,a=n+t,l=n-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,o=r+c*this.view.width,a-=h*this.view.offsetY,l=a-h*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class Z1 extends up{constructor(){super(new hs(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class pp extends cs{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Lt.DEFAULT_UP),this.updateMatrix(),this.target=new Lt,this.shadow=new Z1}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class mp extends cs{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class v_ extends cs{constructor(e,t,i=10,n=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=i,this.height=n}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class __{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new I)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const i=e.x,n=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*n),t.addScaledVector(o[2],.488603*r),t.addScaledVector(o[3],.488603*i),t.addScaledVector(o[4],1.092548*(i*n)),t.addScaledVector(o[5],1.092548*(n*r)),t.addScaledVector(o[6],.315392*(3*r*r-1)),t.addScaledVector(o[7],1.092548*(i*r)),t.addScaledVector(o[8],.546274*(i*i-n*n)),t}getIrradianceAt(e,t){const i=e.x,n=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*n),t.addScaledVector(o[2],2*.511664*r),t.addScaledVector(o[3],2*.511664*i),t.addScaledVector(o[4],2*.429043*i*n),t.addScaledVector(o[5],2*.429043*n*r),t.addScaledVector(o[6],.743125*r*r-.247708),t.addScaledVector(o[7],2*.429043*i*r),t.addScaledVector(o[8],.429043*(i*i-n*n)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].fromArray(e,t+n*3);return this}toArray(e=[],t=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].toArray(e,t+n*3);return e}static getBasisAt(e,t){const i=e.x,n=e.y,r=e.z;t[0]=.282095,t[1]=.488603*n,t[2]=.488603*r,t[3]=.488603*i,t[4]=1.092548*i*n,t[5]=1.092548*n*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*i*r,t[8]=.546274*(i*i-n*n)}}class y_ extends cs{constructor(e=new __,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class gu extends zn{constructor(e){super(e),this.textures={}}load(e,t,i,n){const r=this,o=new ji(r.manager);o.setPath(r.path),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(e,function(a){try{t(r.parse(JSON.parse(a)))}catch(l){n?n(l):console.error(l),r.manager.itemError(e)}},i,n)}parse(e){const t=this.textures;function i(r){return t[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),t[r]}const n=this.createMaterialFromType(e.type);if(e.uuid!==void 0&&(n.uuid=e.uuid),e.name!==void 0&&(n.name=e.name),e.color!==void 0&&n.color!==void 0&&n.color.setHex(e.color),e.roughness!==void 0&&(n.roughness=e.roughness),e.metalness!==void 0&&(n.metalness=e.metalness),e.sheen!==void 0&&(n.sheen=e.sheen),e.sheenColor!==void 0&&(n.sheenColor=new Ge().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(n.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&n.emissive!==void 0&&n.emissive.setHex(e.emissive),e.specular!==void 0&&n.specular!==void 0&&n.specular.setHex(e.specular),e.specularIntensity!==void 0&&(n.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&n.specularColor!==void 0&&n.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(n.shininess=e.shininess),e.clearcoat!==void 0&&(n.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=e.clearcoatRoughness),e.dispersion!==void 0&&(n.dispersion=e.dispersion),e.iridescence!==void 0&&(n.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(n.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(n.transmission=e.transmission),e.thickness!==void 0&&(n.thickness=e.thickness),e.attenuationDistance!==void 0&&(n.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&n.attenuationColor!==void 0&&n.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(n.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(n.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(n.fog=e.fog),e.flatShading!==void 0&&(n.flatShading=e.flatShading),e.blending!==void 0&&(n.blending=e.blending),e.combine!==void 0&&(n.combine=e.combine),e.side!==void 0&&(n.side=e.side),e.shadowSide!==void 0&&(n.shadowSide=e.shadowSide),e.opacity!==void 0&&(n.opacity=e.opacity),e.transparent!==void 0&&(n.transparent=e.transparent),e.alphaTest!==void 0&&(n.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(n.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(n.depthFunc=e.depthFunc),e.depthTest!==void 0&&(n.depthTest=e.depthTest),e.depthWrite!==void 0&&(n.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(n.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(n.blendSrc=e.blendSrc),e.blendDst!==void 0&&(n.blendDst=e.blendDst),e.blendEquation!==void 0&&(n.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(n.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(n.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(n.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&n.blendColor!==void 0&&n.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(n.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(n.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(n.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(n.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(n.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(n.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(n.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(n.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(n.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(n.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(n.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(n.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(n.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(n.rotation=e.rotation),e.linewidth!==void 0&&(n.linewidth=e.linewidth),e.dashSize!==void 0&&(n.dashSize=e.dashSize),e.gapSize!==void 0&&(n.gapSize=e.gapSize),e.scale!==void 0&&(n.scale=e.scale),e.polygonOffset!==void 0&&(n.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(n.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(n.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(n.dithering=e.dithering),e.alphaToCoverage!==void 0&&(n.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(n.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(n.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(n.visible=e.visible),e.toneMapped!==void 0&&(n.toneMapped=e.toneMapped),e.userData!==void 0&&(n.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?n.vertexColors=e.vertexColors>0:n.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const r in e.uniforms){const o=e.uniforms[r];switch(n.uniforms[r]={},o.type){case"t":n.uniforms[r].value=i(o.value);break;case"c":n.uniforms[r].value=new Ge().setHex(o.value);break;case"v2":n.uniforms[r].value=new Me().fromArray(o.value);break;case"v3":n.uniforms[r].value=new I().fromArray(o.value);break;case"v4":n.uniforms[r].value=new It().fromArray(o.value);break;case"m3":n.uniforms[r].value=new At().fromArray(o.value);break;case"m4":n.uniforms[r].value=new ct().fromArray(o.value);break;default:n.uniforms[r].value=o.value}}if(e.defines!==void 0&&(n.defines=e.defines),e.vertexShader!==void 0&&(n.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(n.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(n.glslVersion=e.glslVersion),e.extensions!==void 0)for(const r in e.extensions)n.extensions[r]=e.extensions[r];if(e.lights!==void 0&&(n.lights=e.lights),e.clipping!==void 0&&(n.clipping=e.clipping),e.size!==void 0&&(n.size=e.size),e.sizeAttenuation!==void 0&&(n.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(n.map=i(e.map)),e.matcap!==void 0&&(n.matcap=i(e.matcap)),e.alphaMap!==void 0&&(n.alphaMap=i(e.alphaMap)),e.bumpMap!==void 0&&(n.bumpMap=i(e.bumpMap)),e.bumpScale!==void 0&&(n.bumpScale=e.bumpScale),e.normalMap!==void 0&&(n.normalMap=i(e.normalMap)),e.normalMapType!==void 0&&(n.normalMapType=e.normalMapType),e.normalScale!==void 0){let r=e.normalScale;Array.isArray(r)===!1&&(r=[r,r]),n.normalScale=new Me().fromArray(r)}return e.displacementMap!==void 0&&(n.displacementMap=i(e.displacementMap)),e.displacementScale!==void 0&&(n.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(n.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(n.roughnessMap=i(e.roughnessMap)),e.metalnessMap!==void 0&&(n.metalnessMap=i(e.metalnessMap)),e.emissiveMap!==void 0&&(n.emissiveMap=i(e.emissiveMap)),e.emissiveIntensity!==void 0&&(n.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(n.specularMap=i(e.specularMap)),e.specularIntensityMap!==void 0&&(n.specularIntensityMap=i(e.specularIntensityMap)),e.specularColorMap!==void 0&&(n.specularColorMap=i(e.specularColorMap)),e.envMap!==void 0&&(n.envMap=i(e.envMap)),e.envMapRotation!==void 0&&n.envMapRotation.fromArray(e.envMapRotation),e.envMapIntensity!==void 0&&(n.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(n.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(n.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(n.lightMap=i(e.lightMap)),e.lightMapIntensity!==void 0&&(n.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(n.aoMap=i(e.aoMap)),e.aoMapIntensity!==void 0&&(n.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(n.gradientMap=i(e.gradientMap)),e.clearcoatMap!==void 0&&(n.clearcoatMap=i(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(n.clearcoatRoughnessMap=i(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(n.clearcoatNormalMap=i(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(n.clearcoatNormalScale=new Me().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(n.iridescenceMap=i(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(n.iridescenceThicknessMap=i(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(n.transmissionMap=i(e.transmissionMap)),e.thicknessMap!==void 0&&(n.thicknessMap=i(e.thicknessMap)),e.anisotropyMap!==void 0&&(n.anisotropyMap=i(e.anisotropyMap)),e.sheenColorMap!==void 0&&(n.sheenColorMap=i(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(n.sheenRoughnessMap=i(e.sheenRoughnessMap)),n}setTextures(e){return this.textures=e,this}createMaterialFromType(e){return gu.createMaterialFromType(e)}static createMaterialFromType(e){const t={ShadowMaterial:n_,SpriteMaterial:ea,RawShaderMaterial:i_,ShaderMaterial:wi,PointsMaterial:Xs,MeshPhysicalMaterial:r_,MeshStandardMaterial:sp,MeshPhongMaterial:ol,MeshToonMaterial:s_,MeshNormalMaterial:o_,MeshLambertMaterial:op,MeshDepthMaterial:El,MeshDistanceMaterial:mu,MeshBasicMaterial:Bn,MeshMatcapMaterial:a_,LineDashedMaterial:l_,LineBasicMaterial:En,Material:kn};return new t[e]}}class Lh{static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class vu extends xt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class x_ extends zn{constructor(e){super(e)}load(e,t,i,n){const r=this,o=new ji(r.manager);o.setPath(r.path),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(e,function(a){try{t(r.parse(JSON.parse(a)))}catch(l){n?n(l):console.error(l),r.manager.itemError(e)}},i,n)}parse(e){const t={},i={};function n(f,p){if(t[p]!==void 0)return t[p];const m=f.interleavedBuffers[p],g=r(f,m.buffer),x=Bo(m.type,g),y=new $h(x,m.stride);return y.uuid=m.uuid,t[p]=y,y}function r(f,p){if(i[p]!==void 0)return i[p];const m=f.arrayBuffers[p],g=new Uint32Array(m).buffer;return i[p]=g,g}const o=e.isInstancedBufferGeometry?new vu:new xt,a=e.data.index;if(a!==void 0){const f=Bo(a.type,a.array);o.setIndex(new Rt(f,1))}const l=e.data.attributes;for(const f in l){const p=l[f];let v;if(p.isInterleavedBufferAttribute){const m=n(e.data,p.data);v=new Li(m,p.itemSize,p.offset,p.normalized)}else{const m=Bo(p.type,p.array),g=p.isInstancedBufferAttribute?to:Rt;v=new g(m,p.itemSize,p.normalized)}p.name!==void 0&&(v.name=p.name),p.usage!==void 0&&v.setUsage(p.usage),o.setAttribute(f,v)}const c=e.data.morphAttributes;if(c)for(const f in c){const p=c[f],v=[];for(let m=0,g=p.length;m<g;m++){const x=p[m];let y;if(x.isInterleavedBufferAttribute){const _=n(e.data,x.data);y=new Li(_,x.itemSize,x.offset,x.normalized)}else{const _=Bo(x.type,x.array);y=new Rt(_,x.itemSize,x.normalized)}x.name!==void 0&&(y.name=x.name),v.push(y)}o.morphAttributes[f]=v}e.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const u=e.data.groups||e.data.drawcalls||e.data.offsets;if(u!==void 0)for(let f=0,p=u.length;f!==p;++f){const v=u[f];o.addGroup(v.start,v.count,v.materialIndex)}const d=e.data.boundingSphere;return d!==void 0&&(o.boundingSphere=new wn().fromJSON(d)),e.name&&(o.name=e.name),e.userData&&(o.userData=e.userData),o}}class J1 extends zn{constructor(e){super(e)}load(e,t,i,n){const r=this,o=this.path===""?Lh.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const a=new ji(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){let c=null;try{c=JSON.parse(l)}catch(u){n!==void 0&&n(u),console.error("THREE:ObjectLoader: Can't parse "+e+".",u.message);return}const h=c.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry"){n!==void 0&&n(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(c,t)},i,n)}async loadAsync(e,t){const i=this,n=this.path===""?Lh.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||n;const r=new ji(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);const o=await r.loadAsync(e,t),a=JSON.parse(o),l=a.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await i.parseAsync(a)}parse(e,t){const i=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,n),o=this.parseImages(e.images,function(){t!==void 0&&t(c)}),a=this.parseTextures(e.textures,o),l=this.parseMaterials(e.materials,a),c=this.parseObject(e.object,r,l,a,i),h=this.parseSkeletons(e.skeletons,c);if(this.bindSkeletons(c,h),this.bindLightTargets(c),t!==void 0){let u=!1;for(const d in o)if(o[d].data instanceof HTMLImageElement){u=!0;break}u===!1&&t(c)}return c}async parseAsync(e){const t=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),n=this.parseGeometries(e.geometries,i),r=await this.parseImagesAsync(e.images),o=this.parseTextures(e.textures,r),a=this.parseMaterials(e.materials,o),l=this.parseObject(e.object,n,a,o,t),c=this.parseSkeletons(e.skeletons,l);return this.bindSkeletons(l,c),this.bindLightTargets(l),l}parseShapes(e){const t={};if(e!==void 0)for(let i=0,n=e.length;i<n;i++){const r=new Zs().fromJSON(e[i]);t[r.uuid]=r}return t}parseSkeletons(e,t){const i={},n={};if(t.traverse(function(r){r.isBone&&(n[r.uuid]=r)}),e!==void 0)for(let r=0,o=e.length;r<o;r++){const a=new Ml().fromJSON(e[r],n);i[a.uuid]=a}return i}parseGeometries(e,t){const i={};if(e!==void 0){const n=new x_;for(let r=0,o=e.length;r<o;r++){let a;const l=e[r];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":a=n.parse(l);break;default:l.type in Hm?a=Hm[l.type].fromJSON(l,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}a.uuid=l.uuid,l.name!==void 0&&(a.name=l.name),l.userData!==void 0&&(a.userData=l.userData),i[l.uuid]=a}}return i}parseMaterials(e,t){const i={},n={};if(e!==void 0){const r=new gu;r.setTextures(t);for(let o=0,a=e.length;o<a;o++){const l=e[o];i[l.uuid]===void 0&&(i[l.uuid]=r.parse(l)),n[l.uuid]=i[l.uuid]}}return n}parseAnimations(e){const t={};if(e!==void 0)for(let i=0;i<e.length;i++){const n=e[i],r=ro.parse(n);t[r.uuid]=r}return t}parseImages(e,t){const i=this,n={};let r;function o(l){return i.manager.itemStart(l),r.load(l,function(){i.manager.itemEnd(l)},void 0,function(){i.manager.itemError(l),i.manager.itemEnd(l)})}function a(l){if(typeof l=="string"){const c=l,h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:i.resourcePath+c;return o(h)}else return l.data?{data:Bo(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new hp(t);r=new ll(l),r.setCrossOrigin(this.crossOrigin);for(let c=0,h=e.length;c<h;c++){const u=e[c],d=u.url;if(Array.isArray(d)){const f=[];for(let p=0,v=d.length;p<v;p++){const m=d[p],g=a(m);g!==null&&(g instanceof HTMLImageElement?f.push(g):f.push(new xr(g.data,g.width,g.height)))}n[u.uuid]=new rs(f)}else{const f=a(u.url);n[u.uuid]=new rs(f)}}}return n}async parseImagesAsync(e){const t=this,i={};let n;async function r(o){if(typeof o=="string"){const a=o,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)?a:t.resourcePath+a;return await n.loadAsync(l)}else return o.data?{data:Bo(o.type,o.data),width:o.width,height:o.height}:null}if(e!==void 0&&e.length>0){n=new ll(this.manager),n.setCrossOrigin(this.crossOrigin);for(let o=0,a=e.length;o<a;o++){const l=e[o],c=l.url;if(Array.isArray(c)){const h=[];for(let u=0,d=c.length;u<d;u++){const f=c[u],p=await r(f);p!==null&&(p instanceof HTMLImageElement?h.push(p):h.push(new xr(p.data,p.width,p.height)))}i[l.uuid]=new rs(h)}else{const h=await r(l.url);i[l.uuid]=new rs(h)}}}return i}parseTextures(e,t){function i(r,o){return typeof r=="number"?r:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",r),o[r])}const n={};if(e!==void 0)for(let r=0,o=e.length;r<o;r++){const a=e[r];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),t[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const l=t[a.image],c=l.data;let h;Array.isArray(c)?(h=new xl,c.length===6&&(h.needsUpdate=!0)):(c&&c.data?h=new xr:h=new fn,c&&(h.needsUpdate=!0)),h.source=l,h.uuid=a.uuid,a.name!==void 0&&(h.name=a.name),a.mapping!==void 0&&(h.mapping=i(a.mapping,K1)),a.channel!==void 0&&(h.channel=a.channel),a.offset!==void 0&&h.offset.fromArray(a.offset),a.repeat!==void 0&&h.repeat.fromArray(a.repeat),a.center!==void 0&&h.center.fromArray(a.center),a.rotation!==void 0&&(h.rotation=a.rotation),a.wrap!==void 0&&(h.wrapS=i(a.wrap[0],Ym),h.wrapT=i(a.wrap[1],Ym)),a.format!==void 0&&(h.format=a.format),a.internalFormat!==void 0&&(h.internalFormat=a.internalFormat),a.type!==void 0&&(h.type=a.type),a.colorSpace!==void 0&&(h.colorSpace=a.colorSpace),a.minFilter!==void 0&&(h.minFilter=i(a.minFilter,qm)),a.magFilter!==void 0&&(h.magFilter=i(a.magFilter,qm)),a.anisotropy!==void 0&&(h.anisotropy=a.anisotropy),a.flipY!==void 0&&(h.flipY=a.flipY),a.generateMipmaps!==void 0&&(h.generateMipmaps=a.generateMipmaps),a.premultiplyAlpha!==void 0&&(h.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(h.unpackAlignment=a.unpackAlignment),a.compareFunction!==void 0&&(h.compareFunction=a.compareFunction),a.userData!==void 0&&(h.userData=a.userData),n[a.uuid]=h}return n}parseObject(e,t,i,n,r){let o;function a(d){return t[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",d),t[d]}function l(d){if(d!==void 0){if(Array.isArray(d)){const f=[];for(let p=0,v=d.length;p<v;p++){const m=d[p];i[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),f.push(i[m])}return f}return i[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",d),i[d]}}function c(d){return n[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",d),n[d]}let h,u;switch(e.type){case"Scene":o=new bl,e.background!==void 0&&(Number.isInteger(e.background)?o.background=new Ge(e.background):o.background=c(e.background)),e.environment!==void 0&&(o.environment=c(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?o.fog=new Qh(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(o.fog=new Kh(e.fog.color,e.fog.density)),e.fog.name!==""&&(o.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(o.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(o.backgroundIntensity=e.backgroundIntensity),e.backgroundRotation!==void 0&&o.backgroundRotation.fromArray(e.backgroundRotation),e.environmentIntensity!==void 0&&(o.environmentIntensity=e.environmentIntensity),e.environmentRotation!==void 0&&o.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":o=new Sn(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(o.focus=e.focus),e.zoom!==void 0&&(o.zoom=e.zoom),e.filmGauge!==void 0&&(o.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(o.filmOffset=e.filmOffset),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new hs(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(o.zoom=e.zoom),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new mp(e.color,e.intensity);break;case"DirectionalLight":o=new pp(e.color,e.intensity),o.target=e.target||"";break;case"PointLight":o=new fp(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new v_(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new dp(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay),o.target=e.target||"";break;case"HemisphereLight":o=new g_(e.color,e.groundColor,e.intensity);break;case"LightProbe":o=new y_().fromJSON(e);break;case"SkinnedMesh":h=a(e.geometry),u=l(e.material),o=new Jf(h,u),e.bindMode!==void 0&&(o.bindMode=e.bindMode),e.bindMatrix!==void 0&&o.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(o.skeleton=e.skeleton);break;case"Mesh":h=a(e.geometry),u=l(e.material),o=new ze(h,u);break;case"InstancedMesh":h=a(e.geometry),u=l(e.material);const d=e.count,f=e.instanceMatrix,p=e.instanceColor;o=new Vv(h,u,d),o.instanceMatrix=new to(new Float32Array(f.array),16),p!==void 0&&(o.instanceColor=new to(new Float32Array(p.array),p.itemSize));break;case"BatchedMesh":h=a(e.geometry),u=l(e.material),o=new Gv(e.maxInstanceCount,e.maxVertexCount,e.maxIndexCount,u),o.geometry=h,o.perObjectFrustumCulled=e.perObjectFrustumCulled,o.sortObjects=e.sortObjects,o._drawRanges=e.drawRanges,o._reservedRanges=e.reservedRanges,o._geometryInfo=e.geometryInfo.map(v=>{let m=null,g=null;return v.boundingBox!==void 0&&(m=new _n().fromJSON(v.boundingBox)),v.boundingSphere!==void 0&&(g=new wn().fromJSON(v.boundingSphere)),{...v,boundingBox:m,boundingSphere:g}}),o._instanceInfo=e.instanceInfo,o._availableInstanceIds=e._availableInstanceIds,o._availableGeometryIds=e._availableGeometryIds,o._nextIndexStart=e.nextIndexStart,o._nextVertexStart=e.nextVertexStart,o._geometryCount=e.geometryCount,o._maxInstanceCount=e.maxInstanceCount,o._maxVertexCount=e.maxVertexCount,o._maxIndexCount=e.maxIndexCount,o._geometryInitialized=e.geometryInitialized,o._matricesTexture=c(e.matricesTexture.uuid),o._indirectTexture=c(e.indirectTexture.uuid),e.colorsTexture!==void 0&&(o._colorsTexture=c(e.colorsTexture.uuid)),e.boundingSphere!==void 0&&(o.boundingSphere=new wn().fromJSON(e.boundingSphere)),e.boundingBox!==void 0&&(o.boundingBox=new _n().fromJSON(e.boundingBox));break;case"LOD":o=new zv;break;case"Line":o=new jn(a(e.geometry),l(e.material));break;case"LineLoop":o=new Hv(a(e.geometry),l(e.material));break;case"LineSegments":o=new Oi(a(e.geometry),l(e.material));break;case"PointCloud":case"Points":o=new Va(a(e.geometry),l(e.material));break;case"Sprite":o=new Sl(l(e.material));break;case"Group":o=new Di;break;case"Bone":o=new eu;break;default:o=new Lt}if(o.uuid=e.uuid,e.name!==void 0&&(o.name=e.name),e.matrix!==void 0?(o.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(e.position!==void 0&&o.position.fromArray(e.position),e.rotation!==void 0&&o.rotation.fromArray(e.rotation),e.quaternion!==void 0&&o.quaternion.fromArray(e.quaternion),e.scale!==void 0&&o.scale.fromArray(e.scale)),e.up!==void 0&&o.up.fromArray(e.up),e.castShadow!==void 0&&(o.castShadow=e.castShadow),e.receiveShadow!==void 0&&(o.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.intensity!==void 0&&(o.shadow.intensity=e.shadow.intensity),e.shadow.bias!==void 0&&(o.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(o.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(o.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(o.visible=e.visible),e.frustumCulled!==void 0&&(o.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(o.renderOrder=e.renderOrder),e.userData!==void 0&&(o.userData=e.userData),e.layers!==void 0&&(o.layers.mask=e.layers),e.children!==void 0){const d=e.children;for(let f=0;f<d.length;f++)o.add(this.parseObject(d[f],t,i,n,r))}if(e.animations!==void 0){const d=e.animations;for(let f=0;f<d.length;f++){const p=d[f];o.animations.push(r[p])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(o.autoUpdate=e.autoUpdate);const d=e.levels;for(let f=0;f<d.length;f++){const p=d[f],v=o.getObjectByProperty("uuid",p.object);v!==void 0&&o.addLevel(v,p.distance,p.hysteresis)}}return o}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(i){if(i.isSkinnedMesh===!0&&i.skeleton!==void 0){const n=t[i.skeleton];n===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",i.skeleton):i.bind(n,i.bindMatrix)}})}bindLightTargets(e){e.traverse(function(t){if(t.isDirectionalLight||t.isSpotLight){const i=t.target,n=e.getObjectByProperty("uuid",i);n!==void 0?t.target=n:t.target=new Lt}})}}const K1={UVMapping:Bh,CubeReflectionMapping:zr,CubeRefractionMapping:ss,EquirectangularReflectionMapping:qa,EquirectangularRefractionMapping:Za,CubeUVReflectionMapping:Qo},Ym={RepeatWrapping:tr,ClampToEdgeWrapping:bi,MirroredRepeatWrapping:Ja},qm={NearestFilter:Yn,NearestMipmapNearestFilter:Nf,NearestMipmapLinearFilter:ko,LinearFilter:Mn,LinearMipmapNearestFilter:Ua,LinearMipmapLinearFilter:nr},md=new WeakMap;class Q1 extends zn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,i,n){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=_r.get(`image-bitmap:${e}`);if(o!==void 0){if(r.manager.itemStart(e),o.then){o.then(c=>{if(md.has(o)===!0)n&&n(md.get(o)),r.manager.itemError(e),r.manager.itemEnd(e);else return t&&t(c),r.manager.itemEnd(e),c});return}return setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o}const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader;const l=fetch(e,a).then(function(c){return c.blob()}).then(function(c){return createImageBitmap(c,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(c){return _r.add(`image-bitmap:${e}`,c),t&&t(c),r.manager.itemEnd(e),c}).catch(function(c){n&&n(c),md.set(l,c),_r.remove(`image-bitmap:${e}`),r.manager.itemError(e),r.manager.itemEnd(e)});_r.add(`image-bitmap:${e}`,l),r.manager.itemStart(e)}}let uc;class gp{static getContext(){return uc===void 0&&(uc=new(window.AudioContext||window.webkitAudioContext)),uc}static setContext(e){uc=e}}class $1 extends zn{constructor(e){super(e)}load(e,t,i,n){const r=this,o=new ji(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(l){try{const c=l.slice(0);gp.getContext().decodeAudioData(c,function(u){t(u)}).catch(a)}catch(c){a(c)}},i,n);function a(l){n?n(l):console.error(l),r.manager.itemError(e)}}}const Zm=new ct,Jm=new ct,Ss=new ct;class eS{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Sn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Sn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Ss.copy(e.projectionMatrix);const n=t.eyeSep/2,r=n*t.near/t.focus,o=t.near*Math.tan(qs*t.fov*.5)/t.zoom;let a,l;Jm.elements[12]=-n,Zm.elements[12]=n,a=-o*t.aspect+r,l=o*t.aspect+r,Ss.elements[0]=2*t.near/(l-a),Ss.elements[8]=(l+a)/(l-a),this.cameraL.projectionMatrix.copy(Ss),a=-o*t.aspect-r,l=o*t.aspect-r,Ss.elements[0]=2*t.near/(l-a),Ss.elements[8]=(l+a)/(l-a),this.cameraR.projectionMatrix.copy(Ss)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Jm),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Zm)}}class b_ extends Sn{constructor(e=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=e}}class vp{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=performance.now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=performance.now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}const Ms=new I,gd=new Ht,tS=new I,ws=new I,Es=new I;class nS extends Lt{constructor(){super(),this.type="AudioListener",this.context=gp.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new vp}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Ms,gd,tS),ws.set(0,0,-1).applyQuaternion(gd),Es.set(0,1,0).applyQuaternion(gd),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Ms.x,i),t.positionY.linearRampToValueAtTime(Ms.y,i),t.positionZ.linearRampToValueAtTime(Ms.z,i),t.forwardX.linearRampToValueAtTime(ws.x,i),t.forwardY.linearRampToValueAtTime(ws.y,i),t.forwardZ.linearRampToValueAtTime(ws.z,i),t.upX.linearRampToValueAtTime(Es.x,i),t.upY.linearRampToValueAtTime(Es.y,i),t.upZ.linearRampToValueAtTime(Es.z,i)}else t.setPosition(Ms.x,Ms.y,Ms.z),t.setOrientation(ws.x,ws.y,ws.z,Es.x,Es.y,Es.z)}}class S_ extends Lt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(e=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+e),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}copy(e,t){return super.copy(e,t),e.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=e.autoplay,this.buffer=e.buffer,this.detune=e.detune,this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this.offset=e.offset,this.duration=e.duration,this.playbackRate=e.playbackRate,this.hasPlaybackControl=e.hasPlaybackControl,this.sourceType=e.sourceType,this.filters=e.filters.slice(),this)}clone(e){return new this.constructor(this.listener).copy(this,e)}}const Ts=new I,Km=new Ht,iS=new I,As=new I;class rS extends S_{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){return super.connect(),this.panner.connect(this.gain),this}disconnect(){return super.disconnect(),this.panner.disconnect(this.gain),this}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,i){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=i,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Ts,Km,iS),As.set(0,0,1).applyQuaternion(Km);const t=this.panner;if(t.positionX){const i=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Ts.x,i),t.positionY.linearRampToValueAtTime(Ts.y,i),t.positionZ.linearRampToValueAtTime(Ts.z,i),t.orientationX.linearRampToValueAtTime(As.x,i),t.orientationY.linearRampToValueAtTime(As.y,i),t.orientationZ.linearRampToValueAtTime(As.z,i)}else t.setPosition(Ts.x,Ts.y,Ts.z),t.setOrientation(As.x,As.y,As.z)}}class sS{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let i=0;i<t.length;i++)e+=t[i];return e/t.length}}class M_{constructor(e,t,i){this.binding=e,this.valueSize=i;let n,r,o;switch(t){case"quaternion":n=this._slerp,r=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(i*6),this._workIndex=5;break;case"string":case"bool":n=this._select,r=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(i*5);break;default:n=this._lerp,r=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(i*5)}this._mixBufferRegion=n,this._mixBufferRegionAdditive=r,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const i=this.buffer,n=this.valueSize,r=e*n+n;let o=this.cumulativeWeight;if(o===0){for(let a=0;a!==n;++a)i[r+a]=i[a];o=t}else{o+=t;const a=t/o;this._mixBufferRegion(i,r,0,a,n)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,i=this.valueSize,n=i*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,n,0,e,i),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,i=this.buffer,n=e*t+t,r=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const l=t*this._origIndex;this._mixBufferRegion(i,n,l,1-r,t)}o>0&&this._mixBufferRegionAdditive(i,n,this._addIndex*t,1,t);for(let l=t,c=t+t;l!==c;++l)if(i[l]!==i[l+t]){a.setValue(i,n);break}}saveOriginalState(){const e=this.binding,t=this.buffer,i=this.valueSize,n=i*this._origIndex;e.getValue(t,n);for(let r=i,o=n;r!==o;++r)t[r]=t[n+r%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let i=e;i<t;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[t+i]=this.buffer[e+i]}_select(e,t,i,n,r){if(n>=.5)for(let o=0;o!==r;++o)e[t+o]=e[i+o]}_slerp(e,t,i,n){Ht.slerpFlat(e,t,e,t,e,i,n)}_slerpAdditive(e,t,i,n,r){const o=this._workIndex*r;Ht.multiplyQuaternionsFlat(e,o,e,t,e,i),Ht.slerpFlat(e,t,e,t,e,o,n)}_lerp(e,t,i,n,r){const o=1-n;for(let a=0;a!==r;++a){const l=t+a;e[l]=e[l]*o+e[i+a]*n}}_lerpAdditive(e,t,i,n,r){for(let o=0;o!==r;++o){const a=t+o;e[a]=e[a]+e[i+o]*n}}}const _p="\\[\\]\\.:\\/",oS=new RegExp("["+_p+"]","g"),yp="[^"+_p+"]",aS="[^"+_p.replace("\\.","")+"]",lS=/((?:WC+[\/:])*)/.source.replace("WC",yp),cS=/(WCOD+)?/.source.replace("WCOD",aS),hS=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",yp),uS=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",yp),dS=new RegExp("^"+lS+cS+hS+uS+"$"),fS=["material","materials","bones","map"];class pS{constructor(e,t,i){const n=i||Vt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)}getValue(e,t){this.bind();const i=this._targetGroup.nCachedObjects_,n=this._bindings[i];n!==void 0&&n.getValue(e,t)}setValue(e,t){const i=this._bindings;for(let n=this._targetGroup.nCachedObjects_,r=i.length;n!==r;++n)i[n].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].unbind()}}class Vt{constructor(e,t,i){this.path=t,this.parsedPath=i||Vt.parseTrackName(t),this.node=Vt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,i){return e&&e.isAnimationObjectGroup?new Vt.Composite(e,t,i):new Vt(e,t,i)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(oS,"")}static parseTrackName(e){const t=dS.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const i={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(n!==void 0&&n!==-1){const r=i.nodeName.substring(n+1);fS.indexOf(r)!==-1&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=r)}if(i.propertyName===null||i.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const i=e.skeleton.getBoneByName(t);if(i!==void 0)return i}if(e.children){const i=function(r){for(let o=0;o<r.length;o++){const a=r[o];if(a.name===t||a.uuid===t)return a;const l=i(a.children);if(l)return l}return null},n=i(e.children);if(n)return n}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)e[t++]=i[n]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,i=t.objectName,n=t.propertyName;let r=t.propertyIndex;if(e||(e=Vt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(i){let c=t.objectIndex;switch(i){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let h=0;h<e.length;h++)if(e[h].name===c){c=h;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[i]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[i]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const o=e[n];if(o===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+n+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.isMaterial===!0?a=this.Versioning.NeedsUpdate:e.isObject3D===!0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(r!==void 0){if(n==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}l=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else o.fromArray!==void 0&&o.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(l=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=n;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Vt.Composite=pS;Vt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Vt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Vt.prototype.GetterByBindingType=[Vt.prototype._getValue_direct,Vt.prototype._getValue_array,Vt.prototype._getValue_arrayElement,Vt.prototype._getValue_toArray];Vt.prototype.SetterByBindingTypeAndVersioning=[[Vt.prototype._setValue_direct,Vt.prototype._setValue_direct_setNeedsUpdate,Vt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Vt.prototype._setValue_array,Vt.prototype._setValue_array_setNeedsUpdate,Vt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Vt.prototype._setValue_arrayElement,Vt.prototype._setValue_arrayElement_setNeedsUpdate,Vt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Vt.prototype._setValue_fromArray,Vt.prototype._setValue_fromArray_setNeedsUpdate,Vt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class mS{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Ni(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let i=0,n=arguments.length;i!==n;++i)e[arguments[i].uuid]=i;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,i=this._paths,n=this._parsedPaths,r=this._bindings,o=r.length;let a,l=e.length,c=this.nCachedObjects_;for(let h=0,u=arguments.length;h!==u;++h){const d=arguments[h],f=d.uuid;let p=t[f];if(p===void 0){p=l++,t[f]=p,e.push(d);for(let v=0,m=o;v!==m;++v)r[v].push(new Vt(d,i[v],n[v]))}else if(p<c){a=e[p];const v=--c,m=e[v];t[m.uuid]=p,e[p]=m,t[f]=v,e[v]=d;for(let g=0,x=o;g!==x;++g){const y=r[g],_=y[v];let E=y[p];y[p]=_,E===void 0&&(E=new Vt(d,i[g],n[g])),y[v]=E}}else e[p]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c}remove(){const e=this._objects,t=this._indicesByUUID,i=this._bindings,n=i.length;let r=this.nCachedObjects_;for(let o=0,a=arguments.length;o!==a;++o){const l=arguments[o],c=l.uuid,h=t[c];if(h!==void 0&&h>=r){const u=r++,d=e[u];t[d.uuid]=h,e[h]=d,t[c]=u,e[u]=l;for(let f=0,p=n;f!==p;++f){const v=i[f],m=v[u],g=v[h];v[h]=m,v[u]=g}}}this.nCachedObjects_=r}uncache(){const e=this._objects,t=this._indicesByUUID,i=this._bindings,n=i.length;let r=this.nCachedObjects_,o=e.length;for(let a=0,l=arguments.length;a!==l;++a){const c=arguments[a],h=c.uuid,u=t[h];if(u!==void 0)if(delete t[h],u<r){const d=--r,f=e[d],p=--o,v=e[p];t[f.uuid]=u,e[u]=f,t[v.uuid]=d,e[d]=v,e.pop();for(let m=0,g=n;m!==g;++m){const x=i[m],y=x[d],_=x[p];x[u]=y,x[d]=_,x.pop()}}else{const d=--o,f=e[d];d>0&&(t[f.uuid]=u),e[u]=f,e.pop();for(let p=0,v=n;p!==v;++p){const m=i[p];m[u]=m[d],m.pop()}}}this.nCachedObjects_=r}subscribe_(e,t){const i=this._bindingsIndicesByPath;let n=i[e];const r=this._bindings;if(n!==void 0)return r[n];const o=this._paths,a=this._parsedPaths,l=this._objects,c=l.length,h=this.nCachedObjects_,u=new Array(c);n=r.length,i[e]=n,o.push(e),a.push(t),r.push(u);for(let d=h,f=l.length;d!==f;++d){const p=l[d];u[d]=new Vt(p,e,t)}return u}unsubscribe_(e){const t=this._bindingsIndicesByPath,i=t[e];if(i!==void 0){const n=this._paths,r=this._parsedPaths,o=this._bindings,a=o.length-1,l=o[a],c=e[a];t[c]=i,o[i]=l,o.pop(),r[i]=r[a],r.pop(),n[i]=n[a],n.pop()}}}class w_{constructor(e,t,i=null,n=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=i,this.blendMode=n;const r=t.tracks,o=r.length,a=new Array(o),l={endingStart:Hs,endingEnd:Hs};for(let c=0;c!==o;++c){const h=r[c].createInterpolant(null);a[c]=h,h.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=bv,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,i=!1){if(e.fadeOut(t),this.fadeIn(t),i===!0){const n=this._clip.duration,r=e._clip.duration,o=r/n,a=n/r;e.warp(1,o,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,i=!1){return e.crossFadeFrom(this,t,i)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,i){const n=this._mixer,r=n.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=n._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,c=a.sampleValues;return l[0]=r,l[1]=r+i,c[0]=e/o,c[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,i,n){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const l=(e-r)*i;l<0||i===0?t=0:(this._startTime=null,t=i*l)}t*=this._updateTimeScale(e);const o=this._updateTime(t),a=this._updateWeight(e);if(a>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case Hf:for(let h=0,u=l.length;h!==u;++h)l[h].evaluate(o),c[h].accumulateAdditive(a);break;case jh:default:for(let h=0,u=l.length;h!==u;++h)l[h].evaluate(o),c[h].accumulate(n,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const i=this._weightInterpolant;if(i!==null){const n=i.evaluate(e)[0];t*=n,e>i.parameterPositions[1]&&(this.stopFading(),n===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const i=this._timeScaleInterpolant;if(i!==null){const n=i.evaluate(e)[0];t*=n,e>i.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,i=this.loop;let n=this.time+e,r=this._loopCount;const o=i===Sv;if(e===0)return r===-1?n:o&&(r&1)===1?t-n:n;if(i===xv){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(n>=t)n=t;else if(n<0)n=0;else{this.time=n;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),n>=t||n<0){const a=Math.floor(n/t);n-=t*a,r+=Math.abs(a);const l=this.repetitions-r;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,n=e>0?t:0,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=r,this.time=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=n;if(o&&(r&1)===1)return t-n}return n}_setEndings(e,t,i){const n=this._interpolantSettings;i?(n.endingStart=Ws,n.endingEnd=Ws):(e?n.endingStart=this.zeroSlopeAtStart?Ws:Hs:n.endingStart=Qa,t?n.endingEnd=this.zeroSlopeAtEnd?Ws:Hs:n.endingEnd=Qa)}_scheduleFading(e,t,i){const n=this._mixer,r=n.time;let o=this._weightInterpolant;o===null&&(o=n._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=r,l[0]=t,a[1]=r+e,l[1]=i,this}}const gS=new Float32Array(1);class vS extends Sr{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const i=e._localRoot||this._root,n=e._clip.tracks,r=n.length,o=e._propertyBindings,a=e._interpolants,l=i.uuid,c=this._bindingsByRootAndName;let h=c[l];h===void 0&&(h={},c[l]=h);for(let u=0;u!==r;++u){const d=n[u],f=d.name;let p=h[f];if(p!==void 0)++p.referenceCount,o[u]=p;else{if(p=o[u],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,l,f));continue}const v=t&&t._propertyBindings[u].binding.parsedPath;p=new M_(Vt.create(i,f,v),d.ValueTypeName,d.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,l,f),o[u]=p}a[u].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const i=(e._localRoot||this._root).uuid,n=e._clip.uuid,r=this._actionsByClip[n];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,n,i)}const t=e._propertyBindings;for(let i=0,n=t.length;i!==n;++i){const r=t[i];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let i=0,n=t.length;i!==n;++i){const r=t[i];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,i){const n=this._actions,r=this._actionsByClip;let o=r[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=o;else{const a=o.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=n.length,n.push(e),o.actionByRoot[i]=e}_removeInactiveAction(e){const t=this._actions,i=t[t.length-1],n=e._cacheIndex;i._cacheIndex=n,t[n]=i,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,o=this._actionsByClip,a=o[r],l=a.knownActions,c=l[l.length-1],h=e._byClipCacheIndex;c._byClipCacheIndex=h,l[h]=c,l.pop(),e._byClipCacheIndex=null;const u=a.actionByRoot,d=(e._localRoot||this._root).uuid;delete u[d],l.length===0&&delete o[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let i=0,n=t.length;i!==n;++i){const r=t[i];--r.referenceCount===0&&this._removeInactiveBinding(r)}}_lendAction(e){const t=this._actions,i=e._cacheIndex,n=this._nActiveActions++,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_takeBackAction(e){const t=this._actions,i=e._cacheIndex,n=--this._nActiveActions,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_addInactiveBinding(e,t,i){const n=this._bindingsByRootAndName,r=this._bindings;let o=n[t];o===void 0&&(o={},n[t]=o),o[i]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){const t=this._bindings,i=e.binding,n=i.rootNode.uuid,r=i.path,o=this._bindingsByRootAndName,a=o[n],l=t[t.length-1],c=e._cacheIndex;l._cacheIndex=c,t[c]=l,t.pop(),delete a[r],Object.keys(a).length===0&&delete o[n]}_lendBinding(e){const t=this._bindings,i=e._cacheIndex,n=this._nActiveBindings++,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_takeBackBinding(e){const t=this._bindings,i=e._cacheIndex,n=--this._nActiveBindings,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let i=e[t];return i===void 0&&(i=new lp(new Float32Array(2),new Float32Array(2),1,gS),i.__cacheIndex=t,e[t]=i),i}_takeBackControlInterpolant(e){const t=this._controlInterpolants,i=e.__cacheIndex,n=--this._nActiveControlInterpolants,r=t[n];e.__cacheIndex=n,t[n]=e,r.__cacheIndex=i,t[i]=r}clipAction(e,t,i){const n=t||this._root,r=n.uuid;let o=typeof e=="string"?ro.findByName(n,e):e;const a=o!==null?o.uuid:e,l=this._actionsByClip[a];let c=null;if(i===void 0&&(o!==null?i=o.blendMode:i=jh),l!==void 0){const u=l.actionByRoot[r];if(u!==void 0&&u.blendMode===i)return u;c=l.knownActions[0],o===null&&(o=c._clip)}if(o===null)return null;const h=new w_(this,o,t,i);return this._bindAction(h,c),this._addInactiveAction(h,a,r),h}existingAction(e,t){const i=t||this._root,n=i.uuid,r=typeof e=="string"?ro.findByName(i,e):e,o=r?r.uuid:e,a=this._actionsByClip[o];return a!==void 0&&a.actionByRoot[n]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let i=t-1;i>=0;--i)e[i].stop();return this}update(e){e*=this.timeScale;const t=this._actions,i=this._nActiveActions,n=this.time+=e,r=Math.sign(e),o=this._accuIndex^=1;for(let c=0;c!==i;++c)t[c]._update(n,e,r,o);const a=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)a[c].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,i=e.uuid,n=this._actionsByClip,r=n[i];if(r!==void 0){const o=r.knownActions;for(let a=0,l=o.length;a!==l;++a){const c=o[a];this._deactivateAction(c);const h=c._cacheIndex,u=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,u._cacheIndex=h,t[h]=u,t.pop(),this._removeInactiveBindingsForAction(c)}delete n[i]}}uncacheRoot(e){const t=e.uuid,i=this._actionsByClip;for(const o in i){const a=i[o].actionByRoot,l=a[t];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const n=this._bindingsByRootAndName,r=n[t];if(r!==void 0)for(const o in r){const a=r[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){const i=this.existingAction(e,t);i!==null&&(this._deactivateAction(i),this._removeInactiveAction(i))}}class _S extends Yf{constructor(e=1,t=1,i=1,n={}){super(e,t,n),this.isRenderTarget3D=!0,this.depth=i,this.texture=new qh(null,e,t,i),this._setTextureOptions(n),this.texture.isRenderTargetTexture=!0}}class xp{constructor(e){this.value=e}clone(){return new xp(this.value.clone===void 0?this.value:this.value.clone())}}let yS=0;class xS extends Sr{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:yS++}),this.name="",this.usage=el,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){this.dispatchEvent({type:"dispose"})}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let i=0,n=t.length;i<n;i++){const r=Array.isArray(t[i])?t[i]:[t[i]];for(let o=0;o<r.length;o++)this.uniforms.push(r[o].clone())}return this}clone(){return new this.constructor().copy(this)}}class Uh extends $h{constructor(e,t,i=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class bS{constructor(e,t,i,n,r,o=!1){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=i,this.elementSize=n,this.count=r,this.normalized=o,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const Qm=new ct;class _u{constructor(e,t,i=0,n=1/0){this.ray=new as(e,t),this.near=i,this.far=n,this.camera=null,this.layers=new Zh,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return Qm.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(Qm),this}intersectObject(e,t=!0,i=[]){return uf(e,this,i,t),i.sort($m),i}intersectObjects(e,t=!0,i=[]){for(let n=0,r=e.length;n<r;n++)uf(e[n],this,i,t);return i.sort($m),i}}function $m(s,e){return s.distance-e.distance}function uf(s,e,t,i){let n=!0;if(s.layers.test(e.layers)&&s.raycast(e,t)===!1&&(n=!1),n===!0&&i===!0){const r=s.children;for(let o=0,a=r.length;o<a;o++)uf(r[o],e,t,!0)}}class Nh{constructor(e=1,t=0,i=0){this.radius=e,this.phi=t,this.theta=i}set(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Ct(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+t*t+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(Ct(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class SS{constructor(e=1,t=0,i=0){this.radius=e,this.theta=t,this.y=i}set(e,t,i){return this.radius=e,this.theta=t,this.y=i,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+i*i),this.theta=Math.atan2(e,i),this.y=t,this}clone(){return new this.constructor().copy(this)}}class bp{constructor(e,t,i,n){bp.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,t,i,n)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let i=0;i<4;i++)this.elements[i]=e[i+t];return this}set(e,t,i,n){const r=this.elements;return r[0]=e,r[2]=t,r[1]=i,r[3]=n,this}}const eg=new Me;class MS{constructor(e=new Me(1/0,1/0),t=new Me(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=eg.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,eg).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const tg=new I,dc=new I;class E_{constructor(e=new I,t=new I){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){tg.subVectors(e,this.start),dc.subVectors(this.end,this.start);const i=dc.dot(dc);let r=dc.dot(tg)/i;return t&&(r=Ct(r,0,1)),r}closestPointToPoint(e,t,i){const n=this.closestPointToPointParameter(e,t);return this.delta(i).multiplyScalar(n).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const ng=new I;class wS extends Lt{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const i=new xt,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,l=32;o<l;o++,a++){const c=o/l*Math.PI*2,h=a/l*Math.PI*2;n.push(Math.cos(c),Math.sin(c),1,Math.cos(h),Math.sin(h),1)}i.setAttribute("position",new qe(n,3));const r=new En({fog:!1,toneMapped:!1});this.cone=new Oi(i,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),ng.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(ng),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Kr=new I,fc=new ct,vd=new ct;class ES extends Oi{constructor(e){const t=T_(e),i=new xt,n=[],r=[],o=new Ge(0,0,1),a=new Ge(0,1,0);for(let c=0;c<t.length;c++){const h=t[c];h.parent&&h.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),r.push(o.r,o.g,o.b),r.push(a.r,a.g,a.b))}i.setAttribute("position",new qe(n,3)),i.setAttribute("color",new qe(r,3));const l=new En({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,i=this.geometry,n=i.getAttribute("position");vd.copy(this.root.matrixWorld).invert();for(let r=0,o=0;r<t.length;r++){const a=t[r];a.parent&&a.parent.isBone&&(fc.multiplyMatrices(vd,a.matrixWorld),Kr.setFromMatrixPosition(fc),n.setXYZ(o,Kr.x,Kr.y,Kr.z),fc.multiplyMatrices(vd,a.parent.matrixWorld),Kr.setFromMatrixPosition(fc),n.setXYZ(o+1,Kr.x,Kr.y,Kr.z),o+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function T_(s){const e=[];s.isBone===!0&&e.push(s);for(let t=0;t<s.children.length;t++)e.push(...T_(s.children[t]));return e}class TS extends ze{constructor(e,t,i){const n=new lo(t,4,2),r=new Bn({wireframe:!0,fog:!1,toneMapped:!1});super(n,r),this.light=e,this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const AS=new I,ig=new Ge,rg=new Ge;class CS extends Lt{constructor(e,t,i){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,this.type="HemisphereLightHelper";const n=new Nr(t);n.rotateY(Math.PI*.5),this.material=new Bn({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const r=n.getAttribute("position"),o=new Float32Array(r.count*3);n.setAttribute("color",new Rt(o,3)),this.add(new ze(n,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");ig.copy(this.light.color),rg.copy(this.light.groundColor);for(let i=0,n=t.count;i<n;i++){const r=i<n/2?ig:rg;t.setXYZ(i,r.r,r.g,r.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(AS.setFromMatrixPosition(this.light.matrixWorld).negate())}}class RS extends Oi{constructor(e=10,t=10,i=4473924,n=8947848){i=new Ge(i),n=new Ge(n);const r=t/2,o=e/t,a=e/2,l=[],c=[];for(let d=0,f=0,p=-a;d<=t;d++,p+=o){l.push(-a,0,p,a,0,p),l.push(p,0,-a,p,0,a);const v=d===r?i:n;v.toArray(c,f),f+=3,v.toArray(c,f),f+=3,v.toArray(c,f),f+=3,v.toArray(c,f),f+=3}const h=new xt;h.setAttribute("position",new qe(l,3)),h.setAttribute("color",new qe(c,3));const u=new En({vertexColors:!0,toneMapped:!1});super(h,u),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class PS extends Oi{constructor(e=10,t=16,i=8,n=64,r=4473924,o=8947848){r=new Ge(r),o=new Ge(o);const a=[],l=[];if(t>1)for(let u=0;u<t;u++){const d=u/t*(Math.PI*2),f=Math.sin(d)*e,p=Math.cos(d)*e;a.push(0,0,0),a.push(f,0,p);const v=u&1?r:o;l.push(v.r,v.g,v.b),l.push(v.r,v.g,v.b)}for(let u=0;u<i;u++){const d=u&1?r:o,f=e-e/i*u;for(let p=0;p<n;p++){let v=p/n*(Math.PI*2),m=Math.sin(v)*f,g=Math.cos(v)*f;a.push(m,0,g),l.push(d.r,d.g,d.b),v=(p+1)/n*(Math.PI*2),m=Math.sin(v)*f,g=Math.cos(v)*f,a.push(m,0,g),l.push(d.r,d.g,d.b)}}const c=new xt;c.setAttribute("position",new qe(a,3)),c.setAttribute("color",new qe(l,3));const h=new En({vertexColors:!0,toneMapped:!1});super(c,h),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const sg=new I,pc=new I,og=new I;class IS extends Lt{constructor(e,t,i){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,this.type="DirectionalLightHelper",t===void 0&&(t=1);let n=new xt;n.setAttribute("position",new qe([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new En({fog:!1,toneMapped:!1});this.lightPlane=new jn(n,r),this.add(this.lightPlane),n=new xt,n.setAttribute("position",new qe([0,0,0,0,0,1],3)),this.targetLine=new jn(n,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),sg.setFromMatrixPosition(this.light.matrixWorld),pc.setFromMatrixPosition(this.light.target.matrixWorld),og.subVectors(pc,sg),this.lightPlane.lookAt(pc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(pc),this.targetLine.scale.z=og.length()}}const mc=new I,mn=new Jh;class DS extends Oi{constructor(e){const t=new xt,i=new En({color:16777215,vertexColors:!0,toneMapped:!1}),n=[],r=[],o={};a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4");function a(p,v){l(p),l(v)}function l(p){n.push(0,0,0),r.push(0,0,0),o[p]===void 0&&(o[p]=[]),o[p].push(n.length/3-1)}t.setAttribute("position",new qe(n,3)),t.setAttribute("color",new qe(r,3)),super(t,i),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update();const c=new Ge(16755200),h=new Ge(16711680),u=new Ge(43775),d=new Ge(16777215),f=new Ge(3355443);this.setColors(c,h,u,d,f)}setColors(e,t,i,n,r){const a=this.geometry.getAttribute("color");a.setXYZ(0,e.r,e.g,e.b),a.setXYZ(1,e.r,e.g,e.b),a.setXYZ(2,e.r,e.g,e.b),a.setXYZ(3,e.r,e.g,e.b),a.setXYZ(4,e.r,e.g,e.b),a.setXYZ(5,e.r,e.g,e.b),a.setXYZ(6,e.r,e.g,e.b),a.setXYZ(7,e.r,e.g,e.b),a.setXYZ(8,e.r,e.g,e.b),a.setXYZ(9,e.r,e.g,e.b),a.setXYZ(10,e.r,e.g,e.b),a.setXYZ(11,e.r,e.g,e.b),a.setXYZ(12,e.r,e.g,e.b),a.setXYZ(13,e.r,e.g,e.b),a.setXYZ(14,e.r,e.g,e.b),a.setXYZ(15,e.r,e.g,e.b),a.setXYZ(16,e.r,e.g,e.b),a.setXYZ(17,e.r,e.g,e.b),a.setXYZ(18,e.r,e.g,e.b),a.setXYZ(19,e.r,e.g,e.b),a.setXYZ(20,e.r,e.g,e.b),a.setXYZ(21,e.r,e.g,e.b),a.setXYZ(22,e.r,e.g,e.b),a.setXYZ(23,e.r,e.g,e.b),a.setXYZ(24,t.r,t.g,t.b),a.setXYZ(25,t.r,t.g,t.b),a.setXYZ(26,t.r,t.g,t.b),a.setXYZ(27,t.r,t.g,t.b),a.setXYZ(28,t.r,t.g,t.b),a.setXYZ(29,t.r,t.g,t.b),a.setXYZ(30,t.r,t.g,t.b),a.setXYZ(31,t.r,t.g,t.b),a.setXYZ(32,i.r,i.g,i.b),a.setXYZ(33,i.r,i.g,i.b),a.setXYZ(34,i.r,i.g,i.b),a.setXYZ(35,i.r,i.g,i.b),a.setXYZ(36,i.r,i.g,i.b),a.setXYZ(37,i.r,i.g,i.b),a.setXYZ(38,n.r,n.g,n.b),a.setXYZ(39,n.r,n.g,n.b),a.setXYZ(40,r.r,r.g,r.b),a.setXYZ(41,r.r,r.g,r.b),a.setXYZ(42,r.r,r.g,r.b),a.setXYZ(43,r.r,r.g,r.b),a.setXYZ(44,r.r,r.g,r.b),a.setXYZ(45,r.r,r.g,r.b),a.setXYZ(46,r.r,r.g,r.b),a.setXYZ(47,r.r,r.g,r.b),a.setXYZ(48,r.r,r.g,r.b),a.setXYZ(49,r.r,r.g,r.b),a.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,i=1,n=1;mn.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);const r=this.camera.coordinateSystem===Hi?-1:0;bn("c",t,e,mn,0,0,r),bn("t",t,e,mn,0,0,1),bn("n1",t,e,mn,-i,-n,r),bn("n2",t,e,mn,i,-n,r),bn("n3",t,e,mn,-i,n,r),bn("n4",t,e,mn,i,n,r),bn("f1",t,e,mn,-i,-n,1),bn("f2",t,e,mn,i,-n,1),bn("f3",t,e,mn,-i,n,1),bn("f4",t,e,mn,i,n,1),bn("u1",t,e,mn,i*.7,n*1.1,r),bn("u2",t,e,mn,-i*.7,n*1.1,r),bn("u3",t,e,mn,0,n*2,r),bn("cf1",t,e,mn,-i,0,1),bn("cf2",t,e,mn,i,0,1),bn("cf3",t,e,mn,0,-n,1),bn("cf4",t,e,mn,0,n,1),bn("cn1",t,e,mn,-i,0,r),bn("cn2",t,e,mn,i,0,r),bn("cn3",t,e,mn,0,-n,r),bn("cn4",t,e,mn,0,n,r),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function bn(s,e,t,i,n,r,o){mc.set(n,r,o).unproject(i);const a=e[s];if(a!==void 0){const l=t.getAttribute("position");for(let c=0,h=a.length;c<h;c++)l.setXYZ(a[c],mc.x,mc.y,mc.z)}}const gc=new _n;class LS extends Oi{constructor(e,t=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(24),r=new xt;r.setIndex(new Rt(i,1)),r.setAttribute("position",new Rt(n,3)),super(r,new En({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(){if(this.object!==void 0&&gc.setFromObject(this.object),gc.isEmpty())return;const e=gc.min,t=gc.max,i=this.geometry.attributes.position,n=i.array;n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=e.x,n[4]=t.y,n[5]=t.z,n[6]=e.x,n[7]=e.y,n[8]=t.z,n[9]=t.x,n[10]=e.y,n[11]=t.z,n[12]=t.x,n[13]=t.y,n[14]=e.z,n[15]=e.x,n[16]=t.y,n[17]=e.z,n[18]=e.x,n[19]=e.y,n[20]=e.z,n[21]=t.x,n[22]=e.y,n[23]=e.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class US extends Oi{constructor(e,t=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],r=new xt;r.setIndex(new Rt(i,1)),r.setAttribute("position",new qe(n,3)),super(r,new En({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class NS extends jn{constructor(e,t=1,i=16776960){const n=i,r=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],o=new xt;o.setAttribute("position",new qe(r,3)),o.computeBoundingSphere(),super(o,new En({color:n,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const a=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],l=new xt;l.setAttribute("position",new qe(a,3)),l.computeBoundingSphere(),this.add(new ze(l,new Bn({color:n,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const ag=new I;let vc,_d;class OS extends Lt{constructor(e=new I(0,0,1),t=new I(0,0,0),i=1,n=16776960,r=i*.2,o=r*.2){super(),this.type="ArrowHelper",vc===void 0&&(vc=new xt,vc.setAttribute("position",new qe([0,0,0,0,1,0],3)),_d=new wl(.5,1,5,1),_d.translate(0,-.5,0)),this.position.copy(t),this.line=new jn(vc,new En({color:n,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new ze(_d,new Bn({color:n,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(i,r,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{ag.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(ag,t)}}setLength(e,t=e*.2,i=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(i,t,i),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class FS extends Oi{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],i=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],n=new xt;n.setAttribute("position",new qe(t,3)),n.setAttribute("color",new qe(i,3));const r=new En({vertexColors:!0,toneMapped:!1});super(n,r),this.type="AxesHelper"}setColors(e,t,i){const n=new Ge,r=this.geometry.attributes.color.array;return n.set(e),n.toArray(r,0),n.toArray(r,3),n.set(t),n.toArray(r,6),n.toArray(r,9),n.set(i),n.toArray(r,12),n.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class kS{constructor(){this.type="ShapePath",this.color=new Ge,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Dh,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,i,n){return this.currentPath.quadraticCurveTo(e,t,i,n),this}bezierCurveTo(e,t,i,n,r,o){return this.currentPath.bezierCurveTo(e,t,i,n,r,o),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(g){const x=[];for(let y=0,_=g.length;y<_;y++){const E=g[y],w=new Zs;w.curves=E.curves,x.push(w)}return x}function i(g,x){const y=x.length;let _=!1;for(let E=y-1,w=0;w<y;E=w++){let M=x[E],T=x[w],S=T.x-M.x,b=T.y-M.y;if(Math.abs(b)>Number.EPSILON){if(b<0&&(M=x[w],S=-S,T=x[E],b=-b),g.y<M.y||g.y>T.y)continue;if(g.y===M.y){if(g.x===M.x)return!0}else{const P=b*(g.x-M.x)-S*(g.y-M.y);if(P===0)return!0;if(P<0)continue;_=!_}}else{if(g.y!==M.y)continue;if(T.x<=g.x&&g.x<=M.x||M.x<=g.x&&g.x<=T.x)return!0}}return _}const n=ir.isClockWise,r=this.subPaths;if(r.length===0)return[];let o,a,l;const c=[];if(r.length===1)return a=r[0],l=new Zs,l.curves=a.curves,c.push(l),c;let h=!n(r[0].getPoints());h=e?!h:h;const u=[],d=[];let f=[],p=0,v;d[p]=void 0,f[p]=[];for(let g=0,x=r.length;g<x;g++)a=r[g],v=a.getPoints(),o=n(v),o=e?!o:o,o?(!h&&d[p]&&p++,d[p]={s:new Zs,p:v},d[p].s.curves=a.curves,h&&p++,f[p]=[]):f[p].push({h:a,p:v[0]});if(!d[0])return t(r);if(d.length>1){let g=!1,x=0;for(let y=0,_=d.length;y<_;y++)u[y]=[];for(let y=0,_=d.length;y<_;y++){const E=f[y];for(let w=0;w<E.length;w++){const M=E[w];let T=!0;for(let S=0;S<d.length;S++)i(M.p,d[S].p)&&(y!==S&&x++,T?(T=!1,u[S].push(M)):g=!0);T&&u[y].push(M)}}x>0&&g===!1&&(f=u)}let m;for(let g=0,x=d.length;g<x;g++){l=d[g].s,c.push(l),m=f[g];for(let y=0,_=m.length;y<_;y++)l.holes.push(m[y].h)}return c}}class yu extends Sr{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(e){if(e===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=e}disconnect(){}dispose(){}update(){}}function BS(s,e){const t=s.image&&s.image.width?s.image.width/s.image.height:1;return t>e?(s.repeat.x=1,s.repeat.y=t/e,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2):(s.repeat.x=e/t,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0),s}function zS(s,e){const t=s.image&&s.image.width?s.image.width/s.image.height:1;return t>e?(s.repeat.x=e/t,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0):(s.repeat.x=1,s.repeat.y=t/e,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2),s}function VS(s){return s.repeat.x=1,s.repeat.y=1,s.offset.x=0,s.offset.y=0,s}function df(s,e,t,i){const n=GS(i);switch(t){case Bf:return s*e;case Hh:return s*e/n.components*n.byteLength;case _l:return s*e/n.components*n.byteLength;case Vf:return s*e*2/n.components*n.byteLength;case Wh:return s*e*2/n.components*n.byteLength;case zf:return s*e*3/n.components*n.byteLength;case ci:return s*e*4/n.components*n.byteLength;case Xh:return s*e*4/n.components*n.byteLength;case Na:case Oa:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*8;case Fa:case ka:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case ih:case sh:return Math.max(s,16)*Math.max(e,8)/4;case nh:case rh:return Math.max(s,8)*Math.max(e,8)/2;case oh:case ah:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*8;case lh:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case ch:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case hh:return Math.floor((s+4)/5)*Math.floor((e+3)/4)*16;case uh:return Math.floor((s+4)/5)*Math.floor((e+4)/5)*16;case dh:return Math.floor((s+5)/6)*Math.floor((e+4)/5)*16;case fh:return Math.floor((s+5)/6)*Math.floor((e+5)/6)*16;case ph:return Math.floor((s+7)/8)*Math.floor((e+4)/5)*16;case mh:return Math.floor((s+7)/8)*Math.floor((e+5)/6)*16;case gh:return Math.floor((s+7)/8)*Math.floor((e+7)/8)*16;case vh:return Math.floor((s+9)/10)*Math.floor((e+4)/5)*16;case _h:return Math.floor((s+9)/10)*Math.floor((e+5)/6)*16;case yh:return Math.floor((s+9)/10)*Math.floor((e+7)/8)*16;case xh:return Math.floor((s+9)/10)*Math.floor((e+9)/10)*16;case bh:return Math.floor((s+11)/12)*Math.floor((e+9)/10)*16;case Sh:return Math.floor((s+11)/12)*Math.floor((e+11)/12)*16;case Ba:case Mh:case wh:return Math.ceil(s/4)*Math.ceil(e/4)*16;case Gf:case Eh:return Math.ceil(s/4)*Math.ceil(e/4)*8;case Th:case Ah:return Math.ceil(s/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function GS(s){switch(s){case rr:case Of:return{byteLength:1,components:1};case Xo:case Ff:case $o:return{byteLength:2,components:1};case Vh:case Gh:return{byteLength:2,components:4};case Vr:case zh:case Si:return{byteLength:4,components:1};case kf:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${s}.`)}class HS{static contain(e,t){return BS(e,t)}static cover(e,t){return zS(e,t)}static fill(e){return VS(e)}static getByteLength(e,t,i,n){return df(e,t,i,n)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:kh}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=kh);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function A_(){let s=null,e=!1,t=null,i=null;function n(r,o){t(r,o),i=s.requestAnimationFrame(n)}return{start:function(){e!==!0&&t!==null&&(i=s.requestAnimationFrame(n),e=!0)},stop:function(){s.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){s=r}}}function WS(s){const e=new WeakMap;function t(a,l){const c=a.array,h=a.usage,u=c.byteLength,d=s.createBuffer();s.bindBuffer(l,d),s.bufferData(l,c,h),a.onUploadCallback();let f;if(c instanceof Float32Array)f=s.FLOAT;else if(typeof Float16Array<"u"&&c instanceof Float16Array)f=s.HALF_FLOAT;else if(c instanceof Uint16Array)a.isFloat16BufferAttribute?f=s.HALF_FLOAT:f=s.UNSIGNED_SHORT;else if(c instanceof Int16Array)f=s.SHORT;else if(c instanceof Uint32Array)f=s.UNSIGNED_INT;else if(c instanceof Int32Array)f=s.INT;else if(c instanceof Int8Array)f=s.BYTE;else if(c instanceof Uint8Array)f=s.UNSIGNED_BYTE;else if(c instanceof Uint8ClampedArray)f=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+c);return{buffer:d,type:f,bytesPerElement:c.BYTES_PER_ELEMENT,version:a.version,size:u}}function i(a,l,c){const h=l.array,u=l.updateRanges;if(s.bindBuffer(c,a),u.length===0)s.bufferSubData(c,0,h);else{u.sort((f,p)=>f.start-p.start);let d=0;for(let f=1;f<u.length;f++){const p=u[d],v=u[f];v.start<=p.start+p.count+1?p.count=Math.max(p.count,v.start+v.count-p.start):(++d,u[d]=v)}u.length=d+1;for(let f=0,p=u.length;f<p;f++){const v=u[f];s.bufferSubData(c,v.start*h.BYTES_PER_ELEMENT,h,v.start,v.count)}l.clearUpdateRanges()}l.onUploadCallback()}function n(a){return a.isInterleavedBufferAttribute&&(a=a.data),e.get(a)}function r(a){a.isInterleavedBufferAttribute&&(a=a.data);const l=e.get(a);l&&(s.deleteBuffer(l.buffer),e.delete(a))}function o(a,l){if(a.isInterleavedBufferAttribute&&(a=a.data),a.isGLBufferAttribute){const h=e.get(a);(!h||h.version<a.version)&&e.set(a,{buffer:a.buffer,type:a.type,bytesPerElement:a.elementSize,version:a.version});return}const c=e.get(a);if(c===void 0)e.set(a,t(a,l));else if(c.version<a.version){if(c.size!==a.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");i(c.buffer,a,l),c.version=a.version}}return{get:n,remove:r,update:o}}var XS=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,jS=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,YS=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,qS=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,ZS=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,JS=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,KS=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,QS=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,$S=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,eM=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,tM=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,nM=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,iM=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,rM=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,sM=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,oM=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,aM=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,lM=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,cM=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,hM=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,uM=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,dM=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,fM=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,pM=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,mM=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,gM=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,vM=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,_M=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,yM=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,xM=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,bM="gl_FragColor = linearToOutputTexel( gl_FragColor );",SM=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,MM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,wM=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,EM=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,TM=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,AM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,CM=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,RM=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,PM=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,IM=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,DM=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,LM=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,UM=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,NM=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,OM=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,FM=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,kM=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,BM=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,zM=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,VM=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,GM=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,HM=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,WM=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,XM=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,jM=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,YM=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,qM=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,ZM=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,JM=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,KM=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,QM=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,$M=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,ew=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,tw=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,nw=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,iw=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,rw=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,sw=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,ow=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,aw=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,lw=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,cw=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,hw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,uw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,dw=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,fw=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,pw=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,mw=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,gw=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,vw=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,_w=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,yw=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,xw=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,bw=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Sw=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Mw=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,ww=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Ew=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Tw=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,Aw=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Cw=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,Rw=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Pw=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,Iw=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,Dw=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Lw=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Uw=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Nw=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Ow=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Fw=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,kw=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,Bw=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,zw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Vw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Gw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,Hw=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const Ww=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Xw=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,jw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Yw=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,qw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Zw=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Jw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Kw=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,Qw=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,$w=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,eE=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,tE=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,nE=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,iE=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,rE=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,sE=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,oE=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,aE=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,lE=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,cE=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,hE=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,uE=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,dE=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,fE=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,pE=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,mE=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,gE=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,vE=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,_E=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,yE=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,xE=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,bE=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,SE=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,ME=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Mt={alphahash_fragment:XS,alphahash_pars_fragment:jS,alphamap_fragment:YS,alphamap_pars_fragment:qS,alphatest_fragment:ZS,alphatest_pars_fragment:JS,aomap_fragment:KS,aomap_pars_fragment:QS,batching_pars_vertex:$S,batching_vertex:eM,begin_vertex:tM,beginnormal_vertex:nM,bsdfs:iM,iridescence_fragment:rM,bumpmap_pars_fragment:sM,clipping_planes_fragment:oM,clipping_planes_pars_fragment:aM,clipping_planes_pars_vertex:lM,clipping_planes_vertex:cM,color_fragment:hM,color_pars_fragment:uM,color_pars_vertex:dM,color_vertex:fM,common:pM,cube_uv_reflection_fragment:mM,defaultnormal_vertex:gM,displacementmap_pars_vertex:vM,displacementmap_vertex:_M,emissivemap_fragment:yM,emissivemap_pars_fragment:xM,colorspace_fragment:bM,colorspace_pars_fragment:SM,envmap_fragment:MM,envmap_common_pars_fragment:wM,envmap_pars_fragment:EM,envmap_pars_vertex:TM,envmap_physical_pars_fragment:FM,envmap_vertex:AM,fog_vertex:CM,fog_pars_vertex:RM,fog_fragment:PM,fog_pars_fragment:IM,gradientmap_pars_fragment:DM,lightmap_pars_fragment:LM,lights_lambert_fragment:UM,lights_lambert_pars_fragment:NM,lights_pars_begin:OM,lights_toon_fragment:kM,lights_toon_pars_fragment:BM,lights_phong_fragment:zM,lights_phong_pars_fragment:VM,lights_physical_fragment:GM,lights_physical_pars_fragment:HM,lights_fragment_begin:WM,lights_fragment_maps:XM,lights_fragment_end:jM,logdepthbuf_fragment:YM,logdepthbuf_pars_fragment:qM,logdepthbuf_pars_vertex:ZM,logdepthbuf_vertex:JM,map_fragment:KM,map_pars_fragment:QM,map_particle_fragment:$M,map_particle_pars_fragment:ew,metalnessmap_fragment:tw,metalnessmap_pars_fragment:nw,morphinstance_vertex:iw,morphcolor_vertex:rw,morphnormal_vertex:sw,morphtarget_pars_vertex:ow,morphtarget_vertex:aw,normal_fragment_begin:lw,normal_fragment_maps:cw,normal_pars_fragment:hw,normal_pars_vertex:uw,normal_vertex:dw,normalmap_pars_fragment:fw,clearcoat_normal_fragment_begin:pw,clearcoat_normal_fragment_maps:mw,clearcoat_pars_fragment:gw,iridescence_pars_fragment:vw,opaque_fragment:_w,packing:yw,premultiplied_alpha_fragment:xw,project_vertex:bw,dithering_fragment:Sw,dithering_pars_fragment:Mw,roughnessmap_fragment:ww,roughnessmap_pars_fragment:Ew,shadowmap_pars_fragment:Tw,shadowmap_pars_vertex:Aw,shadowmap_vertex:Cw,shadowmask_pars_fragment:Rw,skinbase_vertex:Pw,skinning_pars_vertex:Iw,skinning_vertex:Dw,skinnormal_vertex:Lw,specularmap_fragment:Uw,specularmap_pars_fragment:Nw,tonemapping_fragment:Ow,tonemapping_pars_fragment:Fw,transmission_fragment:kw,transmission_pars_fragment:Bw,uv_pars_fragment:zw,uv_pars_vertex:Vw,uv_vertex:Gw,worldpos_vertex:Hw,background_vert:Ww,background_frag:Xw,backgroundCube_vert:jw,backgroundCube_frag:Yw,cube_vert:qw,cube_frag:Zw,depth_vert:Jw,depth_frag:Kw,distanceRGBA_vert:Qw,distanceRGBA_frag:$w,equirect_vert:eE,equirect_frag:tE,linedashed_vert:nE,linedashed_frag:iE,meshbasic_vert:rE,meshbasic_frag:sE,meshlambert_vert:oE,meshlambert_frag:aE,meshmatcap_vert:lE,meshmatcap_frag:cE,meshnormal_vert:hE,meshnormal_frag:uE,meshphong_vert:dE,meshphong_frag:fE,meshphysical_vert:pE,meshphysical_frag:mE,meshtoon_vert:gE,meshtoon_frag:vE,points_vert:_E,points_frag:yE,shadow_vert:xE,shadow_frag:bE,sprite_vert:SE,sprite_frag:ME},Ke={common:{diffuse:{value:new Ge(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new At},alphaMap:{value:null},alphaMapTransform:{value:new At},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new At}},envmap:{envMap:{value:null},envMapRotation:{value:new At},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new At}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new At}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new At},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new At},normalScale:{value:new Me(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new At},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new At}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new At}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new At}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ge(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ge(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new At},alphaTest:{value:0},uvTransform:{value:new At}},sprite:{diffuse:{value:new Ge(16777215)},opacity:{value:1},center:{value:new Me(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new At},alphaMap:{value:null},alphaMapTransform:{value:new At},alphaTest:{value:0}}},oi={basic:{uniforms:si([Ke.common,Ke.specularmap,Ke.envmap,Ke.aomap,Ke.lightmap,Ke.fog]),vertexShader:Mt.meshbasic_vert,fragmentShader:Mt.meshbasic_frag},lambert:{uniforms:si([Ke.common,Ke.specularmap,Ke.envmap,Ke.aomap,Ke.lightmap,Ke.emissivemap,Ke.bumpmap,Ke.normalmap,Ke.displacementmap,Ke.fog,Ke.lights,{emissive:{value:new Ge(0)}}]),vertexShader:Mt.meshlambert_vert,fragmentShader:Mt.meshlambert_frag},phong:{uniforms:si([Ke.common,Ke.specularmap,Ke.envmap,Ke.aomap,Ke.lightmap,Ke.emissivemap,Ke.bumpmap,Ke.normalmap,Ke.displacementmap,Ke.fog,Ke.lights,{emissive:{value:new Ge(0)},specular:{value:new Ge(1118481)},shininess:{value:30}}]),vertexShader:Mt.meshphong_vert,fragmentShader:Mt.meshphong_frag},standard:{uniforms:si([Ke.common,Ke.envmap,Ke.aomap,Ke.lightmap,Ke.emissivemap,Ke.bumpmap,Ke.normalmap,Ke.displacementmap,Ke.roughnessmap,Ke.metalnessmap,Ke.fog,Ke.lights,{emissive:{value:new Ge(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Mt.meshphysical_vert,fragmentShader:Mt.meshphysical_frag},toon:{uniforms:si([Ke.common,Ke.aomap,Ke.lightmap,Ke.emissivemap,Ke.bumpmap,Ke.normalmap,Ke.displacementmap,Ke.gradientmap,Ke.fog,Ke.lights,{emissive:{value:new Ge(0)}}]),vertexShader:Mt.meshtoon_vert,fragmentShader:Mt.meshtoon_frag},matcap:{uniforms:si([Ke.common,Ke.bumpmap,Ke.normalmap,Ke.displacementmap,Ke.fog,{matcap:{value:null}}]),vertexShader:Mt.meshmatcap_vert,fragmentShader:Mt.meshmatcap_frag},points:{uniforms:si([Ke.points,Ke.fog]),vertexShader:Mt.points_vert,fragmentShader:Mt.points_frag},dashed:{uniforms:si([Ke.common,Ke.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Mt.linedashed_vert,fragmentShader:Mt.linedashed_frag},depth:{uniforms:si([Ke.common,Ke.displacementmap]),vertexShader:Mt.depth_vert,fragmentShader:Mt.depth_frag},normal:{uniforms:si([Ke.common,Ke.bumpmap,Ke.normalmap,Ke.displacementmap,{opacity:{value:1}}]),vertexShader:Mt.meshnormal_vert,fragmentShader:Mt.meshnormal_frag},sprite:{uniforms:si([Ke.sprite,Ke.fog]),vertexShader:Mt.sprite_vert,fragmentShader:Mt.sprite_frag},background:{uniforms:{uvTransform:{value:new At},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Mt.background_vert,fragmentShader:Mt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new At}},vertexShader:Mt.backgroundCube_vert,fragmentShader:Mt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Mt.cube_vert,fragmentShader:Mt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Mt.equirect_vert,fragmentShader:Mt.equirect_frag},distanceRGBA:{uniforms:si([Ke.common,Ke.displacementmap,{referencePosition:{value:new I},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Mt.distanceRGBA_vert,fragmentShader:Mt.distanceRGBA_frag},shadow:{uniforms:si([Ke.lights,Ke.fog,{color:{value:new Ge(0)},opacity:{value:1}}]),vertexShader:Mt.shadow_vert,fragmentShader:Mt.shadow_frag}};oi.physical={uniforms:si([oi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new At},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new At},clearcoatNormalScale:{value:new Me(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new At},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new At},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new At},sheen:{value:0},sheenColor:{value:new Ge(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new At},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new At},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new At},transmissionSamplerSize:{value:new Me},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new At},attenuationDistance:{value:0},attenuationColor:{value:new Ge(0)},specularColor:{value:new Ge(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new At},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new At},anisotropyVector:{value:new Me},anisotropyMap:{value:null},anisotropyMapTransform:{value:new At}}]),vertexShader:Mt.meshphysical_vert,fragmentShader:Mt.meshphysical_frag};const _c={r:0,b:0,g:0},Cs=new Mi,wE=new ct;function EE(s,e,t,i,n,r,o){const a=new Ge(0);let l=r===!0?0:1,c,h,u=null,d=0,f=null;function p(y){let _=y.isScene===!0?y.background:null;return _&&_.isTexture&&(_=(y.backgroundBlurriness>0?t:e).get(_)),_}function v(y){let _=!1;const E=p(y);E===null?g(a,l):E&&E.isColor&&(g(E,1),_=!0);const w=s.xr.getEnvironmentBlendMode();w==="additive"?i.buffers.color.setClear(0,0,0,1,o):w==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,o),(s.autoClear||_)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil))}function m(y,_){const E=p(_);E&&(E.isCubeTexture||E.mapping===Qo)?(h===void 0&&(h=new ze(new gn(1,1,1),new wi({name:"BackgroundCubeMaterial",uniforms:Jo(oi.backgroundCube.uniforms),vertexShader:oi.backgroundCube.vertexShader,fragmentShader:oi.backgroundCube.fragmentShader,side:ti,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(w,M,T){this.matrixWorld.copyPosition(T.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(h)),Cs.copy(_.backgroundRotation),Cs.x*=-1,Cs.y*=-1,Cs.z*=-1,E.isCubeTexture&&E.isRenderTargetTexture===!1&&(Cs.y*=-1,Cs.z*=-1),h.material.uniforms.envMap.value=E,h.material.uniforms.flipEnvMap.value=E.isCubeTexture&&E.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=_.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(wE.makeRotationFromEuler(Cs)),h.material.toneMapped=Nt.getTransfer(E.colorSpace)!==Kt,(u!==E||d!==E.version||f!==s.toneMapping)&&(h.material.needsUpdate=!0,u=E,d=E.version,f=s.toneMapping),h.layers.enableAll(),y.unshift(h,h.geometry,h.material,0,0,null)):E&&E.isTexture&&(c===void 0&&(c=new ze(new ar(2,2),new wi({name:"BackgroundMaterial",uniforms:Jo(oi.background.uniforms),vertexShader:oi.background.vertexShader,fragmentShader:oi.background.fragmentShader,side:br,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(c)),c.material.uniforms.t2D.value=E,c.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,c.material.toneMapped=Nt.getTransfer(E.colorSpace)!==Kt,E.matrixAutoUpdate===!0&&E.updateMatrix(),c.material.uniforms.uvTransform.value.copy(E.matrix),(u!==E||d!==E.version||f!==s.toneMapping)&&(c.material.needsUpdate=!0,u=E,d=E.version,f=s.toneMapping),c.layers.enableAll(),y.unshift(c,c.geometry,c.material,0,0,null))}function g(y,_){y.getRGB(_c,Ov(s)),i.buffers.color.setClear(_c.r,_c.g,_c.b,_,o)}function x(){h!==void 0&&(h.geometry.dispose(),h.material.dispose(),h=void 0),c!==void 0&&(c.geometry.dispose(),c.material.dispose(),c=void 0)}return{getClearColor:function(){return a},setClearColor:function(y,_=1){a.set(y),l=_,g(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(y){l=y,g(a,l)},render:v,addToRenderList:m,dispose:x}}function TE(s,e){const t=s.getParameter(s.MAX_VERTEX_ATTRIBS),i={},n=d(null);let r=n,o=!1;function a(b,P,D,G,H){let q=!1;const F=u(G,D,P);r!==F&&(r=F,c(r.object)),q=f(b,G,D,H),q&&p(b,G,D,H),H!==null&&e.update(H,s.ELEMENT_ARRAY_BUFFER),(q||o)&&(o=!1,_(b,P,D,G),H!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,e.get(H).buffer))}function l(){return s.createVertexArray()}function c(b){return s.bindVertexArray(b)}function h(b){return s.deleteVertexArray(b)}function u(b,P,D){const G=D.wireframe===!0;let H=i[b.id];H===void 0&&(H={},i[b.id]=H);let q=H[P.id];q===void 0&&(q={},H[P.id]=q);let F=q[G];return F===void 0&&(F=d(l()),q[G]=F),F}function d(b){const P=[],D=[],G=[];for(let H=0;H<t;H++)P[H]=0,D[H]=0,G[H]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:P,enabledAttributes:D,attributeDivisors:G,object:b,attributes:{},index:null}}function f(b,P,D,G){const H=r.attributes,q=P.attributes;let F=0;const te=D.getAttributes();for(const Y in te)if(te[Y].location>=0){const $=H[Y];let L=q[Y];if(L===void 0&&(Y==="instanceMatrix"&&b.instanceMatrix&&(L=b.instanceMatrix),Y==="instanceColor"&&b.instanceColor&&(L=b.instanceColor)),$===void 0||$.attribute!==L||L&&$.data!==L.data)return!0;F++}return r.attributesNum!==F||r.index!==G}function p(b,P,D,G){const H={},q=P.attributes;let F=0;const te=D.getAttributes();for(const Y in te)if(te[Y].location>=0){let $=q[Y];$===void 0&&(Y==="instanceMatrix"&&b.instanceMatrix&&($=b.instanceMatrix),Y==="instanceColor"&&b.instanceColor&&($=b.instanceColor));const L={};L.attribute=$,$&&$.data&&(L.data=$.data),H[Y]=L,F++}r.attributes=H,r.attributesNum=F,r.index=G}function v(){const b=r.newAttributes;for(let P=0,D=b.length;P<D;P++)b[P]=0}function m(b){g(b,0)}function g(b,P){const D=r.newAttributes,G=r.enabledAttributes,H=r.attributeDivisors;D[b]=1,G[b]===0&&(s.enableVertexAttribArray(b),G[b]=1),H[b]!==P&&(s.vertexAttribDivisor(b,P),H[b]=P)}function x(){const b=r.newAttributes,P=r.enabledAttributes;for(let D=0,G=P.length;D<G;D++)P[D]!==b[D]&&(s.disableVertexAttribArray(D),P[D]=0)}function y(b,P,D,G,H,q,F){F===!0?s.vertexAttribIPointer(b,P,D,H,q):s.vertexAttribPointer(b,P,D,G,H,q)}function _(b,P,D,G){v();const H=G.attributes,q=D.getAttributes(),F=P.defaultAttributeValues;for(const te in q){const Y=q[te];if(Y.location>=0){let j=H[te];if(j===void 0&&(te==="instanceMatrix"&&b.instanceMatrix&&(j=b.instanceMatrix),te==="instanceColor"&&b.instanceColor&&(j=b.instanceColor)),j!==void 0){const $=j.normalized,L=j.itemSize,Z=e.get(j);if(Z===void 0)continue;const Q=Z.buffer,k=Z.type,W=Z.bytesPerElement,J=k===s.INT||k===s.UNSIGNED_INT||j.gpuType===zh;if(j.isInterleavedBufferAttribute){const X=j.data,ne=X.stride,me=j.offset;if(X.isInstancedInterleavedBuffer){for(let be=0;be<Y.locationSize;be++)g(Y.location+be,X.meshPerAttribute);b.isInstancedMesh!==!0&&G._maxInstanceCount===void 0&&(G._maxInstanceCount=X.meshPerAttribute*X.count)}else for(let be=0;be<Y.locationSize;be++)m(Y.location+be);s.bindBuffer(s.ARRAY_BUFFER,Q);for(let be=0;be<Y.locationSize;be++)y(Y.location+be,L/Y.locationSize,k,$,ne*W,(me+L/Y.locationSize*be)*W,J)}else{if(j.isInstancedBufferAttribute){for(let X=0;X<Y.locationSize;X++)g(Y.location+X,j.meshPerAttribute);b.isInstancedMesh!==!0&&G._maxInstanceCount===void 0&&(G._maxInstanceCount=j.meshPerAttribute*j.count)}else for(let X=0;X<Y.locationSize;X++)m(Y.location+X);s.bindBuffer(s.ARRAY_BUFFER,Q);for(let X=0;X<Y.locationSize;X++)y(Y.location+X,L/Y.locationSize,k,$,L*W,L/Y.locationSize*X*W,J)}}else if(F!==void 0){const $=F[te];if($!==void 0)switch($.length){case 2:s.vertexAttrib2fv(Y.location,$);break;case 3:s.vertexAttrib3fv(Y.location,$);break;case 4:s.vertexAttrib4fv(Y.location,$);break;default:s.vertexAttrib1fv(Y.location,$)}}}}x()}function E(){T();for(const b in i){const P=i[b];for(const D in P){const G=P[D];for(const H in G)h(G[H].object),delete G[H];delete P[D]}delete i[b]}}function w(b){if(i[b.id]===void 0)return;const P=i[b.id];for(const D in P){const G=P[D];for(const H in G)h(G[H].object),delete G[H];delete P[D]}delete i[b.id]}function M(b){for(const P in i){const D=i[P];if(D[b.id]===void 0)continue;const G=D[b.id];for(const H in G)h(G[H].object),delete G[H];delete D[b.id]}}function T(){S(),o=!0,r!==n&&(r=n,c(r.object))}function S(){n.geometry=null,n.program=null,n.wireframe=!1}return{setup:a,reset:T,resetDefaultState:S,dispose:E,releaseStatesOfGeometry:w,releaseStatesOfProgram:M,initAttributes:v,enableAttribute:m,disableUnusedAttributes:x}}function AE(s,e,t){let i;function n(c){i=c}function r(c,h){s.drawArrays(i,c,h),t.update(h,i,1)}function o(c,h,u){u!==0&&(s.drawArraysInstanced(i,c,h,u),t.update(h,i,u))}function a(c,h,u){if(u===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(i,c,0,h,0,u);let f=0;for(let p=0;p<u;p++)f+=h[p];t.update(f,i,1)}function l(c,h,u,d){if(u===0)return;const f=e.get("WEBGL_multi_draw");if(f===null)for(let p=0;p<c.length;p++)o(c[p],h[p],d[p]);else{f.multiDrawArraysInstancedWEBGL(i,c,0,h,0,d,0,u);let p=0;for(let v=0;v<u;v++)p+=h[v]*d[v];t.update(p,i,1)}}this.setMode=n,this.render=r,this.renderInstances=o,this.renderMultiDraw=a,this.renderMultiDrawInstances=l}function CE(s,e,t,i){let n;function r(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const M=e.get("EXT_texture_filter_anisotropic");n=s.getParameter(M.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function o(M){return!(M!==ci&&i.convert(M)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_FORMAT))}function a(M){const T=M===$o&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(M!==rr&&i.convert(M)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_TYPE)&&M!==Si&&!T)}function l(M){if(M==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";M="mediump"}return M==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let c=t.precision!==void 0?t.precision:"highp";const h=l(c);h!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",h,"instead."),c=h);const u=t.logarithmicDepthBuffer===!0,d=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),f=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),p=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),v=s.getParameter(s.MAX_TEXTURE_SIZE),m=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),g=s.getParameter(s.MAX_VERTEX_ATTRIBS),x=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),y=s.getParameter(s.MAX_VARYING_VECTORS),_=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),E=p>0,w=s.getParameter(s.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:r,getMaxPrecision:l,textureFormatReadable:o,textureTypeReadable:a,precision:c,logarithmicDepthBuffer:u,reverseDepthBuffer:d,maxTextures:f,maxVertexTextures:p,maxTextureSize:v,maxCubemapSize:m,maxAttributes:g,maxVertexUniforms:x,maxVaryings:y,maxFragmentUniforms:_,vertexTextures:E,maxSamples:w}}function RE(s){const e=this;let t=null,i=0,n=!1,r=!1;const o=new mr,a=new At,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(u,d){const f=u.length!==0||d||i!==0||n;return n=d,i=u.length,f},this.beginShadows=function(){r=!0,h(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(u,d){t=h(u,d,0)},this.setState=function(u,d,f){const p=u.clippingPlanes,v=u.clipIntersection,m=u.clipShadows,g=s.get(u);if(!n||p===null||p.length===0||r&&!m)r?h(null):c();else{const x=r?0:i,y=x*4;let _=g.clippingState||null;l.value=_,_=h(p,d,y,f);for(let E=0;E!==y;++E)_[E]=t[E];g.clippingState=_,this.numIntersection=v?this.numPlanes:0,this.numPlanes+=x}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function h(u,d,f,p){const v=u!==null?u.length:0;let m=null;if(v!==0){if(m=l.value,p!==!0||m===null){const g=f+v*4,x=d.matrixWorldInverse;a.getNormalMatrix(x),(m===null||m.length<g)&&(m=new Float32Array(g));for(let y=0,_=f;y!==v;++y,_+=4)o.copy(u[y]).applyMatrix4(x,a),o.normal.toArray(m,_),m[_+3]=o.constant}l.value=m,l.needsUpdate=!0}return e.numPlanes=v,e.numIntersection=0,m}}function PE(s){let e=new WeakMap;function t(o,a){return a===qa?o.mapping=zr:a===Za&&(o.mapping=ss),o}function i(o){if(o&&o.isTexture){const a=o.mapping;if(a===qa||a===Za)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new kv(l.height);return c.fromEquirectangularTexture(s,o),e.set(o,c),o.addEventListener("dispose",n),t(c.texture,o.mapping)}else return null}}return o}function n(o){const a=o.target;a.removeEventListener("dispose",n);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function r(){e=new WeakMap}return{get:i,dispose:r}}const zo=4,lg=[.125,.215,.35,.446,.526,.582],Vs=20,yd=new hs,cg=new Ge;let xd=null,bd=0,Sd=0,Md=!1;const Os=(1+Math.sqrt(5))/2,Lo=1/Os,hg=[new I(-Os,Lo,0),new I(Os,Lo,0),new I(-Lo,0,Os),new I(Lo,0,Os),new I(0,Os,-Lo),new I(0,Os,Lo),new I(-1,1,-1),new I(1,1,-1),new I(-1,1,1),new I(1,1,1)],IE=new I;class ff{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,n=100,r={}){const{size:o=256,position:a=IE}=r;xd=this._renderer.getRenderTarget(),bd=this._renderer.getActiveCubeFace(),Sd=this._renderer.getActiveMipmapLevel(),Md=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(o);const l=this._allocateTargets();return l.depthBuffer=!0,this._sceneToCubeUV(e,i,n,l,a),t>0&&this._blur(l,0,0,t),this._applyPMREM(l),this._cleanup(l),l}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=fg(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=dg(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(xd,bd,Sd),this._renderer.xr.enabled=Md,e.scissorTest=!1,yc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===zr||e.mapping===ss?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),xd=this._renderer.getRenderTarget(),bd=this._renderer.getActiveCubeFace(),Sd=this._renderer.getActiveMipmapLevel(),Md=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:Mn,minFilter:Mn,generateMipmaps:!1,type:$o,format:ci,colorSpace:eo,depthBuffer:!1},n=ug(e,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=ug(e,t,i);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=DE(r)),this._blurMaterial=LE(r,e,t)}return n}_compileMaterial(e){const t=new ze(this._lodPlanes[0],e);this._renderer.compile(t,yd)}_sceneToCubeUV(e,t,i,n,r){const l=new Sn(90,1,t,i),c=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],u=this._renderer,d=u.autoClear,f=u.toneMapping;u.getClearColor(cg),u.toneMapping=yr,u.autoClear=!1;const p=new Bn({name:"PMREM.Background",side:ti,depthWrite:!1,depthTest:!1}),v=new ze(new gn,p);let m=!1;const g=e.background;g?g.isColor&&(p.color.copy(g),e.background=null,m=!0):(p.color.copy(cg),m=!0);for(let x=0;x<6;x++){const y=x%3;y===0?(l.up.set(0,c[x],0),l.position.set(r.x,r.y,r.z),l.lookAt(r.x+h[x],r.y,r.z)):y===1?(l.up.set(0,0,c[x]),l.position.set(r.x,r.y,r.z),l.lookAt(r.x,r.y+h[x],r.z)):(l.up.set(0,c[x],0),l.position.set(r.x,r.y,r.z),l.lookAt(r.x,r.y,r.z+h[x]));const _=this._cubeSize;yc(n,y*_,x>2?_:0,_,_),u.setRenderTarget(n),m&&u.render(v,l),u.render(e,l)}v.geometry.dispose(),v.material.dispose(),u.toneMapping=f,u.autoClear=d,e.background=g}_textureToCubeUV(e,t){const i=this._renderer,n=e.mapping===zr||e.mapping===ss;n?(this._cubemapMaterial===null&&(this._cubemapMaterial=fg()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=dg());const r=n?this._cubemapMaterial:this._equirectMaterial,o=new ze(this._lodPlanes[0],r),a=r.uniforms;a.envMap.value=e;const l=this._cubeSize;yc(t,0,0,3*l,2*l),i.setRenderTarget(t),i.render(o,yd)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;const n=this._lodPlanes.length;for(let r=1;r<n;r++){const o=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),a=hg[(n-r-1)%hg.length];this._blur(e,r-1,r,o,a)}t.autoClear=i}_blur(e,t,i,n,r){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,i,n,"latitudinal",r),this._halfBlur(o,e,i,i,n,"longitudinal",r)}_halfBlur(e,t,i,n,r,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=new ze(this._lodPlanes[n],c),d=c.uniforms,f=this._sizeLods[i]-1,p=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*Vs-1),v=r/p,m=isFinite(r)?1+Math.floor(h*v):Vs;m>Vs&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${Vs}`);const g=[];let x=0;for(let M=0;M<Vs;++M){const T=M/v,S=Math.exp(-T*T/2);g.push(S),M===0?x+=S:M<m&&(x+=2*S)}for(let M=0;M<g.length;M++)g[M]=g[M]/x;d.envMap.value=e.texture,d.samples.value=m,d.weights.value=g,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:y}=this;d.dTheta.value=p,d.mipInt.value=y-i;const _=this._sizeLods[n],E=3*_*(n>y-zo?n-y+zo:0),w=4*(this._cubeSize-_);yc(t,E,w,3*_,2*_),l.setRenderTarget(t),l.render(u,yd)}}function DE(s){const e=[],t=[],i=[];let n=s;const r=s-zo+1+lg.length;for(let o=0;o<r;o++){const a=Math.pow(2,n);t.push(a);let l=1/a;o>s-zo?l=lg[o-s+zo-1]:o===0&&(l=0),i.push(l);const c=1/(a-2),h=-c,u=1+c,d=[h,h,u,h,u,u,h,h,u,u,h,u],f=6,p=6,v=3,m=2,g=1,x=new Float32Array(v*p*f),y=new Float32Array(m*p*f),_=new Float32Array(g*p*f);for(let w=0;w<f;w++){const M=w%3*2/3-1,T=w>2?0:-1,S=[M,T,0,M+2/3,T,0,M+2/3,T+1,0,M,T,0,M+2/3,T+1,0,M,T+1,0];x.set(S,v*p*w),y.set(d,m*p*w);const b=[w,w,w,w,w,w];_.set(b,g*p*w)}const E=new xt;E.setAttribute("position",new Rt(x,v)),E.setAttribute("uv",new Rt(y,m)),E.setAttribute("faceIndex",new Rt(_,g)),e.push(E),n>zo&&n--}return{lodPlanes:e,sizeLods:t,sigmas:i}}function ug(s,e,t){const i=new Xi(s,e,t);return i.texture.mapping=Qo,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function yc(s,e,t,i,n){s.viewport.set(e,t,i,n),s.scissor.set(e,t,i,n)}function LE(s,e,t){const i=new Float32Array(Vs),n=new I(0,1,0);return new wi({name:"SphericalGaussianBlur",defines:{n:Vs,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n}},vertexShader:Sp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Or,depthTest:!1,depthWrite:!1})}function dg(){return new wi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Sp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Or,depthTest:!1,depthWrite:!1})}function fg(){return new wi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Sp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Or,depthTest:!1,depthWrite:!1})}function Sp(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function UE(s){let e=new WeakMap,t=null;function i(a){if(a&&a.isTexture){const l=a.mapping,c=l===qa||l===Za,h=l===zr||l===ss;if(c||h){let u=e.get(a);const d=u!==void 0?u.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==d)return t===null&&(t=new ff(s)),u=c?t.fromEquirectangular(a,u):t.fromCubemap(a,u),u.texture.pmremVersion=a.pmremVersion,e.set(a,u),u.texture;if(u!==void 0)return u.texture;{const f=a.image;return c&&f&&f.height>0||h&&f&&n(f)?(t===null&&(t=new ff(s)),u=c?t.fromEquirectangular(a):t.fromCubemap(a),u.texture.pmremVersion=a.pmremVersion,e.set(a,u),a.addEventListener("dispose",r),u.texture):null}}}return a}function n(a){let l=0;const c=6;for(let h=0;h<c;h++)a[h]!==void 0&&l++;return l===c}function r(a){const l=a.target;l.removeEventListener("dispose",r);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:i,dispose:o}}function NE(s){const e={};function t(i){if(e[i]!==void 0)return e[i];let n;switch(i){case"WEBGL_depth_texture":n=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=s.getExtension(i)}return e[i]=n,n}return{has:function(i){return t(i)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(i){const n=t(i);return n===null&&Go("THREE.WebGLRenderer: "+i+" extension not supported."),n}}}function OE(s,e,t,i){const n={},r=new WeakMap;function o(u){const d=u.target;d.index!==null&&e.remove(d.index);for(const p in d.attributes)e.remove(d.attributes[p]);d.removeEventListener("dispose",o),delete n[d.id];const f=r.get(d);f&&(e.remove(f),r.delete(d)),i.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function a(u,d){return n[d.id]===!0||(d.addEventListener("dispose",o),n[d.id]=!0,t.memory.geometries++),d}function l(u){const d=u.attributes;for(const f in d)e.update(d[f],s.ARRAY_BUFFER)}function c(u){const d=[],f=u.index,p=u.attributes.position;let v=0;if(f!==null){const x=f.array;v=f.version;for(let y=0,_=x.length;y<_;y+=3){const E=x[y+0],w=x[y+1],M=x[y+2];d.push(E,w,w,M,M,E)}}else if(p!==void 0){const x=p.array;v=p.version;for(let y=0,_=x.length/3-1;y<_;y+=3){const E=y+0,w=y+1,M=y+2;d.push(E,w,w,M,M,E)}}else return;const m=new(Dv(d)?Zf:qf)(d,1);m.version=v;const g=r.get(u);g&&e.remove(g),r.set(u,m)}function h(u){const d=r.get(u);if(d){const f=u.index;f!==null&&d.version<f.version&&c(u)}else c(u);return r.get(u)}return{get:a,update:l,getWireframeAttribute:h}}function FE(s,e,t){let i;function n(d){i=d}let r,o;function a(d){r=d.type,o=d.bytesPerElement}function l(d,f){s.drawElements(i,f,r,d*o),t.update(f,i,1)}function c(d,f,p){p!==0&&(s.drawElementsInstanced(i,f,r,d*o,p),t.update(f,i,p))}function h(d,f,p){if(p===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(i,f,0,r,d,0,p);let m=0;for(let g=0;g<p;g++)m+=f[g];t.update(m,i,1)}function u(d,f,p,v){if(p===0)return;const m=e.get("WEBGL_multi_draw");if(m===null)for(let g=0;g<d.length;g++)c(d[g]/o,f[g],v[g]);else{m.multiDrawElementsInstancedWEBGL(i,f,0,r,d,0,v,0,p);let g=0;for(let x=0;x<p;x++)g+=f[x]*v[x];t.update(g,i,1)}}this.setMode=n,this.setIndex=a,this.render=l,this.renderInstances=c,this.renderMultiDraw=h,this.renderMultiDrawInstances=u}function kE(s){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function i(r,o,a){switch(t.calls++,o){case s.TRIANGLES:t.triangles+=a*(r/3);break;case s.LINES:t.lines+=a*(r/2);break;case s.LINE_STRIP:t.lines+=a*(r-1);break;case s.LINE_LOOP:t.lines+=a*r;break;case s.POINTS:t.points+=a*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function n(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:n,update:i}}function BE(s,e,t){const i=new WeakMap,n=new It;function r(o,a,l){const c=o.morphTargetInfluences,h=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,u=h!==void 0?h.length:0;let d=i.get(a);if(d===void 0||d.count!==u){let S=function(){M.dispose(),i.delete(a),a.removeEventListener("dispose",S)};d!==void 0&&d.texture.dispose();const f=a.morphAttributes.position!==void 0,p=a.morphAttributes.normal!==void 0,v=a.morphAttributes.color!==void 0,m=a.morphAttributes.position||[],g=a.morphAttributes.normal||[],x=a.morphAttributes.color||[];let y=0;f===!0&&(y=1),p===!0&&(y=2),v===!0&&(y=3);let _=a.attributes.position.count*y,E=1;_>e.maxTextureSize&&(E=Math.ceil(_/e.maxTextureSize),_=e.maxTextureSize);const w=new Float32Array(_*E*4*u),M=new Yh(w,_,E,u);M.type=Si,M.needsUpdate=!0;const T=y*4;for(let b=0;b<u;b++){const P=m[b],D=g[b],G=x[b],H=_*E*4*b;for(let q=0;q<P.count;q++){const F=q*T;f===!0&&(n.fromBufferAttribute(P,q),w[H+F+0]=n.x,w[H+F+1]=n.y,w[H+F+2]=n.z,w[H+F+3]=0),p===!0&&(n.fromBufferAttribute(D,q),w[H+F+4]=n.x,w[H+F+5]=n.y,w[H+F+6]=n.z,w[H+F+7]=0),v===!0&&(n.fromBufferAttribute(G,q),w[H+F+8]=n.x,w[H+F+9]=n.y,w[H+F+10]=n.z,w[H+F+11]=G.itemSize===4?n.w:1)}}d={count:u,texture:M,size:new Me(_,E)},i.set(a,d),a.addEventListener("dispose",S)}if(o.isInstancedMesh===!0&&o.morphTexture!==null)l.getUniforms().setValue(s,"morphTexture",o.morphTexture,t);else{let f=0;for(let v=0;v<c.length;v++)f+=c[v];const p=a.morphTargetsRelative?1:1-f;l.getUniforms().setValue(s,"morphTargetBaseInfluence",p),l.getUniforms().setValue(s,"morphTargetInfluences",c)}l.getUniforms().setValue(s,"morphTargetsTexture",d.texture,t),l.getUniforms().setValue(s,"morphTargetsTextureSize",d.size)}return{update:r}}function zE(s,e,t,i){let n=new WeakMap;function r(l){const c=i.render.frame,h=l.geometry,u=e.get(l,h);if(n.get(u)!==c&&(e.update(u),n.set(u,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),n.get(l)!==c&&(t.update(l.instanceMatrix,s.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,s.ARRAY_BUFFER),n.set(l,c))),l.isSkinnedMesh){const d=l.skeleton;n.get(d)!==c&&(d.update(),n.set(d,c))}return u}function o(){n=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:r,dispose:o}}const C_=new fn,pg=new Kf(1,1),R_=new Yh,P_=new qh,I_=new xl,mg=[],gg=[],vg=new Float32Array(16),_g=new Float32Array(9),yg=new Float32Array(4);function ia(s,e,t){const i=s[0];if(i<=0||i>0)return s;const n=e*t;let r=mg[n];if(r===void 0&&(r=new Float32Array(n),mg[n]=r),e!==0){i.toArray(r,0);for(let o=1,a=0;o!==e;++o)a+=t,s[o].toArray(r,a)}return r}function In(s,e){if(s.length!==e.length)return!1;for(let t=0,i=s.length;t<i;t++)if(s[t]!==e[t])return!1;return!0}function Dn(s,e){for(let t=0,i=e.length;t<i;t++)s[t]=e[t]}function xu(s,e){let t=gg[e];t===void 0&&(t=new Int32Array(e),gg[e]=t);for(let i=0;i!==e;++i)t[i]=s.allocateTextureUnit();return t}function VE(s,e){const t=this.cache;t[0]!==e&&(s.uniform1f(this.addr,e),t[0]=e)}function GE(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(In(t,e))return;s.uniform2fv(this.addr,e),Dn(t,e)}}function HE(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(In(t,e))return;s.uniform3fv(this.addr,e),Dn(t,e)}}function WE(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(In(t,e))return;s.uniform4fv(this.addr,e),Dn(t,e)}}function XE(s,e){const t=this.cache,i=e.elements;if(i===void 0){if(In(t,e))return;s.uniformMatrix2fv(this.addr,!1,e),Dn(t,e)}else{if(In(t,i))return;yg.set(i),s.uniformMatrix2fv(this.addr,!1,yg),Dn(t,i)}}function jE(s,e){const t=this.cache,i=e.elements;if(i===void 0){if(In(t,e))return;s.uniformMatrix3fv(this.addr,!1,e),Dn(t,e)}else{if(In(t,i))return;_g.set(i),s.uniformMatrix3fv(this.addr,!1,_g),Dn(t,i)}}function YE(s,e){const t=this.cache,i=e.elements;if(i===void 0){if(In(t,e))return;s.uniformMatrix4fv(this.addr,!1,e),Dn(t,e)}else{if(In(t,i))return;vg.set(i),s.uniformMatrix4fv(this.addr,!1,vg),Dn(t,i)}}function qE(s,e){const t=this.cache;t[0]!==e&&(s.uniform1i(this.addr,e),t[0]=e)}function ZE(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(In(t,e))return;s.uniform2iv(this.addr,e),Dn(t,e)}}function JE(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(In(t,e))return;s.uniform3iv(this.addr,e),Dn(t,e)}}function KE(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(In(t,e))return;s.uniform4iv(this.addr,e),Dn(t,e)}}function QE(s,e){const t=this.cache;t[0]!==e&&(s.uniform1ui(this.addr,e),t[0]=e)}function $E(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(In(t,e))return;s.uniform2uiv(this.addr,e),Dn(t,e)}}function eT(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(In(t,e))return;s.uniform3uiv(this.addr,e),Dn(t,e)}}function tT(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(In(t,e))return;s.uniform4uiv(this.addr,e),Dn(t,e)}}function nT(s,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(s.uniform1i(this.addr,n),i[0]=n);let r;this.type===s.SAMPLER_2D_SHADOW?(pg.compareFunction=Xf,r=pg):r=C_,t.setTexture2D(e||r,n)}function iT(s,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(s.uniform1i(this.addr,n),i[0]=n),t.setTexture3D(e||P_,n)}function rT(s,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(s.uniform1i(this.addr,n),i[0]=n),t.setTextureCube(e||I_,n)}function sT(s,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(s.uniform1i(this.addr,n),i[0]=n),t.setTexture2DArray(e||R_,n)}function oT(s){switch(s){case 5126:return VE;case 35664:return GE;case 35665:return HE;case 35666:return WE;case 35674:return XE;case 35675:return jE;case 35676:return YE;case 5124:case 35670:return qE;case 35667:case 35671:return ZE;case 35668:case 35672:return JE;case 35669:case 35673:return KE;case 5125:return QE;case 36294:return $E;case 36295:return eT;case 36296:return tT;case 35678:case 36198:case 36298:case 36306:case 35682:return nT;case 35679:case 36299:case 36307:return iT;case 35680:case 36300:case 36308:case 36293:return rT;case 36289:case 36303:case 36311:case 36292:return sT}}function aT(s,e){s.uniform1fv(this.addr,e)}function lT(s,e){const t=ia(e,this.size,2);s.uniform2fv(this.addr,t)}function cT(s,e){const t=ia(e,this.size,3);s.uniform3fv(this.addr,t)}function hT(s,e){const t=ia(e,this.size,4);s.uniform4fv(this.addr,t)}function uT(s,e){const t=ia(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,t)}function dT(s,e){const t=ia(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,t)}function fT(s,e){const t=ia(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,t)}function pT(s,e){s.uniform1iv(this.addr,e)}function mT(s,e){s.uniform2iv(this.addr,e)}function gT(s,e){s.uniform3iv(this.addr,e)}function vT(s,e){s.uniform4iv(this.addr,e)}function _T(s,e){s.uniform1uiv(this.addr,e)}function yT(s,e){s.uniform2uiv(this.addr,e)}function xT(s,e){s.uniform3uiv(this.addr,e)}function bT(s,e){s.uniform4uiv(this.addr,e)}function ST(s,e,t){const i=this.cache,n=e.length,r=xu(t,n);In(i,r)||(s.uniform1iv(this.addr,r),Dn(i,r));for(let o=0;o!==n;++o)t.setTexture2D(e[o]||C_,r[o])}function MT(s,e,t){const i=this.cache,n=e.length,r=xu(t,n);In(i,r)||(s.uniform1iv(this.addr,r),Dn(i,r));for(let o=0;o!==n;++o)t.setTexture3D(e[o]||P_,r[o])}function wT(s,e,t){const i=this.cache,n=e.length,r=xu(t,n);In(i,r)||(s.uniform1iv(this.addr,r),Dn(i,r));for(let o=0;o!==n;++o)t.setTextureCube(e[o]||I_,r[o])}function ET(s,e,t){const i=this.cache,n=e.length,r=xu(t,n);In(i,r)||(s.uniform1iv(this.addr,r),Dn(i,r));for(let o=0;o!==n;++o)t.setTexture2DArray(e[o]||R_,r[o])}function TT(s){switch(s){case 5126:return aT;case 35664:return lT;case 35665:return cT;case 35666:return hT;case 35674:return uT;case 35675:return dT;case 35676:return fT;case 5124:case 35670:return pT;case 35667:case 35671:return mT;case 35668:case 35672:return gT;case 35669:case 35673:return vT;case 5125:return _T;case 36294:return yT;case 36295:return xT;case 36296:return bT;case 35678:case 36198:case 36298:case 36306:case 35682:return ST;case 35679:case 36299:case 36307:return MT;case 35680:case 36300:case 36308:case 36293:return wT;case 36289:case 36303:case 36311:case 36292:return ET}}class AT{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.setValue=oT(t.type)}}class CT{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=TT(t.type)}}class RT{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){const n=this.seq;for(let r=0,o=n.length;r!==o;++r){const a=n[r];a.setValue(e,t[a.id],i)}}}const wd=/(\w+)(\])?(\[|\.)?/g;function xg(s,e){s.seq.push(e),s.map[e.id]=e}function PT(s,e,t){const i=s.name,n=i.length;for(wd.lastIndex=0;;){const r=wd.exec(i),o=wd.lastIndex;let a=r[1];const l=r[2]==="]",c=r[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===n){xg(t,c===void 0?new AT(a,s,e):new CT(a,s,e));break}else{let u=t.map[a];u===void 0&&(u=new RT(a),xg(t,u)),t=u}}}class Bc{constructor(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let n=0;n<i;++n){const r=e.getActiveUniform(t,n),o=e.getUniformLocation(t,r.name);PT(r,o,this)}}setValue(e,t,i,n){const r=this.map[t];r!==void 0&&r.setValue(e,i,n)}setOptional(e,t,i){const n=t[i];n!==void 0&&this.setValue(e,i,n)}static upload(e,t,i,n){for(let r=0,o=t.length;r!==o;++r){const a=t[r],l=i[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,n)}}static seqWithValue(e,t){const i=[];for(let n=0,r=e.length;n!==r;++n){const o=e[n];o.id in t&&i.push(o)}return i}}function bg(s,e,t){const i=s.createShader(e);return s.shaderSource(i,t),s.compileShader(i),i}const IT=37297;let DT=0;function LT(s,e){const t=s.split(`
`),i=[],n=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let o=n;o<r;o++){const a=o+1;i.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return i.join(`
`)}const Sg=new At;function UT(s){Nt._getMatrix(Sg,Nt.workingColorSpace,s);const e=`mat3( ${Sg.elements.map(t=>t.toFixed(4))} )`;switch(Nt.getTransfer(s)){case $a:return[e,"LinearTransferOETF"];case Kt:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",s),[e,"LinearTransferOETF"]}}function Mg(s,e,t){const i=s.getShaderParameter(e,s.COMPILE_STATUS),n=s.getShaderInfoLog(e).trim();if(i&&n==="")return"";const r=/ERROR: 0:(\d+)/.exec(n);if(r){const o=parseInt(r[1]);return t.toUpperCase()+`

`+n+`

`+LT(s.getShaderSource(e),o)}else return n}function NT(s,e){const t=UT(e);return[`vec4 ${s}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function OT(s,e){let t;switch(e){case fv:t="Linear";break;case pv:t="Reinhard";break;case mv:t="Cineon";break;case gv:t="ACESFilmic";break;case th:t="AgX";break;case _v:t="Neutral";break;case vv:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+s+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const xc=new I;function FT(){Nt.getLuminanceCoefficients(xc);const s=xc.x.toFixed(4),e=xc.y.toFixed(4),t=xc.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${s}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function kT(s){return[s.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",s.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Ra).join(`
`)}function BT(s){const e=[];for(const t in s){const i=s[t];i!==!1&&e.push("#define "+t+" "+i)}return e.join(`
`)}function zT(s,e){const t={},i=s.getProgramParameter(e,s.ACTIVE_ATTRIBUTES);for(let n=0;n<i;n++){const r=s.getActiveAttrib(e,n),o=r.name;let a=1;r.type===s.FLOAT_MAT2&&(a=2),r.type===s.FLOAT_MAT3&&(a=3),r.type===s.FLOAT_MAT4&&(a=4),t[o]={type:r.type,location:s.getAttribLocation(e,o),locationSize:a}}return t}function Ra(s){return s!==""}function wg(s,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Eg(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const VT=/^[ \t]*#include +<([\w\d./]+)>/gm;function pf(s){return s.replace(VT,HT)}const GT=new Map;function HT(s,e){let t=Mt[e];if(t===void 0){const i=GT.get(e);if(i!==void 0)t=Mt[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,i);else throw new Error("Can not resolve #include <"+e+">")}return pf(t)}const WT=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Tg(s){return s.replace(WT,XT)}function XT(s,e,t,i){let n="";for(let r=parseInt(e);r<parseInt(t);r++)n+=i.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return n}function Ag(s){let e=`precision ${s.precision} float;
	precision ${s.precision} int;
	precision ${s.precision} sampler2D;
	precision ${s.precision} samplerCube;
	precision ${s.precision} sampler3D;
	precision ${s.precision} sampler2DArray;
	precision ${s.precision} sampler2DShadow;
	precision ${s.precision} samplerCubeShadow;
	precision ${s.precision} sampler2DArrayShadow;
	precision ${s.precision} isampler2D;
	precision ${s.precision} isampler3D;
	precision ${s.precision} isamplerCube;
	precision ${s.precision} isampler2DArray;
	precision ${s.precision} usampler2D;
	precision ${s.precision} usampler3D;
	precision ${s.precision} usamplerCube;
	precision ${s.precision} usampler2DArray;
	`;return s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function jT(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===Uf?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===La?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===pr&&(e="SHADOWMAP_TYPE_VSM"),e}function YT(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case zr:case ss:e="ENVMAP_TYPE_CUBE";break;case Qo:e="ENVMAP_TYPE_CUBE_UV";break}return e}function qT(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case ss:e="ENVMAP_MODE_REFRACTION";break}return e}function ZT(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case vl:e="ENVMAP_BLENDING_MULTIPLY";break;case uv:e="ENVMAP_BLENDING_MIX";break;case dv:e="ENVMAP_BLENDING_ADD";break}return e}function JT(s){const e=s.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:i,maxMip:t}}function KT(s,e,t,i){const n=s.getContext(),r=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=jT(t),c=YT(t),h=qT(t),u=ZT(t),d=JT(t),f=kT(t),p=BT(r),v=n.createProgram();let m,g,x=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(Ra).join(`
`),m.length>0&&(m+=`
`),g=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(Ra).join(`
`),g.length>0&&(g+=`
`)):(m=[Ag(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Ra).join(`
`),g=[Ag(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+h:"",t.envMap?"#define "+u:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==yr?"#define TONE_MAPPING":"",t.toneMapping!==yr?Mt.tonemapping_pars_fragment:"",t.toneMapping!==yr?OT("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Mt.colorspace_pars_fragment,NT("linearToOutputTexel",t.outputColorSpace),FT(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Ra).join(`
`)),o=pf(o),o=wg(o,t),o=Eg(o,t),a=pf(a),a=wg(a,t),a=Eg(a,t),o=Tg(o),a=Tg(a),t.isRawShaderMaterial!==!0&&(x=`#version 300 es
`,m=[f,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,g=["#define varying in",t.glslVersion===of?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===of?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);const y=x+m+o,_=x+g+a,E=bg(n,n.VERTEX_SHADER,y),w=bg(n,n.FRAGMENT_SHADER,_);n.attachShader(v,E),n.attachShader(v,w),t.index0AttributeName!==void 0?n.bindAttribLocation(v,0,t.index0AttributeName):t.morphTargets===!0&&n.bindAttribLocation(v,0,"position"),n.linkProgram(v);function M(P){if(s.debug.checkShaderErrors){const D=n.getProgramInfoLog(v).trim(),G=n.getShaderInfoLog(E).trim(),H=n.getShaderInfoLog(w).trim();let q=!0,F=!0;if(n.getProgramParameter(v,n.LINK_STATUS)===!1)if(q=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(n,v,E,w);else{const te=Mg(n,E,"vertex"),Y=Mg(n,w,"fragment");console.error("THREE.WebGLProgram: Shader Error "+n.getError()+" - VALIDATE_STATUS "+n.getProgramParameter(v,n.VALIDATE_STATUS)+`

Material Name: `+P.name+`
Material Type: `+P.type+`

Program Info Log: `+D+`
`+te+`
`+Y)}else D!==""?console.warn("THREE.WebGLProgram: Program Info Log:",D):(G===""||H==="")&&(F=!1);F&&(P.diagnostics={runnable:q,programLog:D,vertexShader:{log:G,prefix:m},fragmentShader:{log:H,prefix:g}})}n.deleteShader(E),n.deleteShader(w),T=new Bc(n,v),S=zT(n,v)}let T;this.getUniforms=function(){return T===void 0&&M(this),T};let S;this.getAttributes=function(){return S===void 0&&M(this),S};let b=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return b===!1&&(b=n.getProgramParameter(v,IT)),b},this.destroy=function(){i.releaseStatesOfProgram(this),n.deleteProgram(v),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=DT++,this.cacheKey=e,this.usedTimes=1,this.program=v,this.vertexShader=E,this.fragmentShader=w,this}let QT=0;class $T{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,i=e.fragmentShader,n=this._getShaderStage(t),r=this._getShaderStage(i),o=this._getShaderCacheForMaterial(e);return o.has(n)===!1&&(o.add(n),n.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const i of t)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let i=t.get(e);return i===void 0&&(i=new Set,t.set(e,i)),i}_getShaderStage(e){const t=this.shaderCache;let i=t.get(e);return i===void 0&&(i=new eA(e),t.set(e,i)),i}}class eA{constructor(e){this.id=QT++,this.code=e,this.usedTimes=0}}function tA(s,e,t,i,n,r,o){const a=new Zh,l=new $T,c=new Set,h=[],u=n.logarithmicDepthBuffer,d=n.vertexTextures;let f=n.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function v(S){return c.add(S),S===0?"uv":`uv${S}`}function m(S,b,P,D,G){const H=D.fog,q=G.geometry,F=S.isMeshStandardMaterial?D.environment:null,te=(S.isMeshStandardMaterial?t:e).get(S.envMap||F),Y=te&&te.mapping===Qo?te.image.height:null,j=p[S.type];S.precision!==null&&(f=n.getMaxPrecision(S.precision),f!==S.precision&&console.warn("THREE.WebGLProgram.getParameters:",S.precision,"not supported, using",f,"instead."));const $=q.morphAttributes.position||q.morphAttributes.normal||q.morphAttributes.color,L=$!==void 0?$.length:0;let Z=0;q.morphAttributes.position!==void 0&&(Z=1),q.morphAttributes.normal!==void 0&&(Z=2),q.morphAttributes.color!==void 0&&(Z=3);let Q,k,W,J;if(j){const ht=oi[j];Q=ht.vertexShader,k=ht.fragmentShader}else Q=S.vertexShader,k=S.fragmentShader,l.update(S),W=l.getVertexShaderID(S),J=l.getFragmentShaderID(S);const X=s.getRenderTarget(),ne=s.state.buffers.depth.getReversed(),me=G.isInstancedMesh===!0,be=G.isBatchedMesh===!0,we=!!S.map,ve=!!S.matcap,Ie=!!te,U=!!S.aoMap,fe=!!S.lightMap,he=!!S.bumpMap,xe=!!S.normalMap,re=!!S.displacementMap,Te=!!S.emissiveMap,pe=!!S.metalnessMap,ce=!!S.roughnessMap,ke=S.anisotropy>0,O=S.clearcoat>0,A=S.dispersion>0,ee=S.iridescence>0,de=S.sheen>0,ue=S.transmission>0,ae=ke&&!!S.anisotropyMap,De=O&&!!S.clearcoatMap,Pe=O&&!!S.clearcoatNormalMap,He=O&&!!S.clearcoatRoughnessMap,je=ee&&!!S.iridescenceMap,Se=ee&&!!S.iridescenceThicknessMap,Le=de&&!!S.sheenColorMap,Ue=de&&!!S.sheenRoughnessMap,$e=!!S.specularMap,Ne=!!S.specularColorMap,dt=!!S.specularIntensityMap,ie=ue&&!!S.transmissionMap,Re=ue&&!!S.thicknessMap,Ee=!!S.gradientMap,et=!!S.alphaMap,Ce=S.alphaTest>0,ye=!!S.alphaHash,Ze=!!S.extensions;let tt=yr;S.toneMapped&&(X===null||X.isXRRenderTarget===!0)&&(tt=s.toneMapping);const rt={shaderID:j,shaderType:S.type,shaderName:S.name,vertexShader:Q,fragmentShader:k,defines:S.defines,customVertexShaderID:W,customFragmentShaderID:J,isRawShaderMaterial:S.isRawShaderMaterial===!0,glslVersion:S.glslVersion,precision:f,batching:be,batchingColor:be&&G._colorsTexture!==null,instancing:me,instancingColor:me&&G.instanceColor!==null,instancingMorph:me&&G.morphTexture!==null,supportsVertexTextures:d,outputColorSpace:X===null?s.outputColorSpace:X.isXRRenderTarget===!0?X.texture.colorSpace:eo,alphaToCoverage:!!S.alphaToCoverage,map:we,matcap:ve,envMap:Ie,envMapMode:Ie&&te.mapping,envMapCubeUVHeight:Y,aoMap:U,lightMap:fe,bumpMap:he,normalMap:xe,displacementMap:d&&re,emissiveMap:Te,normalMapObjectSpace:xe&&S.normalMapType===wv,normalMapTangentSpace:xe&&S.normalMapType===os,metalnessMap:pe,roughnessMap:ce,anisotropy:ke,anisotropyMap:ae,clearcoat:O,clearcoatMap:De,clearcoatNormalMap:Pe,clearcoatRoughnessMap:He,dispersion:A,iridescence:ee,iridescenceMap:je,iridescenceThicknessMap:Se,sheen:de,sheenColorMap:Le,sheenRoughnessMap:Ue,specularMap:$e,specularColorMap:Ne,specularIntensityMap:dt,transmission:ue,transmissionMap:ie,thicknessMap:Re,gradientMap:Ee,opaque:S.transparent===!1&&S.blending===Ys&&S.alphaToCoverage===!1,alphaMap:et,alphaTest:Ce,alphaHash:ye,combine:S.combine,mapUv:we&&v(S.map.channel),aoMapUv:U&&v(S.aoMap.channel),lightMapUv:fe&&v(S.lightMap.channel),bumpMapUv:he&&v(S.bumpMap.channel),normalMapUv:xe&&v(S.normalMap.channel),displacementMapUv:re&&v(S.displacementMap.channel),emissiveMapUv:Te&&v(S.emissiveMap.channel),metalnessMapUv:pe&&v(S.metalnessMap.channel),roughnessMapUv:ce&&v(S.roughnessMap.channel),anisotropyMapUv:ae&&v(S.anisotropyMap.channel),clearcoatMapUv:De&&v(S.clearcoatMap.channel),clearcoatNormalMapUv:Pe&&v(S.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:He&&v(S.clearcoatRoughnessMap.channel),iridescenceMapUv:je&&v(S.iridescenceMap.channel),iridescenceThicknessMapUv:Se&&v(S.iridescenceThicknessMap.channel),sheenColorMapUv:Le&&v(S.sheenColorMap.channel),sheenRoughnessMapUv:Ue&&v(S.sheenRoughnessMap.channel),specularMapUv:$e&&v(S.specularMap.channel),specularColorMapUv:Ne&&v(S.specularColorMap.channel),specularIntensityMapUv:dt&&v(S.specularIntensityMap.channel),transmissionMapUv:ie&&v(S.transmissionMap.channel),thicknessMapUv:Re&&v(S.thicknessMap.channel),alphaMapUv:et&&v(S.alphaMap.channel),vertexTangents:!!q.attributes.tangent&&(xe||ke),vertexColors:S.vertexColors,vertexAlphas:S.vertexColors===!0&&!!q.attributes.color&&q.attributes.color.itemSize===4,pointsUvs:G.isPoints===!0&&!!q.attributes.uv&&(we||et),fog:!!H,useFog:S.fog===!0,fogExp2:!!H&&H.isFogExp2,flatShading:S.flatShading===!0&&S.wireframe===!1,sizeAttenuation:S.sizeAttenuation===!0,logarithmicDepthBuffer:u,reverseDepthBuffer:ne,skinning:G.isSkinnedMesh===!0,morphTargets:q.morphAttributes.position!==void 0,morphNormals:q.morphAttributes.normal!==void 0,morphColors:q.morphAttributes.color!==void 0,morphTargetsCount:L,morphTextureStride:Z,numDirLights:b.directional.length,numPointLights:b.point.length,numSpotLights:b.spot.length,numSpotLightMaps:b.spotLightMap.length,numRectAreaLights:b.rectArea.length,numHemiLights:b.hemi.length,numDirLightShadows:b.directionalShadowMap.length,numPointLightShadows:b.pointShadowMap.length,numSpotLightShadows:b.spotShadowMap.length,numSpotLightShadowsWithMaps:b.numSpotLightShadowsWithMaps,numLightProbes:b.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:S.dithering,shadowMapEnabled:s.shadowMap.enabled&&P.length>0,shadowMapType:s.shadowMap.type,toneMapping:tt,decodeVideoTexture:we&&S.map.isVideoTexture===!0&&Nt.getTransfer(S.map.colorSpace)===Kt,decodeVideoTextureEmissive:Te&&S.emissiveMap.isVideoTexture===!0&&Nt.getTransfer(S.emissiveMap.colorSpace)===Kt,premultipliedAlpha:S.premultipliedAlpha,doubleSided:S.side===_i,flipSided:S.side===ti,useDepthPacking:S.depthPacking>=0,depthPacking:S.depthPacking||0,index0AttributeName:S.index0AttributeName,extensionClipCullDistance:Ze&&S.extensions.clipCullDistance===!0&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(Ze&&S.extensions.multiDraw===!0||be)&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:S.customProgramCacheKey()};return rt.vertexUv1s=c.has(1),rt.vertexUv2s=c.has(2),rt.vertexUv3s=c.has(3),c.clear(),rt}function g(S){const b=[];if(S.shaderID?b.push(S.shaderID):(b.push(S.customVertexShaderID),b.push(S.customFragmentShaderID)),S.defines!==void 0)for(const P in S.defines)b.push(P),b.push(S.defines[P]);return S.isRawShaderMaterial===!1&&(x(b,S),y(b,S),b.push(s.outputColorSpace)),b.push(S.customProgramCacheKey),b.join()}function x(S,b){S.push(b.precision),S.push(b.outputColorSpace),S.push(b.envMapMode),S.push(b.envMapCubeUVHeight),S.push(b.mapUv),S.push(b.alphaMapUv),S.push(b.lightMapUv),S.push(b.aoMapUv),S.push(b.bumpMapUv),S.push(b.normalMapUv),S.push(b.displacementMapUv),S.push(b.emissiveMapUv),S.push(b.metalnessMapUv),S.push(b.roughnessMapUv),S.push(b.anisotropyMapUv),S.push(b.clearcoatMapUv),S.push(b.clearcoatNormalMapUv),S.push(b.clearcoatRoughnessMapUv),S.push(b.iridescenceMapUv),S.push(b.iridescenceThicknessMapUv),S.push(b.sheenColorMapUv),S.push(b.sheenRoughnessMapUv),S.push(b.specularMapUv),S.push(b.specularColorMapUv),S.push(b.specularIntensityMapUv),S.push(b.transmissionMapUv),S.push(b.thicknessMapUv),S.push(b.combine),S.push(b.fogExp2),S.push(b.sizeAttenuation),S.push(b.morphTargetsCount),S.push(b.morphAttributeCount),S.push(b.numDirLights),S.push(b.numPointLights),S.push(b.numSpotLights),S.push(b.numSpotLightMaps),S.push(b.numHemiLights),S.push(b.numRectAreaLights),S.push(b.numDirLightShadows),S.push(b.numPointLightShadows),S.push(b.numSpotLightShadows),S.push(b.numSpotLightShadowsWithMaps),S.push(b.numLightProbes),S.push(b.shadowMapType),S.push(b.toneMapping),S.push(b.numClippingPlanes),S.push(b.numClipIntersection),S.push(b.depthPacking)}function y(S,b){a.disableAll(),b.supportsVertexTextures&&a.enable(0),b.instancing&&a.enable(1),b.instancingColor&&a.enable(2),b.instancingMorph&&a.enable(3),b.matcap&&a.enable(4),b.envMap&&a.enable(5),b.normalMapObjectSpace&&a.enable(6),b.normalMapTangentSpace&&a.enable(7),b.clearcoat&&a.enable(8),b.iridescence&&a.enable(9),b.alphaTest&&a.enable(10),b.vertexColors&&a.enable(11),b.vertexAlphas&&a.enable(12),b.vertexUv1s&&a.enable(13),b.vertexUv2s&&a.enable(14),b.vertexUv3s&&a.enable(15),b.vertexTangents&&a.enable(16),b.anisotropy&&a.enable(17),b.alphaHash&&a.enable(18),b.batching&&a.enable(19),b.dispersion&&a.enable(20),b.batchingColor&&a.enable(21),b.gradientMap&&a.enable(22),S.push(a.mask),a.disableAll(),b.fog&&a.enable(0),b.useFog&&a.enable(1),b.flatShading&&a.enable(2),b.logarithmicDepthBuffer&&a.enable(3),b.reverseDepthBuffer&&a.enable(4),b.skinning&&a.enable(5),b.morphTargets&&a.enable(6),b.morphNormals&&a.enable(7),b.morphColors&&a.enable(8),b.premultipliedAlpha&&a.enable(9),b.shadowMapEnabled&&a.enable(10),b.doubleSided&&a.enable(11),b.flipSided&&a.enable(12),b.useDepthPacking&&a.enable(13),b.dithering&&a.enable(14),b.transmission&&a.enable(15),b.sheen&&a.enable(16),b.opaque&&a.enable(17),b.pointsUvs&&a.enable(18),b.decodeVideoTexture&&a.enable(19),b.decodeVideoTextureEmissive&&a.enable(20),b.alphaToCoverage&&a.enable(21),S.push(a.mask)}function _(S){const b=p[S.type];let P;if(b){const D=oi[b];P=yl.clone(D.uniforms)}else P=S.uniforms;return P}function E(S,b){let P;for(let D=0,G=h.length;D<G;D++){const H=h[D];if(H.cacheKey===b){P=H,++P.usedTimes;break}}return P===void 0&&(P=new KT(s,b,S,r),h.push(P)),P}function w(S){if(--S.usedTimes===0){const b=h.indexOf(S);h[b]=h[h.length-1],h.pop(),S.destroy()}}function M(S){l.remove(S)}function T(){l.dispose()}return{getParameters:m,getProgramCacheKey:g,getUniforms:_,acquireProgram:E,releaseProgram:w,releaseShaderCache:M,programs:h,dispose:T}}function nA(){let s=new WeakMap;function e(o){return s.has(o)}function t(o){let a=s.get(o);return a===void 0&&(a={},s.set(o,a)),a}function i(o){s.delete(o)}function n(o,a,l){s.get(o)[a]=l}function r(){s=new WeakMap}return{has:e,get:t,remove:i,update:n,dispose:r}}function iA(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}function Cg(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function Rg(){const s=[];let e=0;const t=[],i=[],n=[];function r(){e=0,t.length=0,i.length=0,n.length=0}function o(u,d,f,p,v,m){let g=s[e];return g===void 0?(g={id:u.id,object:u,geometry:d,material:f,groupOrder:p,renderOrder:u.renderOrder,z:v,group:m},s[e]=g):(g.id=u.id,g.object=u,g.geometry=d,g.material=f,g.groupOrder=p,g.renderOrder=u.renderOrder,g.z=v,g.group=m),e++,g}function a(u,d,f,p,v,m){const g=o(u,d,f,p,v,m);f.transmission>0?i.push(g):f.transparent===!0?n.push(g):t.push(g)}function l(u,d,f,p,v,m){const g=o(u,d,f,p,v,m);f.transmission>0?i.unshift(g):f.transparent===!0?n.unshift(g):t.unshift(g)}function c(u,d){t.length>1&&t.sort(u||iA),i.length>1&&i.sort(d||Cg),n.length>1&&n.sort(d||Cg)}function h(){for(let u=e,d=s.length;u<d;u++){const f=s[u];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:t,transmissive:i,transparent:n,init:r,push:a,unshift:l,finish:h,sort:c}}function rA(){let s=new WeakMap;function e(i,n){const r=s.get(i);let o;return r===void 0?(o=new Rg,s.set(i,[o])):n>=r.length?(o=new Rg,r.push(o)):o=r[n],o}function t(){s=new WeakMap}return{get:e,dispose:t}}function sA(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new I,color:new Ge};break;case"SpotLight":t={position:new I,direction:new I,color:new Ge,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new I,color:new Ge,distance:0,decay:0};break;case"HemisphereLight":t={direction:new I,skyColor:new Ge,groundColor:new Ge};break;case"RectAreaLight":t={color:new Ge,position:new I,halfWidth:new I,halfHeight:new I};break}return s[e.id]=t,t}}}function oA(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Me};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Me};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Me,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=t,t}}}let aA=0;function lA(s,e){return(e.castShadow?2:0)-(s.castShadow?2:0)+(e.map?1:0)-(s.map?1:0)}function cA(s){const e=new sA,t=oA(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let c=0;c<9;c++)i.probe.push(new I);const n=new I,r=new ct,o=new ct;function a(c){let h=0,u=0,d=0;for(let S=0;S<9;S++)i.probe[S].set(0,0,0);let f=0,p=0,v=0,m=0,g=0,x=0,y=0,_=0,E=0,w=0,M=0;c.sort(lA);for(let S=0,b=c.length;S<b;S++){const P=c[S],D=P.color,G=P.intensity,H=P.distance,q=P.shadow&&P.shadow.map?P.shadow.map.texture:null;if(P.isAmbientLight)h+=D.r*G,u+=D.g*G,d+=D.b*G;else if(P.isLightProbe){for(let F=0;F<9;F++)i.probe[F].addScaledVector(P.sh.coefficients[F],G);M++}else if(P.isDirectionalLight){const F=e.get(P);if(F.color.copy(P.color).multiplyScalar(P.intensity),P.castShadow){const te=P.shadow,Y=t.get(P);Y.shadowIntensity=te.intensity,Y.shadowBias=te.bias,Y.shadowNormalBias=te.normalBias,Y.shadowRadius=te.radius,Y.shadowMapSize=te.mapSize,i.directionalShadow[f]=Y,i.directionalShadowMap[f]=q,i.directionalShadowMatrix[f]=P.shadow.matrix,x++}i.directional[f]=F,f++}else if(P.isSpotLight){const F=e.get(P);F.position.setFromMatrixPosition(P.matrixWorld),F.color.copy(D).multiplyScalar(G),F.distance=H,F.coneCos=Math.cos(P.angle),F.penumbraCos=Math.cos(P.angle*(1-P.penumbra)),F.decay=P.decay,i.spot[v]=F;const te=P.shadow;if(P.map&&(i.spotLightMap[E]=P.map,E++,te.updateMatrices(P),P.castShadow&&w++),i.spotLightMatrix[v]=te.matrix,P.castShadow){const Y=t.get(P);Y.shadowIntensity=te.intensity,Y.shadowBias=te.bias,Y.shadowNormalBias=te.normalBias,Y.shadowRadius=te.radius,Y.shadowMapSize=te.mapSize,i.spotShadow[v]=Y,i.spotShadowMap[v]=q,_++}v++}else if(P.isRectAreaLight){const F=e.get(P);F.color.copy(D).multiplyScalar(G),F.halfWidth.set(P.width*.5,0,0),F.halfHeight.set(0,P.height*.5,0),i.rectArea[m]=F,m++}else if(P.isPointLight){const F=e.get(P);if(F.color.copy(P.color).multiplyScalar(P.intensity),F.distance=P.distance,F.decay=P.decay,P.castShadow){const te=P.shadow,Y=t.get(P);Y.shadowIntensity=te.intensity,Y.shadowBias=te.bias,Y.shadowNormalBias=te.normalBias,Y.shadowRadius=te.radius,Y.shadowMapSize=te.mapSize,Y.shadowCameraNear=te.camera.near,Y.shadowCameraFar=te.camera.far,i.pointShadow[p]=Y,i.pointShadowMap[p]=q,i.pointShadowMatrix[p]=P.shadow.matrix,y++}i.point[p]=F,p++}else if(P.isHemisphereLight){const F=e.get(P);F.skyColor.copy(P.color).multiplyScalar(G),F.groundColor.copy(P.groundColor).multiplyScalar(G),i.hemi[g]=F,g++}}m>0&&(s.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Ke.LTC_FLOAT_1,i.rectAreaLTC2=Ke.LTC_FLOAT_2):(i.rectAreaLTC1=Ke.LTC_HALF_1,i.rectAreaLTC2=Ke.LTC_HALF_2)),i.ambient[0]=h,i.ambient[1]=u,i.ambient[2]=d;const T=i.hash;(T.directionalLength!==f||T.pointLength!==p||T.spotLength!==v||T.rectAreaLength!==m||T.hemiLength!==g||T.numDirectionalShadows!==x||T.numPointShadows!==y||T.numSpotShadows!==_||T.numSpotMaps!==E||T.numLightProbes!==M)&&(i.directional.length=f,i.spot.length=v,i.rectArea.length=m,i.point.length=p,i.hemi.length=g,i.directionalShadow.length=x,i.directionalShadowMap.length=x,i.pointShadow.length=y,i.pointShadowMap.length=y,i.spotShadow.length=_,i.spotShadowMap.length=_,i.directionalShadowMatrix.length=x,i.pointShadowMatrix.length=y,i.spotLightMatrix.length=_+E-w,i.spotLightMap.length=E,i.numSpotLightShadowsWithMaps=w,i.numLightProbes=M,T.directionalLength=f,T.pointLength=p,T.spotLength=v,T.rectAreaLength=m,T.hemiLength=g,T.numDirectionalShadows=x,T.numPointShadows=y,T.numSpotShadows=_,T.numSpotMaps=E,T.numLightProbes=M,i.version=aA++)}function l(c,h){let u=0,d=0,f=0,p=0,v=0;const m=h.matrixWorldInverse;for(let g=0,x=c.length;g<x;g++){const y=c[g];if(y.isDirectionalLight){const _=i.directional[u];_.direction.setFromMatrixPosition(y.matrixWorld),n.setFromMatrixPosition(y.target.matrixWorld),_.direction.sub(n),_.direction.transformDirection(m),u++}else if(y.isSpotLight){const _=i.spot[f];_.position.setFromMatrixPosition(y.matrixWorld),_.position.applyMatrix4(m),_.direction.setFromMatrixPosition(y.matrixWorld),n.setFromMatrixPosition(y.target.matrixWorld),_.direction.sub(n),_.direction.transformDirection(m),f++}else if(y.isRectAreaLight){const _=i.rectArea[p];_.position.setFromMatrixPosition(y.matrixWorld),_.position.applyMatrix4(m),o.identity(),r.copy(y.matrixWorld),r.premultiply(m),o.extractRotation(r),_.halfWidth.set(y.width*.5,0,0),_.halfHeight.set(0,y.height*.5,0),_.halfWidth.applyMatrix4(o),_.halfHeight.applyMatrix4(o),p++}else if(y.isPointLight){const _=i.point[d];_.position.setFromMatrixPosition(y.matrixWorld),_.position.applyMatrix4(m),d++}else if(y.isHemisphereLight){const _=i.hemi[v];_.direction.setFromMatrixPosition(y.matrixWorld),_.direction.transformDirection(m),v++}}}return{setup:a,setupView:l,state:i}}function Pg(s){const e=new cA(s),t=[],i=[];function n(h){c.camera=h,t.length=0,i.length=0}function r(h){t.push(h)}function o(h){i.push(h)}function a(){e.setup(t)}function l(h){e.setupView(t,h)}const c={lightsArray:t,shadowsArray:i,camera:null,lights:e,transmissionRenderTarget:{}};return{init:n,state:c,setupLights:a,setupLightsView:l,pushLight:r,pushShadow:o}}function hA(s){let e=new WeakMap;function t(n,r=0){const o=e.get(n);let a;return o===void 0?(a=new Pg(s),e.set(n,[a])):r>=o.length?(a=new Pg(s),o.push(a)):a=o[r],a}function i(){e=new WeakMap}return{get:t,dispose:i}}const uA=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,dA=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function fA(s,e,t){let i=new ta;const n=new Me,r=new Me,o=new It,a=new El({depthPacking:Wf}),l=new mu,c={},h=t.maxTextureSize,u={[br]:ti,[ti]:br,[_i]:_i},d=new wi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Me},radius:{value:4}},vertexShader:uA,fragmentShader:dA}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const p=new xt;p.setAttribute("position",new Rt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const v=new ze(p,d),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Uf;let g=this.type;this.render=function(w,M,T){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||w.length===0)return;const S=s.getRenderTarget(),b=s.getActiveCubeFace(),P=s.getActiveMipmapLevel(),D=s.state;D.setBlending(Or),D.buffers.color.setClear(1,1,1,1),D.buffers.depth.setTest(!0),D.setScissorTest(!1);const G=g!==pr&&this.type===pr,H=g===pr&&this.type!==pr;for(let q=0,F=w.length;q<F;q++){const te=w[q],Y=te.shadow;if(Y===void 0){console.warn("THREE.WebGLShadowMap:",te,"has no shadow.");continue}if(Y.autoUpdate===!1&&Y.needsUpdate===!1)continue;n.copy(Y.mapSize);const j=Y.getFrameExtents();if(n.multiply(j),r.copy(Y.mapSize),(n.x>h||n.y>h)&&(n.x>h&&(r.x=Math.floor(h/j.x),n.x=r.x*j.x,Y.mapSize.x=r.x),n.y>h&&(r.y=Math.floor(h/j.y),n.y=r.y*j.y,Y.mapSize.y=r.y)),Y.map===null||G===!0||H===!0){const L=this.type!==pr?{minFilter:Yn,magFilter:Yn}:{};Y.map!==null&&Y.map.dispose(),Y.map=new Xi(n.x,n.y,L),Y.map.texture.name=te.name+".shadowMap",Y.camera.updateProjectionMatrix()}s.setRenderTarget(Y.map),s.clear();const $=Y.getViewportCount();for(let L=0;L<$;L++){const Z=Y.getViewport(L);o.set(r.x*Z.x,r.y*Z.y,r.x*Z.z,r.y*Z.w),D.viewport(o),Y.updateMatrices(te,L),i=Y.getFrustum(),_(M,T,Y.camera,te,this.type)}Y.isPointLightShadow!==!0&&this.type===pr&&x(Y,T),Y.needsUpdate=!1}g=this.type,m.needsUpdate=!1,s.setRenderTarget(S,b,P)};function x(w,M){const T=e.update(v);d.defines.VSM_SAMPLES!==w.blurSamples&&(d.defines.VSM_SAMPLES=w.blurSamples,f.defines.VSM_SAMPLES=w.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),w.mapPass===null&&(w.mapPass=new Xi(n.x,n.y)),d.uniforms.shadow_pass.value=w.map.texture,d.uniforms.resolution.value=w.mapSize,d.uniforms.radius.value=w.radius,s.setRenderTarget(w.mapPass),s.clear(),s.renderBufferDirect(M,null,T,d,v,null),f.uniforms.shadow_pass.value=w.mapPass.texture,f.uniforms.resolution.value=w.mapSize,f.uniforms.radius.value=w.radius,s.setRenderTarget(w.map),s.clear(),s.renderBufferDirect(M,null,T,f,v,null)}function y(w,M,T,S){let b=null;const P=T.isPointLight===!0?w.customDistanceMaterial:w.customDepthMaterial;if(P!==void 0)b=P;else if(b=T.isPointLight===!0?l:a,s.localClippingEnabled&&M.clipShadows===!0&&Array.isArray(M.clippingPlanes)&&M.clippingPlanes.length!==0||M.displacementMap&&M.displacementScale!==0||M.alphaMap&&M.alphaTest>0||M.map&&M.alphaTest>0||M.alphaToCoverage===!0){const D=b.uuid,G=M.uuid;let H=c[D];H===void 0&&(H={},c[D]=H);let q=H[G];q===void 0&&(q=b.clone(),H[G]=q,M.addEventListener("dispose",E)),b=q}if(b.visible=M.visible,b.wireframe=M.wireframe,S===pr?b.side=M.shadowSide!==null?M.shadowSide:M.side:b.side=M.shadowSide!==null?M.shadowSide:u[M.side],b.alphaMap=M.alphaMap,b.alphaTest=M.alphaToCoverage===!0?.5:M.alphaTest,b.map=M.map,b.clipShadows=M.clipShadows,b.clippingPlanes=M.clippingPlanes,b.clipIntersection=M.clipIntersection,b.displacementMap=M.displacementMap,b.displacementScale=M.displacementScale,b.displacementBias=M.displacementBias,b.wireframeLinewidth=M.wireframeLinewidth,b.linewidth=M.linewidth,T.isPointLight===!0&&b.isMeshDistanceMaterial===!0){const D=s.properties.get(b);D.light=T}return b}function _(w,M,T,S,b){if(w.visible===!1)return;if(w.layers.test(M.layers)&&(w.isMesh||w.isLine||w.isPoints)&&(w.castShadow||w.receiveShadow&&b===pr)&&(!w.frustumCulled||i.intersectsObject(w))){w.modelViewMatrix.multiplyMatrices(T.matrixWorldInverse,w.matrixWorld);const G=e.update(w),H=w.material;if(Array.isArray(H)){const q=G.groups;for(let F=0,te=q.length;F<te;F++){const Y=q[F],j=H[Y.materialIndex];if(j&&j.visible){const $=y(w,j,S,b);w.onBeforeShadow(s,w,M,T,G,$,Y),s.renderBufferDirect(T,null,G,$,w,Y),w.onAfterShadow(s,w,M,T,G,$,Y)}}}else if(H.visible){const q=y(w,H,S,b);w.onBeforeShadow(s,w,M,T,G,q,null),s.renderBufferDirect(T,null,G,q,w,null),w.onAfterShadow(s,w,M,T,G,q,null)}}const D=w.children;for(let G=0,H=D.length;G<H;G++)_(D[G],M,T,S,b)}function E(w){w.target.removeEventListener("dispose",E);for(const T in c){const S=c[T],b=w.target.uuid;b in S&&(S[b].dispose(),delete S[b])}}}const pA={[qc]:Zc,[Jc]:$c,[Kc]:eh,[$s]:Qc,[Zc]:qc,[$c]:Jc,[eh]:Kc,[Qc]:$s};function mA(s,e){function t(){let ie=!1;const Re=new It;let Ee=null;const et=new It(0,0,0,0);return{setMask:function(Ce){Ee!==Ce&&!ie&&(s.colorMask(Ce,Ce,Ce,Ce),Ee=Ce)},setLocked:function(Ce){ie=Ce},setClear:function(Ce,ye,Ze,tt,rt){rt===!0&&(Ce*=tt,ye*=tt,Ze*=tt),Re.set(Ce,ye,Ze,tt),et.equals(Re)===!1&&(s.clearColor(Ce,ye,Ze,tt),et.copy(Re))},reset:function(){ie=!1,Ee=null,et.set(-1,0,0,0)}}}function i(){let ie=!1,Re=!1,Ee=null,et=null,Ce=null;return{setReversed:function(ye){if(Re!==ye){const Ze=e.get("EXT_clip_control");ye?Ze.clipControlEXT(Ze.LOWER_LEFT_EXT,Ze.ZERO_TO_ONE_EXT):Ze.clipControlEXT(Ze.LOWER_LEFT_EXT,Ze.NEGATIVE_ONE_TO_ONE_EXT),Re=ye;const tt=Ce;Ce=null,this.setClear(tt)}},getReversed:function(){return Re},setTest:function(ye){ye?X(s.DEPTH_TEST):ne(s.DEPTH_TEST)},setMask:function(ye){Ee!==ye&&!ie&&(s.depthMask(ye),Ee=ye)},setFunc:function(ye){if(Re&&(ye=pA[ye]),et!==ye){switch(ye){case qc:s.depthFunc(s.NEVER);break;case Zc:s.depthFunc(s.ALWAYS);break;case Jc:s.depthFunc(s.LESS);break;case $s:s.depthFunc(s.LEQUAL);break;case Kc:s.depthFunc(s.EQUAL);break;case Qc:s.depthFunc(s.GEQUAL);break;case $c:s.depthFunc(s.GREATER);break;case eh:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}et=ye}},setLocked:function(ye){ie=ye},setClear:function(ye){Ce!==ye&&(Re&&(ye=1-ye),s.clearDepth(ye),Ce=ye)},reset:function(){ie=!1,Ee=null,et=null,Ce=null,Re=!1}}}function n(){let ie=!1,Re=null,Ee=null,et=null,Ce=null,ye=null,Ze=null,tt=null,rt=null;return{setTest:function(ht){ie||(ht?X(s.STENCIL_TEST):ne(s.STENCIL_TEST))},setMask:function(ht){Re!==ht&&!ie&&(s.stencilMask(ht),Re=ht)},setFunc:function(ht,jt,$t){(Ee!==ht||et!==jt||Ce!==$t)&&(s.stencilFunc(ht,jt,$t),Ee=ht,et=jt,Ce=$t)},setOp:function(ht,jt,$t){(ye!==ht||Ze!==jt||tt!==$t)&&(s.stencilOp(ht,jt,$t),ye=ht,Ze=jt,tt=$t)},setLocked:function(ht){ie=ht},setClear:function(ht){rt!==ht&&(s.clearStencil(ht),rt=ht)},reset:function(){ie=!1,Re=null,Ee=null,et=null,Ce=null,ye=null,Ze=null,tt=null,rt=null}}}const r=new t,o=new i,a=new n,l=new WeakMap,c=new WeakMap;let h={},u={},d=new WeakMap,f=[],p=null,v=!1,m=null,g=null,x=null,y=null,_=null,E=null,w=null,M=new Ge(0,0,0),T=0,S=!1,b=null,P=null,D=null,G=null,H=null;const q=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let F=!1,te=0;const Y=s.getParameter(s.VERSION);Y.indexOf("WebGL")!==-1?(te=parseFloat(/^WebGL (\d)/.exec(Y)[1]),F=te>=1):Y.indexOf("OpenGL ES")!==-1&&(te=parseFloat(/^OpenGL ES (\d)/.exec(Y)[1]),F=te>=2);let j=null,$={};const L=s.getParameter(s.SCISSOR_BOX),Z=s.getParameter(s.VIEWPORT),Q=new It().fromArray(L),k=new It().fromArray(Z);function W(ie,Re,Ee,et){const Ce=new Uint8Array(4),ye=s.createTexture();s.bindTexture(ie,ye),s.texParameteri(ie,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(ie,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let Ze=0;Ze<Ee;Ze++)ie===s.TEXTURE_3D||ie===s.TEXTURE_2D_ARRAY?s.texImage3D(Re,0,s.RGBA,1,1,et,0,s.RGBA,s.UNSIGNED_BYTE,Ce):s.texImage2D(Re+Ze,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,Ce);return ye}const J={};J[s.TEXTURE_2D]=W(s.TEXTURE_2D,s.TEXTURE_2D,1),J[s.TEXTURE_CUBE_MAP]=W(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),J[s.TEXTURE_2D_ARRAY]=W(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),J[s.TEXTURE_3D]=W(s.TEXTURE_3D,s.TEXTURE_3D,1,1),r.setClear(0,0,0,1),o.setClear(1),a.setClear(0),X(s.DEPTH_TEST),o.setFunc($s),he(!1),xe($d),X(s.CULL_FACE),U(Or);function X(ie){h[ie]!==!0&&(s.enable(ie),h[ie]=!0)}function ne(ie){h[ie]!==!1&&(s.disable(ie),h[ie]=!1)}function me(ie,Re){return u[ie]!==Re?(s.bindFramebuffer(ie,Re),u[ie]=Re,ie===s.DRAW_FRAMEBUFFER&&(u[s.FRAMEBUFFER]=Re),ie===s.FRAMEBUFFER&&(u[s.DRAW_FRAMEBUFFER]=Re),!0):!1}function be(ie,Re){let Ee=f,et=!1;if(ie){Ee=d.get(Re),Ee===void 0&&(Ee=[],d.set(Re,Ee));const Ce=ie.textures;if(Ee.length!==Ce.length||Ee[0]!==s.COLOR_ATTACHMENT0){for(let ye=0,Ze=Ce.length;ye<Ze;ye++)Ee[ye]=s.COLOR_ATTACHMENT0+ye;Ee.length=Ce.length,et=!0}}else Ee[0]!==s.BACK&&(Ee[0]=s.BACK,et=!0);et&&s.drawBuffers(Ee)}function we(ie){return p!==ie?(s.useProgram(ie),p=ie,!0):!1}const ve={[ns]:s.FUNC_ADD,[q0]:s.FUNC_SUBTRACT,[Z0]:s.FUNC_REVERSE_SUBTRACT};ve[J0]=s.MIN,ve[K0]=s.MAX;const Ie={[Q0]:s.ZERO,[$0]:s.ONE,[ev]:s.SRC_COLOR,[jc]:s.SRC_ALPHA,[ov]:s.SRC_ALPHA_SATURATE,[rv]:s.DST_COLOR,[nv]:s.DST_ALPHA,[tv]:s.ONE_MINUS_SRC_COLOR,[Yc]:s.ONE_MINUS_SRC_ALPHA,[sv]:s.ONE_MINUS_DST_COLOR,[iv]:s.ONE_MINUS_DST_ALPHA,[av]:s.CONSTANT_COLOR,[lv]:s.ONE_MINUS_CONSTANT_COLOR,[cv]:s.CONSTANT_ALPHA,[hv]:s.ONE_MINUS_CONSTANT_ALPHA};function U(ie,Re,Ee,et,Ce,ye,Ze,tt,rt,ht){if(ie===Or){v===!0&&(ne(s.BLEND),v=!1);return}if(v===!1&&(X(s.BLEND),v=!0),ie!==Y0){if(ie!==m||ht!==S){if((g!==ns||_!==ns)&&(s.blendEquation(s.FUNC_ADD),g=ns,_=ns),ht)switch(ie){case Ys:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case ef:s.blendFunc(s.ONE,s.ONE);break;case tf:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case nf:s.blendFuncSeparate(s.DST_COLOR,s.ONE_MINUS_SRC_ALPHA,s.ZERO,s.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",ie);break}else switch(ie){case Ys:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case ef:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE,s.ONE,s.ONE);break;case tf:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case nf:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",ie);break}x=null,y=null,E=null,w=null,M.set(0,0,0),T=0,m=ie,S=ht}return}Ce=Ce||Re,ye=ye||Ee,Ze=Ze||et,(Re!==g||Ce!==_)&&(s.blendEquationSeparate(ve[Re],ve[Ce]),g=Re,_=Ce),(Ee!==x||et!==y||ye!==E||Ze!==w)&&(s.blendFuncSeparate(Ie[Ee],Ie[et],Ie[ye],Ie[Ze]),x=Ee,y=et,E=ye,w=Ze),(tt.equals(M)===!1||rt!==T)&&(s.blendColor(tt.r,tt.g,tt.b,rt),M.copy(tt),T=rt),m=ie,S=!1}function fe(ie,Re){ie.side===_i?ne(s.CULL_FACE):X(s.CULL_FACE);let Ee=ie.side===ti;Re&&(Ee=!Ee),he(Ee),ie.blending===Ys&&ie.transparent===!1?U(Or):U(ie.blending,ie.blendEquation,ie.blendSrc,ie.blendDst,ie.blendEquationAlpha,ie.blendSrcAlpha,ie.blendDstAlpha,ie.blendColor,ie.blendAlpha,ie.premultipliedAlpha),o.setFunc(ie.depthFunc),o.setTest(ie.depthTest),o.setMask(ie.depthWrite),r.setMask(ie.colorWrite);const et=ie.stencilWrite;a.setTest(et),et&&(a.setMask(ie.stencilWriteMask),a.setFunc(ie.stencilFunc,ie.stencilRef,ie.stencilFuncMask),a.setOp(ie.stencilFail,ie.stencilZFail,ie.stencilZPass)),Te(ie.polygonOffset,ie.polygonOffsetFactor,ie.polygonOffsetUnits),ie.alphaToCoverage===!0?X(s.SAMPLE_ALPHA_TO_COVERAGE):ne(s.SAMPLE_ALPHA_TO_COVERAGE)}function he(ie){b!==ie&&(ie?s.frontFace(s.CW):s.frontFace(s.CCW),b=ie)}function xe(ie){ie!==X0?(X(s.CULL_FACE),ie!==P&&(ie===$d?s.cullFace(s.BACK):ie===j0?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):ne(s.CULL_FACE),P=ie}function re(ie){ie!==D&&(F&&s.lineWidth(ie),D=ie)}function Te(ie,Re,Ee){ie?(X(s.POLYGON_OFFSET_FILL),(G!==Re||H!==Ee)&&(s.polygonOffset(Re,Ee),G=Re,H=Ee)):ne(s.POLYGON_OFFSET_FILL)}function pe(ie){ie?X(s.SCISSOR_TEST):ne(s.SCISSOR_TEST)}function ce(ie){ie===void 0&&(ie=s.TEXTURE0+q-1),j!==ie&&(s.activeTexture(ie),j=ie)}function ke(ie,Re,Ee){Ee===void 0&&(j===null?Ee=s.TEXTURE0+q-1:Ee=j);let et=$[Ee];et===void 0&&(et={type:void 0,texture:void 0},$[Ee]=et),(et.type!==ie||et.texture!==Re)&&(j!==Ee&&(s.activeTexture(Ee),j=Ee),s.bindTexture(ie,Re||J[ie]),et.type=ie,et.texture=Re)}function O(){const ie=$[j];ie!==void 0&&ie.type!==void 0&&(s.bindTexture(ie.type,null),ie.type=void 0,ie.texture=void 0)}function A(){try{s.compressedTexImage2D(...arguments)}catch(ie){console.error("THREE.WebGLState:",ie)}}function ee(){try{s.compressedTexImage3D(...arguments)}catch(ie){console.error("THREE.WebGLState:",ie)}}function de(){try{s.texSubImage2D(...arguments)}catch(ie){console.error("THREE.WebGLState:",ie)}}function ue(){try{s.texSubImage3D(...arguments)}catch(ie){console.error("THREE.WebGLState:",ie)}}function ae(){try{s.compressedTexSubImage2D(...arguments)}catch(ie){console.error("THREE.WebGLState:",ie)}}function De(){try{s.compressedTexSubImage3D(...arguments)}catch(ie){console.error("THREE.WebGLState:",ie)}}function Pe(){try{s.texStorage2D(...arguments)}catch(ie){console.error("THREE.WebGLState:",ie)}}function He(){try{s.texStorage3D(...arguments)}catch(ie){console.error("THREE.WebGLState:",ie)}}function je(){try{s.texImage2D(...arguments)}catch(ie){console.error("THREE.WebGLState:",ie)}}function Se(){try{s.texImage3D(...arguments)}catch(ie){console.error("THREE.WebGLState:",ie)}}function Le(ie){Q.equals(ie)===!1&&(s.scissor(ie.x,ie.y,ie.z,ie.w),Q.copy(ie))}function Ue(ie){k.equals(ie)===!1&&(s.viewport(ie.x,ie.y,ie.z,ie.w),k.copy(ie))}function $e(ie,Re){let Ee=c.get(Re);Ee===void 0&&(Ee=new WeakMap,c.set(Re,Ee));let et=Ee.get(ie);et===void 0&&(et=s.getUniformBlockIndex(Re,ie.name),Ee.set(ie,et))}function Ne(ie,Re){const et=c.get(Re).get(ie);l.get(Re)!==et&&(s.uniformBlockBinding(Re,et,ie.__bindingPointIndex),l.set(Re,et))}function dt(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.blendColor(0,0,0,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),o.setReversed(!1),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),h={},j=null,$={},u={},d=new WeakMap,f=[],p=null,v=!1,m=null,g=null,x=null,y=null,_=null,E=null,w=null,M=new Ge(0,0,0),T=0,S=!1,b=null,P=null,D=null,G=null,H=null,Q.set(0,0,s.canvas.width,s.canvas.height),k.set(0,0,s.canvas.width,s.canvas.height),r.reset(),o.reset(),a.reset()}return{buffers:{color:r,depth:o,stencil:a},enable:X,disable:ne,bindFramebuffer:me,drawBuffers:be,useProgram:we,setBlending:U,setMaterial:fe,setFlipSided:he,setCullFace:xe,setLineWidth:re,setPolygonOffset:Te,setScissorTest:pe,activeTexture:ce,bindTexture:ke,unbindTexture:O,compressedTexImage2D:A,compressedTexImage3D:ee,texImage2D:je,texImage3D:Se,updateUBOMapping:$e,uniformBlockBinding:Ne,texStorage2D:Pe,texStorage3D:He,texSubImage2D:de,texSubImage3D:ue,compressedTexSubImage2D:ae,compressedTexSubImage3D:De,scissor:Le,viewport:Ue,reset:dt}}function gA(s,e,t,i,n,r,o){const a=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),c=new Me,h=new WeakMap;let u;const d=new WeakMap;let f=!1;try{f=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function p(O,A){return f?new OffscreenCanvas(O,A):nl("canvas")}function v(O,A,ee){let de=1;const ue=ke(O);if((ue.width>ee||ue.height>ee)&&(de=ee/Math.max(ue.width,ue.height)),de<1)if(typeof HTMLImageElement<"u"&&O instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&O instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&O instanceof ImageBitmap||typeof VideoFrame<"u"&&O instanceof VideoFrame){const ae=Math.floor(de*ue.width),De=Math.floor(de*ue.height);u===void 0&&(u=p(ae,De));const Pe=A?p(ae,De):u;return Pe.width=ae,Pe.height=De,Pe.getContext("2d").drawImage(O,0,0,ae,De),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+ue.width+"x"+ue.height+") to ("+ae+"x"+De+")."),Pe}else return"data"in O&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+ue.width+"x"+ue.height+")."),O;return O}function m(O){return O.generateMipmaps}function g(O){s.generateMipmap(O)}function x(O){return O.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:O.isWebGL3DRenderTarget?s.TEXTURE_3D:O.isWebGLArrayRenderTarget||O.isCompressedArrayTexture?s.TEXTURE_2D_ARRAY:s.TEXTURE_2D}function y(O,A,ee,de,ue=!1){if(O!==null){if(s[O]!==void 0)return s[O];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+O+"'")}let ae=A;if(A===s.RED&&(ee===s.FLOAT&&(ae=s.R32F),ee===s.HALF_FLOAT&&(ae=s.R16F),ee===s.UNSIGNED_BYTE&&(ae=s.R8)),A===s.RED_INTEGER&&(ee===s.UNSIGNED_BYTE&&(ae=s.R8UI),ee===s.UNSIGNED_SHORT&&(ae=s.R16UI),ee===s.UNSIGNED_INT&&(ae=s.R32UI),ee===s.BYTE&&(ae=s.R8I),ee===s.SHORT&&(ae=s.R16I),ee===s.INT&&(ae=s.R32I)),A===s.RG&&(ee===s.FLOAT&&(ae=s.RG32F),ee===s.HALF_FLOAT&&(ae=s.RG16F),ee===s.UNSIGNED_BYTE&&(ae=s.RG8)),A===s.RG_INTEGER&&(ee===s.UNSIGNED_BYTE&&(ae=s.RG8UI),ee===s.UNSIGNED_SHORT&&(ae=s.RG16UI),ee===s.UNSIGNED_INT&&(ae=s.RG32UI),ee===s.BYTE&&(ae=s.RG8I),ee===s.SHORT&&(ae=s.RG16I),ee===s.INT&&(ae=s.RG32I)),A===s.RGB_INTEGER&&(ee===s.UNSIGNED_BYTE&&(ae=s.RGB8UI),ee===s.UNSIGNED_SHORT&&(ae=s.RGB16UI),ee===s.UNSIGNED_INT&&(ae=s.RGB32UI),ee===s.BYTE&&(ae=s.RGB8I),ee===s.SHORT&&(ae=s.RGB16I),ee===s.INT&&(ae=s.RGB32I)),A===s.RGBA_INTEGER&&(ee===s.UNSIGNED_BYTE&&(ae=s.RGBA8UI),ee===s.UNSIGNED_SHORT&&(ae=s.RGBA16UI),ee===s.UNSIGNED_INT&&(ae=s.RGBA32UI),ee===s.BYTE&&(ae=s.RGBA8I),ee===s.SHORT&&(ae=s.RGBA16I),ee===s.INT&&(ae=s.RGBA32I)),A===s.RGB&&ee===s.UNSIGNED_INT_5_9_9_9_REV&&(ae=s.RGB9_E5),A===s.RGBA){const De=ue?$a:Nt.getTransfer(de);ee===s.FLOAT&&(ae=s.RGBA32F),ee===s.HALF_FLOAT&&(ae=s.RGBA16F),ee===s.UNSIGNED_BYTE&&(ae=De===Kt?s.SRGB8_ALPHA8:s.RGBA8),ee===s.UNSIGNED_SHORT_4_4_4_4&&(ae=s.RGBA4),ee===s.UNSIGNED_SHORT_5_5_5_1&&(ae=s.RGB5_A1)}return(ae===s.R16F||ae===s.R32F||ae===s.RG16F||ae===s.RG32F||ae===s.RGBA16F||ae===s.RGBA32F)&&e.get("EXT_color_buffer_float"),ae}function _(O,A){let ee;return O?A===null||A===Vr||A===jo?ee=s.DEPTH24_STENCIL8:A===Si?ee=s.DEPTH32F_STENCIL8:A===Xo&&(ee=s.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):A===null||A===Vr||A===jo?ee=s.DEPTH_COMPONENT24:A===Si?ee=s.DEPTH_COMPONENT32F:A===Xo&&(ee=s.DEPTH_COMPONENT16),ee}function E(O,A){return m(O)===!0||O.isFramebufferTexture&&O.minFilter!==Yn&&O.minFilter!==Mn?Math.log2(Math.max(A.width,A.height))+1:O.mipmaps!==void 0&&O.mipmaps.length>0?O.mipmaps.length:O.isCompressedTexture&&Array.isArray(O.image)?A.mipmaps.length:1}function w(O){const A=O.target;A.removeEventListener("dispose",w),T(A),A.isVideoTexture&&h.delete(A)}function M(O){const A=O.target;A.removeEventListener("dispose",M),b(A)}function T(O){const A=i.get(O);if(A.__webglInit===void 0)return;const ee=O.source,de=d.get(ee);if(de){const ue=de[A.__cacheKey];ue.usedTimes--,ue.usedTimes===0&&S(O),Object.keys(de).length===0&&d.delete(ee)}i.remove(O)}function S(O){const A=i.get(O);s.deleteTexture(A.__webglTexture);const ee=O.source,de=d.get(ee);delete de[A.__cacheKey],o.memory.textures--}function b(O){const A=i.get(O);if(O.depthTexture&&(O.depthTexture.dispose(),i.remove(O.depthTexture)),O.isWebGLCubeRenderTarget)for(let de=0;de<6;de++){if(Array.isArray(A.__webglFramebuffer[de]))for(let ue=0;ue<A.__webglFramebuffer[de].length;ue++)s.deleteFramebuffer(A.__webglFramebuffer[de][ue]);else s.deleteFramebuffer(A.__webglFramebuffer[de]);A.__webglDepthbuffer&&s.deleteRenderbuffer(A.__webglDepthbuffer[de])}else{if(Array.isArray(A.__webglFramebuffer))for(let de=0;de<A.__webglFramebuffer.length;de++)s.deleteFramebuffer(A.__webglFramebuffer[de]);else s.deleteFramebuffer(A.__webglFramebuffer);if(A.__webglDepthbuffer&&s.deleteRenderbuffer(A.__webglDepthbuffer),A.__webglMultisampledFramebuffer&&s.deleteFramebuffer(A.__webglMultisampledFramebuffer),A.__webglColorRenderbuffer)for(let de=0;de<A.__webglColorRenderbuffer.length;de++)A.__webglColorRenderbuffer[de]&&s.deleteRenderbuffer(A.__webglColorRenderbuffer[de]);A.__webglDepthRenderbuffer&&s.deleteRenderbuffer(A.__webglDepthRenderbuffer)}const ee=O.textures;for(let de=0,ue=ee.length;de<ue;de++){const ae=i.get(ee[de]);ae.__webglTexture&&(s.deleteTexture(ae.__webglTexture),o.memory.textures--),i.remove(ee[de])}i.remove(O)}let P=0;function D(){P=0}function G(){const O=P;return O>=n.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+O+" texture units while this GPU supports only "+n.maxTextures),P+=1,O}function H(O){const A=[];return A.push(O.wrapS),A.push(O.wrapT),A.push(O.wrapR||0),A.push(O.magFilter),A.push(O.minFilter),A.push(O.anisotropy),A.push(O.internalFormat),A.push(O.format),A.push(O.type),A.push(O.generateMipmaps),A.push(O.premultiplyAlpha),A.push(O.flipY),A.push(O.unpackAlignment),A.push(O.colorSpace),A.join()}function q(O,A){const ee=i.get(O);if(O.isVideoTexture&&pe(O),O.isRenderTargetTexture===!1&&O.version>0&&ee.__version!==O.version){const de=O.image;if(de===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(de.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{J(ee,O,A);return}}t.bindTexture(s.TEXTURE_2D,ee.__webglTexture,s.TEXTURE0+A)}function F(O,A){const ee=i.get(O);if(O.version>0&&ee.__version!==O.version){J(ee,O,A);return}t.bindTexture(s.TEXTURE_2D_ARRAY,ee.__webglTexture,s.TEXTURE0+A)}function te(O,A){const ee=i.get(O);if(O.version>0&&ee.__version!==O.version){J(ee,O,A);return}t.bindTexture(s.TEXTURE_3D,ee.__webglTexture,s.TEXTURE0+A)}function Y(O,A){const ee=i.get(O);if(O.version>0&&ee.__version!==O.version){X(ee,O,A);return}t.bindTexture(s.TEXTURE_CUBE_MAP,ee.__webglTexture,s.TEXTURE0+A)}const j={[tr]:s.REPEAT,[bi]:s.CLAMP_TO_EDGE,[Ja]:s.MIRRORED_REPEAT},$={[Yn]:s.NEAREST,[Nf]:s.NEAREST_MIPMAP_NEAREST,[ko]:s.NEAREST_MIPMAP_LINEAR,[Mn]:s.LINEAR,[Ua]:s.LINEAR_MIPMAP_NEAREST,[nr]:s.LINEAR_MIPMAP_LINEAR},L={[Ev]:s.NEVER,[Iv]:s.ALWAYS,[Tv]:s.LESS,[Xf]:s.LEQUAL,[Av]:s.EQUAL,[Pv]:s.GEQUAL,[Cv]:s.GREATER,[Rv]:s.NOTEQUAL};function Z(O,A){if(A.type===Si&&e.has("OES_texture_float_linear")===!1&&(A.magFilter===Mn||A.magFilter===Ua||A.magFilter===ko||A.magFilter===nr||A.minFilter===Mn||A.minFilter===Ua||A.minFilter===ko||A.minFilter===nr)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),s.texParameteri(O,s.TEXTURE_WRAP_S,j[A.wrapS]),s.texParameteri(O,s.TEXTURE_WRAP_T,j[A.wrapT]),(O===s.TEXTURE_3D||O===s.TEXTURE_2D_ARRAY)&&s.texParameteri(O,s.TEXTURE_WRAP_R,j[A.wrapR]),s.texParameteri(O,s.TEXTURE_MAG_FILTER,$[A.magFilter]),s.texParameteri(O,s.TEXTURE_MIN_FILTER,$[A.minFilter]),A.compareFunction&&(s.texParameteri(O,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(O,s.TEXTURE_COMPARE_FUNC,L[A.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(A.magFilter===Yn||A.minFilter!==ko&&A.minFilter!==nr||A.type===Si&&e.has("OES_texture_float_linear")===!1)return;if(A.anisotropy>1||i.get(A).__currentAnisotropy){const ee=e.get("EXT_texture_filter_anisotropic");s.texParameterf(O,ee.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(A.anisotropy,n.getMaxAnisotropy())),i.get(A).__currentAnisotropy=A.anisotropy}}}function Q(O,A){let ee=!1;O.__webglInit===void 0&&(O.__webglInit=!0,A.addEventListener("dispose",w));const de=A.source;let ue=d.get(de);ue===void 0&&(ue={},d.set(de,ue));const ae=H(A);if(ae!==O.__cacheKey){ue[ae]===void 0&&(ue[ae]={texture:s.createTexture(),usedTimes:0},o.memory.textures++,ee=!0),ue[ae].usedTimes++;const De=ue[O.__cacheKey];De!==void 0&&(ue[O.__cacheKey].usedTimes--,De.usedTimes===0&&S(A)),O.__cacheKey=ae,O.__webglTexture=ue[ae].texture}return ee}function k(O,A,ee){return Math.floor(Math.floor(O/ee)/A)}function W(O,A,ee,de){const ae=O.updateRanges;if(ae.length===0)t.texSubImage2D(s.TEXTURE_2D,0,0,0,A.width,A.height,ee,de,A.data);else{ae.sort((Se,Le)=>Se.start-Le.start);let De=0;for(let Se=1;Se<ae.length;Se++){const Le=ae[De],Ue=ae[Se],$e=Le.start+Le.count,Ne=k(Ue.start,A.width,4),dt=k(Le.start,A.width,4);Ue.start<=$e+1&&Ne===dt&&k(Ue.start+Ue.count-1,A.width,4)===Ne?Le.count=Math.max(Le.count,Ue.start+Ue.count-Le.start):(++De,ae[De]=Ue)}ae.length=De+1;const Pe=s.getParameter(s.UNPACK_ROW_LENGTH),He=s.getParameter(s.UNPACK_SKIP_PIXELS),je=s.getParameter(s.UNPACK_SKIP_ROWS);s.pixelStorei(s.UNPACK_ROW_LENGTH,A.width);for(let Se=0,Le=ae.length;Se<Le;Se++){const Ue=ae[Se],$e=Math.floor(Ue.start/4),Ne=Math.ceil(Ue.count/4),dt=$e%A.width,ie=Math.floor($e/A.width),Re=Ne,Ee=1;s.pixelStorei(s.UNPACK_SKIP_PIXELS,dt),s.pixelStorei(s.UNPACK_SKIP_ROWS,ie),t.texSubImage2D(s.TEXTURE_2D,0,dt,ie,Re,Ee,ee,de,A.data)}O.clearUpdateRanges(),s.pixelStorei(s.UNPACK_ROW_LENGTH,Pe),s.pixelStorei(s.UNPACK_SKIP_PIXELS,He),s.pixelStorei(s.UNPACK_SKIP_ROWS,je)}}function J(O,A,ee){let de=s.TEXTURE_2D;(A.isDataArrayTexture||A.isCompressedArrayTexture)&&(de=s.TEXTURE_2D_ARRAY),A.isData3DTexture&&(de=s.TEXTURE_3D);const ue=Q(O,A),ae=A.source;t.bindTexture(de,O.__webglTexture,s.TEXTURE0+ee);const De=i.get(ae);if(ae.version!==De.__version||ue===!0){t.activeTexture(s.TEXTURE0+ee);const Pe=Nt.getPrimaries(Nt.workingColorSpace),He=A.colorSpace===Pr?null:Nt.getPrimaries(A.colorSpace),je=A.colorSpace===Pr||Pe===He?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,A.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,A.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,A.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,je);let Se=v(A.image,!1,n.maxTextureSize);Se=ce(A,Se);const Le=r.convert(A.format,A.colorSpace),Ue=r.convert(A.type);let $e=y(A.internalFormat,Le,Ue,A.colorSpace,A.isVideoTexture);Z(de,A);let Ne;const dt=A.mipmaps,ie=A.isVideoTexture!==!0,Re=De.__version===void 0||ue===!0,Ee=ae.dataReady,et=E(A,Se);if(A.isDepthTexture)$e=_(A.format===qo,A.type),Re&&(ie?t.texStorage2D(s.TEXTURE_2D,1,$e,Se.width,Se.height):t.texImage2D(s.TEXTURE_2D,0,$e,Se.width,Se.height,0,Le,Ue,null));else if(A.isDataTexture)if(dt.length>0){ie&&Re&&t.texStorage2D(s.TEXTURE_2D,et,$e,dt[0].width,dt[0].height);for(let Ce=0,ye=dt.length;Ce<ye;Ce++)Ne=dt[Ce],ie?Ee&&t.texSubImage2D(s.TEXTURE_2D,Ce,0,0,Ne.width,Ne.height,Le,Ue,Ne.data):t.texImage2D(s.TEXTURE_2D,Ce,$e,Ne.width,Ne.height,0,Le,Ue,Ne.data);A.generateMipmaps=!1}else ie?(Re&&t.texStorage2D(s.TEXTURE_2D,et,$e,Se.width,Se.height),Ee&&W(A,Se,Le,Ue)):t.texImage2D(s.TEXTURE_2D,0,$e,Se.width,Se.height,0,Le,Ue,Se.data);else if(A.isCompressedTexture)if(A.isCompressedArrayTexture){ie&&Re&&t.texStorage3D(s.TEXTURE_2D_ARRAY,et,$e,dt[0].width,dt[0].height,Se.depth);for(let Ce=0,ye=dt.length;Ce<ye;Ce++)if(Ne=dt[Ce],A.format!==ci)if(Le!==null)if(ie){if(Ee)if(A.layerUpdates.size>0){const Ze=df(Ne.width,Ne.height,A.format,A.type);for(const tt of A.layerUpdates){const rt=Ne.data.subarray(tt*Ze/Ne.data.BYTES_PER_ELEMENT,(tt+1)*Ze/Ne.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,Ce,0,0,tt,Ne.width,Ne.height,1,Le,rt)}A.clearLayerUpdates()}else t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,Ce,0,0,0,Ne.width,Ne.height,Se.depth,Le,Ne.data)}else t.compressedTexImage3D(s.TEXTURE_2D_ARRAY,Ce,$e,Ne.width,Ne.height,Se.depth,0,Ne.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else ie?Ee&&t.texSubImage3D(s.TEXTURE_2D_ARRAY,Ce,0,0,0,Ne.width,Ne.height,Se.depth,Le,Ue,Ne.data):t.texImage3D(s.TEXTURE_2D_ARRAY,Ce,$e,Ne.width,Ne.height,Se.depth,0,Le,Ue,Ne.data)}else{ie&&Re&&t.texStorage2D(s.TEXTURE_2D,et,$e,dt[0].width,dt[0].height);for(let Ce=0,ye=dt.length;Ce<ye;Ce++)Ne=dt[Ce],A.format!==ci?Le!==null?ie?Ee&&t.compressedTexSubImage2D(s.TEXTURE_2D,Ce,0,0,Ne.width,Ne.height,Le,Ne.data):t.compressedTexImage2D(s.TEXTURE_2D,Ce,$e,Ne.width,Ne.height,0,Ne.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):ie?Ee&&t.texSubImage2D(s.TEXTURE_2D,Ce,0,0,Ne.width,Ne.height,Le,Ue,Ne.data):t.texImage2D(s.TEXTURE_2D,Ce,$e,Ne.width,Ne.height,0,Le,Ue,Ne.data)}else if(A.isDataArrayTexture)if(ie){if(Re&&t.texStorage3D(s.TEXTURE_2D_ARRAY,et,$e,Se.width,Se.height,Se.depth),Ee)if(A.layerUpdates.size>0){const Ce=df(Se.width,Se.height,A.format,A.type);for(const ye of A.layerUpdates){const Ze=Se.data.subarray(ye*Ce/Se.data.BYTES_PER_ELEMENT,(ye+1)*Ce/Se.data.BYTES_PER_ELEMENT);t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,ye,Se.width,Se.height,1,Le,Ue,Ze)}A.clearLayerUpdates()}else t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,Se.width,Se.height,Se.depth,Le,Ue,Se.data)}else t.texImage3D(s.TEXTURE_2D_ARRAY,0,$e,Se.width,Se.height,Se.depth,0,Le,Ue,Se.data);else if(A.isData3DTexture)ie?(Re&&t.texStorage3D(s.TEXTURE_3D,et,$e,Se.width,Se.height,Se.depth),Ee&&t.texSubImage3D(s.TEXTURE_3D,0,0,0,0,Se.width,Se.height,Se.depth,Le,Ue,Se.data)):t.texImage3D(s.TEXTURE_3D,0,$e,Se.width,Se.height,Se.depth,0,Le,Ue,Se.data);else if(A.isFramebufferTexture){if(Re)if(ie)t.texStorage2D(s.TEXTURE_2D,et,$e,Se.width,Se.height);else{let Ce=Se.width,ye=Se.height;for(let Ze=0;Ze<et;Ze++)t.texImage2D(s.TEXTURE_2D,Ze,$e,Ce,ye,0,Le,Ue,null),Ce>>=1,ye>>=1}}else if(dt.length>0){if(ie&&Re){const Ce=ke(dt[0]);t.texStorage2D(s.TEXTURE_2D,et,$e,Ce.width,Ce.height)}for(let Ce=0,ye=dt.length;Ce<ye;Ce++)Ne=dt[Ce],ie?Ee&&t.texSubImage2D(s.TEXTURE_2D,Ce,0,0,Le,Ue,Ne):t.texImage2D(s.TEXTURE_2D,Ce,$e,Le,Ue,Ne);A.generateMipmaps=!1}else if(ie){if(Re){const Ce=ke(Se);t.texStorage2D(s.TEXTURE_2D,et,$e,Ce.width,Ce.height)}Ee&&t.texSubImage2D(s.TEXTURE_2D,0,0,0,Le,Ue,Se)}else t.texImage2D(s.TEXTURE_2D,0,$e,Le,Ue,Se);m(A)&&g(de),De.__version=ae.version,A.onUpdate&&A.onUpdate(A)}O.__version=A.version}function X(O,A,ee){if(A.image.length!==6)return;const de=Q(O,A),ue=A.source;t.bindTexture(s.TEXTURE_CUBE_MAP,O.__webglTexture,s.TEXTURE0+ee);const ae=i.get(ue);if(ue.version!==ae.__version||de===!0){t.activeTexture(s.TEXTURE0+ee);const De=Nt.getPrimaries(Nt.workingColorSpace),Pe=A.colorSpace===Pr?null:Nt.getPrimaries(A.colorSpace),He=A.colorSpace===Pr||De===Pe?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,A.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,A.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,A.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,He);const je=A.isCompressedTexture||A.image[0].isCompressedTexture,Se=A.image[0]&&A.image[0].isDataTexture,Le=[];for(let ye=0;ye<6;ye++)!je&&!Se?Le[ye]=v(A.image[ye],!0,n.maxCubemapSize):Le[ye]=Se?A.image[ye].image:A.image[ye],Le[ye]=ce(A,Le[ye]);const Ue=Le[0],$e=r.convert(A.format,A.colorSpace),Ne=r.convert(A.type),dt=y(A.internalFormat,$e,Ne,A.colorSpace),ie=A.isVideoTexture!==!0,Re=ae.__version===void 0||de===!0,Ee=ue.dataReady;let et=E(A,Ue);Z(s.TEXTURE_CUBE_MAP,A);let Ce;if(je){ie&&Re&&t.texStorage2D(s.TEXTURE_CUBE_MAP,et,dt,Ue.width,Ue.height);for(let ye=0;ye<6;ye++){Ce=Le[ye].mipmaps;for(let Ze=0;Ze<Ce.length;Ze++){const tt=Ce[Ze];A.format!==ci?$e!==null?ie?Ee&&t.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ye,Ze,0,0,tt.width,tt.height,$e,tt.data):t.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ye,Ze,dt,tt.width,tt.height,0,tt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):ie?Ee&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ye,Ze,0,0,tt.width,tt.height,$e,Ne,tt.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ye,Ze,dt,tt.width,tt.height,0,$e,Ne,tt.data)}}}else{if(Ce=A.mipmaps,ie&&Re){Ce.length>0&&et++;const ye=ke(Le[0]);t.texStorage2D(s.TEXTURE_CUBE_MAP,et,dt,ye.width,ye.height)}for(let ye=0;ye<6;ye++)if(Se){ie?Ee&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ye,0,0,0,Le[ye].width,Le[ye].height,$e,Ne,Le[ye].data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ye,0,dt,Le[ye].width,Le[ye].height,0,$e,Ne,Le[ye].data);for(let Ze=0;Ze<Ce.length;Ze++){const rt=Ce[Ze].image[ye].image;ie?Ee&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ye,Ze+1,0,0,rt.width,rt.height,$e,Ne,rt.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ye,Ze+1,dt,rt.width,rt.height,0,$e,Ne,rt.data)}}else{ie?Ee&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ye,0,0,0,$e,Ne,Le[ye]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ye,0,dt,$e,Ne,Le[ye]);for(let Ze=0;Ze<Ce.length;Ze++){const tt=Ce[Ze];ie?Ee&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ye,Ze+1,0,0,$e,Ne,tt.image[ye]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ye,Ze+1,dt,$e,Ne,tt.image[ye])}}}m(A)&&g(s.TEXTURE_CUBE_MAP),ae.__version=ue.version,A.onUpdate&&A.onUpdate(A)}O.__version=A.version}function ne(O,A,ee,de,ue,ae){const De=r.convert(ee.format,ee.colorSpace),Pe=r.convert(ee.type),He=y(ee.internalFormat,De,Pe,ee.colorSpace),je=i.get(A),Se=i.get(ee);if(Se.__renderTarget=A,!je.__hasExternalTextures){const Le=Math.max(1,A.width>>ae),Ue=Math.max(1,A.height>>ae);ue===s.TEXTURE_3D||ue===s.TEXTURE_2D_ARRAY?t.texImage3D(ue,ae,He,Le,Ue,A.depth,0,De,Pe,null):t.texImage2D(ue,ae,He,Le,Ue,0,De,Pe,null)}t.bindFramebuffer(s.FRAMEBUFFER,O),Te(A)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,de,ue,Se.__webglTexture,0,re(A)):(ue===s.TEXTURE_2D||ue>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&ue<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,de,ue,Se.__webglTexture,ae),t.bindFramebuffer(s.FRAMEBUFFER,null)}function me(O,A,ee){if(s.bindRenderbuffer(s.RENDERBUFFER,O),A.depthBuffer){const de=A.depthTexture,ue=de&&de.isDepthTexture?de.type:null,ae=_(A.stencilBuffer,ue),De=A.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Pe=re(A);Te(A)?a.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Pe,ae,A.width,A.height):ee?s.renderbufferStorageMultisample(s.RENDERBUFFER,Pe,ae,A.width,A.height):s.renderbufferStorage(s.RENDERBUFFER,ae,A.width,A.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,De,s.RENDERBUFFER,O)}else{const de=A.textures;for(let ue=0;ue<de.length;ue++){const ae=de[ue],De=r.convert(ae.format,ae.colorSpace),Pe=r.convert(ae.type),He=y(ae.internalFormat,De,Pe,ae.colorSpace),je=re(A);ee&&Te(A)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,je,He,A.width,A.height):Te(A)?a.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,je,He,A.width,A.height):s.renderbufferStorage(s.RENDERBUFFER,He,A.width,A.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function be(O,A){if(A&&A.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(s.FRAMEBUFFER,O),!(A.depthTexture&&A.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const de=i.get(A.depthTexture);de.__renderTarget=A,(!de.__webglTexture||A.depthTexture.image.width!==A.width||A.depthTexture.image.height!==A.height)&&(A.depthTexture.image.width=A.width,A.depthTexture.image.height=A.height,A.depthTexture.needsUpdate=!0),q(A.depthTexture,0);const ue=de.__webglTexture,ae=re(A);if(A.depthTexture.format===Yo)Te(A)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,ue,0,ae):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,ue,0);else if(A.depthTexture.format===qo)Te(A)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,ue,0,ae):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,ue,0);else throw new Error("Unknown depthTexture format")}function we(O){const A=i.get(O),ee=O.isWebGLCubeRenderTarget===!0;if(A.__boundDepthTexture!==O.depthTexture){const de=O.depthTexture;if(A.__depthDisposeCallback&&A.__depthDisposeCallback(),de){const ue=()=>{delete A.__boundDepthTexture,delete A.__depthDisposeCallback,de.removeEventListener("dispose",ue)};de.addEventListener("dispose",ue),A.__depthDisposeCallback=ue}A.__boundDepthTexture=de}if(O.depthTexture&&!A.__autoAllocateDepthBuffer){if(ee)throw new Error("target.depthTexture not supported in Cube render targets");const de=O.texture.mipmaps;de&&de.length>0?be(A.__webglFramebuffer[0],O):be(A.__webglFramebuffer,O)}else if(ee){A.__webglDepthbuffer=[];for(let de=0;de<6;de++)if(t.bindFramebuffer(s.FRAMEBUFFER,A.__webglFramebuffer[de]),A.__webglDepthbuffer[de]===void 0)A.__webglDepthbuffer[de]=s.createRenderbuffer(),me(A.__webglDepthbuffer[de],O,!1);else{const ue=O.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,ae=A.__webglDepthbuffer[de];s.bindRenderbuffer(s.RENDERBUFFER,ae),s.framebufferRenderbuffer(s.FRAMEBUFFER,ue,s.RENDERBUFFER,ae)}}else{const de=O.texture.mipmaps;if(de&&de.length>0?t.bindFramebuffer(s.FRAMEBUFFER,A.__webglFramebuffer[0]):t.bindFramebuffer(s.FRAMEBUFFER,A.__webglFramebuffer),A.__webglDepthbuffer===void 0)A.__webglDepthbuffer=s.createRenderbuffer(),me(A.__webglDepthbuffer,O,!1);else{const ue=O.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,ae=A.__webglDepthbuffer;s.bindRenderbuffer(s.RENDERBUFFER,ae),s.framebufferRenderbuffer(s.FRAMEBUFFER,ue,s.RENDERBUFFER,ae)}}t.bindFramebuffer(s.FRAMEBUFFER,null)}function ve(O,A,ee){const de=i.get(O);A!==void 0&&ne(de.__webglFramebuffer,O,O.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,0),ee!==void 0&&we(O)}function Ie(O){const A=O.texture,ee=i.get(O),de=i.get(A);O.addEventListener("dispose",M);const ue=O.textures,ae=O.isWebGLCubeRenderTarget===!0,De=ue.length>1;if(De||(de.__webglTexture===void 0&&(de.__webglTexture=s.createTexture()),de.__version=A.version,o.memory.textures++),ae){ee.__webglFramebuffer=[];for(let Pe=0;Pe<6;Pe++)if(A.mipmaps&&A.mipmaps.length>0){ee.__webglFramebuffer[Pe]=[];for(let He=0;He<A.mipmaps.length;He++)ee.__webglFramebuffer[Pe][He]=s.createFramebuffer()}else ee.__webglFramebuffer[Pe]=s.createFramebuffer()}else{if(A.mipmaps&&A.mipmaps.length>0){ee.__webglFramebuffer=[];for(let Pe=0;Pe<A.mipmaps.length;Pe++)ee.__webglFramebuffer[Pe]=s.createFramebuffer()}else ee.__webglFramebuffer=s.createFramebuffer();if(De)for(let Pe=0,He=ue.length;Pe<He;Pe++){const je=i.get(ue[Pe]);je.__webglTexture===void 0&&(je.__webglTexture=s.createTexture(),o.memory.textures++)}if(O.samples>0&&Te(O)===!1){ee.__webglMultisampledFramebuffer=s.createFramebuffer(),ee.__webglColorRenderbuffer=[],t.bindFramebuffer(s.FRAMEBUFFER,ee.__webglMultisampledFramebuffer);for(let Pe=0;Pe<ue.length;Pe++){const He=ue[Pe];ee.__webglColorRenderbuffer[Pe]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,ee.__webglColorRenderbuffer[Pe]);const je=r.convert(He.format,He.colorSpace),Se=r.convert(He.type),Le=y(He.internalFormat,je,Se,He.colorSpace,O.isXRRenderTarget===!0),Ue=re(O);s.renderbufferStorageMultisample(s.RENDERBUFFER,Ue,Le,O.width,O.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Pe,s.RENDERBUFFER,ee.__webglColorRenderbuffer[Pe])}s.bindRenderbuffer(s.RENDERBUFFER,null),O.depthBuffer&&(ee.__webglDepthRenderbuffer=s.createRenderbuffer(),me(ee.__webglDepthRenderbuffer,O,!0)),t.bindFramebuffer(s.FRAMEBUFFER,null)}}if(ae){t.bindTexture(s.TEXTURE_CUBE_MAP,de.__webglTexture),Z(s.TEXTURE_CUBE_MAP,A);for(let Pe=0;Pe<6;Pe++)if(A.mipmaps&&A.mipmaps.length>0)for(let He=0;He<A.mipmaps.length;He++)ne(ee.__webglFramebuffer[Pe][He],O,A,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,He);else ne(ee.__webglFramebuffer[Pe],O,A,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,0);m(A)&&g(s.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(De){for(let Pe=0,He=ue.length;Pe<He;Pe++){const je=ue[Pe],Se=i.get(je);t.bindTexture(s.TEXTURE_2D,Se.__webglTexture),Z(s.TEXTURE_2D,je),ne(ee.__webglFramebuffer,O,je,s.COLOR_ATTACHMENT0+Pe,s.TEXTURE_2D,0),m(je)&&g(s.TEXTURE_2D)}t.unbindTexture()}else{let Pe=s.TEXTURE_2D;if((O.isWebGL3DRenderTarget||O.isWebGLArrayRenderTarget)&&(Pe=O.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),t.bindTexture(Pe,de.__webglTexture),Z(Pe,A),A.mipmaps&&A.mipmaps.length>0)for(let He=0;He<A.mipmaps.length;He++)ne(ee.__webglFramebuffer[He],O,A,s.COLOR_ATTACHMENT0,Pe,He);else ne(ee.__webglFramebuffer,O,A,s.COLOR_ATTACHMENT0,Pe,0);m(A)&&g(Pe),t.unbindTexture()}O.depthBuffer&&we(O)}function U(O){const A=O.textures;for(let ee=0,de=A.length;ee<de;ee++){const ue=A[ee];if(m(ue)){const ae=x(O),De=i.get(ue).__webglTexture;t.bindTexture(ae,De),g(ae),t.unbindTexture()}}}const fe=[],he=[];function xe(O){if(O.samples>0){if(Te(O)===!1){const A=O.textures,ee=O.width,de=O.height;let ue=s.COLOR_BUFFER_BIT;const ae=O.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,De=i.get(O),Pe=A.length>1;if(Pe)for(let je=0;je<A.length;je++)t.bindFramebuffer(s.FRAMEBUFFER,De.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+je,s.RENDERBUFFER,null),t.bindFramebuffer(s.FRAMEBUFFER,De.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+je,s.TEXTURE_2D,null,0);t.bindFramebuffer(s.READ_FRAMEBUFFER,De.__webglMultisampledFramebuffer);const He=O.texture.mipmaps;He&&He.length>0?t.bindFramebuffer(s.DRAW_FRAMEBUFFER,De.__webglFramebuffer[0]):t.bindFramebuffer(s.DRAW_FRAMEBUFFER,De.__webglFramebuffer);for(let je=0;je<A.length;je++){if(O.resolveDepthBuffer&&(O.depthBuffer&&(ue|=s.DEPTH_BUFFER_BIT),O.stencilBuffer&&O.resolveStencilBuffer&&(ue|=s.STENCIL_BUFFER_BIT)),Pe){s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,De.__webglColorRenderbuffer[je]);const Se=i.get(A[je]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,Se,0)}s.blitFramebuffer(0,0,ee,de,0,0,ee,de,ue,s.NEAREST),l===!0&&(fe.length=0,he.length=0,fe.push(s.COLOR_ATTACHMENT0+je),O.depthBuffer&&O.resolveDepthBuffer===!1&&(fe.push(ae),he.push(ae),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,he)),s.invalidateFramebuffer(s.READ_FRAMEBUFFER,fe))}if(t.bindFramebuffer(s.READ_FRAMEBUFFER,null),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),Pe)for(let je=0;je<A.length;je++){t.bindFramebuffer(s.FRAMEBUFFER,De.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+je,s.RENDERBUFFER,De.__webglColorRenderbuffer[je]);const Se=i.get(A[je]).__webglTexture;t.bindFramebuffer(s.FRAMEBUFFER,De.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+je,s.TEXTURE_2D,Se,0)}t.bindFramebuffer(s.DRAW_FRAMEBUFFER,De.__webglMultisampledFramebuffer)}else if(O.depthBuffer&&O.resolveDepthBuffer===!1&&l){const A=O.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[A])}}}function re(O){return Math.min(n.maxSamples,O.samples)}function Te(O){const A=i.get(O);return O.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&A.__useRenderToTexture!==!1}function pe(O){const A=o.render.frame;h.get(O)!==A&&(h.set(O,A),O.update())}function ce(O,A){const ee=O.colorSpace,de=O.format,ue=O.type;return O.isCompressedTexture===!0||O.isVideoTexture===!0||ee!==eo&&ee!==Pr&&(Nt.getTransfer(ee)===Kt?(de!==ci||ue!==rr)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",ee)),A}function ke(O){return typeof HTMLImageElement<"u"&&O instanceof HTMLImageElement?(c.width=O.naturalWidth||O.width,c.height=O.naturalHeight||O.height):typeof VideoFrame<"u"&&O instanceof VideoFrame?(c.width=O.displayWidth,c.height=O.displayHeight):(c.width=O.width,c.height=O.height),c}this.allocateTextureUnit=G,this.resetTextureUnits=D,this.setTexture2D=q,this.setTexture2DArray=F,this.setTexture3D=te,this.setTextureCube=Y,this.rebindTextures=ve,this.setupRenderTarget=Ie,this.updateRenderTargetMipmap=U,this.updateMultisampleRenderTarget=xe,this.setupDepthRenderbuffer=we,this.setupFrameBufferTexture=ne,this.useMultisampledRTT=Te}function D_(s,e){function t(i,n=Pr){let r;const o=Nt.getTransfer(n);if(i===rr)return s.UNSIGNED_BYTE;if(i===Vh)return s.UNSIGNED_SHORT_4_4_4_4;if(i===Gh)return s.UNSIGNED_SHORT_5_5_5_1;if(i===kf)return s.UNSIGNED_INT_5_9_9_9_REV;if(i===Of)return s.BYTE;if(i===Ff)return s.SHORT;if(i===Xo)return s.UNSIGNED_SHORT;if(i===zh)return s.INT;if(i===Vr)return s.UNSIGNED_INT;if(i===Si)return s.FLOAT;if(i===$o)return s.HALF_FLOAT;if(i===Bf)return s.ALPHA;if(i===zf)return s.RGB;if(i===ci)return s.RGBA;if(i===Yo)return s.DEPTH_COMPONENT;if(i===qo)return s.DEPTH_STENCIL;if(i===Hh)return s.RED;if(i===_l)return s.RED_INTEGER;if(i===Vf)return s.RG;if(i===Wh)return s.RG_INTEGER;if(i===Xh)return s.RGBA_INTEGER;if(i===Na||i===Oa||i===Fa||i===ka)if(o===Kt)if(r=e.get("WEBGL_compressed_texture_s3tc_srgb"),r!==null){if(i===Na)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===Oa)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===Fa)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===ka)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(r=e.get("WEBGL_compressed_texture_s3tc"),r!==null){if(i===Na)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===Oa)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===Fa)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===ka)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(i===nh||i===ih||i===rh||i===sh)if(r=e.get("WEBGL_compressed_texture_pvrtc"),r!==null){if(i===nh)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===ih)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===rh)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===sh)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(i===oh||i===ah||i===lh)if(r=e.get("WEBGL_compressed_texture_etc"),r!==null){if(i===oh||i===ah)return o===Kt?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(i===lh)return o===Kt?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(i===ch||i===hh||i===uh||i===dh||i===fh||i===ph||i===mh||i===gh||i===vh||i===_h||i===yh||i===xh||i===bh||i===Sh)if(r=e.get("WEBGL_compressed_texture_astc"),r!==null){if(i===ch)return o===Kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===hh)return o===Kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===uh)return o===Kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===dh)return o===Kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===fh)return o===Kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===ph)return o===Kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===mh)return o===Kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===gh)return o===Kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===vh)return o===Kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===_h)return o===Kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===yh)return o===Kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===xh)return o===Kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===bh)return o===Kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===Sh)return o===Kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(i===Ba||i===Mh||i===wh)if(r=e.get("EXT_texture_compression_bptc"),r!==null){if(i===Ba)return o===Kt?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(i===Mh)return r.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(i===wh)return r.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(i===Gf||i===Eh||i===Th||i===Ah)if(r=e.get("EXT_texture_compression_rgtc"),r!==null){if(i===Ba)return r.COMPRESSED_RED_RGTC1_EXT;if(i===Eh)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===Th)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===Ah)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return i===jo?s.UNSIGNED_INT_24_8:s[i]!==void 0?s[i]:null}return{convert:t}}const vA=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,_A=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class yA{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,i){if(this.texture===null){const n=new fn,r=e.properties.get(n);r.__webglTexture=t.texture,(t.depthNear!==i.depthNear||t.depthFar!==i.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=n}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,i=new wi({vertexShader:vA,fragmentShader:_A,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new ze(new ar(20,20),i)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class xA extends Sr{constructor(e,t){super();const i=this;let n=null,r=1,o=null,a="local-floor",l=1,c=null,h=null,u=null,d=null,f=null,p=null;const v=new yA,m=t.getContextAttributes();let g=null,x=null;const y=[],_=[],E=new Me;let w=null;const M=new Sn;M.viewport=new It;const T=new Sn;T.viewport=new It;const S=[M,T],b=new b_;let P=null,D=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(k){let W=y[k];return W===void 0&&(W=new kc,y[k]=W),W.getTargetRaySpace()},this.getControllerGrip=function(k){let W=y[k];return W===void 0&&(W=new kc,y[k]=W),W.getGripSpace()},this.getHand=function(k){let W=y[k];return W===void 0&&(W=new kc,y[k]=W),W.getHandSpace()};function G(k){const W=_.indexOf(k.inputSource);if(W===-1)return;const J=y[W];J!==void 0&&(J.update(k.inputSource,k.frame,c||o),J.dispatchEvent({type:k.type,data:k.inputSource}))}function H(){n.removeEventListener("select",G),n.removeEventListener("selectstart",G),n.removeEventListener("selectend",G),n.removeEventListener("squeeze",G),n.removeEventListener("squeezestart",G),n.removeEventListener("squeezeend",G),n.removeEventListener("end",H),n.removeEventListener("inputsourceschange",q);for(let k=0;k<y.length;k++){const W=_[k];W!==null&&(_[k]=null,y[k].disconnect(W))}P=null,D=null,v.reset(),e.setRenderTarget(g),f=null,d=null,u=null,n=null,x=null,Q.stop(),i.isPresenting=!1,e.setPixelRatio(w),e.setSize(E.width,E.height,!1),i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(k){r=k,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(k){a=k,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||o},this.setReferenceSpace=function(k){c=k},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return u},this.getFrame=function(){return p},this.getSession=function(){return n},this.setSession=async function(k){if(n=k,n!==null){if(g=e.getRenderTarget(),n.addEventListener("select",G),n.addEventListener("selectstart",G),n.addEventListener("selectend",G),n.addEventListener("squeeze",G),n.addEventListener("squeezestart",G),n.addEventListener("squeezeend",G),n.addEventListener("end",H),n.addEventListener("inputsourceschange",q),m.xrCompatible!==!0&&await t.makeXRCompatible(),w=e.getPixelRatio(),e.getSize(E),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let J=null,X=null,ne=null;m.depth&&(ne=m.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,J=m.stencil?qo:Yo,X=m.stencil?jo:Vr);const me={colorFormat:t.RGBA8,depthFormat:ne,scaleFactor:r};u=new XRWebGLBinding(n,t),d=u.createProjectionLayer(me),n.updateRenderState({layers:[d]}),e.setPixelRatio(1),e.setSize(d.textureWidth,d.textureHeight,!1),x=new Xi(d.textureWidth,d.textureHeight,{format:ci,type:rr,depthTexture:new Kf(d.textureWidth,d.textureHeight,X,void 0,void 0,void 0,void 0,void 0,void 0,J),stencilBuffer:m.stencil,colorSpace:e.outputColorSpace,samples:m.antialias?4:0,resolveDepthBuffer:d.ignoreDepthValues===!1,resolveStencilBuffer:d.ignoreDepthValues===!1})}else{const J={antialias:m.antialias,alpha:!0,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:r};f=new XRWebGLLayer(n,t,J),n.updateRenderState({baseLayer:f}),e.setPixelRatio(1),e.setSize(f.framebufferWidth,f.framebufferHeight,!1),x=new Xi(f.framebufferWidth,f.framebufferHeight,{format:ci,type:rr,colorSpace:e.outputColorSpace,stencilBuffer:m.stencil,resolveDepthBuffer:f.ignoreDepthValues===!1,resolveStencilBuffer:f.ignoreDepthValues===!1})}x.isXRRenderTarget=!0,this.setFoveation(l),c=null,o=await n.requestReferenceSpace(a),Q.setContext(n),Q.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(n!==null)return n.environmentBlendMode},this.getDepthTexture=function(){return v.getDepthTexture()};function q(k){for(let W=0;W<k.removed.length;W++){const J=k.removed[W],X=_.indexOf(J);X>=0&&(_[X]=null,y[X].disconnect(J))}for(let W=0;W<k.added.length;W++){const J=k.added[W];let X=_.indexOf(J);if(X===-1){for(let me=0;me<y.length;me++)if(me>=_.length){_.push(J),X=me;break}else if(_[me]===null){_[me]=J,X=me;break}if(X===-1)break}const ne=y[X];ne&&ne.connect(J)}}const F=new I,te=new I;function Y(k,W,J){F.setFromMatrixPosition(W.matrixWorld),te.setFromMatrixPosition(J.matrixWorld);const X=F.distanceTo(te),ne=W.projectionMatrix.elements,me=J.projectionMatrix.elements,be=ne[14]/(ne[10]-1),we=ne[14]/(ne[10]+1),ve=(ne[9]+1)/ne[5],Ie=(ne[9]-1)/ne[5],U=(ne[8]-1)/ne[0],fe=(me[8]+1)/me[0],he=be*U,xe=be*fe,re=X/(-U+fe),Te=re*-U;if(W.matrixWorld.decompose(k.position,k.quaternion,k.scale),k.translateX(Te),k.translateZ(re),k.matrixWorld.compose(k.position,k.quaternion,k.scale),k.matrixWorldInverse.copy(k.matrixWorld).invert(),ne[10]===-1)k.projectionMatrix.copy(W.projectionMatrix),k.projectionMatrixInverse.copy(W.projectionMatrixInverse);else{const pe=be+re,ce=we+re,ke=he-Te,O=xe+(X-Te),A=ve*we/ce*pe,ee=Ie*we/ce*pe;k.projectionMatrix.makePerspective(ke,O,A,ee,pe,ce),k.projectionMatrixInverse.copy(k.projectionMatrix).invert()}}function j(k,W){W===null?k.matrixWorld.copy(k.matrix):k.matrixWorld.multiplyMatrices(W.matrixWorld,k.matrix),k.matrixWorldInverse.copy(k.matrixWorld).invert()}this.updateCamera=function(k){if(n===null)return;let W=k.near,J=k.far;v.texture!==null&&(v.depthNear>0&&(W=v.depthNear),v.depthFar>0&&(J=v.depthFar)),b.near=T.near=M.near=W,b.far=T.far=M.far=J,(P!==b.near||D!==b.far)&&(n.updateRenderState({depthNear:b.near,depthFar:b.far}),P=b.near,D=b.far),M.layers.mask=k.layers.mask|2,T.layers.mask=k.layers.mask|4,b.layers.mask=M.layers.mask|T.layers.mask;const X=k.parent,ne=b.cameras;j(b,X);for(let me=0;me<ne.length;me++)j(ne[me],X);ne.length===2?Y(b,M,T):b.projectionMatrix.copy(M.projectionMatrix),$(k,b,X)};function $(k,W,J){J===null?k.matrix.copy(W.matrixWorld):(k.matrix.copy(J.matrixWorld),k.matrix.invert(),k.matrix.multiply(W.matrixWorld)),k.matrix.decompose(k.position,k.quaternion,k.scale),k.updateMatrixWorld(!0),k.projectionMatrix.copy(W.projectionMatrix),k.projectionMatrixInverse.copy(W.projectionMatrixInverse),k.isPerspectiveCamera&&(k.fov=Zo*2*Math.atan(1/k.projectionMatrix.elements[5]),k.zoom=1)}this.getCamera=function(){return b},this.getFoveation=function(){if(!(d===null&&f===null))return l},this.setFoveation=function(k){l=k,d!==null&&(d.fixedFoveation=k),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=k)},this.hasDepthSensing=function(){return v.texture!==null},this.getDepthSensingMesh=function(){return v.getMesh(b)};let L=null;function Z(k,W){if(h=W.getViewerPose(c||o),p=W,h!==null){const J=h.views;f!==null&&(e.setRenderTargetFramebuffer(x,f.framebuffer),e.setRenderTarget(x));let X=!1;J.length!==b.cameras.length&&(b.cameras.length=0,X=!0);for(let be=0;be<J.length;be++){const we=J[be];let ve=null;if(f!==null)ve=f.getViewport(we);else{const U=u.getViewSubImage(d,we);ve=U.viewport,be===0&&(e.setRenderTargetTextures(x,U.colorTexture,U.depthStencilTexture),e.setRenderTarget(x))}let Ie=S[be];Ie===void 0&&(Ie=new Sn,Ie.layers.enable(be),Ie.viewport=new It,S[be]=Ie),Ie.matrix.fromArray(we.transform.matrix),Ie.matrix.decompose(Ie.position,Ie.quaternion,Ie.scale),Ie.projectionMatrix.fromArray(we.projectionMatrix),Ie.projectionMatrixInverse.copy(Ie.projectionMatrix).invert(),Ie.viewport.set(ve.x,ve.y,ve.width,ve.height),be===0&&(b.matrix.copy(Ie.matrix),b.matrix.decompose(b.position,b.quaternion,b.scale)),X===!0&&b.cameras.push(Ie)}const ne=n.enabledFeatures;if(ne&&ne.includes("depth-sensing")&&n.depthUsage=="gpu-optimized"&&u){const be=u.getDepthInformation(J[0]);be&&be.isValid&&be.texture&&v.init(e,be,n.renderState)}}for(let J=0;J<y.length;J++){const X=_[J],ne=y[J];X!==null&&ne!==void 0&&ne.update(X,W,c||o)}L&&L(k,W),W.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:W}),p=null}const Q=new A_;Q.setAnimationLoop(Z),this.setAnimationLoop=function(k){L=k},this.dispose=function(){}}}const Rs=new Mi,bA=new ct;function SA(s,e){function t(m,g){m.matrixAutoUpdate===!0&&m.updateMatrix(),g.value.copy(m.matrix)}function i(m,g){g.color.getRGB(m.fogColor.value,Ov(s)),g.isFog?(m.fogNear.value=g.near,m.fogFar.value=g.far):g.isFogExp2&&(m.fogDensity.value=g.density)}function n(m,g,x,y,_){g.isMeshBasicMaterial||g.isMeshLambertMaterial?r(m,g):g.isMeshToonMaterial?(r(m,g),u(m,g)):g.isMeshPhongMaterial?(r(m,g),h(m,g)):g.isMeshStandardMaterial?(r(m,g),d(m,g),g.isMeshPhysicalMaterial&&f(m,g,_)):g.isMeshMatcapMaterial?(r(m,g),p(m,g)):g.isMeshDepthMaterial?r(m,g):g.isMeshDistanceMaterial?(r(m,g),v(m,g)):g.isMeshNormalMaterial?r(m,g):g.isLineBasicMaterial?(o(m,g),g.isLineDashedMaterial&&a(m,g)):g.isPointsMaterial?l(m,g,x,y):g.isSpriteMaterial?c(m,g):g.isShadowMaterial?(m.color.value.copy(g.color),m.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function r(m,g){m.opacity.value=g.opacity,g.color&&m.diffuse.value.copy(g.color),g.emissive&&m.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(m.map.value=g.map,t(g.map,m.mapTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,t(g.alphaMap,m.alphaMapTransform)),g.bumpMap&&(m.bumpMap.value=g.bumpMap,t(g.bumpMap,m.bumpMapTransform),m.bumpScale.value=g.bumpScale,g.side===ti&&(m.bumpScale.value*=-1)),g.normalMap&&(m.normalMap.value=g.normalMap,t(g.normalMap,m.normalMapTransform),m.normalScale.value.copy(g.normalScale),g.side===ti&&m.normalScale.value.negate()),g.displacementMap&&(m.displacementMap.value=g.displacementMap,t(g.displacementMap,m.displacementMapTransform),m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias),g.emissiveMap&&(m.emissiveMap.value=g.emissiveMap,t(g.emissiveMap,m.emissiveMapTransform)),g.specularMap&&(m.specularMap.value=g.specularMap,t(g.specularMap,m.specularMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);const x=e.get(g),y=x.envMap,_=x.envMapRotation;y&&(m.envMap.value=y,Rs.copy(_),Rs.x*=-1,Rs.y*=-1,Rs.z*=-1,y.isCubeTexture&&y.isRenderTargetTexture===!1&&(Rs.y*=-1,Rs.z*=-1),m.envMapRotation.value.setFromMatrix4(bA.makeRotationFromEuler(Rs)),m.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=g.reflectivity,m.ior.value=g.ior,m.refractionRatio.value=g.refractionRatio),g.lightMap&&(m.lightMap.value=g.lightMap,m.lightMapIntensity.value=g.lightMapIntensity,t(g.lightMap,m.lightMapTransform)),g.aoMap&&(m.aoMap.value=g.aoMap,m.aoMapIntensity.value=g.aoMapIntensity,t(g.aoMap,m.aoMapTransform))}function o(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,g.map&&(m.map.value=g.map,t(g.map,m.mapTransform))}function a(m,g){m.dashSize.value=g.dashSize,m.totalSize.value=g.dashSize+g.gapSize,m.scale.value=g.scale}function l(m,g,x,y){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.size.value=g.size*x,m.scale.value=y*.5,g.map&&(m.map.value=g.map,t(g.map,m.uvTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,t(g.alphaMap,m.alphaMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest)}function c(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.rotation.value=g.rotation,g.map&&(m.map.value=g.map,t(g.map,m.mapTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,t(g.alphaMap,m.alphaMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest)}function h(m,g){m.specular.value.copy(g.specular),m.shininess.value=Math.max(g.shininess,1e-4)}function u(m,g){g.gradientMap&&(m.gradientMap.value=g.gradientMap)}function d(m,g){m.metalness.value=g.metalness,g.metalnessMap&&(m.metalnessMap.value=g.metalnessMap,t(g.metalnessMap,m.metalnessMapTransform)),m.roughness.value=g.roughness,g.roughnessMap&&(m.roughnessMap.value=g.roughnessMap,t(g.roughnessMap,m.roughnessMapTransform)),g.envMap&&(m.envMapIntensity.value=g.envMapIntensity)}function f(m,g,x){m.ior.value=g.ior,g.sheen>0&&(m.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),m.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(m.sheenColorMap.value=g.sheenColorMap,t(g.sheenColorMap,m.sheenColorMapTransform)),g.sheenRoughnessMap&&(m.sheenRoughnessMap.value=g.sheenRoughnessMap,t(g.sheenRoughnessMap,m.sheenRoughnessMapTransform))),g.clearcoat>0&&(m.clearcoat.value=g.clearcoat,m.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(m.clearcoatMap.value=g.clearcoatMap,t(g.clearcoatMap,m.clearcoatMapTransform)),g.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap,t(g.clearcoatRoughnessMap,m.clearcoatRoughnessMapTransform)),g.clearcoatNormalMap&&(m.clearcoatNormalMap.value=g.clearcoatNormalMap,t(g.clearcoatNormalMap,m.clearcoatNormalMapTransform),m.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),g.side===ti&&m.clearcoatNormalScale.value.negate())),g.dispersion>0&&(m.dispersion.value=g.dispersion),g.iridescence>0&&(m.iridescence.value=g.iridescence,m.iridescenceIOR.value=g.iridescenceIOR,m.iridescenceThicknessMinimum.value=g.iridescenceThicknessRange[0],m.iridescenceThicknessMaximum.value=g.iridescenceThicknessRange[1],g.iridescenceMap&&(m.iridescenceMap.value=g.iridescenceMap,t(g.iridescenceMap,m.iridescenceMapTransform)),g.iridescenceThicknessMap&&(m.iridescenceThicknessMap.value=g.iridescenceThicknessMap,t(g.iridescenceThicknessMap,m.iridescenceThicknessMapTransform))),g.transmission>0&&(m.transmission.value=g.transmission,m.transmissionSamplerMap.value=x.texture,m.transmissionSamplerSize.value.set(x.width,x.height),g.transmissionMap&&(m.transmissionMap.value=g.transmissionMap,t(g.transmissionMap,m.transmissionMapTransform)),m.thickness.value=g.thickness,g.thicknessMap&&(m.thicknessMap.value=g.thicknessMap,t(g.thicknessMap,m.thicknessMapTransform)),m.attenuationDistance.value=g.attenuationDistance,m.attenuationColor.value.copy(g.attenuationColor)),g.anisotropy>0&&(m.anisotropyVector.value.set(g.anisotropy*Math.cos(g.anisotropyRotation),g.anisotropy*Math.sin(g.anisotropyRotation)),g.anisotropyMap&&(m.anisotropyMap.value=g.anisotropyMap,t(g.anisotropyMap,m.anisotropyMapTransform))),m.specularIntensity.value=g.specularIntensity,m.specularColor.value.copy(g.specularColor),g.specularColorMap&&(m.specularColorMap.value=g.specularColorMap,t(g.specularColorMap,m.specularColorMapTransform)),g.specularIntensityMap&&(m.specularIntensityMap.value=g.specularIntensityMap,t(g.specularIntensityMap,m.specularIntensityMapTransform))}function p(m,g){g.matcap&&(m.matcap.value=g.matcap)}function v(m,g){const x=e.get(g).light;m.referencePosition.value.setFromMatrixPosition(x.matrixWorld),m.nearDistance.value=x.shadow.camera.near,m.farDistance.value=x.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:n}}function MA(s,e,t,i){let n={},r={},o=[];const a=s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS);function l(x,y){const _=y.program;i.uniformBlockBinding(x,_)}function c(x,y){let _=n[x.id];_===void 0&&(p(x),_=h(x),n[x.id]=_,x.addEventListener("dispose",m));const E=y.program;i.updateUBOMapping(x,E);const w=e.render.frame;r[x.id]!==w&&(d(x),r[x.id]=w)}function h(x){const y=u();x.__bindingPointIndex=y;const _=s.createBuffer(),E=x.__size,w=x.usage;return s.bindBuffer(s.UNIFORM_BUFFER,_),s.bufferData(s.UNIFORM_BUFFER,E,w),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,y,_),_}function u(){for(let x=0;x<a;x++)if(o.indexOf(x)===-1)return o.push(x),x;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(x){const y=n[x.id],_=x.uniforms,E=x.__cache;s.bindBuffer(s.UNIFORM_BUFFER,y);for(let w=0,M=_.length;w<M;w++){const T=Array.isArray(_[w])?_[w]:[_[w]];for(let S=0,b=T.length;S<b;S++){const P=T[S];if(f(P,w,S,E)===!0){const D=P.__offset,G=Array.isArray(P.value)?P.value:[P.value];let H=0;for(let q=0;q<G.length;q++){const F=G[q],te=v(F);typeof F=="number"||typeof F=="boolean"?(P.__data[0]=F,s.bufferSubData(s.UNIFORM_BUFFER,D+H,P.__data)):F.isMatrix3?(P.__data[0]=F.elements[0],P.__data[1]=F.elements[1],P.__data[2]=F.elements[2],P.__data[3]=0,P.__data[4]=F.elements[3],P.__data[5]=F.elements[4],P.__data[6]=F.elements[5],P.__data[7]=0,P.__data[8]=F.elements[6],P.__data[9]=F.elements[7],P.__data[10]=F.elements[8],P.__data[11]=0):(F.toArray(P.__data,H),H+=te.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,D,P.__data)}}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function f(x,y,_,E){const w=x.value,M=y+"_"+_;if(E[M]===void 0)return typeof w=="number"||typeof w=="boolean"?E[M]=w:E[M]=w.clone(),!0;{const T=E[M];if(typeof w=="number"||typeof w=="boolean"){if(T!==w)return E[M]=w,!0}else if(T.equals(w)===!1)return T.copy(w),!0}return!1}function p(x){const y=x.uniforms;let _=0;const E=16;for(let M=0,T=y.length;M<T;M++){const S=Array.isArray(y[M])?y[M]:[y[M]];for(let b=0,P=S.length;b<P;b++){const D=S[b],G=Array.isArray(D.value)?D.value:[D.value];for(let H=0,q=G.length;H<q;H++){const F=G[H],te=v(F),Y=_%E,j=Y%te.boundary,$=Y+j;_+=j,$!==0&&E-$<te.storage&&(_+=E-$),D.__data=new Float32Array(te.storage/Float32Array.BYTES_PER_ELEMENT),D.__offset=_,_+=te.storage}}}const w=_%E;return w>0&&(_+=E-w),x.__size=_,x.__cache={},this}function v(x){const y={boundary:0,storage:0};return typeof x=="number"||typeof x=="boolean"?(y.boundary=4,y.storage=4):x.isVector2?(y.boundary=8,y.storage=8):x.isVector3||x.isColor?(y.boundary=16,y.storage=12):x.isVector4?(y.boundary=16,y.storage=16):x.isMatrix3?(y.boundary=48,y.storage=48):x.isMatrix4?(y.boundary=64,y.storage=64):x.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",x),y}function m(x){const y=x.target;y.removeEventListener("dispose",m);const _=o.indexOf(y.__bindingPointIndex);o.splice(_,1),s.deleteBuffer(n[y.id]),delete n[y.id],delete r[y.id]}function g(){for(const x in n)s.deleteBuffer(n[x]);o=[],n={},r={}}return{bind:l,update:c,dispose:g}}class Mp{constructor(e={}){const{canvas:t=Lv(),context:i=null,depth:n=!0,stencil:r=!1,alpha:o=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:u=!1,reverseDepthBuffer:d=!1}=e;this.isWebGLRenderer=!0;let f;if(i!==null){if(typeof WebGLRenderingContext<"u"&&i instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");f=i.getContextAttributes().alpha}else f=o;const p=new Uint32Array(4),v=new Int32Array(4);let m=null,g=null;const x=[],y=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=yr,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const _=this;let E=!1;this._outputColorSpace=on;let w=0,M=0,T=null,S=-1,b=null;const P=new It,D=new It;let G=null;const H=new Ge(0);let q=0,F=t.width,te=t.height,Y=1,j=null,$=null;const L=new It(0,0,F,te),Z=new It(0,0,F,te);let Q=!1;const k=new ta;let W=!1,J=!1;const X=new ct,ne=new ct,me=new I,be=new It,we={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let ve=!1;function Ie(){return T===null?Y:1}let U=i;function fe(B,oe){return t.getContext(B,oe)}try{const B={alpha:!0,depth:n,stencil:r,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:h,failIfMajorPerformanceCaveat:u};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${kh}`),t.addEventListener("webglcontextlost",et,!1),t.addEventListener("webglcontextrestored",Ce,!1),t.addEventListener("webglcontextcreationerror",ye,!1),U===null){const oe="webgl2";if(U=fe(oe,B),U===null)throw fe(oe)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(B){throw console.error("THREE.WebGLRenderer: "+B.message),B}let he,xe,re,Te,pe,ce,ke,O,A,ee,de,ue,ae,De,Pe,He,je,Se,Le,Ue,$e,Ne,dt,ie;function Re(){he=new NE(U),he.init(),Ne=new D_(U,he),xe=new CE(U,he,e,Ne),re=new mA(U,he),xe.reverseDepthBuffer&&d&&re.buffers.depth.setReversed(!0),Te=new kE(U),pe=new nA,ce=new gA(U,he,re,pe,xe,Ne,Te),ke=new PE(_),O=new UE(_),A=new WS(U),dt=new TE(U,A),ee=new OE(U,A,Te,dt),de=new zE(U,ee,A,Te),Le=new BE(U,xe,ce),He=new RE(pe),ue=new tA(_,ke,O,he,xe,dt,He),ae=new SA(_,pe),De=new rA,Pe=new hA(he),Se=new EE(_,ke,O,re,de,f,l),je=new fA(_,de,xe),ie=new MA(U,Te,xe,re),Ue=new AE(U,he,Te),$e=new FE(U,he,Te),Te.programs=ue.programs,_.capabilities=xe,_.extensions=he,_.properties=pe,_.renderLists=De,_.shadowMap=je,_.state=re,_.info=Te}Re();const Ee=new xA(_,U);this.xr=Ee,this.getContext=function(){return U},this.getContextAttributes=function(){return U.getContextAttributes()},this.forceContextLoss=function(){const B=he.get("WEBGL_lose_context");B&&B.loseContext()},this.forceContextRestore=function(){const B=he.get("WEBGL_lose_context");B&&B.restoreContext()},this.getPixelRatio=function(){return Y},this.setPixelRatio=function(B){B!==void 0&&(Y=B,this.setSize(F,te,!1))},this.getSize=function(B){return B.set(F,te)},this.setSize=function(B,oe,ge=!0){if(Ee.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}F=B,te=oe,t.width=Math.floor(B*Y),t.height=Math.floor(oe*Y),ge===!0&&(t.style.width=B+"px",t.style.height=oe+"px"),this.setViewport(0,0,B,oe)},this.getDrawingBufferSize=function(B){return B.set(F*Y,te*Y).floor()},this.setDrawingBufferSize=function(B,oe,ge){F=B,te=oe,Y=ge,t.width=Math.floor(B*ge),t.height=Math.floor(oe*ge),this.setViewport(0,0,B,oe)},this.getCurrentViewport=function(B){return B.copy(P)},this.getViewport=function(B){return B.copy(L)},this.setViewport=function(B,oe,ge,se){B.isVector4?L.set(B.x,B.y,B.z,B.w):L.set(B,oe,ge,se),re.viewport(P.copy(L).multiplyScalar(Y).round())},this.getScissor=function(B){return B.copy(Z)},this.setScissor=function(B,oe,ge,se){B.isVector4?Z.set(B.x,B.y,B.z,B.w):Z.set(B,oe,ge,se),re.scissor(D.copy(Z).multiplyScalar(Y).round())},this.getScissorTest=function(){return Q},this.setScissorTest=function(B){re.setScissorTest(Q=B)},this.setOpaqueSort=function(B){j=B},this.setTransparentSort=function(B){$=B},this.getClearColor=function(B){return B.copy(Se.getClearColor())},this.setClearColor=function(){Se.setClearColor(...arguments)},this.getClearAlpha=function(){return Se.getClearAlpha()},this.setClearAlpha=function(){Se.setClearAlpha(...arguments)},this.clear=function(B=!0,oe=!0,ge=!0){let se=0;if(B){let le=!1;if(T!==null){const Be=T.texture.format;le=Be===Xh||Be===Wh||Be===_l}if(le){const Be=T.texture.type,Je=Be===rr||Be===Vr||Be===Xo||Be===jo||Be===Vh||Be===Gh,ot=Se.getClearColor(),nt=Se.getClearAlpha(),bt=ot.r,_t=ot.g,pt=ot.b;Je?(p[0]=bt,p[1]=_t,p[2]=pt,p[3]=nt,U.clearBufferuiv(U.COLOR,0,p)):(v[0]=bt,v[1]=_t,v[2]=pt,v[3]=nt,U.clearBufferiv(U.COLOR,0,v))}else se|=U.COLOR_BUFFER_BIT}oe&&(se|=U.DEPTH_BUFFER_BIT),ge&&(se|=U.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),U.clear(se)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",et,!1),t.removeEventListener("webglcontextrestored",Ce,!1),t.removeEventListener("webglcontextcreationerror",ye,!1),Se.dispose(),De.dispose(),Pe.dispose(),pe.dispose(),ke.dispose(),O.dispose(),de.dispose(),dt.dispose(),ie.dispose(),ue.dispose(),Ee.dispose(),Ee.removeEventListener("sessionstart",an),Ee.removeEventListener("sessionend",Zn),Nn.stop()};function et(B){B.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),E=!0}function Ce(){console.log("THREE.WebGLRenderer: Context Restored."),E=!1;const B=Te.autoReset,oe=je.enabled,ge=je.autoUpdate,se=je.needsUpdate,le=je.type;Re(),Te.autoReset=B,je.enabled=oe,je.autoUpdate=ge,je.needsUpdate=se,je.type=le}function ye(B){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",B.statusMessage)}function Ze(B){const oe=B.target;oe.removeEventListener("dispose",Ze),tt(oe)}function tt(B){rt(B),pe.remove(B)}function rt(B){const oe=pe.get(B).programs;oe!==void 0&&(oe.forEach(function(ge){ue.releaseProgram(ge)}),B.isShaderMaterial&&ue.releaseShaderCache(B))}this.renderBufferDirect=function(B,oe,ge,se,le,Be){oe===null&&(oe=we);const Je=le.isMesh&&le.matrixWorld.determinant()<0,ot=sa(B,oe,ge,se,le);re.setMaterial(se,Je);let nt=ge.index,bt=1;if(se.wireframe===!0){if(nt=ee.getWireframeAttribute(ge),nt===void 0)return;bt=2}const _t=ge.drawRange,pt=ge.attributes.position;let Tt=_t.start*bt,kt=(_t.start+_t.count)*bt;Be!==null&&(Tt=Math.max(Tt,Be.start*bt),kt=Math.min(kt,(Be.start+Be.count)*bt)),nt!==null?(Tt=Math.max(Tt,0),kt=Math.min(kt,nt.count)):pt!=null&&(Tt=Math.max(Tt,0),kt=Math.min(kt,pt.count));const en=kt-Tt;if(en<0||en===1/0)return;dt.setup(le,se,ot,ge,nt);let Wt,zt=Ue;if(nt!==null&&(Wt=A.get(nt),zt=$e,zt.setIndex(Wt)),le.isMesh)se.wireframe===!0?(re.setLineWidth(se.wireframeLinewidth*Ie()),zt.setMode(U.LINES)):zt.setMode(U.TRIANGLES);else if(le.isLine){let mt=se.linewidth;mt===void 0&&(mt=1),re.setLineWidth(mt*Ie()),le.isLineSegments?zt.setMode(U.LINES):le.isLineLoop?zt.setMode(U.LINE_LOOP):zt.setMode(U.LINE_STRIP)}else le.isPoints?zt.setMode(U.POINTS):le.isSprite&&zt.setMode(U.TRIANGLES);if(le.isBatchedMesh)if(le._multiDrawInstances!==null)Go("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),zt.renderMultiDrawInstances(le._multiDrawStarts,le._multiDrawCounts,le._multiDrawCount,le._multiDrawInstances);else if(he.get("WEBGL_multi_draw"))zt.renderMultiDraw(le._multiDrawStarts,le._multiDrawCounts,le._multiDrawCount);else{const mt=le._multiDrawStarts,Zt=le._multiDrawCounts,Dt=le._multiDrawCount,Tn=nt?A.get(nt).bytesPerElement:1,Yt=pe.get(se).currentProgram.getUniforms();for(let xn=0;xn<Dt;xn++)Yt.setValue(U,"_gl_DrawID",xn),zt.render(mt[xn]/Tn,Zt[xn])}else if(le.isInstancedMesh)zt.renderInstances(Tt,en,le.count);else if(ge.isInstancedBufferGeometry){const mt=ge._maxInstanceCount!==void 0?ge._maxInstanceCount:1/0,Zt=Math.min(ge.instanceCount,mt);zt.renderInstances(Tt,en,Zt)}else zt.render(Tt,en)};function ht(B,oe,ge){B.transparent===!0&&B.side===_i&&B.forceSinglePass===!1?(B.side=ti,B.needsUpdate=!0,hi(B,oe,ge),B.side=br,B.needsUpdate=!0,hi(B,oe,ge),B.side=_i):hi(B,oe,ge)}this.compile=function(B,oe,ge=null){ge===null&&(ge=B),g=Pe.get(ge),g.init(oe),y.push(g),ge.traverseVisible(function(le){le.isLight&&le.layers.test(oe.layers)&&(g.pushLight(le),le.castShadow&&g.pushShadow(le))}),B!==ge&&B.traverseVisible(function(le){le.isLight&&le.layers.test(oe.layers)&&(g.pushLight(le),le.castShadow&&g.pushShadow(le))}),g.setupLights();const se=new Set;return B.traverse(function(le){if(!(le.isMesh||le.isPoints||le.isLine||le.isSprite))return;const Be=le.material;if(Be)if(Array.isArray(Be))for(let Je=0;Je<Be.length;Je++){const ot=Be[Je];ht(ot,ge,le),se.add(ot)}else ht(Be,ge,le),se.add(Be)}),g=y.pop(),se},this.compileAsync=function(B,oe,ge=null){const se=this.compile(B,oe,ge);return new Promise(le=>{function Be(){if(se.forEach(function(Je){pe.get(Je).currentProgram.isReady()&&se.delete(Je)}),se.size===0){le(B);return}setTimeout(Be,10)}he.get("KHR_parallel_shader_compile")!==null?Be():setTimeout(Be,10)})};let jt=null;function $t(B){jt&&jt(B)}function an(){Nn.stop()}function Zn(){Nn.start()}const Nn=new A_;Nn.setAnimationLoop($t),typeof self<"u"&&Nn.setContext(self),this.setAnimationLoop=function(B){jt=B,Ee.setAnimationLoop(B),B===null?Nn.stop():Nn.start()},Ee.addEventListener("sessionstart",an),Ee.addEventListener("sessionend",Zn),this.render=function(B,oe){if(oe!==void 0&&oe.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(E===!0)return;if(B.matrixWorldAutoUpdate===!0&&B.updateMatrixWorld(),oe.parent===null&&oe.matrixWorldAutoUpdate===!0&&oe.updateMatrixWorld(),Ee.enabled===!0&&Ee.isPresenting===!0&&(Ee.cameraAutoUpdate===!0&&Ee.updateCamera(oe),oe=Ee.getCamera()),B.isScene===!0&&B.onBeforeRender(_,B,oe,T),g=Pe.get(B,y.length),g.init(oe),y.push(g),ne.multiplyMatrices(oe.projectionMatrix,oe.matrixWorldInverse),k.setFromProjectionMatrix(ne),J=this.localClippingEnabled,W=He.init(this.clippingPlanes,J),m=De.get(B,x.length),m.init(),x.push(m),Ee.enabled===!0&&Ee.isPresenting===!0){const Be=_.xr.getDepthSensingMesh();Be!==null&&ni(Be,oe,-1/0,_.sortObjects)}ni(B,oe,0,_.sortObjects),m.finish(),_.sortObjects===!0&&m.sort(j,$),ve=Ee.enabled===!1||Ee.isPresenting===!1||Ee.hasDepthSensing()===!1,ve&&Se.addToRenderList(m,B),this.info.render.frame++,W===!0&&He.beginShadows();const ge=g.state.shadowsArray;je.render(ge,B,oe),W===!0&&He.endShadows(),this.info.autoReset===!0&&this.info.reset();const se=m.opaque,le=m.transmissive;if(g.setupLights(),oe.isArrayCamera){const Be=oe.cameras;if(le.length>0)for(let Je=0,ot=Be.length;Je<ot;Je++){const nt=Be[Je];Ai(se,le,B,nt)}ve&&Se.render(B);for(let Je=0,ot=Be.length;Je<ot;Je++){const nt=Be[Je];Ti(m,B,nt,nt.viewport)}}else le.length>0&&Ai(se,le,B,oe),ve&&Se.render(B),Ti(m,B,oe);T!==null&&M===0&&(ce.updateMultisampleRenderTarget(T),ce.updateRenderTargetMipmap(T)),B.isScene===!0&&B.onAfterRender(_,B,oe),dt.resetDefaultState(),S=-1,b=null,y.pop(),y.length>0?(g=y[y.length-1],W===!0&&He.setGlobalState(_.clippingPlanes,g.state.camera)):g=null,x.pop(),x.length>0?m=x[x.length-1]:m=null};function ni(B,oe,ge,se){if(B.visible===!1)return;if(B.layers.test(oe.layers)){if(B.isGroup)ge=B.renderOrder;else if(B.isLOD)B.autoUpdate===!0&&B.update(oe);else if(B.isLight)g.pushLight(B),B.castShadow&&g.pushShadow(B);else if(B.isSprite){if(!B.frustumCulled||k.intersectsSprite(B)){se&&be.setFromMatrixPosition(B.matrixWorld).applyMatrix4(ne);const Je=de.update(B),ot=B.material;ot.visible&&m.push(B,Je,ot,ge,be.z,null)}}else if((B.isMesh||B.isLine||B.isPoints)&&(!B.frustumCulled||k.intersectsObject(B))){const Je=de.update(B),ot=B.material;if(se&&(B.boundingSphere!==void 0?(B.boundingSphere===null&&B.computeBoundingSphere(),be.copy(B.boundingSphere.center)):(Je.boundingSphere===null&&Je.computeBoundingSphere(),be.copy(Je.boundingSphere.center)),be.applyMatrix4(B.matrixWorld).applyMatrix4(ne)),Array.isArray(ot)){const nt=Je.groups;for(let bt=0,_t=nt.length;bt<_t;bt++){const pt=nt[bt],Tt=ot[pt.materialIndex];Tt&&Tt.visible&&m.push(B,Je,Tt,ge,be.z,pt)}}else ot.visible&&m.push(B,Je,ot,ge,be.z,null)}}const Be=B.children;for(let Je=0,ot=Be.length;Je<ot;Je++)ni(Be[Je],oe,ge,se)}function Ti(B,oe,ge,se){const le=B.opaque,Be=B.transmissive,Je=B.transparent;g.setupLightsView(ge),W===!0&&He.setGlobalState(_.clippingPlanes,ge),se&&re.viewport(P.copy(se)),le.length>0&&Jn(le,oe,ge),Be.length>0&&Jn(Be,oe,ge),Je.length>0&&Jn(Je,oe,ge),re.buffers.depth.setTest(!0),re.buffers.depth.setMask(!0),re.buffers.color.setMask(!0),re.setPolygonOffset(!1)}function Ai(B,oe,ge,se){if((ge.isScene===!0?ge.overrideMaterial:null)!==null)return;g.state.transmissionRenderTarget[se.id]===void 0&&(g.state.transmissionRenderTarget[se.id]=new Xi(1,1,{generateMipmaps:!0,type:he.has("EXT_color_buffer_half_float")||he.has("EXT_color_buffer_float")?$o:rr,minFilter:nr,samples:4,stencilBuffer:r,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Nt.workingColorSpace}));const Be=g.state.transmissionRenderTarget[se.id],Je=se.viewport||P;Be.setSize(Je.z*_.transmissionResolutionScale,Je.w*_.transmissionResolutionScale);const ot=_.getRenderTarget(),nt=_.getActiveCubeFace(),bt=_.getActiveMipmapLevel();_.setRenderTarget(Be),_.getClearColor(H),q=_.getClearAlpha(),q<1&&_.setClearColor(16777215,.5),_.clear(),ve&&Se.render(ge);const _t=_.toneMapping;_.toneMapping=yr;const pt=se.viewport;if(se.viewport!==void 0&&(se.viewport=void 0),g.setupLightsView(se),W===!0&&He.setGlobalState(_.clippingPlanes,se),Jn(B,ge,se),ce.updateMultisampleRenderTarget(Be),ce.updateRenderTargetMipmap(Be),he.has("WEBGL_multisampled_render_to_texture")===!1){let Tt=!1;for(let kt=0,en=oe.length;kt<en;kt++){const Wt=oe[kt],zt=Wt.object,mt=Wt.geometry,Zt=Wt.material,Dt=Wt.group;if(Zt.side===_i&&zt.layers.test(se.layers)){const Tn=Zt.side;Zt.side=ti,Zt.needsUpdate=!0,yn(zt,ge,se,mt,Zt,Dt),Zt.side=Tn,Zt.needsUpdate=!0,Tt=!0}}Tt===!0&&(ce.updateMultisampleRenderTarget(Be),ce.updateRenderTargetMipmap(Be))}_.setRenderTarget(ot,nt,bt),_.setClearColor(H,q),pt!==void 0&&(se.viewport=pt),_.toneMapping=_t}function Jn(B,oe,ge){const se=oe.isScene===!0?oe.overrideMaterial:null;for(let le=0,Be=B.length;le<Be;le++){const Je=B[le],ot=Je.object,nt=Je.geometry,bt=Je.group;let _t=Je.material;_t.allowOverride===!0&&se!==null&&(_t=se),ot.layers.test(ge.layers)&&yn(ot,oe,ge,nt,_t,bt)}}function yn(B,oe,ge,se,le,Be){B.onBeforeRender(_,oe,ge,se,le,Be),B.modelViewMatrix.multiplyMatrices(ge.matrixWorldInverse,B.matrixWorld),B.normalMatrix.getNormalMatrix(B.modelViewMatrix),le.onBeforeRender(_,oe,ge,se,B,Be),le.transparent===!0&&le.side===_i&&le.forceSinglePass===!1?(le.side=ti,le.needsUpdate=!0,_.renderBufferDirect(ge,oe,se,le,B,Be),le.side=br,le.needsUpdate=!0,_.renderBufferDirect(ge,oe,se,le,B,Be),le.side=_i):_.renderBufferDirect(ge,oe,se,le,B,Be),B.onAfterRender(_,oe,ge,se,le,Be)}function hi(B,oe,ge){oe.isScene!==!0&&(oe=we);const se=pe.get(B),le=g.state.lights,Be=g.state.shadowsArray,Je=le.state.version,ot=ue.getParameters(B,le.state,Be,oe,ge),nt=ue.getProgramCacheKey(ot);let bt=se.programs;se.environment=B.isMeshStandardMaterial?oe.environment:null,se.fog=oe.fog,se.envMap=(B.isMeshStandardMaterial?O:ke).get(B.envMap||se.environment),se.envMapRotation=se.environment!==null&&B.envMap===null?oe.environmentRotation:B.envMapRotation,bt===void 0&&(B.addEventListener("dispose",Ze),bt=new Map,se.programs=bt);let _t=bt.get(nt);if(_t!==void 0){if(se.currentProgram===_t&&se.lightsStateVersion===Je)return Gr(B,ot),_t}else ot.uniforms=ue.getUniforms(B),B.onBeforeCompile(ot,_),_t=ue.acquireProgram(ot,nt),bt.set(nt,_t),se.uniforms=ot.uniforms;const pt=se.uniforms;return(!B.isShaderMaterial&&!B.isRawShaderMaterial||B.clipping===!0)&&(pt.clippingPlanes=He.uniform),Gr(B,ot),se.needsLights=Hr(B),se.lightsStateVersion=Je,se.needsLights&&(pt.ambientLightColor.value=le.state.ambient,pt.lightProbe.value=le.state.probe,pt.directionalLights.value=le.state.directional,pt.directionalLightShadows.value=le.state.directionalShadow,pt.spotLights.value=le.state.spot,pt.spotLightShadows.value=le.state.spotShadow,pt.rectAreaLights.value=le.state.rectArea,pt.ltc_1.value=le.state.rectAreaLTC1,pt.ltc_2.value=le.state.rectAreaLTC2,pt.pointLights.value=le.state.point,pt.pointLightShadows.value=le.state.pointShadow,pt.hemisphereLights.value=le.state.hemi,pt.directionalShadowMap.value=le.state.directionalShadowMap,pt.directionalShadowMatrix.value=le.state.directionalShadowMatrix,pt.spotShadowMap.value=le.state.spotShadowMap,pt.spotLightMatrix.value=le.state.spotLightMatrix,pt.spotLightMap.value=le.state.spotLightMap,pt.pointShadowMap.value=le.state.pointShadowMap,pt.pointShadowMatrix.value=le.state.pointShadowMatrix),se.currentProgram=_t,se.uniformsList=null,_t}function us(B){if(B.uniformsList===null){const oe=B.currentProgram.getUniforms();B.uniformsList=Bc.seqWithValue(oe.seq,B.uniforms)}return B.uniformsList}function Gr(B,oe){const ge=pe.get(B);ge.outputColorSpace=oe.outputColorSpace,ge.batching=oe.batching,ge.batchingColor=oe.batchingColor,ge.instancing=oe.instancing,ge.instancingColor=oe.instancingColor,ge.instancingMorph=oe.instancingMorph,ge.skinning=oe.skinning,ge.morphTargets=oe.morphTargets,ge.morphNormals=oe.morphNormals,ge.morphColors=oe.morphColors,ge.morphTargetsCount=oe.morphTargetsCount,ge.numClippingPlanes=oe.numClippingPlanes,ge.numIntersection=oe.numClipIntersection,ge.vertexAlphas=oe.vertexAlphas,ge.vertexTangents=oe.vertexTangents,ge.toneMapping=oe.toneMapping}function sa(B,oe,ge,se,le){oe.isScene!==!0&&(oe=we),ce.resetTextureUnits();const Be=oe.fog,Je=se.isMeshStandardMaterial?oe.environment:null,ot=T===null?_.outputColorSpace:T.isXRRenderTarget===!0?T.texture.colorSpace:eo,nt=(se.isMeshStandardMaterial?O:ke).get(se.envMap||Je),bt=se.vertexColors===!0&&!!ge.attributes.color&&ge.attributes.color.itemSize===4,_t=!!ge.attributes.tangent&&(!!se.normalMap||se.anisotropy>0),pt=!!ge.morphAttributes.position,Tt=!!ge.morphAttributes.normal,kt=!!ge.morphAttributes.color;let en=yr;se.toneMapped&&(T===null||T.isXRRenderTarget===!0)&&(en=_.toneMapping);const Wt=ge.morphAttributes.position||ge.morphAttributes.normal||ge.morphAttributes.color,zt=Wt!==void 0?Wt.length:0,mt=pe.get(se),Zt=g.state.lights;if(W===!0&&(J===!0||B!==b)){const hn=B===b&&se.id===S;He.setState(se,B,hn)}let Dt=!1;se.version===mt.__version?(mt.needsLights&&mt.lightsStateVersion!==Zt.state.version||mt.outputColorSpace!==ot||le.isBatchedMesh&&mt.batching===!1||!le.isBatchedMesh&&mt.batching===!0||le.isBatchedMesh&&mt.batchingColor===!0&&le.colorTexture===null||le.isBatchedMesh&&mt.batchingColor===!1&&le.colorTexture!==null||le.isInstancedMesh&&mt.instancing===!1||!le.isInstancedMesh&&mt.instancing===!0||le.isSkinnedMesh&&mt.skinning===!1||!le.isSkinnedMesh&&mt.skinning===!0||le.isInstancedMesh&&mt.instancingColor===!0&&le.instanceColor===null||le.isInstancedMesh&&mt.instancingColor===!1&&le.instanceColor!==null||le.isInstancedMesh&&mt.instancingMorph===!0&&le.morphTexture===null||le.isInstancedMesh&&mt.instancingMorph===!1&&le.morphTexture!==null||mt.envMap!==nt||se.fog===!0&&mt.fog!==Be||mt.numClippingPlanes!==void 0&&(mt.numClippingPlanes!==He.numPlanes||mt.numIntersection!==He.numIntersection)||mt.vertexAlphas!==bt||mt.vertexTangents!==_t||mt.morphTargets!==pt||mt.morphNormals!==Tt||mt.morphColors!==kt||mt.toneMapping!==en||mt.morphTargetsCount!==zt)&&(Dt=!0):(Dt=!0,mt.__version=se.version);let Tn=mt.currentProgram;Dt===!0&&(Tn=hi(se,oe,le));let Yt=!1,xn=!1,On=!1;const Jt=Tn.getUniforms(),An=mt.uniforms;if(re.useProgram(Tn.program)&&(Yt=!0,xn=!0,On=!0),se.id!==S&&(S=se.id,xn=!0),Yt||b!==B){re.buffers.depth.getReversed()?(X.copy(B.projectionMatrix),vb(X),_b(X),Jt.setValue(U,"projectionMatrix",X)):Jt.setValue(U,"projectionMatrix",B.projectionMatrix),Jt.setValue(U,"viewMatrix",B.matrixWorldInverse);const ln=Jt.map.cameraPosition;ln!==void 0&&ln.setValue(U,me.setFromMatrixPosition(B.matrixWorld)),xe.logarithmicDepthBuffer&&Jt.setValue(U,"logDepthBufFC",2/(Math.log(B.far+1)/Math.LN2)),(se.isMeshPhongMaterial||se.isMeshToonMaterial||se.isMeshLambertMaterial||se.isMeshBasicMaterial||se.isMeshStandardMaterial||se.isShaderMaterial)&&Jt.setValue(U,"isOrthographic",B.isOrthographicCamera===!0),b!==B&&(b=B,xn=!0,On=!0)}if(le.isSkinnedMesh){Jt.setOptional(U,le,"bindMatrix"),Jt.setOptional(U,le,"bindMatrixInverse");const hn=le.skeleton;hn&&(hn.boneTexture===null&&hn.computeBoneTexture(),Jt.setValue(U,"boneTexture",hn.boneTexture,ce))}le.isBatchedMesh&&(Jt.setOptional(U,le,"batchingTexture"),Jt.setValue(U,"batchingTexture",le._matricesTexture,ce),Jt.setOptional(U,le,"batchingIdTexture"),Jt.setValue(U,"batchingIdTexture",le._indirectTexture,ce),Jt.setOptional(U,le,"batchingColorTexture"),le._colorsTexture!==null&&Jt.setValue(U,"batchingColorTexture",le._colorsTexture,ce));const pn=ge.morphAttributes;if((pn.position!==void 0||pn.normal!==void 0||pn.color!==void 0)&&Le.update(le,ge,Tn),(xn||mt.receiveShadow!==le.receiveShadow)&&(mt.receiveShadow=le.receiveShadow,Jt.setValue(U,"receiveShadow",le.receiveShadow)),se.isMeshGouraudMaterial&&se.envMap!==null&&(An.envMap.value=nt,An.flipEnvMap.value=nt.isCubeTexture&&nt.isRenderTargetTexture===!1?-1:1),se.isMeshStandardMaterial&&se.envMap===null&&oe.environment!==null&&(An.envMapIntensity.value=oe.environmentIntensity),xn&&(Jt.setValue(U,"toneMappingExposure",_.toneMappingExposure),mt.needsLights&&fo(An,On),Be&&se.fog===!0&&ae.refreshFogUniforms(An,Be),ae.refreshMaterialUniforms(An,se,Y,te,g.state.transmissionRenderTarget[B.id]),Bc.upload(U,us(mt),An,ce)),se.isShaderMaterial&&se.uniformsNeedUpdate===!0&&(Bc.upload(U,us(mt),An,ce),se.uniformsNeedUpdate=!1),se.isSpriteMaterial&&Jt.setValue(U,"center",le.center),Jt.setValue(U,"modelViewMatrix",le.modelViewMatrix),Jt.setValue(U,"normalMatrix",le.normalMatrix),Jt.setValue(U,"modelMatrix",le.matrixWorld),se.isShaderMaterial||se.isRawShaderMaterial){const hn=se.uniformsGroups;for(let ln=0,qi=hn.length;ln<qi;ln++){const Ci=hn[ln];ie.update(Ci,Tn),ie.bind(Ci,Tn)}}return Tn}function fo(B,oe){B.ambientLightColor.needsUpdate=oe,B.lightProbe.needsUpdate=oe,B.directionalLights.needsUpdate=oe,B.directionalLightShadows.needsUpdate=oe,B.pointLights.needsUpdate=oe,B.pointLightShadows.needsUpdate=oe,B.spotLights.needsUpdate=oe,B.spotLightShadows.needsUpdate=oe,B.rectAreaLights.needsUpdate=oe,B.hemisphereLights.needsUpdate=oe}function Hr(B){return B.isMeshLambertMaterial||B.isMeshToonMaterial||B.isMeshPhongMaterial||B.isMeshStandardMaterial||B.isShadowMaterial||B.isShaderMaterial&&B.lights===!0}this.getActiveCubeFace=function(){return w},this.getActiveMipmapLevel=function(){return M},this.getRenderTarget=function(){return T},this.setRenderTargetTextures=function(B,oe,ge){const se=pe.get(B);se.__autoAllocateDepthBuffer=B.resolveDepthBuffer===!1,se.__autoAllocateDepthBuffer===!1&&(se.__useRenderToTexture=!1),pe.get(B.texture).__webglTexture=oe,pe.get(B.depthTexture).__webglTexture=se.__autoAllocateDepthBuffer?void 0:ge,se.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(B,oe){const ge=pe.get(B);ge.__webglFramebuffer=oe,ge.__useDefaultFramebuffer=oe===void 0};const ds=U.createFramebuffer();this.setRenderTarget=function(B,oe=0,ge=0){T=B,w=oe,M=ge;let se=!0,le=null,Be=!1,Je=!1;if(B){const nt=pe.get(B);if(nt.__useDefaultFramebuffer!==void 0)re.bindFramebuffer(U.FRAMEBUFFER,null),se=!1;else if(nt.__webglFramebuffer===void 0)ce.setupRenderTarget(B);else if(nt.__hasExternalTextures)ce.rebindTextures(B,pe.get(B.texture).__webglTexture,pe.get(B.depthTexture).__webglTexture);else if(B.depthBuffer){const pt=B.depthTexture;if(nt.__boundDepthTexture!==pt){if(pt!==null&&pe.has(pt)&&(B.width!==pt.image.width||B.height!==pt.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");ce.setupDepthRenderbuffer(B)}}const bt=B.texture;(bt.isData3DTexture||bt.isDataArrayTexture||bt.isCompressedArrayTexture)&&(Je=!0);const _t=pe.get(B).__webglFramebuffer;B.isWebGLCubeRenderTarget?(Array.isArray(_t[oe])?le=_t[oe][ge]:le=_t[oe],Be=!0):B.samples>0&&ce.useMultisampledRTT(B)===!1?le=pe.get(B).__webglMultisampledFramebuffer:Array.isArray(_t)?le=_t[ge]:le=_t,P.copy(B.viewport),D.copy(B.scissor),G=B.scissorTest}else P.copy(L).multiplyScalar(Y).floor(),D.copy(Z).multiplyScalar(Y).floor(),G=Q;if(ge!==0&&(le=ds),re.bindFramebuffer(U.FRAMEBUFFER,le)&&se&&re.drawBuffers(B,le),re.viewport(P),re.scissor(D),re.setScissorTest(G),Be){const nt=pe.get(B.texture);U.framebufferTexture2D(U.FRAMEBUFFER,U.COLOR_ATTACHMENT0,U.TEXTURE_CUBE_MAP_POSITIVE_X+oe,nt.__webglTexture,ge)}else if(Je){const nt=pe.get(B.texture),bt=oe;U.framebufferTextureLayer(U.FRAMEBUFFER,U.COLOR_ATTACHMENT0,nt.__webglTexture,ge,bt)}else if(B!==null&&ge!==0){const nt=pe.get(B.texture);U.framebufferTexture2D(U.FRAMEBUFFER,U.COLOR_ATTACHMENT0,U.TEXTURE_2D,nt.__webglTexture,ge)}S=-1},this.readRenderTargetPixels=function(B,oe,ge,se,le,Be,Je,ot=0){if(!(B&&B.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let nt=pe.get(B).__webglFramebuffer;if(B.isWebGLCubeRenderTarget&&Je!==void 0&&(nt=nt[Je]),nt){re.bindFramebuffer(U.FRAMEBUFFER,nt);try{const bt=B.textures[ot],_t=bt.format,pt=bt.type;if(!xe.textureFormatReadable(_t)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!xe.textureTypeReadable(pt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}oe>=0&&oe<=B.width-se&&ge>=0&&ge<=B.height-le&&(B.textures.length>1&&U.readBuffer(U.COLOR_ATTACHMENT0+ot),U.readPixels(oe,ge,se,le,Ne.convert(_t),Ne.convert(pt),Be))}finally{const bt=T!==null?pe.get(T).__webglFramebuffer:null;re.bindFramebuffer(U.FRAMEBUFFER,bt)}}},this.readRenderTargetPixelsAsync=async function(B,oe,ge,se,le,Be,Je,ot=0){if(!(B&&B.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let nt=pe.get(B).__webglFramebuffer;if(B.isWebGLCubeRenderTarget&&Je!==void 0&&(nt=nt[Je]),nt)if(oe>=0&&oe<=B.width-se&&ge>=0&&ge<=B.height-le){re.bindFramebuffer(U.FRAMEBUFFER,nt);const bt=B.textures[ot],_t=bt.format,pt=bt.type;if(!xe.textureFormatReadable(_t))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!xe.textureTypeReadable(pt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const Tt=U.createBuffer();U.bindBuffer(U.PIXEL_PACK_BUFFER,Tt),U.bufferData(U.PIXEL_PACK_BUFFER,Be.byteLength,U.STREAM_READ),B.textures.length>1&&U.readBuffer(U.COLOR_ATTACHMENT0+ot),U.readPixels(oe,ge,se,le,Ne.convert(_t),Ne.convert(pt),0);const kt=T!==null?pe.get(T).__webglFramebuffer:null;re.bindFramebuffer(U.FRAMEBUFFER,kt);const en=U.fenceSync(U.SYNC_GPU_COMMANDS_COMPLETE,0);return U.flush(),await gb(U,en,4),U.bindBuffer(U.PIXEL_PACK_BUFFER,Tt),U.getBufferSubData(U.PIXEL_PACK_BUFFER,0,Be),U.deleteBuffer(Tt),U.deleteSync(en),Be}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(B,oe=null,ge=0){const se=Math.pow(2,-ge),le=Math.floor(B.image.width*se),Be=Math.floor(B.image.height*se),Je=oe!==null?oe.x:0,ot=oe!==null?oe.y:0;ce.setTexture2D(B,0),U.copyTexSubImage2D(U.TEXTURE_2D,ge,0,0,Je,ot,le,Be),re.unbindTexture()};const oa=U.createFramebuffer(),po=U.createFramebuffer();this.copyTextureToTexture=function(B,oe,ge=null,se=null,le=0,Be=null){Be===null&&(le!==0?(Go("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),Be=le,le=0):Be=0);let Je,ot,nt,bt,_t,pt,Tt,kt,en;const Wt=B.isCompressedTexture?B.mipmaps[Be]:B.image;if(ge!==null)Je=ge.max.x-ge.min.x,ot=ge.max.y-ge.min.y,nt=ge.isBox3?ge.max.z-ge.min.z:1,bt=ge.min.x,_t=ge.min.y,pt=ge.isBox3?ge.min.z:0;else{const pn=Math.pow(2,-le);Je=Math.floor(Wt.width*pn),ot=Math.floor(Wt.height*pn),B.isDataArrayTexture?nt=Wt.depth:B.isData3DTexture?nt=Math.floor(Wt.depth*pn):nt=1,bt=0,_t=0,pt=0}se!==null?(Tt=se.x,kt=se.y,en=se.z):(Tt=0,kt=0,en=0);const zt=Ne.convert(oe.format),mt=Ne.convert(oe.type);let Zt;oe.isData3DTexture?(ce.setTexture3D(oe,0),Zt=U.TEXTURE_3D):oe.isDataArrayTexture||oe.isCompressedArrayTexture?(ce.setTexture2DArray(oe,0),Zt=U.TEXTURE_2D_ARRAY):(ce.setTexture2D(oe,0),Zt=U.TEXTURE_2D),U.pixelStorei(U.UNPACK_FLIP_Y_WEBGL,oe.flipY),U.pixelStorei(U.UNPACK_PREMULTIPLY_ALPHA_WEBGL,oe.premultiplyAlpha),U.pixelStorei(U.UNPACK_ALIGNMENT,oe.unpackAlignment);const Dt=U.getParameter(U.UNPACK_ROW_LENGTH),Tn=U.getParameter(U.UNPACK_IMAGE_HEIGHT),Yt=U.getParameter(U.UNPACK_SKIP_PIXELS),xn=U.getParameter(U.UNPACK_SKIP_ROWS),On=U.getParameter(U.UNPACK_SKIP_IMAGES);U.pixelStorei(U.UNPACK_ROW_LENGTH,Wt.width),U.pixelStorei(U.UNPACK_IMAGE_HEIGHT,Wt.height),U.pixelStorei(U.UNPACK_SKIP_PIXELS,bt),U.pixelStorei(U.UNPACK_SKIP_ROWS,_t),U.pixelStorei(U.UNPACK_SKIP_IMAGES,pt);const Jt=B.isDataArrayTexture||B.isData3DTexture,An=oe.isDataArrayTexture||oe.isData3DTexture;if(B.isDepthTexture){const pn=pe.get(B),hn=pe.get(oe),ln=pe.get(pn.__renderTarget),qi=pe.get(hn.__renderTarget);re.bindFramebuffer(U.READ_FRAMEBUFFER,ln.__webglFramebuffer),re.bindFramebuffer(U.DRAW_FRAMEBUFFER,qi.__webglFramebuffer);for(let Ci=0;Ci<nt;Ci++)Jt&&(U.framebufferTextureLayer(U.READ_FRAMEBUFFER,U.COLOR_ATTACHMENT0,pe.get(B).__webglTexture,le,pt+Ci),U.framebufferTextureLayer(U.DRAW_FRAMEBUFFER,U.COLOR_ATTACHMENT0,pe.get(oe).__webglTexture,Be,en+Ci)),U.blitFramebuffer(bt,_t,Je,ot,Tt,kt,Je,ot,U.DEPTH_BUFFER_BIT,U.NEAREST);re.bindFramebuffer(U.READ_FRAMEBUFFER,null),re.bindFramebuffer(U.DRAW_FRAMEBUFFER,null)}else if(le!==0||B.isRenderTargetTexture||pe.has(B)){const pn=pe.get(B),hn=pe.get(oe);re.bindFramebuffer(U.READ_FRAMEBUFFER,oa),re.bindFramebuffer(U.DRAW_FRAMEBUFFER,po);for(let ln=0;ln<nt;ln++)Jt?U.framebufferTextureLayer(U.READ_FRAMEBUFFER,U.COLOR_ATTACHMENT0,pn.__webglTexture,le,pt+ln):U.framebufferTexture2D(U.READ_FRAMEBUFFER,U.COLOR_ATTACHMENT0,U.TEXTURE_2D,pn.__webglTexture,le),An?U.framebufferTextureLayer(U.DRAW_FRAMEBUFFER,U.COLOR_ATTACHMENT0,hn.__webglTexture,Be,en+ln):U.framebufferTexture2D(U.DRAW_FRAMEBUFFER,U.COLOR_ATTACHMENT0,U.TEXTURE_2D,hn.__webglTexture,Be),le!==0?U.blitFramebuffer(bt,_t,Je,ot,Tt,kt,Je,ot,U.COLOR_BUFFER_BIT,U.NEAREST):An?U.copyTexSubImage3D(Zt,Be,Tt,kt,en+ln,bt,_t,Je,ot):U.copyTexSubImage2D(Zt,Be,Tt,kt,bt,_t,Je,ot);re.bindFramebuffer(U.READ_FRAMEBUFFER,null),re.bindFramebuffer(U.DRAW_FRAMEBUFFER,null)}else An?B.isDataTexture||B.isData3DTexture?U.texSubImage3D(Zt,Be,Tt,kt,en,Je,ot,nt,zt,mt,Wt.data):oe.isCompressedArrayTexture?U.compressedTexSubImage3D(Zt,Be,Tt,kt,en,Je,ot,nt,zt,Wt.data):U.texSubImage3D(Zt,Be,Tt,kt,en,Je,ot,nt,zt,mt,Wt):B.isDataTexture?U.texSubImage2D(U.TEXTURE_2D,Be,Tt,kt,Je,ot,zt,mt,Wt.data):B.isCompressedTexture?U.compressedTexSubImage2D(U.TEXTURE_2D,Be,Tt,kt,Wt.width,Wt.height,zt,Wt.data):U.texSubImage2D(U.TEXTURE_2D,Be,Tt,kt,Je,ot,zt,mt,Wt);U.pixelStorei(U.UNPACK_ROW_LENGTH,Dt),U.pixelStorei(U.UNPACK_IMAGE_HEIGHT,Tn),U.pixelStorei(U.UNPACK_SKIP_PIXELS,Yt),U.pixelStorei(U.UNPACK_SKIP_ROWS,xn),U.pixelStorei(U.UNPACK_SKIP_IMAGES,On),Be===0&&oe.generateMipmaps&&U.generateMipmap(Zt),re.unbindTexture()},this.copyTextureToTexture3D=function(B,oe,ge=null,se=null,le=0){return Go('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(B,oe,ge,se,le)},this.initRenderTarget=function(B){pe.get(B).__webglFramebuffer===void 0&&ce.setupRenderTarget(B)},this.initTexture=function(B){B.isCubeTexture?ce.setTextureCube(B,0):B.isData3DTexture?ce.setTexture3D(B,0):B.isDataArrayTexture||B.isCompressedArrayTexture?ce.setTexture2DArray(B,0):ce.setTexture2D(B,0),re.unbindTexture()},this.resetState=function(){w=0,M=0,T=null,re.reset(),dt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Hi}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=Nt._getDrawingBufferColorSpace(e),t.unpackColorSpace=Nt._getUnpackColorSpace()}}const wA=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:gv,AddEquation:ns,AddOperation:dv,AdditiveAnimationBlendMode:Hf,AdditiveBlending:ef,AgXToneMapping:th,AlphaFormat:Bf,AlwaysCompare:Iv,AlwaysDepth:Zc,AlwaysStencilFunc:sf,AmbientLight:mp,AnimationAction:w_,AnimationClip:ro,AnimationLoader:W1,AnimationMixer:vS,AnimationObjectGroup:mS,AnimationUtils:z1,ArcCurve:Yv,ArrayCamera:b_,ArrowHelper:OS,AttachedBindMode:rf,Audio:S_,AudioAnalyser:sS,AudioContext:gp,AudioListener:nS,AudioLoader:$1,AxesHelper:FS,BackSide:ti,BasicDepthPacking:Mv,BasicShadowMap:gx,BatchedMesh:Gv,Bone:eu,BooleanKeyframeTrack:co,Box2:MS,Box3:_n,Box3Helper:US,BoxGeometry:gn,BoxHelper:LS,BufferAttribute:Rt,BufferGeometry:xt,BufferGeometryLoader:x_,ByteType:Of,Cache:_r,Camera:Jh,CameraHelper:DS,CanvasTexture:Xv,CapsuleGeometry:iu,CatmullRomCurve3:qv,CineonToneMapping:mv,CircleGeometry:ru,ClampToEdgeWrapping:bi,Clock:vp,Color:Ge,ColorKeyframeTrack:cp,ColorManagement:Nt,CompressedArrayTexture:l1,CompressedCubeTexture:c1,CompressedTexture:nu,CompressedTextureLoader:X1,ConeGeometry:wl,ConstantAlphaFactor:cv,ConstantColorFactor:av,Controls:yu,CubeCamera:Fv,CubeReflectionMapping:zr,CubeRefractionMapping:ss,CubeTexture:xl,CubeTextureLoader:j1,CubeUVReflectionMapping:Qo,CubicBezierCurve:$f,CubicBezierCurve3:Zv,CubicInterpolant:u_,CullFaceBack:$d,CullFaceFront:j0,CullFaceFrontBack:mx,CullFaceNone:X0,Curve:or,CurvePath:Kv,CustomBlending:Y0,CustomToneMapping:vv,CylinderGeometry:Pn,Cylindrical:SS,Data3DTexture:qh,DataArrayTexture:Yh,DataTexture:xr,DataTextureLoader:p_,DataUtils:Lb,DecrementStencilOp:Px,DecrementWrapStencilOp:Dx,DefaultLoadingManager:uo,DepthFormat:Yo,DepthStencilFormat:qo,DepthTexture:Kf,DetachedBindMode:yv,DirectionalLight:pp,DirectionalLightHelper:IS,DiscreteInterpolant:d_,DodecahedronGeometry:su,DoubleSide:_i,DstAlphaFactor:nv,DstColorFactor:rv,DynamicCopyUsage:Yx,DynamicDrawUsage:Vx,DynamicReadUsage:Wx,EdgesGeometry:jv,EllipseCurve:ou,EqualCompare:Av,EqualDepth:Kc,EqualStencilFunc:Ox,EquirectangularReflectionMapping:qa,EquirectangularRefractionMapping:Za,Euler:Mi,EventDispatcher:Sr,ExtrudeGeometry:au,FileLoader:ji,Float16BufferAttribute:zb,Float32BufferAttribute:qe,FloatType:Si,Fog:Qh,FogExp2:Kh,FramebufferTexture:a1,FrontSide:br,Frustum:ta,FrustumArray:tu,GLBufferAttribute:bS,GLSL1:Zx,GLSL3:of,GreaterCompare:Cv,GreaterDepth:$c,GreaterEqualCompare:Pv,GreaterEqualDepth:Qc,GreaterEqualStencilFunc:zx,GreaterStencilFunc:kx,GridHelper:RS,Group:Di,HalfFloatType:$o,HemisphereLight:g_,HemisphereLightHelper:CS,IcosahedronGeometry:lu,ImageBitmapLoader:Q1,ImageLoader:ll,ImageUtils:Uv,IncrementStencilOp:Rx,IncrementWrapStencilOp:Ix,InstancedBufferAttribute:to,InstancedBufferGeometry:vu,InstancedInterleavedBuffer:Uh,InstancedMesh:Vv,Int16BufferAttribute:kb,Int32BufferAttribute:Bb,Int8BufferAttribute:Nb,IntType:zh,InterleavedBuffer:$h,InterleavedBufferAttribute:Li,Interpolant:Tl,InterpolateDiscrete:Ka,InterpolateLinear:Ch,InterpolateSmooth:Fc,InterpolationSamplingMode:Qx,InterpolationSamplingType:Kx,InvertStencilOp:Lx,KeepStencilOp:Ns,KeyframeTrack:Yi,LOD:zv,LatheGeometry:cu,Layers:Zh,LessCompare:Tv,LessDepth:Jc,LessEqualCompare:Xf,LessEqualDepth:$s,LessEqualStencilFunc:Fx,LessStencilFunc:Nx,Light:cs,LightProbe:y_,Line:jn,Line3:E_,LineBasicMaterial:En,LineCurve:ep,LineCurve3:Jv,LineDashedMaterial:l_,LineLoop:Hv,LineSegments:Oi,LinearFilter:Mn,LinearInterpolant:lp,LinearMipMapLinearFilter:xx,LinearMipMapNearestFilter:yx,LinearMipmapLinearFilter:nr,LinearMipmapNearestFilter:Ua,LinearSRGBColorSpace:eo,LinearToneMapping:fv,LinearTransfer:$a,Loader:zn,LoaderUtils:Lh,LoadingManager:hp,LoopOnce:xv,LoopPingPong:Sv,LoopRepeat:bv,MOUSE:Ui,Material:kn,MaterialLoader:gu,MathUtils:gr,Matrix2:bp,Matrix3:At,Matrix4:ct,MaxEquation:K0,Mesh:ze,MeshBasicMaterial:Bn,MeshDepthMaterial:El,MeshDistanceMaterial:mu,MeshLambertMaterial:op,MeshMatcapMaterial:a_,MeshNormalMaterial:o_,MeshPhongMaterial:ol,MeshPhysicalMaterial:r_,MeshStandardMaterial:sp,MeshToonMaterial:s_,MinEquation:J0,MirroredRepeatWrapping:Ja,MixOperation:uv,MultiplyBlending:nf,MultiplyOperation:vl,NearestFilter:Yn,NearestMipMapLinearFilter:_x,NearestMipMapNearestFilter:vx,NearestMipmapLinearFilter:ko,NearestMipmapNearestFilter:Nf,NeutralToneMapping:_v,NeverCompare:Ev,NeverDepth:qc,NeverStencilFunc:Ux,NoBlending:Or,NoColorSpace:Pr,NoToneMapping:yr,NormalAnimationBlendMode:jh,NormalBlending:Ys,NotEqualCompare:Rv,NotEqualDepth:eh,NotEqualStencilFunc:Bx,NumberKeyframeTrack:al,Object3D:Lt,ObjectLoader:J1,ObjectSpaceNormalMap:wv,OctahedronGeometry:Nr,OneFactor:$0,OneMinusConstantAlphaFactor:hv,OneMinusConstantColorFactor:lv,OneMinusDstAlphaFactor:iv,OneMinusDstColorFactor:sv,OneMinusSrcAlphaFactor:Yc,OneMinusSrcColorFactor:tv,OrthographicCamera:hs,PCFShadowMap:Uf,PCFSoftShadowMap:La,PMREMGenerator:ff,Path:Dh,PerspectiveCamera:Sn,Plane:mr,PlaneGeometry:ar,PlaneHelper:NS,PointLight:fp,PointLightHelper:TS,Points:Va,PointsMaterial:Xs,PolarGridHelper:PS,PolyhedronGeometry:ls,PositionalAudio:rS,PropertyBinding:Vt,PropertyMixer:M_,QuadraticBezierCurve:tp,QuadraticBezierCurve3:np,Quaternion:Ht,QuaternionKeyframeTrack:na,QuaternionLinearInterpolant:f_,RED_GREEN_RGTC2_Format:Th,RED_RGTC1_Format:Gf,REVISION:kh,RGBADepthPacking:Wf,RGBAFormat:ci,RGBAIntegerFormat:Xh,RGBA_ASTC_10x10_Format:xh,RGBA_ASTC_10x5_Format:vh,RGBA_ASTC_10x6_Format:_h,RGBA_ASTC_10x8_Format:yh,RGBA_ASTC_12x10_Format:bh,RGBA_ASTC_12x12_Format:Sh,RGBA_ASTC_4x4_Format:ch,RGBA_ASTC_5x4_Format:hh,RGBA_ASTC_5x5_Format:uh,RGBA_ASTC_6x5_Format:dh,RGBA_ASTC_6x6_Format:fh,RGBA_ASTC_8x5_Format:ph,RGBA_ASTC_8x6_Format:mh,RGBA_ASTC_8x8_Format:gh,RGBA_BPTC_Format:Ba,RGBA_ETC2_EAC_Format:lh,RGBA_PVRTC_2BPPV1_Format:sh,RGBA_PVRTC_4BPPV1_Format:rh,RGBA_S3TC_DXT1_Format:Oa,RGBA_S3TC_DXT3_Format:Fa,RGBA_S3TC_DXT5_Format:ka,RGBDepthPacking:Ex,RGBFormat:zf,RGBIntegerFormat:bx,RGB_BPTC_SIGNED_Format:Mh,RGB_BPTC_UNSIGNED_Format:wh,RGB_ETC1_Format:oh,RGB_ETC2_Format:ah,RGB_PVRTC_2BPPV1_Format:ih,RGB_PVRTC_4BPPV1_Format:nh,RGB_S3TC_DXT1_Format:Na,RGDepthPacking:Tx,RGFormat:Vf,RGIntegerFormat:Wh,RawShaderMaterial:i_,Ray:as,Raycaster:_u,RectAreaLight:v_,RedFormat:Hh,RedIntegerFormat:_l,ReinhardToneMapping:pv,RenderTarget:Yf,RenderTarget3D:_S,RepeatWrapping:tr,ReplaceStencilOp:Cx,ReverseSubtractEquation:Z0,RingGeometry:hu,SIGNED_RED_GREEN_RGTC2_Format:Ah,SIGNED_RED_RGTC1_Format:Eh,SRGBColorSpace:on,SRGBTransfer:Kt,Scene:bl,ShaderChunk:Mt,ShaderLib:oi,ShaderMaterial:wi,ShadowMaterial:n_,Shape:Zs,ShapeGeometry:uu,ShapePath:kS,ShapeUtils:ir,ShortType:Ff,Skeleton:Ml,SkeletonHelper:ES,SkinnedMesh:Jf,Source:rs,Sphere:wn,SphereGeometry:lo,Spherical:Nh,SphericalHarmonics3:__,SplineCurve:ip,SpotLight:dp,SpotLightHelper:wS,Sprite:Sl,SpriteMaterial:ea,SrcAlphaFactor:jc,SrcAlphaSaturateFactor:ov,SrcColorFactor:ev,StaticCopyUsage:jx,StaticDrawUsage:el,StaticReadUsage:Hx,StereoCamera:eS,StreamCopyUsage:qx,StreamDrawUsage:Gx,StreamReadUsage:Xx,StringKeyframeTrack:ho,SubtractEquation:q0,SubtractiveBlending:tf,TOUCH:Gs,TangentSpaceNormalMap:os,TetrahedronGeometry:du,Texture:fn,TextureLoader:m_,TextureUtils:HS,TimestampQuery:Jx,TorusGeometry:Dr,TorusKnotGeometry:fu,Triangle:yi,TriangleFanDrawMode:wx,TriangleStripDrawMode:Mx,TrianglesDrawMode:Sx,TubeGeometry:pu,UVMapping:Bh,Uint16BufferAttribute:qf,Uint32BufferAttribute:Zf,Uint8BufferAttribute:Ob,Uint8ClampedBufferAttribute:Fb,Uniform:xp,UniformsGroup:xS,UniformsLib:Ke,UniformsUtils:yl,UnsignedByteType:rr,UnsignedInt248Type:jo,UnsignedInt5999Type:kf,UnsignedIntType:Vr,UnsignedShort4444Type:Vh,UnsignedShort5551Type:Gh,UnsignedShortType:Xo,VSMShadowMap:pr,Vector2:Me,Vector3:I,Vector4:It,VectorKeyframeTrack:io,VideoFrameTexture:o1,VideoTexture:Wv,WebGL3DRenderTarget:Mb,WebGLArrayRenderTarget:Sb,WebGLCoordinateSystem:Hi,WebGLCubeRenderTarget:kv,WebGLRenderTarget:Xi,WebGLRenderer:Mp,WebGLUtils:D_,WebGPUCoordinateSystem:tl,WebXRController:kc,WireframeGeometry:rp,WrapAroundEnding:Qa,ZeroCurvatureEnding:Hs,ZeroFactor:Q0,ZeroSlopeEnding:Ws,ZeroStencilOp:Ax,createCanvasElement:Lv},Symbol.toStringTag,{value:"Module"})),Ig=Symbol(),EA=s=>typeof(s==null?void 0:s.subscribe)=="function",L_=(s,e,t)=>{const i=s().map(o=>EA(o)?Xc(o):Ig),n=st(()=>s().map((o,a)=>i[a]===Ig?o:i[a].current)),r=()=>{K(n);let o;return pl(()=>{o=e(K(n))}),o};t?Et(r):Ya(r)},TA=(s,e)=>L_(s,e,!1),AA=(s,e)=>L_(s,e,!0),cl=Object.assign(TA,{pre:AA}),Gi=(s,e)=>(s==null?void 0:s[`is${e}`])===!0,Ed=s=>{const e=Qs(void 0),t=Qs(void 0);return s.then(i=>{e.set(i)}).catch(i=>{console.error("Error in asyncWritable:",i.message),t.set(i)}),Object.assign(Object.assign(s,e),{error:t,promise:s})},CA=typeof window<"u",er=(s,e)=>{const t=Fh(s,r=>r);let i;const n=t.subscribe(async r=>{i&&i();const o=await e(r);o&&(i=o)});ao(()=>{n(),i&&i()})},vn=s=>{const e=Qs(s),t={set:i=>{t.current=i,e.set(i)},subscribe:e.subscribe,update:i=>{const n=i(t.current);t.current=n,e.set(n)},current:s};return t},RA=s=>({subscribe:s.subscribe,get current(){return s.current}}),U_=(s,e)=>{if(e.includes(".")){const t=e.split("."),i=t.pop();for(let n=0;n<t.length;n+=1)s=s[t[n]];return{target:s,key:i}}else return{target:s,key:e}},PA=s=>{const{dom:e,canvas:t}=s,i=vn({width:e.offsetWidth,height:e.offsetHeight});D0(()=>{const r=new ResizeObserver(()=>{const{offsetWidth:o,offsetHeight:a}=e;(i.current.width!==o||i.current.height!==a)&&i.set({width:o,height:a})});return r.observe(e),()=>{r.disconnect()}});const n={dom:e,canvas:t,size:RA(i)};return Ei("threlte-dom-context",n),n},bu=()=>{const s=qn("threlte-dom-context");if(!s)throw new Error("useDOM can only be used in a child component to <Canvas>.");return s};function IA(s){return{all:s=s||new Map,on:function(e,t){var i=s.get(e);i?i.push(t):s.set(e,[t])},off:function(e,t){var i=s.get(e);i&&(t?i.splice(i.indexOf(t)>>>0,1):s.set(e,[]))},emit:function(e,t){var i=s.get(e);i&&i.slice().map(function(n){n(t)}),(i=s.get("*"))&&i.slice().map(function(n){n(e,t)})}}}class ts{constructor(){rn(this,"allVertices",{});rn(this,"isolatedVertices",{});rn(this,"connectedVertices",{});rn(this,"sortedConnectedValues",[]);rn(this,"needsSort",!1);rn(this,"emitter",IA());rn(this,"emit",this.emitter.emit.bind(this.emitter));rn(this,"on",this.emitter.on.bind(this.emitter));rn(this,"off",this.emitter.off.bind(this.emitter));rn(this,"getKey",e=>typeof e=="object"?e.key:e)}get sortedVertices(){return this.mapNodes(e=>e)}moveToIsolated(e){const t=this.connectedVertices[e];t&&(this.isolatedVertices[e]=t,delete this.connectedVertices[e])}moveToConnected(e){const t=this.isolatedVertices[e];t&&(this.connectedVertices[e]=t,delete this.isolatedVertices[e])}add(e,t,i){if(this.allVertices[e]&&this.allVertices[e].value!==void 0)throw new Error(`A node with the key ${e.toString()} already exists`);let n=this.allVertices[e];n?n.value===void 0&&(n.value=t):(n={value:t,previous:new Set,next:new Set},this.allVertices[e]=n);const r=n.next.size>0||n.previous.size>0;if(!(i!=null&&i.after)&&!(i!=null&&i.before)&&!r){this.isolatedVertices[e]=n,this.emit("node:added",{key:e,type:"isolated",value:t});return}else this.connectedVertices[e]=n;if(i!=null&&i.after){const o=Array.isArray(i.after)?i.after:[i.after];o.forEach(a=>{n.previous.add(this.getKey(a))}),o.forEach(a=>{const l=this.getKey(a),c=this.allVertices[l];c?(c.next.add(e),this.moveToConnected(l)):(this.allVertices[l]={value:void 0,previous:new Set,next:new Set([e])},this.connectedVertices[l]=this.allVertices[l])})}if(i!=null&&i.before){const o=Array.isArray(i.before)?i.before:[i.before];o.forEach(a=>{n.next.add(this.getKey(a))}),o.forEach(a=>{const l=this.getKey(a),c=this.allVertices[l];c?(c.previous.add(e),this.moveToConnected(l)):(this.allVertices[l]={value:void 0,previous:new Set([e]),next:new Set},this.connectedVertices[l]=this.allVertices[l])})}this.emit("node:added",{key:e,type:"connected",value:t}),this.needsSort=!0}remove(e){const t=this.getKey(e);if(this.isolatedVertices[t]){delete this.isolatedVertices[t],delete this.allVertices[t],this.emit("node:removed",{key:t,type:"isolated"});return}const n=this.connectedVertices[t];n&&(n.next.forEach(r=>{const o=this.connectedVertices[r];o&&(o.previous.delete(t),o.previous.size===0&&o.next.size===0&&this.moveToIsolated(r))}),n.previous.forEach(r=>{const o=this.connectedVertices[r];o&&(o.next.delete(t),o.previous.size===0&&o.next.size===0&&this.moveToIsolated(r))}),delete this.connectedVertices[t],delete this.allVertices[t],this.emit("node:removed",{key:t,type:"connected"}),this.needsSort=!0)}mapNodes(e){this.needsSort&&this.sort();const t=[];return this.forEachNode((i,n)=>{t.push(e(i,n))}),t}forEachNode(e){this.needsSort&&this.sort();let t=0;for(;t<this.sortedConnectedValues.length;t++)e(this.sortedConnectedValues[t],t);Reflect.ownKeys(this.isolatedVertices).forEach(i=>{const n=this.isolatedVertices[i];n.value!==void 0&&e(n.value,t++)})}getValueByKey(e){var t;return(t=this.allVertices[e])==null?void 0:t.value}getKeyByValue(e){return Reflect.ownKeys(this.connectedVertices).find(t=>this.connectedVertices[t].value===e)??Reflect.ownKeys(this.isolatedVertices).find(t=>this.isolatedVertices[t].value===e)}sort(){var o;const e=new Map,t=[],i=[],n=Reflect.ownKeys(this.connectedVertices).filter(a=>this.connectedVertices[a].value!==void 0);for(n.forEach(a=>{e.set(a,0)}),n.forEach(a=>{this.connectedVertices[a].next.forEach(c=>{this.connectedVertices[c]&&e.set(c,(e.get(c)||0)+1)})}),e.forEach((a,l)=>{a===0&&t.push(l)});t.length>0;){const a=t.shift();i.push(a);const l=n.find(c=>c===a);l&&((o=this.connectedVertices[l])==null||o.next.forEach(c=>{const h=(e.get(c)||0)-1;e.set(c,h),h===0&&t.push(c)}))}if(i.length!==n.length)throw new Error("The graph contains a cycle, and thus can not be sorted topologically.");const r=a=>a!==void 0;this.sortedConnectedValues=i.map(a=>this.connectedVertices[a].value).filter(r),this.needsSort=!1}clear(){this.allVertices={},this.isolatedVertices={},this.connectedVertices={},this.sortedConnectedValues=[],this.needsSort=!1}static isKey(e){return typeof e=="string"||typeof e=="symbol"}static isValue(e){return typeof e=="object"&&"key"in e}}class DA{constructor(e,t,i){rn(this,"key");rn(this,"stage");rn(this,"callback");rn(this,"runTask",!0);this.stage=e,this.key=t,this.callback=i}stop(){this.runTask=!1}start(){this.runTask=!0}run(e){this.runTask&&this.callback(e)}}class LA extends ts{constructor(t,i,n){super();rn(this,"key");rn(this,"scheduler");rn(this,"runTask",!0);rn(this,"callback",(t,i)=>i());rn(this,"removeTask",this.remove.bind(this));this.scheduler=t,this.key=i,this.start=this.start.bind(this),this.stop=this.stop.bind(this),n&&(this.callback=n.bind(this))}stop(){this.runTask=!1}start(){this.runTask=!0}get tasks(){return this.sortedVertices}createTask(t,i,n){const r=new DA(this,t,i);return this.add(t,r,n),r}getTask(t){return this.getValueByKey(t)}run(t){this.runTask&&this.callback(t,i=>{this.forEachNode(n=>{n.run(i??t)})})}runWithTiming(t){if(!this.runTask)return{};const i={};return this.callback(t,n=>{this.forEachNode(r=>{const o=performance.now();r.run(n??t);const a=performance.now()-o;i[r.key]=a})}),i}getSchedule(){return this.mapNodes(t=>t.key.toString())}}class UA extends ts{constructor(t){super();rn(this,"lastTime",performance.now());rn(this,"clampDeltaTo",.1);rn(this,"removeStage",this.remove.bind(this));t!=null&&t.clampDeltaTo&&(this.clampDeltaTo=t.clampDeltaTo),this.run=this.run.bind(this)}get stages(){return this.sortedVertices}createStage(t,i){const n=new LA(this,t,i==null?void 0:i.callback);return this.add(t,n,{after:i==null?void 0:i.after,before:i==null?void 0:i.before}),n}getStage(t){return this.getValueByKey(t)}run(t){const i=t-this.lastTime;this.forEachNode(n=>{n.run(Math.min(i/1e3,this.clampDeltaTo))}),this.lastTime=t}runWithTiming(t){const i=t-this.lastTime,n={},r=performance.now();return this.forEachNode(o=>{const a=performance.now(),l=o.runWithTiming(Math.min(i/1e3,this.clampDeltaTo)),c=performance.now()-a;n[o.key.toString()]={duration:c,tasks:l}}),{total:performance.now()-r,stages:n}}getSchedule(t={tasks:!0}){return{stages:this.mapNodes(i=>{if(i===void 0)throw new Error("Stage not found");return{key:i.key.toString(),tasks:t.tasks?i.getSchedule():void 0}})}}dispose(){this.clear()}}const NA=s=>{const e=new UA,t=e.createStage(Symbol("threlte-main-stage")),i={scheduler:e,frameInvalidated:!0,autoInvalidations:new Set,shouldAdvance:!1,advance:()=>{i.shouldAdvance=!0},autoRender:vn(s.autoRender??!0),renderMode:vn(s.renderMode??"on-demand"),invalidate(){i.frameInvalidated=!0},mainStage:t,shouldRender:()=>i.renderMode.current==="always"||i.renderMode.current==="on-demand"&&(i.frameInvalidated||i.autoInvalidations.size>0)||i.renderMode.current==="manual"&&i.shouldAdvance,renderStage:e.createStage(Symbol("threlte-render-stage"),{after:t,callback(n,r){i.shouldRender()&&r()}}),resetFrameInvalidation(){i.frameInvalidated=!1,i.shouldAdvance=!1}};return Ya(()=>{i.autoRender.set(s.autoRender??!0)}),Ya(()=>{i.renderMode.set(s.renderMode??"on-demand")}),ao(()=>{i.scheduler.dispose()}),Ei("threlte-scheduler-context",i),i},Su=()=>{const s=qn("threlte-scheduler-context");if(!s)throw new Error("useScheduler can only be used in a child component to <Canvas>.");return s},OA=()=>{const{size:s}=bu(),{invalidate:e}=Su(),t=new Sn(75,0,.1,1e3);t.position.z=5,t.lookAt(0,0,0);const i=vn(t);er(s,r=>{if(i.current===t){const o=i.current;o.aspect=r.width/r.height,o.updateProjectionMatrix(),e()}}),er(i,r=>{r===void 0&&i.set(t)});const n={camera:i};return Ei("threlte-camera-context",n),n},N_=()=>{const s=qn("threlte-camera-context");if(!s)throw new Error("useCamera can only be used in a child component to <Canvas>.");return s},FA=()=>{const s={removeObjectFromDisposal:e=>{s.disposableObjects.delete(e)},disposableObjectMounted:e=>{const t=s.disposableObjects.get(e);t?s.disposableObjects.set(e,t+1):s.disposableObjects.set(e,1)},disposableObjectUnmounted:e=>{const t=s.disposableObjects.get(e);t&&t>0&&(s.disposableObjects.set(e,t-1),t-1<=0&&(s.shouldDispose=!0))},disposableObjects:new Map,shouldDispose:!1,dispose:async(e=!1)=>{await B0(),!(!s.shouldDispose&&!e)&&(s.disposableObjects.forEach((t,i)=>{var n;(t===0||e)&&((n=i==null?void 0:i.dispose)==null||n.call(i),s.disposableObjects.delete(i))}),s.shouldDispose=!1)}};return ao(()=>{s.dispose(!0)}),Ei("threlte-disposal-context",s),s},O_=()=>{const s=qn("threlte-disposal-context");if(!s)throw new Error("useDisposal can only be used in a child component to <Canvas>.");return s},F_=Symbol("threlte-parent-context"),k_=s=>{const e=vn(s);return Ei(F_,e),e},wp=()=>qn(F_),Oh=Symbol("threlte-parent-object3d-context"),kA=s=>{const e=If(s);return Ei(Oh,e),e},BA=s=>{const e=qn(Oh),t=Qs(s),i=Fh([t,e],([n,r])=>n??r);return Ei(Oh,i),t},zA=()=>qn(Oh);function so(s,e,t){if(!CA)return{task:void 0,start:()=>{},stop:()=>{},started:If(!1)};let i,n,r;ts.isKey(s)?(i=s,n=e,r=t):(i=Symbol("useTask"),n=s,r=e);const o=Su();let a=o.mainStage;if(r){if(r.stage)if(ts.isValue(r.stage))a=r.stage;else{const d=o.scheduler.getStage(r.stage);if(!d)throw new Error(`No stage found with key ${r.stage.toString()}`);a=d}else if(r.after)if(Array.isArray(r.after))for(let d=0;d<r.after.length;d++){const f=r.after[d];if(ts.isValue(f)){a=f.stage;break}}else ts.isValue(r.after)&&(a=r.after.stage);else if(r.before)if(Array.isArray(r.before))for(let d=0;d<r.before.length;d++){const f=r.before[d];if(ts.isValue(f)){a=f.stage;break}}else ts.isValue(r.before)&&(a=r.before.stage)}const l=Qs(!1),c=a.createTask(i,n,r),h=()=>{l.set(!0),((r==null?void 0:r.autoInvalidate)??!0)&&o.autoInvalidations.add(n),c.start()},u=()=>{l.set(!1),((r==null?void 0:r.autoInvalidate)??!0)&&o.autoInvalidations.delete(n),c.stop()};return(r==null?void 0:r.autoStart)??!0?h():u(),ao(()=>{u(),a.removeTask(i)}),{task:c,start:h,stop:u,started:{subscribe:l.subscribe}}}const VA=s=>{const e={scene:new bl};return Ei("threlte-scene-context",e),e},B_=()=>{const s=qn("threlte-scene-context");if(!s)throw new Error("useScene can only be used in a child component to <Canvas>.");return s},GA=s=>{const{dispose:e}=O_(),{camera:t}=N_(),{scene:i}=B_(),{invalidate:n,renderStage:r,autoRender:o,scheduler:a,resetFrameInvalidation:l}=Su(),{size:c,canvas:h}=bu(),u=s.createRenderer?s.createRenderer(h):new Mp({canvas:h,powerPreference:"high-performance",antialias:!0,alpha:!0}),d=r.createTask(Symbol("threlte-auto-render-task"),()=>{u.render(i,t.current)}),f={renderer:u,colorManagementEnabled:vn(s.colorManagementEnabled??!0),colorSpace:vn(s.colorSpace??"srgb"),dpr:vn(s.dpr??window.devicePixelRatio),shadows:vn(s.shadows??La),toneMapping:vn(s.toneMapping??th),autoRenderTask:d};Ei("threlte-renderer-context",f),er([f.colorManagementEnabled],([m])=>{Nt.enabled=m}),er([f.colorSpace],([m])=>{"outputColorSpace"in u&&(u.outputColorSpace=m)}),er([f.dpr],([m])=>{"setPixelRatio"in u&&u.setPixelRatio(m)});const{start:p,stop:v}=so(()=>{var m;!("xr"in u)||(m=u.xr)!=null&&m.isPresenting||(u.setSize(c.current.width,c.current.height),n(),v())},{before:d,autoStart:!1,autoInvalidate:!1});return er([c],()=>{p()}),er([f.shadows],([m])=>{"shadowMap"in u&&(u.shadowMap.enabled=!!m,m&&m!==!0?u.shadowMap.type=m:m===!0&&(u.shadowMap.type=La))}),er([f.toneMapping],([m])=>{"toneMapping"in u&&(u.toneMapping=m)}),er([o],([m])=>(m?f.autoRenderTask.start():f.autoRenderTask.stop(),()=>{f.autoRenderTask.stop()})),"setAnimationLoop"in f.renderer&&f.renderer.setAnimationLoop(g=>{e(),a.run(g),l()}),ao(()=>{if("dispose"in f.renderer){const m=f.renderer.dispose;m()}}),Et(()=>{f.colorManagementEnabled.set(s.colorManagementEnabled??!0)}),Et(()=>{f.colorSpace.set(s.colorSpace??"srgb")}),Et(()=>{f.toneMapping.set(s.toneMapping??th)}),Et(()=>{f.shadows.set(s.shadows??La)}),Et(()=>{f.dpr.set(s.dpr??window.devicePixelRatio)}),f},HA=()=>{const s=qn("threlte-renderer-context");if(!s)throw new Error("useRenderer can only be used in a child component to <Canvas>.");return s},WA=()=>{const s=vn({});return Ei("threlte-user-context",s),s},XA=()=>{const s=qn("threlte-user-context");if(!s)throw new Error("useUserContext can only be used in a child component to <Canvas>.");return s},jA=s=>{const{scene:e}=VA();return{scene:e,...PA(s),...fx(),...k_(e),...kA(e),...FA(),...NA(s),...OA(),...GA(s),...WA()}};function YA(s,e){Ln(e,!0);let t=sr(e,["$$slots","$$events","$$legacy","children"]);jA(t);var i=gt(),n=Ye(i);Wi(n,()=>e.children),We(s,i),Un()}var qA=Qt('<div class="svelte-1osucwe"><canvas class="svelte-1osucwe"><!></canvas></div>');function ZA(s,e){let t=sr(e,["$$slots","$$events","$$legacy","children"]),i=xi(void 0),n=xi(void 0);var r=qA(),o=Bs(r),a=Bs(o);{var l=c=>{YA(c,Br({get dom(){return K(n)},get canvas(){return K(i)}},()=>t,{children:(h,u)=>{var d=gt(),f=Ye(d);Wi(f,()=>e.children??kr),We(h,d)},$$slots:{default:!0}}))};Ot(a,c=>{K(i)&&K(n)&&c(l)})}zs(o),Zp(o,c=>li(i,c),()=>K(i)),zs(r),Zp(r,c=>li(n,c),()=>K(n)),We(s,r)}const Fi=()=>{const s=Su(),e=HA(),t=N_(),i=B_(),n=bu();return{advance:s.advance,autoRender:s.autoRender,autoRenderTask:e.autoRenderTask,camera:t.camera,colorManagementEnabled:e.colorManagementEnabled,colorSpace:e.colorSpace,dpr:e.dpr,invalidate:s.invalidate,mainStage:s.mainStage,renderer:e.renderer,renderMode:s.renderMode,renderStage:s.renderStage,scheduler:s.scheduler,shadows:e.shadows,shouldRender:s.shouldRender,dom:n.dom,canvas:n.canvas,size:n.size,toneMapping:e.toneMapping,get scene(){return i.scene},set scene(o){i.scene=o}}},JA=s=>typeof s=="object"&&s!==null,KA=(s,e)=>{const{invalidate:t}=Fi(),i=st(s),n=st(e),r=Xc(wp()),o=Xc(zA()),a=k_(),l=BA();Et(()=>{a.set(K(i)),Gi(K(i),"Object3D")&&l.set(K(i)),t()}),Et(()=>{var h;t();const c=K(i);if(K(n)===void 0&&Gi(c,"Object3D"))return(h=o.current)==null||h.add(c),()=>{var u;t(),(u=o.current)==null||u.remove(c)};if(K(n)===void 0&&JA(r.current)){const u=r.current;if(Gi(c,"Material")){const d=u.material;return u.material=c,()=>{t(),u.material=d}}else if(Gi(c,"BufferGeometry")){const d=u.geometry;return u.geometry=c,()=>{t(),u.geometry=d}}}if(K(n)===!1)return()=>{t()};if(typeof K(n)=="function"){const u=K(n)({ref:c,parent:r.current,parentObject3D:o.current});return()=>{t(),u==null||u()}}if(typeof K(n)=="string"){const{target:u,key:d}=U_(r.current,K(n)),f=u[d];return u[d]=c,()=>{t(),u[d]=f}}if(Gi(K(n),"Object3D")&&Gi(c,"Object3D"))return K(n).add(c),()=>{t(),K(n).remove(c)}})},Td=new Set,QA=(s,e,t)=>{const{invalidate:i,size:n,camera:r}=Fi(),o=st(s),a=Xc(n);Et(()=>{if(!t())return;const l=K(o);return Td.add(l),r.set(l),i(),()=>{Td.delete(l),Td.size===0&&(r.set(void 0),i())}}),Et(()=>{if(e())return;const{width:l,height:c}=a.current;Gi(K(o),"PerspectiveCamera")?K(o).aspect=l/c:Gi(K(o),"OrthographicCamera")&&(K(o).left=l/-2,K(o).right=l/2,K(o).top=c/2,K(o).bottom=c/-2),K(o).updateProjectionMatrix(),K(o).updateMatrixWorld(),i()})},mf=Symbol("threlte-disposable-object-context"),$A=s=>typeof(s==null?void 0:s.dispose)=="function",e2=s=>{const e=qn(mf),t=st(()=>s()??(e==null?void 0:e())??!0);Ei(mf,()=>K(t))},t2=s=>{const e=st(s),{disposableObjectMounted:t,disposableObjectUnmounted:i,removeObjectFromDisposal:n}=O_(),r=qn(mf),o=st(()=>(r==null?void 0:r())??!0);Ya(()=>{if(K(o))return t(K(e)),()=>i(K(e));n(K(e))})},n2=s=>s!==null&&typeof s=="object"&&"addEventListener"in s&&"removeEventListener"in s,i2=(s,e,t)=>{const i=st(s);for(const n of e){const r=st(()=>t[n]);n.startsWith("on")&&Et(()=>{if(typeof K(r)!="function"||!n2(K(i)))return;const o=n.slice(2);return K(i).addEventListener(o,K(r)),()=>K(i).removeEventListener(o,K(r))})}};let gf;const r2=s=>{gf=s},s2=()=>{const s=gf;return gf=void 0,s},vf="threlte-plugin-context",o2=s=>{const e=qn(vf);if(!e)return;const t=[],i=Object.values(e);if(i.length>0){const n=s();for(let r=0;r<i.length;r++){const o=i[r],a=o(n);a&&a.pluginProps&&t.push(...a.pluginProps)}}return{pluginsProps:t}},a2=new Set(["$$scope","$$slots","type","args","attach","instance"]),l2=new Set(["fov","aspect","near","far","left","right","top","bottom","zoom"]),c2=s=>typeof s=="string"||typeof s=="number"||typeof s=="boolean"||typeof s>"u"||s===null,Dg=(s,e,t)=>{var i,n,r;return!Array.isArray(t)&&typeof t=="number"&&typeof s[e]=="object"&&s[e]!==null&&typeof((i=s[e])==null?void 0:i.setScalar)=="function"&&!((n=s[e])!=null&&n.isColor)?(o,a,l)=>{o[a].setScalar(l)}:typeof((r=s[e])==null?void 0:r.set)=="function"&&typeof s=="object"&&s!==null?Array.isArray(t)?(o,a,l)=>{o[a].set(...l)}:(o,a,l)=>{o[a].set(l)}:(o,a,l)=>{o[a]=l}},h2=()=>{const{invalidate:s}=Fi(),e=new Map,t=new Map,i=(r,o,a,l)=>{if(c2(a)){const u=e.get(o);if(u&&u.instance===r&&u.value===a)return;e.set(o,{instance:r,value:a})}const{key:c,target:h}=U_(r,o);if(a!=null){const u=t.get(o);if(u)u(h,c,a);else{const d=Dg(h,c,a);t.set(o,d),d(h,c,a)}}else Dg(h,c,a)(h,c,a);l||l2.has(c)&&(h.isPerspectiveCamera||h.isOrthographicCamera)&&h.updateProjectionMatrix()};return{updateProp:(r,o,a,l,c)=>{!a2.has(o)&&!(l!=null&&l.includes(o))&&i(r,o,a,c),s()}}},u2=s=>typeof s=="function"&&Function.prototype.toString.call(s).startsWith("class "),d2=(s,e)=>u2(s)?Array.isArray(e)?new s(...e):new s:s;function Ad(s,e){Ln(e,!0);let t=Ve(e,"is",19,s2),i=Ve(e,"manual",3,!1),n=Ve(e,"makeDefault",3,!1),r=Ve(e,"ref",15),o=sr(e,["$$slots","$$events","$$legacy","is","args","attach","manual","makeDefault","dispose","ref","oncreate","children"]);const a=st(()=>d2(t(),e.args));Et(()=>{r()!==K(a)&&r(K(a))});const l=o2(()=>({get ref(){return K(a)},get args(){return e.args},get attach(){return e.attach},get manual(){return i()},get makeDefault(){return n()},get dispose(){return e.dispose},get props(){return o}})),c=Object.keys(o),{updateProp:h}=h2();c.forEach(f=>{const p=st(()=>o[f]);Et(()=>{h(K(a),f,K(p),l==null?void 0:l.pluginsProps,i())})}),KA(()=>K(a),()=>e.attach),Et(()=>{(Gi(K(a),"PerspectiveCamera")||Gi(K(a),"OrthographicCamera"))&&QA(()=>K(a),()=>i(),()=>n())}),e2(()=>e.dispose),Et(()=>{$A(K(a))&&t2(()=>K(a))}),i2(()=>K(a),c,o),Ya(()=>{K(a);let f;return pl(()=>{var p;f=(p=e.oncreate)==null?void 0:p.call(e,K(a))}),f});var u=gt(),d=Ye(u);Wi(d,()=>e.children??kr,()=>({ref:K(a)})),We(s,u),Un()}const f2={},wt=new Proxy(Ad,{get(s,e){if(typeof e!="string")return Ad;const t=f2[e]||wA[e];if(t===void 0)throw new Error(`No Three.js module found for ${e}. Did you forget to extend the catalogue?`);return r2(t),Ad}});function p2(s,e){e&&Ei(vf,{...qn(vf),[s]:e})}function m2(s,e){const{scheduler:t}=Fi();return t.getStage(s)??t.createStage(s,e)}function g2(s,e,t){const i=XA();if(!i)throw new Error("No user context store found, did you invoke this function outside of your main <Canvas> component?");return e?(i.update(n=>{if(s in n)return n;const r=typeof e=="function"?e():e;return n[s]=r,n}),i.current[s]):Fh(i,n=>n[s])}function z_(s,e){const{remember:t,clear:i}=px();let n;const r=()=>new s;return{load:(l,c)=>{const h=async u=>{var d;if(n||(n=r()),"loadAsync"in n){const f=await n.loadAsync(u,c==null?void 0:c.onProgress);return((d=c==null?void 0:c.transform)==null?void 0:d.call(c,f))??f}else return new Promise((f,p)=>{n.load(u,v=>{var m;return f(((m=c==null?void 0:c.transform)==null?void 0:m.call(c,v))??v)},v=>{var m;return(m=c==null?void 0:c.onProgress)==null?void 0:m.call(c,v)},p)})};if(Array.isArray(l)){const u=l.map(f=>t(()=>h(f),[s,f]));return Ed(Promise.all(u))}else if(typeof l=="string"){const u=t(()=>h(l),[s,l]);return Ed(u)}else{const u=Object.values(l).map(f=>t(()=>h(f),[s,f]));return Ed(Promise.all(u).then(f=>Object.fromEntries(Object.entries(l).map(([p],v)=>[p,f[v]]))))}},clear:l=>{Array.isArray(l)?l.forEach(c=>{i([s,c])}):typeof l=="string"?i([s,l]):Object.entries(l).forEach(([c,h])=>{i([s,c,h])})},loader:n}}const Ps=s=>({subscribe:s.subscribe,get current(){return s.current}});let Wa=0;const Ep=vn(!1),Mu=vn(!1),Tp=vn(void 0),Ap=vn(0),Cp=vn(0),V_=vn([]),Rp=vn(0),{onStart:Cd,onLoad:Rd,onError:Pd}=uo;uo.onStart=(s,e,t)=>{Cd==null||Cd(s,e,t),Mu.set(!0),Tp.set(s),Ap.set(e),Cp.set(t);const i=(e-Wa)/(t-Wa);Rp.set(i),i===1&&Ep.set(!0)};uo.onLoad=()=>{Rd==null||Rd(),Mu.set(!1)};uo.onError=s=>{Pd==null||Pd(s),V_.update(e=>[...e,s])};uo.onProgress=(s,e,t)=>{e===t&&(Wa=t),Mu.set(!0),Tp.set(s),Ap.set(e),Cp.set(t);const i=(e-Wa)/(t-Wa)||1;Rp.set(i),i===1&&Ep.set(!0)};Ps(Mu),Ps(Tp),Ps(Ap),Ps(Cp),Ps(V_),Ps(Rp),Ps(Ep);new I;new I;new I;new wn;new ct;new as;new I;const v2=Symbol("THRELTE_SUSPENSE_CONTEXT_IDENTIFIER"),_2=()=>{const s=qn(v2),e=new Set,t=n=>(s&&(s.suspend(n),e.add(n)),n),i={suspended:Fh((s==null?void 0:s.suspended)??If(!1),n=>n)};return ao(()=>{if(s){for(const n of e)s.onComponentDestroy(n);e.clear()}}),Object.assign(t,i)};new I;new ct;new I;new I;new Lt;/*!
 * camera-controls
 * https://github.com/yomotsu/camera-controls
 * (c) 2017 @yomotsu
 * Released under the MIT License.
 */var Id;/Mac/.test((Id=globalThis==null?void 0:globalThis.navigator)===null||Id===void 0?void 0:Id.platform);new I;new I;new I;new Me;var y2=Object.defineProperty,x2=(s,e,t)=>e in s?y2(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,qt=(s,e,t)=>x2(s,typeof e!="symbol"?e+"":e,t);const G_=(s,e)=>{const[t,i]=e.split("-");return Object.assign(s.style,{left:i==="left"?"0":i==="center"?"50%":"",right:i==="right"?"0":"",top:t==="top"?"0":t==="bottom"?"":"50%",bottom:t==="bottom"?"0":"",transform:`${i==="center"?"translateX(-50%)":""} ${t==="center"?"translateY(-50%)":""}`}),e},b2=({placement:s,size:e,offset:t,id:i,className:n})=>{const r=document.createElement("div"),{top:o,left:a,right:l,bottom:c}=t;return Object.assign(r.style,{id:i,position:"absolute",zIndex:"1000",height:`${e}px`,width:`${e}px`,margin:`${o}px ${l}px ${c}px ${a}px`,borderRadius:"100%"}),G_(r,s),i&&(r.id=i),n&&(r.className=n),r},S2=s=>{const e=typeof s=="string"?document.querySelector(s):s;if(!e)throw Error("Invalid DOM element");return e};function _f(s,e,t){return Math.max(e,Math.min(t,s))}const M2=[["x",0,3],["y",1,4],["z",2,5]],Lg=new I;function Ug({isSphere:s},e,t){s&&(Lg.set(0,0,1).applyQuaternion(t.quaternion),M2.forEach(([i,n,r])=>{const o=Lg[i];let a=e[n],l=a.userData.opacity;a.material.opacity=_f(o>=0?l:l/2,0,1),a=e[r],l=a.userData.opacity,a.material.opacity=_f(o>=0?l/2:l,0,1)}))}const w2=(s,e,t=10)=>Math.abs(s.clientX-e.x)<t&&Math.abs(s.clientY-e.y)<t,Ng=new _u,Og=new Me,Fg=(s,e,t,i)=>{Og.set((s.clientX-e.left)/e.width*2-1,-((s.clientY-e.top)/e.height)*2+1),Ng.setFromCamera(Og,t);const n=Ng.intersectObjects(i,!1),r=n.length?n[0]:null;return!r||!r.object.visible?null:r},Dd=1e-6,E2=2*Math.PI,H_=["x","y","z"],hl=[...H_,"nx","ny","nz"],T2=["x","z","y","nx","nz","ny"],A2=["z","x","y","nz","nx","ny"],yf="Right",zc="Top",xf="Front",bf="Left",Vc="Bottom",Sf="Back",C2=[yf,zc,xf,bf,Vc,Sf].map(s=>s.toLocaleLowerCase()),W_=1.3,kg=(s,e=!0)=>{const{material:t,userData:i}=s,{color:n,opacity:r}=e?i.hover:i;t.color.set(n),t.opacity=r},Is=s=>JSON.parse(JSON.stringify(s)),R2=s=>{const e=s.type||"sphere",t=e==="sphere",i=s.resolution||t?64:128,n=Lt.DEFAULT_UP,r=n.z===1,o=n.x===1,{container:a}=s;s.container=void 0,s=JSON.parse(JSON.stringify(s)),s.container=a;const l=r?T2:o?A2:hl;C2.forEach((d,f)=>{s[d]&&(s[l[f]]=s[d])});const c={enabled:!0,color:16777215,opacity:1,scale:.7,labelColor:2236962,line:!1,border:{size:0,color:14540253},hover:{color:t?16777215:9688043,labelColor:2236962,opacity:1,scale:.7,border:{size:0,color:14540253}}},h={line:!1,scale:t?.45:.7,hover:{scale:t?.5:.7}},u={type:e,container:document.body,size:128,placement:"top-right",resolution:i,lineWidth:4,radius:t?1:.2,smoothness:18,animated:!0,speed:1,background:{enabled:!0,color:t?16777215:14739180,opacity:t?0:1,hover:{color:t?16777215:14739180,opacity:t?.2:1}},font:{family:"sans-serif",weight:900},offset:{top:10,left:10,bottom:10,right:10},corners:{enabled:!t,color:t?15915362:16777215,opacity:1,scale:t?.15:.2,radius:1,smoothness:18,hover:{color:t?16777215:9688043,opacity:1,scale:t?.2:.225}},edges:{enabled:!t,color:t?15915362:16777215,opacity:t?1:0,radius:t?1:.125,smoothness:18,scale:t?.15:1,hover:{color:t?16777215:9688043,opacity:1,scale:t?.2:1}},x:{...Is(c),...t?{label:"X",color:16725587,line:!0}:{label:o?zc:yf}},y:{...Is(c),...t?{label:"Y",color:9100032,line:!0}:{label:r||o?xf:zc}},z:{...Is(c),...t?{label:"Z",color:2920447,line:!0}:{label:r?zc:o?yf:xf}},nx:{...Is(h),label:t?"":o?Vc:bf},ny:{...Is(h),label:t?"":r||o?Sf:Vc},nz:{...Is(h),label:t?"":r?Vc:o?bf:Sf}};return Mf(s,u),H_.forEach(d=>Mf(s[`n${d}`],Is(s[d]))),{...s,isSphere:t}};function Mf(s,...e){if(s instanceof HTMLElement||typeof s!="object"||s===null)return s;for(const t of e)for(const i in t)i!=="container"&&i in t&&(s[i]===void 0?s[i]=t[i]:typeof t[i]=="object"&&!Array.isArray(t[i])&&(s[i]=Mf(s[i]||{},t[i])));return s}const P2=(s,e=2)=>{const t=new Ge,i=e*2,{isSphere:n,resolution:r,radius:o,font:a,corners:l,edges:c}=s,h=hl.map(M=>({...s[M],radius:o}));n&&l.enabled&&h.push(l),n&&c.enabled&&h.push(c);const u=document.createElement("canvas"),d=u.getContext("2d");u.width=r*2+i*2,u.height=r*h.length+i*h.length;const[f,p]=E(h,r,a);h.forEach(({radius:M,label:T,color:S,labelColor:b,border:P,hover:{color:D,labelColor:G,border:H}},q)=>{const F=r*q+q*i+e;_(e,F,e,r,M,T,P,S,b),_(r+e*3,F,e,r,M,T,H??P,D??S,G??b)});const v=h.length,m=e/(r*2),g=e/(r*6),x=1/v,y=new Xv(u);return y.repeat.set(.5-2*m,x-2*g),y.offset.set(m,1-g),Object.assign(y,{colorSpace:on,wrapS:tr,wrapT:tr,userData:{offsetX:m,offsetY:g,cellHeight:x}}),y;function _(M,T,S,b,P,D,G,H,q){if(P=P*(b/2),H!=null&&H!==""&&(F(),d.fillStyle=t.set(H).getStyle(),d.fill()),G&&G.size){const te=G.size*b/2;M+=te,T+=te,b-=G.size*b,P=Math.max(0,P-te),F(),d.strokeStyle=t.set(G.color).getStyle(),d.lineWidth=G.size*b,d.stroke()}D&&w(d,M+b/2,T+(b+S)/2,D,t.set(q).getStyle());function F(){d.beginPath(),d.moveTo(M+P,T),d.lineTo(M+b-P,T),d.arcTo(M+b,T,M+b,T+P,P),d.lineTo(M+b,T+b-P),d.arcTo(M+b,T+b,M+b-P,T+b,P),d.lineTo(M+P,T+b),d.arcTo(M,T+b,M,T+b-P,P),d.lineTo(M,T+P),d.arcTo(M,T,M+P,T,P),d.closePath()}}function E(M,T,S){const b=[...M].sort(($,L)=>{var Z,Q;return(((Z=$.label)==null?void 0:Z.length)||0)-(((Q=L.label)==null?void 0:Q.length)||0)}).pop().label,{family:P,weight:D}=S,G=n?Math.sqrt(Math.pow(T*.7,2)/2):T;let H=G,q=0,F=0;do{d.font=`${D} ${H}px ${P}`;const $=d.measureText(b);q=$.width,F=$.fontBoundingBoxDescent,H--}while(q>G&&H>0);const te=G/F,Y=Math.min(G/q,te),j=Math.floor(H*Y);return[`${D} ${j}px ${P}`,te]}function w(M,T,S,b,P){M.font=f,M.textAlign="center",M.textBaseline="middle",M.fillStyle=P,M.fillText(b,T,S+(n?p:0))}},I2=(s,e)=>s.offset.x=(e?.5:0)+s.userData.offsetX,Pp=(s,e)=>{const{offset:t,userData:{offsetY:i,cellHeight:n}}=s;t.y=1-(e+1)*n+i};function Ip(s,e,t=2,i=2){const n=t/2-s,r=i/2-s,o=s/t,a=(t-s)/t,l=s/i,c=(i-s)/i,h=[n,r,0,-n,r,0,-n,-r,0,n,-r,0],u=[a,c,o,c,o,l,a,l],d=[3*(e+1)+3,3*(e+1)+4,e+4,e+5,2*(e+1)+4,2,1,2*(e+1)+3,3,4*(e+1)+3,4,0],f=[0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11].map(w=>d[w]);let p,v,m,g,x,y,_,E;for(let w=0;w<4;w++){g=w<1||w>2?n:-n,x=w<2?r:-r,y=w<1||w>2?a:o,_=w<2?c:l;for(let M=0;M<=e;M++)p=Math.PI/2*(w+M/e),v=Math.cos(p),m=Math.sin(p),h.push(g+s*v,x+s*m,0),u.push(y+o*v,_+l*m),M<e&&(E=(e+1)*w+M+4,f.push(w,E,E+1))}return new xt().setIndex(new Rt(new Uint32Array(f),1)).setAttribute("position",new Rt(new Float32Array(h),3)).setAttribute("uv",new Rt(new Float32Array(u),2))}const D2=(s,e)=>{const t=new I,{isSphere:i,radius:n,smoothness:r}=s,o=Ip(n,r);return hl.map((a,l)=>{const c=l<3,h=hl[l],u=l?e.clone():e;Pp(u,l);const{enabled:d,scale:f,opacity:p,hover:v}=s[h],m={map:u,opacity:p,transparent:!0},g=i?new Sl(new ea(m)):new ze(o,new Bn(m)),x=c?h:h[1];return g.position[x]=(c?1:-1)*(i?W_:1),i||g.lookAt(t.copy(g.position).multiplyScalar(1.7)),g.scale.setScalar(f),g.renderOrder=1,g.visible=d,g.userData={scale:f,opacity:p,hover:v},g})},L2=(s,e)=>{const{isSphere:t,corners:i}=s;if(!i.enabled)return[];const{color:n,opacity:r,scale:o,radius:a,smoothness:l,hover:c}=i,h=t?null:Ip(a,l),u={transparent:!0,opacity:r},d=[1,1,1,-1,1,1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,-1,-1,-1,-1,-1].map(p=>p*.85),f=new I;return Array(d.length/3).fill(0).map((p,v)=>{if(t){const x=e.clone();Pp(x,6),u.map=x}else u.color=n;const m=t?new Sl(new ea(u)):new ze(h,new Bn(u)),g=v*3;return m.position.set(d[g],d[g+1],d[g+2]),t&&m.position.normalize().multiplyScalar(1.7),m.scale.setScalar(o),m.lookAt(f.copy(m.position).multiplyScalar(2)),m.renderOrder=1,m.userData={color:n,opacity:r,scale:o,hover:c},m})},U2=(s,e,t)=>{const{isSphere:i,edges:n}=s;if(!n.enabled)return[];const{color:r,opacity:o,scale:a,hover:l,radius:c,smoothness:h}=n,u=i?null:Ip(c,h,1.2,.25),d={transparent:!0,opacity:o},f=[0,1,1,0,-1,1,1,0,1,-1,0,1,0,1,-1,0,-1,-1,1,0,-1,-1,0,-1,1,1,0,1,-1,0,-1,1,0,-1,-1,0].map(m=>m*.925),p=new I,v=new I(0,1,0);return Array(f.length/3).fill(0).map((m,g)=>{if(i){const _=e.clone();Pp(_,t),d.map=_}else d.color=r;const x=i?new Sl(new ea(d)):new ze(u,new Bn(d)),y=g*3;return x.position.set(f[y],f[y+1],f[y+2]),i&&x.position.normalize().multiplyScalar(1.7),x.scale.setScalar(a),x.up.copy(v),x.lookAt(p.copy(x.position).multiplyScalar(2)),!i&&!x.position.y&&(x.rotation.z=Math.PI/2),x.renderOrder=1,x.userData={color:r,opacity:o,scale:a,hover:l},x})};function N2(s,e=!1){const t=s[0].index!==null,i=new Set(Object.keys(s[0].attributes)),n=new Set(Object.keys(s[0].morphAttributes)),r={},o={},a=s[0].morphTargetsRelative,l=new xt;let c=0;for(let h=0;h<s.length;++h){const u=s[h];let d=0;if(t!==(u.index!==null))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(const f in u.attributes){if(!i.has(f))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+'. All geometries must have compatible attributes; make sure "'+f+'" attribute exists among all geometries, or in none of them.'),null;r[f]===void 0&&(r[f]=[]),r[f].push(u.attributes[f]),d++}if(d!==i.size)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". Make sure all geometries have the same number of attributes."),null;if(a!==u.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(const f in u.morphAttributes){if(!n.has(f))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+".  .morphAttributes must be consistent throughout all geometries."),null;o[f]===void 0&&(o[f]=[]),o[f].push(u.morphAttributes[f])}if(e){let f;if(t)f=u.index.count;else if(u.attributes.position!==void 0)f=u.attributes.position.count;else return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". The geometry must have either an index or a position attribute"),null;l.addGroup(c,f,h),c+=f}}if(t){let h=0;const u=[];for(let d=0;d<s.length;++d){const f=s[d].index;for(let p=0;p<f.count;++p)u.push(f.getX(p)+h);h+=s[d].attributes.position.count}l.setIndex(u)}for(const h in r){const u=Bg(r[h]);if(!u)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+h+" attribute."),null;l.setAttribute(h,u)}for(const h in o){const u=o[h][0].length;if(u===0)break;l.morphAttributes=l.morphAttributes||{},l.morphAttributes[h]=[];for(let d=0;d<u;++d){const f=[];for(let v=0;v<o[h].length;++v)f.push(o[h][v][d]);const p=Bg(f);if(!p)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+h+" morphAttribute."),null;l.morphAttributes[h].push(p)}}return l}function Bg(s){let e,t,i,n=-1,r=0;for(let c=0;c<s.length;++c){const h=s[c];if(e===void 0&&(e=h.array.constructor),e!==h.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(t===void 0&&(t=h.itemSize),t!==h.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(i===void 0&&(i=h.normalized),i!==h.normalized)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;if(n===-1&&(n=h.gpuType),n!==h.gpuType)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes."),null;r+=h.count*t}const o=new e(r),a=new Rt(o,t,i);let l=0;for(let c=0;c<s.length;++c){const h=s[c];if(h.isInterleavedBufferAttribute){const u=l/t;for(let d=0,f=h.count;d<f;d++)for(let p=0;p<t;p++){const v=h.getComponent(d,p);a.setComponent(d+u,p,v)}}else o.set(h.array,l);l+=h.count*t}return n!==void 0&&(a.gpuType=n),a}const O2=(s,e)=>{const{isSphere:t,background:{enabled:i,color:n,opacity:r,hover:o}}=e;let a;const l=new Bn({color:n,side:ti,opacity:r,transparent:!0,depthWrite:!1});if(!i)return null;if(t)a=new ze(new lo(1.8,64,64),l);else{let c;s.forEach(h=>{const u=h.scale.x;h.scale.setScalar(.9),h.updateMatrix();const d=h.geometry.clone();d.applyMatrix4(h.matrix),c=c?N2([c,d]):d,h.scale.setScalar(u)}),a=new ze(c,l)}return a.userData={color:n,opacity:r,hover:o},a},zg=new _n,bc=new I;let X_=class extends vu{constructor(){super(),this.isLineSegmentsGeometry=!0,this.type="LineSegmentsGeometry";const e=[-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],t=[-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],i=[0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5];this.setIndex(i),this.setAttribute("position",new qe(e,3)),this.setAttribute("uv",new qe(t,2))}applyMatrix4(e){const t=this.attributes.instanceStart,i=this.attributes.instanceEnd;return t!==void 0&&(t.applyMatrix4(e),i.applyMatrix4(e),t.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}setPositions(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const i=new Uh(t,6,1);return this.setAttribute("instanceStart",new Li(i,3,0)),this.setAttribute("instanceEnd",new Li(i,3,3)),this.instanceCount=this.attributes.instanceStart.count,this.computeBoundingBox(),this.computeBoundingSphere(),this}setColors(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const i=new Uh(t,6,1);return this.setAttribute("instanceColorStart",new Li(i,3,0)),this.setAttribute("instanceColorEnd",new Li(i,3,3)),this}fromWireframeGeometry(e){return this.setPositions(e.attributes.position.array),this}fromEdgesGeometry(e){return this.setPositions(e.attributes.position.array),this}fromMesh(e){return this.fromWireframeGeometry(new rp(e.geometry)),this}fromLineSegments(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new _n);const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;e!==void 0&&t!==void 0&&(this.boundingBox.setFromBufferAttribute(e),zg.setFromBufferAttribute(t),this.boundingBox.union(zg))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new wn),this.boundingBox===null&&this.computeBoundingBox();const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;if(e!==void 0&&t!==void 0){const i=this.boundingSphere.center;this.boundingBox.getCenter(i);let n=0;for(let r=0,o=e.count;r<o;r++)bc.fromBufferAttribute(e,r),n=Math.max(n,i.distanceToSquared(bc)),bc.fromBufferAttribute(t,r),n=Math.max(n,i.distanceToSquared(bc));this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}toJSON(){}applyMatrix(e){return console.warn("THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4()."),this.applyMatrix4(e)}};Ke.line={worldUnits:{value:1},linewidth:{value:1},resolution:{value:new Me(1,1)},dashOffset:{value:0},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}};oi.line={uniforms:yl.merge([Ke.common,Ke.fog,Ke.line]),vertexShader:`
		#include <common>
		#include <color_pars_vertex>
		#include <fog_pars_vertex>
		#include <logdepthbuf_pars_vertex>
		#include <clipping_planes_pars_vertex>

		uniform float linewidth;
		uniform vec2 resolution;

		attribute vec3 instanceStart;
		attribute vec3 instanceEnd;

		attribute vec3 instanceColorStart;
		attribute vec3 instanceColorEnd;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#ifdef USE_DASH

			uniform float dashScale;
			attribute float instanceDistanceStart;
			attribute float instanceDistanceEnd;
			varying float vLineDistance;

		#endif

		void trimSegment( const in vec4 start, inout vec4 end ) {

			// trim end segment so it terminates between the camera plane and the near plane

			// conservative estimate of the near plane
			float a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column
			float b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column
			float nearEstimate = - 0.5 * b / a;

			float alpha = ( nearEstimate - start.z ) / ( end.z - start.z );

			end.xyz = mix( start.xyz, end.xyz, alpha );

		}

		void main() {

			#ifdef USE_COLOR

				vColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;

			#endif

			#ifdef USE_DASH

				vLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;
				vUv = uv;

			#endif

			float aspect = resolution.x / resolution.y;

			// camera space
			vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );
			vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );

			#ifdef WORLD_UNITS

				worldStart = start.xyz;
				worldEnd = end.xyz;

			#else

				vUv = uv;

			#endif

			// special case for perspective projection, and segments that terminate either in, or behind, the camera plane
			// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space
			// but we need to perform ndc-space calculations in the shader, so we must address this issue directly
			// perhaps there is a more elegant solution -- WestLangley

			bool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column

			if ( perspective ) {

				if ( start.z < 0.0 && end.z >= 0.0 ) {

					trimSegment( start, end );

				} else if ( end.z < 0.0 && start.z >= 0.0 ) {

					trimSegment( end, start );

				}

			}

			// clip space
			vec4 clipStart = projectionMatrix * start;
			vec4 clipEnd = projectionMatrix * end;

			// ndc space
			vec3 ndcStart = clipStart.xyz / clipStart.w;
			vec3 ndcEnd = clipEnd.xyz / clipEnd.w;

			// direction
			vec2 dir = ndcEnd.xy - ndcStart.xy;

			// account for clip-space aspect ratio
			dir.x *= aspect;
			dir = normalize( dir );

			#ifdef WORLD_UNITS

				vec3 worldDir = normalize( end.xyz - start.xyz );
				vec3 tmpFwd = normalize( mix( start.xyz, end.xyz, 0.5 ) );
				vec3 worldUp = normalize( cross( worldDir, tmpFwd ) );
				vec3 worldFwd = cross( worldDir, worldUp );
				worldPos = position.y < 0.5 ? start: end;

				// height offset
				float hw = linewidth * 0.5;
				worldPos.xyz += position.x < 0.0 ? hw * worldUp : - hw * worldUp;

				// don't extend the line if we're rendering dashes because we
				// won't be rendering the endcaps
				#ifndef USE_DASH

					// cap extension
					worldPos.xyz += position.y < 0.5 ? - hw * worldDir : hw * worldDir;

					// add width to the box
					worldPos.xyz += worldFwd * hw;

					// endcaps
					if ( position.y > 1.0 || position.y < 0.0 ) {

						worldPos.xyz -= worldFwd * 2.0 * hw;

					}

				#endif

				// project the worldpos
				vec4 clip = projectionMatrix * worldPos;

				// shift the depth of the projected points so the line
				// segments overlap neatly
				vec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;
				clip.z = clipPose.z * clip.w;

			#else

				vec2 offset = vec2( dir.y, - dir.x );
				// undo aspect ratio adjustment
				dir.x /= aspect;
				offset.x /= aspect;

				// sign flip
				if ( position.x < 0.0 ) offset *= - 1.0;

				// endcaps
				if ( position.y < 0.0 ) {

					offset += - dir;

				} else if ( position.y > 1.0 ) {

					offset += dir;

				}

				// adjust for linewidth
				offset *= linewidth;

				// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...
				offset /= resolution.y;

				// select end
				vec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;

				// back to clip space
				offset *= clip.w;

				clip.xy += offset;

			#endif

			gl_Position = clip;

			vec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation

			#include <logdepthbuf_vertex>
			#include <clipping_planes_vertex>
			#include <fog_vertex>

		}
		`,fragmentShader:`
		uniform vec3 diffuse;
		uniform float opacity;
		uniform float linewidth;

		#ifdef USE_DASH

			uniform float dashOffset;
			uniform float dashSize;
			uniform float gapSize;

		#endif

		varying float vLineDistance;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#include <common>
		#include <color_pars_fragment>
		#include <fog_pars_fragment>
		#include <logdepthbuf_pars_fragment>
		#include <clipping_planes_pars_fragment>

		vec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {

			float mua;
			float mub;

			vec3 p13 = p1 - p3;
			vec3 p43 = p4 - p3;

			vec3 p21 = p2 - p1;

			float d1343 = dot( p13, p43 );
			float d4321 = dot( p43, p21 );
			float d1321 = dot( p13, p21 );
			float d4343 = dot( p43, p43 );
			float d2121 = dot( p21, p21 );

			float denom = d2121 * d4343 - d4321 * d4321;

			float numer = d1343 * d4321 - d1321 * d4343;

			mua = numer / denom;
			mua = clamp( mua, 0.0, 1.0 );
			mub = ( d1343 + d4321 * ( mua ) ) / d4343;
			mub = clamp( mub, 0.0, 1.0 );

			return vec2( mua, mub );

		}

		void main() {

			#include <clipping_planes_fragment>

			#ifdef USE_DASH

				if ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps

				if ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX

			#endif

			float alpha = opacity;

			#ifdef WORLD_UNITS

				// Find the closest points on the view ray and the line segment
				vec3 rayEnd = normalize( worldPos.xyz ) * 1e5;
				vec3 lineDir = worldEnd - worldStart;
				vec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );

				vec3 p1 = worldStart + lineDir * params.x;
				vec3 p2 = rayEnd * params.y;
				vec3 delta = p1 - p2;
				float len = length( delta );
				float norm = len / linewidth;

				#ifndef USE_DASH

					#ifdef USE_ALPHA_TO_COVERAGE

						float dnorm = fwidth( norm );
						alpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );

					#else

						if ( norm > 0.5 ) {

							discard;

						}

					#endif

				#endif

			#else

				#ifdef USE_ALPHA_TO_COVERAGE

					// artifacts appear on some hardware if a derivative is taken within a conditional
					float a = vUv.x;
					float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
					float len2 = a * a + b * b;
					float dlen = fwidth( len2 );

					if ( abs( vUv.y ) > 1.0 ) {

						alpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );

					}

				#else

					if ( abs( vUv.y ) > 1.0 ) {

						float a = vUv.x;
						float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
						float len2 = a * a + b * b;

						if ( len2 > 1.0 ) discard;

					}

				#endif

			#endif

			vec4 diffuseColor = vec4( diffuse, alpha );

			#include <logdepthbuf_fragment>
			#include <color_fragment>

			gl_FragColor = vec4( diffuseColor.rgb, alpha );

			#include <tonemapping_fragment>
			#include <colorspace_fragment>
			#include <fog_fragment>
			#include <premultiplied_alpha_fragment>

		}
		`};let Dp=class extends wi{constructor(e){super({type:"LineMaterial",uniforms:yl.clone(oi.line.uniforms),vertexShader:oi.line.vertexShader,fragmentShader:oi.line.fragmentShader,clipping:!0}),this.isLineMaterial=!0,this.setValues(e)}get color(){return this.uniforms.diffuse.value}set color(e){this.uniforms.diffuse.value=e}get worldUnits(){return"WORLD_UNITS"in this.defines}set worldUnits(e){e===!0?this.defines.WORLD_UNITS="":delete this.defines.WORLD_UNITS}get linewidth(){return this.uniforms.linewidth.value}set linewidth(e){this.uniforms.linewidth&&(this.uniforms.linewidth.value=e)}get dashed(){return"USE_DASH"in this.defines}set dashed(e){e===!0!==this.dashed&&(this.needsUpdate=!0),e===!0?this.defines.USE_DASH="":delete this.defines.USE_DASH}get dashScale(){return this.uniforms.dashScale.value}set dashScale(e){this.uniforms.dashScale.value=e}get dashSize(){return this.uniforms.dashSize.value}set dashSize(e){this.uniforms.dashSize.value=e}get dashOffset(){return this.uniforms.dashOffset.value}set dashOffset(e){this.uniforms.dashOffset.value=e}get gapSize(){return this.uniforms.gapSize.value}set gapSize(e){this.uniforms.gapSize.value=e}get opacity(){return this.uniforms.opacity.value}set opacity(e){this.uniforms&&(this.uniforms.opacity.value=e)}get resolution(){return this.uniforms.resolution.value}set resolution(e){this.uniforms.resolution.value.copy(e)}get alphaToCoverage(){return"USE_ALPHA_TO_COVERAGE"in this.defines}set alphaToCoverage(e){this.defines&&(e===!0!==this.alphaToCoverage&&(this.needsUpdate=!0),e===!0?this.defines.USE_ALPHA_TO_COVERAGE="":delete this.defines.USE_ALPHA_TO_COVERAGE)}};const Ld=new It,Vg=new I,Gg=new I,Gn=new It,Hn=new It,hr=new It,Ud=new I,Nd=new ct,Xn=new E_,Hg=new I,Sc=new _n,Mc=new wn,ur=new It;let vr,Js;function Wg(s,e,t){return ur.set(0,0,-e,1).applyMatrix4(s.projectionMatrix),ur.multiplyScalar(1/ur.w),ur.x=Js/t.width,ur.y=Js/t.height,ur.applyMatrix4(s.projectionMatrixInverse),ur.multiplyScalar(1/ur.w),Math.abs(Math.max(ur.x,ur.y))}function F2(s,e){const t=s.matrixWorld,i=s.geometry,n=i.attributes.instanceStart,r=i.attributes.instanceEnd,o=Math.min(i.instanceCount,n.count);for(let a=0,l=o;a<l;a++){Xn.start.fromBufferAttribute(n,a),Xn.end.fromBufferAttribute(r,a),Xn.applyMatrix4(t);const c=new I,h=new I;vr.distanceSqToSegment(Xn.start,Xn.end,h,c),h.distanceTo(c)<Js*.5&&e.push({point:h,pointOnLine:c,distance:vr.origin.distanceTo(h),object:s,face:null,faceIndex:a,uv:null,uv1:null})}}function k2(s,e,t){const i=e.projectionMatrix,n=s.material.resolution,r=s.matrixWorld,o=s.geometry,a=o.attributes.instanceStart,l=o.attributes.instanceEnd,c=Math.min(o.instanceCount,a.count),h=-e.near;vr.at(1,hr),hr.w=1,hr.applyMatrix4(e.matrixWorldInverse),hr.applyMatrix4(i),hr.multiplyScalar(1/hr.w),hr.x*=n.x/2,hr.y*=n.y/2,hr.z=0,Ud.copy(hr),Nd.multiplyMatrices(e.matrixWorldInverse,r);for(let u=0,d=c;u<d;u++){if(Gn.fromBufferAttribute(a,u),Hn.fromBufferAttribute(l,u),Gn.w=1,Hn.w=1,Gn.applyMatrix4(Nd),Hn.applyMatrix4(Nd),Gn.z>h&&Hn.z>h)continue;if(Gn.z>h){const g=Gn.z-Hn.z,x=(Gn.z-h)/g;Gn.lerp(Hn,x)}else if(Hn.z>h){const g=Hn.z-Gn.z,x=(Hn.z-h)/g;Hn.lerp(Gn,x)}Gn.applyMatrix4(i),Hn.applyMatrix4(i),Gn.multiplyScalar(1/Gn.w),Hn.multiplyScalar(1/Hn.w),Gn.x*=n.x/2,Gn.y*=n.y/2,Hn.x*=n.x/2,Hn.y*=n.y/2,Xn.start.copy(Gn),Xn.start.z=0,Xn.end.copy(Hn),Xn.end.z=0;const f=Xn.closestPointToPointParameter(Ud,!0);Xn.at(f,Hg);const p=gr.lerp(Gn.z,Hn.z,f),v=p>=-1&&p<=1,m=Ud.distanceTo(Hg)<Js*.5;if(v&&m){Xn.start.fromBufferAttribute(a,u),Xn.end.fromBufferAttribute(l,u),Xn.start.applyMatrix4(r),Xn.end.applyMatrix4(r);const g=new I,x=new I;vr.distanceSqToSegment(Xn.start,Xn.end,x,g),t.push({point:x,pointOnLine:g,distance:vr.origin.distanceTo(x),object:s,face:null,faceIndex:u,uv:null,uv1:null})}}}class B2 extends ze{constructor(e=new X_,t=new Dp({color:Math.random()*16777215})){super(e,t),this.isLineSegments2=!0,this.type="LineSegments2"}computeLineDistances(){const e=this.geometry,t=e.attributes.instanceStart,i=e.attributes.instanceEnd,n=new Float32Array(2*t.count);for(let o=0,a=0,l=t.count;o<l;o++,a+=2)Vg.fromBufferAttribute(t,o),Gg.fromBufferAttribute(i,o),n[a]=a===0?0:n[a-1],n[a+1]=n[a]+Vg.distanceTo(Gg);const r=new Uh(n,2,1);return e.setAttribute("instanceDistanceStart",new Li(r,1,0)),e.setAttribute("instanceDistanceEnd",new Li(r,1,1)),this}raycast(e,t){const i=this.material.worldUnits,n=e.camera;n===null&&!i&&console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.');const r=e.params.Line2!==void 0&&e.params.Line2.threshold||0;vr=e.ray;const o=this.matrixWorld,a=this.geometry,l=this.material;Js=l.linewidth+r,a.boundingSphere===null&&a.computeBoundingSphere(),Mc.copy(a.boundingSphere).applyMatrix4(o);let c;if(i)c=Js*.5;else{const u=Math.max(n.near,Mc.distanceToPoint(vr.origin));c=Wg(n,u,l.resolution)}if(Mc.radius+=c,vr.intersectsSphere(Mc)===!1)return;a.boundingBox===null&&a.computeBoundingBox(),Sc.copy(a.boundingBox).applyMatrix4(o);let h;if(i)h=Js*.5;else{const u=Math.max(n.near,Sc.distanceToPoint(vr.origin));h=Wg(n,u,l.resolution)}Sc.expandByScalar(h),vr.intersectsBox(Sc)!==!1&&(i?F2(this,t):k2(this,n,t))}onBeforeRender(e){const t=this.material.uniforms;t&&t.resolution&&(e.getViewport(Ld),this.material.uniforms.resolution.value.set(Ld.z,Ld.w))}}class j_ extends X_{constructor(){super(),this.isLineGeometry=!0,this.type="LineGeometry"}setPositions(e){const t=e.length-3,i=new Float32Array(2*t);for(let n=0;n<t;n+=3)i[2*n]=e[n],i[2*n+1]=e[n+1],i[2*n+2]=e[n+2],i[2*n+3]=e[n+3],i[2*n+4]=e[n+4],i[2*n+5]=e[n+5];return super.setPositions(i),this}setColors(e){const t=e.length-3,i=new Float32Array(2*t);for(let n=0;n<t;n+=3)i[2*n]=e[n],i[2*n+1]=e[n+1],i[2*n+2]=e[n+2],i[2*n+3]=e[n+3],i[2*n+4]=e[n+4],i[2*n+5]=e[n+5];return super.setColors(i),this}setFromPoints(e){const t=e.length-1,i=new Float32Array(6*t);for(let n=0;n<t;n++)i[6*n]=e[n].x,i[6*n+1]=e[n].y,i[6*n+2]=e[n].z||0,i[6*n+3]=e[n+1].x,i[6*n+4]=e[n+1].y,i[6*n+5]=e[n+1].z||0;return super.setPositions(i),this}fromLine(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}}class z2 extends B2{constructor(e=new j_,t=new Dp({color:Math.random()*16777215})){super(e,t),this.isLine2=!0,this.type="Line2"}}const V2=s=>{const e=new Ge,t=[],i=[],{isSphere:n}=s;if(hl.forEach((a,l)=>{const{enabled:c,line:h,scale:u,color:d}=s[a];if(!c||!h)return;const f=l<3?1:-1,p=(n?W_-u/2:.975)*f;t.push(a.includes("x")?p:0,a.includes("y")?p:0,a.includes("z")?p:0,0,0,0);const v=e.set(d).toArray();i.push(...v,...v)}),!t.length)return null;const r=new j_().setPositions(t).setColors(i),o=new Dp({linewidth:s.lineWidth,vertexColors:!0,resolution:new Me(window.innerWidth,window.innerHeight)});return new z2(r,o).computeLineDistances()},G2=s=>{const{corners:e,edges:t}=s,i=[],n=P2(s),r=D2(s,n);i.push(...r),e.enabled&&i.push(...L2(s,n)),t.enabled&&i.push(...U2(s,n,e.enabled?7:6));const o=O2(r,s),a=V2(s);return[i,o,a]},Ma=(s,e=!0)=>{const{material:t,userData:i}=s,{opacity:n,color:r,scale:o}=e?i.hover:i;s.scale.setScalar(o),t.opacity=n,t.map?I2(t.map,e):t.color.set(r)},Uo=new ct,Xg=new Nh,H2=new Me,Ds=new I,jg=new It;class W2 extends Lt{constructor(e,t,i={}){super(),qt(this,"enabled",!0),qt(this,"camera"),qt(this,"renderer"),qt(this,"options"),qt(this,"target",new I),qt(this,"animated",!0),qt(this,"speed",1),qt(this,"animating",!1),qt(this,"_options"),qt(this,"_intersections"),qt(this,"_background",null),qt(this,"_viewport",[0,0,0,0]),qt(this,"_originalViewport",[0,0,0,0]),qt(this,"_originalScissor",[0,0,0,0]),qt(this,"_scene"),qt(this,"_camera"),qt(this,"_container"),qt(this,"_domElement"),qt(this,"_domRect"),qt(this,"_dragging",!1),qt(this,"_distance",0),qt(this,"_clock",new vp),qt(this,"_targetQuaternion",new Ht),qt(this,"_quaternionStart",new Ht),qt(this,"_quaternionEnd",new Ht),qt(this,"_pointerStart",new Me),qt(this,"_focus",null),qt(this,"_placement"),qt(this,"_controls"),qt(this,"_controlsListeners"),this.camera=e,this.renderer=t,this._scene=new bl().add(this),this.set(i)}get placement(){return this._placement}set placement(e){this._placement=G_(this._domElement,e),this.domUpdate()}set(e={}){this.dispose(),this.options=e,this._options=R2(e),this._camera=this._options.isSphere?new hs(-1.8,1.8,1.8,-1.8,5,10):new Sn(26,1,5,10),this._camera.position.set(0,0,7);const[t,i,n]=G2(this._options);i&&this.add(i),n&&this.add(n),this.add(...t),this._background=i,this._intersections=t;const{container:r,animated:o,speed:a}=this._options;return this.animated=o,this.speed=a,this._container=r?S2(r):document.body,this._domElement=b2(this._options),this._domElement.onpointerdown=l=>this._onPointerDown(l),this._domElement.onpointermove=l=>this._onPointerMove(l),this._domElement.onpointerleave=()=>this._onPointerLeave(),this._container.appendChild(this._domElement),this._controls&&this.attachControls(this._controls),this.update(),this._updateOrientation(!0),this}render(){this.animating&&this._animate();const{renderer:e,_viewport:t}=this,i=e.getScissorTest(),n=e.autoClear;return e.autoClear=!1,e.setViewport(...t),i&&e.setScissor(...t),e.clear(!1,!0,!1),e.render(this._scene,this._camera),e.setViewport(...this._originalViewport),i&&e.setScissor(...this._originalScissor),e.autoClear=n,this}domUpdate(){this._domRect=this._domElement.getBoundingClientRect();const e=this.renderer,t=this._domRect,i=e.domElement.getBoundingClientRect();return this._viewport.splice(0,4,t.left-i.left,e.domElement.clientHeight-(t.top-i.top+t.height),t.width,t.height),e.getViewport(jg).toArray(this._originalViewport),e.getScissorTest()&&e.getScissor(jg).toArray(this._originalScissor),this}cameraUpdate(){return this._updateOrientation(),this}update(e=!0){return e&&this._controls&&this._controls.update(),this.domUpdate().cameraUpdate()}attachControls(e){return this.detachControls(),this.target=e.target,this._controlsListeners={start:()=>e.enabled=!1,end:()=>e.enabled=!0,change:()=>this.update(!1)},this.addEventListener("start",this._controlsListeners.start),this.addEventListener("end",this._controlsListeners.end),e.addEventListener("change",this._controlsListeners.change),this._controls=e,this}detachControls(){if(!(!this._controlsListeners||!this._controls))return this.target=new I().copy(this._controls.target),this.removeEventListener("start",this._controlsListeners.start),this.removeEventListener("end",this._controlsListeners.end),this._controls.removeEventListener("change",this._controlsListeners.change),this._controlsListeners=void 0,this._controls=void 0,this}dispose(){var e;this.detachControls(),this.children.forEach(t=>{var i,n,r,o;this.remove(t);const a=t;(i=a.material)==null||i.dispose(),(r=(n=a.material)==null?void 0:n.map)==null||r.dispose(),(o=a.geometry)==null||o.dispose()}),(e=this._domElement)==null||e.remove()}_updateOrientation(e=!0){e&&(this.quaternion.copy(this.camera.quaternion).invert(),this.updateMatrixWorld()),Ug(this._options,this._intersections,this.camera)}_animate(){const{position:e,quaternion:t}=this.camera;if(e.set(0,0,1),!this.animated){e.applyQuaternion(this._quaternionEnd).multiplyScalar(this._distance).add(this.target),t.copy(this._targetQuaternion),this._updateOrientation(),this.animating=!1,this.dispatchEvent({type:"change"}),this.dispatchEvent({type:"end"});return}this._controls&&(this._controls.enabled=!1);const i=this._clock.getDelta()*E2*this.speed;this._quaternionStart.rotateTowards(this._quaternionEnd,i),e.applyQuaternion(this._quaternionStart).multiplyScalar(this._distance).add(this.target),t.rotateTowards(this._targetQuaternion,i),this._updateOrientation(),requestAnimationFrame(()=>this.dispatchEvent({type:"change"})),this._quaternionStart.angleTo(this._quaternionEnd)<Dd&&(this._controls&&(this._controls.enabled=!0),this.animating=!1,this.dispatchEvent({type:"end"}))}_setOrientation(e){const t=this.camera,i=this.target;Ds.copy(e).multiplyScalar(this._distance),Uo.setPosition(Ds).lookAt(Ds,this.position,this.up),this._targetQuaternion.setFromRotationMatrix(Uo),Ds.add(i),Uo.lookAt(Ds,i,this.up),this._quaternionEnd.setFromRotationMatrix(Uo),Uo.setPosition(t.position).lookAt(t.position,i,this.up),this._quaternionStart.setFromRotationMatrix(Uo),this.animating=!0,this._clock.start(),this.dispatchEvent({type:"start"})}_onPointerDown(e){if(!this.enabled)return;const t=l=>{if(!this._dragging){if(w2(l,this._pointerStart))return;this._dragging=!0}const c=H2.set(l.clientX,l.clientY).sub(this._pointerStart).multiplyScalar(1/this._domRect.width*Math.PI),h=this.coordinateConversion(Ds.subVectors(this.camera.position,this.target)),u=Xg.setFromVector3(h);u.theta=o-c.x,u.phi=_f(a-c.y,Dd,Math.PI-Dd),this.coordinateConversion(this.camera.position.setFromSpherical(u),!0).add(this.target),this.camera.lookAt(this.target),this.quaternion.copy(this.camera.quaternion).invert(),this._updateOrientation(!1),this.dispatchEvent({type:"change"})},i=()=>{if(document.removeEventListener("pointermove",t,!1),document.removeEventListener("pointerup",i,!1),!this._dragging)return this._handleClick(e);this._focus&&(Ma(this._focus,!1),this._focus=null),this._dragging=!1,this.dispatchEvent({type:"end"})};if(this.animating)return;e.preventDefault(),this._pointerStart.set(e.clientX,e.clientY);const n=this.coordinateConversion(Ds.subVectors(this.camera.position,this.target)),r=Xg.setFromVector3(n),o=r.theta,a=r.phi;this._distance=r.radius,document.addEventListener("pointermove",t,!1),document.addEventListener("pointerup",i,!1),this.dispatchEvent({type:"start"})}coordinateConversion(e,t=!1){const{x:i,y:n,z:r}=e,o=Lt.DEFAULT_UP;return o.x===1?t?e.set(n,r,i):e.set(r,i,n):o.z===1?t?e.set(r,i,n):e.set(n,r,i):e}_onPointerMove(e){!this.enabled||this._dragging||(this._background&&kg(this._background,!0),this._handleHover(e))}_onPointerLeave(){!this.enabled||this._dragging||(this._background&&kg(this._background,!1),this._focus&&Ma(this._focus,!1),this._domElement.style.cursor="")}_handleClick(e){const t=Fg(e,this._domRect,this._camera,this._intersections);this._focus&&(Ma(this._focus,!1),this._focus=null),t&&(this._setOrientation(t.object.position),this.dispatchEvent({type:"change"}))}_handleHover(e){const t=Fg(e,this._domRect,this._camera,this._intersections),i=(t==null?void 0:t.object)||null;this._focus!==i&&(this._domElement.style.cursor=i?"pointer":"",this._focus&&Ma(this._focus,!1),(this._focus=i)?Ma(i,!0):Ug(this._options,this._intersections,this.camera))}}const Yg={type:"change"},Lp={type:"start"},Y_={type:"end"},wc=new as,qg=new mr,X2=Math.cos(70*gr.DEG2RAD),Rn=new I,pi=2*Math.PI,tn={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},Od=1e-6;let q_=class extends yu{constructor(e,t=null){super(e,t),this.state=tn.NONE,this.target=new I,this.cursor=new I,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.keyRotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:Ui.ROTATE,MIDDLE:Ui.DOLLY,RIGHT:Ui.PAN},this.touches={ONE:Gs.ROTATE,TWO:Gs.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new I,this._lastQuaternion=new Ht,this._lastTargetPosition=new I,this._quat=new Ht().setFromUnitVectors(e.up,new I(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new Nh,this._sphericalDelta=new Nh,this._scale=1,this._panOffset=new I,this._rotateStart=new Me,this._rotateEnd=new Me,this._rotateDelta=new Me,this._panStart=new Me,this._panEnd=new Me,this._panDelta=new Me,this._dollyStart=new Me,this._dollyEnd=new Me,this._dollyDelta=new Me,this._dollyDirection=new I,this._mouse=new Me,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=Y2.bind(this),this._onPointerDown=j2.bind(this),this._onPointerUp=q2.bind(this),this._onContextMenu=tC.bind(this),this._onMouseWheel=K2.bind(this),this._onKeyDown=Q2.bind(this),this._onTouchStart=$2.bind(this),this._onTouchMove=eC.bind(this),this._onMouseDown=Z2.bind(this),this._onMouseMove=J2.bind(this),this._interceptControlDown=nC.bind(this),this._interceptControlUp=iC.bind(this),this.domElement!==null&&this.connect(this.domElement),this.update()}connect(e){super.connect(e),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(e){e.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=e}stopListenToKeyEvents(){this._domElementKeyEvents!==null&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(Yg),this.update(),this.state=tn.NONE}update(e=null){const t=this.object.position;Rn.copy(t).sub(this.target),Rn.applyQuaternion(this._quat),this._spherical.setFromVector3(Rn),this.autoRotate&&this.state===tn.NONE&&this._rotateLeft(this._getAutoRotationAngle(e)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let i=this.minAzimuthAngle,n=this.maxAzimuthAngle;isFinite(i)&&isFinite(n)&&(i<-Math.PI?i+=pi:i>Math.PI&&(i-=pi),n<-Math.PI?n+=pi:n>Math.PI&&(n-=pi),i<=n?this._spherical.theta=Math.max(i,Math.min(n,this._spherical.theta)):this._spherical.theta=this._spherical.theta>(i+n)/2?Math.max(i,this._spherical.theta):Math.min(n,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),this.enableDamping===!0?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let r=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const o=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),r=o!=this._spherical.radius}if(Rn.setFromSpherical(this._spherical),Rn.applyQuaternion(this._quatInverse),t.copy(this.target).add(Rn),this.object.lookAt(this.target),this.enableDamping===!0?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let o=null;if(this.object.isPerspectiveCamera){const a=Rn.length();o=this._clampDistance(a*this._scale);const l=a-o;this.object.position.addScaledVector(this._dollyDirection,l),this.object.updateMatrixWorld(),r=!!l}else if(this.object.isOrthographicCamera){const a=new I(this._mouse.x,this._mouse.y,0);a.unproject(this.object);const l=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),r=l!==this.object.zoom;const c=new I(this._mouse.x,this._mouse.y,0);c.unproject(this.object),this.object.position.sub(c).add(a),this.object.updateMatrixWorld(),o=Rn.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;o!==null&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(o).add(this.object.position):(wc.origin.copy(this.object.position),wc.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(wc.direction))<X2?this.object.lookAt(this.target):(qg.setFromNormalAndCoplanarPoint(this.object.up,this.target),wc.intersectPlane(qg,this.target))))}else if(this.object.isOrthographicCamera){const o=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),o!==this.object.zoom&&(this.object.updateProjectionMatrix(),r=!0)}return this._scale=1,this._performCursorZoom=!1,r||this._lastPosition.distanceToSquared(this.object.position)>Od||8*(1-this._lastQuaternion.dot(this.object.quaternion))>Od||this._lastTargetPosition.distanceToSquared(this.target)>Od?(this.dispatchEvent(Yg),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0):!1}_getAutoRotationAngle(e){return e!==null?pi/60*this.autoRotateSpeed*e:pi/60/60*this.autoRotateSpeed}_getZoomScale(e){const t=Math.abs(e*.01);return Math.pow(.95,this.zoomSpeed*t)}_rotateLeft(e){this._sphericalDelta.theta-=e}_rotateUp(e){this._sphericalDelta.phi-=e}_panLeft(e,t){Rn.setFromMatrixColumn(t,0),Rn.multiplyScalar(-e),this._panOffset.add(Rn)}_panUp(e,t){this.screenSpacePanning===!0?Rn.setFromMatrixColumn(t,1):(Rn.setFromMatrixColumn(t,0),Rn.crossVectors(this.object.up,Rn)),Rn.multiplyScalar(e),this._panOffset.add(Rn)}_pan(e,t){const i=this.domElement;if(this.object.isPerspectiveCamera){const n=this.object.position;Rn.copy(n).sub(this.target);let r=Rn.length();r*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*e*r/i.clientHeight,this.object.matrix),this._panUp(2*t*r/i.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(e*(this.object.right-this.object.left)/this.object.zoom/i.clientWidth,this.object.matrix),this._panUp(t*(this.object.top-this.object.bottom)/this.object.zoom/i.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(e,t){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const i=this.domElement.getBoundingClientRect(),n=e-i.left,r=t-i.top,o=i.width,a=i.height;this._mouse.x=n/o*2-1,this._mouse.y=-(r/a)*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(e){return Math.max(this.minDistance,Math.min(this.maxDistance,e))}_handleMouseDownRotate(e){this._rotateStart.set(e.clientX,e.clientY)}_handleMouseDownDolly(e){this._updateZoomParameters(e.clientX,e.clientX),this._dollyStart.set(e.clientX,e.clientY)}_handleMouseDownPan(e){this._panStart.set(e.clientX,e.clientY)}_handleMouseMoveRotate(e){this._rotateEnd.set(e.clientX,e.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(pi*this._rotateDelta.x/t.clientHeight),this._rotateUp(pi*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(e){this._dollyEnd.set(e.clientX,e.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(e){this._panEnd.set(e.clientX,e.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(e){this._updateZoomParameters(e.clientX,e.clientY),e.deltaY<0?this._dollyIn(this._getZoomScale(e.deltaY)):e.deltaY>0&&this._dollyOut(this._getZoomScale(e.deltaY)),this.update()}_handleKeyDown(e){let t=!1;switch(e.code){case this.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(pi*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),t=!0;break;case this.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(-pi*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),t=!0;break;case this.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(pi*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),t=!0;break;case this.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(-pi*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),t=!0;break}t&&(e.preventDefault(),this.update())}_handleTouchStartRotate(e){if(this._pointers.length===1)this._rotateStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),i=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);this._rotateStart.set(i,n)}}_handleTouchStartPan(e){if(this._pointers.length===1)this._panStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),i=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);this._panStart.set(i,n)}}_handleTouchStartDolly(e){const t=this._getSecondPointerPosition(e),i=e.pageX-t.x,n=e.pageY-t.y,r=Math.sqrt(i*i+n*n);this._dollyStart.set(0,r)}_handleTouchStartDollyPan(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enablePan&&this._handleTouchStartPan(e)}_handleTouchStartDollyRotate(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enableRotate&&this._handleTouchStartRotate(e)}_handleTouchMoveRotate(e){if(this._pointers.length==1)this._rotateEnd.set(e.pageX,e.pageY);else{const i=this._getSecondPointerPosition(e),n=.5*(e.pageX+i.x),r=.5*(e.pageY+i.y);this._rotateEnd.set(n,r)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(pi*this._rotateDelta.x/t.clientHeight),this._rotateUp(pi*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(e){if(this._pointers.length===1)this._panEnd.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),i=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);this._panEnd.set(i,n)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(e){const t=this._getSecondPointerPosition(e),i=e.pageX-t.x,n=e.pageY-t.y,r=Math.sqrt(i*i+n*n);this._dollyEnd.set(0,r),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const o=(e.pageX+t.x)*.5,a=(e.pageY+t.y)*.5;this._updateZoomParameters(o,a)}_handleTouchMoveDollyPan(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enablePan&&this._handleTouchMovePan(e)}_handleTouchMoveDollyRotate(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enableRotate&&this._handleTouchMoveRotate(e)}_addPointer(e){this._pointers.push(e.pointerId)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId){this._pointers.splice(t,1);return}}_isTrackingPointer(e){for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId)return!0;return!1}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new Me,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[t]}_customWheelEvent(e){const t=e.deltaMode,i={clientX:e.clientX,clientY:e.clientY,deltaY:e.deltaY};switch(t){case 1:i.deltaY*=16;break;case 2:i.deltaY*=100;break}return e.ctrlKey&&!this._controlActive&&(i.deltaY*=10),i}};function j2(s){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(s.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),!this._isTrackingPointer(s)&&(this._addPointer(s),s.pointerType==="touch"?this._onTouchStart(s):this._onMouseDown(s)))}function Y2(s){this.enabled!==!1&&(s.pointerType==="touch"?this._onTouchMove(s):this._onMouseMove(s))}function q2(s){switch(this._removePointer(s),this._pointers.length){case 0:this.domElement.releasePointerCapture(s.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(Y_),this.state=tn.NONE;break;case 1:const e=this._pointers[0],t=this._pointerPositions[e];this._onTouchStart({pointerId:e,pageX:t.x,pageY:t.y});break}}function Z2(s){let e;switch(s.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case Ui.DOLLY:if(this.enableZoom===!1)return;this._handleMouseDownDolly(s),this.state=tn.DOLLY;break;case Ui.ROTATE:if(s.ctrlKey||s.metaKey||s.shiftKey){if(this.enablePan===!1)return;this._handleMouseDownPan(s),this.state=tn.PAN}else{if(this.enableRotate===!1)return;this._handleMouseDownRotate(s),this.state=tn.ROTATE}break;case Ui.PAN:if(s.ctrlKey||s.metaKey||s.shiftKey){if(this.enableRotate===!1)return;this._handleMouseDownRotate(s),this.state=tn.ROTATE}else{if(this.enablePan===!1)return;this._handleMouseDownPan(s),this.state=tn.PAN}break;default:this.state=tn.NONE}this.state!==tn.NONE&&this.dispatchEvent(Lp)}function J2(s){switch(this.state){case tn.ROTATE:if(this.enableRotate===!1)return;this._handleMouseMoveRotate(s);break;case tn.DOLLY:if(this.enableZoom===!1)return;this._handleMouseMoveDolly(s);break;case tn.PAN:if(this.enablePan===!1)return;this._handleMouseMovePan(s);break}}function K2(s){this.enabled===!1||this.enableZoom===!1||this.state!==tn.NONE||(s.preventDefault(),this.dispatchEvent(Lp),this._handleMouseWheel(this._customWheelEvent(s)),this.dispatchEvent(Y_))}function Q2(s){this.enabled!==!1&&this._handleKeyDown(s)}function $2(s){switch(this._trackPointer(s),this._pointers.length){case 1:switch(this.touches.ONE){case Gs.ROTATE:if(this.enableRotate===!1)return;this._handleTouchStartRotate(s),this.state=tn.TOUCH_ROTATE;break;case Gs.PAN:if(this.enablePan===!1)return;this._handleTouchStartPan(s),this.state=tn.TOUCH_PAN;break;default:this.state=tn.NONE}break;case 2:switch(this.touches.TWO){case Gs.DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchStartDollyPan(s),this.state=tn.TOUCH_DOLLY_PAN;break;case Gs.DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchStartDollyRotate(s),this.state=tn.TOUCH_DOLLY_ROTATE;break;default:this.state=tn.NONE}break;default:this.state=tn.NONE}this.state!==tn.NONE&&this.dispatchEvent(Lp)}function eC(s){switch(this._trackPointer(s),this.state){case tn.TOUCH_ROTATE:if(this.enableRotate===!1)return;this._handleTouchMoveRotate(s),this.update();break;case tn.TOUCH_PAN:if(this.enablePan===!1)return;this._handleTouchMovePan(s),this.update();break;case tn.TOUCH_DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchMoveDollyPan(s),this.update();break;case tn.TOUCH_DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchMoveDollyRotate(s),this.update();break;default:this.state=tn.NONE}}function tC(s){this.enabled!==!1&&s.preventDefault()}function nC(s){s.key==="Control"&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function iC(s){s.key==="Control"&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}const Fd={type:"change"},Up={type:"start"},Np={type:"end"},Zg=1e-6,Xt={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM_PAN:4},Ec=new Me,Qr=new Me,rC=new I,Tc=new I,kd=new I,No=new Ht,Jg=new I,Ac=new I,Bd=new I,Cc=new I;class sC extends yu{constructor(e,t=null){super(e,t),this.screen={left:0,top:0,width:0,height:0},this.rotateSpeed=1,this.zoomSpeed=1.2,this.panSpeed=.3,this.noRotate=!1,this.noZoom=!1,this.noPan=!1,this.staticMoving=!1,this.dynamicDampingFactor=.2,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.keys=["KeyA","KeyS","KeyD"],this.mouseButtons={LEFT:Ui.ROTATE,MIDDLE:Ui.DOLLY,RIGHT:Ui.PAN},this.target=new I,this.state=Xt.NONE,this.keyState=Xt.NONE,this._lastPosition=new I,this._lastZoom=1,this._touchZoomDistanceStart=0,this._touchZoomDistanceEnd=0,this._lastAngle=0,this._eye=new I,this._movePrev=new Me,this._moveCurr=new Me,this._lastAxis=new I,this._zoomStart=new Me,this._zoomEnd=new Me,this._panStart=new Me,this._panEnd=new Me,this._pointers=[],this._pointerPositions={},this._onPointerMove=aC.bind(this),this._onPointerDown=oC.bind(this),this._onPointerUp=lC.bind(this),this._onPointerCancel=cC.bind(this),this._onContextMenu=gC.bind(this),this._onMouseWheel=mC.bind(this),this._onKeyDown=uC.bind(this),this._onKeyUp=hC.bind(this),this._onTouchStart=vC.bind(this),this._onTouchMove=_C.bind(this),this._onTouchEnd=yC.bind(this),this._onMouseDown=dC.bind(this),this._onMouseMove=fC.bind(this),this._onMouseUp=pC.bind(this),this._target0=this.target.clone(),this._position0=this.object.position.clone(),this._up0=this.object.up.clone(),this._zoom0=this.object.zoom,t!==null&&(this.connect(t),this.handleResize()),this.update()}connect(e){super.connect(e),window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerCancel),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="none"}disconnect(){window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("keyup",this._onKeyUp),this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerCancel),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}handleResize(){const e=this.domElement.getBoundingClientRect(),t=this.domElement.ownerDocument.documentElement;this.screen.left=e.left+window.pageXOffset-t.clientLeft,this.screen.top=e.top+window.pageYOffset-t.clientTop,this.screen.width=e.width,this.screen.height=e.height}update(){this._eye.subVectors(this.object.position,this.target),this.noRotate||this._rotateCamera(),this.noZoom||this._zoomCamera(),this.noPan||this._panCamera(),this.object.position.addVectors(this.target,this._eye),this.object.isPerspectiveCamera?(this._checkDistances(),this.object.lookAt(this.target),this._lastPosition.distanceToSquared(this.object.position)>Zg&&(this.dispatchEvent(Fd),this._lastPosition.copy(this.object.position))):this.object.isOrthographicCamera?(this.object.lookAt(this.target),(this._lastPosition.distanceToSquared(this.object.position)>Zg||this._lastZoom!==this.object.zoom)&&(this.dispatchEvent(Fd),this._lastPosition.copy(this.object.position),this._lastZoom=this.object.zoom)):console.warn("THREE.TrackballControls: Unsupported camera type.")}reset(){this.state=Xt.NONE,this.keyState=Xt.NONE,this.target.copy(this._target0),this.object.position.copy(this._position0),this.object.up.copy(this._up0),this.object.zoom=this._zoom0,this.object.updateProjectionMatrix(),this._eye.subVectors(this.object.position,this.target),this.object.lookAt(this.target),this.dispatchEvent(Fd),this._lastPosition.copy(this.object.position),this._lastZoom=this.object.zoom}_panCamera(){if(Qr.copy(this._panEnd).sub(this._panStart),Qr.lengthSq()){if(this.object.isOrthographicCamera){const e=(this.object.right-this.object.left)/this.object.zoom/this.domElement.clientWidth,t=(this.object.top-this.object.bottom)/this.object.zoom/this.domElement.clientWidth;Qr.x*=e,Qr.y*=t}Qr.multiplyScalar(this._eye.length()*this.panSpeed),Tc.copy(this._eye).cross(this.object.up).setLength(Qr.x),Tc.add(rC.copy(this.object.up).setLength(Qr.y)),this.object.position.add(Tc),this.target.add(Tc),this.staticMoving?this._panStart.copy(this._panEnd):this._panStart.add(Qr.subVectors(this._panEnd,this._panStart).multiplyScalar(this.dynamicDampingFactor))}}_rotateCamera(){Cc.set(this._moveCurr.x-this._movePrev.x,this._moveCurr.y-this._movePrev.y,0);let e=Cc.length();e?(this._eye.copy(this.object.position).sub(this.target),Jg.copy(this._eye).normalize(),Ac.copy(this.object.up).normalize(),Bd.crossVectors(Ac,Jg).normalize(),Ac.setLength(this._moveCurr.y-this._movePrev.y),Bd.setLength(this._moveCurr.x-this._movePrev.x),Cc.copy(Ac.add(Bd)),kd.crossVectors(Cc,this._eye).normalize(),e*=this.rotateSpeed,No.setFromAxisAngle(kd,e),this._eye.applyQuaternion(No),this.object.up.applyQuaternion(No),this._lastAxis.copy(kd),this._lastAngle=e):!this.staticMoving&&this._lastAngle&&(this._lastAngle*=Math.sqrt(1-this.dynamicDampingFactor),this._eye.copy(this.object.position).sub(this.target),No.setFromAxisAngle(this._lastAxis,this._lastAngle),this._eye.applyQuaternion(No),this.object.up.applyQuaternion(No)),this._movePrev.copy(this._moveCurr)}_zoomCamera(){let e;this.state===Xt.TOUCH_ZOOM_PAN?(e=this._touchZoomDistanceStart/this._touchZoomDistanceEnd,this._touchZoomDistanceStart=this._touchZoomDistanceEnd,this.object.isPerspectiveCamera?this._eye.multiplyScalar(e):this.object.isOrthographicCamera?(this.object.zoom=gr.clamp(this.object.zoom/e,this.minZoom,this.maxZoom),this._lastZoom!==this.object.zoom&&this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")):(e=1+(this._zoomEnd.y-this._zoomStart.y)*this.zoomSpeed,e!==1&&e>0&&(this.object.isPerspectiveCamera?this._eye.multiplyScalar(e):this.object.isOrthographicCamera?(this.object.zoom=gr.clamp(this.object.zoom/e,this.minZoom,this.maxZoom),this._lastZoom!==this.object.zoom&&this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")),this.staticMoving?this._zoomStart.copy(this._zoomEnd):this._zoomStart.y+=(this._zoomEnd.y-this._zoomStart.y)*this.dynamicDampingFactor)}_getMouseOnScreen(e,t){return Ec.set((e-this.screen.left)/this.screen.width,(t-this.screen.top)/this.screen.height),Ec}_getMouseOnCircle(e,t){return Ec.set((e-this.screen.width*.5-this.screen.left)/(this.screen.width*.5),(this.screen.height+2*(this.screen.top-t))/this.screen.width),Ec}_addPointer(e){this._pointers.push(e)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t].pointerId==e.pointerId){this._pointers.splice(t,1);return}}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new Me,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0].pointerId?this._pointers[1]:this._pointers[0];return this._pointerPositions[t.pointerId]}_checkDistances(){(!this.noZoom||!this.noPan)&&(this._eye.lengthSq()>this.maxDistance*this.maxDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.maxDistance)),this._zoomStart.copy(this._zoomEnd)),this._eye.lengthSq()<this.minDistance*this.minDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.minDistance)),this._zoomStart.copy(this._zoomEnd)))}}function oC(s){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(s.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),this._addPointer(s),s.pointerType==="touch"?this._onTouchStart(s):this._onMouseDown(s))}function aC(s){this.enabled!==!1&&(s.pointerType==="touch"?this._onTouchMove(s):this._onMouseMove(s))}function lC(s){this.enabled!==!1&&(s.pointerType==="touch"?this._onTouchEnd(s):this._onMouseUp(),this._removePointer(s),this._pointers.length===0&&(this.domElement.releasePointerCapture(s.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp)))}function cC(s){this._removePointer(s)}function hC(){this.enabled!==!1&&(this.keyState=Xt.NONE,window.addEventListener("keydown",this._onKeyDown))}function uC(s){this.enabled!==!1&&(window.removeEventListener("keydown",this._onKeyDown),this.keyState===Xt.NONE&&(s.code===this.keys[Xt.ROTATE]&&!this.noRotate?this.keyState=Xt.ROTATE:s.code===this.keys[Xt.ZOOM]&&!this.noZoom?this.keyState=Xt.ZOOM:s.code===this.keys[Xt.PAN]&&!this.noPan&&(this.keyState=Xt.PAN)))}function dC(s){let e;switch(s.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case Ui.DOLLY:this.state=Xt.ZOOM;break;case Ui.ROTATE:this.state=Xt.ROTATE;break;case Ui.PAN:this.state=Xt.PAN;break;default:this.state=Xt.NONE}const t=this.keyState!==Xt.NONE?this.keyState:this.state;t===Xt.ROTATE&&!this.noRotate?(this._moveCurr.copy(this._getMouseOnCircle(s.pageX,s.pageY)),this._movePrev.copy(this._moveCurr)):t===Xt.ZOOM&&!this.noZoom?(this._zoomStart.copy(this._getMouseOnScreen(s.pageX,s.pageY)),this._zoomEnd.copy(this._zoomStart)):t===Xt.PAN&&!this.noPan&&(this._panStart.copy(this._getMouseOnScreen(s.pageX,s.pageY)),this._panEnd.copy(this._panStart)),this.dispatchEvent(Up)}function fC(s){const e=this.keyState!==Xt.NONE?this.keyState:this.state;e===Xt.ROTATE&&!this.noRotate?(this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this._getMouseOnCircle(s.pageX,s.pageY))):e===Xt.ZOOM&&!this.noZoom?this._zoomEnd.copy(this._getMouseOnScreen(s.pageX,s.pageY)):e===Xt.PAN&&!this.noPan&&this._panEnd.copy(this._getMouseOnScreen(s.pageX,s.pageY))}function pC(){this.state=Xt.NONE,this.dispatchEvent(Np)}function mC(s){if(this.enabled!==!1&&this.noZoom!==!0){switch(s.preventDefault(),s.deltaMode){case 2:this._zoomStart.y-=s.deltaY*.025;break;case 1:this._zoomStart.y-=s.deltaY*.01;break;default:this._zoomStart.y-=s.deltaY*25e-5;break}this.dispatchEvent(Up),this.dispatchEvent(Np)}}function gC(s){this.enabled!==!1&&s.preventDefault()}function vC(s){switch(this._trackPointer(s),this._pointers.length){case 1:this.state=Xt.TOUCH_ROTATE,this._moveCurr.copy(this._getMouseOnCircle(this._pointers[0].pageX,this._pointers[0].pageY)),this._movePrev.copy(this._moveCurr);break;default:this.state=Xt.TOUCH_ZOOM_PAN;const e=this._pointers[0].pageX-this._pointers[1].pageX,t=this._pointers[0].pageY-this._pointers[1].pageY;this._touchZoomDistanceEnd=this._touchZoomDistanceStart=Math.sqrt(e*e+t*t);const i=(this._pointers[0].pageX+this._pointers[1].pageX)/2,n=(this._pointers[0].pageY+this._pointers[1].pageY)/2;this._panStart.copy(this._getMouseOnScreen(i,n)),this._panEnd.copy(this._panStart);break}this.dispatchEvent(Up)}function _C(s){switch(this._trackPointer(s),this._pointers.length){case 1:this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this._getMouseOnCircle(s.pageX,s.pageY));break;default:const e=this._getSecondPointerPosition(s),t=s.pageX-e.x,i=s.pageY-e.y;this._touchZoomDistanceEnd=Math.sqrt(t*t+i*i);const n=(s.pageX+e.x)/2,r=(s.pageY+e.y)/2;this._panEnd.copy(this._getMouseOnScreen(n,r));break}}function yC(s){switch(this._pointers.length){case 0:this.state=Xt.NONE;break;case 1:this.state=Xt.TOUCH_ROTATE,this._moveCurr.copy(this._getMouseOnCircle(s.pageX,s.pageY)),this._movePrev.copy(this._moveCurr);break;case 2:this.state=Xt.TOUCH_ZOOM_PAN;for(let e=0;e<this._pointers.length;e++)if(this._pointers[e].pointerId!==s.pointerId){const t=this._pointerPositions[this._pointers[e].pointerId];this._moveCurr.copy(this._getMouseOnCircle(t.x,t.y)),this._movePrev.copy(this._moveCurr);break}break}this.dispatchEvent(Np)}function xC(s,e){var w;Ln(e,!0);const[t,i]=ml(),n=()=>Wo(l,"$parent",t),r=()=>Wo(c,"$camera",t);let o=Ve(e,"ref",15),a=sr(e,["$$slots","$$events","$$legacy","controls","renderTask","ref","onstart","onchange","onend"]);const l=wp(),{camera:c,renderer:h,dom:u,autoRenderTask:d,shouldRender:f,size:p,invalidate:v}=Fi(),m=st(()=>(v(),new W2(c.current,h,{container:u,placement:"bottom-left",size:86,...a})));Et(()=>{o()!==K(m)&&o(K(m))});const g=new It,x=st(()=>e.controls??n());so(((w=e.renderTask)==null?void 0:w.key)??Symbol("threlte-extras-gizmo-render"),()=>{if(f()){const M=h.toneMapping;h.getViewport(g),h.toneMapping=yr,K(m).render(),h.setViewport(g),h.toneMapping=M}},{autoInvalidate:!1,...e.renderTask??{after:d}}),Et(()=>{K(m).camera=r()}),Et(()=>{if(K(x))if(K(x)instanceof q_||K(x)instanceof sC){K(m).target=K(x).target;const M=()=>{K(m).update(!1)};return K(x).addEventListener("change",M),()=>K(x).removeEventListener("change",M)}else{const M=()=>{"getTarget"in K(x)&&typeof K(x).getTarget=="function"&&(K(x).getTarget(K(m).target),K(m).update())},T=()=>{K(x).setPosition(...c.current.position.toArray())};return K(m).addEventListener("change",T),K(x).addEventListener("update",M),()=>{K(m).removeEventListener("change",T),K(x).removeEventListener("update",M)}}});const y=M=>{var T;K(x).enabled=!1,(T=e.onstart)==null||T.call(e,M)},_=M=>{var T;v(),(T=e.onchange)==null||T.call(e,M)},E=M=>{var T;K(x).enabled=!0,(T=e.onend)==null||T.call(e,M)};Et(()=>(K(m).addEventListener("start",y),K(m).addEventListener("change",_),K(m).addEventListener("end",E),()=>{K(m).removeEventListener("start",y),K(m).removeEventListener("change",_),K(m).removeEventListener("end",E)})),cl.pre(()=>[p],()=>{K(m).update(),v()}),Et(()=>()=>K(m).dispose()),Un(),i()}const bC={name:"HorizontalBlurShader",uniforms:{tDiffuse:{value:null},h:{value:1/512}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform sampler2D tDiffuse;
		uniform float h;

		varying vec2 vUv;

		void main() {

			vec4 sum = vec4( 0.0 );

			sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;
			sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;
			sum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;

			gl_FragColor = sum;

		}`},SC={name:"VerticalBlurShader",uniforms:{tDiffuse:{value:null},v:{value:1/512}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform sampler2D tDiffuse;
		uniform float v;

		varying vec2 vUv;

		void main() {

			vec4 sum = vec4( 0.0 );

			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;

			gl_FragColor = sum;

		}`};var MC=Qt("<!> <!> <!>",1);function wC(s,e){Ln(e,!0);let t=Ve(e,"opacity",3,1),i=Ve(e,"width",3,1),n=Ve(e,"height",3,1),r=Ve(e,"blur",3,1),o=Ve(e,"far",3,10),a=Ve(e,"smooth",3,!0),l=Ve(e,"resolution",3,512),c=Ve(e,"frames",3,1/0),h=Ve(e,"scale",3,10),u=Ve(e,"color",3,"#000000"),d=Ve(e,"depthWrite",3,!1),f=Ve(e,"ref",15),p=sr(e,["$$slots","$$events","$$legacy","opacity","width","height","blur","far","smooth","resolution","frames","scale","color","depthWrite","ref","children"]);const{scene:v,renderer:m}=Fi(),g=new Di,x=st(()=>i()*(Array.isArray(h())?h()[0]:h()||1)),y=st(()=>n()*(Array.isArray(h())?h()[1]:h()||1)),_=st(()=>{const j=new Xi(l(),l());return j.texture.generateMipmaps=!1,j.texture.colorSpace=m.outputColorSpace,j}),E=st(()=>{const j=new Xi(l(),l());return j.texture.generateMipmaps=!1,j}),w=st(()=>new ar(K(x),K(y)).rotateX(Math.PI/2)),M=st(()=>new ze(K(w))),T=st(()=>{const j=new El({depthTest:!1,depthWrite:!1});return j.onBeforeCompile=$=>{$.uniforms={...$.uniforms,uColor:{value:new Ge(u()).convertSRGBToLinear()}},$.fragmentShader=`uniform vec3 uColor;
${$.fragmentShader}`,$.fragmentShader=$.fragmentShader.replace("vec4( vec3( 1.0 - fragCoordZ ), opacity );","vec4( uColor, ( 1.0 - fragCoordZ ) * 1.0 );"),$.fragmentShader=$.fragmentShader.replace("vec4(vec3(1.0-fragCoordZ),opacity);","vec4(uColor,(1.0-fragCoordZ)*1.0);")},j}),S=new wi({...bC,depthTest:!1}),b=new wi({...SC,depthTest:!1}),P=st(()=>new hs(-K(x)/2,K(x)/2,K(y)/2,-K(y)/2,0,o()));Et(()=>K(P).updateProjectionMatrix());const D=st(()=>new Bn({map:K(_).texture,transparent:!0,opacity:t(),depthWrite:d()})),G=j=>{K(M).visible=!0,K(M).material=S,S.uniforms.tDiffuse.value=K(_).texture,S.uniforms.h.value=j*1/256,m.setRenderTarget(K(E)),m.render(K(M),K(P)),K(M).material=b,b.uniforms.tDiffuse.value=K(E).texture,b.uniforms.v.value=j*1/256,m.setRenderTarget(K(_)),m.render(K(M),K(P)),K(M).visible=!1},H=()=>{const j=v.background;v.background=null;const $=v.overrideMaterial;v.overrideMaterial=K(T);const L=m.getClearAlpha();m.setClearAlpha(0),m.setRenderTarget(K(_)),m.render(v,K(P)),v.overrideMaterial=$,G(r()),a()&&G(r()*.4),m.setRenderTarget(null),v.background=j,m.setClearAlpha(L)},q=()=>{H()},F=so(()=>{H()},{autoStart:!1});let te=0;const Y=so(()=>{H(),te+=1,te>=c()&&Y.stop()},{autoStart:!1});return Et(()=>{c()===Number.POSITIVE_INFINITY?F.start():te<c()&&Y.start()}),ao(()=>{K(_).dispose(),K(E).dispose(),K(w).dispose(),K(T).dispose(),S.dispose(),b.dispose(),K(D).dispose()}),wt(s,Br({get is(){return g}},()=>p,{get ref(){return f()},set ref(j){f(j)},children:(j,$)=>{var L=gt(),Z=Ye(L);Ut(Z,()=>wt.Group,(Q,k)=>{k(Q,{"rotation.x":Math.PI/2,children:(W,J)=>{var X=MC(),ne=Ye(X);Ut(ne,()=>wt.Mesh,(we,ve)=>{ve(we,{"scale.y":-1,"rotation.x":-Math.PI/2,get material(){return K(D)},get geometry(){return K(w)}})});var me=yt(ne,2);wt(me,{get is(){return K(P)},manual:!0});var be=yt(me,2);Wi(be,()=>e.children??kr,()=>({ref:g})),We(W,X)},$$slots:{default:!0}})}),We(j,L)},$$slots:{default:!0}})),Un({refresh:q})}const EC=`
  varying vec3 localPosition;
  varying vec4 worldPosition;

  uniform vec3 worldCamProjPosition;
	uniform vec3 worldPlanePosition;
	uniform float fadeDistance;
	uniform bool infiniteGrid;
	uniform bool followCamera;

	uniform int coord0;
	uniform int coord1;
	uniform int coord2;

	void main() {
		localPosition = vec3(
		  position[coord0],
			position[coord1],
			position[coord2]
		);

		if (infiniteGrid) {
		  localPosition *= 1.0 + fadeDistance;
		}

		worldPosition = modelMatrix * vec4(localPosition, 1.0);
		if (followCamera) {
		  worldPosition.xyz += (worldCamProjPosition - worldPlanePosition);
      localPosition = (inverse(modelMatrix) * worldPosition).xyz;
		}

		gl_Position = projectionMatrix * viewMatrix * worldPosition;
	}
`,TC=`
  #define PI 3.141592653589793

	varying vec3 localPosition;
	varying vec4 worldPosition;

	uniform vec3 worldCamProjPosition;
	uniform float cellSize;
	uniform float sectionSize;
	uniform vec3 cellColor;
	uniform vec3 sectionColor;
	uniform float fadeDistance;
	uniform float fadeStrength;
	uniform vec3 fadeOrigin;
	uniform float cellThickness;
	uniform float sectionThickness;
	uniform vec3 backgroundColor;
	uniform float backgroundOpacity;

	uniform bool infiniteGrid;

	uniform int coord0;
	uniform int coord1;
	uniform int coord2;

	// 0 - default; 1 - lines; 2 - circles; 3 - polar
	uniform int gridType;

  // lineGrid coord for lines
	uniform int lineGridCoord;

	// circlegrid max radius
	uniform float circleGridMaxRadius;

	// polar grid dividers
	uniform float polarCellDividers;
	uniform float polarSectionDividers;

	float getSquareGrid(float size, float thickness, vec3 localPos) {
		vec2 coord = localPos.xy / size;

		vec2 grid = abs(fract(coord - 0.5) - 0.5) / fwidth(coord);
		float line = min(grid.x, grid.y) + 1.0 - thickness;

		return 1.0 - min(line, 1.0);
	}

	float getLinesGrid(float size, float thickness, vec3 localPos) {
		float coord = localPos[lineGridCoord] / size;
		float line = abs(fract(coord - 0.5) - 0.5) / fwidth(coord) - thickness * 0.2;

		return 1.0 - min(line, 1.0);
	}

	float getCirclesGrid(float size, float thickness, vec3 localPos) {
		float coord = length(localPos.xy) / size;
		float line = abs(fract(coord - 0.5) - 0.5) / fwidth(coord) - thickness * 0.2;

		if (!infiniteGrid && circleGridMaxRadius > 0. && coord > circleGridMaxRadius + thickness * 0.05) {
		  discard;
		}

		return 1.0 - min(line, 1.0);
	}

	float getPolarGrid(float size, float thickness, float polarDividers, vec3 localPos) {
		float rad = length(localPos.xy) / size;
		vec2 coord = vec2(rad, atan(localPos.x, localPos.y) * polarDividers / PI) ;

		vec2 wrapped = vec2(coord.x, fract(coord.y / (2.0 * polarDividers)) * (2.0 * polarDividers));
		vec2 coordWidth = fwidth(coord);
		vec2 wrappedWidth = fwidth(wrapped);
		vec2 width = (coord.y < -polarDividers * 0.5 || coord.y > polarDividers * 0.5 ? wrappedWidth : coordWidth) * (1.+thickness*0.25);

		// Compute anti-aliased world-space grid lines
		vec2 grid = abs(fract(coord - 0.5) - 0.5) / width;
		float line = min(grid.x, grid.y);

if (!infiniteGrid && circleGridMaxRadius > 0.0 && rad > circleGridMaxRadius + thickness * 0.05) {
		  discard;
		}

		return 1.0 - min(line, 1.0);
	}

	void main() {
		float g1 = 0.0;
		float g2 = 0.0;

		vec3 localPos = vec3(localPosition[coord0], localPosition[coord1], localPosition[coord2]);

		if (gridType == 0) {
			g1 = getSquareGrid(cellSize, cellThickness, localPos);
			g2 = getSquareGrid(sectionSize, sectionThickness, localPos);

		} else if (gridType == 1) {
			g1 = getLinesGrid(cellSize, cellThickness, localPos);
			g2 = getLinesGrid(sectionSize, sectionThickness, localPos);

		} else if (gridType == 2) {
			g1 = getCirclesGrid(cellSize, cellThickness, localPos);
			g2 = getCirclesGrid(sectionSize, sectionThickness, localPos);

		} else if (gridType == 3) {
			g1 = getPolarGrid(cellSize, cellThickness, polarCellDividers, localPos);
			g2 = getPolarGrid(sectionSize, sectionThickness, polarSectionDividers, localPos);
		}

		float dist = distance(fadeOrigin, worldPosition.xyz);
		float d = 1.0 - min(dist / fadeDistance, 1.0);
		float fadeFactor = pow(d, fadeStrength) * 0.95;

		vec3 color = mix(cellColor, sectionColor, min(1.0, sectionThickness * g2));

		if (backgroundOpacity > 0.0) {
			float linesAlpha = clamp((g1 + g2) * fadeFactor, 0.0,1.0);
			vec3 finalColor = mix(backgroundColor, color, linesAlpha);
			float blendedAlpha = max(linesAlpha, backgroundOpacity * fadeFactor);
			gl_FragColor = vec4(finalColor, blendedAlpha);

		} else {
			gl_FragColor = vec4(color, (g1 + g2) * pow(d, fadeStrength));
			gl_FragColor.a = mix(0.75 * gl_FragColor.a, gl_FragColor.a, g2);
		}

		if (gl_FragColor.a <= 0.0) {
		  discard;
		}

		#include <tonemapping_fragment>
		#include <colorspace_fragment>
	}
`;var AC=Qt("<!> <!>",1);function CC(s,e){Ln(e,!0);let t=Ve(e,"cellColor",3,"#000000"),i=Ve(e,"sectionColor",3,"#0000ee"),n=Ve(e,"cellSize",3,1),r=Ve(e,"backgroundColor",3,"#dadada"),o=Ve(e,"backgroundOpacity",3,0),a=Ve(e,"sectionSize",3,10),l=Ve(e,"plane",3,"xz"),c=Ve(e,"gridSize",19,()=>[20,20]),h=Ve(e,"followCamera",3,!1),u=Ve(e,"infiniteGrid",3,!1),d=Ve(e,"fadeDistance",3,100),f=Ve(e,"fadeStrength",3,1),p=Ve(e,"fadeOrigin",3,void 0),v=Ve(e,"cellThickness",3,1),m=Ve(e,"sectionThickness",3,2),g=Ve(e,"side",3,_i),x=Ve(e,"type",3,"grid"),y=Ve(e,"axis",3,"x"),_=Ve(e,"maxRadius",3,0),E=Ve(e,"cellDividers",3,6),w=Ve(e,"sectionDividers",3,2),M=Ve(e,"ref",15),T=sr(e,["$$slots","$$events","$$legacy","cellColor","sectionColor","cellSize","backgroundColor","backgroundOpacity","sectionSize","plane","gridSize","followCamera","infiniteGrid","fadeDistance","fadeStrength","fadeOrigin","cellThickness","sectionThickness","side","type","axis","maxRadius","cellDividers","sectionDividers","ref","children"]);const S=new ze,{invalidate:b,camera:P}=Fi(),D=new mr,G=new I(0,1,0),H=new I(0,0,0),q={x:0,y:1,z:2},F={xz:"xzy",xy:"xyz",zy:"zyx"},te={grid:0,lines:1,circular:2,polar:3},Y={cellSize:{value:n()},sectionSize:{value:a()},cellColor:{value:new Ge(t())},sectionColor:{value:new Ge(i())},backgroundColor:{value:new Ge(r())},backgroundOpacity:{value:o()},fadeDistance:{value:d()},fadeStrength:{value:f()},fadeOrigin:{value:new I},cellThickness:{value:v()},sectionThickness:{value:m()},infiniteGrid:{value:u()},followCamera:{value:h()},coord0:{value:0},coord1:{value:2},coord2:{value:1},gridType:{value:te.grid},lineGridCoord:{value:q[y()]},circleGridMaxRadius:{value:_()},polarCellDividers:{value:E()},polarSectionDividers:{value:w()},worldCamProjPosition:{value:new I},worldPlanePosition:{value:new I}};Et(()=>{const j=F[l()],$=j.charAt(0),L=j.charAt(1),Z=j.charAt(2);Y.coord0.value=q[$],Y.coord1.value=q[L],Y.coord2.value=q[Z],b()}),Et(()=>{Y.cellSize.value=n(),b()}),Et(()=>{Y.sectionSize.value=a(),b()}),Et(()=>{Y.cellColor.value.set(t()),b()}),Et(()=>{Y.sectionColor.value.set(i()),b()}),Et(()=>{Y.backgroundColor.value.set(r()),b()}),Et(()=>{Y.backgroundOpacity.value=o(),b()}),Et(()=>{Y.fadeDistance.value=d(),b()}),Et(()=>{Y.fadeStrength.value=f(),b()}),Et(()=>{p()&&(Y.fadeOrigin.value=p(),b())}),Et(()=>{Y.cellThickness.value=v(),b()}),Et(()=>{Y.sectionThickness.value=m(),b()}),Et(()=>{Y.followCamera.value=h(),b()}),Et(()=>{Y.infiniteGrid.value=u(),b()}),Et(()=>{switch(x()){case"grid":{Y.gridType.value=te.grid;break}case"lines":{Y.gridType.value=te.lines,Y.lineGridCoord.value=q[y()];break}case"circular":{Y.gridType.value=te.circular,Y.circleGridMaxRadius.value=_();break}case"polar":{Y.gridType.value=te.polar,Y.circleGridMaxRadius.value=_(),Y.polarCellDividers.value=E(),Y.polarSectionDividers.value=w();break}}b()}),so(()=>{D.setFromNormalAndCoplanarPoint(G,H).applyMatrix4(S.matrixWorld);const j=S.material,$=j.uniforms.worldCamProjPosition,L=j.uniforms.worldPlanePosition,Z=j.uniforms.fadeOrigin,Q=D.projectPoint(P.current.position,$.value);p()||(Z.value=Q),L.value.set(0,0,0).applyMatrix4(S.matrixWorld)},{autoInvalidate:!1}),wt(s,Br({get is(){return S},frustumCulled:!1},()=>T,{get ref(){return M()},set ref(j){M(j)},children:(j,$)=>{var L=AC(),Z=Ye(L);Ut(Z,()=>wt.ShaderMaterial,(J,X)=>{X(J,{get fragmentShader(){return TC},get vertexShader(){return EC},get uniforms(){return Y},transparent:!0,get side(){return g()}})});var Q=yt(Z,2);{var k=J=>{var X=gt(),ne=Ye(X);Wi(ne,()=>e.children,()=>({ref:S})),We(J,X)},W=J=>{var X=gt(),ne=Ye(X);{let me=st(()=>typeof c()=="number"?[c(),c()]:c());Ut(ne,()=>wt.PlaneGeometry,(be,we)=>{we(be,{get args(){return K(me)}})})}We(J,X)};Ot(Q,J=>{e.children?J(k):J(W,!1)})}We(j,L)},$$slots:{default:!0}})),Un()}const Ls=new _u,ei=new I,$r=new I,cn=new Ht,Kg={X:new I(1,0,0),Y:new I(0,1,0),Z:new I(0,0,1)},zd={type:"change"},Qg={type:"mouseDown",mode:null},$g={type:"mouseUp",mode:null},e0={type:"objectChange"};class RC extends yu{constructor(e,t=null){super(void 0,t);const i=new NC(this);this._root=i;const n=new OC;this._gizmo=n,i.add(n);const r=new FC;this._plane=r,i.add(r);const o=this;function a(y,_){let E=_;Object.defineProperty(o,y,{get:function(){return E!==void 0?E:_},set:function(w){E!==w&&(E=w,r[y]=w,n[y]=w,o.dispatchEvent({type:y+"-changed",value:w}),o.dispatchEvent(zd))}}),o[y]=_,r[y]=_,n[y]=_}a("camera",e),a("object",void 0),a("enabled",!0),a("axis",null),a("mode","translate"),a("translationSnap",null),a("rotationSnap",null),a("scaleSnap",null),a("space","world"),a("size",1),a("dragging",!1),a("showX",!0),a("showY",!0),a("showZ",!0),a("minX",-1/0),a("maxX",1/0),a("minY",-1/0),a("maxY",1/0),a("minZ",-1/0),a("maxZ",1/0);const l=new I,c=new I,h=new Ht,u=new Ht,d=new I,f=new Ht,p=new I,v=new I,m=new I,g=0,x=new I;a("worldPosition",l),a("worldPositionStart",c),a("worldQuaternion",h),a("worldQuaternionStart",u),a("cameraPosition",d),a("cameraQuaternion",f),a("pointStart",p),a("pointEnd",v),a("rotationAxis",m),a("rotationAngle",g),a("eye",x),this._offset=new I,this._startNorm=new I,this._endNorm=new I,this._cameraScale=new I,this._parentPosition=new I,this._parentQuaternion=new Ht,this._parentQuaternionInv=new Ht,this._parentScale=new I,this._worldScaleStart=new I,this._worldQuaternionInv=new Ht,this._worldScale=new I,this._positionStart=new I,this._quaternionStart=new Ht,this._scaleStart=new I,this._getPointer=PC.bind(this),this._onPointerDown=DC.bind(this),this._onPointerHover=IC.bind(this),this._onPointerMove=LC.bind(this),this._onPointerUp=UC.bind(this),t!==null&&this.connect(t)}connect(e){super.connect(e),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointermove",this._onPointerHover),this.domElement.addEventListener("pointerup",this._onPointerUp),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerHover),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.style.touchAction="auto"}getHelper(){return this._root}pointerHover(e){if(this.object===void 0||this.dragging===!0)return;e!==null&&Ls.setFromCamera(e,this.camera);const t=Vd(this._gizmo.picker[this.mode],Ls);t?this.axis=t.object.name:this.axis=null}pointerDown(e){if(!(this.object===void 0||this.dragging===!0||e!=null&&e.button!==0)&&this.axis!==null){e!==null&&Ls.setFromCamera(e,this.camera);const t=Vd(this._plane,Ls,!0);t&&(this.object.updateMatrixWorld(),this.object.parent.updateMatrixWorld(),this._positionStart.copy(this.object.position),this._quaternionStart.copy(this.object.quaternion),this._scaleStart.copy(this.object.scale),this.object.matrixWorld.decompose(this.worldPositionStart,this.worldQuaternionStart,this._worldScaleStart),this.pointStart.copy(t.point).sub(this.worldPositionStart)),this.dragging=!0,Qg.mode=this.mode,this.dispatchEvent(Qg)}}pointerMove(e){const t=this.axis,i=this.mode,n=this.object;let r=this.space;if(i==="scale"?r="local":(t==="E"||t==="XYZE"||t==="XYZ")&&(r="world"),n===void 0||t===null||this.dragging===!1||e!==null&&e.button!==-1)return;e!==null&&Ls.setFromCamera(e,this.camera);const o=Vd(this._plane,Ls,!0);if(o){if(this.pointEnd.copy(o.point).sub(this.worldPositionStart),i==="translate")this._offset.copy(this.pointEnd).sub(this.pointStart),r==="local"&&t!=="XYZ"&&this._offset.applyQuaternion(this._worldQuaternionInv),t.indexOf("X")===-1&&(this._offset.x=0),t.indexOf("Y")===-1&&(this._offset.y=0),t.indexOf("Z")===-1&&(this._offset.z=0),r==="local"&&t!=="XYZ"?this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale):this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale),n.position.copy(this._offset).add(this._positionStart),this.translationSnap&&(r==="local"&&(n.position.applyQuaternion(cn.copy(this._quaternionStart).invert()),t.search("X")!==-1&&(n.position.x=Math.round(n.position.x/this.translationSnap)*this.translationSnap),t.search("Y")!==-1&&(n.position.y=Math.round(n.position.y/this.translationSnap)*this.translationSnap),t.search("Z")!==-1&&(n.position.z=Math.round(n.position.z/this.translationSnap)*this.translationSnap),n.position.applyQuaternion(this._quaternionStart)),r==="world"&&(n.parent&&n.position.add(ei.setFromMatrixPosition(n.parent.matrixWorld)),t.search("X")!==-1&&(n.position.x=Math.round(n.position.x/this.translationSnap)*this.translationSnap),t.search("Y")!==-1&&(n.position.y=Math.round(n.position.y/this.translationSnap)*this.translationSnap),t.search("Z")!==-1&&(n.position.z=Math.round(n.position.z/this.translationSnap)*this.translationSnap),n.parent&&n.position.sub(ei.setFromMatrixPosition(n.parent.matrixWorld)))),n.position.x=Math.max(this.minX,Math.min(this.maxX,n.position.x)),n.position.y=Math.max(this.minY,Math.min(this.maxY,n.position.y)),n.position.z=Math.max(this.minZ,Math.min(this.maxZ,n.position.z));else if(i==="scale"){if(t.search("XYZ")!==-1){let a=this.pointEnd.length()/this.pointStart.length();this.pointEnd.dot(this.pointStart)<0&&(a*=-1),$r.set(a,a,a)}else ei.copy(this.pointStart),$r.copy(this.pointEnd),ei.applyQuaternion(this._worldQuaternionInv),$r.applyQuaternion(this._worldQuaternionInv),$r.divide(ei),t.search("X")===-1&&($r.x=1),t.search("Y")===-1&&($r.y=1),t.search("Z")===-1&&($r.z=1);n.scale.copy(this._scaleStart).multiply($r),this.scaleSnap&&(t.search("X")!==-1&&(n.scale.x=Math.round(n.scale.x/this.scaleSnap)*this.scaleSnap||this.scaleSnap),t.search("Y")!==-1&&(n.scale.y=Math.round(n.scale.y/this.scaleSnap)*this.scaleSnap||this.scaleSnap),t.search("Z")!==-1&&(n.scale.z=Math.round(n.scale.z/this.scaleSnap)*this.scaleSnap||this.scaleSnap))}else if(i==="rotate"){this._offset.copy(this.pointEnd).sub(this.pointStart);const a=20/this.worldPosition.distanceTo(ei.setFromMatrixPosition(this.camera.matrixWorld));let l=!1;t==="XYZE"?(this.rotationAxis.copy(this._offset).cross(this.eye).normalize(),this.rotationAngle=this._offset.dot(ei.copy(this.rotationAxis).cross(this.eye))*a):(t==="X"||t==="Y"||t==="Z")&&(this.rotationAxis.copy(Kg[t]),ei.copy(Kg[t]),r==="local"&&ei.applyQuaternion(this.worldQuaternion),ei.cross(this.eye),ei.length()===0?l=!0:this.rotationAngle=this._offset.dot(ei.normalize())*a),(t==="E"||l)&&(this.rotationAxis.copy(this.eye),this.rotationAngle=this.pointEnd.angleTo(this.pointStart),this._startNorm.copy(this.pointStart).normalize(),this._endNorm.copy(this.pointEnd).normalize(),this.rotationAngle*=this._endNorm.cross(this._startNorm).dot(this.eye)<0?1:-1),this.rotationSnap&&(this.rotationAngle=Math.round(this.rotationAngle/this.rotationSnap)*this.rotationSnap),r==="local"&&t!=="E"&&t!=="XYZE"?(n.quaternion.copy(this._quaternionStart),n.quaternion.multiply(cn.setFromAxisAngle(this.rotationAxis,this.rotationAngle)).normalize()):(this.rotationAxis.applyQuaternion(this._parentQuaternionInv),n.quaternion.copy(cn.setFromAxisAngle(this.rotationAxis,this.rotationAngle)),n.quaternion.multiply(this._quaternionStart).normalize())}this.dispatchEvent(zd),this.dispatchEvent(e0)}}pointerUp(e){e!==null&&e.button!==0||(this.dragging&&this.axis!==null&&($g.mode=this.mode,this.dispatchEvent($g)),this.dragging=!1,this.axis=null)}dispose(){this.disconnect(),this._root.dispose()}attach(e){return this.object=e,this._root.visible=!0,this}detach(){return this.object=void 0,this.axis=null,this._root.visible=!1,this}reset(){this.enabled&&this.dragging&&(this.object.position.copy(this._positionStart),this.object.quaternion.copy(this._quaternionStart),this.object.scale.copy(this._scaleStart),this.dispatchEvent(zd),this.dispatchEvent(e0),this.pointStart.copy(this.pointEnd))}getRaycaster(){return Ls}getMode(){return this.mode}setMode(e){this.mode=e}setTranslationSnap(e){this.translationSnap=e}setRotationSnap(e){this.rotationSnap=e}setScaleSnap(e){this.scaleSnap=e}setSize(e){this.size=e}setSpace(e){this.space=e}setColors(e,t,i,n){const r=this._gizmo.materialLib;r.xAxis.color.set(e),r.yAxis.color.set(t),r.zAxis.color.set(i),r.active.color.set(n),r.xAxisTransparent.color.set(e),r.yAxisTransparent.color.set(t),r.zAxisTransparent.color.set(i),r.activeTransparent.color.set(n),r.xAxis._color&&r.xAxis._color.set(e),r.yAxis._color&&r.yAxis._color.set(t),r.zAxis._color&&r.zAxis._color.set(i),r.active._color&&r.active._color.set(n),r.xAxisTransparent._color&&r.xAxisTransparent._color.set(e),r.yAxisTransparent._color&&r.yAxisTransparent._color.set(t),r.zAxisTransparent._color&&r.zAxisTransparent._color.set(i),r.activeTransparent._color&&r.activeTransparent._color.set(n)}}function PC(s){if(this.domElement.ownerDocument.pointerLockElement)return{x:0,y:0,button:s.button};{const e=this.domElement.getBoundingClientRect();return{x:(s.clientX-e.left)/e.width*2-1,y:-(s.clientY-e.top)/e.height*2+1,button:s.button}}}function IC(s){if(this.enabled)switch(s.pointerType){case"mouse":case"pen":this.pointerHover(this._getPointer(s));break}}function DC(s){this.enabled&&(document.pointerLockElement||this.domElement.setPointerCapture(s.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.pointerHover(this._getPointer(s)),this.pointerDown(this._getPointer(s)))}function LC(s){this.enabled&&this.pointerMove(this._getPointer(s))}function UC(s){this.enabled&&(this.domElement.releasePointerCapture(s.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.pointerUp(this._getPointer(s)))}function Vd(s,e,t){const i=e.intersectObject(s,!0);for(let n=0;n<i.length;n++)if(i[n].object.visible||t)return i[n];return!1}const Rc=new Mi,sn=new I(0,1,0),t0=new I(0,0,0),n0=new ct,Pc=new Ht,Gc=new Ht,dr=new I,i0=new ct,Pa=new I(1,0,0),Fs=new I(0,1,0),Ia=new I(0,0,1),Ic=new I,wa=new I,Ea=new I;class NC extends Lt{constructor(e){super(),this.isTransformControlsRoot=!0,this.controls=e,this.visible=!1}updateMatrixWorld(e){const t=this.controls;t.object!==void 0&&(t.object.updateMatrixWorld(),t.object.parent===null?console.error("TransformControls: The attached 3D object must be a part of the scene graph."):t.object.parent.matrixWorld.decompose(t._parentPosition,t._parentQuaternion,t._parentScale),t.object.matrixWorld.decompose(t.worldPosition,t.worldQuaternion,t._worldScale),t._parentQuaternionInv.copy(t._parentQuaternion).invert(),t._worldQuaternionInv.copy(t.worldQuaternion).invert()),t.camera.updateMatrixWorld(),t.camera.matrixWorld.decompose(t.cameraPosition,t.cameraQuaternion,t._cameraScale),t.camera.isOrthographicCamera?t.camera.getWorldDirection(t.eye).negate():t.eye.copy(t.cameraPosition).sub(t.worldPosition).normalize(),super.updateMatrixWorld(e)}dispose(){this.traverse(function(e){e.geometry&&e.geometry.dispose(),e.material&&e.material.dispose()})}}class OC extends Lt{constructor(){super(),this.isTransformControlsGizmo=!0,this.type="TransformControlsGizmo";const e=new Bn({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),t=new En({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),i=e.clone();i.opacity=.15;const n=t.clone();n.opacity=.5;const r=e.clone();r.color.setHex(16711680);const o=e.clone();o.color.setHex(65280);const a=e.clone();a.color.setHex(255);const l=e.clone();l.color.setHex(16711680),l.opacity=.5;const c=e.clone();c.color.setHex(65280),c.opacity=.5;const h=e.clone();h.color.setHex(255),h.opacity=.5;const u=e.clone();u.opacity=.25;const d=e.clone();d.color.setHex(16776960),d.opacity=.25;const f=e.clone();f.color.setHex(16776960);const p=e.clone();p.color.setHex(7895160),this.materialLib={xAxis:r,yAxis:o,zAxis:a,active:f,xAxisTransparent:l,yAxisTransparent:c,zAxisTransparent:h,activeTransparent:d};const v=new Pn(0,.04,.1,12);v.translate(0,.05,0);const m=new gn(.08,.08,.08);m.translate(0,.04,0);const g=new xt;g.setAttribute("position",new qe([0,0,0,1,0,0],3));const x=new Pn(.0075,.0075,.5,3);x.translate(0,.25,0);function y(q,F){const te=new Dr(q,.0075,3,64,F*Math.PI*2);return te.rotateY(Math.PI/2),te.rotateX(Math.PI/2),te}function _(){const q=new xt;return q.setAttribute("position",new qe([0,0,0,1,1,1],3)),q}const E={X:[[new ze(v,r),[.5,0,0],[0,0,-Math.PI/2]],[new ze(v,r),[-.5,0,0],[0,0,Math.PI/2]],[new ze(x,r),[0,0,0],[0,0,-Math.PI/2]]],Y:[[new ze(v,o),[0,.5,0]],[new ze(v,o),[0,-.5,0],[Math.PI,0,0]],[new ze(x,o)]],Z:[[new ze(v,a),[0,0,.5],[Math.PI/2,0,0]],[new ze(v,a),[0,0,-.5],[-Math.PI/2,0,0]],[new ze(x,a),null,[Math.PI/2,0,0]]],XYZ:[[new ze(new Nr(.1,0),u),[0,0,0]]],XY:[[new ze(new gn(.15,.15,.01),h),[.15,.15,0]]],YZ:[[new ze(new gn(.15,.15,.01),l),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new ze(new gn(.15,.15,.01),c),[.15,0,.15],[-Math.PI/2,0,0]]]},w={X:[[new ze(new Pn(.2,0,.6,4),i),[.3,0,0],[0,0,-Math.PI/2]],[new ze(new Pn(.2,0,.6,4),i),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new ze(new Pn(.2,0,.6,4),i),[0,.3,0]],[new ze(new Pn(.2,0,.6,4),i),[0,-.3,0],[0,0,Math.PI]]],Z:[[new ze(new Pn(.2,0,.6,4),i),[0,0,.3],[Math.PI/2,0,0]],[new ze(new Pn(.2,0,.6,4),i),[0,0,-.3],[-Math.PI/2,0,0]]],XYZ:[[new ze(new Nr(.2,0),i)]],XY:[[new ze(new gn(.2,.2,.01),i),[.15,.15,0]]],YZ:[[new ze(new gn(.2,.2,.01),i),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new ze(new gn(.2,.2,.01),i),[.15,0,.15],[-Math.PI/2,0,0]]]},M={START:[[new ze(new Nr(.01,2),n),null,null,null,"helper"]],END:[[new ze(new Nr(.01,2),n),null,null,null,"helper"]],DELTA:[[new jn(_(),n),null,null,null,"helper"]],X:[[new jn(g,n),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new jn(g,n),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new jn(g,n),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]},T={XYZE:[[new ze(y(.5,1),p),null,[0,Math.PI/2,0]]],X:[[new ze(y(.5,.5),r)]],Y:[[new ze(y(.5,.5),o),null,[0,0,-Math.PI/2]]],Z:[[new ze(y(.5,.5),a),null,[0,Math.PI/2,0]]],E:[[new ze(y(.75,1),d),null,[0,Math.PI/2,0]]]},S={AXIS:[[new jn(g,n),[-1e3,0,0],null,[1e6,1,1],"helper"]]},b={XYZE:[[new ze(new lo(.25,10,8),i)]],X:[[new ze(new Dr(.5,.1,4,24),i),[0,0,0],[0,-Math.PI/2,-Math.PI/2]]],Y:[[new ze(new Dr(.5,.1,4,24),i),[0,0,0],[Math.PI/2,0,0]]],Z:[[new ze(new Dr(.5,.1,4,24),i),[0,0,0],[0,0,-Math.PI/2]]],E:[[new ze(new Dr(.75,.1,2,24),i)]]},P={X:[[new ze(m,r),[.5,0,0],[0,0,-Math.PI/2]],[new ze(x,r),[0,0,0],[0,0,-Math.PI/2]],[new ze(m,r),[-.5,0,0],[0,0,Math.PI/2]]],Y:[[new ze(m,o),[0,.5,0]],[new ze(x,o)],[new ze(m,o),[0,-.5,0],[0,0,Math.PI]]],Z:[[new ze(m,a),[0,0,.5],[Math.PI/2,0,0]],[new ze(x,a),[0,0,0],[Math.PI/2,0,0]],[new ze(m,a),[0,0,-.5],[-Math.PI/2,0,0]]],XY:[[new ze(new gn(.15,.15,.01),h),[.15,.15,0]]],YZ:[[new ze(new gn(.15,.15,.01),l),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new ze(new gn(.15,.15,.01),c),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new ze(new gn(.1,.1,.1),u)]]},D={X:[[new ze(new Pn(.2,0,.6,4),i),[.3,0,0],[0,0,-Math.PI/2]],[new ze(new Pn(.2,0,.6,4),i),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new ze(new Pn(.2,0,.6,4),i),[0,.3,0]],[new ze(new Pn(.2,0,.6,4),i),[0,-.3,0],[0,0,Math.PI]]],Z:[[new ze(new Pn(.2,0,.6,4),i),[0,0,.3],[Math.PI/2,0,0]],[new ze(new Pn(.2,0,.6,4),i),[0,0,-.3],[-Math.PI/2,0,0]]],XY:[[new ze(new gn(.2,.2,.01),i),[.15,.15,0]]],YZ:[[new ze(new gn(.2,.2,.01),i),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new ze(new gn(.2,.2,.01),i),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new ze(new gn(.2,.2,.2),i),[0,0,0]]]},G={X:[[new jn(g,n),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new jn(g,n),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new jn(g,n),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]};function H(q){const F=new Lt;for(const te in q)for(let Y=q[te].length;Y--;){const j=q[te][Y][0].clone(),$=q[te][Y][1],L=q[te][Y][2],Z=q[te][Y][3],Q=q[te][Y][4];j.name=te,j.tag=Q,$&&j.position.set($[0],$[1],$[2]),L&&j.rotation.set(L[0],L[1],L[2]),Z&&j.scale.set(Z[0],Z[1],Z[2]),j.updateMatrix();const k=j.geometry.clone();k.applyMatrix4(j.matrix),j.geometry=k,j.renderOrder=1/0,j.position.set(0,0,0),j.rotation.set(0,0,0),j.scale.set(1,1,1),F.add(j)}return F}this.gizmo={},this.picker={},this.helper={},this.add(this.gizmo.translate=H(E)),this.add(this.gizmo.rotate=H(T)),this.add(this.gizmo.scale=H(P)),this.add(this.picker.translate=H(w)),this.add(this.picker.rotate=H(b)),this.add(this.picker.scale=H(D)),this.add(this.helper.translate=H(M)),this.add(this.helper.rotate=H(S)),this.add(this.helper.scale=H(G)),this.picker.translate.visible=!1,this.picker.rotate.visible=!1,this.picker.scale.visible=!1}updateMatrixWorld(e){const i=(this.mode==="scale"?"local":this.space)==="local"?this.worldQuaternion:Gc;this.gizmo.translate.visible=this.mode==="translate",this.gizmo.rotate.visible=this.mode==="rotate",this.gizmo.scale.visible=this.mode==="scale",this.helper.translate.visible=this.mode==="translate",this.helper.rotate.visible=this.mode==="rotate",this.helper.scale.visible=this.mode==="scale";let n=[];n=n.concat(this.picker[this.mode].children),n=n.concat(this.gizmo[this.mode].children),n=n.concat(this.helper[this.mode].children);for(let r=0;r<n.length;r++){const o=n[r];o.visible=!0,o.rotation.set(0,0,0),o.position.copy(this.worldPosition);let a;if(this.camera.isOrthographicCamera?a=(this.camera.top-this.camera.bottom)/this.camera.zoom:a=this.worldPosition.distanceTo(this.cameraPosition)*Math.min(1.9*Math.tan(Math.PI*this.camera.fov/360)/this.camera.zoom,7),o.scale.set(1,1,1).multiplyScalar(a*this.size/4),o.tag==="helper"){o.visible=!1,o.name==="AXIS"?(o.visible=!!this.axis,this.axis==="X"&&(cn.setFromEuler(Rc.set(0,0,0)),o.quaternion.copy(i).multiply(cn),Math.abs(sn.copy(Pa).applyQuaternion(i).dot(this.eye))>.9&&(o.visible=!1)),this.axis==="Y"&&(cn.setFromEuler(Rc.set(0,0,Math.PI/2)),o.quaternion.copy(i).multiply(cn),Math.abs(sn.copy(Fs).applyQuaternion(i).dot(this.eye))>.9&&(o.visible=!1)),this.axis==="Z"&&(cn.setFromEuler(Rc.set(0,Math.PI/2,0)),o.quaternion.copy(i).multiply(cn),Math.abs(sn.copy(Ia).applyQuaternion(i).dot(this.eye))>.9&&(o.visible=!1)),this.axis==="XYZE"&&(cn.setFromEuler(Rc.set(0,Math.PI/2,0)),sn.copy(this.rotationAxis),o.quaternion.setFromRotationMatrix(n0.lookAt(t0,sn,Fs)),o.quaternion.multiply(cn),o.visible=this.dragging),this.axis==="E"&&(o.visible=!1)):o.name==="START"?(o.position.copy(this.worldPositionStart),o.visible=this.dragging):o.name==="END"?(o.position.copy(this.worldPosition),o.visible=this.dragging):o.name==="DELTA"?(o.position.copy(this.worldPositionStart),o.quaternion.copy(this.worldQuaternionStart),ei.set(1e-10,1e-10,1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1),ei.applyQuaternion(this.worldQuaternionStart.clone().invert()),o.scale.copy(ei),o.visible=this.dragging):(o.quaternion.copy(i),this.dragging?o.position.copy(this.worldPositionStart):o.position.copy(this.worldPosition),this.axis&&(o.visible=this.axis.search(o.name)!==-1));continue}o.quaternion.copy(i),this.mode==="translate"||this.mode==="scale"?(o.name==="X"&&Math.abs(sn.copy(Pa).applyQuaternion(i).dot(this.eye))>.99&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="Y"&&Math.abs(sn.copy(Fs).applyQuaternion(i).dot(this.eye))>.99&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="Z"&&Math.abs(sn.copy(Ia).applyQuaternion(i).dot(this.eye))>.99&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="XY"&&Math.abs(sn.copy(Ia).applyQuaternion(i).dot(this.eye))<.2&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="YZ"&&Math.abs(sn.copy(Pa).applyQuaternion(i).dot(this.eye))<.2&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="XZ"&&Math.abs(sn.copy(Fs).applyQuaternion(i).dot(this.eye))<.2&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1)):this.mode==="rotate"&&(Pc.copy(i),sn.copy(this.eye).applyQuaternion(cn.copy(i).invert()),o.name.search("E")!==-1&&o.quaternion.setFromRotationMatrix(n0.lookAt(this.eye,t0,Fs)),o.name==="X"&&(cn.setFromAxisAngle(Pa,Math.atan2(-sn.y,sn.z)),cn.multiplyQuaternions(Pc,cn),o.quaternion.copy(cn)),o.name==="Y"&&(cn.setFromAxisAngle(Fs,Math.atan2(sn.x,sn.z)),cn.multiplyQuaternions(Pc,cn),o.quaternion.copy(cn)),o.name==="Z"&&(cn.setFromAxisAngle(Ia,Math.atan2(sn.y,sn.x)),cn.multiplyQuaternions(Pc,cn),o.quaternion.copy(cn))),o.visible=o.visible&&(o.name.indexOf("X")===-1||this.showX),o.visible=o.visible&&(o.name.indexOf("Y")===-1||this.showY),o.visible=o.visible&&(o.name.indexOf("Z")===-1||this.showZ),o.visible=o.visible&&(o.name.indexOf("E")===-1||this.showX&&this.showY&&this.showZ),o.material._color=o.material._color||o.material.color.clone(),o.material._opacity=o.material._opacity||o.material.opacity,o.material.color.copy(o.material._color),o.material.opacity=o.material._opacity,this.enabled&&this.axis&&(o.name===this.axis?(o.material.color.copy(this.materialLib.active.color),o.material.opacity=1):this.axis.split("").some(function(l){return o.name===l})&&(o.material.color.copy(this.materialLib.active.color),o.material.opacity=1))}super.updateMatrixWorld(e)}}class FC extends ze{constructor(){super(new ar(1e5,1e5,2,2),new Bn({visible:!1,wireframe:!0,side:_i,transparent:!0,opacity:.1,toneMapped:!1})),this.isTransformControlsPlane=!0,this.type="TransformControlsPlane"}updateMatrixWorld(e){let t=this.space;switch(this.position.copy(this.worldPosition),this.mode==="scale"&&(t="local"),Ic.copy(Pa).applyQuaternion(t==="local"?this.worldQuaternion:Gc),wa.copy(Fs).applyQuaternion(t==="local"?this.worldQuaternion:Gc),Ea.copy(Ia).applyQuaternion(t==="local"?this.worldQuaternion:Gc),sn.copy(wa),this.mode){case"translate":case"scale":switch(this.axis){case"X":sn.copy(this.eye).cross(Ic),dr.copy(Ic).cross(sn);break;case"Y":sn.copy(this.eye).cross(wa),dr.copy(wa).cross(sn);break;case"Z":sn.copy(this.eye).cross(Ea),dr.copy(Ea).cross(sn);break;case"XY":dr.copy(Ea);break;case"YZ":dr.copy(Ic);break;case"XZ":sn.copy(Ea),dr.copy(wa);break;case"XYZ":case"E":dr.set(0,0,0);break}break;case"rotate":default:dr.set(0,0,0)}dr.length()===0?this.quaternion.copy(this.cameraQuaternion):(i0.lookAt(ei.set(0,0,0),dr,sn),this.quaternion.setFromRotationMatrix(i0)),super.updateMatrixWorld(e)}}const Z_=()=>g2("threlte-controls",{orbitControls:Qs(void 0),trackballControls:Qs(void 0)});var kC=Qt("<!> <!>",1);function BC(s,e){Ln(e,!0);const[t,i]=ml(),n=()=>Wo(h,"$camera",t);let r=Ve(e,"autoPauseOrbitControls",3,!0),o=Ve(e,"autoPauseTrackballControls",3,!0),a=Ve(e,"controls",15),l=Ve(e,"group",15),c=sr(e,["$$slots","$$events","$$legacy","autoPauseOrbitControls","autoPauseTrackballControls","object","controls","group","children"]);const{camera:h,dom:u,invalidate:d,scene:f}=Fi(),{orbitControls:p,trackballControls:v}=Z_();let m=xi(!1);cl(()=>[p,K(m),r()],([b,P,D])=>{if(!(!b||!b.enabled&&P))return b.enabled=!(P&&D),()=>{b.enabled=!0}}),cl(()=>[v,K(m),o()],([b,P,D])=>{if(!(!b||!b.enabled&&P))return b.enabled=!(P&&D),()=>{b.enabled=!0}});const g=new Di;l(g);const x=new RC(h.current,u);a(x),Et(()=>{x.camera=n()}),Et(()=>(x==null||x.attach(e.object??g),()=>x==null?void 0:x.detach()));const y=["enabled","axis","mode","translationSnap","rotationSnap","scaleSnap","space","size","showX","showY","showZ","visible","onmouseDown","onmouseUp","onobjectChange"];let _=xi(is({})),E=xi(is({}));Et(()=>{li(_,{},!0),li(E,{},!0),Object.keys(c).forEach(b=>{Et(()=>{y.includes(b)?K(_)[b]=c[b]:K(E)[b]=c[b]})})});const w=b=>{var P;d(),x.dragging&&!K(m)?li(m,!0):!x.dragging&&K(m)&&li(m,!1),(P=e.onchange)==null||P.call(e,b)};var M=kC(),T=Ye(M);wt(T,Br({get is(){return x},onchange:w},()=>K(_),{attach:({ref:b})=>{const P=b.getHelper();return f.add(P),()=>{f.remove(P)}},dispose:!1,oncreate:b=>()=>b.dispose()}));var S=yt(T,2);wt(S,Br({get is(){return g}},()=>K(E),{children:(b,P)=>{var D=gt(),G=Ye(D);{var H=q=>{var F=gt(),te=Ye(F);Wi(te,()=>e.children,()=>({ref:g})),We(q,F)};Ot(G,q=>{e.children&&q(H)})}We(b,D)},$$slots:{default:!0}})),We(s,M),Un(),i()}function zC(s,e){Ln(e,!0);const[t,i]=ml(),n=()=>Wo(a,"$parent",t);let r=Ve(e,"ref",15),o=sr(e,["$$slots","$$events","$$legacy","ref","children"]);const a=wp(),{dom:l,invalidate:c}=Fi();if(!Gi(n(),"Camera"))throw new Error("Parent missing: <OrbitControls> need to be a child of a <Camera>");const h=new q_(n(),l),{orbitControls:u}=Z_(),{start:d,stop:f}=so(()=>{h.update()},{autoStart:!1,autoInvalidate:!1});Et(()=>{e.autoRotate||e.enableDamping?d():f()}),Et(()=>{const p=v=>{var m;c(),(m=e.onchange)==null||m.call(e,v)};return u.set(h),h.addEventListener("change",p),()=>{u.set(void 0),h.removeEventListener("change",p)}}),wt(s,Br({get is(){return h}},()=>o,{get ref(){return r()},set ref(p){r(p)},children:(p,v)=>{var m=gt(),g=Ye(m);Wi(g,()=>e.children??kr,()=>({ref:h})),We(p,m)},$$slots:{default:!0}})),Un(),i()}new ct;new ct;new ze;function r0(s,e){Ln(e,!0);let t=Ve(e,"points",19,()=>[]),i=Ve(e,"shape",3,"none"),n=Ve(e,"shapeFunction",3,()=>1),r=Ve(e,"ref",15),o=sr(e,["$$slots","$$events","$$legacy","points","shape","shapeFunction","ref","children"]);const a=st(()=>t().length),{invalidate:l}=Fi(),c=st(()=>new Rt(new Float32Array(K(a)*6),3)),h=st(()=>new Rt(new Float32Array(K(a)*6),3)),u=st(()=>new Rt(new Float32Array(K(a)*6),3)),d=st(()=>new Rt(new Float32Array(K(a)*2),1)),f=st(()=>new Rt(new Float32Array(K(a)*2),1)),p=st(()=>new Rt(new Float32Array(K(a)*2),1)),v=st(()=>new Rt(new Float32Array(K(a)*4),2)),m=st(()=>new Rt(new Uint16Array(K(a)*6),1)),g=st(()=>i()==="taper"?y=>1*Math.pow(4*y*(1-y),1):n()),x=new xt;Et(()=>{for(let y=0,_=0,E=0;y<K(a);y+=1,_+=2,E+=6){K(d).setX(_,y/t().length),K(d).setX(_+1,y/t().length),K(f).setX(_,1),K(f).setX(_+1,-1);const w=i()==="none"?1:K(g)(y/(K(a)-1));if(K(p).setX(_,w),K(p).setX(_+1,w),K(v).setXYZW(_,y/(K(a)-1),0,y/(K(a)-1),1),y<K(a)-1){const M=y*2;K(m).setX(E+0,M+0),K(m).setX(E+1,M+1),K(m).setX(E+2,M+2),K(m).setX(E+3,M+2),K(m).setX(E+4,M+1),K(m).setX(E+5,M+3)}}x.setAttribute("position",K(c)),x.setAttribute("previous",K(h)),x.setAttribute("next",K(u)),x.setAttribute("counters",K(d)),x.setAttribute("side",K(f)),x.setAttribute("width",K(p)),x.setAttribute("uv",K(v)),x.setIndex(K(m))}),Et(()=>{if(t().length===0)return;let y=0,_=0,E=0;const w=t()[0];K(h).setXYZ(_,w.x,w.y,w.z),_+=1,K(h).setXYZ(_,w.x,w.y,w.z),_+=1;for(let T=0;T<K(a);T++){const S=t()[T];K(c).setXYZ(y,S.x,S.y,S.z),y+=1,K(c).setXYZ(y,S.x,S.y,S.z),y+=1,T<K(a)-1&&(K(h).setXYZ(_,S.x,S.y,S.z),_+=1,K(h).setXYZ(_,S.x,S.y,S.z),_+=1),T>0&&T+1<=K(a)&&(K(u).setXYZ(E,S.x,S.y,S.z),E+=1,K(u).setXYZ(E,S.x,S.y,S.z),E+=1)}const M=t()[K(a)-1];K(u).setXYZ(E,M.x,M.y,M.z),E+=1,K(u).setXYZ(E,M.x,M.y,M.z),E+=1,K(c).needsUpdate=!0,K(h).needsUpdate=!0,K(u).needsUpdate=!0,x.computeBoundingSphere(),l()}),wt(s,Br({get is(){return x}},()=>o,{get ref(){return r()},set ref(y){r(y)},children:(y,_)=>{var E=gt(),w=Ye(E);Wi(w,()=>e.children??kr,()=>({ref:x})),We(y,E)},$$slots:{default:!0}})),Un()}`${Mt.logdepthbuf_pars_vertex}${Mt.fog_pars_vertex}${Mt.logdepthbuf_vertex}${Mt.fog_vertex}`;function J_(s,e){Ln(e,!0);const[t,i]=ml(),n=()=>Wo(h,"$camera",t);let r=Ve(e,"follow",3,!0),o=Ve(e,"ref",15),a=sr(e,["$$slots","$$events","$$legacy","follow","ref","children"]);const l=new Di,c=new Di,{camera:h,renderStage:u}=Fi(),d=new Ht;let f=st(()=>r()===!0?n():r()===!1?void 0:r());const p=m2("<Billboard>",{before:u}),{start:v,stop:m}=so(()=>{var g;c.updateMatrix(),c.updateWorldMatrix(!1,!1),c.getWorldQuaternion(d),(g=K(f))==null||g.getWorldQuaternion(l.quaternion).premultiply(d.invert())},{autoStart:!1,stage:p});Et(()=>{r()?v():m()}),wt(s,Br({get is(){return c}},()=>a,{get ref(){return o()},set ref(g){o(g)},children:(g,x)=>{wt(g,{get is(){return l},children:(y,_)=>{var E=gt(),w=Ye(E);Wi(w,()=>e.children??kr,()=>({ref:c})),We(y,E)},$$slots:{default:!0}})},$$slots:{default:!0}})),Un(),i()}`${Mt.tonemapping_fragment}${Mt.colorspace_fragment}`;`${Mt.tonemapping_fragment}${Mt.colorspace_fragment}`;const VC=`

// A stack of uint32 indices can can store the indices for
// a perfectly balanced tree with a depth up to 31. Lower stack
// depth gets higher performance.
//
// However not all trees are balanced. Best value to set this to
// is the trees max depth.
#ifndef BVH_STACK_DEPTH
#define BVH_STACK_DEPTH 60
#endif

#ifndef INFINITY
#define INFINITY 1e20
#endif

// Utilities
uvec4 uTexelFetch1D( usampler2D tex, uint index ) {

	uint width = uint( textureSize( tex, 0 ).x );
	uvec2 uv;
	uv.x = index % width;
	uv.y = index / width;

	return texelFetch( tex, ivec2( uv ), 0 );

}

ivec4 iTexelFetch1D( isampler2D tex, uint index ) {

	uint width = uint( textureSize( tex, 0 ).x );
	uvec2 uv;
	uv.x = index % width;
	uv.y = index / width;

	return texelFetch( tex, ivec2( uv ), 0 );

}

vec4 texelFetch1D( sampler2D tex, uint index ) {

	uint width = uint( textureSize( tex, 0 ).x );
	uvec2 uv;
	uv.x = index % width;
	uv.y = index / width;

	return texelFetch( tex, ivec2( uv ), 0 );

}

vec4 textureSampleBarycoord( sampler2D tex, vec3 barycoord, uvec3 faceIndices ) {

	return
		barycoord.x * texelFetch1D( tex, faceIndices.x ) +
		barycoord.y * texelFetch1D( tex, faceIndices.y ) +
		barycoord.z * texelFetch1D( tex, faceIndices.z );

}

void ndcToCameraRay(
	vec2 coord, mat4 cameraWorld, mat4 invProjectionMatrix,
	out vec3 rayOrigin, out vec3 rayDirection
) {

	// get camera look direction and near plane for camera clipping
	vec4 lookDirection = cameraWorld * vec4( 0.0, 0.0, - 1.0, 0.0 );
	vec4 nearVector = invProjectionMatrix * vec4( 0.0, 0.0, - 1.0, 1.0 );
	float near = abs( nearVector.z / nearVector.w );

	// get the camera direction and position from camera matrices
	vec4 origin = cameraWorld * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec4 direction = invProjectionMatrix * vec4( coord, 0.5, 1.0 );
	direction /= direction.w;
	direction = cameraWorld * direction - origin;

	// slide the origin along the ray until it sits at the near clip plane position
	origin.xyz += direction.xyz * near / dot( direction, lookDirection );

	rayOrigin = origin.xyz;
	rayDirection = direction.xyz;

}
`,GC=`

#ifndef TRI_INTERSECT_EPSILON
#define TRI_INTERSECT_EPSILON 1e-5
#endif

// Raycasting
bool intersectsBounds( vec3 rayOrigin, vec3 rayDirection, vec3 boundsMin, vec3 boundsMax, out float dist ) {

	// https://www.reddit.com/r/opengl/comments/8ntzz5/fast_glsl_ray_box_intersection/
	// https://tavianator.com/2011/ray_box.html
	vec3 invDir = 1.0 / rayDirection;

	// find intersection distances for each plane
	vec3 tMinPlane = invDir * ( boundsMin - rayOrigin );
	vec3 tMaxPlane = invDir * ( boundsMax - rayOrigin );

	// get the min and max distances from each intersection
	vec3 tMinHit = min( tMaxPlane, tMinPlane );
	vec3 tMaxHit = max( tMaxPlane, tMinPlane );

	// get the furthest hit distance
	vec2 t = max( tMinHit.xx, tMinHit.yz );
	float t0 = max( t.x, t.y );

	// get the minimum hit distance
	t = min( tMaxHit.xx, tMaxHit.yz );
	float t1 = min( t.x, t.y );

	// set distance to 0.0 if the ray starts inside the box
	dist = max( t0, 0.0 );

	return t1 >= dist;

}

bool intersectsTriangle(
	vec3 rayOrigin, vec3 rayDirection, vec3 a, vec3 b, vec3 c,
	out vec3 barycoord, out vec3 norm, out float dist, out float side
) {

	// https://stackoverflow.com/questions/42740765/intersection-between-line-and-triangle-in-3d
	vec3 edge1 = b - a;
	vec3 edge2 = c - a;
	norm = cross( edge1, edge2 );

	float det = - dot( rayDirection, norm );
	float invdet = 1.0 / det;

	vec3 AO = rayOrigin - a;
	vec3 DAO = cross( AO, rayDirection );

	vec4 uvt;
	uvt.x = dot( edge2, DAO ) * invdet;
	uvt.y = - dot( edge1, DAO ) * invdet;
	uvt.z = dot( AO, norm ) * invdet;
	uvt.w = 1.0 - uvt.x - uvt.y;

	// set the hit information
	barycoord = uvt.wxy; // arranged in A, B, C order
	dist = uvt.z;
	side = sign( det );
	norm = side * normalize( norm );

	// add an epsilon to avoid misses between triangles
	uvt += vec4( TRI_INTERSECT_EPSILON );

	return all( greaterThanEqual( uvt, vec4( 0.0 ) ) );

}

bool intersectTriangles(
	// geometry info and triangle range
	sampler2D positionAttr, usampler2D indexAttr, uint offset, uint count,

	// ray
	vec3 rayOrigin, vec3 rayDirection,

	// outputs
	inout float minDistance, inout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord,
	inout float side, inout float dist
) {

	bool found = false;
	vec3 localBarycoord, localNormal;
	float localDist, localSide;
	for ( uint i = offset, l = offset + count; i < l; i ++ ) {

		uvec3 indices = uTexelFetch1D( indexAttr, i ).xyz;
		vec3 a = texelFetch1D( positionAttr, indices.x ).rgb;
		vec3 b = texelFetch1D( positionAttr, indices.y ).rgb;
		vec3 c = texelFetch1D( positionAttr, indices.z ).rgb;

		if (
			intersectsTriangle( rayOrigin, rayDirection, a, b, c, localBarycoord, localNormal, localDist, localSide )
			&& localDist < minDistance
		) {

			found = true;
			minDistance = localDist;

			faceIndices = uvec4( indices.xyz, i );
			faceNormal = localNormal;

			side = localSide;
			barycoord = localBarycoord;
			dist = localDist;

		}

	}

	return found;

}

bool intersectsBVHNodeBounds( vec3 rayOrigin, vec3 rayDirection, sampler2D bvhBounds, uint currNodeIndex, out float dist ) {

	uint cni2 = currNodeIndex * 2u;
	vec3 boundsMin = texelFetch1D( bvhBounds, cni2 ).xyz;
	vec3 boundsMax = texelFetch1D( bvhBounds, cni2 + 1u ).xyz;
	return intersectsBounds( rayOrigin, rayDirection, boundsMin, boundsMax, dist );

}

// use a macro to hide the fact that we need to expand the struct into separate fields
#define	bvhIntersectFirstHit(		bvh,		rayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist	)	_bvhIntersectFirstHit(		bvh.position, bvh.index, bvh.bvhBounds, bvh.bvhContents,		rayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist	)

bool _bvhIntersectFirstHit(
	// bvh info
	sampler2D bvh_position, usampler2D bvh_index, sampler2D bvh_bvhBounds, usampler2D bvh_bvhContents,

	// ray
	vec3 rayOrigin, vec3 rayDirection,

	// output variables split into separate variables due to output precision
	inout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord,
	inout float side, inout float dist
) {

	// stack needs to be twice as long as the deepest tree we expect because
	// we push both the left and right child onto the stack every traversal
	int ptr = 0;
	uint stack[ BVH_STACK_DEPTH ];
	stack[ 0 ] = 0u;

	float triangleDistance = INFINITY;
	bool found = false;
	while ( ptr > - 1 && ptr < BVH_STACK_DEPTH ) {

		uint currNodeIndex = stack[ ptr ];
		ptr --;

		// check if we intersect the current bounds
		float boundsHitDistance;
		if (
			! intersectsBVHNodeBounds( rayOrigin, rayDirection, bvh_bvhBounds, currNodeIndex, boundsHitDistance )
			|| boundsHitDistance > triangleDistance
		) {

			continue;

		}

		uvec2 boundsInfo = uTexelFetch1D( bvh_bvhContents, currNodeIndex ).xy;
		bool isLeaf = bool( boundsInfo.x & 0xffff0000u );

		if ( isLeaf ) {

			uint count = boundsInfo.x & 0x0000ffffu;
			uint offset = boundsInfo.y;

			found = intersectTriangles(
				bvh_position, bvh_index, offset, count,
				rayOrigin, rayDirection, triangleDistance,
				faceIndices, faceNormal, barycoord, side, dist
			) || found;

		} else {

			uint leftIndex = currNodeIndex + 1u;
			uint splitAxis = boundsInfo.x & 0x0000ffffu;
			uint rightIndex = boundsInfo.y;

			bool leftToRight = rayDirection[ splitAxis ] >= 0.0;
			uint c1 = leftToRight ? leftIndex : rightIndex;
			uint c2 = leftToRight ? rightIndex : leftIndex;

			// set c2 in the stack so we traverse it later. We need to keep track of a pointer in
			// the stack while we traverse. The second pointer added is the one that will be
			// traversed first
			ptr ++;
			stack[ ptr ] = c2;

			ptr ++;
			stack[ ptr ] = c1;

		}

	}

	return found;

}
`,HC=`
struct BVH {

	usampler2D index;
	sampler2D position;

	sampler2D bvhBounds;
	usampler2D bvhContents;

};
`,WC=HC,XC=`
	${VC}
	${GC}
`;`${WC}${XC}${Mt.tonemapping_fragment}${Mt.colorspace_fragment}`;function jC(){var s=Object.create(null);function e(n,r){var o=n.id,a=n.name,l=n.dependencies;l===void 0&&(l=[]);var c=n.init;c===void 0&&(c=function(){});var h=n.getTransferables;if(h===void 0&&(h=null),!s[o])try{l=l.map(function(d){return d&&d.isWorkerModule&&(e(d,function(f){if(f instanceof Error)throw f}),d=s[d.id].value),d}),c=i("<"+a+">.init",c),h&&(h=i("<"+a+">.getTransferables",h));var u=null;typeof c=="function"?u=c.apply(void 0,l):console.error("worker module init function failed to rehydrate"),s[o]={id:o,value:u,getTransferables:h},r(u)}catch(d){d&&d.noLog||console.error(d),r(d)}}function t(n,r){var o,a=n.id,l=n.args;(!s[a]||typeof s[a].value!="function")&&r(new Error("Worker module "+a+": not found or its 'init' did not return a function"));try{var c=(o=s[a]).value.apply(o,l);c&&typeof c.then=="function"?c.then(h,function(u){return r(u instanceof Error?u:new Error(""+u))}):h(c)}catch(u){r(u)}function h(u){try{var d=s[a].getTransferables&&s[a].getTransferables(u);(!d||!Array.isArray(d)||!d.length)&&(d=void 0),r(u,d)}catch(f){console.error(f),r(f)}}}function i(n,r){var o=void 0;self.troikaDefine=function(l){return o=l};var a=URL.createObjectURL(new Blob(["/** "+n.replace(/\*/g,"")+` **/

troikaDefine(
`+r+`
)`],{type:"application/javascript"}));try{importScripts(a)}catch(l){console.error(l)}return URL.revokeObjectURL(a),delete self.troikaDefine,o}self.addEventListener("message",function(n){var r=n.data,o=r.messageId,a=r.action,l=r.data;try{a==="registerModule"&&e(l,function(c){c instanceof Error?postMessage({messageId:o,success:!1,error:c.message}):postMessage({messageId:o,success:!0,result:{isCallable:typeof c=="function"}})}),a==="callModule"&&t(l,function(c,h){c instanceof Error?postMessage({messageId:o,success:!1,error:c.message}):postMessage({messageId:o,success:!0,result:c},h||void 0)})}catch(c){postMessage({messageId:o,success:!1,error:c.stack})}})}function YC(s){var e=function(){for(var t=[],i=arguments.length;i--;)t[i]=arguments[i];return e._getInitResult().then(function(n){if(typeof n=="function")return n.apply(void 0,t);throw new Error("Worker module function was called but `init` did not return a callable function")})};return e._getInitResult=function(){var t=s.dependencies,i=s.init;t=Array.isArray(t)?t.map(function(r){return r&&(r=r.onMainThread||r,r._getInitResult&&(r=r._getInitResult())),r}):[];var n=Promise.all(t).then(function(r){return i.apply(null,r)});return e._getInitResult=function(){return n},n},e}var K_=function(){var s=!1;if(typeof window<"u"&&typeof window.document<"u")try{var e=new Worker(URL.createObjectURL(new Blob([""],{type:"application/javascript"})));e.terminate(),s=!0}catch(t){console.log("Troika createWorkerModule: web workers not allowed; falling back to main thread execution. Cause: ["+t.message+"]")}return K_=function(){return s},s},qC=0,ZC=0,Gd=!1,Xa=Object.create(null),ja=Object.create(null),wf=Object.create(null);function ra(s){if((!s||typeof s.init!="function")&&!Gd)throw new Error("requires `options.init` function");var e=s.dependencies,t=s.init,i=s.getTransferables,n=s.workerId,r=YC(s);n==null&&(n="#default");var o="workerModule"+ ++qC,a=s.name||o,l=null;e=e&&e.map(function(h){return typeof h=="function"&&!h.workerModuleData&&(Gd=!0,h=ra({workerId:n,name:"<"+a+"> function dependency: "+h.name,init:`function(){return (
`+Hc(h)+`
)}`}),Gd=!1),h&&h.workerModuleData&&(h=h.workerModuleData),h});function c(){for(var h=[],u=arguments.length;u--;)h[u]=arguments[u];if(!K_())return r.apply(void 0,h);if(!l){l=s0(n,"registerModule",c.workerModuleData);var d=function(){l=null,ja[n].delete(d)};(ja[n]||(ja[n]=new Set)).add(d)}return l.then(function(f){var p=f.isCallable;if(p)return s0(n,"callModule",{id:o,args:h});throw new Error("Worker module function was called but `init` did not return a callable function")})}return c.workerModuleData={isWorkerModule:!0,id:o,name:a,dependencies:e,init:Hc(t),getTransferables:i&&Hc(i)},c.onMainThread=r,c}function JC(s){ja[s]&&ja[s].forEach(function(e){e()}),Xa[s]&&(Xa[s].terminate(),delete Xa[s])}function Hc(s){var e=s.toString();return!/^function/.test(e)&&/^\w+\s*\(/.test(e)&&(e="function "+e),e}function KC(s){var e=Xa[s];if(!e){var t=Hc(jC);e=Xa[s]=new Worker(URL.createObjectURL(new Blob(["/** Worker Module Bootstrap: "+s.replace(/\*/g,"")+` **/

;(`+t+")()"],{type:"application/javascript"}))),e.onmessage=function(i){var n=i.data,r=n.messageId,o=wf[r];if(!o)throw new Error("WorkerModule response with empty or unknown messageId");delete wf[r],o(n)}}return e}function s0(s,e,t){return new Promise(function(i,n){var r=++ZC;wf[r]=function(o){o.success?i(o.result):n(new Error("Error in worker "+e+" call: "+o.error))},KC(s).postMessage({messageId:r,action:e,data:t})})}function Q_(){var s=function(e){function t(j,$,L,Z,Q,k,W,J){var X=1-W;J.x=X*X*j+2*X*W*L+W*W*Q,J.y=X*X*$+2*X*W*Z+W*W*k}function i(j,$,L,Z,Q,k,W,J,X,ne){var me=1-X;ne.x=me*me*me*j+3*me*me*X*L+3*me*X*X*Q+X*X*X*W,ne.y=me*me*me*$+3*me*me*X*Z+3*me*X*X*k+X*X*X*J}function n(j,$){for(var L=/([MLQCZ])([^MLQCZ]*)/g,Z,Q,k,W,J;Z=L.exec(j);){var X=Z[2].replace(/^\s*|\s*$/g,"").split(/[,\s]+/).map(function(ne){return parseFloat(ne)});switch(Z[1]){case"M":W=Q=X[0],J=k=X[1];break;case"L":(X[0]!==W||X[1]!==J)&&$("L",W,J,W=X[0],J=X[1]);break;case"Q":{$("Q",W,J,W=X[2],J=X[3],X[0],X[1]);break}case"C":{$("C",W,J,W=X[4],J=X[5],X[0],X[1],X[2],X[3]);break}case"Z":(W!==Q||J!==k)&&$("L",W,J,Q,k);break}}}function r(j,$,L){L===void 0&&(L=16);var Z={x:0,y:0};n(j,function(Q,k,W,J,X,ne,me,be,we){switch(Q){case"L":$(k,W,J,X);break;case"Q":{for(var ve=k,Ie=W,U=1;U<L;U++)t(k,W,ne,me,J,X,U/(L-1),Z),$(ve,Ie,Z.x,Z.y),ve=Z.x,Ie=Z.y;break}case"C":{for(var fe=k,he=W,xe=1;xe<L;xe++)i(k,W,ne,me,be,we,J,X,xe/(L-1),Z),$(fe,he,Z.x,Z.y),fe=Z.x,he=Z.y;break}}})}var o="precision highp float;attribute vec2 aUV;varying vec2 vUV;void main(){vUV=aUV;gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}",a="precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){gl_FragColor=texture2D(tex,vUV);}",l=new WeakMap,c={premultipliedAlpha:!1,preserveDrawingBuffer:!0,antialias:!1,depth:!1};function h(j,$){var L=j.getContext?j.getContext("webgl",c):j,Z=l.get(L);if(!Z){let me=function(fe){var he=k[fe];if(!he&&(he=k[fe]=L.getExtension(fe),!he))throw new Error(fe+" not supported");return he},be=function(fe,he){var xe=L.createShader(he);return L.shaderSource(xe,fe),L.compileShader(xe),xe},we=function(fe,he,xe,re){if(!W[fe]){var Te={},pe={},ce=L.createProgram();L.attachShader(ce,be(he,L.VERTEX_SHADER)),L.attachShader(ce,be(xe,L.FRAGMENT_SHADER)),L.linkProgram(ce),W[fe]={program:ce,transaction:function(O){L.useProgram(ce),O({setUniform:function(ee,de){for(var ue=[],ae=arguments.length-2;ae-- >0;)ue[ae]=arguments[ae+2];var De=pe[de]||(pe[de]=L.getUniformLocation(ce,de));L["uniform"+ee].apply(L,[De].concat(ue))},setAttribute:function(ee,de,ue,ae,De){var Pe=Te[ee];Pe||(Pe=Te[ee]={buf:L.createBuffer(),loc:L.getAttribLocation(ce,ee),data:null}),L.bindBuffer(L.ARRAY_BUFFER,Pe.buf),L.vertexAttribPointer(Pe.loc,de,L.FLOAT,!1,0,0),L.enableVertexAttribArray(Pe.loc),Q?L.vertexAttribDivisor(Pe.loc,ae):me("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(Pe.loc,ae),De!==Pe.data&&(L.bufferData(L.ARRAY_BUFFER,De,ue),Pe.data=De)}})}}}W[fe].transaction(re)},ve=function(fe,he){X++;try{L.activeTexture(L.TEXTURE0+X);var xe=J[fe];xe||(xe=J[fe]=L.createTexture(),L.bindTexture(L.TEXTURE_2D,xe),L.texParameteri(L.TEXTURE_2D,L.TEXTURE_MIN_FILTER,L.NEAREST),L.texParameteri(L.TEXTURE_2D,L.TEXTURE_MAG_FILTER,L.NEAREST)),L.bindTexture(L.TEXTURE_2D,xe),he(xe,X)}finally{X--}},Ie=function(fe,he,xe){var re=L.createFramebuffer();ne.push(re),L.bindFramebuffer(L.FRAMEBUFFER,re),L.activeTexture(L.TEXTURE0+he),L.bindTexture(L.TEXTURE_2D,fe),L.framebufferTexture2D(L.FRAMEBUFFER,L.COLOR_ATTACHMENT0,L.TEXTURE_2D,fe,0);try{xe(re)}finally{L.deleteFramebuffer(re),L.bindFramebuffer(L.FRAMEBUFFER,ne[--ne.length-1]||null)}},U=function(){k={},W={},J={},X=-1,ne.length=0};var Q=typeof WebGL2RenderingContext<"u"&&L instanceof WebGL2RenderingContext,k={},W={},J={},X=-1,ne=[];L.canvas.addEventListener("webglcontextlost",function(fe){U(),fe.preventDefault()},!1),l.set(L,Z={gl:L,isWebGL2:Q,getExtension:me,withProgram:we,withTexture:ve,withTextureFramebuffer:Ie,handleContextLoss:U})}$(Z)}function u(j,$,L,Z,Q,k,W,J){W===void 0&&(W=15),J===void 0&&(J=null),h(j,function(X){var ne=X.gl,me=X.withProgram,be=X.withTexture;be("copy",function(we,ve){ne.texImage2D(ne.TEXTURE_2D,0,ne.RGBA,Q,k,0,ne.RGBA,ne.UNSIGNED_BYTE,$),me("copy",o,a,function(Ie){var U=Ie.setUniform,fe=Ie.setAttribute;fe("aUV",2,ne.STATIC_DRAW,0,new Float32Array([0,0,2,0,0,2])),U("1i","image",ve),ne.bindFramebuffer(ne.FRAMEBUFFER,J||null),ne.disable(ne.BLEND),ne.colorMask(W&8,W&4,W&2,W&1),ne.viewport(L,Z,Q,k),ne.scissor(L,Z,Q,k),ne.drawArrays(ne.TRIANGLES,0,3)})})})}function d(j,$,L){var Z=j.width,Q=j.height;h(j,function(k){var W=k.gl,J=new Uint8Array(Z*Q*4);W.readPixels(0,0,Z,Q,W.RGBA,W.UNSIGNED_BYTE,J),j.width=$,j.height=L,u(W,J,0,0,Z,Q)})}var f=Object.freeze({__proto__:null,withWebGLContext:h,renderImageData:u,resizeWebGLCanvasWithoutClearing:d});function p(j,$,L,Z,Q,k){k===void 0&&(k=1);var W=new Uint8Array(j*$),J=Z[2]-Z[0],X=Z[3]-Z[1],ne=[];r(L,function(fe,he,xe,re){ne.push({x1:fe,y1:he,x2:xe,y2:re,minX:Math.min(fe,xe),minY:Math.min(he,re),maxX:Math.max(fe,xe),maxY:Math.max(he,re)})}),ne.sort(function(fe,he){return fe.maxX-he.maxX});for(var me=0;me<j;me++)for(var be=0;be<$;be++){var we=Ie(Z[0]+J*(me+.5)/j,Z[1]+X*(be+.5)/$),ve=Math.pow(1-Math.abs(we)/Q,k)/2;we<0&&(ve=1-ve),ve=Math.max(0,Math.min(255,Math.round(ve*255))),W[be*j+me]=ve}return W;function Ie(fe,he){for(var xe=1/0,re=1/0,Te=ne.length;Te--;){var pe=ne[Te];if(pe.maxX+re<=fe)break;if(fe+re>pe.minX&&he-re<pe.maxY&&he+re>pe.minY){var ce=g(fe,he,pe.x1,pe.y1,pe.x2,pe.y2);ce<xe&&(xe=ce,re=Math.sqrt(xe))}}return U(fe,he)&&(re=-re),re}function U(fe,he){for(var xe=0,re=ne.length;re--;){var Te=ne[re];if(Te.maxX<=fe)break;var pe=Te.y1>he!=Te.y2>he&&fe<(Te.x2-Te.x1)*(he-Te.y1)/(Te.y2-Te.y1)+Te.x1;pe&&(xe+=Te.y1<Te.y2?1:-1)}return xe!==0}}function v(j,$,L,Z,Q,k,W,J,X,ne){k===void 0&&(k=1),J===void 0&&(J=0),X===void 0&&(X=0),ne===void 0&&(ne=0),m(j,$,L,Z,Q,k,W,null,J,X,ne)}function m(j,$,L,Z,Q,k,W,J,X,ne,me){k===void 0&&(k=1),X===void 0&&(X=0),ne===void 0&&(ne=0),me===void 0&&(me=0);for(var be=p(j,$,L,Z,Q,k),we=new Uint8Array(be.length*4),ve=0;ve<be.length;ve++)we[ve*4+me]=be[ve];u(W,we,X,ne,j,$,1<<3-me,J)}function g(j,$,L,Z,Q,k){var W=Q-L,J=k-Z,X=W*W+J*J,ne=X?Math.max(0,Math.min(1,((j-L)*W+($-Z)*J)/X)):0,me=j-(L+ne*W),be=$-(Z+ne*J);return me*me+be*be}var x=Object.freeze({__proto__:null,generate:p,generateIntoCanvas:v,generateIntoFramebuffer:m}),y="precision highp float;uniform vec4 uGlyphBounds;attribute vec2 aUV;attribute vec4 aLineSegment;varying vec4 vLineSegment;varying vec2 vGlyphXY;void main(){vLineSegment=aLineSegment;vGlyphXY=mix(uGlyphBounds.xy,uGlyphBounds.zw,aUV);gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}",_="precision highp float;uniform vec4 uGlyphBounds;uniform float uMaxDistance;uniform float uExponent;varying vec4 vLineSegment;varying vec2 vGlyphXY;float absDistToSegment(vec2 point,vec2 lineA,vec2 lineB){vec2 lineDir=lineB-lineA;float lenSq=dot(lineDir,lineDir);float t=lenSq==0.0 ? 0.0 : clamp(dot(point-lineA,lineDir)/lenSq,0.0,1.0);vec2 linePt=lineA+t*lineDir;return distance(point,linePt);}void main(){vec4 seg=vLineSegment;vec2 p=vGlyphXY;float dist=absDistToSegment(p,seg.xy,seg.zw);float val=pow(1.0-clamp(dist/uMaxDistance,0.0,1.0),uExponent)*0.5;bool crossing=(seg.y>p.y!=seg.w>p.y)&&(p.x<(seg.z-seg.x)*(p.y-seg.y)/(seg.w-seg.y)+seg.x);bool crossingUp=crossing&&vLineSegment.y<vLineSegment.w;gl_FragColor=vec4(crossingUp ? 1.0/255.0 : 0.0,crossing&&!crossingUp ? 1.0/255.0 : 0.0,0.0,val);}",E="precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){vec4 color=texture2D(tex,vUV);bool inside=color.r!=color.g;float val=inside ? 1.0-color.a : color.a;gl_FragColor=vec4(val);}",w=new Float32Array([0,0,2,0,0,2]),M=null,T=!1,S={},b=new WeakMap;function P(j){if(!T&&!q(j))throw new Error("WebGL generation not supported")}function D(j,$,L,Z,Q,k,W){if(k===void 0&&(k=1),W===void 0&&(W=null),!W&&(W=M,!W)){var J=typeof OffscreenCanvas=="function"?new OffscreenCanvas(1,1):typeof document<"u"?document.createElement("canvas"):null;if(!J)throw new Error("OffscreenCanvas or DOM canvas not supported");W=M=J.getContext("webgl",{depth:!1})}P(W);var X=new Uint8Array(j*$*4);h(W,function(we){var ve=we.gl,Ie=we.withTexture,U=we.withTextureFramebuffer;Ie("readable",function(fe,he){ve.texImage2D(ve.TEXTURE_2D,0,ve.RGBA,j,$,0,ve.RGBA,ve.UNSIGNED_BYTE,null),U(fe,he,function(xe){H(j,$,L,Z,Q,k,ve,xe,0,0,0),ve.readPixels(0,0,j,$,ve.RGBA,ve.UNSIGNED_BYTE,X)})})});for(var ne=new Uint8Array(j*$),me=0,be=0;me<X.length;me+=4)ne[be++]=X[me];return ne}function G(j,$,L,Z,Q,k,W,J,X,ne){k===void 0&&(k=1),J===void 0&&(J=0),X===void 0&&(X=0),ne===void 0&&(ne=0),H(j,$,L,Z,Q,k,W,null,J,X,ne)}function H(j,$,L,Z,Q,k,W,J,X,ne,me){k===void 0&&(k=1),X===void 0&&(X=0),ne===void 0&&(ne=0),me===void 0&&(me=0),P(W);var be=[];r(L,function(we,ve,Ie,U){be.push(we,ve,Ie,U)}),be=new Float32Array(be),h(W,function(we){var ve=we.gl,Ie=we.isWebGL2,U=we.getExtension,fe=we.withProgram,he=we.withTexture,xe=we.withTextureFramebuffer,re=we.handleContextLoss;if(he("rawDistances",function(Te,pe){(j!==Te._lastWidth||$!==Te._lastHeight)&&ve.texImage2D(ve.TEXTURE_2D,0,ve.RGBA,Te._lastWidth=j,Te._lastHeight=$,0,ve.RGBA,ve.UNSIGNED_BYTE,null),fe("main",y,_,function(ce){var ke=ce.setAttribute,O=ce.setUniform,A=!Ie&&U("ANGLE_instanced_arrays"),ee=!Ie&&U("EXT_blend_minmax");ke("aUV",2,ve.STATIC_DRAW,0,w),ke("aLineSegment",4,ve.DYNAMIC_DRAW,1,be),O.apply(void 0,["4f","uGlyphBounds"].concat(Z)),O("1f","uMaxDistance",Q),O("1f","uExponent",k),xe(Te,pe,function(de){ve.enable(ve.BLEND),ve.colorMask(!0,!0,!0,!0),ve.viewport(0,0,j,$),ve.scissor(0,0,j,$),ve.blendFunc(ve.ONE,ve.ONE),ve.blendEquationSeparate(ve.FUNC_ADD,Ie?ve.MAX:ee.MAX_EXT),ve.clear(ve.COLOR_BUFFER_BIT),Ie?ve.drawArraysInstanced(ve.TRIANGLES,0,3,be.length/4):A.drawArraysInstancedANGLE(ve.TRIANGLES,0,3,be.length/4)})}),fe("post",o,E,function(ce){ce.setAttribute("aUV",2,ve.STATIC_DRAW,0,w),ce.setUniform("1i","tex",pe),ve.bindFramebuffer(ve.FRAMEBUFFER,J),ve.disable(ve.BLEND),ve.colorMask(me===0,me===1,me===2,me===3),ve.viewport(X,ne,j,$),ve.scissor(X,ne,j,$),ve.drawArrays(ve.TRIANGLES,0,3)})}),ve.isContextLost())throw re(),new Error("webgl context lost")})}function q(j){var $=!j||j===M?S:j.canvas||j,L=b.get($);if(L===void 0){T=!0;var Z=null;try{var Q=[97,106,97,61,99,137,118,80,80,118,137,99,61,97,106,97],k=D(4,4,"M8,8L16,8L24,24L16,24Z",[0,0,32,32],24,1,j);L=k&&Q.length===k.length&&k.every(function(W,J){return W===Q[J]}),L||(Z="bad trial run results",console.info(Q,k))}catch(W){L=!1,Z=W.message}Z&&console.warn("WebGL SDF generation not supported:",Z),T=!1,b.set($,L)}return L}var F=Object.freeze({__proto__:null,generate:D,generateIntoCanvas:G,generateIntoFramebuffer:H,isSupported:q});function te(j,$,L,Z,Q,k){Q===void 0&&(Q=Math.max(Z[2]-Z[0],Z[3]-Z[1])/2),k===void 0&&(k=1);try{return D.apply(F,arguments)}catch(W){return console.info("WebGL SDF generation failed, falling back to JS",W),p.apply(x,arguments)}}function Y(j,$,L,Z,Q,k,W,J,X,ne){Q===void 0&&(Q=Math.max(Z[2]-Z[0],Z[3]-Z[1])/2),k===void 0&&(k=1),J===void 0&&(J=0),X===void 0&&(X=0),ne===void 0&&(ne=0);try{return G.apply(F,arguments)}catch(me){return console.info("WebGL SDF generation failed, falling back to JS",me),v.apply(x,arguments)}}return e.forEachPathCommand=n,e.generate=te,e.generateIntoCanvas=Y,e.javascript=x,e.pathToLineSegments=r,e.webgl=F,e.webglUtils=f,Object.defineProperty(e,"__esModule",{value:!0}),e}({});return s}function QC(){var s=function(e){var t={R:"13k,1a,2,3,3,2+1j,ch+16,a+1,5+2,2+n,5,a,4,6+16,4+3,h+1b,4mo,179q,2+9,2+11,2i9+7y,2+68,4,3+4,5+13,4+3,2+4k,3+29,8+cf,1t+7z,w+17,3+3m,1t+3z,16o1+5r,8+30,8+mc,29+1r,29+4v,75+73",EN:"1c+9,3d+1,6,187+9,513,4+5,7+9,sf+j,175h+9,qw+q,161f+1d,4xt+a,25i+9",ES:"17,2,6dp+1,f+1,av,16vr,mx+1,4o,2",ET:"z+2,3h+3,b+1,ym,3e+1,2o,p4+1,8,6u,7c,g6,1wc,1n9+4,30+1b,2n,6d,qhx+1,h0m,a+1,49+2,63+1,4+1,6bb+3,12jj",AN:"16o+5,2j+9,2+1,35,ed,1ff2+9,87+u",CS:"18,2+1,b,2u,12k,55v,l,17v0,2,3,53,2+1,b",B:"a,3,f+2,2v,690",S:"9,2,k",WS:"c,k,4f4,1vk+a,u,1j,335",ON:"x+1,4+4,h+5,r+5,r+3,z,5+3,2+1,2+1,5,2+2,3+4,o,w,ci+1,8+d,3+d,6+8,2+g,39+1,9,6+1,2,33,b8,3+1,3c+1,7+1,5r,b,7h+3,sa+5,2,3i+6,jg+3,ur+9,2v,ij+1,9g+9,7+a,8m,4+1,49+x,14u,2+2,c+2,e+2,e+2,e+1,i+n,e+e,2+p,u+2,e+2,36+1,2+3,2+1,b,2+2,6+5,2,2,2,h+1,5+4,6+3,3+f,16+2,5+3l,3+81,1y+p,2+40,q+a,m+13,2r+ch,2+9e,75+hf,3+v,2+2w,6e+5,f+6,75+2a,1a+p,2+2g,d+5x,r+b,6+3,4+o,g,6+1,6+2,2k+1,4,2j,5h+z,1m+1,1e+f,t+2,1f+e,d+3,4o+3,2s+1,w,535+1r,h3l+1i,93+2,2s,b+1,3l+x,2v,4g+3,21+3,kz+1,g5v+1,5a,j+9,n+v,2,3,2+8,2+1,3+2,2,3,46+1,4+4,h+5,r+5,r+a,3h+2,4+6,b+4,78,1r+24,4+c,4,1hb,ey+6,103+j,16j+c,1ux+7,5+g,fsh,jdq+1t,4,57+2e,p1,1m,1m,1m,1m,4kt+1,7j+17,5+2r,d+e,3+e,2+e,2+10,m+4,w,1n+5,1q,4z+5,4b+rb,9+c,4+c,4+37,d+2g,8+b,l+b,5+1j,9+9,7+13,9+t,3+1,27+3c,2+29,2+3q,d+d,3+4,4+2,6+6,a+o,8+6,a+2,e+6,16+42,2+1i",BN:"0+8,6+d,2s+5,2+p,e,4m9,1kt+2,2b+5,5+5,17q9+v,7k,6p+8,6+1,119d+3,440+7,96s+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+75,6p+2rz,1ben+1,1ekf+1,1ekf+1",NSM:"lc+33,7o+6,7c+18,2,2+1,2+1,2,21+a,1d+k,h,2u+6,3+5,3+1,2+3,10,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,g+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+g,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,k1+w,2db+2,3y,2p+v,ff+3,30+1,n9x+3,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,r2,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+5,3+1,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2d+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,f0c+4,1o+6,t5,1s+3,2a,f5l+1,43t+2,i+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,gzhy+6n",AL:"16w,3,2,e+1b,z+2,2+2s,g+1,8+1,b+m,2+t,s+2i,c+e,4h+f,1d+1e,1bwe+dp,3+3z,x+c,2+1,35+3y,2rm+z,5+7,b+5,dt+l,c+u,17nl+27,1t+27,4x+6n,3+d",LRO:"6ct",RLO:"6cu",LRE:"6cq",RLE:"6cr",PDF:"6cs",LRI:"6ee",RLI:"6ef",FSI:"6eg",PDI:"6eh"},i={},n={};i.L=1,n[1]="L",Object.keys(t).forEach(function(re,Te){i[re]=1<<Te+1,n[i[re]]=re}),Object.freeze(i);var r=i.LRI|i.RLI|i.FSI,o=i.L|i.R|i.AL,a=i.B|i.S|i.WS|i.ON|i.FSI|i.LRI|i.RLI|i.PDI,l=i.BN|i.RLE|i.LRE|i.RLO|i.LRO|i.PDF,c=i.S|i.WS|i.B|r|i.PDI|l,h=null;function u(){if(!h){h=new Map;var re=function(pe){if(t.hasOwnProperty(pe)){var ce=0;t[pe].split(",").forEach(function(ke){var O=ke.split("+"),A=O[0],ee=O[1];A=parseInt(A,36),ee=ee?parseInt(ee,36):0,h.set(ce+=A,i[pe]);for(var de=0;de<ee;de++)h.set(++ce,i[pe])})}};for(var Te in t)re(Te)}}function d(re){return u(),h.get(re.codePointAt(0))||i.L}function f(re){return n[d(re)]}var p={pairs:"14>1,1e>2,u>2,2wt>1,1>1,1ge>1,1wp>1,1j>1,f>1,hm>1,1>1,u>1,u6>1,1>1,+5,28>1,w>1,1>1,+3,b8>1,1>1,+3,1>3,-1>-1,3>1,1>1,+2,1s>1,1>1,x>1,th>1,1>1,+2,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,4q>1,1e>2,u>2,2>1,+1",canonical:"6f1>-6dx,6dy>-6dx,6ec>-6ed,6ee>-6ed,6ww>2jj,-2ji>2jj,14r4>-1e7l,1e7m>-1e7l,1e7m>-1e5c,1e5d>-1e5b,1e5c>-14qx,14qy>-14qx,14vn>-1ecg,1ech>-1ecg,1edu>-1ecg,1eci>-1ecg,1eda>-1ecg,1eci>-1ecg,1eci>-168q,168r>-168q,168s>-14ye,14yf>-14ye"};function v(re,Te){var pe=36,ce=0,ke=new Map,O=Te&&new Map,A;return re.split(",").forEach(function ee(de){if(de.indexOf("+")!==-1)for(var ue=+de;ue--;)ee(A);else{A=de;var ae=de.split(">"),De=ae[0],Pe=ae[1];De=String.fromCodePoint(ce+=parseInt(De,pe)),Pe=String.fromCodePoint(ce+=parseInt(Pe,pe)),ke.set(De,Pe),Te&&O.set(Pe,De)}}),{map:ke,reverseMap:O}}var m,g,x;function y(){if(!m){var re=v(p.pairs,!0),Te=re.map,pe=re.reverseMap;m=Te,g=pe,x=v(p.canonical,!1).map}}function _(re){return y(),m.get(re)||null}function E(re){return y(),g.get(re)||null}function w(re){return y(),x.get(re)||null}var M=i.L,T=i.R,S=i.EN,b=i.ES,P=i.ET,D=i.AN,G=i.CS,H=i.B,q=i.S,F=i.ON,te=i.BN,Y=i.NSM,j=i.AL,$=i.LRO,L=i.RLO,Z=i.LRE,Q=i.RLE,k=i.PDF,W=i.LRI,J=i.RLI,X=i.FSI,ne=i.PDI;function me(re,Te){for(var pe=125,ce=new Uint32Array(re.length),ke=0;ke<re.length;ke++)ce[ke]=d(re[ke]);var O=new Map;function A(ui,Ji){var di=ce[ui];ce[ui]=Ji,O.set(di,O.get(di)-1),di&a&&O.set(a,O.get(a)-1),O.set(Ji,(O.get(Ji)||0)+1),Ji&a&&O.set(a,(O.get(a)||0)+1)}for(var ee=new Uint8Array(re.length),de=new Map,ue=[],ae=null,De=0;De<re.length;De++)ae||ue.push(ae={start:De,end:re.length-1,level:Te==="rtl"?1:Te==="ltr"?0:Vp(De,!1)}),ce[De]&H&&(ae.end=De,ae=null);for(var Pe=Q|Z|L|$|r|ne|k|H,He=function(ui){return ui+(ui&1?1:2)},je=function(ui){return ui+(ui&1?2:1)},Se=0;Se<ue.length;Se++){ae=ue[Se];var Le=[{_level:ae.level,_override:0,_isolate:0}],Ue=void 0,$e=0,Ne=0,dt=0;O.clear();for(var ie=ae.start;ie<=ae.end;ie++){var Re=ce[ie];if(Ue=Le[Le.length-1],O.set(Re,(O.get(Re)||0)+1),Re&a&&O.set(a,(O.get(a)||0)+1),Re&Pe)if(Re&(Q|Z)){ee[ie]=Ue._level;var Ee=(Re===Q?je:He)(Ue._level);Ee<=pe&&!$e&&!Ne?Le.push({_level:Ee,_override:0,_isolate:0}):$e||Ne++}else if(Re&(L|$)){ee[ie]=Ue._level;var et=(Re===L?je:He)(Ue._level);et<=pe&&!$e&&!Ne?Le.push({_level:et,_override:Re&L?T:M,_isolate:0}):$e||Ne++}else if(Re&r){Re&X&&(Re=Vp(ie+1,!0)===1?J:W),ee[ie]=Ue._level,Ue._override&&A(ie,Ue._override);var Ce=(Re===J?je:He)(Ue._level);Ce<=pe&&$e===0&&Ne===0?(dt++,Le.push({_level:Ce,_override:0,_isolate:1,_isolInitIndex:ie})):$e++}else if(Re&ne){if($e>0)$e--;else if(dt>0){for(Ne=0;!Le[Le.length-1]._isolate;)Le.pop();var ye=Le[Le.length-1]._isolInitIndex;ye!=null&&(de.set(ye,ie),de.set(ie,ye)),Le.pop(),dt--}Ue=Le[Le.length-1],ee[ie]=Ue._level,Ue._override&&A(ie,Ue._override)}else Re&k?($e===0&&(Ne>0?Ne--:!Ue._isolate&&Le.length>1&&(Le.pop(),Ue=Le[Le.length-1])),ee[ie]=Ue._level):Re&H&&(ee[ie]=ae.level);else ee[ie]=Ue._level,Ue._override&&Re!==te&&A(ie,Ue._override)}for(var Ze=[],tt=null,rt=ae.start;rt<=ae.end;rt++){var ht=ce[rt];if(!(ht&l)){var jt=ee[rt],$t=ht&r,an=ht===ne;tt&&jt===tt._level?(tt._end=rt,tt._endsWithIsolInit=$t):Ze.push(tt={_start:rt,_end:rt,_level:jt,_startsWithPDI:an,_endsWithIsolInit:$t})}}for(var Zn=[],Nn=0;Nn<Ze.length;Nn++){var ni=Ze[Nn];if(!ni._startsWithPDI||ni._startsWithPDI&&!de.has(ni._start)){for(var Ti=[tt=ni],Ai=void 0;tt&&tt._endsWithIsolInit&&(Ai=de.get(tt._end))!=null;)for(var Jn=Nn+1;Jn<Ze.length;Jn++)if(Ze[Jn]._start===Ai){Ti.push(tt=Ze[Jn]);break}for(var yn=[],hi=0;hi<Ti.length;hi++)for(var us=Ti[hi],Gr=us._start;Gr<=us._end;Gr++)yn.push(Gr);for(var sa=ee[yn[0]],fo=ae.level,Hr=yn[0]-1;Hr>=0;Hr--)if(!(ce[Hr]&l)){fo=ee[Hr];break}var ds=yn[yn.length-1],oa=ee[ds],po=ae.level;if(!(ce[ds]&r)){for(var B=ds+1;B<=ae.end;B++)if(!(ce[B]&l)){po=ee[B];break}}Zn.push({_seqIndices:yn,_sosType:Math.max(fo,sa)%2?T:M,_eosType:Math.max(po,oa)%2?T:M})}}for(var oe=0;oe<Zn.length;oe++){var ge=Zn[oe],se=ge._seqIndices,le=ge._sosType,Be=ge._eosType,Je=ee[se[0]]&1?T:M;if(O.get(Y))for(var ot=0;ot<se.length;ot++){var nt=se[ot];if(ce[nt]&Y){for(var bt=le,_t=ot-1;_t>=0;_t--)if(!(ce[se[_t]]&l)){bt=ce[se[_t]];break}A(nt,bt&(r|ne)?F:bt)}}if(O.get(S))for(var pt=0;pt<se.length;pt++){var Tt=se[pt];if(ce[Tt]&S)for(var kt=pt-1;kt>=-1;kt--){var en=kt===-1?le:ce[se[kt]];if(en&o){en===j&&A(Tt,D);break}}}if(O.get(j))for(var Wt=0;Wt<se.length;Wt++){var zt=se[Wt];ce[zt]&j&&A(zt,T)}if(O.get(b)||O.get(G))for(var mt=1;mt<se.length-1;mt++){var Zt=se[mt];if(ce[Zt]&(b|G)){for(var Dt=0,Tn=0,Yt=mt-1;Yt>=0&&(Dt=ce[se[Yt]],!!(Dt&l));Yt--);for(var xn=mt+1;xn<se.length&&(Tn=ce[se[xn]],!!(Tn&l));xn++);Dt===Tn&&(ce[Zt]===b?Dt===S:Dt&(S|D))&&A(Zt,Dt)}}if(O.get(S))for(var On=0;On<se.length;On++){var Jt=se[On];if(ce[Jt]&S){for(var An=On-1;An>=0&&ce[se[An]]&(P|l);An--)A(se[An],S);for(On++;On<se.length&&ce[se[On]]&(P|l|S);On++)ce[se[On]]!==S&&A(se[On],S)}}if(O.get(P)||O.get(b)||O.get(G))for(var pn=0;pn<se.length;pn++){var hn=se[pn];if(ce[hn]&(P|b|G)){A(hn,F);for(var ln=pn-1;ln>=0&&ce[se[ln]]&l;ln--)A(se[ln],F);for(var qi=pn+1;qi<se.length&&ce[se[qi]]&l;qi++)A(se[qi],F)}}if(O.get(S))for(var Ci=0,St=le;Ci<se.length;Ci++){var fs=se[Ci],R=ce[fs];R&S?St===M&&A(fs,M):R&o&&(St=R)}if(O.get(a)){var C=T|S|D,z=C|M,N=[];{for(var V=[],_e=0;_e<se.length;_e++)if(ce[se[_e]]&a){var Ae=re[se[_e]],it=void 0;if(_(Ae)!==null)if(V.length<63)V.push({char:Ae,seqIndex:_e});else break;else if((it=E(Ae))!==null)for(var Xe=V.length-1;Xe>=0;Xe--){var Qe=V[Xe].char;if(Qe===it||Qe===E(w(Ae))||_(w(Qe))===Ae){N.push([V[Xe].seqIndex,_e]),V.length=Xe;break}}}N.sort(function(ui,Ji){return ui[0]-Ji[0]})}for(var ft=0;ft<N.length;ft++){for(var Fe=N[ft],ut=Fe[0],at=Fe[1],vt=!1,lt=0,nn=ut+1;nn<at;nn++){var Gt=se[nn];if(ce[Gt]&z){vt=!0;var Bt=ce[Gt]&C?T:M;if(Bt===Je){lt=Bt;break}}}if(vt&&!lt){lt=le;for(var Ft=ut-1;Ft>=0;Ft--){var ki=se[Ft];if(ce[ki]&z){var Vn=ce[ki]&C?T:M;Vn!==Je?lt=Vn:lt=Je;break}}}if(lt){if(ce[se[ut]]=ce[se[at]]=lt,lt!==Je){for(var Bi=ut+1;Bi<se.length;Bi++)if(!(ce[se[Bi]]&l)){d(re[se[Bi]])&Y&&(ce[se[Bi]]=lt);break}}if(lt!==Je){for(var ps=at+1;ps<se.length;ps++)if(!(ce[se[ps]]&l)){d(re[se[ps]])&Y&&(ce[se[ps]]=lt);break}}}}for(var Zi=0;Zi<se.length;Zi++)if(ce[se[Zi]]&a){for(var Bp=Zi,Au=Zi,Cu=le,aa=Zi-1;aa>=0;aa--)if(ce[se[aa]]&l)Bp=aa;else{Cu=ce[se[aa]]&C?T:M;break}for(var zp=Be,la=Zi+1;la<se.length;la++)if(ce[se[la]]&(a|l))Au=la;else{zp=ce[se[la]]&C?T:M;break}for(var Ru=Bp;Ru<=Au;Ru++)ce[se[Ru]]=Cu===zp?Cu:Je;Zi=Au}}}for(var Ri=ae.start;Ri<=ae.end;Ri++){var yy=ee[Ri],Al=ce[Ri];if(yy&1?Al&(M|S|D)&&ee[Ri]++:Al&T?ee[Ri]++:Al&(D|S)&&(ee[Ri]+=2),Al&l&&(ee[Ri]=Ri===0?ae.level:ee[Ri-1]),Ri===ae.end||d(re[Ri])&(q|H))for(var Cl=Ri;Cl>=0&&d(re[Cl])&c;Cl--)ee[Cl]=ae.level}}return{levels:ee,paragraphs:ue};function Vp(ui,Ji){for(var di=ui;di<re.length;di++){var Wr=ce[di];if(Wr&(T|j))return 1;if(Wr&(H|M)||Ji&&Wr===ne)return 0;if(Wr&r){var Gp=xy(di);di=Gp===-1?re.length:Gp}}return 0}function xy(ui){for(var Ji=1,di=ui+1;di<re.length;di++){var Wr=ce[di];if(Wr&H)break;if(Wr&ne){if(--Ji===0)return di}else Wr&r&&Ji++}return-1}}var be="14>1,j>2,t>2,u>2,1a>g,2v3>1,1>1,1ge>1,1wd>1,b>1,1j>1,f>1,ai>3,-2>3,+1,8>1k0,-1jq>1y7,-1y6>1hf,-1he>1h6,-1h5>1ha,-1h8>1qi,-1pu>1,6>3u,-3s>7,6>1,1>1,f>1,1>1,+2,3>1,1>1,+13,4>1,1>1,6>1eo,-1ee>1,3>1mg,-1me>1mk,-1mj>1mi,-1mg>1mi,-1md>1,1>1,+2,1>10k,-103>1,1>1,4>1,5>1,1>1,+10,3>1,1>8,-7>8,+1,-6>7,+1,a>1,1>1,u>1,u6>1,1>1,+5,26>1,1>1,2>1,2>2,8>1,7>1,4>1,1>1,+5,b8>1,1>1,+3,1>3,-2>1,2>1,1>1,+2,c>1,3>1,1>1,+2,h>1,3>1,a>1,1>1,2>1,3>1,1>1,d>1,f>1,3>1,1a>1,1>1,6>1,7>1,13>1,k>1,1>1,+19,4>1,1>1,+2,2>1,1>1,+18,m>1,a>1,1>1,lk>1,1>1,4>1,2>1,f>1,3>1,1>1,+3,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,6>1,4j>1,j>2,t>2,u>2,2>1,+1",we;function ve(){if(!we){var re=v(be,!0),Te=re.map,pe=re.reverseMap;pe.forEach(function(ce,ke){Te.set(ke,ce)}),we=Te}}function Ie(re){return ve(),we.get(re)||null}function U(re,Te,pe,ce){var ke=re.length;pe=Math.max(0,pe==null?0:+pe),ce=Math.min(ke-1,ce==null?ke-1:+ce);for(var O=new Map,A=pe;A<=ce;A++)if(Te[A]&1){var ee=Ie(re[A]);ee!==null&&O.set(A,ee)}return O}function fe(re,Te,pe,ce){var ke=re.length;pe=Math.max(0,pe==null?0:+pe),ce=Math.min(ke-1,ce==null?ke-1:+ce);var O=[];return Te.paragraphs.forEach(function(A){var ee=Math.max(pe,A.start),de=Math.min(ce,A.end);if(ee<de){for(var ue=Te.levels.slice(ee,de+1),ae=de;ae>=ee&&d(re[ae])&c;ae--)ue[ae]=A.level;for(var De=A.level,Pe=1/0,He=0;He<ue.length;He++){var je=ue[He];je>De&&(De=je),je<Pe&&(Pe=je|1)}for(var Se=De;Se>=Pe;Se--)for(var Le=0;Le<ue.length;Le++)if(ue[Le]>=Se){for(var Ue=Le;Le+1<ue.length&&ue[Le+1]>=Se;)Le++;Le>Ue&&O.push([Ue+ee,Le+ee])}}}),O}function he(re,Te,pe,ce){var ke=xe(re,Te,pe,ce),O=[].concat(re);return ke.forEach(function(A,ee){O[ee]=(Te.levels[A]&1?Ie(re[A]):null)||re[A]}),O.join("")}function xe(re,Te,pe,ce){for(var ke=fe(re,Te,pe,ce),O=[],A=0;A<re.length;A++)O[A]=A;return ke.forEach(function(ee){for(var de=ee[0],ue=ee[1],ae=O.slice(de,ue+1),De=ae.length;De--;)O[ue-De]=ae[De]}),O}return e.closingToOpeningBracket=E,e.getBidiCharType=d,e.getBidiCharTypeName=f,e.getCanonicalBracket=w,e.getEmbeddingLevels=me,e.getMirroredCharacter=Ie,e.getMirroredCharactersMap=U,e.getReorderSegments=fe,e.getReorderedIndices=xe,e.getReorderedString=he,e.openingToClosingBracket=_,Object.defineProperty(e,"__esModule",{value:!0}),e}({});return s}const $_=/\bvoid\s+main\s*\(\s*\)\s*{/g;function Ef(s){const e=/^[ \t]*#include +<([\w\d./]+)>/gm;function t(i,n){let r=Mt[n];return r?Ef(r):i}return s.replace(e,t)}const Wn=[];for(let s=0;s<256;s++)Wn[s]=(s<16?"0":"")+s.toString(16);function $C(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(Wn[s&255]+Wn[s>>8&255]+Wn[s>>16&255]+Wn[s>>24&255]+"-"+Wn[e&255]+Wn[e>>8&255]+"-"+Wn[e>>16&15|64]+Wn[e>>24&255]+"-"+Wn[t&63|128]+Wn[t>>8&255]+"-"+Wn[t>>16&255]+Wn[t>>24&255]+Wn[i&255]+Wn[i>>8&255]+Wn[i>>16&255]+Wn[i>>24&255]).toUpperCase()}const Us=Object.assign||function(){let s=arguments[0];for(let e=1,t=arguments.length;e<t;e++){let i=arguments[e];if(i)for(let n in i)Object.prototype.hasOwnProperty.call(i,n)&&(s[n]=i[n])}return s},eR=Date.now(),o0=new WeakMap,a0=new Map;let tR=1e10;function Tf(s,e){const t=sR(e);let i=o0.get(s);if(i||o0.set(s,i=Object.create(null)),i[t])return new i[t];const n=`_onBeforeCompile${t}`,r=function(c,h){s.onBeforeCompile.call(this,c,h);const u=this.customProgramCacheKey()+"|"+c.vertexShader+"|"+c.fragmentShader;let d=a0[u];if(!d){const f=nR(this,c,e,t);d=a0[u]=f}c.vertexShader=d.vertexShader,c.fragmentShader=d.fragmentShader,Us(c.uniforms,this.uniforms),e.timeUniform&&(c.uniforms[e.timeUniform]={get value(){return Date.now()-eR}}),this[n]&&this[n](c)},o=function(){return a(e.chained?s:s.clone())},a=function(c){const h=Object.create(c,l);return Object.defineProperty(h,"baseMaterial",{value:s}),Object.defineProperty(h,"id",{value:tR++}),h.uuid=$C(),h.uniforms=Us({},c.uniforms,e.uniforms),h.defines=Us({},c.defines,e.defines),h.defines[`TROIKA_DERIVED_MATERIAL_${t}`]="",h.extensions=Us({},c.extensions,e.extensions),h._listeners=void 0,h},l={constructor:{value:o},isDerivedMaterial:{value:!0},type:{get:()=>s.type,set:c=>{s.type=c}},isDerivedFrom:{writable:!0,configurable:!0,value:function(c){const h=this.baseMaterial;return c===h||h.isDerivedMaterial&&h.isDerivedFrom(c)||!1}},customProgramCacheKey:{writable:!0,configurable:!0,value:function(){return s.customProgramCacheKey()+"|"+t}},onBeforeCompile:{get(){return r},set(c){this[n]=c}},copy:{writable:!0,configurable:!0,value:function(c){return s.copy.call(this,c),!s.isShaderMaterial&&!s.isDerivedMaterial&&(Us(this.extensions,c.extensions),Us(this.defines,c.defines),Us(this.uniforms,yl.clone(c.uniforms))),this}},clone:{writable:!0,configurable:!0,value:function(){const c=new s.constructor;return a(c).copy(this)}},getDepthMaterial:{writable:!0,configurable:!0,value:function(){let c=this._depthMaterial;return c||(c=this._depthMaterial=Tf(s.isDerivedMaterial?s.getDepthMaterial():new El({depthPacking:Wf}),e),c.defines.IS_DEPTH_MATERIAL="",c.uniforms=this.uniforms),c}},getDistanceMaterial:{writable:!0,configurable:!0,value:function(){let c=this._distanceMaterial;return c||(c=this._distanceMaterial=Tf(s.isDerivedMaterial?s.getDistanceMaterial():new mu,e),c.defines.IS_DISTANCE_MATERIAL="",c.uniforms=this.uniforms),c}},dispose:{writable:!0,configurable:!0,value(){const{_depthMaterial:c,_distanceMaterial:h}=this;c&&c.dispose(),h&&h.dispose(),s.dispose.call(this)}}};return i[t]=o,new o}function nR(s,{vertexShader:e,fragmentShader:t},i,n){let{vertexDefs:r,vertexMainIntro:o,vertexMainOutro:a,vertexTransform:l,fragmentDefs:c,fragmentMainIntro:h,fragmentMainOutro:u,fragmentColorTransform:d,customRewriter:f,timeUniform:p}=i;if(r=r||"",o=o||"",a=a||"",c=c||"",h=h||"",u=u||"",(l||f)&&(e=Ef(e)),(d||f)&&(t=t.replace(/^[ \t]*#include <((?:tonemapping|encodings|colorspace|fog|premultiplied_alpha|dithering)_fragment)>/gm,`
//!BEGIN_POST_CHUNK $1
$&
//!END_POST_CHUNK
`),t=Ef(t)),f){let v=f({vertexShader:e,fragmentShader:t});e=v.vertexShader,t=v.fragmentShader}if(d){let v=[];t=t.replace(/^\/\/!BEGIN_POST_CHUNK[^]+?^\/\/!END_POST_CHUNK/gm,m=>(v.push(m),"")),u=`${d}
${v.join(`
`)}
${u}`}if(p){const v=`
uniform float ${p};
`;r=v+r,c=v+c}return l&&(e=`vec3 troika_position_${n};
vec3 troika_normal_${n};
vec2 troika_uv_${n};
${e}
`,r=`${r}
void troikaVertexTransform${n}(inout vec3 position, inout vec3 normal, inout vec2 uv) {
  ${l}
}
`,o=`
troika_position_${n} = vec3(position);
troika_normal_${n} = vec3(normal);
troika_uv_${n} = vec2(uv);
troikaVertexTransform${n}(troika_position_${n}, troika_normal_${n}, troika_uv_${n});
${o}
`,e=e.replace(/\b(position|normal|uv)\b/g,(v,m,g,x)=>/\battribute\s+vec[23]\s+$/.test(x.substr(0,g))?m:`troika_${m}_${n}`),s.map&&s.map.channel>0||(e=e.replace(/\bMAP_UV\b/g,`troika_uv_${n}`))),e=l0(e,n,r,o,a),t=l0(t,n,c,h,u),{vertexShader:e,fragmentShader:t}}function l0(s,e,t,i,n){return(i||n||t)&&(s=s.replace($_,`
${t}
void troikaOrigMain${e}() {`),s+=`
void main() {
  ${i}
  troikaOrigMain${e}();
  ${n}
}`),s}function iR(s,e){return s==="uniforms"?void 0:typeof e=="function"?e.toString():e}let rR=0;const c0=new Map;function sR(s){const e=JSON.stringify(s,iR);let t=c0.get(e);return t==null&&c0.set(e,t=++rR),t}/*!
Custom build of Typr.ts (https://github.com/fredli74/Typr.ts) for use in Troika text rendering.
Original MIT license applies: https://github.com/fredli74/Typr.ts/blob/master/LICENSE
*/function oR(){return typeof window>"u"&&(self.window=self),function(s){var e={parse:function(n){var r=e._bin,o=new Uint8Array(n);if(r.readASCII(o,0,4)=="ttcf"){var a=4;r.readUshort(o,a),a+=2,r.readUshort(o,a),a+=2;var l=r.readUint(o,a);a+=4;for(var c=[],h=0;h<l;h++){var u=r.readUint(o,a);a+=4,c.push(e._readFont(o,u))}return c}return[e._readFont(o,0)]},_readFont:function(n,r){var o=e._bin,a=r;o.readFixed(n,r),r+=4;var l=o.readUshort(n,r);r+=2,o.readUshort(n,r),r+=2,o.readUshort(n,r),r+=2,o.readUshort(n,r),r+=2;for(var c=["cmap","head","hhea","maxp","hmtx","name","OS/2","post","loca","glyf","kern","CFF ","GDEF","GPOS","GSUB","SVG "],h={_data:n,_offset:a},u={},d=0;d<l;d++){var f=o.readASCII(n,r,4);r+=4,o.readUint(n,r),r+=4;var p=o.readUint(n,r);r+=4;var v=o.readUint(n,r);r+=4,u[f]={offset:p,length:v}}for(d=0;d<c.length;d++){var m=c[d];u[m]&&(h[m.trim()]=e[m.trim()].parse(n,u[m].offset,u[m].length,h))}return h},_tabOffset:function(n,r,o){for(var a=e._bin,l=a.readUshort(n,o+4),c=o+12,h=0;h<l;h++){var u=a.readASCII(n,c,4);c+=4,a.readUint(n,c),c+=4;var d=a.readUint(n,c);if(c+=4,a.readUint(n,c),c+=4,u==r)return d}return 0}};e._bin={readFixed:function(n,r){return(n[r]<<8|n[r+1])+(n[r+2]<<8|n[r+3])/65540},readF2dot14:function(n,r){return e._bin.readShort(n,r)/16384},readInt:function(n,r){return e._bin._view(n).getInt32(r)},readInt8:function(n,r){return e._bin._view(n).getInt8(r)},readShort:function(n,r){return e._bin._view(n).getInt16(r)},readUshort:function(n,r){return e._bin._view(n).getUint16(r)},readUshorts:function(n,r,o){for(var a=[],l=0;l<o;l++)a.push(e._bin.readUshort(n,r+2*l));return a},readUint:function(n,r){return e._bin._view(n).getUint32(r)},readUint64:function(n,r){return 4294967296*e._bin.readUint(n,r)+e._bin.readUint(n,r+4)},readASCII:function(n,r,o){for(var a="",l=0;l<o;l++)a+=String.fromCharCode(n[r+l]);return a},readUnicode:function(n,r,o){for(var a="",l=0;l<o;l++){var c=n[r++]<<8|n[r++];a+=String.fromCharCode(c)}return a},_tdec:typeof window<"u"&&window.TextDecoder?new window.TextDecoder:null,readUTF8:function(n,r,o){var a=e._bin._tdec;return a&&r==0&&o==n.length?a.decode(n):e._bin.readASCII(n,r,o)},readBytes:function(n,r,o){for(var a=[],l=0;l<o;l++)a.push(n[r+l]);return a},readASCIIArray:function(n,r,o){for(var a=[],l=0;l<o;l++)a.push(String.fromCharCode(n[r+l]));return a},_view:function(n){return n._dataView||(n._dataView=n.buffer?new DataView(n.buffer,n.byteOffset,n.byteLength):new DataView(new Uint8Array(n).buffer))}},e._lctf={},e._lctf.parse=function(n,r,o,a,l){var c=e._bin,h={},u=r;c.readFixed(n,r),r+=4;var d=c.readUshort(n,r);r+=2;var f=c.readUshort(n,r);r+=2;var p=c.readUshort(n,r);return r+=2,h.scriptList=e._lctf.readScriptList(n,u+d),h.featureList=e._lctf.readFeatureList(n,u+f),h.lookupList=e._lctf.readLookupList(n,u+p,l),h},e._lctf.readLookupList=function(n,r,o){var a=e._bin,l=r,c=[],h=a.readUshort(n,r);r+=2;for(var u=0;u<h;u++){var d=a.readUshort(n,r);r+=2;var f=e._lctf.readLookupTable(n,l+d,o);c.push(f)}return c},e._lctf.readLookupTable=function(n,r,o){var a=e._bin,l=r,c={tabs:[]};c.ltype=a.readUshort(n,r),r+=2,c.flag=a.readUshort(n,r),r+=2;var h=a.readUshort(n,r);r+=2;for(var u=c.ltype,d=0;d<h;d++){var f=a.readUshort(n,r);r+=2;var p=o(n,u,l+f,c);c.tabs.push(p)}return c},e._lctf.numOfOnes=function(n){for(var r=0,o=0;o<32;o++)(n>>>o&1)!=0&&r++;return r},e._lctf.readClassDef=function(n,r){var o=e._bin,a=[],l=o.readUshort(n,r);if(r+=2,l==1){var c=o.readUshort(n,r);r+=2;var h=o.readUshort(n,r);r+=2;for(var u=0;u<h;u++)a.push(c+u),a.push(c+u),a.push(o.readUshort(n,r)),r+=2}if(l==2){var d=o.readUshort(n,r);for(r+=2,u=0;u<d;u++)a.push(o.readUshort(n,r)),r+=2,a.push(o.readUshort(n,r)),r+=2,a.push(o.readUshort(n,r)),r+=2}return a},e._lctf.getInterval=function(n,r){for(var o=0;o<n.length;o+=3){var a=n[o],l=n[o+1];if(n[o+2],a<=r&&r<=l)return o}return-1},e._lctf.readCoverage=function(n,r){var o=e._bin,a={};a.fmt=o.readUshort(n,r),r+=2;var l=o.readUshort(n,r);return r+=2,a.fmt==1&&(a.tab=o.readUshorts(n,r,l)),a.fmt==2&&(a.tab=o.readUshorts(n,r,3*l)),a},e._lctf.coverageIndex=function(n,r){var o=n.tab;if(n.fmt==1)return o.indexOf(r);if(n.fmt==2){var a=e._lctf.getInterval(o,r);if(a!=-1)return o[a+2]+(r-o[a])}return-1},e._lctf.readFeatureList=function(n,r){var o=e._bin,a=r,l=[],c=o.readUshort(n,r);r+=2;for(var h=0;h<c;h++){var u=o.readASCII(n,r,4);r+=4;var d=o.readUshort(n,r);r+=2;var f=e._lctf.readFeatureTable(n,a+d);f.tag=u.trim(),l.push(f)}return l},e._lctf.readFeatureTable=function(n,r){var o=e._bin,a=r,l={},c=o.readUshort(n,r);r+=2,c>0&&(l.featureParams=a+c);var h=o.readUshort(n,r);r+=2,l.tab=[];for(var u=0;u<h;u++)l.tab.push(o.readUshort(n,r+2*u));return l},e._lctf.readScriptList=function(n,r){var o=e._bin,a=r,l={},c=o.readUshort(n,r);r+=2;for(var h=0;h<c;h++){var u=o.readASCII(n,r,4);r+=4;var d=o.readUshort(n,r);r+=2,l[u.trim()]=e._lctf.readScriptTable(n,a+d)}return l},e._lctf.readScriptTable=function(n,r){var o=e._bin,a=r,l={},c=o.readUshort(n,r);r+=2,c>0&&(l.default=e._lctf.readLangSysTable(n,a+c));var h=o.readUshort(n,r);r+=2;for(var u=0;u<h;u++){var d=o.readASCII(n,r,4);r+=4;var f=o.readUshort(n,r);r+=2,l[d.trim()]=e._lctf.readLangSysTable(n,a+f)}return l},e._lctf.readLangSysTable=function(n,r){var o=e._bin,a={};o.readUshort(n,r),r+=2,a.reqFeature=o.readUshort(n,r),r+=2;var l=o.readUshort(n,r);return r+=2,a.features=o.readUshorts(n,r,l),a},e.CFF={},e.CFF.parse=function(n,r,o){var a=e._bin;(n=new Uint8Array(n.buffer,r,o))[r=0],n[++r],n[++r],n[++r],r++;var l=[];r=e.CFF.readIndex(n,r,l);for(var c=[],h=0;h<l.length-1;h++)c.push(a.readASCII(n,r+l[h],l[h+1]-l[h]));r+=l[l.length-1];var u=[];r=e.CFF.readIndex(n,r,u);var d=[];for(h=0;h<u.length-1;h++)d.push(e.CFF.readDict(n,r+u[h],r+u[h+1]));r+=u[u.length-1];var f=d[0],p=[];r=e.CFF.readIndex(n,r,p);var v=[];for(h=0;h<p.length-1;h++)v.push(a.readASCII(n,r+p[h],p[h+1]-p[h]));if(r+=p[p.length-1],e.CFF.readSubrs(n,r,f),f.CharStrings){r=f.CharStrings,p=[],r=e.CFF.readIndex(n,r,p);var m=[];for(h=0;h<p.length-1;h++)m.push(a.readBytes(n,r+p[h],p[h+1]-p[h]));f.CharStrings=m}if(f.ROS){r=f.FDArray;var g=[];for(r=e.CFF.readIndex(n,r,g),f.FDArray=[],h=0;h<g.length-1;h++){var x=e.CFF.readDict(n,r+g[h],r+g[h+1]);e.CFF._readFDict(n,x,v),f.FDArray.push(x)}r+=g[g.length-1],r=f.FDSelect,f.FDSelect=[];var y=n[r];if(r++,y!=3)throw y;var _=a.readUshort(n,r);for(r+=2,h=0;h<_+1;h++)f.FDSelect.push(a.readUshort(n,r),n[r+2]),r+=3}return f.Encoding&&(f.Encoding=e.CFF.readEncoding(n,f.Encoding,f.CharStrings.length)),f.charset&&(f.charset=e.CFF.readCharset(n,f.charset,f.CharStrings.length)),e.CFF._readFDict(n,f,v),f},e.CFF._readFDict=function(n,r,o){var a;for(var l in r.Private&&(a=r.Private[1],r.Private=e.CFF.readDict(n,a,a+r.Private[0]),r.Private.Subrs&&e.CFF.readSubrs(n,a+r.Private.Subrs,r.Private)),r)["FamilyName","FontName","FullName","Notice","version","Copyright"].indexOf(l)!=-1&&(r[l]=o[r[l]-426+35])},e.CFF.readSubrs=function(n,r,o){var a=e._bin,l=[];r=e.CFF.readIndex(n,r,l);var c,h=l.length;c=h<1240?107:h<33900?1131:32768,o.Bias=c,o.Subrs=[];for(var u=0;u<l.length-1;u++)o.Subrs.push(a.readBytes(n,r+l[u],l[u+1]-l[u]))},e.CFF.tableSE=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,0,111,112,113,114,0,115,116,117,118,119,120,121,122,0,123,0,124,125,126,127,128,129,130,131,0,132,133,0,134,135,136,137,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,138,0,139,0,0,0,0,140,141,142,143,0,0,0,0,0,144,0,0,0,145,0,0,146,147,148,149,0,0,0,0],e.CFF.glyphByUnicode=function(n,r){for(var o=0;o<n.charset.length;o++)if(n.charset[o]==r)return o;return-1},e.CFF.glyphBySE=function(n,r){return r<0||r>255?-1:e.CFF.glyphByUnicode(n,e.CFF.tableSE[r])},e.CFF.readEncoding=function(n,r,o){e._bin;var a=[".notdef"],l=n[r];if(r++,l!=0)throw"error: unknown encoding format: "+l;var c=n[r];r++;for(var h=0;h<c;h++)a.push(n[r+h]);return a},e.CFF.readCharset=function(n,r,o){var a=e._bin,l=[".notdef"],c=n[r];if(r++,c==0)for(var h=0;h<o;h++){var u=a.readUshort(n,r);r+=2,l.push(u)}else{if(c!=1&&c!=2)throw"error: format: "+c;for(;l.length<o;){u=a.readUshort(n,r),r+=2;var d=0;for(c==1?(d=n[r],r++):(d=a.readUshort(n,r),r+=2),h=0;h<=d;h++)l.push(u),u++}}return l},e.CFF.readIndex=function(n,r,o){var a=e._bin,l=a.readUshort(n,r)+1,c=n[r+=2];if(r++,c==1)for(var h=0;h<l;h++)o.push(n[r+h]);else if(c==2)for(h=0;h<l;h++)o.push(a.readUshort(n,r+2*h));else if(c==3)for(h=0;h<l;h++)o.push(16777215&a.readUint(n,r+3*h-1));else if(l!=1)throw"unsupported offset size: "+c+", count: "+l;return(r+=l*c)-1},e.CFF.getCharString=function(n,r,o){var a=e._bin,l=n[r],c=n[r+1];n[r+2],n[r+3],n[r+4];var h=1,u=null,d=null;l<=20&&(u=l,h=1),l==12&&(u=100*l+c,h=2),21<=l&&l<=27&&(u=l,h=1),l==28&&(d=a.readShort(n,r+1),h=3),29<=l&&l<=31&&(u=l,h=1),32<=l&&l<=246&&(d=l-139,h=1),247<=l&&l<=250&&(d=256*(l-247)+c+108,h=2),251<=l&&l<=254&&(d=256*-(l-251)-c-108,h=2),l==255&&(d=a.readInt(n,r+1)/65535,h=5),o.val=d??"o"+u,o.size=h},e.CFF.readCharString=function(n,r,o){for(var a=r+o,l=e._bin,c=[];r<a;){var h=n[r],u=n[r+1];n[r+2],n[r+3],n[r+4];var d=1,f=null,p=null;h<=20&&(f=h,d=1),h==12&&(f=100*h+u,d=2),h!=19&&h!=20||(f=h,d=2),21<=h&&h<=27&&(f=h,d=1),h==28&&(p=l.readShort(n,r+1),d=3),29<=h&&h<=31&&(f=h,d=1),32<=h&&h<=246&&(p=h-139,d=1),247<=h&&h<=250&&(p=256*(h-247)+u+108,d=2),251<=h&&h<=254&&(p=256*-(h-251)-u-108,d=2),h==255&&(p=l.readInt(n,r+1)/65535,d=5),c.push(p??"o"+f),r+=d}return c},e.CFF.readDict=function(n,r,o){for(var a=e._bin,l={},c=[];r<o;){var h=n[r],u=n[r+1];n[r+2],n[r+3],n[r+4];var d=1,f=null,p=null;if(h==28&&(p=a.readShort(n,r+1),d=3),h==29&&(p=a.readInt(n,r+1),d=5),32<=h&&h<=246&&(p=h-139,d=1),247<=h&&h<=250&&(p=256*(h-247)+u+108,d=2),251<=h&&h<=254&&(p=256*-(h-251)-u-108,d=2),h==255)throw p=a.readInt(n,r+1)/65535,d=5,"unknown number";if(h==30){var v=[];for(d=1;;){var m=n[r+d];d++;var g=m>>4,x=15&m;if(g!=15&&v.push(g),x!=15&&v.push(x),x==15)break}for(var y="",_=[0,1,2,3,4,5,6,7,8,9,".","e","e-","reserved","-","endOfNumber"],E=0;E<v.length;E++)y+=_[v[E]];p=parseFloat(y)}h<=21&&(f=["version","Notice","FullName","FamilyName","Weight","FontBBox","BlueValues","OtherBlues","FamilyBlues","FamilyOtherBlues","StdHW","StdVW","escape","UniqueID","XUID","charset","Encoding","CharStrings","Private","Subrs","defaultWidthX","nominalWidthX"][h],d=1,h==12&&(f=["Copyright","isFixedPitch","ItalicAngle","UnderlinePosition","UnderlineThickness","PaintType","CharstringType","FontMatrix","StrokeWidth","BlueScale","BlueShift","BlueFuzz","StemSnapH","StemSnapV","ForceBold",0,0,"LanguageGroup","ExpansionFactor","initialRandomSeed","SyntheticBase","PostScript","BaseFontName","BaseFontBlend",0,0,0,0,0,0,"ROS","CIDFontVersion","CIDFontRevision","CIDFontType","CIDCount","UIDBase","FDArray","FDSelect","FontName"][u],d=2)),f!=null?(l[f]=c.length==1?c[0]:c,c=[]):c.push(p),r+=d}return l},e.cmap={},e.cmap.parse=function(n,r,o){n=new Uint8Array(n.buffer,r,o),r=0;var a=e._bin,l={};a.readUshort(n,r),r+=2;var c=a.readUshort(n,r);r+=2;var h=[];l.tables=[];for(var u=0;u<c;u++){var d=a.readUshort(n,r);r+=2;var f=a.readUshort(n,r);r+=2;var p=a.readUint(n,r);r+=4;var v="p"+d+"e"+f,m=h.indexOf(p);if(m==-1){var g;m=l.tables.length,h.push(p);var x=a.readUshort(n,p);x==0?g=e.cmap.parse0(n,p):x==4?g=e.cmap.parse4(n,p):x==6?g=e.cmap.parse6(n,p):x==12?g=e.cmap.parse12(n,p):console.debug("unknown format: "+x,d,f,p),l.tables.push(g)}if(l[v]!=null)throw"multiple tables for one platform+encoding";l[v]=m}return l},e.cmap.parse0=function(n,r){var o=e._bin,a={};a.format=o.readUshort(n,r),r+=2;var l=o.readUshort(n,r);r+=2,o.readUshort(n,r),r+=2,a.map=[];for(var c=0;c<l-6;c++)a.map.push(n[r+c]);return a},e.cmap.parse4=function(n,r){var o=e._bin,a=r,l={};l.format=o.readUshort(n,r),r+=2;var c=o.readUshort(n,r);r+=2,o.readUshort(n,r),r+=2;var h=o.readUshort(n,r);r+=2;var u=h/2;l.searchRange=o.readUshort(n,r),r+=2,l.entrySelector=o.readUshort(n,r),r+=2,l.rangeShift=o.readUshort(n,r),r+=2,l.endCount=o.readUshorts(n,r,u),r+=2*u,r+=2,l.startCount=o.readUshorts(n,r,u),r+=2*u,l.idDelta=[];for(var d=0;d<u;d++)l.idDelta.push(o.readShort(n,r)),r+=2;for(l.idRangeOffset=o.readUshorts(n,r,u),r+=2*u,l.glyphIdArray=[];r<a+c;)l.glyphIdArray.push(o.readUshort(n,r)),r+=2;return l},e.cmap.parse6=function(n,r){var o=e._bin,a={};a.format=o.readUshort(n,r),r+=2,o.readUshort(n,r),r+=2,o.readUshort(n,r),r+=2,a.firstCode=o.readUshort(n,r),r+=2;var l=o.readUshort(n,r);r+=2,a.glyphIdArray=[];for(var c=0;c<l;c++)a.glyphIdArray.push(o.readUshort(n,r)),r+=2;return a},e.cmap.parse12=function(n,r){var o=e._bin,a={};a.format=o.readUshort(n,r),r+=2,r+=2,o.readUint(n,r),r+=4,o.readUint(n,r),r+=4;var l=o.readUint(n,r);r+=4,a.groups=[];for(var c=0;c<l;c++){var h=r+12*c,u=o.readUint(n,h+0),d=o.readUint(n,h+4),f=o.readUint(n,h+8);a.groups.push([u,d,f])}return a},e.glyf={},e.glyf.parse=function(n,r,o,a){for(var l=[],c=0;c<a.maxp.numGlyphs;c++)l.push(null);return l},e.glyf._parseGlyf=function(n,r){var o=e._bin,a=n._data,l=e._tabOffset(a,"glyf",n._offset)+n.loca[r];if(n.loca[r]==n.loca[r+1])return null;var c={};if(c.noc=o.readShort(a,l),l+=2,c.xMin=o.readShort(a,l),l+=2,c.yMin=o.readShort(a,l),l+=2,c.xMax=o.readShort(a,l),l+=2,c.yMax=o.readShort(a,l),l+=2,c.xMin>=c.xMax||c.yMin>=c.yMax)return null;if(c.noc>0){c.endPts=[];for(var h=0;h<c.noc;h++)c.endPts.push(o.readUshort(a,l)),l+=2;var u=o.readUshort(a,l);if(l+=2,a.length-l<u)return null;c.instructions=o.readBytes(a,l,u),l+=u;var d=c.endPts[c.noc-1]+1;for(c.flags=[],h=0;h<d;h++){var f=a[l];if(l++,c.flags.push(f),(8&f)!=0){var p=a[l];l++;for(var v=0;v<p;v++)c.flags.push(f),h++}}for(c.xs=[],h=0;h<d;h++){var m=(2&c.flags[h])!=0,g=(16&c.flags[h])!=0;m?(c.xs.push(g?a[l]:-a[l]),l++):g?c.xs.push(0):(c.xs.push(o.readShort(a,l)),l+=2)}for(c.ys=[],h=0;h<d;h++)m=(4&c.flags[h])!=0,g=(32&c.flags[h])!=0,m?(c.ys.push(g?a[l]:-a[l]),l++):g?c.ys.push(0):(c.ys.push(o.readShort(a,l)),l+=2);var x=0,y=0;for(h=0;h<d;h++)x+=c.xs[h],y+=c.ys[h],c.xs[h]=x,c.ys[h]=y}else{var _;c.parts=[];do{_=o.readUshort(a,l),l+=2;var E={m:{a:1,b:0,c:0,d:1,tx:0,ty:0},p1:-1,p2:-1};if(c.parts.push(E),E.glyphIndex=o.readUshort(a,l),l+=2,1&_){var w=o.readShort(a,l);l+=2;var M=o.readShort(a,l);l+=2}else w=o.readInt8(a,l),l++,M=o.readInt8(a,l),l++;2&_?(E.m.tx=w,E.m.ty=M):(E.p1=w,E.p2=M),8&_?(E.m.a=E.m.d=o.readF2dot14(a,l),l+=2):64&_?(E.m.a=o.readF2dot14(a,l),l+=2,E.m.d=o.readF2dot14(a,l),l+=2):128&_&&(E.m.a=o.readF2dot14(a,l),l+=2,E.m.b=o.readF2dot14(a,l),l+=2,E.m.c=o.readF2dot14(a,l),l+=2,E.m.d=o.readF2dot14(a,l),l+=2)}while(32&_);if(256&_){var T=o.readUshort(a,l);for(l+=2,c.instr=[],h=0;h<T;h++)c.instr.push(a[l]),l++}}return c},e.GDEF={},e.GDEF.parse=function(n,r,o,a){var l=r;r+=4;var c=e._bin.readUshort(n,r);return{glyphClassDef:c===0?null:e._lctf.readClassDef(n,l+c)}},e.GPOS={},e.GPOS.parse=function(n,r,o,a){return e._lctf.parse(n,r,o,a,e.GPOS.subt)},e.GPOS.subt=function(n,r,o,a){var l=e._bin,c=o,h={};if(h.fmt=l.readUshort(n,o),o+=2,r==1||r==2||r==3||r==7||r==8&&h.fmt<=2){var u=l.readUshort(n,o);o+=2,h.coverage=e._lctf.readCoverage(n,u+c)}if(r==1&&h.fmt==1){var d=l.readUshort(n,o);o+=2,d!=0&&(h.pos=e.GPOS.readValueRecord(n,o,d))}else if(r==2&&h.fmt>=1&&h.fmt<=2){d=l.readUshort(n,o),o+=2;var f=l.readUshort(n,o);o+=2;var p=e._lctf.numOfOnes(d),v=e._lctf.numOfOnes(f);if(h.fmt==1){h.pairsets=[];var m=l.readUshort(n,o);o+=2;for(var g=0;g<m;g++){var x=c+l.readUshort(n,o);o+=2;var y=l.readUshort(n,x);x+=2;for(var _=[],E=0;E<y;E++){var w=l.readUshort(n,x);x+=2,d!=0&&(D=e.GPOS.readValueRecord(n,x,d),x+=2*p),f!=0&&(G=e.GPOS.readValueRecord(n,x,f),x+=2*v),_.push({gid2:w,val1:D,val2:G})}h.pairsets.push(_)}}if(h.fmt==2){var M=l.readUshort(n,o);o+=2;var T=l.readUshort(n,o);o+=2;var S=l.readUshort(n,o);o+=2;var b=l.readUshort(n,o);for(o+=2,h.classDef1=e._lctf.readClassDef(n,c+M),h.classDef2=e._lctf.readClassDef(n,c+T),h.matrix=[],g=0;g<S;g++){var P=[];for(E=0;E<b;E++){var D=null,G=null;d!=0&&(D=e.GPOS.readValueRecord(n,o,d),o+=2*p),f!=0&&(G=e.GPOS.readValueRecord(n,o,f),o+=2*v),P.push({val1:D,val2:G})}h.matrix.push(P)}}}else if(r==4&&h.fmt==1)h.markCoverage=e._lctf.readCoverage(n,l.readUshort(n,o)+c),h.baseCoverage=e._lctf.readCoverage(n,l.readUshort(n,o+2)+c),h.markClassCount=l.readUshort(n,o+4),h.markArray=e.GPOS.readMarkArray(n,l.readUshort(n,o+6)+c),h.baseArray=e.GPOS.readBaseArray(n,l.readUshort(n,o+8)+c,h.markClassCount);else if(r==6&&h.fmt==1)h.mark1Coverage=e._lctf.readCoverage(n,l.readUshort(n,o)+c),h.mark2Coverage=e._lctf.readCoverage(n,l.readUshort(n,o+2)+c),h.markClassCount=l.readUshort(n,o+4),h.mark1Array=e.GPOS.readMarkArray(n,l.readUshort(n,o+6)+c),h.mark2Array=e.GPOS.readBaseArray(n,l.readUshort(n,o+8)+c,h.markClassCount);else{if(r==9&&h.fmt==1){var H=l.readUshort(n,o);o+=2;var q=l.readUint(n,o);if(o+=4,a.ltype==9)a.ltype=H;else if(a.ltype!=H)throw"invalid extension substitution";return e.GPOS.subt(n,a.ltype,c+q)}console.debug("unsupported GPOS table LookupType",r,"format",h.fmt)}return h},e.GPOS.readValueRecord=function(n,r,o){var a=e._bin,l=[];return l.push(1&o?a.readShort(n,r):0),r+=1&o?2:0,l.push(2&o?a.readShort(n,r):0),r+=2&o?2:0,l.push(4&o?a.readShort(n,r):0),r+=4&o?2:0,l.push(8&o?a.readShort(n,r):0),r+=8&o?2:0,l},e.GPOS.readBaseArray=function(n,r,o){var a=e._bin,l=[],c=r,h=a.readUshort(n,r);r+=2;for(var u=0;u<h;u++){for(var d=[],f=0;f<o;f++)d.push(e.GPOS.readAnchorRecord(n,c+a.readUshort(n,r))),r+=2;l.push(d)}return l},e.GPOS.readMarkArray=function(n,r){var o=e._bin,a=[],l=r,c=o.readUshort(n,r);r+=2;for(var h=0;h<c;h++){var u=e.GPOS.readAnchorRecord(n,o.readUshort(n,r+2)+l);u.markClass=o.readUshort(n,r),a.push(u),r+=4}return a},e.GPOS.readAnchorRecord=function(n,r){var o=e._bin,a={};return a.fmt=o.readUshort(n,r),a.x=o.readShort(n,r+2),a.y=o.readShort(n,r+4),a},e.GSUB={},e.GSUB.parse=function(n,r,o,a){return e._lctf.parse(n,r,o,a,e.GSUB.subt)},e.GSUB.subt=function(n,r,o,a){var l=e._bin,c=o,h={};if(h.fmt=l.readUshort(n,o),o+=2,r!=1&&r!=2&&r!=4&&r!=5&&r!=6)return null;if(r==1||r==2||r==4||r==5&&h.fmt<=2||r==6&&h.fmt<=2){var u=l.readUshort(n,o);o+=2,h.coverage=e._lctf.readCoverage(n,c+u)}if(r==1&&h.fmt>=1&&h.fmt<=2){if(h.fmt==1)h.delta=l.readShort(n,o),o+=2;else if(h.fmt==2){var d=l.readUshort(n,o);o+=2,h.newg=l.readUshorts(n,o,d),o+=2*h.newg.length}}else if(r==2&&h.fmt==1){d=l.readUshort(n,o),o+=2,h.seqs=[];for(var f=0;f<d;f++){var p=l.readUshort(n,o)+c;o+=2;var v=l.readUshort(n,p);h.seqs.push(l.readUshorts(n,p+2,v))}}else if(r==4)for(h.vals=[],d=l.readUshort(n,o),o+=2,f=0;f<d;f++){var m=l.readUshort(n,o);o+=2,h.vals.push(e.GSUB.readLigatureSet(n,c+m))}else if(r==5&&h.fmt==2){if(h.fmt==2){var g=l.readUshort(n,o);o+=2,h.cDef=e._lctf.readClassDef(n,c+g),h.scset=[];var x=l.readUshort(n,o);for(o+=2,f=0;f<x;f++){var y=l.readUshort(n,o);o+=2,h.scset.push(y==0?null:e.GSUB.readSubClassSet(n,c+y))}}}else if(r==6&&h.fmt==3){if(h.fmt==3){for(f=0;f<3;f++){d=l.readUshort(n,o),o+=2;for(var _=[],E=0;E<d;E++)_.push(e._lctf.readCoverage(n,c+l.readUshort(n,o+2*E)));o+=2*d,f==0&&(h.backCvg=_),f==1&&(h.inptCvg=_),f==2&&(h.ahedCvg=_)}d=l.readUshort(n,o),o+=2,h.lookupRec=e.GSUB.readSubstLookupRecords(n,o,d)}}else{if(r==7&&h.fmt==1){var w=l.readUshort(n,o);o+=2;var M=l.readUint(n,o);if(o+=4,a.ltype==9)a.ltype=w;else if(a.ltype!=w)throw"invalid extension substitution";return e.GSUB.subt(n,a.ltype,c+M)}console.debug("unsupported GSUB table LookupType",r,"format",h.fmt)}return h},e.GSUB.readSubClassSet=function(n,r){var o=e._bin.readUshort,a=r,l=[],c=o(n,r);r+=2;for(var h=0;h<c;h++){var u=o(n,r);r+=2,l.push(e.GSUB.readSubClassRule(n,a+u))}return l},e.GSUB.readSubClassRule=function(n,r){var o=e._bin.readUshort,a={},l=o(n,r),c=o(n,r+=2);r+=2,a.input=[];for(var h=0;h<l-1;h++)a.input.push(o(n,r)),r+=2;return a.substLookupRecords=e.GSUB.readSubstLookupRecords(n,r,c),a},e.GSUB.readSubstLookupRecords=function(n,r,o){for(var a=e._bin.readUshort,l=[],c=0;c<o;c++)l.push(a(n,r),a(n,r+2)),r+=4;return l},e.GSUB.readChainSubClassSet=function(n,r){var o=e._bin,a=r,l=[],c=o.readUshort(n,r);r+=2;for(var h=0;h<c;h++){var u=o.readUshort(n,r);r+=2,l.push(e.GSUB.readChainSubClassRule(n,a+u))}return l},e.GSUB.readChainSubClassRule=function(n,r){for(var o=e._bin,a={},l=["backtrack","input","lookahead"],c=0;c<l.length;c++){var h=o.readUshort(n,r);r+=2,c==1&&h--,a[l[c]]=o.readUshorts(n,r,h),r+=2*a[l[c]].length}return h=o.readUshort(n,r),r+=2,a.subst=o.readUshorts(n,r,2*h),r+=2*a.subst.length,a},e.GSUB.readLigatureSet=function(n,r){var o=e._bin,a=r,l=[],c=o.readUshort(n,r);r+=2;for(var h=0;h<c;h++){var u=o.readUshort(n,r);r+=2,l.push(e.GSUB.readLigature(n,a+u))}return l},e.GSUB.readLigature=function(n,r){var o=e._bin,a={chain:[]};a.nglyph=o.readUshort(n,r),r+=2;var l=o.readUshort(n,r);r+=2;for(var c=0;c<l-1;c++)a.chain.push(o.readUshort(n,r)),r+=2;return a},e.head={},e.head.parse=function(n,r,o){var a=e._bin,l={};return a.readFixed(n,r),r+=4,l.fontRevision=a.readFixed(n,r),r+=4,a.readUint(n,r),r+=4,a.readUint(n,r),r+=4,l.flags=a.readUshort(n,r),r+=2,l.unitsPerEm=a.readUshort(n,r),r+=2,l.created=a.readUint64(n,r),r+=8,l.modified=a.readUint64(n,r),r+=8,l.xMin=a.readShort(n,r),r+=2,l.yMin=a.readShort(n,r),r+=2,l.xMax=a.readShort(n,r),r+=2,l.yMax=a.readShort(n,r),r+=2,l.macStyle=a.readUshort(n,r),r+=2,l.lowestRecPPEM=a.readUshort(n,r),r+=2,l.fontDirectionHint=a.readShort(n,r),r+=2,l.indexToLocFormat=a.readShort(n,r),r+=2,l.glyphDataFormat=a.readShort(n,r),r+=2,l},e.hhea={},e.hhea.parse=function(n,r,o){var a=e._bin,l={};return a.readFixed(n,r),r+=4,l.ascender=a.readShort(n,r),r+=2,l.descender=a.readShort(n,r),r+=2,l.lineGap=a.readShort(n,r),r+=2,l.advanceWidthMax=a.readUshort(n,r),r+=2,l.minLeftSideBearing=a.readShort(n,r),r+=2,l.minRightSideBearing=a.readShort(n,r),r+=2,l.xMaxExtent=a.readShort(n,r),r+=2,l.caretSlopeRise=a.readShort(n,r),r+=2,l.caretSlopeRun=a.readShort(n,r),r+=2,l.caretOffset=a.readShort(n,r),r+=2,r+=8,l.metricDataFormat=a.readShort(n,r),r+=2,l.numberOfHMetrics=a.readUshort(n,r),r+=2,l},e.hmtx={},e.hmtx.parse=function(n,r,o,a){for(var l=e._bin,c={aWidth:[],lsBearing:[]},h=0,u=0,d=0;d<a.maxp.numGlyphs;d++)d<a.hhea.numberOfHMetrics&&(h=l.readUshort(n,r),r+=2,u=l.readShort(n,r),r+=2),c.aWidth.push(h),c.lsBearing.push(u);return c},e.kern={},e.kern.parse=function(n,r,o,a){var l=e._bin,c=l.readUshort(n,r);if(r+=2,c==1)return e.kern.parseV1(n,r-2,o,a);var h=l.readUshort(n,r);r+=2;for(var u={glyph1:[],rval:[]},d=0;d<h;d++){r+=2,o=l.readUshort(n,r),r+=2;var f=l.readUshort(n,r);r+=2;var p=f>>>8;if((p&=15)!=0)throw"unknown kern table format: "+p;r=e.kern.readFormat0(n,r,u)}return u},e.kern.parseV1=function(n,r,o,a){var l=e._bin;l.readFixed(n,r),r+=4;var c=l.readUint(n,r);r+=4;for(var h={glyph1:[],rval:[]},u=0;u<c;u++){l.readUint(n,r),r+=4;var d=l.readUshort(n,r);r+=2,l.readUshort(n,r),r+=2;var f=d>>>8;if((f&=15)!=0)throw"unknown kern table format: "+f;r=e.kern.readFormat0(n,r,h)}return h},e.kern.readFormat0=function(n,r,o){var a=e._bin,l=-1,c=a.readUshort(n,r);r+=2,a.readUshort(n,r),r+=2,a.readUshort(n,r),r+=2,a.readUshort(n,r),r+=2;for(var h=0;h<c;h++){var u=a.readUshort(n,r);r+=2;var d=a.readUshort(n,r);r+=2;var f=a.readShort(n,r);r+=2,u!=l&&(o.glyph1.push(u),o.rval.push({glyph2:[],vals:[]}));var p=o.rval[o.rval.length-1];p.glyph2.push(d),p.vals.push(f),l=u}return r},e.loca={},e.loca.parse=function(n,r,o,a){var l=e._bin,c=[],h=a.head.indexToLocFormat,u=a.maxp.numGlyphs+1;if(h==0)for(var d=0;d<u;d++)c.push(l.readUshort(n,r+(d<<1))<<1);if(h==1)for(d=0;d<u;d++)c.push(l.readUint(n,r+(d<<2)));return c},e.maxp={},e.maxp.parse=function(n,r,o){var a=e._bin,l={},c=a.readUint(n,r);return r+=4,l.numGlyphs=a.readUshort(n,r),r+=2,c==65536&&(l.maxPoints=a.readUshort(n,r),r+=2,l.maxContours=a.readUshort(n,r),r+=2,l.maxCompositePoints=a.readUshort(n,r),r+=2,l.maxCompositeContours=a.readUshort(n,r),r+=2,l.maxZones=a.readUshort(n,r),r+=2,l.maxTwilightPoints=a.readUshort(n,r),r+=2,l.maxStorage=a.readUshort(n,r),r+=2,l.maxFunctionDefs=a.readUshort(n,r),r+=2,l.maxInstructionDefs=a.readUshort(n,r),r+=2,l.maxStackElements=a.readUshort(n,r),r+=2,l.maxSizeOfInstructions=a.readUshort(n,r),r+=2,l.maxComponentElements=a.readUshort(n,r),r+=2,l.maxComponentDepth=a.readUshort(n,r),r+=2),l},e.name={},e.name.parse=function(n,r,o){var a=e._bin,l={};a.readUshort(n,r),r+=2;var c=a.readUshort(n,r);r+=2,a.readUshort(n,r);for(var h,u=["copyright","fontFamily","fontSubfamily","ID","fullName","version","postScriptName","trademark","manufacturer","designer","description","urlVendor","urlDesigner","licence","licenceURL","---","typoFamilyName","typoSubfamilyName","compatibleFull","sampleText","postScriptCID","wwsFamilyName","wwsSubfamilyName","lightPalette","darkPalette"],d=r+=2,f=0;f<c;f++){var p=a.readUshort(n,r);r+=2;var v=a.readUshort(n,r);r+=2;var m=a.readUshort(n,r);r+=2;var g=a.readUshort(n,r);r+=2;var x=a.readUshort(n,r);r+=2;var y=a.readUshort(n,r);r+=2;var _,E=u[g],w=d+12*c+y;if(p==0)_=a.readUnicode(n,w,x/2);else if(p==3&&v==0)_=a.readUnicode(n,w,x/2);else if(v==0)_=a.readASCII(n,w,x);else if(v==1)_=a.readUnicode(n,w,x/2);else if(v==3)_=a.readUnicode(n,w,x/2);else{if(p!=1)throw"unknown encoding "+v+", platformID: "+p;_=a.readASCII(n,w,x),console.debug("reading unknown MAC encoding "+v+" as ASCII")}var M="p"+p+","+m.toString(16);l[M]==null&&(l[M]={}),l[M][E!==void 0?E:g]=_,l[M]._lang=m}for(var T in l)if(l[T].postScriptName!=null&&l[T]._lang==1033)return l[T];for(var T in l)if(l[T].postScriptName!=null&&l[T]._lang==0)return l[T];for(var T in l)if(l[T].postScriptName!=null&&l[T]._lang==3084)return l[T];for(var T in l)if(l[T].postScriptName!=null)return l[T];for(var T in l){h=T;break}return console.debug("returning name table with languageID "+l[h]._lang),l[h]},e["OS/2"]={},e["OS/2"].parse=function(n,r,o){var a=e._bin.readUshort(n,r);r+=2;var l={};if(a==0)e["OS/2"].version0(n,r,l);else if(a==1)e["OS/2"].version1(n,r,l);else if(a==2||a==3||a==4)e["OS/2"].version2(n,r,l);else{if(a!=5)throw"unknown OS/2 table version: "+a;e["OS/2"].version5(n,r,l)}return l},e["OS/2"].version0=function(n,r,o){var a=e._bin;return o.xAvgCharWidth=a.readShort(n,r),r+=2,o.usWeightClass=a.readUshort(n,r),r+=2,o.usWidthClass=a.readUshort(n,r),r+=2,o.fsType=a.readUshort(n,r),r+=2,o.ySubscriptXSize=a.readShort(n,r),r+=2,o.ySubscriptYSize=a.readShort(n,r),r+=2,o.ySubscriptXOffset=a.readShort(n,r),r+=2,o.ySubscriptYOffset=a.readShort(n,r),r+=2,o.ySuperscriptXSize=a.readShort(n,r),r+=2,o.ySuperscriptYSize=a.readShort(n,r),r+=2,o.ySuperscriptXOffset=a.readShort(n,r),r+=2,o.ySuperscriptYOffset=a.readShort(n,r),r+=2,o.yStrikeoutSize=a.readShort(n,r),r+=2,o.yStrikeoutPosition=a.readShort(n,r),r+=2,o.sFamilyClass=a.readShort(n,r),r+=2,o.panose=a.readBytes(n,r,10),r+=10,o.ulUnicodeRange1=a.readUint(n,r),r+=4,o.ulUnicodeRange2=a.readUint(n,r),r+=4,o.ulUnicodeRange3=a.readUint(n,r),r+=4,o.ulUnicodeRange4=a.readUint(n,r),r+=4,o.achVendID=[a.readInt8(n,r),a.readInt8(n,r+1),a.readInt8(n,r+2),a.readInt8(n,r+3)],r+=4,o.fsSelection=a.readUshort(n,r),r+=2,o.usFirstCharIndex=a.readUshort(n,r),r+=2,o.usLastCharIndex=a.readUshort(n,r),r+=2,o.sTypoAscender=a.readShort(n,r),r+=2,o.sTypoDescender=a.readShort(n,r),r+=2,o.sTypoLineGap=a.readShort(n,r),r+=2,o.usWinAscent=a.readUshort(n,r),r+=2,o.usWinDescent=a.readUshort(n,r),r+=2},e["OS/2"].version1=function(n,r,o){var a=e._bin;return r=e["OS/2"].version0(n,r,o),o.ulCodePageRange1=a.readUint(n,r),r+=4,o.ulCodePageRange2=a.readUint(n,r),r+=4},e["OS/2"].version2=function(n,r,o){var a=e._bin;return r=e["OS/2"].version1(n,r,o),o.sxHeight=a.readShort(n,r),r+=2,o.sCapHeight=a.readShort(n,r),r+=2,o.usDefault=a.readUshort(n,r),r+=2,o.usBreak=a.readUshort(n,r),r+=2,o.usMaxContext=a.readUshort(n,r),r+=2},e["OS/2"].version5=function(n,r,o){var a=e._bin;return r=e["OS/2"].version2(n,r,o),o.usLowerOpticalPointSize=a.readUshort(n,r),r+=2,o.usUpperOpticalPointSize=a.readUshort(n,r),r+=2},e.post={},e.post.parse=function(n,r,o){var a=e._bin,l={};return l.version=a.readFixed(n,r),r+=4,l.italicAngle=a.readFixed(n,r),r+=4,l.underlinePosition=a.readShort(n,r),r+=2,l.underlineThickness=a.readShort(n,r),r+=2,l},e==null&&(e={}),e.U==null&&(e.U={}),e.U.codeToGlyph=function(n,r){var o=n.cmap,a=-1;if(o.p0e4!=null?a=o.p0e4:o.p3e1!=null?a=o.p3e1:o.p1e0!=null?a=o.p1e0:o.p0e3!=null&&(a=o.p0e3),a==-1)throw"no familiar platform and encoding!";var l=o.tables[a];if(l.format==0)return r>=l.map.length?0:l.map[r];if(l.format==4){for(var c=-1,h=0;h<l.endCount.length;h++)if(r<=l.endCount[h]){c=h;break}return c==-1||l.startCount[c]>r?0:65535&(l.idRangeOffset[c]!=0?l.glyphIdArray[r-l.startCount[c]+(l.idRangeOffset[c]>>1)-(l.idRangeOffset.length-c)]:r+l.idDelta[c])}if(l.format==12){if(r>l.groups[l.groups.length-1][1])return 0;for(h=0;h<l.groups.length;h++){var u=l.groups[h];if(u[0]<=r&&r<=u[1])return u[2]+(r-u[0])}return 0}throw"unknown cmap table format "+l.format},e.U.glyphToPath=function(n,r){var o={cmds:[],crds:[]};if(n.SVG&&n.SVG.entries[r]){var a=n.SVG.entries[r];return a==null?o:(typeof a=="string"&&(a=e.SVG.toPath(a),n.SVG.entries[r]=a),a)}if(n.CFF){var l={x:0,y:0,stack:[],nStems:0,haveWidth:!1,width:n.CFF.Private?n.CFF.Private.defaultWidthX:0,open:!1},c=n.CFF,h=n.CFF.Private;if(c.ROS){for(var u=0;c.FDSelect[u+2]<=r;)u+=2;h=c.FDArray[c.FDSelect[u+1]].Private}e.U._drawCFF(n.CFF.CharStrings[r],l,c,h,o)}else n.glyf&&e.U._drawGlyf(r,n,o);return o},e.U._drawGlyf=function(n,r,o){var a=r.glyf[n];a==null&&(a=r.glyf[n]=e.glyf._parseGlyf(r,n)),a!=null&&(a.noc>-1?e.U._simpleGlyph(a,o):e.U._compoGlyph(a,r,o))},e.U._simpleGlyph=function(n,r){for(var o=0;o<n.noc;o++){for(var a=o==0?0:n.endPts[o-1]+1,l=n.endPts[o],c=a;c<=l;c++){var h=c==a?l:c-1,u=c==l?a:c+1,d=1&n.flags[c],f=1&n.flags[h],p=1&n.flags[u],v=n.xs[c],m=n.ys[c];if(c==a)if(d){if(!f){e.U.P.moveTo(r,v,m);continue}e.U.P.moveTo(r,n.xs[h],n.ys[h])}else f?e.U.P.moveTo(r,n.xs[h],n.ys[h]):e.U.P.moveTo(r,(n.xs[h]+v)/2,(n.ys[h]+m)/2);d?f&&e.U.P.lineTo(r,v,m):p?e.U.P.qcurveTo(r,v,m,n.xs[u],n.ys[u]):e.U.P.qcurveTo(r,v,m,(v+n.xs[u])/2,(m+n.ys[u])/2)}e.U.P.closePath(r)}},e.U._compoGlyph=function(n,r,o){for(var a=0;a<n.parts.length;a++){var l={cmds:[],crds:[]},c=n.parts[a];e.U._drawGlyf(c.glyphIndex,r,l);for(var h=c.m,u=0;u<l.crds.length;u+=2){var d=l.crds[u],f=l.crds[u+1];o.crds.push(d*h.a+f*h.b+h.tx),o.crds.push(d*h.c+f*h.d+h.ty)}for(u=0;u<l.cmds.length;u++)o.cmds.push(l.cmds[u])}},e.U._getGlyphClass=function(n,r){var o=e._lctf.getInterval(r,n);return o==-1?0:r[o+2]},e.U._applySubs=function(n,r,o,a){for(var l=n.length-r-1,c=0;c<o.tabs.length;c++)if(o.tabs[c]!=null){var h,u=o.tabs[c];if(!u.coverage||(h=e._lctf.coverageIndex(u.coverage,n[r]))!=-1){if(o.ltype==1)n[r],u.fmt==1?n[r]=n[r]+u.delta:n[r]=u.newg[h];else if(o.ltype==4)for(var d=u.vals[h],f=0;f<d.length;f++){var p=d[f],v=p.chain.length;if(!(v>l)){for(var m=!0,g=0,x=0;x<v;x++){for(;n[r+g+(1+x)]==-1;)g++;p.chain[x]!=n[r+g+(1+x)]&&(m=!1)}if(m){for(n[r]=p.nglyph,x=0;x<v+g;x++)n[r+x+1]=-1;break}}}else if(o.ltype==5&&u.fmt==2)for(var y=e._lctf.getInterval(u.cDef,n[r]),_=u.cDef[y+2],E=u.scset[_],w=0;w<E.length;w++){var M=E[w],T=M.input;if(!(T.length>l)){for(m=!0,x=0;x<T.length;x++){var S=e._lctf.getInterval(u.cDef,n[r+1+x]);if(y==-1&&u.cDef[S+2]!=T[x]){m=!1;break}}if(m){var b=M.substLookupRecords;for(f=0;f<b.length;f+=2)b[f],b[f+1]}}}else if(o.ltype==6&&u.fmt==3){if(!e.U._glsCovered(n,u.backCvg,r-u.backCvg.length)||!e.U._glsCovered(n,u.inptCvg,r)||!e.U._glsCovered(n,u.ahedCvg,r+u.inptCvg.length))continue;var P=u.lookupRec;for(w=0;w<P.length;w+=2){y=P[w];var D=a[P[w+1]];e.U._applySubs(n,r+y,D,a)}}}}},e.U._glsCovered=function(n,r,o){for(var a=0;a<r.length;a++)if(e._lctf.coverageIndex(r[a],n[o+a])==-1)return!1;return!0},e.U.glyphsToPath=function(n,r,o){for(var a={cmds:[],crds:[]},l=0,c=0;c<r.length;c++){var h=r[c];if(h!=-1){for(var u=c<r.length-1&&r[c+1]!=-1?r[c+1]:0,d=e.U.glyphToPath(n,h),f=0;f<d.crds.length;f+=2)a.crds.push(d.crds[f]+l),a.crds.push(d.crds[f+1]);for(o&&a.cmds.push(o),f=0;f<d.cmds.length;f++)a.cmds.push(d.cmds[f]);o&&a.cmds.push("X"),l+=n.hmtx.aWidth[h],c<r.length-1&&(l+=e.U.getPairAdjustment(n,h,u))}}return a},e.U.P={},e.U.P.moveTo=function(n,r,o){n.cmds.push("M"),n.crds.push(r,o)},e.U.P.lineTo=function(n,r,o){n.cmds.push("L"),n.crds.push(r,o)},e.U.P.curveTo=function(n,r,o,a,l,c,h){n.cmds.push("C"),n.crds.push(r,o,a,l,c,h)},e.U.P.qcurveTo=function(n,r,o,a,l){n.cmds.push("Q"),n.crds.push(r,o,a,l)},e.U.P.closePath=function(n){n.cmds.push("Z")},e.U._drawCFF=function(n,r,o,a,l){for(var c=r.stack,h=r.nStems,u=r.haveWidth,d=r.width,f=r.open,p=0,v=r.x,m=r.y,g=0,x=0,y=0,_=0,E=0,w=0,M=0,T=0,S=0,b=0,P={val:0,size:0};p<n.length;){e.CFF.getCharString(n,p,P);var D=P.val;if(p+=P.size,D=="o1"||D=="o18")c.length%2!=0&&!u&&(d=c.shift()+a.nominalWidthX),h+=c.length>>1,c.length=0,u=!0;else if(D=="o3"||D=="o23")c.length%2!=0&&!u&&(d=c.shift()+a.nominalWidthX),h+=c.length>>1,c.length=0,u=!0;else if(D=="o4")c.length>1&&!u&&(d=c.shift()+a.nominalWidthX,u=!0),f&&e.U.P.closePath(l),m+=c.pop(),e.U.P.moveTo(l,v,m),f=!0;else if(D=="o5")for(;c.length>0;)v+=c.shift(),m+=c.shift(),e.U.P.lineTo(l,v,m);else if(D=="o6"||D=="o7")for(var G=c.length,H=D=="o6",q=0;q<G;q++){var F=c.shift();H?v+=F:m+=F,H=!H,e.U.P.lineTo(l,v,m)}else if(D=="o8"||D=="o24"){G=c.length;for(var te=0;te+6<=G;)g=v+c.shift(),x=m+c.shift(),y=g+c.shift(),_=x+c.shift(),v=y+c.shift(),m=_+c.shift(),e.U.P.curveTo(l,g,x,y,_,v,m),te+=6;D=="o24"&&(v+=c.shift(),m+=c.shift(),e.U.P.lineTo(l,v,m))}else{if(D=="o11")break;if(D=="o1234"||D=="o1235"||D=="o1236"||D=="o1237")D=="o1234"&&(x=m,y=(g=v+c.shift())+c.shift(),b=_=x+c.shift(),w=_,T=m,v=(M=(E=(S=y+c.shift())+c.shift())+c.shift())+c.shift(),e.U.P.curveTo(l,g,x,y,_,S,b),e.U.P.curveTo(l,E,w,M,T,v,m)),D=="o1235"&&(g=v+c.shift(),x=m+c.shift(),y=g+c.shift(),_=x+c.shift(),S=y+c.shift(),b=_+c.shift(),E=S+c.shift(),w=b+c.shift(),M=E+c.shift(),T=w+c.shift(),v=M+c.shift(),m=T+c.shift(),c.shift(),e.U.P.curveTo(l,g,x,y,_,S,b),e.U.P.curveTo(l,E,w,M,T,v,m)),D=="o1236"&&(g=v+c.shift(),x=m+c.shift(),y=g+c.shift(),b=_=x+c.shift(),w=_,M=(E=(S=y+c.shift())+c.shift())+c.shift(),T=w+c.shift(),v=M+c.shift(),e.U.P.curveTo(l,g,x,y,_,S,b),e.U.P.curveTo(l,E,w,M,T,v,m)),D=="o1237"&&(g=v+c.shift(),x=m+c.shift(),y=g+c.shift(),_=x+c.shift(),S=y+c.shift(),b=_+c.shift(),E=S+c.shift(),w=b+c.shift(),M=E+c.shift(),T=w+c.shift(),Math.abs(M-v)>Math.abs(T-m)?v=M+c.shift():m=T+c.shift(),e.U.P.curveTo(l,g,x,y,_,S,b),e.U.P.curveTo(l,E,w,M,T,v,m));else if(D=="o14"){if(c.length>0&&!u&&(d=c.shift()+o.nominalWidthX,u=!0),c.length==4){var Y=c.shift(),j=c.shift(),$=c.shift(),L=c.shift(),Z=e.CFF.glyphBySE(o,$),Q=e.CFF.glyphBySE(o,L);e.U._drawCFF(o.CharStrings[Z],r,o,a,l),r.x=Y,r.y=j,e.U._drawCFF(o.CharStrings[Q],r,o,a,l)}f&&(e.U.P.closePath(l),f=!1)}else if(D=="o19"||D=="o20")c.length%2!=0&&!u&&(d=c.shift()+a.nominalWidthX),h+=c.length>>1,c.length=0,u=!0,p+=h+7>>3;else if(D=="o21")c.length>2&&!u&&(d=c.shift()+a.nominalWidthX,u=!0),m+=c.pop(),v+=c.pop(),f&&e.U.P.closePath(l),e.U.P.moveTo(l,v,m),f=!0;else if(D=="o22")c.length>1&&!u&&(d=c.shift()+a.nominalWidthX,u=!0),v+=c.pop(),f&&e.U.P.closePath(l),e.U.P.moveTo(l,v,m),f=!0;else if(D=="o25"){for(;c.length>6;)v+=c.shift(),m+=c.shift(),e.U.P.lineTo(l,v,m);g=v+c.shift(),x=m+c.shift(),y=g+c.shift(),_=x+c.shift(),v=y+c.shift(),m=_+c.shift(),e.U.P.curveTo(l,g,x,y,_,v,m)}else if(D=="o26")for(c.length%2&&(v+=c.shift());c.length>0;)g=v,x=m+c.shift(),v=y=g+c.shift(),m=(_=x+c.shift())+c.shift(),e.U.P.curveTo(l,g,x,y,_,v,m);else if(D=="o27")for(c.length%2&&(m+=c.shift());c.length>0;)x=m,y=(g=v+c.shift())+c.shift(),_=x+c.shift(),v=y+c.shift(),m=_,e.U.P.curveTo(l,g,x,y,_,v,m);else if(D=="o10"||D=="o29"){var k=D=="o10"?a:o;if(c.length==0)console.debug("error: empty stack");else{var W=c.pop(),J=k.Subrs[W+k.Bias];r.x=v,r.y=m,r.nStems=h,r.haveWidth=u,r.width=d,r.open=f,e.U._drawCFF(J,r,o,a,l),v=r.x,m=r.y,h=r.nStems,u=r.haveWidth,d=r.width,f=r.open}}else if(D=="o30"||D=="o31"){var X=c.length,ne=(te=0,D=="o31");for(te+=X-(G=-3&X);te<G;)ne?(x=m,y=(g=v+c.shift())+c.shift(),m=(_=x+c.shift())+c.shift(),G-te==5?(v=y+c.shift(),te++):v=y,ne=!1):(g=v,x=m+c.shift(),y=g+c.shift(),_=x+c.shift(),v=y+c.shift(),G-te==5?(m=_+c.shift(),te++):m=_,ne=!0),e.U.P.curveTo(l,g,x,y,_,v,m),te+=4}else{if((D+"").charAt(0)=="o")throw console.debug("Unknown operation: "+D,n),D;c.push(D)}}}r.x=v,r.y=m,r.nStems=h,r.haveWidth=u,r.width=d,r.open=f};var t=e,i={Typr:t};return s.Typr=t,s.default=i,Object.defineProperty(s,"__esModule",{value:!0}),s}({}).Typr}/*!
Custom bundle of woff2otf (https://github.com/arty-name/woff2otf) with fflate
(https://github.com/101arrowz/fflate) for use in Troika text rendering. 
Original licenses apply: 
- fflate: https://github.com/101arrowz/fflate/blob/master/LICENSE (MIT)
- woff2otf.js: https://github.com/arty-name/woff2otf/blob/master/woff2otf.js (Apache2)
*/function aR(){return function(s){var e=Uint8Array,t=Uint16Array,i=Uint32Array,n=new e([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),r=new e([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),o=new e([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),a=function(D,G){for(var H=new t(31),q=0;q<31;++q)H[q]=G+=1<<D[q-1];var F=new i(H[30]);for(q=1;q<30;++q)for(var te=H[q];te<H[q+1];++te)F[te]=te-H[q]<<5|q;return[H,F]},l=a(n,2),c=l[0],h=l[1];c[28]=258,h[258]=28;for(var u=a(r,0)[0],d=new t(32768),f=0;f<32768;++f){var p=(43690&f)>>>1|(21845&f)<<1;p=(61680&(p=(52428&p)>>>2|(13107&p)<<2))>>>4|(3855&p)<<4,d[f]=((65280&p)>>>8|(255&p)<<8)>>>1}var v=function(D,G,H){for(var q=D.length,F=0,te=new t(G);F<q;++F)++te[D[F]-1];var Y,j=new t(G);for(F=0;F<G;++F)j[F]=j[F-1]+te[F-1]<<1;{Y=new t(1<<G);var $=15-G;for(F=0;F<q;++F)if(D[F])for(var L=F<<4|D[F],Z=G-D[F],Q=j[D[F]-1]++<<Z,k=Q|(1<<Z)-1;Q<=k;++Q)Y[d[Q]>>>$]=L}return Y},m=new e(288);for(f=0;f<144;++f)m[f]=8;for(f=144;f<256;++f)m[f]=9;for(f=256;f<280;++f)m[f]=7;for(f=280;f<288;++f)m[f]=8;var g=new e(32);for(f=0;f<32;++f)g[f]=5;var x=v(m,9),y=v(g,5),_=function(D){for(var G=D[0],H=1;H<D.length;++H)D[H]>G&&(G=D[H]);return G},E=function(D,G,H){var q=G/8|0;return(D[q]|D[q+1]<<8)>>(7&G)&H},w=function(D,G){var H=G/8|0;return(D[H]|D[H+1]<<8|D[H+2]<<16)>>(7&G)},M=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],T=function(D,G,H){var q=new Error(G||M[D]);if(q.code=D,Error.captureStackTrace&&Error.captureStackTrace(q,T),!H)throw q;return q},S=function(D,G,H){var q=D.length;if(!q||H&&!H.l&&q<5)return G||new e(0);var F=!G||H,te=!H||H.i;H||(H={}),G||(G=new e(3*q));var Y,j=function(Ue){var $e=G.length;if(Ue>$e){var Ne=new e(Math.max(2*$e,Ue));Ne.set(G),G=Ne}},$=H.f||0,L=H.p||0,Z=H.b||0,Q=H.l,k=H.d,W=H.m,J=H.n,X=8*q;do{if(!Q){H.f=$=E(D,L,1);var ne=E(D,L+1,3);if(L+=3,!ne){var me=D[(pe=((Y=L)/8|0)+(7&Y&&1)+4)-4]|D[pe-3]<<8,be=pe+me;if(be>q){te&&T(0);break}F&&j(Z+me),G.set(D.subarray(pe,be),Z),H.b=Z+=me,H.p=L=8*be;continue}if(ne==1)Q=x,k=y,W=9,J=5;else if(ne==2){var we=E(D,L,31)+257,ve=E(D,L+10,15)+4,Ie=we+E(D,L+5,31)+1;L+=14;for(var U=new e(Ie),fe=new e(19),he=0;he<ve;++he)fe[o[he]]=E(D,L+3*he,7);L+=3*ve;var xe=_(fe),re=(1<<xe)-1,Te=v(fe,xe);for(he=0;he<Ie;){var pe,ce=Te[E(D,L,re)];if(L+=15&ce,(pe=ce>>>4)<16)U[he++]=pe;else{var ke=0,O=0;for(pe==16?(O=3+E(D,L,3),L+=2,ke=U[he-1]):pe==17?(O=3+E(D,L,7),L+=3):pe==18&&(O=11+E(D,L,127),L+=7);O--;)U[he++]=ke}}var A=U.subarray(0,we),ee=U.subarray(we);W=_(A),J=_(ee),Q=v(A,W),k=v(ee,J)}else T(1);if(L>X){te&&T(0);break}}F&&j(Z+131072);for(var de=(1<<W)-1,ue=(1<<J)-1,ae=L;;ae=L){var De=(ke=Q[w(D,L)&de])>>>4;if((L+=15&ke)>X){te&&T(0);break}if(ke||T(2),De<256)G[Z++]=De;else{if(De==256){ae=L,Q=null;break}var Pe=De-254;if(De>264){var He=n[he=De-257];Pe=E(D,L,(1<<He)-1)+c[he],L+=He}var je=k[w(D,L)&ue],Se=je>>>4;if(je||T(3),L+=15&je,ee=u[Se],Se>3&&(He=r[Se],ee+=w(D,L)&(1<<He)-1,L+=He),L>X){te&&T(0);break}F&&j(Z+131072);for(var Le=Z+Pe;Z<Le;Z+=4)G[Z]=G[Z-ee],G[Z+1]=G[Z+1-ee],G[Z+2]=G[Z+2-ee],G[Z+3]=G[Z+3-ee];Z=Le}}H.l=Q,H.p=ae,H.b=Z,Q&&($=1,H.m=W,H.d=k,H.n=J)}while(!$);return Z==G.length?G:function(Ue,$e,Ne){(Ne==null||Ne>Ue.length)&&(Ne=Ue.length);var dt=new(Ue instanceof t?t:Ue instanceof i?i:e)(Ne-$e);return dt.set(Ue.subarray($e,Ne)),dt}(G,0,Z)},b=new e(0),P=typeof TextDecoder<"u"&&new TextDecoder;try{P.decode(b,{stream:!0})}catch{}return s.convert_streams=function(D){var G=new DataView(D),H=0;function q(){var we=G.getUint16(H);return H+=2,we}function F(){var we=G.getUint32(H);return H+=4,we}function te(we){me.setUint16(be,we),be+=2}function Y(we){me.setUint32(be,we),be+=4}for(var j={signature:F(),flavor:F(),length:F(),numTables:q(),reserved:q(),totalSfntSize:F(),majorVersion:q(),minorVersion:q(),metaOffset:F(),metaLength:F(),metaOrigLength:F(),privOffset:F(),privLength:F()},$=0;Math.pow(2,$)<=j.numTables;)$++;$--;for(var L=16*Math.pow(2,$),Z=16*j.numTables-L,Q=12,k=[],W=0;W<j.numTables;W++)k.push({tag:F(),offset:F(),compLength:F(),origLength:F(),origChecksum:F()}),Q+=16;var J,X=new Uint8Array(12+16*k.length+k.reduce(function(we,ve){return we+ve.origLength+4},0)),ne=X.buffer,me=new DataView(ne),be=0;return Y(j.flavor),te(j.numTables),te(L),te($),te(Z),k.forEach(function(we){Y(we.tag),Y(we.origChecksum),Y(Q),Y(we.origLength),we.outOffset=Q,(Q+=we.origLength)%4!=0&&(Q+=4-Q%4)}),k.forEach(function(we){var ve,Ie=D.slice(we.offset,we.offset+we.compLength);if(we.compLength!=we.origLength){var U=new Uint8Array(we.origLength);ve=new Uint8Array(Ie,2),S(ve,U)}else U=new Uint8Array(Ie);X.set(U,we.outOffset);var fe=0;(Q=we.outOffset+we.origLength)%4!=0&&(fe=4-Q%4),X.set(new Uint8Array(fe).buffer,we.outOffset+we.origLength),J=Q+fe}),ne.slice(0,J)},Object.defineProperty(s,"__esModule",{value:!0}),s}({}).convert_streams}function lR(s,e){const t={M:2,L:2,Q:4,C:6,Z:0},i={C:"18g,ca,368,1kz",D:"17k,6,2,2+4,5+c,2+6,2+1,10+1,9+f,j+11,2+1,a,2,2+1,15+2,3,j+2,6+3,2+8,2,2,2+1,w+a,4+e,3+3,2,3+2,3+5,23+w,2f+4,3,2+9,2,b,2+3,3,1k+9,6+1,3+1,2+2,2+d,30g,p+y,1,1+1g,f+x,2,sd2+1d,jf3+4,f+3,2+4,2+2,b+3,42,2,4+2,2+1,2,3,t+1,9f+w,2,el+2,2+g,d+2,2l,2+1,5,3+1,2+1,2,3,6,16wm+1v",R:"17m+3,2,2,6+3,m,15+2,2+2,h+h,13,3+8,2,2,3+1,2,p+1,x,5+4,5,a,2,2,3,u,c+2,g+1,5,2+1,4+1,5j,6+1,2,b,2+2,f,2+1,1s+2,2,3+1,7,1ez0,2,2+1,4+4,b,4,3,b,42,2+2,4,3,2+1,2,o+3,ae,ep,x,2o+2,3+1,3,5+1,6",L:"x9u,jff,a,fd,jv",T:"4t,gj+33,7o+4,1+1,7c+18,2,2+1,2+1,2,21+a,2,1b+k,h,2u+6,3+5,3+1,2+3,y,2,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,3,7,6+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+d,1,1+1,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,ek,3+1,r+4,1e+4,6+5,2p+c,1+3,1,1+2,1+b,2db+2,3y,2p+v,ff+3,30+1,n9x,1+2,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,5s,6y+2,ea,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+9,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2,2b+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,470+8,at4+4,1o+6,t5,1s+3,2a,f5l+1,2+3,43o+2,a+7,1+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,1,gzau,v+2n,3l+6n"},n=1,r=2,o=4,a=8,l=16,c=32;let h;function u(M){if(!h){const T={R:r,L:n,D:o,C:l,U:c,T:a};h=new Map;for(let S in i){let b=0;i[S].split(",").forEach(P=>{let[D,G]=P.split("+");D=parseInt(D,36),G=G?parseInt(G,36):0,h.set(b+=D,T[S]);for(let H=G;H--;)h.set(++b,T[S])})}}return h.get(M)||c}const d=1,f=2,p=3,v=4,m=[null,"isol","init","fina","medi"];function g(M){const T=new Uint8Array(M.length);let S=c,b=d,P=-1;for(let D=0;D<M.length;D++){const G=M.codePointAt(D);let H=u(G)|0,q=d;H&a||(S&(n|o|l)?H&(r|o|l)?(q=p,(b===d||b===p)&&T[P]++):H&(n|c)&&(b===f||b===v)&&T[P]--:S&(r|c)&&(b===f||b===v)&&T[P]--,b=T[D]=q,S=H,P=D,G>65535&&D++)}return T}function x(M,T){const S=[];for(let P=0;P<T.length;P++){const D=T.codePointAt(P);D>65535&&P++,S.push(s.U.codeToGlyph(M,D))}const b=M.GSUB;if(b){const{lookupList:P,featureList:D}=b;let G;const H=/^(rlig|liga|mset|isol|init|fina|medi|half|pres|blws|ccmp)$/,q=[];D.forEach(F=>{if(H.test(F.tag))for(let te=0;te<F.tab.length;te++){if(q[F.tab[te]])continue;q[F.tab[te]]=!0;const Y=P[F.tab[te]],j=/^(isol|init|fina|medi)$/.test(F.tag);j&&!G&&(G=g(T));for(let $=0;$<S.length;$++)(!G||!j||m[G[$]]===F.tag)&&s.U._applySubs(S,$,Y,P)}})}return S}function y(M,T){const S=new Int16Array(T.length*3);let b=0;for(;b<T.length;b++){const H=T[b];if(H===-1)continue;S[b*3+2]=M.hmtx.aWidth[H];const q=M.GPOS;if(q){const F=q.lookupList;for(let te=0;te<F.length;te++){const Y=F[te];for(let j=0;j<Y.tabs.length;j++){const $=Y.tabs[j];if(Y.ltype===1){if(s._lctf.coverageIndex($.coverage,H)!==-1&&$.pos){G($.pos,b);break}}else if(Y.ltype===2){let L=null,Z=P();if(Z!==-1){const Q=s._lctf.coverageIndex($.coverage,T[Z]);if(Q!==-1){if($.fmt===1){const k=$.pairsets[Q];for(let W=0;W<k.length;W++)k[W].gid2===H&&(L=k[W])}else if($.fmt===2){const k=s.U._getGlyphClass(T[Z],$.classDef1),W=s.U._getGlyphClass(H,$.classDef2);L=$.matrix[k][W]}if(L){L.val1&&G(L.val1,Z),L.val2&&G(L.val2,b);break}}}}else if(Y.ltype===4){const L=s._lctf.coverageIndex($.markCoverage,H);if(L!==-1){const Z=P(D),Q=Z===-1?-1:s._lctf.coverageIndex($.baseCoverage,T[Z]);if(Q!==-1){const k=$.markArray[L],W=$.baseArray[Q][k.markClass];S[b*3]=W.x-k.x+S[Z*3]-S[Z*3+2],S[b*3+1]=W.y-k.y+S[Z*3+1];break}}}else if(Y.ltype===6){const L=s._lctf.coverageIndex($.mark1Coverage,H);if(L!==-1){const Z=P();if(Z!==-1){const Q=T[Z];if(_(M,Q)===3){const k=s._lctf.coverageIndex($.mark2Coverage,Q);if(k!==-1){const W=$.mark1Array[L],J=$.mark2Array[k][W.markClass];S[b*3]=J.x-W.x+S[Z*3]-S[Z*3+2],S[b*3+1]=J.y-W.y+S[Z*3+1];break}}}}}}}}else if(M.kern&&!M.cff){const F=P();if(F!==-1){const te=M.kern.glyph1.indexOf(T[F]);if(te!==-1){const Y=M.kern.rval[te].glyph2.indexOf(H);Y!==-1&&(S[F*3+2]+=M.kern.rval[te].vals[Y])}}}}return S;function P(H){for(let q=b-1;q>=0;q--)if(T[q]!==-1&&(!H||H(T[q])))return q;return-1}function D(H){return _(M,H)===1}function G(H,q){for(let F=0;F<3;F++)S[q*3+F]+=H[F]||0}}function _(M,T){const S=M.GDEF&&M.GDEF.glyphClassDef;return S?s.U._getGlyphClass(T,S):0}function E(...M){for(let T=0;T<M.length;T++)if(typeof M[T]=="number")return M[T]}function w(M){const T=Object.create(null),S=M["OS/2"],b=M.hhea,P=M.head.unitsPerEm,D=E(S&&S.sTypoAscender,b&&b.ascender,P),G={unitsPerEm:P,ascender:D,descender:E(S&&S.sTypoDescender,b&&b.descender,0),capHeight:E(S&&S.sCapHeight,D),xHeight:E(S&&S.sxHeight,D),lineGap:E(S&&S.sTypoLineGap,b&&b.lineGap),supportsCodePoint(H){return s.U.codeToGlyph(M,H)>0},forEachGlyph(H,q,F,te){let Y=0;const j=1/G.unitsPerEm*q,$=x(M,H);let L=0;const Z=y(M,$);return $.forEach((Q,k)=>{if(Q!==-1){let W=T[Q];if(!W){const{cmds:J,crds:X}=s.U.glyphToPath(M,Q);let ne="",me=0;for(let U=0,fe=J.length;U<fe;U++){const he=t[J[U]];ne+=J[U];for(let xe=1;xe<=he;xe++)ne+=(xe>1?",":"")+X[me++]}let be,we,ve,Ie;if(X.length){be=we=1/0,ve=Ie=-1/0;for(let U=0,fe=X.length;U<fe;U+=2){let he=X[U],xe=X[U+1];he<be&&(be=he),xe<we&&(we=xe),he>ve&&(ve=he),xe>Ie&&(Ie=xe)}}else be=ve=we=Ie=0;W=T[Q]={index:Q,advanceWidth:M.hmtx.aWidth[Q],xMin:be,yMin:we,xMax:ve,yMax:Ie,path:ne}}te.call(null,W,Y+Z[k*3]*j,Z[k*3+1]*j,L),Y+=Z[k*3+2]*j,F&&(Y+=F*q)}L+=H.codePointAt(L)>65535?2:1}),Y}};return G}return function(T){const S=new Uint8Array(T,0,4),b=s._bin.readASCII(S,0,4);if(b==="wOFF")T=e(T);else if(b==="wOF2")throw new Error("woff2 fonts not supported");return w(s.parse(T)[0])}}const cR=ra({name:"Typr Font Parser",dependencies:[oR,aR,lR],init(s,e,t){const i=s(),n=e();return t(i,n)}});/*!
Custom bundle of @unicode-font-resolver/client v1.0.2 (https://github.com/lojjic/unicode-font-resolver)
for use in Troika text rendering. 
Original MIT license applies
*/function hR(){return function(s){var e=function(){this.buckets=new Map};e.prototype.add=function(y){var _=y>>5;this.buckets.set(_,(this.buckets.get(_)||0)|1<<(31&y))},e.prototype.has=function(y){var _=this.buckets.get(y>>5);return _!==void 0&&(_&1<<(31&y))!=0},e.prototype.serialize=function(){var y=[];return this.buckets.forEach(function(_,E){y.push((+E).toString(36)+":"+_.toString(36))}),y.join(",")},e.prototype.deserialize=function(y){var _=this;this.buckets.clear(),y.split(",").forEach(function(E){var w=E.split(":");_.buckets.set(parseInt(w[0],36),parseInt(w[1],36))})};var t=Math.pow(2,8),i=t-1,n=~i;function r(y){var _=function(w){return w&n}(y).toString(16),E=function(w){return(w&n)+t-1}(y).toString(16);return"codepoint-index/plane"+(y>>16)+"/"+_+"-"+E+".json"}function o(y,_){var E=y&i,w=_.codePointAt(E/6|0);return((w=(w||48)-48)&1<<E%6)!=0}function a(y,_){var E;(E=y,E.replace(/U\+/gi,"").replace(/^,+|,+$/g,"").split(/,+/).map(function(w){return w.split("-").map(function(M){return parseInt(M.trim(),16)})})).forEach(function(w){var M=w[0],T=w[1];T===void 0&&(T=M),_(M,T)})}function l(y,_){a(y,function(E,w){for(var M=E;M<=w;M++)_(M)})}var c={},h={},u=new WeakMap,d="https://cdn.jsdelivr.net/gh/lojjic/unicode-font-resolver@v1.0.1/packages/data";function f(y){var _=u.get(y);return _||(_=new e,l(y.ranges,function(E){return _.add(E)}),u.set(y,_)),_}var p,v=new Map;function m(y,_,E){return y[_]?_:y[E]?E:function(w){for(var M in w)return M}(y)}function g(y,_){var E=_;if(!y.includes(E)){E=1/0;for(var w=0;w<y.length;w++)Math.abs(y[w]-_)<Math.abs(E-_)&&(E=y[w])}return E}function x(y){return p||(p=new Set,l("9-D,20,85,A0,1680,2000-200A,2028-202F,205F,3000",function(_){p.add(_)})),p.has(y)}return s.CodePointSet=e,s.clearCache=function(){c={},h={}},s.getFontsForString=function(y,_){_===void 0&&(_={});var E,w=_.lang;w===void 0&&(w=new RegExp("\\p{Script=Hangul}","u").test(E=y)?"ko":new RegExp("\\p{Script=Hiragana}|\\p{Script=Katakana}","u").test(E)?"ja":"en");var M=_.category;M===void 0&&(M="sans-serif");var T=_.style;T===void 0&&(T="normal");var S=_.weight;S===void 0&&(S=400);var b=(_.dataUrl||d).replace(/\/$/g,""),P=new Map,D=new Uint8Array(y.length),G={},H={},q=new Array(y.length),F=new Map,te=!1;function Y(L){var Z=v.get(L);return Z||(Z=fetch(b+"/"+L).then(function(Q){if(!Q.ok)throw new Error(Q.statusText);return Q.json().then(function(k){if(!Array.isArray(k)||k[0]!==1)throw new Error("Incorrect schema version; need 1, got "+k[0]);return k[1]})}).catch(function(Q){if(b!==d)return te||(console.error('unicode-font-resolver: Failed loading from dataUrl "'+b+'", trying default CDN. '+Q.message),te=!0),b=d,v.delete(L),Y(L);throw Q}),v.set(L,Z)),Z}for(var j=function(L){var Z=y.codePointAt(L),Q=r(Z);q[L]=Q,c[Q]||F.has(Q)||F.set(Q,Y(Q).then(function(k){c[Q]=k})),Z>65535&&(L++,$=L)},$=0;$<y.length;$++)j($);return Promise.all(F.values()).then(function(){F.clear();for(var L=function(Q){var k=y.codePointAt(Q),W=null,J=c[q[Q]],X=void 0;for(var ne in J){var me=H[ne];if(me===void 0&&(me=H[ne]=new RegExp(ne).test(w||"en")),me){for(var be in X=ne,J[ne])if(o(k,J[ne][be])){W=be;break}break}}if(!W){e:for(var we in J)if(we!==X){for(var ve in J[we])if(o(k,J[we][ve])){W=ve;break e}}}W||(console.debug("No font coverage for U+"+k.toString(16)),W="latin"),q[Q]=W,h[W]||F.has(W)||F.set(W,Y("font-meta/"+W+".json").then(function(Ie){h[W]=Ie})),k>65535&&(Q++,Z=Q)},Z=0;Z<y.length;Z++)L(Z);return Promise.all(F.values())}).then(function(){for(var L,Z=null,Q=0;Q<y.length;Q++){var k=y.codePointAt(Q);if(Z&&(x(k)||f(Z).has(k)))D[Q]=D[Q-1];else{Z=h[q[Q]];var W=G[Z.id];if(!W){var J=Z.typeforms,X=m(J,M,"sans-serif"),ne=m(J[X],T,"normal"),me=g((L=J[X])===null||L===void 0?void 0:L[ne],S);W=G[Z.id]=b+"/font-files/"+Z.id+"/"+X+"."+ne+"."+me+".woff"}var be=P.get(W);be==null&&(be=P.size,P.set(W,be)),D[Q]=be}k>65535&&(Q++,D[Q]=D[Q-1])}return{fontUrls:Array.from(P.keys()),chars:D}})},Object.defineProperty(s,"__esModule",{value:!0}),s}({})}function uR(s,e){const t=Object.create(null),i=Object.create(null);function n(o,a){const l=c=>{console.error(`Failure loading font ${o}`,c)};try{const c=new XMLHttpRequest;c.open("get",o,!0),c.responseType="arraybuffer",c.onload=function(){if(c.status>=400)l(new Error(c.statusText));else if(c.status>0)try{const h=s(c.response);h.src=o,a(h)}catch(h){l(h)}},c.onerror=l,c.send()}catch(c){l(c)}}function r(o,a){let l=t[o];l?a(l):i[o]?i[o].push(a):(i[o]=[a],n(o,c=>{c.src=o,t[o]=c,i[o].forEach(h=>h(c)),delete i[o]}))}return function(o,a,{lang:l,fonts:c=[],style:h="normal",weight:u="normal",unicodeFontsURL:d}={}){const f=new Uint8Array(o.length),p=[];o.length||x();const v=new Map,m=[];if(h!=="italic"&&(h="normal"),typeof u!="number"&&(u=u==="bold"?700:400),c&&!Array.isArray(c)&&(c=[c]),c=c.slice().filter(_=>!_.lang||_.lang.test(l)).reverse(),c.length){let M=0;(function T(S=0){for(let b=S,P=o.length;b<P;b++){const D=o.codePointAt(b);if(M===1&&p[f[b-1]].supportsCodePoint(D)||b>0&&/\s/.test(o[b]))f[b]=f[b-1],M===2&&(m[m.length-1][1]=b);else for(let G=f[b],H=c.length;G<=H;G++)if(G===H){const q=M===2?m[m.length-1]:m[m.length]=[b,b];q[1]=b,M=2}else{f[b]=G;const{src:q,unicodeRange:F}=c[G];if(!F||y(D,F)){const te=t[q];if(!te){r(q,()=>{T(b)});return}if(te.supportsCodePoint(D)){let Y=v.get(te);typeof Y!="number"&&(Y=p.length,p.push(te),v.set(te,Y)),f[b]=Y,M=1;break}}}D>65535&&b+1<P&&(f[b+1]=f[b],b++,M===2&&(m[m.length-1][1]=b))}g()})()}else m.push([0,o.length-1]),g();function g(){if(m.length){const _=m.map(E=>o.substring(E[0],E[1]+1)).join(`
`);e.getFontsForString(_,{lang:l||void 0,style:h,weight:u,dataUrl:d}).then(({fontUrls:E,chars:w})=>{const M=p.length;let T=0;m.forEach(b=>{for(let P=0,D=b[1]-b[0];P<=D;P++)f[b[0]+P]=w[T++]+M;T++});let S=0;E.forEach((b,P)=>{r(b,D=>{p[P+M]=D,++S===E.length&&x()})})})}else x()}function x(){a({chars:f,fonts:p})}function y(_,E){for(let w=0;w<E.length;w++){const[M,T=M]=E[w];if(M<=_&&_<=T)return!0}return!1}}}const dR=ra({name:"FontResolver",dependencies:[uR,cR,hR],init(s,e,t){return s(e,t())}});function fR(s,e){const i=/[\u00AD\u034F\u061C\u115F-\u1160\u17B4-\u17B5\u180B-\u180E\u200B-\u200F\u202A-\u202E\u2060-\u206F\u3164\uFE00-\uFE0F\uFEFF\uFFA0\uFFF0-\uFFF8]/,n="[^\\S\\u00A0]",r=new RegExp(`${n}|[\\-\\u007C\\u00AD\\u2010\\u2012-\\u2014\\u2027\\u2056\\u2E17\\u2E40]`);function o({text:p,lang:v,fonts:m,style:g,weight:x,preResolvedFonts:y,unicodeFontsURL:_},E){const w=({chars:M,fonts:T})=>{let S,b;const P=[];for(let D=0;D<M.length;D++)M[D]!==b?(b=M[D],P.push(S={start:D,end:D,fontObj:T[M[D]]})):S.end=D;E(P)};y?w(y):s(p,w,{lang:v,fonts:m,style:g,weight:x,unicodeFontsURL:_})}function a({text:p="",font:v,lang:m,sdfGlyphSize:g=64,fontSize:x=400,fontWeight:y=1,fontStyle:_="normal",letterSpacing:E=0,lineHeight:w="normal",maxWidth:M=1/0,direction:T,textAlign:S="left",textIndent:b=0,whiteSpace:P="normal",overflowWrap:D="normal",anchorX:G=0,anchorY:H=0,metricsOnly:q=!1,unicodeFontsURL:F,preResolvedFonts:te=null,includeCaretPositions:Y=!1,chunkedBoundsSize:j=8192,colorRanges:$=null},L){const Z=u(),Q={fontLoad:0,typesetting:0};p.indexOf("\r")>-1&&(console.info("Typesetter: got text with \\r chars; normalizing to \\n"),p=p.replace(/\r\n/g,`
`).replace(/\r/g,`
`)),x=+x,E=+E,M=+M,w=w||"normal",b=+b,o({text:p,lang:m,style:_,weight:y,fonts:typeof v=="string"?[{src:v}]:v,unicodeFontsURL:F,preResolvedFonts:te},k=>{Q.fontLoad=u()-Z;const W=isFinite(M);let J=null,X=null,ne=null,me=null,be=null,we=null,ve=null,Ie=null,U=0,fe=0,he=P!=="nowrap";const xe=new Map,re=u();let Te=b,pe=0,ce=new d;const ke=[ce];k.forEach(ue=>{const{fontObj:ae}=ue,{ascender:De,descender:Pe,unitsPerEm:He,lineGap:je,capHeight:Se,xHeight:Le}=ae;let Ue=xe.get(ae);if(!Ue){const Re=x/He,Ee=w==="normal"?(De-Pe+je)*Re:w*x,et=(Ee-(De-Pe)*Re)/2,Ce=Math.min(Ee,(De-Pe)*Re),ye=(De+Pe)/2*Re+Ce/2;Ue={index:xe.size,src:ae.src,fontObj:ae,fontSizeMult:Re,unitsPerEm:He,ascender:De*Re,descender:Pe*Re,capHeight:Se*Re,xHeight:Le*Re,lineHeight:Ee,baseline:-et-De*Re,caretTop:ye,caretBottom:ye-Ce},xe.set(ae,Ue)}const{fontSizeMult:$e}=Ue,Ne=p.slice(ue.start,ue.end+1);let dt,ie;ae.forEachGlyph(Ne,x,E,(Re,Ee,et,Ce)=>{Ee+=pe,Ce+=ue.start,dt=Ee,ie=Re;const ye=p.charAt(Ce),Ze=Re.advanceWidth*$e,tt=ce.count;let rt;if("isEmpty"in Re||(Re.isWhitespace=!!ye&&new RegExp(n).test(ye),Re.canBreakAfter=!!ye&&r.test(ye),Re.isEmpty=Re.xMin===Re.xMax||Re.yMin===Re.yMax||i.test(ye)),!Re.isWhitespace&&!Re.isEmpty&&fe++,he&&W&&!Re.isWhitespace&&Ee+Ze+Te>M&&tt){if(ce.glyphAt(tt-1).glyphObj.canBreakAfter)rt=new d,Te=-Ee;else for(let jt=tt;jt--;)if(jt===0&&D==="break-word"){rt=new d,Te=-Ee;break}else if(ce.glyphAt(jt).glyphObj.canBreakAfter){rt=ce.splitAt(jt+1);const $t=rt.glyphAt(0).x;Te-=$t;for(let an=rt.count;an--;)rt.glyphAt(an).x-=$t;break}rt&&(ce.isSoftWrapped=!0,ce=rt,ke.push(ce),U=M)}let ht=ce.glyphAt(ce.count);ht.glyphObj=Re,ht.x=Ee+Te,ht.y=et,ht.width=Ze,ht.charIndex=Ce,ht.fontData=Ue,ye===`
`&&(ce=new d,ke.push(ce),Te=-(Ee+Ze+E*x)+b)}),pe=dt+ie.advanceWidth*$e+E*x});let O=0;ke.forEach(ue=>{let ae=!0;for(let De=ue.count;De--;){const Pe=ue.glyphAt(De);ae&&!Pe.glyphObj.isWhitespace&&(ue.width=Pe.x+Pe.width,ue.width>U&&(U=ue.width),ae=!1);let{lineHeight:He,capHeight:je,xHeight:Se,baseline:Le}=Pe.fontData;He>ue.lineHeight&&(ue.lineHeight=He);const Ue=Le-ue.baseline;Ue<0&&(ue.baseline+=Ue,ue.cap+=Ue,ue.ex+=Ue),ue.cap=Math.max(ue.cap,ue.baseline+je),ue.ex=Math.max(ue.ex,ue.baseline+Se)}ue.baseline-=O,ue.cap-=O,ue.ex-=O,O+=ue.lineHeight});let A=0,ee=0;if(G&&(typeof G=="number"?A=-G:typeof G=="string"&&(A=-U*(G==="left"?0:G==="center"?.5:G==="right"?1:c(G)))),H&&(typeof H=="number"?ee=-H:typeof H=="string"&&(ee=H==="top"?0:H==="top-baseline"?-ke[0].baseline:H==="top-cap"?-ke[0].cap:H==="top-ex"?-ke[0].ex:H==="middle"?O/2:H==="bottom"?O:H==="bottom-baseline"?-ke[ke.length-1].baseline:c(H)*O)),!q){const ue=e.getEmbeddingLevels(p,T);J=new Uint16Array(fe),X=new Uint8Array(fe),ne=new Float32Array(fe*2),me={},ve=[1/0,1/0,-1/0,-1/0],Ie=[],Y&&(we=new Float32Array(p.length*4)),$&&(be=new Uint8Array(fe*3));let ae=0,De=-1,Pe=-1,He,je;if(ke.forEach((Se,Le)=>{let{count:Ue,width:$e}=Se;if(Ue>0){let Ne=0;for(let Ce=Ue;Ce--&&Se.glyphAt(Ce).glyphObj.isWhitespace;)Ne++;let dt=0,ie=0;if(S==="center")dt=(U-$e)/2;else if(S==="right")dt=U-$e;else if(S==="justify"&&Se.isSoftWrapped){let Ce=0;for(let ye=Ue-Ne;ye--;)Se.glyphAt(ye).glyphObj.isWhitespace&&Ce++;ie=(U-$e)/Ce}if(ie||dt){let Ce=0;for(let ye=0;ye<Ue;ye++){let Ze=Se.glyphAt(ye);const tt=Ze.glyphObj;Ze.x+=dt+Ce,ie!==0&&tt.isWhitespace&&ye<Ue-Ne&&(Ce+=ie,Ze.width+=ie)}}const Re=e.getReorderSegments(p,ue,Se.glyphAt(0).charIndex,Se.glyphAt(Se.count-1).charIndex);for(let Ce=0;Ce<Re.length;Ce++){const[ye,Ze]=Re[Ce];let tt=1/0,rt=-1/0;for(let ht=0;ht<Ue;ht++)if(Se.glyphAt(ht).charIndex>=ye){let jt=ht,$t=ht;for(;$t<Ue;$t++){let an=Se.glyphAt($t);if(an.charIndex>Ze)break;$t<Ue-Ne&&(tt=Math.min(tt,an.x),rt=Math.max(rt,an.x+an.width))}for(let an=jt;an<$t;an++){const Zn=Se.glyphAt(an);Zn.x=rt-(Zn.x+Zn.width-tt)}break}}let Ee;const et=Ce=>Ee=Ce;for(let Ce=0;Ce<Ue;Ce++){const ye=Se.glyphAt(Ce);Ee=ye.glyphObj;const Ze=Ee.index,tt=ue.levels[ye.charIndex]&1;if(tt){const rt=e.getMirroredCharacter(p[ye.charIndex]);rt&&ye.fontData.fontObj.forEachGlyph(rt,0,0,et)}if(Y){const{charIndex:rt,fontData:ht}=ye,jt=ye.x+A,$t=ye.x+ye.width+A;we[rt*4]=tt?$t:jt,we[rt*4+1]=tt?jt:$t,we[rt*4+2]=Se.baseline+ht.caretBottom+ee,we[rt*4+3]=Se.baseline+ht.caretTop+ee;const an=rt-De;an>1&&h(we,De,an),De=rt}if($){const{charIndex:rt}=ye;for(;rt>Pe;)Pe++,$.hasOwnProperty(Pe)&&(je=$[Pe])}if(!Ee.isWhitespace&&!Ee.isEmpty){const rt=ae++,{fontSizeMult:ht,src:jt,index:$t}=ye.fontData,an=me[jt]||(me[jt]={});an[Ze]||(an[Ze]={path:Ee.path,pathBounds:[Ee.xMin,Ee.yMin,Ee.xMax,Ee.yMax]});const Zn=ye.x+A,Nn=ye.y+Se.baseline+ee;ne[rt*2]=Zn,ne[rt*2+1]=Nn;const ni=Zn+Ee.xMin*ht,Ti=Nn+Ee.yMin*ht,Ai=Zn+Ee.xMax*ht,Jn=Nn+Ee.yMax*ht;ni<ve[0]&&(ve[0]=ni),Ti<ve[1]&&(ve[1]=Ti),Ai>ve[2]&&(ve[2]=Ai),Jn>ve[3]&&(ve[3]=Jn),rt%j===0&&(He={start:rt,end:rt,rect:[1/0,1/0,-1/0,-1/0]},Ie.push(He)),He.end++;const yn=He.rect;if(ni<yn[0]&&(yn[0]=ni),Ti<yn[1]&&(yn[1]=Ti),Ai>yn[2]&&(yn[2]=Ai),Jn>yn[3]&&(yn[3]=Jn),J[rt]=Ze,X[rt]=$t,$){const hi=rt*3;be[hi]=je>>16&255,be[hi+1]=je>>8&255,be[hi+2]=je&255}}}}}),we){const Se=p.length-De;Se>1&&h(we,De,Se)}}const de=[];xe.forEach(({index:ue,src:ae,unitsPerEm:De,ascender:Pe,descender:He,lineHeight:je,capHeight:Se,xHeight:Le})=>{de[ue]={src:ae,unitsPerEm:De,ascender:Pe,descender:He,lineHeight:je,capHeight:Se,xHeight:Le}}),Q.typesetting=u()-re,L({glyphIds:J,glyphFontIndices:X,glyphPositions:ne,glyphData:me,fontData:de,caretPositions:we,glyphColors:be,chunkedBounds:Ie,fontSize:x,topBaseline:ee+ke[0].baseline,blockBounds:[A,ee-O,A+U,ee],visibleBounds:ve,timings:Q})})}function l(p,v){a({...p,metricsOnly:!0},m=>{const[g,x,y,_]=m.blockBounds;v({width:y-g,height:_-x})})}function c(p){let v=p.match(/^([\d.]+)%$/),m=v?parseFloat(v[1]):NaN;return isNaN(m)?0:m/100}function h(p,v,m){const g=p[v*4],x=p[v*4+1],y=p[v*4+2],_=p[v*4+3],E=(x-g)/m;for(let w=0;w<m;w++){const M=(v+w)*4;p[M]=g+E*w,p[M+1]=g+E*(w+1),p[M+2]=y,p[M+3]=_}}function u(){return(self.performance||Date).now()}function d(){this.data=[]}const f=["glyphObj","x","y","width","charIndex","fontData"];return d.prototype={width:0,lineHeight:0,baseline:0,cap:0,ex:0,isSoftWrapped:!1,get count(){return Math.ceil(this.data.length/f.length)},glyphAt(p){let v=d.flyweight;return v.data=this.data,v.index=p,v},splitAt(p){let v=new d;return v.data=this.data.splice(p*f.length),v}},d.flyweight=f.reduce((p,v,m,g)=>(Object.defineProperty(p,v,{get(){return this.data[this.index*f.length+m]},set(x){this.data[this.index*f.length+m]=x}}),p),{data:null,index:0}),{typeset:a,measure:l}}const Ks=()=>(self.performance||Date).now(),wu=Q_();let h0;function pR(s,e,t,i,n,r,o,a,l,c,h=!0){return h?gR(s,e,t,i,n,r,o,a,l,c).then(null,u=>(h0||(console.warn("WebGL SDF generation failed, falling back to JS",u),h0=!0),d0(s,e,t,i,n,r,o,a,l,c))):d0(s,e,t,i,n,r,o,a,l,c)}const Wc=[],mR=5;let Af=0;function ey(){const s=Ks();for(;Wc.length&&Ks()-s<mR;)Wc.shift()();Af=Wc.length?setTimeout(ey,0):0}const gR=(...s)=>new Promise((e,t)=>{Wc.push(()=>{const i=Ks();try{wu.webgl.generateIntoCanvas(...s),e({timing:Ks()-i})}catch(n){t(n)}}),Af||(Af=setTimeout(ey,0))}),vR=4,_R=2e3,u0={};let yR=0;function d0(s,e,t,i,n,r,o,a,l,c){const h="TroikaTextSDFGenerator_JS_"+yR++%vR;let u=u0[h];return u||(u=u0[h]={workerModule:ra({name:h,workerId:h,dependencies:[Q_,Ks],init(d,f){const p=d().javascript.generate;return function(...v){const m=f();return{textureData:p(...v),timing:f()-m}}},getTransferables(d){return[d.textureData.buffer]}}),requests:0,idleTimer:null}),u.requests++,clearTimeout(u.idleTimer),u.workerModule(s,e,t,i,n,r).then(({textureData:d,timing:f})=>{const p=Ks(),v=new Uint8Array(d.length*4);for(let m=0;m<d.length;m++)v[m*4+c]=d[m];return wu.webglUtils.renderImageData(o,v,a,l,s,e,1<<3-c),f+=Ks()-p,--u.requests===0&&(u.idleTimer=setTimeout(()=>{JC(h)},_R)),{timing:f}})}function xR(s){s._warm||(wu.webgl.isSupported(s),s._warm=!0)}const bR=wu.webglUtils.resizeWebGLCanvasWithoutClearing,Da={unicodeFontsURL:null,sdfGlyphSize:64,sdfMargin:1/16,sdfExponent:9,textureWidth:2048},SR=new Ge;function Oo(){return(self.performance||Date).now()}const f0=Object.create(null);function ty(s,e){s=ER({},s);const t=Oo(),i=[];if(s.font&&i.push({label:"user",src:TR(s.font)}),s.font=i,s.text=""+s.text,s.sdfGlyphSize=s.sdfGlyphSize||Da.sdfGlyphSize,s.unicodeFontsURL=s.unicodeFontsURL||Da.unicodeFontsURL,s.colorRanges!=null){let d={};for(let f in s.colorRanges)if(s.colorRanges.hasOwnProperty(f)){let p=s.colorRanges[f];typeof p!="number"&&(p=SR.set(p).getHex()),d[f]=p}s.colorRanges=d}Object.freeze(s);const{textureWidth:n,sdfExponent:r}=Da,{sdfGlyphSize:o}=s,a=n/o*4;let l=f0[o];if(!l){const d=document.createElement("canvas");d.width=n,d.height=o*256/a,l=f0[o]={glyphCount:0,sdfGlyphSize:o,sdfCanvas:d,sdfTexture:new fn(d,void 0,void 0,void 0,Mn,Mn),contextLost:!1,glyphsByFont:new Map},l.sdfTexture.generateMipmaps=!1,MR(l)}const{sdfTexture:c,sdfCanvas:h}=l;ry(s).then(d=>{const{glyphIds:f,glyphFontIndices:p,fontData:v,glyphPositions:m,fontSize:g,timings:x}=d,y=[],_=new Float32Array(f.length*4);let E=0,w=0;const M=Oo(),T=v.map(G=>{let H=l.glyphsByFont.get(G.src);return H||l.glyphsByFont.set(G.src,H=new Map),H});f.forEach((G,H)=>{const q=p[H],{src:F,unitsPerEm:te}=v[q];let Y=T[q].get(G);if(!Y){const{path:Q,pathBounds:k}=d.glyphData[F][G],W=Math.max(k[2]-k[0],k[3]-k[1])/o*(Da.sdfMargin*o+.5),J=l.glyphCount++,X=[k[0]-W,k[1]-W,k[2]+W,k[3]+W];T[q].set(G,Y={path:Q,atlasIndex:J,sdfViewBox:X}),y.push(Y)}const{sdfViewBox:j}=Y,$=m[w++],L=m[w++],Z=g/te;_[E++]=$+j[0]*Z,_[E++]=L+j[1]*Z,_[E++]=$+j[2]*Z,_[E++]=L+j[3]*Z,f[H]=Y.atlasIndex}),x.quads=(x.quads||0)+(Oo()-M);const S=Oo();x.sdf={};const b=h.height,P=Math.ceil(l.glyphCount/a),D=Math.pow(2,Math.ceil(Math.log2(P*o)));D>b&&(console.info(`Increasing SDF texture size ${b}->${D}`),bR(h,n,D),c.dispose()),Promise.all(y.map(G=>ny(G,l,s.gpuAccelerateSDF).then(({timing:H})=>{x.sdf[G.atlasIndex]=H}))).then(()=>{y.length&&!l.contextLost&&(iy(l),c.needsUpdate=!0),x.sdfTotal=Oo()-S,x.total=Oo()-t,e(Object.freeze({parameters:s,sdfTexture:c,sdfGlyphSize:o,sdfExponent:r,glyphBounds:_,glyphAtlasIndices:f,glyphColors:d.glyphColors,caretPositions:d.caretPositions,chunkedBounds:d.chunkedBounds,ascender:d.ascender,descender:d.descender,lineHeight:d.lineHeight,capHeight:d.capHeight,xHeight:d.xHeight,topBaseline:d.topBaseline,blockBounds:d.blockBounds,visibleBounds:d.visibleBounds,timings:d.timings}))})}),Promise.resolve().then(()=>{l.contextLost||xR(h)})}function ny({path:s,atlasIndex:e,sdfViewBox:t},{sdfGlyphSize:i,sdfCanvas:n,contextLost:r},o){if(r)return Promise.resolve({timing:-1});const{textureWidth:a,sdfExponent:l}=Da,c=Math.max(t[2]-t[0],t[3]-t[1]),h=Math.floor(e/4),u=h%(a/i)*i,d=Math.floor(h/(a/i))*i,f=e%4;return pR(i,i,s,t,c,l,n,u,d,f,o)}function MR(s){const e=s.sdfCanvas;e.addEventListener("webglcontextlost",t=>{console.log("Context Lost",t),t.preventDefault(),s.contextLost=!0}),e.addEventListener("webglcontextrestored",t=>{console.log("Context Restored",t),s.contextLost=!1;const i=[];s.glyphsByFont.forEach(n=>{n.forEach(r=>{i.push(ny(r,s,!0))})}),Promise.all(i).then(()=>{iy(s),s.sdfTexture.needsUpdate=!0})})}function wR({font:s,characters:e,sdfGlyphSize:t},i){let n=Array.isArray(e)?e.join(`
`):""+e;ty({font:s,sdfGlyphSize:t,text:n},i)}function ER(s,e){for(let t in e)e.hasOwnProperty(t)&&(s[t]=e[t]);return s}let Dc;function TR(s){return Dc||(Dc=typeof document>"u"?{}:document.createElement("a")),Dc.href=s,Dc.href}function iy(s){if(typeof createImageBitmap!="function"){console.info("Safari<15: applying SDF canvas workaround");const{sdfCanvas:e,sdfTexture:t}=s,{width:i,height:n}=e,r=s.sdfCanvas.getContext("webgl");let o=t.image.data;(!o||o.length!==i*n*4)&&(o=new Uint8Array(i*n*4),t.image={width:i,height:n,data:o},t.flipY=!1,t.isDataTexture=!0),r.readPixels(0,0,i,n,r.RGBA,r.UNSIGNED_BYTE,o)}}const AR=ra({name:"Typesetter",dependencies:[fR,dR,QC],init(s,e,t){return s(e,t())}}),ry=ra({name:"Typesetter",dependencies:[AR],init(s){return function(e){return new Promise(t=>{s.typeset(e,t)})}},getTransferables(s){const e=[];for(let t in s)s[t]&&s[t].buffer&&e.push(s[t].buffer);return e}});ry.onMainThread;const p0={};function CR(s){let e=p0[s];return e||(e=p0[s]=new ar(1,1,s,s).translate(.5,.5,0)),e}const RR="aTroikaGlyphBounds",m0="aTroikaGlyphIndex",PR="aTroikaGlyphColor";class IR extends vu{constructor(){super(),this.detail=1,this.curveRadius=0,this.groups=[{start:0,count:1/0,materialIndex:0},{start:0,count:1/0,materialIndex:1}],this.boundingSphere=new wn,this.boundingBox=new _n}computeBoundingSphere(){}computeBoundingBox(){}set detail(e){if(e!==this._detail){this._detail=e,(typeof e!="number"||e<1)&&(e=1);let t=CR(e);["position","normal","uv"].forEach(i=>{this.attributes[i]=t.attributes[i].clone()}),this.setIndex(t.getIndex().clone())}}get detail(){return this._detail}set curveRadius(e){e!==this._curveRadius&&(this._curveRadius=e,this._updateBounds())}get curveRadius(){return this._curveRadius}updateGlyphs(e,t,i,n,r){this.updateAttributeData(RR,e,4),this.updateAttributeData(m0,t,1),this.updateAttributeData(PR,r,3),this._blockBounds=i,this._chunkedBounds=n,this.instanceCount=t.length,this._updateBounds()}_updateBounds(){const e=this._blockBounds;if(e){const{curveRadius:t,boundingBox:i}=this;if(t){const{PI:n,floor:r,min:o,max:a,sin:l,cos:c}=Math,h=n/2,u=n*2,d=Math.abs(t),f=e[0]/d,p=e[2]/d,v=r((f+h)/u)!==r((p+h)/u)?-d:o(l(f)*d,l(p)*d),m=r((f-h)/u)!==r((p-h)/u)?d:a(l(f)*d,l(p)*d),g=r((f+n)/u)!==r((p+n)/u)?d*2:a(d-c(f)*d,d-c(p)*d);i.min.set(v,e[1],t<0?-g:0),i.max.set(m,e[3],t<0?0:g)}else i.min.set(e[0],e[1],0),i.max.set(e[2],e[3],0);i.getBoundingSphere(this.boundingSphere)}}applyClipRect(e){let t=this.getAttribute(m0).count,i=this._chunkedBounds;if(i)for(let n=i.length;n--;){t=i[n].end;let r=i[n].rect;if(r[1]<e.w&&r[3]>e.y&&r[0]<e.z&&r[2]>e.x)break}this.instanceCount=t}updateAttributeData(e,t,i){const n=this.getAttribute(e);t?n&&n.array.length===t.length?(n.array.set(t),n.needsUpdate=!0):(this.setAttribute(e,new to(t,i)),delete this._maxInstanceCount,this.dispose()):n&&this.deleteAttribute(e)}}const DR=`
uniform vec2 uTroikaSDFTextureSize;
uniform float uTroikaSDFGlyphSize;
uniform vec4 uTroikaTotalBounds;
uniform vec4 uTroikaClipRect;
uniform mat3 uTroikaOrient;
uniform bool uTroikaUseGlyphColors;
uniform float uTroikaEdgeOffset;
uniform float uTroikaBlurRadius;
uniform vec2 uTroikaPositionOffset;
uniform float uTroikaCurveRadius;
attribute vec4 aTroikaGlyphBounds;
attribute float aTroikaGlyphIndex;
attribute vec3 aTroikaGlyphColor;
varying vec2 vTroikaGlyphUV;
varying vec4 vTroikaTextureUVBounds;
varying float vTroikaTextureChannel;
varying vec3 vTroikaGlyphColor;
varying vec2 vTroikaGlyphDimensions;
`,LR=`
vec4 bounds = aTroikaGlyphBounds;
bounds.xz += uTroikaPositionOffset.x;
bounds.yw -= uTroikaPositionOffset.y;

vec4 outlineBounds = vec4(
  bounds.xy - uTroikaEdgeOffset - uTroikaBlurRadius,
  bounds.zw + uTroikaEdgeOffset + uTroikaBlurRadius
);
vec4 clippedBounds = vec4(
  clamp(outlineBounds.xy, uTroikaClipRect.xy, uTroikaClipRect.zw),
  clamp(outlineBounds.zw, uTroikaClipRect.xy, uTroikaClipRect.zw)
);

vec2 clippedXY = (mix(clippedBounds.xy, clippedBounds.zw, position.xy) - bounds.xy) / (bounds.zw - bounds.xy);

position.xy = mix(bounds.xy, bounds.zw, clippedXY);

uv = (position.xy - uTroikaTotalBounds.xy) / (uTroikaTotalBounds.zw - uTroikaTotalBounds.xy);

float rad = uTroikaCurveRadius;
if (rad != 0.0) {
  float angle = position.x / rad;
  position.xz = vec2(sin(angle) * rad, rad - cos(angle) * rad);
  normal.xz = vec2(sin(angle), cos(angle));
}
  
position = uTroikaOrient * position;
normal = uTroikaOrient * normal;

vTroikaGlyphUV = clippedXY.xy;
vTroikaGlyphDimensions = vec2(bounds[2] - bounds[0], bounds[3] - bounds[1]);


float txCols = uTroikaSDFTextureSize.x / uTroikaSDFGlyphSize;
vec2 txUvPerSquare = uTroikaSDFGlyphSize / uTroikaSDFTextureSize;
vec2 txStartUV = txUvPerSquare * vec2(
  mod(floor(aTroikaGlyphIndex / 4.0), txCols),
  floor(floor(aTroikaGlyphIndex / 4.0) / txCols)
);
vTroikaTextureUVBounds = vec4(txStartUV, vec2(txStartUV) + txUvPerSquare);
vTroikaTextureChannel = mod(aTroikaGlyphIndex, 4.0);
`,UR=`
uniform sampler2D uTroikaSDFTexture;
uniform vec2 uTroikaSDFTextureSize;
uniform float uTroikaSDFGlyphSize;
uniform float uTroikaSDFExponent;
uniform float uTroikaEdgeOffset;
uniform float uTroikaFillOpacity;
uniform float uTroikaBlurRadius;
uniform vec3 uTroikaStrokeColor;
uniform float uTroikaStrokeWidth;
uniform float uTroikaStrokeOpacity;
uniform bool uTroikaSDFDebug;
varying vec2 vTroikaGlyphUV;
varying vec4 vTroikaTextureUVBounds;
varying float vTroikaTextureChannel;
varying vec2 vTroikaGlyphDimensions;

float troikaSdfValueToSignedDistance(float alpha) {
  // Inverse of exponential encoding in webgl-sdf-generator
  
  float maxDimension = max(vTroikaGlyphDimensions.x, vTroikaGlyphDimensions.y);
  float absDist = (1.0 - pow(2.0 * (alpha > 0.5 ? 1.0 - alpha : alpha), 1.0 / uTroikaSDFExponent)) * maxDimension;
  float signedDist = absDist * (alpha > 0.5 ? -1.0 : 1.0);
  return signedDist;
}

float troikaGlyphUvToSdfValue(vec2 glyphUV) {
  vec2 textureUV = mix(vTroikaTextureUVBounds.xy, vTroikaTextureUVBounds.zw, glyphUV);
  vec4 rgba = texture2D(uTroikaSDFTexture, textureUV);
  float ch = floor(vTroikaTextureChannel + 0.5); //NOTE: can't use round() in WebGL1
  return ch == 0.0 ? rgba.r : ch == 1.0 ? rgba.g : ch == 2.0 ? rgba.b : rgba.a;
}

float troikaGlyphUvToDistance(vec2 uv) {
  return troikaSdfValueToSignedDistance(troikaGlyphUvToSdfValue(uv));
}

float troikaGetAADist() {
  
  #if defined(GL_OES_standard_derivatives) || __VERSION__ >= 300
  return length(fwidth(vTroikaGlyphUV * vTroikaGlyphDimensions)) * 0.5;
  #else
  return vTroikaGlyphDimensions.x / 64.0;
  #endif
}

float troikaGetFragDistValue() {
  vec2 clampedGlyphUV = clamp(vTroikaGlyphUV, 0.5 / uTroikaSDFGlyphSize, 1.0 - 0.5 / uTroikaSDFGlyphSize);
  float distance = troikaGlyphUvToDistance(clampedGlyphUV);
 
  // Extrapolate distance when outside bounds:
  distance += clampedGlyphUV == vTroikaGlyphUV ? 0.0 : 
    length((vTroikaGlyphUV - clampedGlyphUV) * vTroikaGlyphDimensions);

  

  return distance;
}

float troikaGetEdgeAlpha(float distance, float distanceOffset, float aaDist) {
  #if defined(IS_DEPTH_MATERIAL) || defined(IS_DISTANCE_MATERIAL)
  float alpha = step(-distanceOffset, -distance);
  #else

  float alpha = smoothstep(
    distanceOffset + aaDist,
    distanceOffset - aaDist,
    distance
  );
  #endif

  return alpha;
}
`,NR=`
float aaDist = troikaGetAADist();
float fragDistance = troikaGetFragDistValue();
float edgeAlpha = uTroikaSDFDebug ?
  troikaGlyphUvToSdfValue(vTroikaGlyphUV) :
  troikaGetEdgeAlpha(fragDistance, uTroikaEdgeOffset, max(aaDist, uTroikaBlurRadius));

#if !defined(IS_DEPTH_MATERIAL) && !defined(IS_DISTANCE_MATERIAL)
vec4 fillRGBA = gl_FragColor;
fillRGBA.a *= uTroikaFillOpacity;
vec4 strokeRGBA = uTroikaStrokeWidth == 0.0 ? fillRGBA : vec4(uTroikaStrokeColor, uTroikaStrokeOpacity);
if (fillRGBA.a == 0.0) fillRGBA.rgb = strokeRGBA.rgb;
gl_FragColor = mix(fillRGBA, strokeRGBA, smoothstep(
  -uTroikaStrokeWidth - aaDist,
  -uTroikaStrokeWidth + aaDist,
  fragDistance
));
gl_FragColor.a *= edgeAlpha;
#endif

if (edgeAlpha == 0.0) {
  discard;
}
`;function OR(s){const e=Tf(s,{chained:!0,extensions:{derivatives:!0},uniforms:{uTroikaSDFTexture:{value:null},uTroikaSDFTextureSize:{value:new Me},uTroikaSDFGlyphSize:{value:0},uTroikaSDFExponent:{value:0},uTroikaTotalBounds:{value:new It(0,0,0,0)},uTroikaClipRect:{value:new It(0,0,0,0)},uTroikaEdgeOffset:{value:0},uTroikaFillOpacity:{value:1},uTroikaPositionOffset:{value:new Me},uTroikaCurveRadius:{value:0},uTroikaBlurRadius:{value:0},uTroikaStrokeWidth:{value:0},uTroikaStrokeColor:{value:new Ge},uTroikaStrokeOpacity:{value:1},uTroikaOrient:{value:new At},uTroikaUseGlyphColors:{value:!0},uTroikaSDFDebug:{value:!1}},vertexDefs:DR,vertexTransform:LR,fragmentDefs:UR,fragmentColorTransform:NR,customRewriter({vertexShader:t,fragmentShader:i}){let n=/\buniform\s+vec3\s+diffuse\b/;return n.test(i)&&(i=i.replace(n,"varying vec3 vTroikaGlyphColor").replace(/\bdiffuse\b/g,"vTroikaGlyphColor"),n.test(t)||(t=t.replace($_,`uniform vec3 diffuse;
$&
vTroikaGlyphColor = uTroikaUseGlyphColors ? aTroikaGlyphColor / 255.0 : diffuse;
`))),{vertexShader:t,fragmentShader:i}}});return e.transparent=!0,e.forceSinglePass=!0,Object.defineProperties(e,{isTroikaTextMaterial:{value:!0},shadowSide:{get(){return this.side},set(){}}}),e}const Op=new Bn({color:16777215,side:_i,transparent:!0}),g0=8421504,v0=new ct,Lc=new I,Hd=new I,Ta=[],FR=new I,Wd="+x+y";function _0(s){return Array.isArray(s)?s[0]:s}let sy=()=>{const s=new ze(new ar(1,1),Op);return sy=()=>s,s},oy=()=>{const s=new ze(new ar(1,1,32,1),Op);return oy=()=>s,s};const kR={type:"syncstart"},BR={type:"synccomplete"},ay=["font","fontSize","fontStyle","fontWeight","lang","letterSpacing","lineHeight","maxWidth","overflowWrap","text","direction","textAlign","textIndent","whiteSpace","anchorX","anchorY","colorRanges","sdfGlyphSize"],zR=ay.concat("material","color","depthOffset","clipRect","curveRadius","orientation","glyphGeometryDetail");let ly=class extends ze{constructor(){const e=new IR;super(e,null),this.text="",this.anchorX=0,this.anchorY=0,this.curveRadius=0,this.direction="auto",this.font=null,this.unicodeFontsURL=null,this.fontSize=.1,this.fontWeight="normal",this.fontStyle="normal",this.lang=null,this.letterSpacing=0,this.lineHeight="normal",this.maxWidth=1/0,this.overflowWrap="normal",this.textAlign="left",this.textIndent=0,this.whiteSpace="normal",this.material=null,this.color=null,this.colorRanges=null,this.outlineWidth=0,this.outlineColor=0,this.outlineOpacity=1,this.outlineBlur=0,this.outlineOffsetX=0,this.outlineOffsetY=0,this.strokeWidth=0,this.strokeColor=g0,this.strokeOpacity=1,this.fillOpacity=1,this.depthOffset=0,this.clipRect=null,this.orientation=Wd,this.glyphGeometryDetail=1,this.sdfGlyphSize=null,this.gpuAccelerateSDF=!0,this.debugSDF=!1}sync(e){this._needsSync&&(this._needsSync=!1,this._isSyncing?(this._queuedSyncs||(this._queuedSyncs=[])).push(e):(this._isSyncing=!0,this.dispatchEvent(kR),ty({text:this.text,font:this.font,lang:this.lang,fontSize:this.fontSize||.1,fontWeight:this.fontWeight||"normal",fontStyle:this.fontStyle||"normal",letterSpacing:this.letterSpacing||0,lineHeight:this.lineHeight||"normal",maxWidth:this.maxWidth,direction:this.direction||"auto",textAlign:this.textAlign,textIndent:this.textIndent,whiteSpace:this.whiteSpace,overflowWrap:this.overflowWrap,anchorX:this.anchorX,anchorY:this.anchorY,colorRanges:this.colorRanges,includeCaretPositions:!0,sdfGlyphSize:this.sdfGlyphSize,gpuAccelerateSDF:this.gpuAccelerateSDF,unicodeFontsURL:this.unicodeFontsURL},t=>{this._isSyncing=!1,this._textRenderInfo=t,this.geometry.updateGlyphs(t.glyphBounds,t.glyphAtlasIndices,t.blockBounds,t.chunkedBounds,t.glyphColors);const i=this._queuedSyncs;i&&(this._queuedSyncs=null,this._needsSync=!0,this.sync(()=>{i.forEach(n=>n&&n())})),this.dispatchEvent(BR),e&&e()})))}onBeforeRender(e,t,i,n,r,o){this.sync(),r.isTroikaTextMaterial&&this._prepareForRender(r)}dispose(){this.geometry.dispose()}get textRenderInfo(){return this._textRenderInfo||null}createDerivedMaterial(e){return OR(e)}get material(){let e=this._derivedMaterial;const t=this._baseMaterial||this._defaultMaterial||(this._defaultMaterial=Op.clone());if((!e||!e.isDerivedFrom(t))&&(e=this._derivedMaterial=this.createDerivedMaterial(t),t.addEventListener("dispose",function i(){t.removeEventListener("dispose",i),e.dispose()})),this.hasOutline()){let i=e._outlineMtl;return i||(i=e._outlineMtl=Object.create(e,{id:{value:e.id+.1}}),i.isTextOutlineMaterial=!0,i.depthWrite=!1,i.map=null,e.addEventListener("dispose",function n(){e.removeEventListener("dispose",n),i.dispose()})),[i,e]}else return e}set material(e){e&&e.isTroikaTextMaterial?(this._derivedMaterial=e,this._baseMaterial=e.baseMaterial):this._baseMaterial=e}hasOutline(){return!!(this.outlineWidth||this.outlineBlur||this.outlineOffsetX||this.outlineOffsetY)}get glyphGeometryDetail(){return this.geometry.detail}set glyphGeometryDetail(e){this.geometry.detail=e}get curveRadius(){return this.geometry.curveRadius}set curveRadius(e){this.geometry.curveRadius=e}get customDepthMaterial(){return _0(this.material).getDepthMaterial()}set customDepthMaterial(e){}get customDistanceMaterial(){return _0(this.material).getDistanceMaterial()}set customDistanceMaterial(e){}_prepareForRender(e){const t=e.isTextOutlineMaterial,i=e.uniforms,n=this.textRenderInfo;if(n){const{sdfTexture:a,blockBounds:l}=n;i.uTroikaSDFTexture.value=a,i.uTroikaSDFTextureSize.value.set(a.image.width,a.image.height),i.uTroikaSDFGlyphSize.value=n.sdfGlyphSize,i.uTroikaSDFExponent.value=n.sdfExponent,i.uTroikaTotalBounds.value.fromArray(l),i.uTroikaUseGlyphColors.value=!t&&!!n.glyphColors;let c=0,h=0,u=0,d,f,p,v=0,m=0;if(t){let{outlineWidth:x,outlineOffsetX:y,outlineOffsetY:_,outlineBlur:E,outlineOpacity:w}=this;c=this._parsePercent(x)||0,h=Math.max(0,this._parsePercent(E)||0),d=w,v=this._parsePercent(y)||0,m=this._parsePercent(_)||0}else u=Math.max(0,this._parsePercent(this.strokeWidth)||0),u&&(p=this.strokeColor,i.uTroikaStrokeColor.value.set(p??g0),f=this.strokeOpacity,f==null&&(f=1)),d=this.fillOpacity;i.uTroikaEdgeOffset.value=c,i.uTroikaPositionOffset.value.set(v,m),i.uTroikaBlurRadius.value=h,i.uTroikaStrokeWidth.value=u,i.uTroikaStrokeOpacity.value=f,i.uTroikaFillOpacity.value=d??1,i.uTroikaCurveRadius.value=this.curveRadius||0;let g=this.clipRect;if(g&&Array.isArray(g)&&g.length===4)i.uTroikaClipRect.value.fromArray(g);else{const x=(this.fontSize||.1)*100;i.uTroikaClipRect.value.set(l[0]-x,l[1]-x,l[2]+x,l[3]+x)}this.geometry.applyClipRect(i.uTroikaClipRect.value)}i.uTroikaSDFDebug.value=!!this.debugSDF,e.polygonOffset=!!this.depthOffset,e.polygonOffsetFactor=e.polygonOffsetUnits=this.depthOffset||0;const r=t?this.outlineColor||0:this.color;if(r==null)delete e.color;else{const a=e.hasOwnProperty("color")?e.color:e.color=new Ge;(r!==a._input||typeof r=="object")&&a.set(a._input=r)}let o=this.orientation||Wd;if(o!==e._orientation){let a=i.uTroikaOrient.value;o=o.replace(/[^-+xyz]/g,"");let l=o!==Wd&&o.match(/^([-+])([xyz])([-+])([xyz])$/);if(l){let[,c,h,u,d]=l;Lc.set(0,0,0)[h]=c==="-"?1:-1,Hd.set(0,0,0)[d]=u==="-"?-1:1,v0.lookAt(FR,Lc.cross(Hd),Hd),a.setFromMatrix4(v0)}else a.identity();e._orientation=o}}_parsePercent(e){if(typeof e=="string"){let t=e.match(/^(-?[\d.]+)%$/),i=t?parseFloat(t[1]):NaN;e=(isNaN(i)?0:i/100)*this.fontSize}return e}localPositionToTextCoords(e,t=new Me){t.copy(e);const i=this.curveRadius;return i&&(t.x=Math.atan2(e.x,Math.abs(i)-Math.abs(e.z))*Math.abs(i)),t}worldPositionToTextCoords(e,t=new Me){return Lc.copy(e),this.localPositionToTextCoords(this.worldToLocal(Lc),t)}raycast(e,t){const{textRenderInfo:i,curveRadius:n}=this;if(i){const r=i.blockBounds,o=n?oy():sy(),a=o.geometry,{position:l,uv:c}=a.attributes;for(let h=0;h<c.count;h++){let u=r[0]+c.getX(h)*(r[2]-r[0]);const d=r[1]+c.getY(h)*(r[3]-r[1]);let f=0;n&&(f=n-Math.cos(u/n)*n,u=Math.sin(u/n)*n),l.setXYZ(h,u,d,f)}a.boundingSphere=this.geometry.boundingSphere,a.boundingBox=this.geometry.boundingBox,o.matrixWorld=this.matrixWorld,o.material.side=this.material.side,Ta.length=0,o.raycast(e,Ta);for(let h=0;h<Ta.length;h++)Ta[h].object=this,t.push(Ta[h])}}copy(e){const t=this.geometry;return super.copy(e),this.geometry=t,zR.forEach(i=>{this[i]=e[i]}),this}clone(){return new this.constructor().copy(this)}};ay.forEach(s=>{const e="_private_"+s;Object.defineProperty(ly.prototype,s,{get(){return this[e]},set(t){t!==this[e]&&(this[e]=t,this._needsSync=!0)}})});new _n;new Ge;new _n;new Ge;typeof window<"u"&&document.createElement("div");function cy(s,e){Ln(e,!0);let t=Ve(e,"font",3,null),i=Ve(e,"characters",3,null),n=Ve(e,"sdfGlyphSize",3,null),r=Ve(e,"ref",15),o=sr(e,["$$slots","$$events","$$legacy","font","characters","sdfGlyphSize","ref","onsync","children"]);const a=new ly,{invalidate:l}=Fi(),c=async()=>{await B0(),a.sync(()=>{var d;l(),(d=e.onsync)==null||d.call(e)})},h=["text","anchorX","anchorY","curveRadius","direction","font","fontSize","letterSpacing","lineHeight","maxWidth","overflowWrap","textAlign","textIndent","whiteSpace","material","color","depthOffset","clipRect","glyphGeometryDetail","sdfGlyphSize","outlineWidth","outlineColor","outlineOpacity","outlineBlur","outlineOffsetX","outlineOffsetY","strokeWidth","strokeColor","strokeOpacity","fillOpacity","characters","colorRanges"];cl(()=>h.map(d=>o[d]),()=>{c()});const u=_2();Et(()=>{u(new Promise(d=>wR({font:t(),characters:i(),sdfGlyphSize:n()},d)))}),wt(s,Br({get is(){return a}},()=>o,{get font(){return t()},get characters(){return i()},get sdfGlyphSize(){return n()},get ref(){return r()},set ref(d){r(d)},children:(d,f)=>{var p=gt(),v=Ye(p);Wi(v,()=>e.children??kr,()=>({ref:a})),We(d,p)},$$slots:{default:!0}})),Un()}const VR=s=>{const{camera:e}=Fi();let t=s.current.clientWidth,i=s.current.clientHeight;const n=new ResizeObserver(([r])=>{t=r.contentRect.width,i=r.contentRect.height});return er(s,r=>(r&&n.observe(r),()=>{r&&n.unobserve(r)})),(r,o)=>{o.pointer.update(a=>(a.set(r.offsetX/t*2-1,-(r.offsetY/i)*2+1),a)),o.raycaster.setFromCamera(o.pointer.current,e.current)}},hy=Symbol("interactivity-context"),GR=()=>qn(hy),HR=s=>{const e=vn(bu().dom),t={enabled:vn(!0),pointer:vn(new Me),pointerOverTarget:vn(!1),lastEvent:void 0,raycaster:new _u,initialClick:[0,0],initialHits:[],hovered:new Map,interactiveObjects:[],target:e,handlers:new WeakMap,compute:VR(e),filter:s==null?void 0:s.filter,addInteractiveObject:(i,n)=>{t.interactiveObjects.indexOf(i)>-1||(t.handlers.set(i,n),t.interactiveObjects.push(i))},removeInteractiveObject:i=>{const n=t.interactiveObjects.indexOf(i);t.interactiveObjects.splice(n,1),t.handlers.delete(i)}};return Ei(hy,t),t},uy=()=>{const s=GR();if(!s)throw new Error("No interactivity context found. Did you forget to implement interactivity()?");return s},y0=["onclick","oncontextmenu","ondblclick","onwheel","onpointerup","onpointerdown","onpointerover","onpointerout","onpointerenter","onpointerleave","onpointermove","onpointermissed"],WR=()=>{p2("interactivity",s=>{if(!Gi(s.ref,"Object3D")||!Object.entries(s.props).some(([n,r])=>r!==void 0&&y0.includes(n)))return;const{addInteractiveObject:t,removeInteractiveObject:i}=uy();return cl.pre(()=>[s.ref],([n])=>(t(n,s.props),()=>{i(n)})),{pluginProps:y0}})};function x0(s){return`${(s.eventObject||s.object).uuid}/${s.index}${s.instanceId}`}const b0=[["click",!1],["contextmenu",!1],["dblclick",!1],["wheel",!1],["pointerdown",!0],["pointerup",!0],["pointerleave",!0],["pointerenter",!0],["pointermove",!0],["pointercancel",!0]],XR=s=>{const{handlers:e}=uy(),t=u=>{const d=u.offsetX-s.initialClick[0],f=u.offsetY-s.initialClick[1];return Math.round(Math.hypot(d,f))},i=u=>{var d,f;for(const p of s.hovered.values())if(u.length===0||!u.some(v=>v.object===p.object&&v.index===p.index&&v.instanceId===p.instanceId)){const{eventObject:v}=p;s.hovered.delete(x0(p));const m=e.get(v);if(m){const g={...p,intersections:u};(d=m.onpointerout)==null||d.call(m,g),(f=m.onpointerleave)==null||f.call(m,g)}}},n=()=>{if(!s.enabled.current)return[];const u=[],d=s.raycaster.intersectObjects(s.interactiveObjects,!0),f=s.filter===void 0?d:s.filter(d,s);for(const p of f){let v=p.object;for(;v;)e.has(v)&&u.push({...p,eventObject:v}),v=v.parent}return u},r=(u,d)=>{var f,p;for(const v of d)(p=(f=e.get(v))==null?void 0:f.onpointermissed)==null||p.call(f,u)},o=()=>{s.pointerOverTarget.set(!1),i([])},a=()=>{s.pointerOverTarget.set(!0)},l=u=>{var x,y,_,E;const d=u.type,f=d==="pointermove",p=d==="click"||d==="contextmenu"||d==="dblclick";s.compute(u,s);const v=n(),m=p?t(u):0;d==="pointerdown"&&(s.initialClick=[u.offsetX,u.offsetY],s.initialHits=v.map(w=>w.eventObject)),p&&v.length===0&&m<=2&&r(u,s.interactiveObjects),f&&i(v);let g=!1;e:for(const w of v){const M=e.get(w.eventObject);if(!M)continue;const T={stopped:g,...w,intersections:v,stopPropagation(){if(g=!0,T.stopped=!0,s.hovered.size>0&&Array.from(s.hovered.values()).some(S=>S.eventObject===w.eventObject)){const S=v.slice(0,v.indexOf(w));i([...S,w])}},camera:s.raycaster.camera,delta:m,nativeEvent:u,pointer:s.pointer.current,ray:s.raycaster.ray};if(f){if(M.onpointerover||M.onpointerenter||M.onpointerout||M.onpointerleave){const S=x0(T),b=s.hovered.get(S);b?b.stopped&&T.stopPropagation():(s.hovered.set(S,T),(x=M.onpointerover)==null||x.call(M,T),(y=M.onpointerenter)==null||y.call(M,T))}(_=M.onpointermove)==null||_.call(M,T)}else M[`on${d}`]?(!p||s.initialHits.includes(w.eventObject))&&(r(u,s.interactiveObjects.filter(S=>!s.initialHits.includes(S))),(E=M[`on${d}`])==null||E.call(M,T)):p&&s.initialHits.includes(w.eventObject)&&r(u,s.interactiveObjects.filter(S=>!s.initialHits.includes(S)));if(g)break e}},c=u=>{for(const[d]of b0)d==="pointerleave"||d==="pointercancel"?u.removeEventListener(d,o):d==="pointerenter"?u.removeEventListener(d,a):u.removeEventListener(d,l)},h=u=>{for(const[d,f]of b0)d==="pointerleave"||d==="pointercancel"?u.addEventListener(d,o,{passive:f}):d==="pointerenter"?u.addEventListener(d,a,{passive:f}):u.addEventListener(d,l,{passive:f})};er(s.target,u=>(u&&h(u),()=>{u&&c(u)}))},Fp=s=>{const e=HR(s);return WR(),XR(e),e};for(let s=0;s<256;s++)(s<16?"0":"")+s.toString(16);new hs(-1,1,1,-1,0,1);class jR extends xt{constructor(){super(),this.setAttribute("position",new qe([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new qe([0,2,0,0,2,0],2))}}new jR;var dy={exports:{}};dy.exports=Eu;dy.exports.default=Eu;function Eu(s,e,t){t=t||2;var i=e&&e.length,n=i?e[0]*t:s.length,r=fy(s,0,n,t,!0),o=[];if(!r||r.next===r.prev)return o;var a,l,c,h,u,d,f;if(i&&(r=KR(s,e,r,t)),s.length>80*t){a=c=s[0],l=h=s[1];for(var p=t;p<n;p+=t)u=s[p],d=s[p+1],u<a&&(a=u),d<l&&(l=d),u>c&&(c=u),d>h&&(h=d);f=Math.max(c-a,h-l),f=f!==0?32767/f:0}return ul(r,o,t,a,l,f,0),o}function fy(s,e,t,i,n){var r,o;if(n===Pf(s,e,t,i)>0)for(r=e;r<t;r+=i)o=S0(r,s[r],s[r+1],o);else for(r=t-i;r>=e;r-=i)o=S0(r,s[r],s[r+1],o);return o&&Tu(o,o.next)&&(fl(o),o=o.next),o}function oo(s,e){if(!s)return s;e||(e=s);var t=s,i;do if(i=!1,!t.steiner&&(Tu(t,t.next)||dn(t.prev,t,t.next)===0)){if(fl(t),t=e=t.prev,t===t.next)break;i=!0}else t=t.next;while(i||t!==e);return e}function ul(s,e,t,i,n,r,o){if(s){!o&&r&&nP(s,i,n,r);for(var a=s,l,c;s.prev!==s.next;){if(l=s.prev,c=s.next,r?qR(s,i,n,r):YR(s)){e.push(l.i/t|0),e.push(s.i/t|0),e.push(c.i/t|0),fl(s),s=c.next,a=c.next;continue}if(s=c,s===a){o?o===1?(s=ZR(oo(s),e,t),ul(s,e,t,i,n,r,2)):o===2&&JR(s,e,t,i,n,r):ul(oo(s),e,t,i,n,r,1);break}}}}function YR(s){var e=s.prev,t=s,i=s.next;if(dn(e,t,i)>=0)return!1;for(var n=e.x,r=t.x,o=i.x,a=e.y,l=t.y,c=i.y,h=n<r?n<o?n:o:r<o?r:o,u=a<l?a<c?a:c:l<c?l:c,d=n>r?n>o?n:o:r>o?r:o,f=a>l?a>c?a:c:l>c?l:c,p=i.next;p!==e;){if(p.x>=h&&p.x<=d&&p.y>=u&&p.y<=f&&Vo(n,a,r,l,o,c,p.x,p.y)&&dn(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function qR(s,e,t,i){var n=s.prev,r=s,o=s.next;if(dn(n,r,o)>=0)return!1;for(var a=n.x,l=r.x,c=o.x,h=n.y,u=r.y,d=o.y,f=a<l?a<c?a:c:l<c?l:c,p=h<u?h<d?h:d:u<d?u:d,v=a>l?a>c?a:c:l>c?l:c,m=h>u?h>d?h:d:u>d?u:d,g=Cf(f,p,e,t,i),x=Cf(v,m,e,t,i),y=s.prevZ,_=s.nextZ;y&&y.z>=g&&_&&_.z<=x;){if(y.x>=f&&y.x<=v&&y.y>=p&&y.y<=m&&y!==n&&y!==o&&Vo(a,h,l,u,c,d,y.x,y.y)&&dn(y.prev,y,y.next)>=0||(y=y.prevZ,_.x>=f&&_.x<=v&&_.y>=p&&_.y<=m&&_!==n&&_!==o&&Vo(a,h,l,u,c,d,_.x,_.y)&&dn(_.prev,_,_.next)>=0))return!1;_=_.nextZ}for(;y&&y.z>=g;){if(y.x>=f&&y.x<=v&&y.y>=p&&y.y<=m&&y!==n&&y!==o&&Vo(a,h,l,u,c,d,y.x,y.y)&&dn(y.prev,y,y.next)>=0)return!1;y=y.prevZ}for(;_&&_.z<=x;){if(_.x>=f&&_.x<=v&&_.y>=p&&_.y<=m&&_!==n&&_!==o&&Vo(a,h,l,u,c,d,_.x,_.y)&&dn(_.prev,_,_.next)>=0)return!1;_=_.nextZ}return!0}function ZR(s,e,t){var i=s;do{var n=i.prev,r=i.next.next;!Tu(n,r)&&py(n,i,i.next,r)&&dl(n,r)&&dl(r,n)&&(e.push(n.i/t|0),e.push(i.i/t|0),e.push(r.i/t|0),fl(i),fl(i.next),i=s=r),i=i.next}while(i!==s);return oo(i)}function JR(s,e,t,i,n,r){var o=s;do{for(var a=o.next.next;a!==o.prev;){if(o.i!==a.i&&sP(o,a)){var l=my(o,a);o=oo(o,o.next),l=oo(l,l.next),ul(o,e,t,i,n,r,0),ul(l,e,t,i,n,r,0);return}a=a.next}o=o.next}while(o!==s)}function KR(s,e,t,i){var n=[],r,o,a,l,c;for(r=0,o=e.length;r<o;r++)a=e[r]*i,l=r<o-1?e[r+1]*i:s.length,c=fy(s,a,l,i,!1),c===c.next&&(c.steiner=!0),n.push(rP(c));for(n.sort(QR),r=0;r<n.length;r++)t=$R(n[r],t);return t}function QR(s,e){return s.x-e.x}function $R(s,e){var t=eP(s,e);if(!t)return e;var i=my(t,s);return oo(i,i.next),oo(t,t.next)}function eP(s,e){var t=e,i=s.x,n=s.y,r=-1/0,o;do{if(n<=t.y&&n>=t.next.y&&t.next.y!==t.y){var a=t.x+(n-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(a<=i&&a>r&&(r=a,o=t.x<t.next.x?t:t.next,a===i))return o}t=t.next}while(t!==e);if(!o)return null;var l=o,c=o.x,h=o.y,u=1/0,d;t=o;do i>=t.x&&t.x>=c&&i!==t.x&&Vo(n<h?i:r,n,c,h,n<h?r:i,n,t.x,t.y)&&(d=Math.abs(n-t.y)/(i-t.x),dl(t,s)&&(d<u||d===u&&(t.x>o.x||t.x===o.x&&tP(o,t)))&&(o=t,u=d)),t=t.next;while(t!==l);return o}function tP(s,e){return dn(s.prev,s,e.prev)<0&&dn(e.next,s,s.next)<0}function nP(s,e,t,i){var n=s;do n.z===0&&(n.z=Cf(n.x,n.y,e,t,i)),n.prevZ=n.prev,n.nextZ=n.next,n=n.next;while(n!==s);n.prevZ.nextZ=null,n.prevZ=null,iP(n)}function iP(s){var e,t,i,n,r,o,a,l,c=1;do{for(t=s,s=null,r=null,o=0;t;){for(o++,i=t,a=0,e=0;e<c&&(a++,i=i.nextZ,!!i);e++);for(l=c;a>0||l>0&&i;)a!==0&&(l===0||!i||t.z<=i.z)?(n=t,t=t.nextZ,a--):(n=i,i=i.nextZ,l--),r?r.nextZ=n:s=n,n.prevZ=r,r=n;t=i}r.nextZ=null,c*=2}while(o>1);return s}function Cf(s,e,t,i,n){return s=(s-t)*n|0,e=(e-i)*n|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function rP(s){var e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function Vo(s,e,t,i,n,r,o,a){return(n-o)*(e-a)>=(s-o)*(r-a)&&(s-o)*(i-a)>=(t-o)*(e-a)&&(t-o)*(r-a)>=(n-o)*(i-a)}function sP(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!oP(s,e)&&(dl(s,e)&&dl(e,s)&&aP(s,e)&&(dn(s.prev,s,e.prev)||dn(s,e.prev,e))||Tu(s,e)&&dn(s.prev,s,s.next)>0&&dn(e.prev,e,e.next)>0)}function dn(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function Tu(s,e){return s.x===e.x&&s.y===e.y}function py(s,e,t,i){var n=Nc(dn(s,e,t)),r=Nc(dn(s,e,i)),o=Nc(dn(t,i,s)),a=Nc(dn(t,i,e));return!!(n!==r&&o!==a||n===0&&Uc(s,t,e)||r===0&&Uc(s,i,e)||o===0&&Uc(t,s,i)||a===0&&Uc(t,e,i))}function Uc(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function Nc(s){return s>0?1:s<0?-1:0}function oP(s,e){var t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&py(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function dl(s,e){return dn(s.prev,s,s.next)<0?dn(s,e,s.next)>=0&&dn(s,s.prev,e)>=0:dn(s,e,s.prev)<0||dn(s,s.next,e)<0}function aP(s,e){var t=s,i=!1,n=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&n<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(i=!i),t=t.next;while(t!==s);return i}function my(s,e){var t=new Rf(s.i,s.x,s.y),i=new Rf(e.i,e.x,e.y),n=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=n,n.prev=t,i.next=t,t.prev=i,r.next=i,i.prev=r,i}function S0(s,e,t,i){var n=new Rf(s,e,t);return i?(n.next=i.next,n.prev=i,i.next.prev=n,i.next=n):(n.prev=n,n.next=n),n}function fl(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function Rf(s,e,t){this.i=s,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}Eu.deviation=function(s,e,t,i){var n=e&&e.length,r=n?e[0]*t:s.length,o=Math.abs(Pf(s,0,r,t));if(n)for(var a=0,l=e.length;a<l;a++){var c=e[a]*t,h=a<l-1?e[a+1]*t:s.length;o-=Math.abs(Pf(s,c,h,t))}var u=0;for(a=0;a<i.length;a+=3){var d=i[a]*t,f=i[a+1]*t,p=i[a+2]*t;u+=Math.abs((s[d]-s[p])*(s[f+1]-s[d+1])-(s[d]-s[f])*(s[p+1]-s[d+1]))}return o===0&&u===0?0:Math.abs((u-o)/o)};function Pf(s,e,t,i){for(var n=0,r=e,o=t-i;r<t;r+=i)n+=(s[o]-s[r])*(s[r+1]+s[o+1]),o=r;return n}Eu.flatten=function(s){for(var e=s[0][0].length,t={vertices:[],holes:[],dimensions:e},i=0,n=0;n<s.length;n++){for(var r=0;r<s[n].length;r++)for(var o=0;o<e;o++)t.vertices.push(s[n][r][o]);n>0&&(i+=s[n-1].length,t.holes.push(i))}return t};new Me;new Me;var M0;(s=>{function e(n){let r=n.slice();return r.sort(s.POINT_COMPARATOR),s.makeHullPresorted(r)}s.makeHull=e;function t(n){if(n.length<=1)return n.slice();let r=[];for(let a=0;a<n.length;a++){const l=n[a];for(;r.length>=2;){const c=r[r.length-1],h=r[r.length-2];if((c.x-h.x)*(l.y-h.y)>=(c.y-h.y)*(l.x-h.x))r.pop();else break}r.push(l)}r.pop();let o=[];for(let a=n.length-1;a>=0;a--){const l=n[a];for(;o.length>=2;){const c=o[o.length-1],h=o[o.length-2];if((c.x-h.x)*(l.y-h.y)>=(c.y-h.y)*(l.x-h.x))o.pop();else break}o.push(l)}return o.pop(),r.length==1&&o.length==1&&r[0].x==o[0].x&&r[0].y==o[0].y?r:r.concat(o)}s.makeHullPresorted=t;function i(n,r){return n.x<r.x?-1:n.x>r.x?1:n.y<r.y?-1:n.y>r.y?1:0}s.POINT_COMPARATOR=i})(M0||(M0={}));const Oe=is({edit:!1,tool:"translate",selectedLink:void 0,selectedJoint:void 0,robot:void 0,continuousJoints:{},revoluteJoints:{},visual:!0,collision:!1,collisionColor:"#813d9c",joints:!0,jointNames:!0,jointColor:"#62a0ea",linkNames:!0,linkColor:"#57e389",jointIndicatorColor:"#f66151",linkOpacity:1,highlightColor:"#ffa348",visualOpacity:1,collisionOpacity:.7,backgroundColor:"#241f31",translationSnap:.001,scaleSnap:.001,rotationSnap:1,initialZoom:1.3,zoom:1.3,nameHeight:.12});function Xd(s){const e=kp(s,"xyz");if(!(!e||e.length!=3))return e}function w0(s){const e=kp(s,"rpy");if(!(!e||e.length!=3))return e}function E0(s){const e=kp(s,"rgba");if(!(!e||e.length!=4))return e}function kp(s,e="xyz"){var t;if(s.hasAttribute(e)){const i=(t=s.getAttribute(e))==null?void 0:t.split(" ");if(i){const n=[];for(const r of i)n.push(parseFloat(r));return n}}}function jd(s){return s*180/Math.PI}function lP(s){return s?new Ge(s[0],s[1],s[2]):new Ge("white")}function gy(s){return Math.max(Oe.zoom/Oe.initialZoom*s,s)}function cP(s){const e=[],t=s.joints;for(const i of Object.values(s.links)){let n=!0;for(const r of t)if(r.child.name==i.name){n=!1;break}n&&e.push(i)}return e}function hP(s,e){const t=[],i=s.joints;if(!i)return[];for(const n of i)n.parent.name==e.name&&t.push(n);return t}function uP(s){const e=s.elem.getElementsByTagName("origin")[0];e.setAttribute("xyz",s.origin_xyz.join(" ")),e.setAttribute("rpy",s.origin_rpy.join(" "))}class dP{constructor(e,t=""){rn(this,"filename");rn(this,"colors",{});rn(this,"robot",{name:"",links:{},joints:[]});rn(this,"prefix","");this.filename=e,this.prefix=t}async load(){return fetch(this.filename).then(e=>e.text())}reset(){this.robot={name:"",links:{},joints:[]}}fromString(e){this.reset();let t=new window.DOMParser().parseFromString(e,"text/xml");return this.robot.elem=t.documentElement,this.parseRobotXMLNode(t.documentElement)}parseRobotXMLNode(e){const t=e.nodeName;if(t!=="robot")throw new Error(`Invalid URDF: no root node ${t}`);return this.robot.name=e.getAttribute("name"),this.parseColorsFromRobot(e),this.parseLinks(e),this.parseJoints(e),this.robot}parseColorsFromRobot(e){const t=e.getElementsByTagName("material");for(let i=0;i<t.length;i++){const n=t[i],r=this.colorFromMaterial(n);r&&(this.colors[r.name]=r.rgba)}}colorFromMaterial(e){if(!e.hasAttribute("name")){console.warn("Found material-tag with name without name inside robot tag!");return}const t=e.getAttribute("name"),i=e.getElementsByTagName("color");if(i.length===0)return;const n=i[0];if(!n.hasAttribute("rgba")){console.warn(`Color tag ${t} does not have expected "rgba" attribute!`);return}return{name:t,rgba:E0(n)||[0,0,0,1]}}getLinkByName(e){if(!this.robot.elem)return;const t=this.robot.elem.getElementsByTagName("link");for(let i=0;i<t.length;i++){const n=t[i];if(n.hasAttribute("name")){const r=n.getAttribute("name");if(e==r)return n}}}parseLinks(e){const t=e.getElementsByTagName("link");for(let i=0;i<t.length;i++){const n=t[i],r={visual:[],collision:[],name:"",elem:n};n.hasAttribute("name")?(r.name=n.getAttribute("name"),this.robot.links[r.name]=r):console.error("No name in xml link node: ",n);const o=n.getElementsByTagName("visual");for(let l=0;l<o.length;l++)r.visual.push(this.parseVisual(o[l]));const a=n.getElementsByTagName("collision");for(let l=0;l<a.length;l++)r.collision.push(this.parseVisual(a[l]))}}parseVisual(e){let t,i,n,r="pink";const o={elem:e};for(let a=0;a<e.childNodes.length;a++){const l=e.childNodes[a];switch(l.nodeName){case"geometry":this.parseGeometry(l,o);break;case"origin":t=Xd(l),t&&(o.origin_xyz=t),i=w0(l),i&&(o.origin_rpy=i);break;case"material":n=l.getElementsByTagName("color"),n.length>0&&n[0].hasAttribute("rgba")?o.color_rgba=E0(n[0]):l.hasAttribute("name")&&(r=l.getAttribute("name"),o.color_rgba=this.colors[r])}}return o}parseGeometry(e,t){for(let i=0;i<e.childNodes.length;i++){const n=e.childNodes[i];switch(n.nodeName){case"mesh":let r=[1,1,1],o=n.getAttribute("scale");if(o){const u=o.split(" ");for(const d in u)r[d]=parseFloat(u[d])}let a=n.getAttribute("filename");a=a.replace("package:/",this.prefix);let l="stl";switch(a.substring(a.length-3).toLocaleLowerCase()){case"fbx":l="fbx";break;case"obj":l="obj";break;case"stl":l="stl";break;case"dae":l="dae";break;default:throw new Error("Unknown type "+a)}t.geometry={filename:a,type:l,scale:r},t.type="mesh";return;case"cylinder":const c={};n.hasAttribute("length")&&(c.length=parseFloat(n.getAttribute("length"))),n.hasAttribute("radius")&&(c.radius=parseFloat(n.getAttribute("radius"))),t.geometry=c,t.type="cylinder";return;case"box":const h={size:[1,1,1]};if(n.hasAttribute("size")){const d=n.getAttribute("size").split(" ");for(const f in d)h.size[f]=parseFloat(d[f])}t.geometry=h,t.type="box";return}}}parseJoints(e){const t=this.robot.links,i=[];this.robot.joints=i;const n=e.getElementsByTagName("joint");for(let r=0;r<n.length;r++){const o=n[r],a=o.getElementsByTagName("origin");let l=[0,0,0],c=[0,0,0];if(a.length===1){let x=Xd(a[0]);x&&(c=x);let y=w0(a[0]);y&&(l=y)}let h;const u=o.getElementsByTagName("parent");if(u.length===1){const x=u[0].getAttribute("link");if(!x)throw Error("Name not set for link");const y=this.getLinkByName(x);if(!y)throw Error(`Link with name ${x} not found!`);x&&t[x]?h=t[x]:h={name:x,visual:[],collision:[],elem:y}}let d;const f=o.getElementsByTagName("child");if(f.length===1){const x=f[0].getAttribute("link");if(x&&t[x])d=t[x];else if(x){const y=this.getLinkByName(x);d={name:x,visual:[],collision:[],elem:y}}}let p,v=[0,0,1];const m=o.getElementsByTagName("axis");m.length===1&&(v=Xd(m[0])||v);const g=o.getElementsByTagName("limit");if(g.length===1){p={lower:0,upper:0,effort:0,velocity:0};const x=g[0].getAttribute("lower");x&&(p.lower=parseInt(x));const y=g[0].getAttribute("upper");y&&(p.upper=parseInt(y));const _=g[0].getAttribute("effort");_&&(p.effort=parseInt(_));const E=g[0].getAttribute("velocity");E&&(p.velocity=parseInt(E))}d&&h&&i.push({name:o.getAttribute("name")||void 0,type:o.getAttribute("type")||void 0,origin_rpy:l,origin_xyz:c,rotation:[0,0,0],axis_xyz:v,parent:h,child:d,limit:p,elem:o})}}getURDFXML(){return this.robot.elem?`<?xml version="1.0" ?>
`+this.robot.elem.outerHTML:""}}class T0 extends p_{constructor(e){super(e)}parse(e){function t(F){switch(F.image_type){case d:case v:if(F.colormap_length>256||F.colormap_size!==24||F.colormap_type!==1)throw new Error("THREE.TGALoader: Invalid type colormap data for indexed type.");break;case f:case p:case m:case g:if(F.colormap_type)throw new Error("THREE.TGALoader: Invalid type colormap data for colormap type.");break;case u:throw new Error("THREE.TGALoader: No data.");default:throw new Error("THREE.TGALoader: Invalid type "+F.image_type)}if(F.width<=0||F.height<=0)throw new Error("THREE.TGALoader: Invalid image size.");if(F.pixel_size!==8&&F.pixel_size!==16&&F.pixel_size!==24&&F.pixel_size!==32)throw new Error("THREE.TGALoader: Invalid pixel size "+F.pixel_size)}function i(F,te,Y,j,$){let L,Z;const Q=Y.pixel_size>>3,k=Y.width*Y.height*Q;if(te&&(Z=$.subarray(j,j+=Y.colormap_length*(Y.colormap_size>>3))),F){L=new Uint8Array(k);let W,J,X,ne=0;const me=new Uint8Array(Q);for(;ne<k;)if(W=$[j++],J=(W&127)+1,W&128){for(X=0;X<Q;++X)me[X]=$[j++];for(X=0;X<J;++X)L.set(me,ne+X*Q);ne+=Q*J}else{for(J*=Q,X=0;X<J;++X)L[ne+X]=$[j++];ne+=J}}else L=$.subarray(j,j+=te?Y.width*Y.height:k);return{pixel_data:L,palettes:Z}}function n(F,te,Y,j,$,L,Z,Q,k){const W=k;let J,X=0,ne,me;const be=b.width;for(me=te;me!==j;me+=Y)for(ne=$;ne!==Z;ne+=L,X++)J=Q[X],F[(ne+be*me)*4+3]=255,F[(ne+be*me)*4+2]=W[J*3+0],F[(ne+be*me)*4+1]=W[J*3+1],F[(ne+be*me)*4+0]=W[J*3+2];return F}function r(F,te,Y,j,$,L,Z,Q){let k,W=0,J,X;const ne=b.width;for(X=te;X!==j;X+=Y)for(J=$;J!==Z;J+=L,W+=2)k=Q[W+0]+(Q[W+1]<<8),F[(J+ne*X)*4+0]=(k&31744)>>7,F[(J+ne*X)*4+1]=(k&992)>>2,F[(J+ne*X)*4+2]=(k&31)<<3,F[(J+ne*X)*4+3]=k&32768?0:255;return F}function o(F,te,Y,j,$,L,Z,Q){let k=0,W,J;const X=b.width;for(J=te;J!==j;J+=Y)for(W=$;W!==Z;W+=L,k+=3)F[(W+X*J)*4+3]=255,F[(W+X*J)*4+2]=Q[k+0],F[(W+X*J)*4+1]=Q[k+1],F[(W+X*J)*4+0]=Q[k+2];return F}function a(F,te,Y,j,$,L,Z,Q){let k=0,W,J;const X=b.width;for(J=te;J!==j;J+=Y)for(W=$;W!==Z;W+=L,k+=4)F[(W+X*J)*4+2]=Q[k+0],F[(W+X*J)*4+1]=Q[k+1],F[(W+X*J)*4+0]=Q[k+2],F[(W+X*J)*4+3]=Q[k+3];return F}function l(F,te,Y,j,$,L,Z,Q){let k,W=0,J,X;const ne=b.width;for(X=te;X!==j;X+=Y)for(J=$;J!==Z;J+=L,W++)k=Q[W],F[(J+ne*X)*4+0]=k,F[(J+ne*X)*4+1]=k,F[(J+ne*X)*4+2]=k,F[(J+ne*X)*4+3]=255;return F}function c(F,te,Y,j,$,L,Z,Q){let k=0,W,J;const X=b.width;for(J=te;J!==j;J+=Y)for(W=$;W!==Z;W+=L,k+=2)F[(W+X*J)*4+0]=Q[k+0],F[(W+X*J)*4+1]=Q[k+0],F[(W+X*J)*4+2]=Q[k+0],F[(W+X*J)*4+3]=Q[k+1];return F}function h(F,te,Y,j,$){let L,Z,Q,k,W,J;switch((b.flags&x)>>y){default:case w:L=0,Q=1,W=te,Z=0,k=1,J=Y;break;case _:L=0,Q=1,W=te,Z=Y-1,k=-1,J=-1;break;case M:L=te-1,Q=-1,W=-1,Z=0,k=1,J=Y;break;case E:L=te-1,Q=-1,W=-1,Z=Y-1,k=-1,J=-1;break}if(G)switch(b.pixel_size){case 8:l(F,Z,k,J,L,Q,W,j);break;case 16:c(F,Z,k,J,L,Q,W,j);break;default:throw new Error("THREE.TGALoader: Format not supported.")}else switch(b.pixel_size){case 8:n(F,Z,k,J,L,Q,W,j,$);break;case 16:r(F,Z,k,J,L,Q,W,j);break;case 24:o(F,Z,k,J,L,Q,W,j);break;case 32:a(F,Z,k,J,L,Q,W,j);break;default:throw new Error("THREE.TGALoader: Format not supported.")}return F}const u=0,d=1,f=2,p=3,v=9,m=10,g=11,x=48,y=4,_=0,E=1,w=2,M=3;if(e.length<19)throw new Error("THREE.TGALoader: Not enough data to contain header.");let T=0;const S=new Uint8Array(e),b={id_length:S[T++],colormap_type:S[T++],image_type:S[T++],colormap_index:S[T++]|S[T++]<<8,colormap_length:S[T++]|S[T++]<<8,colormap_size:S[T++],origin:[S[T++]|S[T++]<<8,S[T++]|S[T++]<<8],width:S[T++]|S[T++]<<8,height:S[T++]|S[T++]<<8,pixel_size:S[T++],flags:S[T++]};if(t(b),b.id_length+T>e.length)throw new Error("THREE.TGALoader: No data.");T+=b.id_length;let P=!1,D=!1,G=!1;switch(b.image_type){case v:P=!0,D=!0;break;case d:D=!0;break;case m:P=!0;break;case f:break;case g:P=!0,G=!0;break;case p:G=!0;break}const H=new Uint8Array(b.width*b.height*4),q=i(P,D,b,T,S);return h(H,b.width,b.height,q.pixel_data,q.palettes),{data:H,width:b.width,height:b.height,flipY:!0,generateMipmaps:!0,minFilter:nr}}}class fP extends zn{load(e,t,i,n){const r=this,o=r.path===""?Lh.extractUrlBase(e):r.path,a=new ji(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(l){try{t(r.parse(l,o))}catch(c){n?n(c):console.error(c),r.manager.itemError(e)}},i,n)}parse(e,t){function i(R,C){const z=[],N=R.childNodes;for(let V=0,_e=N.length;V<_e;V++){const Ae=N[V];Ae.nodeName===C&&z.push(Ae)}return z}function n(R){if(R.length===0)return[];const C=R.trim().split(/\s+/),z=new Array(C.length);for(let N=0,V=C.length;N<V;N++)z[N]=C[N];return z}function r(R){if(R.length===0)return[];const C=R.trim().split(/\s+/),z=new Array(C.length);for(let N=0,V=C.length;N<V;N++)z[N]=parseFloat(C[N]);return z}function o(R){if(R.length===0)return[];const C=R.trim().split(/\s+/),z=new Array(C.length);for(let N=0,V=C.length;N<V;N++)z[N]=parseInt(C[N]);return z}function a(R){return R.substring(1)}function l(){return"three_default_"+Ci++}function c(R){return Object.keys(R).length===0}function h(R){return{unit:u(i(R,"unit")[0]),upAxis:d(i(R,"up_axis")[0])}}function u(R){return R!==void 0&&R.hasAttribute("meter")===!0?parseFloat(R.getAttribute("meter")):1}function d(R){return R!==void 0?R.textContent:"Y_UP"}function f(R,C,z,N){const V=i(R,C)[0];if(V!==void 0){const _e=i(V,z);for(let Ae=0;Ae<_e.length;Ae++)N(_e[Ae])}}function p(R,C){for(const z in R){const N=R[z];N.build=C(R[z])}}function v(R,C){return R.build!==void 0||(R.build=C(R)),R.build}function m(R){const C={sources:{},samplers:{},channels:{}};let z=!1;for(let N=0,V=R.childNodes.length;N<V;N++){const _e=R.childNodes[N];if(_e.nodeType!==1)continue;let Ae;switch(_e.nodeName){case"source":Ae=_e.getAttribute("id"),C.sources[Ae]=Ee(_e);break;case"sampler":Ae=_e.getAttribute("id"),C.samplers[Ae]=g(_e);break;case"channel":Ae=_e.getAttribute("target"),C.channels[Ae]=x(_e);break;case"animation":m(_e),z=!0;break;default:console.log(_e)}}z===!1&&(St.animations[R.getAttribute("id")||gr.generateUUID()]=C)}function g(R){const C={inputs:{}};for(let z=0,N=R.childNodes.length;z<N;z++){const V=R.childNodes[z];if(V.nodeType===1)switch(V.nodeName){case"input":const _e=a(V.getAttribute("source")),Ae=V.getAttribute("semantic");C.inputs[Ae]=_e;break}}return C}function x(R){const C={};let N=R.getAttribute("target").split("/");const V=N.shift();let _e=N.shift();const Ae=_e.indexOf("(")!==-1,it=_e.indexOf(".")!==-1;if(it)N=_e.split("."),_e=N.shift(),C.member=N.shift();else if(Ae){const Xe=_e.split("(");_e=Xe.shift();for(let Qe=0;Qe<Xe.length;Qe++)Xe[Qe]=parseInt(Xe[Qe].replace(/\)/,""));C.indices=Xe}return C.id=V,C.sid=_e,C.arraySyntax=Ae,C.memberSyntax=it,C.sampler=a(R.getAttribute("source")),C}function y(R){const C=[],z=R.channels,N=R.samplers,V=R.sources;for(const _e in z)if(z.hasOwnProperty(_e)){const Ae=z[_e],it=N[Ae.sampler],Xe=it.inputs.INPUT,Qe=it.inputs.OUTPUT,ft=V[Xe],Fe=V[Qe],ut=E(Ae,ft,Fe);b(ut,C)}return C}function _(R){return v(St.animations[R],y)}function E(R,C,z){const N=St.nodes[R.id],V=Tt(N.id),_e=N.transforms[R.sid],Ae=N.matrix.clone().transpose();let it,Xe,Qe,ft,Fe,ut;const at={};switch(_e){case"matrix":for(Qe=0,ft=C.array.length;Qe<ft;Qe++)if(it=C.array[Qe],Xe=Qe*z.stride,at[it]===void 0&&(at[it]={}),R.arraySyntax===!0){const nn=z.array[Xe],Gt=R.indices[0]+4*R.indices[1];at[it][Gt]=nn}else for(Fe=0,ut=z.stride;Fe<ut;Fe++)at[it][Fe]=z.array[Xe+Fe];break;case"translate":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',_e);break;case"rotate":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',_e);break;case"scale":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',_e);break}const vt=w(at,Ae);return{name:V.uuid,keyframes:vt}}function w(R,C){const z=[];for(const V in R)z.push({time:parseFloat(V),value:R[V]});z.sort(N);for(let V=0;V<16;V++)P(z,V,C.elements[V]);return z;function N(V,_e){return V.time-_e.time}}const M=new I,T=new I,S=new Ht;function b(R,C){const z=R.keyframes,N=R.name,V=[],_e=[],Ae=[],it=[];for(let Xe=0,Qe=z.length;Xe<Qe;Xe++){const ft=z[Xe],Fe=ft.time,ut=ft.value;oe.fromArray(ut).transpose(),oe.decompose(M,S,T),V.push(Fe),_e.push(M.x,M.y,M.z),Ae.push(S.x,S.y,S.z,S.w),it.push(T.x,T.y,T.z)}return _e.length>0&&C.push(new io(N+".position",V,_e)),Ae.length>0&&C.push(new na(N+".quaternion",V,Ae)),it.length>0&&C.push(new io(N+".scale",V,it)),C}function P(R,C,z){let N,V=!0,_e,Ae;for(_e=0,Ae=R.length;_e<Ae;_e++)N=R[_e],N.value[C]===void 0?N.value[C]=null:V=!1;if(V===!0)for(_e=0,Ae=R.length;_e<Ae;_e++)N=R[_e],N.value[C]=z;else D(R,C)}function D(R,C){let z,N;for(let V=0,_e=R.length;V<_e;V++){const Ae=R[V];if(Ae.value[C]===null){if(z=G(R,V,C),N=H(R,V,C),z===null){Ae.value[C]=N.value[C];continue}if(N===null){Ae.value[C]=z.value[C];continue}q(Ae,z,N,C)}}}function G(R,C,z){for(;C>=0;){const N=R[C];if(N.value[z]!==null)return N;C--}return null}function H(R,C,z){for(;C<R.length;){const N=R[C];if(N.value[z]!==null)return N;C++}return null}function q(R,C,z,N){if(z.time-C.time===0){R.value[N]=C.value[N];return}R.value[N]=(R.time-C.time)*(z.value[N]-C.value[N])/(z.time-C.time)+C.value[N]}function F(R){const C={name:R.getAttribute("id")||"default",start:parseFloat(R.getAttribute("start")||0),end:parseFloat(R.getAttribute("end")||0),animations:[]};for(let z=0,N=R.childNodes.length;z<N;z++){const V=R.childNodes[z];if(V.nodeType===1)switch(V.nodeName){case"instance_animation":C.animations.push(a(V.getAttribute("url")));break}}St.clips[R.getAttribute("id")]=C}function te(R){const C=[],z=R.name,N=R.end-R.start||-1,V=R.animations;for(let _e=0,Ae=V.length;_e<Ae;_e++){const it=_(V[_e]);for(let Xe=0,Qe=it.length;Xe<Qe;Xe++)C.push(it[Xe])}return new ro(z,N,C)}function Y(R){return v(St.clips[R],te)}function j(R){const C={};for(let z=0,N=R.childNodes.length;z<N;z++){const V=R.childNodes[z];if(V.nodeType===1)switch(V.nodeName){case"skin":C.id=a(V.getAttribute("source")),C.skin=$(V);break;case"morph":C.id=a(V.getAttribute("source")),console.warn("THREE.ColladaLoader: Morph target animation not supported yet.");break}}St.controllers[R.getAttribute("id")]=C}function $(R){const C={sources:{}};for(let z=0,N=R.childNodes.length;z<N;z++){const V=R.childNodes[z];if(V.nodeType===1)switch(V.nodeName){case"bind_shape_matrix":C.bindShapeMatrix=r(V.textContent);break;case"source":const _e=V.getAttribute("id");C.sources[_e]=Ee(V);break;case"joints":C.joints=L(V);break;case"vertex_weights":C.vertexWeights=Z(V);break}}return C}function L(R){const C={inputs:{}};for(let z=0,N=R.childNodes.length;z<N;z++){const V=R.childNodes[z];if(V.nodeType===1)switch(V.nodeName){case"input":const _e=V.getAttribute("semantic"),Ae=a(V.getAttribute("source"));C.inputs[_e]=Ae;break}}return C}function Z(R){const C={inputs:{}};for(let z=0,N=R.childNodes.length;z<N;z++){const V=R.childNodes[z];if(V.nodeType===1)switch(V.nodeName){case"input":const _e=V.getAttribute("semantic"),Ae=a(V.getAttribute("source")),it=parseInt(V.getAttribute("offset"));C.inputs[_e]={id:Ae,offset:it};break;case"vcount":C.vcount=o(V.textContent);break;case"v":C.v=o(V.textContent);break}}return C}function Q(R){const C={id:R.id},z=St.geometries[C.id];return R.skin!==void 0&&(C.skin=k(R.skin),z.sources.skinIndices=C.skin.indices,z.sources.skinWeights=C.skin.weights),C}function k(R){const z={joints:[],indices:{array:[],stride:4},weights:{array:[],stride:4}},N=R.sources,V=R.vertexWeights,_e=V.vcount,Ae=V.v,it=V.inputs.JOINT.offset,Xe=V.inputs.WEIGHT.offset,Qe=R.sources[R.joints.inputs.JOINT],ft=R.sources[R.joints.inputs.INV_BIND_MATRIX],Fe=N[V.inputs.WEIGHT.id].array;let ut=0,at,vt,lt;for(at=0,lt=_e.length;at<lt;at++){const Gt=_e[at],Bt=[];for(vt=0;vt<Gt;vt++){const Ft=Ae[ut+it],ki=Ae[ut+Xe],Vn=Fe[ki];Bt.push({index:Ft,weight:Vn}),ut+=2}for(Bt.sort(nn),vt=0;vt<4;vt++){const Ft=Bt[vt];Ft!==void 0?(z.indices.array.push(Ft.index),z.weights.array.push(Ft.weight)):(z.indices.array.push(0),z.weights.array.push(0))}}for(R.bindShapeMatrix?z.bindMatrix=new ct().fromArray(R.bindShapeMatrix).transpose():z.bindMatrix=new ct().identity(),at=0,lt=Qe.array.length;at<lt;at++){const Gt=Qe.array[at],Bt=new ct().fromArray(ft.array,at*ft.stride).transpose();z.joints.push({name:Gt,boneInverse:Bt})}return z;function nn(Gt,Bt){return Bt.weight-Gt.weight}}function W(R){return v(St.controllers[R],Q)}function J(R){const C={init_from:i(R,"init_from")[0].textContent};St.images[R.getAttribute("id")]=C}function X(R){return R.build!==void 0?R.build:R.init_from}function ne(R){const C=St.images[R];return C!==void 0?v(C,X):(console.warn("THREE.ColladaLoader: Couldn't find image with ID:",R),null)}function me(R){const C={};for(let z=0,N=R.childNodes.length;z<N;z++){const V=R.childNodes[z];if(V.nodeType===1)switch(V.nodeName){case"profile_COMMON":C.profile=be(V);break}}St.effects[R.getAttribute("id")]=C}function be(R){const C={surfaces:{},samplers:{}};for(let z=0,N=R.childNodes.length;z<N;z++){const V=R.childNodes[z];if(V.nodeType===1)switch(V.nodeName){case"newparam":we(V,C);break;case"technique":C.technique=U(V);break;case"extra":C.extra=pe(V);break}}return C}function we(R,C){const z=R.getAttribute("sid");for(let N=0,V=R.childNodes.length;N<V;N++){const _e=R.childNodes[N];if(_e.nodeType===1)switch(_e.nodeName){case"surface":C.surfaces[z]=ve(_e);break;case"sampler2D":C.samplers[z]=Ie(_e);break}}}function ve(R){const C={};for(let z=0,N=R.childNodes.length;z<N;z++){const V=R.childNodes[z];if(V.nodeType===1)switch(V.nodeName){case"init_from":C.init_from=V.textContent;break}}return C}function Ie(R){const C={};for(let z=0,N=R.childNodes.length;z<N;z++){const V=R.childNodes[z];if(V.nodeType===1)switch(V.nodeName){case"source":C.source=V.textContent;break}}return C}function U(R){const C={};for(let z=0,N=R.childNodes.length;z<N;z++){const V=R.childNodes[z];if(V.nodeType===1)switch(V.nodeName){case"constant":case"lambert":case"blinn":case"phong":C.type=V.nodeName,C.parameters=fe(V);break;case"extra":C.extra=pe(V);break}}return C}function fe(R){const C={};for(let z=0,N=R.childNodes.length;z<N;z++){const V=R.childNodes[z];if(V.nodeType===1)switch(V.nodeName){case"emission":case"diffuse":case"specular":case"bump":case"ambient":case"shininess":case"transparency":C[V.nodeName]=he(V);break;case"transparent":C[V.nodeName]={opaque:V.hasAttribute("opaque")?V.getAttribute("opaque"):"A_ONE",data:he(V)};break}}return C}function he(R){const C={};for(let z=0,N=R.childNodes.length;z<N;z++){const V=R.childNodes[z];if(V.nodeType===1)switch(V.nodeName){case"color":C[V.nodeName]=r(V.textContent);break;case"float":C[V.nodeName]=parseFloat(V.textContent);break;case"texture":C[V.nodeName]={id:V.getAttribute("texture"),extra:xe(V)};break}}return C}function xe(R){const C={technique:{}};for(let z=0,N=R.childNodes.length;z<N;z++){const V=R.childNodes[z];if(V.nodeType===1)switch(V.nodeName){case"extra":re(V,C);break}}return C}function re(R,C){for(let z=0,N=R.childNodes.length;z<N;z++){const V=R.childNodes[z];if(V.nodeType===1)switch(V.nodeName){case"technique":Te(V,C);break}}}function Te(R,C){for(let z=0,N=R.childNodes.length;z<N;z++){const V=R.childNodes[z];if(V.nodeType===1)switch(V.nodeName){case"repeatU":case"repeatV":case"offsetU":case"offsetV":C.technique[V.nodeName]=parseFloat(V.textContent);break;case"wrapU":case"wrapV":V.textContent.toUpperCase()==="TRUE"?C.technique[V.nodeName]=1:V.textContent.toUpperCase()==="FALSE"?C.technique[V.nodeName]=0:C.technique[V.nodeName]=parseInt(V.textContent);break;case"bump":C[V.nodeName]=ke(V);break}}}function pe(R){const C={};for(let z=0,N=R.childNodes.length;z<N;z++){const V=R.childNodes[z];if(V.nodeType===1)switch(V.nodeName){case"technique":C.technique=ce(V);break}}return C}function ce(R){const C={};for(let z=0,N=R.childNodes.length;z<N;z++){const V=R.childNodes[z];if(V.nodeType===1)switch(V.nodeName){case"double_sided":C[V.nodeName]=parseInt(V.textContent);break;case"bump":C[V.nodeName]=ke(V);break}}return C}function ke(R){const C={};for(let z=0,N=R.childNodes.length;z<N;z++){const V=R.childNodes[z];if(V.nodeType===1)switch(V.nodeName){case"texture":C[V.nodeName]={id:V.getAttribute("texture"),texcoord:V.getAttribute("texcoord"),extra:xe(V)};break}}return C}function O(R){return R}function A(R){return v(St.effects[R],O)}function ee(R){const C={name:R.getAttribute("name")};for(let z=0,N=R.childNodes.length;z<N;z++){const V=R.childNodes[z];if(V.nodeType===1)switch(V.nodeName){case"instance_effect":C.url=a(V.getAttribute("url"));break}}St.materials[R.getAttribute("id")]=C}function de(R){let C,z=R.slice((R.lastIndexOf(".")-1>>>0)+2);switch(z=z.toLowerCase(),z){case"tga":C=pn;break;default:C=An}return C}function ue(R){const C=A(R.url),z=C.profile.technique;let N;switch(z.type){case"phong":case"blinn":N=new ol;break;case"lambert":N=new op;break;default:N=new Bn;break}N.name=R.name||"";function V(Xe,Qe=null){const ft=C.profile.samplers[Xe.id];let Fe=null;if(ft!==void 0){const ut=C.profile.surfaces[ft.source];Fe=ne(ut.init_from)}else console.warn("THREE.ColladaLoader: Undefined sampler. Access image directly (see #12530)."),Fe=ne(Xe.id);if(Fe!==null){const ut=de(Fe);if(ut!==void 0){const at=ut.load(Fe),vt=Xe.extra;if(vt!==void 0&&vt.technique!==void 0&&c(vt.technique)===!1){const lt=vt.technique;at.wrapS=lt.wrapU?tr:bi,at.wrapT=lt.wrapV?tr:bi,at.offset.set(lt.offsetU||0,lt.offsetV||0),at.repeat.set(lt.repeatU||1,lt.repeatV||1)}else at.wrapS=tr,at.wrapT=tr;return Qe!==null&&(at.colorSpace=Qe),at}else return console.warn("THREE.ColladaLoader: Loader for texture %s not found.",Fe),null}else return console.warn("THREE.ColladaLoader: Couldn't create texture with ID:",Xe.id),null}const _e=z.parameters;for(const Xe in _e){const Qe=_e[Xe];switch(Xe){case"diffuse":Qe.color&&N.color.fromArray(Qe.color),Qe.texture&&(N.map=V(Qe.texture,on));break;case"specular":Qe.color&&N.specular&&N.specular.fromArray(Qe.color),Qe.texture&&(N.specularMap=V(Qe.texture));break;case"bump":Qe.texture&&(N.normalMap=V(Qe.texture));break;case"ambient":Qe.texture&&(N.lightMap=V(Qe.texture,on));break;case"shininess":Qe.float&&N.shininess&&(N.shininess=Qe.float);break;case"emission":Qe.color&&N.emissive&&N.emissive.fromArray(Qe.color),Qe.texture&&(N.emissiveMap=V(Qe.texture,on));break}}Nt.colorSpaceToWorking(N.color,on),N.specular&&Nt.colorSpaceToWorking(N.specular,on),N.emissive&&Nt.colorSpaceToWorking(N.emissive,on);let Ae=_e.transparent,it=_e.transparency;if(it===void 0&&Ae&&(it={float:1}),Ae===void 0&&it&&(Ae={opaque:"A_ONE",data:{color:[1,1,1,1]}}),Ae&&it)if(Ae.data.texture)N.transparent=!0;else{const Xe=Ae.data.color;switch(Ae.opaque){case"A_ONE":N.opacity=Xe[3]*it.float;break;case"RGB_ZERO":N.opacity=1-Xe[0]*it.float;break;case"A_ZERO":N.opacity=1-Xe[3]*it.float;break;case"RGB_ONE":N.opacity=Xe[0]*it.float;break;default:console.warn('THREE.ColladaLoader: Invalid opaque type "%s" of transparent tag.',Ae.opaque)}N.opacity<1&&(N.transparent=!0)}if(z.extra!==void 0&&z.extra.technique!==void 0){const Xe=z.extra.technique;for(const Qe in Xe){const ft=Xe[Qe];switch(Qe){case"double_sided":N.side=ft===1?_i:br;break;case"bump":N.normalMap=V(ft.texture),N.normalScale=new Me(1,1);break}}}return N}function ae(R){return v(St.materials[R],ue)}function De(R){const C={name:R.getAttribute("name")};for(let z=0,N=R.childNodes.length;z<N;z++){const V=R.childNodes[z];if(V.nodeType===1)switch(V.nodeName){case"optics":C.optics=Pe(V);break}}St.cameras[R.getAttribute("id")]=C}function Pe(R){for(let C=0;C<R.childNodes.length;C++){const z=R.childNodes[C];switch(z.nodeName){case"technique_common":return He(z)}}return{}}function He(R){const C={};for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];switch(N.nodeName){case"perspective":case"orthographic":C.technique=N.nodeName,C.parameters=je(N);break}}return C}function je(R){const C={};for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];switch(N.nodeName){case"xfov":case"yfov":case"xmag":case"ymag":case"znear":case"zfar":case"aspect_ratio":C[N.nodeName]=parseFloat(N.textContent);break}}return C}function Se(R){let C;switch(R.optics.technique){case"perspective":C=new Sn(R.optics.parameters.yfov,R.optics.parameters.aspect_ratio,R.optics.parameters.znear,R.optics.parameters.zfar);break;case"orthographic":let z=R.optics.parameters.ymag,N=R.optics.parameters.xmag;const V=R.optics.parameters.aspect_ratio;N=N===void 0?z*V:N,z=z===void 0?N/V:z,N*=.5,z*=.5,C=new hs(-N,N,z,-z,R.optics.parameters.znear,R.optics.parameters.zfar);break;default:C=new Sn;break}return C.name=R.name||"",C}function Le(R){const C=St.cameras[R];return C!==void 0?v(C,Se):(console.warn("THREE.ColladaLoader: Couldn't find camera with ID:",R),null)}function Ue(R){let C={};for(let z=0,N=R.childNodes.length;z<N;z++){const V=R.childNodes[z];if(V.nodeType===1)switch(V.nodeName){case"technique_common":C=$e(V);break}}St.lights[R.getAttribute("id")]=C}function $e(R){const C={};for(let z=0,N=R.childNodes.length;z<N;z++){const V=R.childNodes[z];if(V.nodeType===1)switch(V.nodeName){case"directional":case"point":case"spot":case"ambient":C.technique=V.nodeName,C.parameters=Ne(V)}}return C}function Ne(R){const C={};for(let z=0,N=R.childNodes.length;z<N;z++){const V=R.childNodes[z];if(V.nodeType===1)switch(V.nodeName){case"color":const _e=r(V.textContent);C.color=new Ge().fromArray(_e),Nt.colorSpaceToWorking(C.color,on);break;case"falloff_angle":C.falloffAngle=parseFloat(V.textContent);break;case"quadratic_attenuation":const Ae=parseFloat(V.textContent);C.distance=Ae?Math.sqrt(1/Ae):0;break}}return C}function dt(R){let C;switch(R.technique){case"directional":C=new pp;break;case"point":C=new fp;break;case"spot":C=new dp;break;case"ambient":C=new mp;break}return R.parameters.color&&C.color.copy(R.parameters.color),R.parameters.distance&&(C.distance=R.parameters.distance),C}function ie(R){const C=St.lights[R];return C!==void 0?v(C,dt):(console.warn("THREE.ColladaLoader: Couldn't find light with ID:",R),null)}function Re(R){const C={name:R.getAttribute("name"),sources:{},vertices:{},primitives:[]},z=i(R,"mesh")[0];if(z!==void 0){for(let N=0;N<z.childNodes.length;N++){const V=z.childNodes[N];if(V.nodeType!==1)continue;const _e=V.getAttribute("id");switch(V.nodeName){case"source":C.sources[_e]=Ee(V);break;case"vertices":C.vertices=et(V);break;case"polygons":console.warn("THREE.ColladaLoader: Unsupported primitive type: ",V.nodeName);break;case"lines":case"linestrips":case"polylist":case"triangles":C.primitives.push(Ce(V));break;default:console.log(V)}}St.geometries[R.getAttribute("id")]=C}}function Ee(R){const C={array:[],stride:3};for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];if(N.nodeType===1)switch(N.nodeName){case"float_array":C.array=r(N.textContent);break;case"Name_array":C.array=n(N.textContent);break;case"technique_common":const V=i(N,"accessor")[0];V!==void 0&&(C.stride=parseInt(V.getAttribute("stride")));break}}return C}function et(R){const C={};for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];N.nodeType===1&&(C[N.getAttribute("semantic")]=a(N.getAttribute("source")))}return C}function Ce(R){const C={type:R.nodeName,material:R.getAttribute("material"),count:parseInt(R.getAttribute("count")),inputs:{},stride:0,hasUV:!1};for(let z=0,N=R.childNodes.length;z<N;z++){const V=R.childNodes[z];if(V.nodeType===1)switch(V.nodeName){case"input":const _e=a(V.getAttribute("source")),Ae=V.getAttribute("semantic"),it=parseInt(V.getAttribute("offset")),Xe=parseInt(V.getAttribute("set")),Qe=Xe>0?Ae+Xe:Ae;C.inputs[Qe]={id:_e,offset:it},C.stride=Math.max(C.stride,it+1),Ae==="TEXCOORD"&&(C.hasUV=!0);break;case"vcount":C.vcount=o(V.textContent);break;case"p":C.p=o(V.textContent);break}}return C}function ye(R){const C={};for(let z=0;z<R.length;z++){const N=R[z];C[N.type]===void 0&&(C[N.type]=[]),C[N.type].push(N)}return C}function Ze(R){let C=0;for(let z=0,N=R.length;z<N;z++)R[z].hasUV===!0&&C++;C>0&&C<R.length&&(R.uvsNeedsFix=!0)}function tt(R){const C={},z=R.sources,N=R.vertices,V=R.primitives;if(V.length===0)return{};const _e=ye(V);for(const Ae in _e){const it=_e[Ae];Ze(it),C[Ae]=rt(it,z,N)}return C}function rt(R,C,z){const N={},V={array:[],stride:0},_e={array:[],stride:0},Ae={array:[],stride:0},it={array:[],stride:0},Xe={array:[],stride:0},Qe={array:[],stride:4},ft={array:[],stride:4},Fe=new xt,ut=[];let at=0;for(let vt=0;vt<R.length;vt++){const lt=R[vt],nn=lt.inputs;let Gt=0;switch(lt.type){case"lines":case"linestrips":Gt=lt.count*2;break;case"triangles":Gt=lt.count*3;break;case"polylist":for(let Bt=0;Bt<lt.count;Bt++){const Ft=lt.vcount[Bt];switch(Ft){case 3:Gt+=3;break;case 4:Gt+=6;break;default:Gt+=(Ft-2)*3;break}}break;default:console.warn("THREE.ColladaLoader: Unknown primitive type:",lt.type)}Fe.addGroup(at,Gt,vt),at+=Gt,lt.material&&ut.push(lt.material);for(const Bt in nn){const Ft=nn[Bt];switch(Bt){case"VERTEX":for(const ki in z){const Vn=z[ki];switch(ki){case"POSITION":const Bi=V.array.length;if(ht(lt,C[Vn],Ft.offset,V.array),V.stride=C[Vn].stride,C.skinWeights&&C.skinIndices&&(ht(lt,C.skinIndices,Ft.offset,Qe.array),ht(lt,C.skinWeights,Ft.offset,ft.array)),lt.hasUV===!1&&R.uvsNeedsFix===!0){const ps=(V.array.length-Bi)/V.stride;for(let Zi=0;Zi<ps;Zi++)Ae.array.push(0,0)}break;case"NORMAL":ht(lt,C[Vn],Ft.offset,_e.array),_e.stride=C[Vn].stride;break;case"COLOR":ht(lt,C[Vn],Ft.offset,Xe.array),Xe.stride=C[Vn].stride;break;case"TEXCOORD":ht(lt,C[Vn],Ft.offset,Ae.array),Ae.stride=C[Vn].stride;break;case"TEXCOORD1":ht(lt,C[Vn],Ft.offset,it.array),Ae.stride=C[Vn].stride;break;default:console.warn('THREE.ColladaLoader: Semantic "%s" not handled in geometry build process.',ki)}}break;case"NORMAL":ht(lt,C[Ft.id],Ft.offset,_e.array),_e.stride=C[Ft.id].stride;break;case"COLOR":ht(lt,C[Ft.id],Ft.offset,Xe.array,!0),Xe.stride=C[Ft.id].stride;break;case"TEXCOORD":ht(lt,C[Ft.id],Ft.offset,Ae.array),Ae.stride=C[Ft.id].stride;break;case"TEXCOORD1":ht(lt,C[Ft.id],Ft.offset,it.array),it.stride=C[Ft.id].stride;break}}}return V.array.length>0&&Fe.setAttribute("position",new qe(V.array,V.stride)),_e.array.length>0&&Fe.setAttribute("normal",new qe(_e.array,_e.stride)),Xe.array.length>0&&Fe.setAttribute("color",new qe(Xe.array,Xe.stride)),Ae.array.length>0&&Fe.setAttribute("uv",new qe(Ae.array,Ae.stride)),it.array.length>0&&Fe.setAttribute("uv1",new qe(it.array,it.stride)),Qe.array.length>0&&Fe.setAttribute("skinIndex",new qe(Qe.array,Qe.stride)),ft.array.length>0&&Fe.setAttribute("skinWeight",new qe(ft.array,ft.stride)),N.data=Fe,N.type=R[0].type,N.materialKeys=ut,N}function ht(R,C,z,N,V=!1){const _e=R.p,Ae=R.stride,it=R.vcount;function Xe(Fe){let ut=_e[Fe+z]*ft;const at=ut+ft;for(;ut<at;ut++)N.push(Qe[ut]);if(V){const vt=N.length-ft-1;hn.setRGB(N[vt+0],N[vt+1],N[vt+2],on),N[vt+0]=hn.r,N[vt+1]=hn.g,N[vt+2]=hn.b}}const Qe=C.array,ft=C.stride;if(R.vcount!==void 0){let Fe=0;for(let ut=0,at=it.length;ut<at;ut++){const vt=it[ut];if(vt===4){const lt=Fe+Ae*0,nn=Fe+Ae*1,Gt=Fe+Ae*2,Bt=Fe+Ae*3;Xe(lt),Xe(nn),Xe(Bt),Xe(nn),Xe(Gt),Xe(Bt)}else if(vt===3){const lt=Fe+Ae*0,nn=Fe+Ae*1,Gt=Fe+Ae*2;Xe(lt),Xe(nn),Xe(Gt)}else if(vt>4)for(let lt=1,nn=vt-2;lt<=nn;lt++){const Gt=Fe+Ae*0,Bt=Fe+Ae*lt,Ft=Fe+Ae*(lt+1);Xe(Gt),Xe(Bt),Xe(Ft)}Fe+=Ae*vt}}else for(let Fe=0,ut=_e.length;Fe<ut;Fe+=Ae)Xe(Fe)}function jt(R){return v(St.geometries[R],tt)}function $t(R){const C={name:R.getAttribute("name")||"",joints:{},links:[]};for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];if(N.nodeType===1)switch(N.nodeName){case"technique_common":Nn(N,C);break}}St.kinematicsModels[R.getAttribute("id")]=C}function an(R){return R.build!==void 0?R.build:R}function Zn(R){return v(St.kinematicsModels[R],an)}function Nn(R,C){for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];if(N.nodeType===1)switch(N.nodeName){case"joint":C.joints[N.getAttribute("sid")]=ni(N);break;case"link":C.links.push(Ai(N));break}}}function ni(R){let C;for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];if(N.nodeType===1)switch(N.nodeName){case"prismatic":case"revolute":C=Ti(N);break}}return C}function Ti(R){const C={sid:R.getAttribute("sid"),name:R.getAttribute("name")||"",axis:new I,limits:{min:0,max:0},type:R.nodeName,static:!1,zeroPosition:0,middlePosition:0};for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];if(N.nodeType===1)switch(N.nodeName){case"axis":const V=r(N.textContent);C.axis.fromArray(V);break;case"limits":const _e=N.getElementsByTagName("max")[0],Ae=N.getElementsByTagName("min")[0];C.limits.max=parseFloat(_e.textContent),C.limits.min=parseFloat(Ae.textContent);break}}return C.limits.min>=C.limits.max&&(C.static=!0),C.middlePosition=(C.limits.min+C.limits.max)/2,C}function Ai(R){const C={sid:R.getAttribute("sid"),name:R.getAttribute("name")||"",attachments:[],transforms:[]};for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];if(N.nodeType===1)switch(N.nodeName){case"attachment_full":C.attachments.push(Jn(N));break;case"matrix":case"translate":case"rotate":C.transforms.push(yn(N));break}}return C}function Jn(R){const C={joint:R.getAttribute("joint").split("/").pop(),transforms:[],links:[]};for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];if(N.nodeType===1)switch(N.nodeName){case"link":C.links.push(Ai(N));break;case"matrix":case"translate":case"rotate":C.transforms.push(yn(N));break}}return C}function yn(R){const C={type:R.nodeName},z=r(R.textContent);switch(C.type){case"matrix":C.obj=new ct,C.obj.fromArray(z).transpose();break;case"translate":C.obj=new I,C.obj.fromArray(z);break;case"rotate":C.obj=new I,C.obj.fromArray(z),C.angle=gr.degToRad(z[3]);break}return C}function hi(R){const C={name:R.getAttribute("name")||"",rigidBodies:{}};for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];if(N.nodeType===1)switch(N.nodeName){case"rigid_body":C.rigidBodies[N.getAttribute("name")]={},us(N,C.rigidBodies[N.getAttribute("name")]);break}}St.physicsModels[R.getAttribute("id")]=C}function us(R,C){for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];if(N.nodeType===1)switch(N.nodeName){case"technique_common":Gr(N,C);break}}}function Gr(R,C){for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];if(N.nodeType===1)switch(N.nodeName){case"inertia":C.inertia=r(N.textContent);break;case"mass":C.mass=r(N.textContent)[0];break}}}function sa(R){const C={bindJointAxis:[]};for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];if(N.nodeType===1)switch(N.nodeName){case"bind_joint_axis":C.bindJointAxis.push(fo(N));break}}St.kinematicsScenes[a(R.getAttribute("url"))]=C}function fo(R){const C={target:R.getAttribute("target").split("/").pop()};for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];if(N.nodeType===1)switch(N.nodeName){case"axis":const V=N.getElementsByTagName("param")[0];C.axis=V.textContent;const _e=C.axis.split("inst_").pop().split("axis")[0];C.jointIndex=_e.substring(0,_e.length-1);break}}return C}function Hr(R){return R.build!==void 0?R.build:R}function ds(R){return v(St.kinematicsScenes[R],Hr)}function oa(){const R=Object.keys(St.kinematicsModels)[0],C=Object.keys(St.kinematicsScenes)[0],z=Object.keys(St.visualScenes)[0];if(R===void 0||C===void 0)return;const N=Zn(R),V=ds(C),_e=zt(z),Ae=V.bindJointAxis,it={};for(let ft=0,Fe=Ae.length;ft<Fe;ft++){const ut=Ae[ft],at=Yt.querySelector('[sid="'+ut.target+'"]');if(at){const vt=at.parentElement;Xe(ut.jointIndex,vt)}}function Xe(ft,Fe){const ut=Fe.getAttribute("name"),at=N.joints[ft];_e.traverse(function(vt){vt.name===ut&&(it[ft]={object:vt,transforms:po(Fe),joint:at,position:at.zeroPosition})})}const Qe=new ct;qi={joints:N&&N.joints,getJointValue:function(ft){const Fe=it[ft];if(Fe)return Fe.position;console.warn("THREE.ColladaLoader: Joint "+ft+" doesn't exist.")},setJointValue:function(ft,Fe){const ut=it[ft];if(ut){const at=ut.joint;if(Fe>at.limits.max||Fe<at.limits.min)console.warn("THREE.ColladaLoader: Joint "+ft+" value "+Fe+" outside of limits (min: "+at.limits.min+", max: "+at.limits.max+").");else if(at.static)console.warn("THREE.ColladaLoader: Joint "+ft+" is static.");else{const vt=ut.object,lt=at.axis,nn=ut.transforms;oe.identity();for(let Gt=0;Gt<nn.length;Gt++){const Bt=nn[Gt];if(Bt.sid&&Bt.sid.indexOf(ft)!==-1)switch(at.type){case"revolute":oe.multiply(Qe.makeRotationAxis(lt,gr.degToRad(Fe)));break;case"prismatic":oe.multiply(Qe.makeTranslation(lt.x*Fe,lt.y*Fe,lt.z*Fe));break;default:console.warn("THREE.ColladaLoader: Unknown joint type: "+at.type);break}else switch(Bt.type){case"matrix":oe.multiply(Bt.obj);break;case"translate":oe.multiply(Qe.makeTranslation(Bt.obj.x,Bt.obj.y,Bt.obj.z));break;case"scale":oe.scale(Bt.obj);break;case"rotate":oe.multiply(Qe.makeRotationAxis(Bt.obj,Bt.angle));break}}vt.matrix.copy(oe),vt.matrix.decompose(vt.position,vt.quaternion,vt.scale),it[ft].position=Fe}}else console.log("THREE.ColladaLoader: "+ft+" does not exist.")}}}function po(R){const C=[],z=Yt.querySelector('[id="'+R.id+'"]');for(let N=0;N<z.childNodes.length;N++){const V=z.childNodes[N];if(V.nodeType!==1)continue;let _e,Ae;switch(V.nodeName){case"matrix":_e=r(V.textContent);const it=new ct().fromArray(_e).transpose();C.push({sid:V.getAttribute("sid"),type:V.nodeName,obj:it});break;case"translate":case"scale":_e=r(V.textContent),Ae=new I().fromArray(_e),C.push({sid:V.getAttribute("sid"),type:V.nodeName,obj:Ae});break;case"rotate":_e=r(V.textContent),Ae=new I().fromArray(_e);const Xe=gr.degToRad(_e[3]);C.push({sid:V.getAttribute("sid"),type:V.nodeName,obj:Ae,angle:Xe});break}}return C}function B(R){const C=R.getElementsByTagName("node");for(let z=0;z<C.length;z++){const N=C[z];N.hasAttribute("id")===!1&&N.setAttribute("id",l())}}const oe=new ct,ge=new I;function se(R){const C={name:R.getAttribute("name")||"",type:R.getAttribute("type"),id:R.getAttribute("id"),sid:R.getAttribute("sid"),matrix:new ct,nodes:[],instanceCameras:[],instanceControllers:[],instanceLights:[],instanceGeometries:[],instanceNodes:[],transforms:{}};for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];if(N.nodeType!==1)continue;let V;switch(N.nodeName){case"node":C.nodes.push(N.getAttribute("id")),se(N);break;case"instance_camera":C.instanceCameras.push(a(N.getAttribute("url")));break;case"instance_controller":C.instanceControllers.push(le(N));break;case"instance_light":C.instanceLights.push(a(N.getAttribute("url")));break;case"instance_geometry":C.instanceGeometries.push(le(N));break;case"instance_node":C.instanceNodes.push(a(N.getAttribute("url")));break;case"matrix":V=r(N.textContent),C.matrix.multiply(oe.fromArray(V).transpose()),C.transforms[N.getAttribute("sid")]=N.nodeName;break;case"translate":V=r(N.textContent),ge.fromArray(V),C.matrix.multiply(oe.makeTranslation(ge.x,ge.y,ge.z)),C.transforms[N.getAttribute("sid")]=N.nodeName;break;case"rotate":V=r(N.textContent);const _e=gr.degToRad(V[3]);C.matrix.multiply(oe.makeRotationAxis(ge.fromArray(V),_e)),C.transforms[N.getAttribute("sid")]=N.nodeName;break;case"scale":V=r(N.textContent),C.matrix.scale(ge.fromArray(V)),C.transforms[N.getAttribute("sid")]=N.nodeName;break;case"extra":break;default:console.log(N)}}return pt(C.id)?console.warn("THREE.ColladaLoader: There is already a node with ID %s. Exclude current node from further processing.",C.id):St.nodes[C.id]=C,C}function le(R){const C={id:a(R.getAttribute("url")),materials:{},skeletons:[]};for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];switch(N.nodeName){case"bind_material":const V=N.getElementsByTagName("instance_material");for(let _e=0;_e<V.length;_e++){const Ae=V[_e],it=Ae.getAttribute("symbol"),Xe=Ae.getAttribute("target");C.materials[it]=a(Xe)}break;case"skeleton":C.skeletons.push(a(N.textContent));break}}return C}function Be(R,C){const z=[],N=[];let V,_e,Ae;for(V=0;V<R.length;V++){const Qe=R[V];let ft;if(pt(Qe))ft=Tt(Qe),Je(ft,C,z);else if(Wt(Qe)){const ut=St.visualScenes[Qe].children;for(let at=0;at<ut.length;at++){const vt=ut[at];if(vt.type==="JOINT"){const lt=Tt(vt.id);Je(lt,C,z)}}}else console.error("THREE.ColladaLoader: Unable to find root bone of skeleton with ID:",Qe)}for(V=0;V<C.length;V++)for(_e=0;_e<z.length;_e++)if(Ae=z[_e],Ae.bone.name===C[V].name){N[V]=Ae,Ae.processed=!0;break}for(V=0;V<z.length;V++)Ae=z[V],Ae.processed===!1&&(N.push(Ae),Ae.processed=!0);const it=[],Xe=[];for(V=0;V<N.length;V++)Ae=N[V],it.push(Ae.bone),Xe.push(Ae.boneInverse);return new Ml(it,Xe)}function Je(R,C,z){R.traverse(function(N){if(N.isBone===!0){let V;for(let _e=0;_e<C.length;_e++){const Ae=C[_e];if(Ae.name===N.name){V=Ae.boneInverse;break}}V===void 0&&(V=new ct),z.push({bone:N,boneInverse:V,processed:!1})}})}function ot(R){const C=[],z=R.matrix,N=R.nodes,V=R.type,_e=R.instanceCameras,Ae=R.instanceControllers,it=R.instanceLights,Xe=R.instanceGeometries,Qe=R.instanceNodes;for(let Fe=0,ut=N.length;Fe<ut;Fe++)C.push(Tt(N[Fe]));for(let Fe=0,ut=_e.length;Fe<ut;Fe++){const at=Le(_e[Fe]);at!==null&&C.push(at.clone())}for(let Fe=0,ut=Ae.length;Fe<ut;Fe++){const at=Ae[Fe],vt=W(at.id),lt=jt(vt.id),nn=_t(lt,at.materials),Gt=at.skeletons,Bt=vt.skin.joints,Ft=Be(Gt,Bt);for(let ki=0,Vn=nn.length;ki<Vn;ki++){const Bi=nn[ki];Bi.isSkinnedMesh&&(Bi.bind(Ft,vt.skin.bindMatrix),Bi.normalizeSkinWeights()),C.push(Bi)}}for(let Fe=0,ut=it.length;Fe<ut;Fe++){const at=ie(it[Fe]);at!==null&&C.push(at.clone())}for(let Fe=0,ut=Xe.length;Fe<ut;Fe++){const at=Xe[Fe],vt=jt(at.id),lt=_t(vt,at.materials);for(let nn=0,Gt=lt.length;nn<Gt;nn++)C.push(lt[nn])}for(let Fe=0,ut=Qe.length;Fe<ut;Fe++)C.push(Tt(Qe[Fe]).clone());let ft;if(N.length===0&&C.length===1)ft=C[0];else{ft=V==="JOINT"?new eu:new Di;for(let Fe=0;Fe<C.length;Fe++)ft.add(C[Fe])}return ft.name=V==="JOINT"?R.sid:R.name,ft.matrix.copy(z),ft.matrix.decompose(ft.position,ft.quaternion,ft.scale),ft}const nt=new Bn({name:zn.DEFAULT_MATERIAL_NAME,color:16711935});function bt(R,C){const z=[];for(let N=0,V=R.length;N<V;N++){const _e=C[R[N]];_e===void 0?(console.warn("THREE.ColladaLoader: Material with key %s not found. Apply fallback material.",R[N]),z.push(nt)):z.push(ae(_e))}return z}function _t(R,C){const z=[];for(const N in R){const V=R[N],_e=bt(V.materialKeys,C);if(_e.length===0&&(N==="lines"||N==="linestrips"?_e.push(new En):_e.push(new ol)),N==="lines"||N==="linestrips")for(let Qe=0,ft=_e.length;Qe<ft;Qe++){const Fe=_e[Qe];if(Fe.isMeshPhongMaterial===!0||Fe.isMeshLambertMaterial===!0){const ut=new En;ut.color.copy(Fe.color),ut.opacity=Fe.opacity,ut.transparent=Fe.transparent,_e[Qe]=ut}}const Ae=V.data.attributes.skinIndex!==void 0,it=_e.length===1?_e[0]:_e;let Xe;switch(N){case"lines":Xe=new Oi(V.data,it);break;case"linestrips":Xe=new jn(V.data,it);break;case"triangles":case"polylist":Ae?Xe=new Jf(V.data,it):Xe=new ze(V.data,it);break}z.push(Xe)}return z}function pt(R){return St.nodes[R]!==void 0}function Tt(R){return v(St.nodes[R],ot)}function kt(R){const C={name:R.getAttribute("name"),children:[]};B(R);const z=i(R,"node");for(let N=0;N<z.length;N++)C.children.push(se(z[N]));St.visualScenes[R.getAttribute("id")]=C}function en(R){const C=new Di;C.name=R.name;const z=R.children;for(let N=0;N<z.length;N++){const V=z[N];C.add(Tt(V.id))}return C}function Wt(R){return St.visualScenes[R]!==void 0}function zt(R){return v(St.visualScenes[R],en)}function mt(R){const C=i(R,"instance_visual_scene")[0];return zt(a(C.getAttribute("url")))}function Zt(){const R=St.clips;if(c(R)===!0){if(c(St.animations)===!1){const C=[];for(const z in St.animations){const N=_(z);for(let V=0,_e=N.length;V<_e;V++)C.push(N[V])}ln.push(new ro("default",-1,C))}}else for(const C in R)ln.push(Y(C))}function Dt(R){let C="";const z=[R];for(;z.length;){const N=z.shift();N.nodeType===Node.TEXT_NODE?C+=N.textContent:(C+=`
`,z.push(...N.childNodes))}return C.trim()}if(e.length===0)return{scene:new bl};const Tn=new DOMParser().parseFromString(e,"application/xml"),Yt=i(Tn,"COLLADA")[0],xn=Tn.getElementsByTagName("parsererror")[0];if(xn!==void 0){const R=i(xn,"div")[0];let C;return R?C=R.textContent:C=Dt(xn),console.error(`THREE.ColladaLoader: Failed to parse collada file.
`,C),null}const On=Yt.getAttribute("version");console.debug("THREE.ColladaLoader: File version",On);const Jt=h(i(Yt,"asset")[0]),An=new m_(this.manager);An.setPath(this.resourcePath||t).setCrossOrigin(this.crossOrigin);let pn;T0&&(pn=new T0(this.manager),pn.setPath(this.resourcePath||t));const hn=new Ge,ln=[];let qi={},Ci=0;const St={animations:{},clips:{},controllers:{},images:{},effects:{},materials:{},cameras:{},lights:{},geometries:{},nodes:{},visualScenes:{},kinematicsModels:{},physicsModels:{},kinematicsScenes:{}};f(Yt,"library_animations","animation",m),f(Yt,"library_animation_clips","animation_clip",F),f(Yt,"library_controllers","controller",j),f(Yt,"library_images","image",J),f(Yt,"library_effects","effect",me),f(Yt,"library_materials","material",ee),f(Yt,"library_cameras","camera",De),f(Yt,"library_lights","light",Ue),f(Yt,"library_geometries","geometry",Re),f(Yt,"library_nodes","node",se),f(Yt,"library_visual_scenes","visual_scene",kt),f(Yt,"library_kinematics_models","kinematics_model",$t),f(Yt,"library_physics_models","physics_model",hi),f(Yt,"scene","instance_kinematics_scene",sa),p(St.animations,y),p(St.clips,te),p(St.controllers,Q),p(St.images,X),p(St.effects,O),p(St.materials,ue),p(St.cameras,Se),p(St.lights,dt),p(St.geometries,tt),p(St.visualScenes,en),Zt(),oa();const fs=mt(i(Yt,"scene")[0]);return fs.animations=ln,Jt.upAxis==="Z_UP"&&(console.warn("THREE.ColladaLoader: You are loading an asset with a Z-UP coordinate system. The loader just rotates the asset to transform it into Y-UP. The vertex data are not converted, see #24289."),fs.rotation.set(-Math.PI/2,0,0)),fs.scale.multiplyScalar(Jt.unit),{get animations(){return console.warn("THREE.ColladaLoader: Please access animations over scene.animations now."),ln},kinematics:qi,library:St,scene:fs}}}var pP=Qt("<!> <!>",1);function mP(s,e){Ln(e,!0);let t=Ve(e,"color",19,()=>new Ge("pink")),i=Ve(e,"scale",19,()=>[1,1,1]),n=Ve(e,"rotation",19,()=>[0,0,0]),r=Ve(e,"position",19,()=>[0,0,0]),o=Ve(e,"onclick",3,()=>{}),a=Ve(e,"opacity",3,1),l=xi(is([1,1,1])),c=xi(is([0,0,0])),h=xi(is([0,0,0])),u=xi(is([]));const d=[Math.PI/2,-Math.PI/2,-Math.PI/2];z_(fP).load(e.filename).subscribe(x=>{if(!x)return;let y=x.scene;li(l,y.scale.toArray(),!0),li(c,y.position.toArray(),!0),li(h,y.rotation?y.rotation.toArray():K(h),!0);let _=[];x.scene.traverse(E=>{E.type==="Mesh"&&_.push(E)}),li(u,_,!0)});var v=gt(),m=Ye(v);{var g=x=>{var y=pP(),_=Ye(y);gl(_,()=>`<!-- include dae: ${e.filename} ${i()} -->`);var E=yt(_,2);Ut(E,()=>wt.Group,(w,M)=>{M(w,{get scale(){return i()},get position(){return r()},get rotation(){return n()},children:(T,S)=>{var b=gt(),P=Ye(b);Ut(P,()=>wt.Group,(D,G)=>{G(D,{get rotation(){return d},children:(H,q)=>{var F=gt(),te=Ye(F);Ut(te,()=>wt.Group,(Y,j)=>{j(Y,{get scale(){return K(l)},get position(){return K(c)},get rotation(){return K(h)},children:($,L)=>{var Z=gt(),Q=Ye(Z);Ur(Q,17,()=>K(u),Lr,(k,W)=>{var J=gt(),X=Ye(J);{let ne=st(()=>K(W).scale?K(W).scale.toArray():[1,1,1]),me=st(()=>K(W).position?K(W).position.toArray():[0,0,0]);Ut(X,()=>wt.Mesh,(be,we)=>{we(be,{castShadow:!0,receiveShadow:!0,get geometry(){return K(W).geometry},get scale(){return K(ne)},get position(){return K(me)},get material(){return K(W).material},get onclick(){return o()},children:(ve,Ie)=>{var U=gt(),fe=Ye(U);{var he=xe=>{var re=gt(),Te=Ye(re);{var pe=ke=>{var O=gt(),A=Ye(O);Ut(A,()=>wt.MeshLambertMaterial,(ee,de)=>{de(ee,{get color(){return t()},get opacity(){return a()},transparent:!0})}),We(ke,O)},ce=ke=>{var O=gt(),A=Ye(O);Ut(A,()=>wt.MeshLambertMaterial,(ee,de)=>{de(ee,{get color(){return t()}})}),We(ke,O)};Ot(Te,ke=>{a()<1?ke(pe):ke(ce,!1)})}We(xe,re)};Ot(fe,xe=>{t()&&xe(he)})}We(ve,U)},$$slots:{default:!0}})})}We(k,J)}),We($,Z)},$$slots:{default:!0}})}),We(H,F)},$$slots:{default:!0}})}),We(T,b)},$$slots:{default:!0}})}),We(x,y)};Ot(m,x=>{K(u).length>0&&x(g)})}We(s,v),Un()}const gP=/^[og]\s*(.+)?/,vP=/^mtllib /,_P=/^usemtl /,yP=/^usemap /,A0=/\s+/,C0=new I,Yd=new I,R0=new I,P0=new I,Vi=new I,Oc=new Ge;function xP(){const s={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(e,t){if(this.object&&this.object.fromDeclaration===!1){this.object.name=e,this.object.fromDeclaration=t!==!1;return}const i=this.object&&typeof this.object.currentMaterial=="function"?this.object.currentMaterial():void 0;if(this.object&&typeof this.object._finalize=="function"&&this.object._finalize(!0),this.object={name:e||"",fromDeclaration:t!==!1,geometry:{vertices:[],normals:[],colors:[],uvs:[],hasUVIndices:!1},materials:[],smooth:!0,startMaterial:function(n,r){const o=this._finalize(!1);o&&(o.inherited||o.groupCount<=0)&&this.materials.splice(o.index,1);const a={index:this.materials.length,name:n||"",mtllib:Array.isArray(r)&&r.length>0?r[r.length-1]:"",smooth:o!==void 0?o.smooth:this.smooth,groupStart:o!==void 0?o.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(l){const c={index:typeof l=="number"?l:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return c.clone=this.clone.bind(c),c}};return this.materials.push(a),a},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(n){const r=this.currentMaterial();if(r&&r.groupEnd===-1&&(r.groupEnd=this.geometry.vertices.length/3,r.groupCount=r.groupEnd-r.groupStart,r.inherited=!1),n&&this.materials.length>1)for(let o=this.materials.length-1;o>=0;o--)this.materials[o].groupCount<=0&&this.materials.splice(o,1);return n&&this.materials.length===0&&this.materials.push({name:"",smooth:this.smooth}),r}},i&&i.name&&typeof i.clone=="function"){const n=i.clone(0);n.inherited=!0,this.object.materials.push(n)}this.objects.push(this.object)},finalize:function(){this.object&&typeof this.object._finalize=="function"&&this.object._finalize(!0)},parseVertexIndex:function(e,t){const i=parseInt(e,10);return(i>=0?i-1:i+t/3)*3},parseNormalIndex:function(e,t){const i=parseInt(e,10);return(i>=0?i-1:i+t/3)*3},parseUVIndex:function(e,t){const i=parseInt(e,10);return(i>=0?i-1:i+t/2)*2},addVertex:function(e,t,i){const n=this.vertices,r=this.object.geometry.vertices;r.push(n[e+0],n[e+1],n[e+2]),r.push(n[t+0],n[t+1],n[t+2]),r.push(n[i+0],n[i+1],n[i+2])},addVertexPoint:function(e){const t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addVertexLine:function(e){const t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addNormal:function(e,t,i){const n=this.normals,r=this.object.geometry.normals;r.push(n[e+0],n[e+1],n[e+2]),r.push(n[t+0],n[t+1],n[t+2]),r.push(n[i+0],n[i+1],n[i+2])},addFaceNormal:function(e,t,i){const n=this.vertices,r=this.object.geometry.normals;C0.fromArray(n,e),Yd.fromArray(n,t),R0.fromArray(n,i),Vi.subVectors(R0,Yd),P0.subVectors(C0,Yd),Vi.cross(P0),Vi.normalize(),r.push(Vi.x,Vi.y,Vi.z),r.push(Vi.x,Vi.y,Vi.z),r.push(Vi.x,Vi.y,Vi.z)},addColor:function(e,t,i){const n=this.colors,r=this.object.geometry.colors;n[e]!==void 0&&r.push(n[e+0],n[e+1],n[e+2]),n[t]!==void 0&&r.push(n[t+0],n[t+1],n[t+2]),n[i]!==void 0&&r.push(n[i+0],n[i+1],n[i+2])},addUV:function(e,t,i){const n=this.uvs,r=this.object.geometry.uvs;r.push(n[e+0],n[e+1]),r.push(n[t+0],n[t+1]),r.push(n[i+0],n[i+1])},addDefaultUV:function(){const e=this.object.geometry.uvs;e.push(0,0),e.push(0,0),e.push(0,0)},addUVLine:function(e){const t=this.uvs;this.object.geometry.uvs.push(t[e+0],t[e+1])},addFace:function(e,t,i,n,r,o,a,l,c){const h=this.vertices.length;let u=this.parseVertexIndex(e,h),d=this.parseVertexIndex(t,h),f=this.parseVertexIndex(i,h);if(this.addVertex(u,d,f),this.addColor(u,d,f),a!==void 0&&a!==""){const p=this.normals.length;u=this.parseNormalIndex(a,p),d=this.parseNormalIndex(l,p),f=this.parseNormalIndex(c,p),this.addNormal(u,d,f)}else this.addFaceNormal(u,d,f);if(n!==void 0&&n!==""){const p=this.uvs.length;u=this.parseUVIndex(n,p),d=this.parseUVIndex(r,p),f=this.parseUVIndex(o,p),this.addUV(u,d,f),this.object.geometry.hasUVIndices=!0}else this.addDefaultUV()},addPointGeometry:function(e){this.object.geometry.type="Points";const t=this.vertices.length;for(let i=0,n=e.length;i<n;i++){const r=this.parseVertexIndex(e[i],t);this.addVertexPoint(r),this.addColor(r)}},addLineGeometry:function(e,t){this.object.geometry.type="Line";const i=this.vertices.length,n=this.uvs.length;for(let r=0,o=e.length;r<o;r++)this.addVertexLine(this.parseVertexIndex(e[r],i));for(let r=0,o=t.length;r<o;r++)this.addUVLine(this.parseUVIndex(t[r],n))}};return s.startObject("",!1),s}class bP extends zn{constructor(e){super(e),this.materials=null}load(e,t,i,n){const r=this,o=new ji(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(r.parse(a))}catch(l){n?n(l):console.error(l),r.manager.itemError(e)}},i,n)}setMaterials(e){return this.materials=e,this}parse(e){const t=new xP;e.indexOf(`\r
`)!==-1&&(e=e.replace(/\r\n/g,`
`)),e.indexOf(`\\
`)!==-1&&(e=e.replace(/\\\n/g,""));const i=e.split(`
`);let n=[];for(let a=0,l=i.length;a<l;a++){const c=i[a].trimStart();if(c.length===0)continue;const h=c.charAt(0);if(h!=="#")if(h==="v"){const u=c.split(A0);switch(u[0]){case"v":t.vertices.push(parseFloat(u[1]),parseFloat(u[2]),parseFloat(u[3])),u.length>=7?(Oc.setRGB(parseFloat(u[4]),parseFloat(u[5]),parseFloat(u[6]),on),t.colors.push(Oc.r,Oc.g,Oc.b)):t.colors.push(void 0,void 0,void 0);break;case"vn":t.normals.push(parseFloat(u[1]),parseFloat(u[2]),parseFloat(u[3]));break;case"vt":t.uvs.push(parseFloat(u[1]),parseFloat(u[2]));break}}else if(h==="f"){const d=c.slice(1).trim().split(A0),f=[];for(let v=0,m=d.length;v<m;v++){const g=d[v];if(g.length>0){const x=g.split("/");f.push(x)}}const p=f[0];for(let v=1,m=f.length-1;v<m;v++){const g=f[v],x=f[v+1];t.addFace(p[0],g[0],x[0],p[1],g[1],x[1],p[2],g[2],x[2])}}else if(h==="l"){const u=c.substring(1).trim().split(" ");let d=[];const f=[];if(c.indexOf("/")===-1)d=u;else for(let p=0,v=u.length;p<v;p++){const m=u[p].split("/");m[0]!==""&&d.push(m[0]),m[1]!==""&&f.push(m[1])}t.addLineGeometry(d,f)}else if(h==="p"){const d=c.slice(1).trim().split(" ");t.addPointGeometry(d)}else if((n=gP.exec(c))!==null){const u=(" "+n[0].slice(1).trim()).slice(1);t.startObject(u)}else if(_P.test(c))t.object.startMaterial(c.substring(7).trim(),t.materialLibraries);else if(vP.test(c))t.materialLibraries.push(c.substring(7).trim());else if(yP.test(c))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if(h==="s"){if(n=c.split(" "),n.length>1){const d=n[1].trim().toLowerCase();t.object.smooth=d!=="0"&&d!=="off"}else t.object.smooth=!0;const u=t.object.currentMaterial();u&&(u.smooth=t.object.smooth)}else{if(c==="\0")continue;console.warn('THREE.OBJLoader: Unexpected line: "'+c+'"')}}t.finalize();const r=new Di;if(r.materialLibraries=[].concat(t.materialLibraries),!(t.objects.length===1&&t.objects[0].geometry.vertices.length===0)===!0)for(let a=0,l=t.objects.length;a<l;a++){const c=t.objects[a],h=c.geometry,u=c.materials,d=h.type==="Line",f=h.type==="Points";let p=!1;if(h.vertices.length===0)continue;const v=new xt;v.setAttribute("position",new qe(h.vertices,3)),h.normals.length>0&&v.setAttribute("normal",new qe(h.normals,3)),h.colors.length>0&&(p=!0,v.setAttribute("color",new qe(h.colors,3))),h.hasUVIndices===!0&&v.setAttribute("uv",new qe(h.uvs,2));const m=[];for(let x=0,y=u.length;x<y;x++){const _=u[x],E=_.name+"_"+_.smooth+"_"+p;let w=t.materials[E];if(this.materials!==null){if(w=this.materials.create(_.name),d&&w&&!(w instanceof En)){const M=new En;kn.prototype.copy.call(M,w),M.color.copy(w.color),w=M}else if(f&&w&&!(w instanceof Xs)){const M=new Xs({size:10,sizeAttenuation:!1});kn.prototype.copy.call(M,w),M.color.copy(w.color),M.map=w.map,w=M}}w===void 0&&(d?w=new En:f?w=new Xs({size:1,sizeAttenuation:!1}):w=new ol,w.name=_.name,w.flatShading=!_.smooth,w.vertexColors=p,t.materials[E]=w),m.push(w)}let g;if(m.length>1){for(let x=0,y=u.length;x<y;x++){const _=u[x];v.addGroup(_.groupStart,_.groupCount,x)}d?g=new Oi(v,m):f?g=new Va(v,m):g=new ze(v,m)}else d?g=new Oi(v,m[0]):f?g=new Va(v,m[0]):g=new ze(v,m[0]);g.name=c.name,r.add(g)}else if(t.vertices.length>0){const a=new Xs({size:1,sizeAttenuation:!1}),l=new xt;l.setAttribute("position",new qe(t.vertices,3)),t.colors.length>0&&t.colors[0]!==void 0&&(l.setAttribute("color",new qe(t.colors,3)),a.vertexColors=!0);const c=new Va(l,a);r.add(c)}return r}}var SP=Qt("<!> <!>",1);function MP(s,e){Ln(e,!0);let t=Ve(e,"color",19,()=>new Ge("pink")),i=Ve(e,"scale",19,()=>[1,1,1]),n=Ve(e,"rotation",19,()=>[0,0,0]),r=Ve(e,"position",19,()=>[0,0,0]),o=Ve(e,"onclick",3,()=>{}),a=Ve(e,"opacity",3,1),l=xi(void 0);new bP().load(e.filename,f=>{li(l,f,!0)});var h=gt(),u=Ye(h);{var d=f=>{var p=SP(),v=Ye(p);gl(v,()=>`<!-- include obj: ${e.filename} ${i()} -->`);var m=yt(v,2);wt(m,{get is(){return K(l)},get onclick(){return o()},get position(){return r()},get rotation(){return n()},get scale(){return i()},children:(g,x)=>{var y=gt(),_=Ye(y);{var E=M=>{var T=gt(),S=Ye(T);Ut(S,()=>wt.MeshLambertMaterial,(b,P)=>{P(b,{get color(){return t()},get opacity(){return a()},transparent:!0})}),We(M,T)},w=M=>{var T=gt(),S=Ye(T);Ut(S,()=>wt.MeshLambertMaterial,(b,P)=>{P(b,{get color(){return t()}})}),We(M,T)};Ot(_,M=>{a()<1?M(E):M(w,!1)})}We(g,y)},$$slots:{default:!0}}),We(f,p)};Ot(u,f=>{K(l)&&f(d)})}We(s,h),Un()}class wP extends zn{constructor(e){super(e)}load(e,t,i,n){const r=this,o=new ji(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(r.parse(a))}catch(l){n?n(l):console.error(l),r.manager.itemError(e)}},i,n)}parse(e){function t(c){const h=new DataView(c),u=32/8*3+32/8*3*3+16/8,d=h.getUint32(80,!0);if(80+32/8+d*u===h.byteLength)return!0;const p=[115,111,108,105,100];for(let v=0;v<5;v++)if(i(p,h,v))return!1;return!0}function i(c,h,u){for(let d=0,f=c.length;d<f;d++)if(c[d]!==h.getUint8(u+d))return!1;return!0}function n(c){const h=new DataView(c),u=h.getUint32(80,!0);let d,f,p,v=!1,m,g,x,y,_;for(let P=0;P<70;P++)h.getUint32(P,!1)==1129270351&&h.getUint8(P+4)==82&&h.getUint8(P+5)==61&&(v=!0,m=new Float32Array(u*3*3),g=h.getUint8(P+6)/255,x=h.getUint8(P+7)/255,y=h.getUint8(P+8)/255,_=h.getUint8(P+9)/255);const E=84,w=50,M=new xt,T=new Float32Array(u*3*3),S=new Float32Array(u*3*3),b=new Ge;for(let P=0;P<u;P++){const D=E+P*w,G=h.getFloat32(D,!0),H=h.getFloat32(D+4,!0),q=h.getFloat32(D+8,!0);if(v){const F=h.getUint16(D+48,!0);(F&32768)===0?(d=(F&31)/31,f=(F>>5&31)/31,p=(F>>10&31)/31):(d=g,f=x,p=y)}for(let F=1;F<=3;F++){const te=D+F*12,Y=P*3*3+(F-1)*3;T[Y]=h.getFloat32(te,!0),T[Y+1]=h.getFloat32(te+4,!0),T[Y+2]=h.getFloat32(te+8,!0),S[Y]=G,S[Y+1]=H,S[Y+2]=q,v&&(b.setRGB(d,f,p,on),m[Y]=b.r,m[Y+1]=b.g,m[Y+2]=b.b)}}return M.setAttribute("position",new Rt(T,3)),M.setAttribute("normal",new Rt(S,3)),v&&(M.setAttribute("color",new Rt(m,3)),M.hasColors=!0,M.alpha=_),M}function r(c){const h=new xt,u=/solid([\s\S]*?)endsolid/g,d=/facet([\s\S]*?)endfacet/g,f=/solid\s(.+)/;let p=0;const v=/[\s]+([+-]?(?:\d*)(?:\.\d*)?(?:[eE][+-]?\d+)?)/.source,m=new RegExp("vertex"+v+v+v,"g"),g=new RegExp("normal"+v+v+v,"g"),x=[],y=[],_=[],E=new I;let w,M=0,T=0,S=0;for(;(w=u.exec(c))!==null;){T=S;const b=w[0],P=(w=f.exec(b))!==null?w[1]:"";for(_.push(P);(w=d.exec(b))!==null;){let H=0,q=0;const F=w[0];for(;(w=g.exec(F))!==null;)E.x=parseFloat(w[1]),E.y=parseFloat(w[2]),E.z=parseFloat(w[3]),q++;for(;(w=m.exec(F))!==null;)x.push(parseFloat(w[1]),parseFloat(w[2]),parseFloat(w[3])),y.push(E.x,E.y,E.z),H++,S++;q!==1&&console.error("THREE.STLLoader: Something isn't right with the normal of face number "+p),H!==3&&console.error("THREE.STLLoader: Something isn't right with the vertices of face number "+p),p++}const D=T,G=S-T;h.userData.groupNames=_,h.addGroup(D,G,M),M++}return h.setAttribute("position",new qe(x,3)),h.setAttribute("normal",new qe(y,3)),h}function o(c){return typeof c!="string"?new TextDecoder().decode(c):c}function a(c){if(typeof c=="string"){const h=new Uint8Array(c.length);for(let u=0;u<c.length;u++)h[u]=c.charCodeAt(u)&255;return h.buffer||h}else return c}const l=a(e);return t(l)?n(l):r(o(e))}}var EP=Qt("<!> <!>",1);function TP(s,e){Ln(e,!0);const[t,i]=ml(),n=()=>Wo(K(d),"$stl",t);let r=Ve(e,"color",19,()=>new Ge("pink")),o=Ve(e,"scale",19,()=>[1,1,1]),a=Ve(e,"rotation",19,()=>[0,0,0]),l=Ve(e,"position",19,()=>[0,0,0]),c=Ve(e,"onclick",3,()=>{}),h=Ve(e,"opacity",3,1);const u=z_(wP);let d=st(()=>u.load(e.filename));var f=gt(),p=Ye(f);{var v=m=>{var g=EP(),x=Ye(g);gl(x,()=>`<!-- include stl: ${e.filename} ${o()} -->`);var y=yt(x,2);Ut(y,()=>wt.Mesh,(_,E)=>{E(_,{castShadow:!0,receiveShadow:!0,get geometry(){return n()},get scale(){return o()},get onclick(){return c()},get position(){return l()},get rotation(){return a()},children:(w,M)=>{var T=gt(),S=Ye(T);{var b=D=>{var G=gt(),H=Ye(G);Ut(H,()=>wt.MeshLambertMaterial,(q,F)=>{F(q,{get color(){return r()},get opacity(){return h()},transparent:!0})}),We(D,G)},P=D=>{var G=gt(),H=Ye(G);Ut(H,()=>wt.MeshLambertMaterial,(q,F)=>{F(q,{get color(){return r()}})}),We(D,G)};Ot(S,D=>{h()<1?D(b):D(P,!1)})}We(w,T)},$$slots:{default:!0}})}),We(m,g)};Ot(p,m=>{n()&&m(v)})}We(s,f),Un(),i()}function vy(s,e){Ln(e,!0);let t=Ve(e,"origin",7),i=Ve(e,"selected",3,!1);const n=h=>{t().origin_xyz=h.position.toArray(),t().origin_rpy=[h.rotation.x,h.rotation.y,h.rotation.z],uP(t())},r=h=>{if(!h.target)return;const u=h.target.object;n(u),e.ondatachange&&e.ondatachange(h)};Fp();var o=gt(),a=Ye(o);{var l=h=>{{let u=st(()=>Math.PI/Oe.rotationSnap);BC(h,{get translationSnap(){return Oe.translationSnap},get scaleSnap(){return Oe.scaleSnap},get rotationSnap(){return K(u)},get position(){return t().origin_xyz},get rotation(){return t().origin_rpy},get mode(){return Oe.tool},onobjectChange:r,children:(d,f)=>{var p=gt(),v=Ye(p);Wi(v,()=>e.children??kr),We(d,p)},$$slots:{default:!0}})}},c=h=>{var u=gt(),d=Ye(u);Ut(d,()=>wt.Group,(f,p)=>{p(f,{get position(){return t().origin_xyz},get rotation(){return t().origin_rpy},children:(v,m)=>{var g=gt(),x=Ye(g);Wi(x,()=>e.children??kr),We(v,g)},$$slots:{default:!0}})}),We(h,u)};Ot(a,h=>{i()&&Oe.edit?h(l):h(c,!1)})}We(s,o),Un()}var AP=Qt("<!> <!>",1),CP=Qt("<!> <!>",1);function I0(s,e){Ln(e,!0);let t=Ve(e,"opacity",3,1),i=Ve(e,"color",3,void 0),n=Ve(e,"ondatachange",3,void 0);function r(){var h;return Oe.selectedLink==e.link?new Ge(Oe.highlightColor):(h=e.visual)!=null&&h.color_rgba?lP(e.visual.color_rgba):new Ge(i()||"gray")}const o=h=>{h.stopPropagation(),Oe.selectedLink=e.link,Oe.selectedJoint=void 0};Fp();var a=gt(),l=Ye(a);{var c=h=>{{let u=st(()=>Oe.selectedLink==e.link);vy(h,{get origin(){return e.visual},get ondatachange(){return n()},get selected(){return K(u)},children:(d,f)=>{var p=gt(),v=Ye(p);{var m=x=>{var y=gt(),_=Ye(y);{var E=M=>{{let T=st(r),S=st(()=>e.visual.geometry.scale||[1,1,1]);TP(M,{onclick:o,get filename(){return e.visual.geometry.filename},get color(){return K(T)},get opacity(){return t()},get scale(){return K(S)}})}},w=M=>{var T=gt(),S=Ye(T);{var b=D=>{{let G=st(r),H=st(()=>e.visual.geometry.scale||[1,1,1]);MP(D,{onclick:o,get filename(){return e.visual.geometry.filename},get color(){return K(G)},get opacity(){return t()},get scale(){return K(H)}})}},P=D=>{var G=gt(),H=Ye(G);{var q=F=>{{let te=st(r),Y=st(()=>e.visual.geometry.scale||[1,1,1]);mP(F,{onclick:o,get filename(){return e.visual.geometry.filename},get color(){return K(te)},get opacity(){return t()},get scale(){return K(Y)}})}};Ot(H,F=>{e.visual.geometry.type==="dae"&&F(q)},!0)}We(D,G)};Ot(S,D=>{e.visual.geometry.type==="obj"?D(b):D(P,!1)},!0)}We(M,T)};Ot(_,M=>{e.visual.geometry.type==="stl"?M(E):M(w,!1)})}We(x,y)},g=x=>{var y=gt(),_=Ye(y);{var E=M=>{var T=gt(),S=Ye(T);Ut(S,()=>wt.Mesh,(b,P)=>{P(b,{castShadow:!0,receiveShadow:!0,rotation:[Math.PI/2,0,0],onclick:o,children:(D,G)=>{var H=AP(),q=Ye(H);{let j=st(()=>[e.visual.geometry.radius,e.visual.geometry.radius,e.visual.geometry.length]);Ut(q,()=>wt.CylinderGeometry,($,L)=>{L($,{get args(){return K(j)}})})}var F=yt(q,2);{var te=j=>{var $=gt(),L=Ye($);{let Z=st(r);Ut(L,()=>wt.MeshBasicMaterial,(Q,k)=>{k(Q,{get color(){return K(Z)},get opacity(){return t()},transparent:!0})})}We(j,$)},Y=j=>{var $=gt(),L=Ye($);{let Z=st(r);Ut(L,()=>wt.MeshBasicMaterial,(Q,k)=>{k(Q,{get color(){return K(Z)}})})}We(j,$)};Ot(F,j=>{t()<1?j(te):j(Y,!1)})}We(D,H)},$$slots:{default:!0}})}),We(M,T)},w=M=>{var T=gt(),S=Ye(T);{var b=P=>{var D=gt(),G=Ye(D);{let H=st(()=>e.visual.geometry.size||[1,1,1]);Ut(G,()=>wt.Mesh,(q,F)=>{F(q,{castShadow:!0,receiveShadow:!0,get scale(){return K(H)},onclick:o,children:(te,Y)=>{var j=CP(),$=Ye(j);Ut($,()=>wt.BoxGeometry,(k,W)=>{W(k,{})});var L=yt($,2);{var Z=k=>{var W=gt(),J=Ye(W);{let X=st(r);Ut(J,()=>wt.MeshBasicMaterial,(ne,me)=>{me(ne,{get color(){return K(X)},get opacity(){return t()},transparent:!0})})}We(k,W)},Q=k=>{var W=gt(),J=Ye(W);{let X=st(r);Ut(J,()=>wt.MeshBasicMaterial,(ne,me)=>{me(ne,{get color(){return K(X)}})})}We(k,W)};Ot(L,k=>{t()<1?k(Z):k(Q,!1)})}We(te,j)},$$slots:{default:!0}})})}We(P,D)};Ot(S,P=>{e.visual.type==="box"&&P(b)},!0)}We(M,T)};Ot(_,M=>{e.visual.type==="cylinder"?M(E):M(w,!1)})}We(x,y)};Ot(v,x=>{e.visual.type==="mesh"&&e.visual.geometry?x(m):x(g,!1)})}We(d,p)},$$slots:{default:!0}})}};Ot(l,h=>{e.visual&&h(c)})}We(s,a),Un()}var RP=Qt("<!> <!>",1),PP=Qt("<!> <!>",1),IP=Qt("<!> <!>",1),DP=Qt("<!> <!>",1),LP=Qt("<!> <!>",1),UP=Qt("<!> <!> <!>",1),NP=Qt("<!> <!>",1);function OP(s,e){Ln(e,!0);let t=Ve(e,"ondatachange",3,void 0),i=.7;const n=c=>{c.stopPropagation(),Oe.selectedLink=void 0,Oe.selectedJoint=e.joint};Fp();var r=NP(),o=Ye(r);gl(o,()=>`<!-- Joint ${e.joint.name} (${e.joint.type}) -->`);var a=yt(o,2);{var l=c=>{var h=UP(),u=Ye(h);{var d=m=>{J_(m,{get"position.x"(){return e.joint.origin_xyz[0]},get"position.y"(){return e.joint.origin_xyz[1]},get"position.z"(){return e.joint.origin_xyz[2]},children:(g,x)=>{{let y=st(()=>gy(Oe.nameHeight)),_=st(()=>Oe.selectedJoint==e.joint?Oe.highlightColor:Oe.jointColor);cy(g,{get scale(){return K(y)},get color(){return K(_)},get text(){return e.joint.name}})}},$$slots:{default:!0}})};Ot(u,m=>{Oe.jointNames&&m(d)})}var f=yt(u,2);{var p=m=>{var g=gt(),x=Ye(g);Ut(x,()=>wt.Line,(y,_)=>{_(y,{children:(E,w)=>{var M=RP(),T=Ye(M);{let b=st(()=>[new I(0,0,0),new I(e.joint.origin_xyz[0],e.joint.origin_xyz[1],e.joint.origin_xyz[2])]);r0(T,{get points(){return K(b)}})}var S=yt(T,2);Ut(S,()=>wt.LineBasicMaterial,(b,P)=>{P(b,{get color(){return Oe.jointColor}})}),We(E,M)},$$slots:{default:!0}})}),We(m,g)};Ot(f,m=>{Oe.joints&&m(p)})}var v=yt(f,2);{let m=st(()=>Oe.selectedJoint==e.joint);vy(v,{get ondatachange(){return t()},get origin(){return e.joint},get selected(){return K(m)},children:(g,x)=>{var y=gt(),_=Ye(y);{let E=st(()=>e.joint.rotation||[0,0,0]);Ut(_,()=>wt.Group,(w,M)=>{M(w,{get rotation(){return K(E)},children:(T,S)=>{var b=LP(),P=Ye(b);{var D=q=>{_y(q,{get link(){return e.joint.child},get ondatachange(){return t()}})};Ot(P,q=>{e.joint.child&&q(D)})}var G=yt(P,2);{var H=q=>{var F=DP(),te=Ye(F);Ut(te,()=>wt.Line,(j,$)=>{$(j,{children:(L,Z)=>{var Q=PP(),k=Ye(Q);{let J=st(()=>[new I(0,0,0),new I(0,-.02,0)]);r0(k,{onclick:n,get points(){return K(J)}})}var W=yt(k,2);Ut(W,()=>wt.LineBasicMaterial,(J,X)=>{X(J,{get color(){return Oe.jointIndicatorColor}})}),We(L,Q)},$$slots:{default:!0}})});var Y=yt(te,2);Ut(Y,()=>wt.Mesh,(j,$)=>{$(j,{onclick:n,rotation:[Math.PI/2,0,0],children:(L,Z)=>{var Q=IP(),k=Ye(Q);Ut(k,()=>wt.CylinderGeometry,(X,ne)=>{ne(X,{args:[.004,.004,.03]})});var W=yt(k,2);{var J=X=>{var ne=gt(),me=Ye(ne);{let be=st(()=>Oe.selectedJoint==e.joint?Oe.highlightColor:Oe.jointColor);Ut(me,()=>wt.MeshBasicMaterial,(we,ve)=>{ve(we,{get color(){return K(be)},opacity:i,transparent:!0})})}We(X,ne)};Ot(W,X=>{X(J)})}We(L,Q)},$$slots:{default:!0}})}),We(q,F)};Ot(G,q=>{Oe.joints&&q(H)})}We(T,b)},$$slots:{default:!0}})})}We(g,y)},$$slots:{default:!0}})}We(c,h)};Ot(a,c=>{Oe.robot&&c(l)})}We(s,r),Un()}var FP=Qt("<!> <!> <!> <!> <!>",1);function _y(s,e){Ln(e,!0);let t=Ve(e,"ondatachange",3,void 0);function i(){return e.link.collision&&e.link.collision.length>0?e.link.collision[0].origin_xyz:e.link.visual&&e.link.visual.length>0?e.link.visual[0].origin_xyz:[0,0,0]}var n=gt(),r=Ye(n);{var o=a=>{var l=FP(),c=Ye(l);gl(c,()=>`<!-- Link ${e.link.name} -->`);var h=yt(c,2);{var u=g=>{{let x=st(i);J_(g,{get position(){return K(x)},children:(y,_)=>{{let E=st(()=>Oe.selectedLink==e.link?Oe.highlightColor:Oe.linkColor),w=st(()=>gy(Oe.nameHeight));cy(y,{anchorY:-.2,get color(){return K(E)},get scale(){return K(w)},get text(){return e.link.name}})}},$$slots:{default:!0}})}};Ot(h,g=>{Oe.linkNames&&g(u)})}var d=yt(h,2);{var f=g=>{var x=gt(),y=Ye(x);Ur(y,17,()=>e.link.visual,Lr,(_,E)=>{I0(_,{get ondatachange(){return t()},get opacity(){return Oe.visualOpacity},get visual(){return K(E)},get link(){return e.link}})}),We(g,x)};Ot(d,g=>{Oe.visual&&g(f)})}var p=yt(d,2);{var v=g=>{var x=gt(),y=Ye(x);Ur(y,17,()=>e.link.collision,Lr,(_,E)=>{I0(_,{get ondatachange(){return t()},get opacity(){return Oe.collisionOpacity},get visual(){return K(E)},get color(){return Oe.collisionColor},get link(){return e.link}})}),We(g,x)};Ot(p,g=>{Oe.collision&&g(v)})}var m=yt(p,2);Ur(m,17,()=>hP(Oe.robot,e.link),Lr,(g,x)=>{OP(g,{get ondatachange(){return t()},get joint(){return K(x)}})}),We(a,l)};Ot(r,a=>{Oe.robot&&a(o)})}We(s,n),Un()}function kP(s,e){Ln(e,!0);let t=Ve(e,"position",19,()=>[0,0,0]),i=Ve(e,"quaternion",19,()=>[0,0,0,1]),n=Ve(e,"ondatachange",3,void 0);var r=gt(),o=Ye(r);{var a=l=>{var c=gt(),h=Ye(c);Ut(h,()=>wt.Group,(u,d)=>{d(u,{get position(){return t()},get quaternion(){return i()},children:(f,p)=>{var v=gt(),m=Ye(v);Ur(m,17,()=>cP(Oe.robot),Lr,(g,x)=>{_y(g,{get link(){return K(x)},get ondatachange(){return n()}})}),We(f,v)},$$slots:{default:!0}})}),We(l,c)};Ot(o,l=>{Oe.robot&&l(a)})}We(s,r),Un()}var BP=Qt("<!> <!> <!> <!>",1);function zP(s,e){let t=Ve(e,"intensity",3,.5),i=Ve(e,"radius",3,1),n=Ve(e,"shadows",3,!0),r=Ve(e,"preset_name",3,"rembrandt"),o=Ve(e,"shadowBias",19,()=>-1e-4),a=Ve(e,"normalBias",3,0),l=Ve(e,"shadowSize",3,256),c=Ve(e,"height",3,1),h=Ve(e,"shadowOffset",3,1);const d={rembrandt:{main:[1,2,1],fill:[-2,-.5,-2]},portrait:{main:[-1,2,.5],fill:[-1,.5,-1.5]},upfront:{main:[0,2,1],fill:[-1,.5,-1.5]},soft:{main:[-2,4,4],fill:[-1,.5,-1.5]}}[r()];var f=BP(),p=Ye(f);{let x=st(()=>t()/3);Ut(p,()=>wt.AmbientLight,(y,_)=>{_(y,{get intensity(){return K(x)}})})}var v=yt(p,2);{let x=st(()=>[d.main[0]*i(),d.main[1]*i(),d.main[2]*i()]),y=st(()=>t()*2);Ut(v,()=>wt.SpotLight,(_,E)=>{E(_,{penumbra:1,get position(){return K(x)},get intensity(){return K(y)},get castShadow(){return n()},get"shadow-bias"(){return o()},get"shadow-normalBias"(){return a()},get"shadow-mapSize"(){return l()}})})}var m=yt(v,2);{let x=st(()=>[d.fill[0]*i(),d.fill[1]*i(),d.fill[2]*i()]);Ut(m,()=>wt.PointLight,(y,_)=>{_(y,{get position(){return K(x)},get intensity(){return t()}})})}var g=yt(m,2);{let x=st(()=>[0,-c()/2-h()/2,0]);Ut(g,()=>wt.Group,(y,_)=>{_(y,{get position(){return K(x)},children:(E,w)=>{var M=gt(),T=Ye(M);{var S=b=>{{let P=st(()=>i()*4);wC(b,{get scale(){return K(P)},get far(){return i()},blur:2})}};Ot(T,b=>{n()&&b(S)})}We(E,M)},$$slots:{default:!0}})})}We(s,f)}var VP=Qt("<!> <!>",1),GP=Qt("<!> <!> <!> <!>",1),HP=Qt('<input type="range" min="0" max="360" step="1"/><label> </label>',1),WP=Qt("<h3>Continuous Joints</h3> <!> <br/> <button>reset</button><br/>",1),XP=Qt('<input type="range" step="1"/><label> </label>',1),jP=Qt("<h3>Revolute Joints</h3> <!>",1),YP=Qt(" <br/> ",1),qP=Qt(" <br/>",1),ZP=Qt(" <br/>",1),JP=Qt(" <br/> visuals: <br/> <!> collisions: <br/> <!>",1),KP=Qt('<main class="main-content"><div><!></div> <div class="joint_states svelte-tlisrv"><!> <!> <hr/> <input type="range" id="_visual_opacity"/><br/> <label for="_visual_opacity">Visual Opacity</label> <input type="range" id="_collision_opacity"/><br/> <label for="_collision_opacity">Collision Opacity</label> <hr/> <input type="checkbox" id="_urdf_visual"/> <label for="_urdf_visual">Visual</label> <br/> <input type="checkbox" id="_urdf_collision"/> <label for="_urdf_collision">Collision</label><br/> <input type="checkbox" id="_urdf_linknames"/> <label for="_urdf_linknames">Link names</label><br/> <input type="checkbox" id="_urdf_joints"/> <label for="_urdf_joints">Joints</label><br/> <input type="checkbox" id="_urdf_jointnames"/> <label for="_urdf_jointnames">Joint names</label><br/> <input id="_urdf_jointcolor" type="color"/> <label for="_urdf_jointcolor">Joint color</label><br/> <input id="_urdf_linkcolor" type="color"/> <label for="_urdf_linkcolor">Link color</label><br/> <input id="_urdf_jointindicolor" type="color"/> <label for="_urdf_jointindicolor">Joint indicator color</label><br/> <input id="_urdf_highlightcolor" type="color"/> <label for="_urdf_highlightcolor">Highlight color</label><br/> <input id="_urdf_collisioncolor" type="color"/> <label for="_urdf_collisioncolor">Collision color</label><br/> <input id="_urdf_bgcolor" type="color"/> <label for="_urdf_bgcolor">Background color</label><br/> <hr/> Selected:<br/> <!> <!></div></main>');function lI(s,e){Ln(e,!0),Lt.DEFAULT_UP=new I(0,0,1);let t=xi(0),i=xi(0),n=xi(void 0),r=xi(void 0),o=nx.url.href;o=o.endsWith("/")?o.substring(0,o.length-1):o;const l="turtlebot3_description/turtlebot3_waffle.xml",c=new dP(`${o}/${l}`,o);D0(async()=>{let Z=await c.load();const Q=c.fromString(Z),k={},W={};for(let J=0;J<Q.joints.length;J++){const X=Q.joints[J];X.type=="continuous"&&X.name?k[X.name]=J:X.type=="revolute"&&X.name&&(W[X.name]=J)}Oe.continuousJoints=k,Oe.revoluteJoints=W,Oe.robot=Q});const h=is({});var u=KP(),d=Bs(u);let f;var p=Bs(d);ZA(p,{createRenderer:L=>new Mp({canvas:L,alpha:!0,powerPreference:"high-performance",logarithmicDepthBuffer:!0}),shadows:!0,children:(L,Z)=>{var Q=GP(),k=Ye(Q);Ut(k,()=>wt.PerspectiveCamera,(me,be)=>{be(me,{makeDefault:!0,position:[.6,.6,.6],fov:25,get ref(){return K(n)},set ref(we){li(n,we,!0)},children:(we,ve)=>{zC(we,{onchange:()=>{if(!K(r)||!K(n))return;const Ie=K(n).position;Oe.zoom=Ie.distanceTo(K(r).target)},enableZoom:!0,get ref(){return K(r)},set ref(Ie){li(r,Ie,!0)},children:(Ie,U)=>{xC(Ie,{})},$$slots:{default:!0}})},$$slots:{default:!0}})});var W=yt(k,2);Ut(W,()=>wt.Group,(me,be)=>{be(me,{rotation:[-Math.PI/2,0,0],children:(we,ve)=>{var Ie=VP(),U=Ye(Ie);Ut(U,()=>wt.HemisphereLight,(he,xe)=>{xe(he,{skycolor:11657727,groundColor:12155424,intensity:.2})});var fe=yt(U,2);CC(fe,{cellSize:.1}),We(we,Ie)},$$slots:{default:!0}})});var J=yt(W,2);zP(J,{preset_name:"soft"});var X=yt(J,2);{var ne=me=>{kP(me,{})};Ot(X,me=>{Oe.robot&&me(ne)})}We(L,Q)},$$slots:{default:!0}}),zs(d);var v=yt(d,2),m=Bs(v);{var g=L=>{var Z=WP(),Q=yt(Ye(Z),2);Ur(Q,17,()=>Object.entries(Oe.continuousJoints),Lr,(W,J)=>{var X=st(()=>qp(K(J),2));let ne=()=>K(X)[0],me=()=>K(X)[1];var be=HP(),we=Ye(be);ii(we),we.__input=U=>{if(!U.target||!Oe.robot)return;const fe=Oe.robot.joints[me()],xe=h[ne()]*Math.PI/180-Math.PI;fe.rotation=[xe*fe.axis_xyz[0],xe*fe.axis_xyz[1],xe*fe.axis_xyz[2]]};var ve=yt(we),Ie=Bs(ve,!0);zs(ve),es(()=>{gi(we,"id",ne()),gi(ve,"for",ne()),ms(Ie,ne())}),Mr(we,()=>h[ne()],U=>h[ne()]=U),We(W,be)});var k=yt(Q,4);k.__click=()=>{var W;for(let J of Object.values(Oe.continuousJoints)){const X=(W=Oe.robot)==null?void 0:W.joints[J];!X||!Oe.robot||!X.name||(X.rotation=[0,0,0],h[X.name]=180)}},ca(),We(L,Z)};Ot(m,L=>{Oe.robot&&Oe.continuousJoints&&L(g)})}var x=yt(m,2);{var y=L=>{var Z=jP(),Q=yt(Ye(Z),2);Ur(Q,17,()=>Object.entries(Oe.revoluteJoints),Lr,(k,W)=>{var J=st(()=>qp(K(W),2));let X=()=>K(J)[0],ne=()=>K(J)[1];var me=XP(),be=Ye(me);ii(be),be.__input=Ie=>{if(!Ie.target||!Oe.robot)return;const U=Oe.robot.joints[ne()],he=Ie.target.value*Math.PI/180-Math.PI;U.rotation=[he*U.axis_xyz[0],he*U.axis_xyz[1],he*U.axis_xyz[2]]};var we=yt(be),ve=Bs(we,!0);zs(we),es((Ie,U,fe)=>{gi(be,"id",X()),gi(be,"min",Ie),gi(be,"max",U),ux(be,fe),gi(we,"for",X()),ms(ve,X())},[()=>{var Ie,U;return jd(((U=(Ie=Oe.robot)==null?void 0:Ie.joints[ne()].limit)==null?void 0:U.lower)||0)},()=>{var Ie,U;return jd(((U=(Ie=Oe.robot)==null?void 0:Ie.joints[ne()].limit)==null?void 0:U.upper)||2*Math.PI)},()=>{var Ie,U;return jd(((U=(Ie=Oe.robot)==null?void 0:Ie.joints[ne()].limit)==null?void 0:U.lower)||0)}]),We(k,me)}),We(L,Z)};Ot(x,L=>{Oe.revoluteJoints&&L(y)})}var _=yt(x,4);ii(_),_.__input=()=>{Oe.visualOpacity=Number(Oe.visualOpacity)},gi(_,"min",.1),gi(_,"max",1),gi(_,"step",.1);var E=yt(_,5);ii(E),E.__input=()=>{Oe.collisionOpacity=Number(Oe.collisionOpacity)},gi(E,"min",.1),gi(E,"max",1),gi(E,"step",.1);var w=yt(E,7);ii(w);var M=yt(w,6);ii(M);var T=yt(M,5);ii(T);var S=yt(T,5);ii(S);var b=yt(S,5);ii(b);var P=yt(b,5);ii(P);var D=yt(P,5);ii(D);var G=yt(D,5);ii(G);var H=yt(G,5);ii(H);var q=yt(H,5);ii(q);var F=yt(q,5);ii(F);var te=yt(F,9);{var Y=L=>{var Z=YP(),Q=Ye(Z),k=yt(Q,2);es(()=>{ms(Q,`joint: ${Oe.selectedJoint.name??""}`),ms(k,` origin: ${Oe.selectedJoint.origin_xyz??""}`)}),We(L,Z)};Ot(te,L=>{Oe.selectedJoint&&L(Y)})}var j=yt(te,2);{var $=L=>{var Z=JP(),Q=Ye(Z),k=yt(Q,5);{var W=ne=>{var me=gt(),be=Ye(me);Ur(be,17,()=>Oe.selectedLink.visual,Lr,(we,ve)=>{ca();var Ie=qP(),U=Ye(Ie);ca(),es(()=>ms(U,` - origin: ${K(ve).origin_xyz??""} (${K(ve).type??""}) `)),We(we,Ie)}),We(ne,me)};Ot(k,ne=>{Oe.selectedLink.visual&&ne(W)})}var J=yt(k,4);{var X=ne=>{var me=gt(),be=Ye(me);Ur(be,17,()=>Oe.selectedLink.collision,Lr,(we,ve)=>{ca();var Ie=ZP(),U=Ye(Ie);ca(),es(()=>ms(U,` - origin: ${K(ve).origin_xyz??""} (${K(ve).type??""}) `)),We(we,Ie)}),We(ne,me)};Ot(J,ne=>{Oe.selectedLink.collision&&ne(X)})}es(()=>ms(Q,`link: ${Oe.selectedLink.name??""}`)),We(L,Z)};Ot(j,L=>{Oe.selectedLink&&L($)})}zs(v),zs(u),es(L=>f=lx(d,"",f,L),[()=>({width:K(i)-250+"px",height:K(t)+"px","background-color":Oe.backgroundColor})]),$p("innerHeight",L=>li(t,L,!0)),$p("innerWidth",L=>li(i,L,!0)),Mr(_,()=>Oe.visualOpacity,L=>Oe.visualOpacity=L),Mr(E,()=>Oe.collisionOpacity,L=>Oe.collisionOpacity=L),ha(w,()=>Oe.visual,L=>Oe.visual=L),ha(M,()=>Oe.collision,L=>Oe.collision=L),ha(T,()=>Oe.linkNames,L=>Oe.linkNames=L),ha(S,()=>Oe.joints,L=>Oe.joints=L),ha(b,()=>Oe.jointNames,L=>Oe.jointNames=L),Mr(P,()=>Oe.jointColor,L=>Oe.jointColor=L),Mr(D,()=>Oe.linkColor,L=>Oe.linkColor=L),Mr(G,()=>Oe.jointIndicatorColor,L=>Oe.jointIndicatorColor=L),Mr(H,()=>Oe.highlightColor,L=>Oe.highlightColor=L),Mr(q,()=>Oe.collisionColor,L=>Oe.collisionColor=L),Mr(F,()=>Oe.backgroundColor,L=>Oe.backgroundColor=L),We(s,u),Un()}wy(["input","click"]);export{lI as component};
