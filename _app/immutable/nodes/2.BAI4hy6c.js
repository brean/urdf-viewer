var W_=Object.defineProperty;var X_=(s,e,t)=>e in s?W_(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var tn=(s,e,t)=>X_(s,typeof e!="symbol"?e+"":e,t);import{b as _p,e as Y_,c as pt,a as Ye,t as $t}from"../chunks/BFnuBdn9.js";import{ai as q_,y as yp,z as xp,B as j_,C as Ed,h as Vi,L as Td,b as r0,k as ye,at as Z_,ab as J_,ac as bp,K as Ad,J as mu,c as Ns,M as K_,ad as s0,a as tf,ae as Q_,Q as o0,A as $_,$ as ey,a5 as Cd,av as gu,aw as ty,ax as ny,ay as iy,P as ry,az as sy,d as a0,aA as oy,aB as ay,G as l0,N as ly,I as cy,F as hy,aC as uy,aa as dy,aD as fy,aE as py,aF as my,i as bh,ag as nf,Y as Ui,aG as c0,a1 as rf,aH as Ti,aI as ii,u as Dt,g as yi,m as Mt,p as kn,f as Ze,o as Bn,q as Os,a0 as Hi,s as Fs,n as kr,v as _t,t as fs,aJ as ta}from"../chunks/DqWMM8mF.js";import{d as gy,s as ps}from"../chunks/Dwl5u5ts.js";import{r as yr,i as Bt,b as Sp,s as Br,p as Xe,d as Ws,e as il,c as Nt,a as Nn}from"../chunks/BHNpK4m8.js";import{g as Rd,w as ti,d as rl,a as xr,o as sf,r as of}from"../chunks/BTNufpyZ.js";import{p as vy}from"../chunks/DvgTtkRZ.js";import{s as Xi}from"../chunks/Yin0G9Hm.js";let Mp=!1;function h0(){Mp||(Mp=!0,document.addEventListener("reset",s=>{Promise.resolve().then(()=>{var e;if(!s.defaultPrevented)for(const t of s.target.elements)(e=t.__on_r)==null||e.call(t)})},{capture:!0}))}function _y(s,e,t,n=!0){n&&t();for(var i of e)s.addEventListener(i,t);q_(()=>{for(var r of e)s.removeEventListener(r,t)})}function u0(s){var e=j_,t=Ed;yp(null),xp(null);try{return s()}finally{yp(e),xp(t)}}function d0(s,e,t,n=t){s.addEventListener(e,()=>u0(t));const i=s.__on_r;i?s.__on_r=()=>{i(),n(!0)}:s.__on_r=()=>n(!0),h0()}function Dr(s,e){return e}function yy(s,e,t,n){for(var i=[],r=e.length,o=0;o<r;o++)iy(e[o].e,i,!0);var a=r>0&&i.length===0&&t!==null;if(a){var l=t.parentNode;ry(l),l.append(t),n.clear(),es(s,e[0].prev,e[r-1].next)}sy(i,()=>{for(var c=0;c<r;c++){var h=e[c];a||(n.delete(h.k),es(s,h.prev,h.next)),a0(h.e,!a)}})}function Lr(s,e,t,n,i,r=null){var o=s,a={items:new Map,first:null};Vi&&Td();var l=null,c=!1,h=Z_(()=>{var u=t();return $_(u)?u:u==null?[]:o0(u)});r0(()=>{var u=ye(h),d=u.length;if(c&&d===0)return;c=d===0;let f=!1;if(Vi){var p=o.data===J_;p!==(d===0)&&(o=bp(),Ad(o),mu(!1),f=!0)}if(Vi){for(var v=null,g,m=0;m<d;m++){if(Ns.nodeType===8&&Ns.data===K_){o=Ns,f=!0,mu(!1);break}var x=u[m],y=n(x,m);g=f0(Ns,a,v,null,x,y,m,i,e,t),a.items.set(y,g),v=g}d>0&&Ad(bp())}Vi||xy(u,a,o,i,e,n,t),r!==null&&(d===0?l?s0(l):l=tf(()=>r(o)):l!==null&&Q_(l,()=>{l=null})),f&&mu(!0),ye(h)}),Vi&&(o=Ns)}function xy(s,e,t,n,i,r,o){var a=s.length,l=e.items,c=e.first,h=c,u,d=null,f=[],p=[],v,g,m,x;for(x=0;x<a;x+=1){if(v=s[x],g=r(v,x),m=l.get(g),m===void 0){var y=h?h.e.nodes_start:t;d=f0(y,e,d,d===null?e.first:d.next,v,g,x,n,i,o),l.set(g,d),f=[],p=[],h=d.next;continue}if(by(m,v,x),(m.e.f&gu)!==0&&s0(m.e),m!==h){if(u!==void 0&&u.has(m)){if(f.length<p.length){var _=p[0],E;d=_.prev;var w=f[0],M=f[f.length-1];for(E=0;E<f.length;E+=1)wp(f[E],_,t);for(E=0;E<p.length;E+=1)u.delete(p[E]);es(e,w.prev,M.next),es(e,d,w),es(e,M,_),h=_,d=M,x-=1,f=[],p=[]}else u.delete(m),wp(m,h,t),es(e,m.prev,m.next),es(e,m,d===null?e.first:d.next),es(e,d,m),d=m;continue}for(f=[],p=[];h!==null&&h.k!==g;)(h.e.f&gu)===0&&(u??(u=new Set)).add(h),p.push(h),h=h.next;if(h===null)continue;m=h}f.push(m),d=m,h=m.next}if(h!==null||u!==void 0){for(var T=u===void 0?[]:o0(u);h!==null;)(h.e.f&gu)===0&&T.push(h),h=h.next;var S=T.length;if(S>0){var b=null;yy(e,T,b,l)}}Ed.first=e.first&&e.first.e,Ed.last=d&&d.e}function by(s,e,t,n){ny(s.v,e),s.i=t}function f0(s,e,t,n,i,r,o,a,l,c){var h=(l&oy)!==0,u=(l&ay)===0,d=h?u?ey(i):Cd(i):i,f=(l&ty)===0?o:Cd(o),p={i:f,v:d,k:r,a:null,e:null,prev:t,next:n};try{return p.e=tf(()=>a(s,d,f,c),Vi),p.e.prev=t&&t.e,p.e.next=n&&n.e,t===null?e.first=p:(t.next=p,t.e.next=p.e),n!==null&&(n.prev=p,n.e.prev=p.e),p}finally{}}function wp(s,e,t){for(var n=s.next?s.next.e.nodes_start:t,i=e?e.e.nodes_start:t,r=s.e.nodes_start;r!==n;){var o=l0(r);i.before(r),r=o}}function es(s,e,t){e===null?s.first=t:(e.next=t,e.e.next=t&&t.e),t!==null&&(t.prev=e,t.e.prev=e&&e.e)}function Sh(s,e,t,n,i){var r=s,o="",a;r0(()=>{if(o===(o=e()??"")){Vi&&Td();return}a!==void 0&&(a0(a),a=void 0),o!==""&&(a=tf(()=>{if(Vi){Ns.data;for(var l=Td(),c=l;l!==null&&(l.nodeType!==8||l.data!=="");)c=l,l=l0(l);if(l===null)throw ly(),cy;_p(Ns,c),r=Ad(l);return}var h=o+"",u=Y_(h);_p(hy(u),u.lastChild),r.before(u)}))})}function oi(s){if(Vi){var e=!1,t=()=>{if(!e){if(e=!0,s.hasAttribute("value")){var n=s.value;_i(s,"value",null),s.value=n}if(s.hasAttribute("checked")){var i=s.checked;_i(s,"checked",null),s.checked=i}}};s.__on_r=t,py(t),h0()}}function Sy(s,e){var t=s.__attributes??(s.__attributes={});t.value===(t.value=e??void 0)||s.value===e&&(e!==0||s.nodeName!=="PROGRESS")||(s.value=e??"")}function _i(s,e,t,n){var i=s.__attributes??(s.__attributes={});Vi&&(i[e]=s.getAttribute(e),e==="src"||e==="srcset"||e==="href"&&s.nodeName==="LINK")||i[e]!==(i[e]=t)&&(e==="style"&&"__styles"in s&&(s.__styles={}),e==="loading"&&(s[uy]=t),t==null?s.removeAttribute(e):typeof t!="string"&&My(s).includes(e)?s[e]=t:s.setAttribute(e,t))}var Ep=new Map;function My(s){var e=Ep.get(s.nodeName);if(e)return e;Ep.set(s.nodeName,e=[]);for(var t,n=s,i=Element.prototype;i!==n;){t=fy(n);for(var r in t)t[r].set&&e.push(r);n=dy(n)}return e}function vu(s,e,t,n){var i=s.__styles??(s.__styles={});i[e]!==t&&(i[e]=t,t==null?s.style.removeProperty(e):s.style.setProperty(e,t,""))}function Sr(s,e,t=e){var n=my();d0(s,"input",i=>{var r=i?s.defaultValue:s.value;if(r=_u(s)?yu(r):r,t(r),n&&r!==(r=e())){var o=s.selectionStart,a=s.selectionEnd;s.value=r??"",a!==null&&(s.selectionStart=o,s.selectionEnd=Math.min(a,s.value.length))}}),(Vi&&s.defaultValue!==s.value||bh(e)==null&&s.value)&&t(_u(s)?yu(s.value):s.value),nf(()=>{var i=e();_u(s)&&i===yu(s.value)||s.type==="date"&&!i&&!s.value||i!==s.value&&(s.value=i??"")})}function na(s,e,t=e){d0(s,"change",n=>{var i=n?s.defaultChecked:s.checked;t(i)}),(Vi&&s.defaultChecked!==s.checked||bh(e)==null)&&t(s.checked),nf(()=>{var n=e();s.checked=!!n})}function _u(s){var e=s.type;return e==="number"||e==="range"}function yu(s){return s===""?null:+s}function Tp(s,e){_y(window,["resize"],()=>u0(()=>e(window[s])))}function wy(s){Ui(s,s.v+1)}function Ey(s){let e=0,t=Cd(0),n;return()=>{c0()&&(ye(t),nf(()=>(e===0&&(n=bh(()=>s(()=>wy(t)))),e+=1,()=>{rf().then(()=>{e-=1,e===0&&(n==null||n(),n=void 0)})})))}}function Ty(s){let e;const t=Ey(i=>{let r=!1;const o=s.subscribe(a=>{e=a,r&&i()});return r=!0,o});function n(){return c0()?(t(),e):Rd(s)}return"set"in s?{get current(){return n()},set current(i){s.set(i)}}:{get current(){return n()}}}/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const sl="173",Oi={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Bs={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},p0=0,Pd=1,m0=2,Ay=3,Cy=0,af=1,wa=2,hr=3,vr=0,ni=1,xi=2,Or=0,Xs=1,Id=2,Dd=3,Ld=4,g0=5,ns=100,v0=101,_0=102,y0=103,x0=104,b0=200,S0=201,M0=202,w0=203,Ic=204,Dc=205,E0=206,T0=207,A0=208,C0=209,R0=210,P0=211,I0=212,D0=213,L0=214,Lc=0,Uc=1,Nc=2,Ks=3,Oc=4,Fc=5,kc=6,Bc=7,ol=0,U0=1,N0=2,pr=0,O0=1,F0=2,k0=3,B0=4,z0=5,zc=6,G0=7,Ud="attached",V0="detached",Mh=300,zr=301,is=302,Fa=303,ka=304,Xo=306,$i=1e3,Si=1001,Ba=1002,Yn=1003,lf=1004,Ry=1004,Oo=1005,Py=1005,Sn=1006,Ea=1007,Iy=1007,er=1008,Dy=1008,_r=1009,cf=1010,hf=1011,Vo=1012,wh=1013,Gr=1014,Mi=1015,Yo=1016,Eh=1017,Th=1018,Qs=1020,uf=35902,df=1021,ff=1022,ui=1023,pf=1024,mf=1025,Ys=1026,$s=1027,Ah=1028,al=1029,gf=1030,Ch=1031,Ly=1032,Rh=1033,Ta=33776,Aa=33777,Ca=33778,Ra=33779,Gc=35840,Vc=35841,Hc=35842,Wc=35843,Xc=36196,Yc=37492,qc=37496,jc=37808,Zc=37809,Jc=37810,Kc=37811,Qc=37812,$c=37813,eh=37814,th=37815,nh=37816,ih=37817,rh=37818,sh=37819,oh=37820,ah=37821,Pa=36492,lh=36494,ch=36495,vf=36283,hh=36284,uh=36285,dh=36286,H0=2200,W0=2201,X0=2202,za=2300,fh=2301,Ec=2302,zs=2400,Gs=2401,Ga=2402,Ph=2500,_f=2501,Uy=0,Ny=1,Oy=2,Y0=3200,yf=3201,Fy=3202,ky=3203,rs=0,q0=1,Rr="",ln="srgb",eo="srgb-linear",Va="linear",Zt="srgb",By=0,Ds=7680,zy=7681,Gy=7682,Vy=7683,Hy=34055,Wy=34056,Xy=5386,Yy=512,qy=513,jy=514,Zy=515,Jy=516,Ky=517,Qy=518,Nd=519,j0=512,Z0=513,J0=514,xf=515,K0=516,Q0=517,$0=518,ev=519,Ha=35044,$y=35048,ex=35040,tx=35045,nx=35049,ix=35041,rx=35046,sx=35050,ox=35042,ax="100",Od="300 es",tr=2e3,Wa=2001,lx={COMPUTE:"compute",RENDER:"render"};class br{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){const n=this._listeners;return n===void 0?!1:n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){const n=this._listeners;if(n===void 0)return;const i=n[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const n=t[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,o=i.length;r<o;r++)i[r].call(this,e);e.target=null}}}const Jn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Ap=1234567;const qs=Math.PI/180,Ho=180/Math.PI;function Fi(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Jn[s&255]+Jn[s>>8&255]+Jn[s>>16&255]+Jn[s>>24&255]+"-"+Jn[e&255]+Jn[e>>8&255]+"-"+Jn[e>>16&15|64]+Jn[e>>24&255]+"-"+Jn[t&63|128]+Jn[t>>8&255]+"-"+Jn[t>>16&255]+Jn[t>>24&255]+Jn[n&255]+Jn[n>>8&255]+Jn[n>>16&255]+Jn[n>>24&255]).toLowerCase()}function Tt(s,e,t){return Math.max(e,Math.min(t,s))}function bf(s,e){return(s%e+e)%e}function cx(s,e,t,n,i){return n+(s-e)*(i-n)/(t-e)}function hx(s,e,t){return s!==e?(t-s)/(e-s):0}function Ia(s,e,t){return(1-t)*s+t*e}function ux(s,e,t,n){return Ia(s,e,1-Math.exp(-t*n))}function dx(s,e=1){return e-Math.abs(bf(s,e*2)-e)}function fx(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*(3-2*s))}function px(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*s*(s*(s*6-15)+10))}function mx(s,e){return s+Math.floor(Math.random()*(e-s+1))}function gx(s,e){return s+Math.random()*(e-s)}function vx(s){return s*(.5-Math.random())}function _x(s){s!==void 0&&(Ap=s);let e=Ap+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function yx(s){return s*qs}function xx(s){return s*Ho}function bx(s){return(s&s-1)===0&&s!==0}function Sx(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function Mx(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function wx(s,e,t,n,i){const r=Math.cos,o=Math.sin,a=r(t/2),l=o(t/2),c=r((e+n)/2),h=o((e+n)/2),u=r((e-n)/2),d=o((e-n)/2),f=r((n-e)/2),p=o((n-e)/2);switch(i){case"XYX":s.set(a*h,l*u,l*d,a*c);break;case"YZY":s.set(l*d,a*h,l*u,a*c);break;case"ZXZ":s.set(l*u,l*d,a*h,a*c);break;case"XZX":s.set(a*h,l*p,l*f,a*c);break;case"YXY":s.set(l*f,a*h,l*p,a*c);break;case"ZYZ":s.set(l*p,l*f,a*h,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function hi(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function Pt(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const dr={DEG2RAD:qs,RAD2DEG:Ho,generateUUID:Fi,clamp:Tt,euclideanModulo:bf,mapLinear:cx,inverseLerp:hx,lerp:Ia,damp:ux,pingpong:dx,smoothstep:fx,smootherstep:px,randInt:mx,randFloat:gx,randFloatSpread:vx,seededRandom:_x,degToRad:yx,radToDeg:xx,isPowerOfTwo:bx,ceilPowerOfTwo:Sx,floorPowerOfTwo:Mx,setQuaternionFromProperEuler:wx,normalize:Pt,denormalize:hi};class xe{constructor(e=0,t=0){xe.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Tt(this.x,e.x,t.x),this.y=Tt(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=Tt(this.x,e,t),this.y=Tt(this.y,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Tt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Tt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,o=this.y-e.y;return this.x=r*n-o*i+e.x,this.y=r*i+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Et{constructor(e,t,n,i,r,o,a,l,c){Et.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,o,a,l,c)}set(e,t,n,i,r,o,a,l,c){const h=this.elements;return h[0]=e,h[1]=i,h[2]=a,h[3]=t,h[4]=r,h[5]=l,h[6]=n,h[7]=o,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],h=n[4],u=n[7],d=n[2],f=n[5],p=n[8],v=i[0],g=i[3],m=i[6],x=i[1],y=i[4],_=i[7],E=i[2],w=i[5],M=i[8];return r[0]=o*v+a*x+l*E,r[3]=o*g+a*y+l*w,r[6]=o*m+a*_+l*M,r[1]=c*v+h*x+u*E,r[4]=c*g+h*y+u*w,r[7]=c*m+h*_+u*M,r[2]=d*v+f*x+p*E,r[5]=d*g+f*y+p*w,r[8]=d*m+f*_+p*M,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],a=e[5],l=e[6],c=e[7],h=e[8];return t*o*h-t*a*c-n*r*h+n*a*l+i*r*c-i*o*l}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],a=e[5],l=e[6],c=e[7],h=e[8],u=h*o-a*c,d=a*l-h*r,f=c*r-o*l,p=t*u+n*d+i*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const v=1/p;return e[0]=u*v,e[1]=(i*c-h*n)*v,e[2]=(a*n-i*o)*v,e[3]=d*v,e[4]=(h*t-i*l)*v,e[5]=(i*r-a*t)*v,e[6]=f*v,e[7]=(n*l-c*t)*v,e[8]=(o*t-n*r)*v,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,o,a){const l=Math.cos(r),c=Math.sin(r);return this.set(n*l,n*c,-n*(l*o+c*a)+o+e,-i*c,i*l,-i*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(xu.makeScale(e,t)),this}rotate(e){return this.premultiply(xu.makeRotation(-e)),this}translate(e,t){return this.premultiply(xu.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const xu=new Et;function tv(s){for(let e=s.length-1;e>=0;--e)if(s[e]>=65535)return!0;return!1}const Ex={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Fo(s,e){return new Ex[s](e)}function Xa(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function nv(){const s=Xa("canvas");return s.style.display="block",s}const Cp={};function No(s){s in Cp||(Cp[s]=!0,console.warn(s))}function Tx(s,e,t){return new Promise(function(n,i){function r(){switch(s.clientWaitSync(e,s.SYNC_FLUSH_COMMANDS_BIT,0)){case s.WAIT_FAILED:i();break;case s.TIMEOUT_EXPIRED:setTimeout(r,t);break;default:n()}}setTimeout(r,t)})}function Ax(s){const e=s.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function Cx(s){const e=s.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const Rp=new Et().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Pp=new Et().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function Rx(){const s={enabled:!0,workingColorSpace:eo,spaces:{},convert:function(i,r,o){return this.enabled===!1||r===o||!r||!o||(this.spaces[r].transfer===Zt&&(i.r=Fr(i.r),i.g=Fr(i.g),i.b=Fr(i.b)),this.spaces[r].primaries!==this.spaces[o].primaries&&(i.applyMatrix3(this.spaces[r].toXYZ),i.applyMatrix3(this.spaces[o].fromXYZ)),this.spaces[o].transfer===Zt&&(i.r=Go(i.r),i.g=Go(i.g),i.b=Go(i.b))),i},fromWorkingColorSpace:function(i,r){return this.convert(i,this.workingColorSpace,r)},toWorkingColorSpace:function(i,r){return this.convert(i,r,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===Rr?Va:this.spaces[i].transfer},getLuminanceCoefficients:function(i,r=this.workingColorSpace){return i.fromArray(this.spaces[r].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,r,o){return i.copy(this.spaces[r].toXYZ).multiply(this.spaces[o].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],n=[.3127,.329];return s.define({[eo]:{primaries:e,whitePoint:n,transfer:Va,toXYZ:Rp,fromXYZ:Pp,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:ln},outputColorSpaceConfig:{drawingBufferColorSpace:ln}},[ln]:{primaries:e,whitePoint:n,transfer:Zt,toXYZ:Rp,fromXYZ:Pp,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:ln}}}),s}const Lt=Rx();function Fr(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function Go(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}let po;class iv{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{po===void 0&&(po=Xa("canvas")),po.width=e.width,po.height=e.height;const n=po.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=po}return t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Xa("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let o=0;o<r.length;o++)r[o]=Fr(r[o]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Fr(t[n]/255)*255):t[n]=Fr(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let Px=0;class Vs{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Px++}),this.uuid=Fi(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?r.push(bu(i[o].image)):r.push(bu(i[o]))}else r=bu(i);n.url=r}return t||(e.images[this.uuid]=n),n}}function bu(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?iv.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Ix=0;class pn extends br{constructor(e=pn.DEFAULT_IMAGE,t=pn.DEFAULT_MAPPING,n=Si,i=Si,r=Sn,o=er,a=ui,l=_r,c=pn.DEFAULT_ANISOTROPY,h=Rr){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Ix++}),this.uuid=Fi(),this.name="",this.source=new Vs(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new xe(0,0),this.repeat=new xe(1,1),this.center=new xe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Et,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Mh)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case $i:e.x=e.x-Math.floor(e.x);break;case Si:e.x=e.x<0?0:1;break;case Ba:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case $i:e.y=e.y-Math.floor(e.y);break;case Si:e.y=e.y<0?0:1;break;case Ba:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}pn.DEFAULT_IMAGE=null;pn.DEFAULT_MAPPING=Mh;pn.DEFAULT_ANISOTROPY=1;class Rt{constructor(e=0,t=0,n=0,i=1){Rt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*i+o[12]*r,this.y=o[1]*t+o[5]*n+o[9]*i+o[13]*r,this.z=o[2]*t+o[6]*n+o[10]*i+o[14]*r,this.w=o[3]*t+o[7]*n+o[11]*i+o[15]*r,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const l=e.elements,c=l[0],h=l[4],u=l[8],d=l[1],f=l[5],p=l[9],v=l[2],g=l[6],m=l[10];if(Math.abs(h-d)<.01&&Math.abs(u-v)<.01&&Math.abs(p-g)<.01){if(Math.abs(h+d)<.1&&Math.abs(u+v)<.1&&Math.abs(p+g)<.1&&Math.abs(c+f+m-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const y=(c+1)/2,_=(f+1)/2,E=(m+1)/2,w=(h+d)/4,M=(u+v)/4,T=(p+g)/4;return y>_&&y>E?y<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(y),i=w/n,r=M/n):_>E?_<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(_),n=w/i,r=T/i):E<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(E),n=M/r,i=T/r),this.set(n,i,r,t),this}let x=Math.sqrt((g-p)*(g-p)+(u-v)*(u-v)+(d-h)*(d-h));return Math.abs(x)<.001&&(x=1),this.x=(g-p)/x,this.y=(u-v)/x,this.z=(d-h)/x,this.w=Math.acos((c+f+m-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Tt(this.x,e.x,t.x),this.y=Tt(this.y,e.y,t.y),this.z=Tt(this.z,e.z,t.z),this.w=Tt(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=Tt(this.x,e,t),this.y=Tt(this.y,e,t),this.z=Tt(this.z,e,t),this.w=Tt(this.w,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Tt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Ih extends br{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Rt(0,0,e,t),this.scissorTest=!1,this.viewport=new Rt(0,0,e,t);const i={width:e,height:t,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Sn,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},n);const r=new pn(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);r.flipY=!1,r.generateMipmaps=n.generateMipmaps,r.internalFormat=n.internalFormat,this.textures=[];const o=n.count;for(let a=0;a<o;a++)this.textures[a]=r.clone(),this.textures[a].isRenderTargetTexture=!0,this.textures[a].renderTarget=this;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,r=this.textures.length;i<r;i++)this.textures[i].image.width=e,this.textures[i].image.height=t,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let n=0,i=e.textures.length;n<i;n++)this.textures[n]=e.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0,this.textures[n].renderTarget=this;const t=Object.assign({},e.texture.image);return this.texture.source=new Vs(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Yi extends Ih{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class ll extends pn{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Yn,this.minFilter=Yn,this.wrapR=Si,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class Dx extends Yi{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new ll(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Dh extends pn{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Yn,this.minFilter=Yn,this.wrapR=Si,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Lx extends Yi{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Dh(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Ht{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,r,o,a){let l=n[i+0],c=n[i+1],h=n[i+2],u=n[i+3];const d=r[o+0],f=r[o+1],p=r[o+2],v=r[o+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=h,e[t+3]=u;return}if(a===1){e[t+0]=d,e[t+1]=f,e[t+2]=p,e[t+3]=v;return}if(u!==v||l!==d||c!==f||h!==p){let g=1-a;const m=l*d+c*f+h*p+u*v,x=m>=0?1:-1,y=1-m*m;if(y>Number.EPSILON){const E=Math.sqrt(y),w=Math.atan2(E,m*x);g=Math.sin(g*w)/E,a=Math.sin(a*w)/E}const _=a*x;if(l=l*g+d*_,c=c*g+f*_,h=h*g+p*_,u=u*g+v*_,g===1-a){const E=1/Math.sqrt(l*l+c*c+h*h+u*u);l*=E,c*=E,h*=E,u*=E}}e[t]=l,e[t+1]=c,e[t+2]=h,e[t+3]=u}static multiplyQuaternionsFlat(e,t,n,i,r,o){const a=n[i],l=n[i+1],c=n[i+2],h=n[i+3],u=r[o],d=r[o+1],f=r[o+2],p=r[o+3];return e[t]=a*p+h*u+l*f-c*d,e[t+1]=l*p+h*d+c*u-a*f,e[t+2]=c*p+h*f+a*d-l*u,e[t+3]=h*p-a*u-l*d-c*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,i=e._y,r=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(n/2),h=a(i/2),u=a(r/2),d=l(n/2),f=l(i/2),p=l(r/2);switch(o){case"XYZ":this._x=d*h*u+c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u-d*f*p;break;case"YXZ":this._x=d*h*u+c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u+d*f*p;break;case"ZXY":this._x=d*h*u-c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u-d*f*p;break;case"ZYX":this._x=d*h*u-c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u+d*f*p;break;case"YZX":this._x=d*h*u+c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u-d*f*p;break;case"XZY":this._x=d*h*u-c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],o=t[1],a=t[5],l=t[9],c=t[2],h=t[6],u=t[10],d=n+a+u;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(h-l)*f,this._y=(r-c)*f,this._z=(o-i)*f}else if(n>a&&n>u){const f=2*Math.sqrt(1+n-a-u);this._w=(h-l)/f,this._x=.25*f,this._y=(i+o)/f,this._z=(r+c)/f}else if(a>u){const f=2*Math.sqrt(1+a-n-u);this._w=(r-c)/f,this._x=(i+o)/f,this._y=.25*f,this._z=(l+h)/f}else{const f=2*Math.sqrt(1+u-n-a);this._w=(o-i)/f,this._x=(r+c)/f,this._y=(l+h)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Tt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,o=e._w,a=t._x,l=t._y,c=t._z,h=t._w;return this._x=n*h+o*a+i*c-r*l,this._y=i*h+o*l+r*a-n*c,this._z=r*h+o*c+n*l-i*a,this._w=o*h-n*a-i*l-r*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,r=this._z,o=this._w;let a=o*e._w+n*e._x+i*e._y+r*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=n,this._y=i,this._z=r,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-t;return this._w=f*o+t*this._w,this._x=f*n+t*this._x,this._y=f*i+t*this._y,this._z=f*r+t*this._z,this.normalize(),this}const c=Math.sqrt(l),h=Math.atan2(c,a),u=Math.sin((1-t)*h)/c,d=Math.sin(t*h)/c;return this._w=o*u+this._w*d,this._x=n*u+this._x*d,this._y=i*u+this._y*d,this._z=r*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),r=Math.sqrt(n);return this.set(i*Math.sin(e),i*Math.cos(e),r*Math.sin(t),r*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class L{constructor(e=0,t=0,n=0){L.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Ip.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Ip.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,o=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*o,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*o,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,o=e.y,a=e.z,l=e.w,c=2*(o*i-a*n),h=2*(a*t-r*i),u=2*(r*n-o*t);return this.x=t+l*c+o*u-a*h,this.y=n+l*h+a*c-r*u,this.z=i+l*u+r*h-o*c,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Tt(this.x,e.x,t.x),this.y=Tt(this.y,e.y,t.y),this.z=Tt(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=Tt(this.x,e,t),this.y=Tt(this.y,e,t),this.z=Tt(this.z,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Tt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,o=t.x,a=t.y,l=t.z;return this.x=i*l-r*a,this.y=r*o-n*l,this.z=n*a-i*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Su.copy(this).projectOnVector(e),this.sub(Su)}reflect(e){return this.sub(Su.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Tt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Su=new L,Ip=new Ht;class Mn{constructor(e=new L(1/0,1/0,1/0),t=new L(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Ji.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Ji.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Ji.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const r=n.getAttribute("position");if(t===!0&&r!==void 0&&e.isInstancedMesh!==!0)for(let o=0,a=r.count;o<a;o++)e.isMesh===!0?e.getVertexPosition(o,Ji):Ji.fromBufferAttribute(r,o),Ji.applyMatrix4(e.matrixWorld),this.expandByPoint(Ji);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),yl.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),yl.copy(n.boundingBox)),yl.applyMatrix4(e.matrixWorld),this.union(yl)}const i=e.children;for(let r=0,o=i.length;r<o;r++)this.expandByObject(i[r],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,Ji),Ji.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(ia),xl.subVectors(this.max,ia),mo.subVectors(e.a,ia),go.subVectors(e.b,ia),vo.subVectors(e.c,ia),Xr.subVectors(go,mo),Yr.subVectors(vo,go),ms.subVectors(mo,vo);let t=[0,-Xr.z,Xr.y,0,-Yr.z,Yr.y,0,-ms.z,ms.y,Xr.z,0,-Xr.x,Yr.z,0,-Yr.x,ms.z,0,-ms.x,-Xr.y,Xr.x,0,-Yr.y,Yr.x,0,-ms.y,ms.x,0];return!Mu(t,mo,go,vo,xl)||(t=[1,0,0,0,1,0,0,0,1],!Mu(t,mo,go,vo,xl))?!1:(bl.crossVectors(Xr,Yr),t=[bl.x,bl.y,bl.z],Mu(t,mo,go,vo,xl))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Ji).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Ji).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Mr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Mr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Mr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Mr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Mr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Mr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Mr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Mr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Mr),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Mr=[new L,new L,new L,new L,new L,new L,new L,new L],Ji=new L,yl=new Mn,mo=new L,go=new L,vo=new L,Xr=new L,Yr=new L,ms=new L,ia=new L,xl=new L,bl=new L,gs=new L;function Mu(s,e,t,n,i){for(let r=0,o=s.length-3;r<=o;r+=3){gs.fromArray(s,r);const a=i.x*Math.abs(gs.x)+i.y*Math.abs(gs.y)+i.z*Math.abs(gs.z),l=e.dot(gs),c=t.dot(gs),h=n.dot(gs);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>a)return!1}return!0}const Ux=new Mn,ra=new L,wu=new L;class An{constructor(e=new L,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):Ux.setFromPoints(e).getCenter(n);let i=0;for(let r=0,o=e.length;r<o;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;ra.subVectors(e,this.center);const t=ra.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(ra,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(wu.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(ra.copy(e.center).add(wu)),this.expandByPoint(ra.copy(e.center).sub(wu))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const wr=new L,Eu=new L,Sl=new L,qr=new L,Tu=new L,Ml=new L,Au=new L;class ss{constructor(e=new L,t=new L(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,wr)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=wr.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(wr.copy(this.origin).addScaledVector(this.direction,t),wr.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Eu.copy(e).add(t).multiplyScalar(.5),Sl.copy(t).sub(e).normalize(),qr.copy(this.origin).sub(Eu);const r=e.distanceTo(t)*.5,o=-this.direction.dot(Sl),a=qr.dot(this.direction),l=-qr.dot(Sl),c=qr.lengthSq(),h=Math.abs(1-o*o);let u,d,f,p;if(h>0)if(u=o*l-a,d=o*a-l,p=r*h,u>=0)if(d>=-p)if(d<=p){const v=1/h;u*=v,d*=v,f=u*(u+o*d+2*a)+d*(o*u+d+2*l)+c}else d=r,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*l)+c;else d=-r,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*l)+c;else d<=-p?(u=Math.max(0,-(-o*r+a)),d=u>0?-r:Math.min(Math.max(-r,-l),r),f=-u*u+d*(d+2*l)+c):d<=p?(u=0,d=Math.min(Math.max(-r,-l),r),f=d*(d+2*l)+c):(u=Math.max(0,-(o*r+a)),d=u>0?r:Math.min(Math.max(-r,-l),r),f=-u*u+d*(d+2*l)+c);else d=o>0?-r:r,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*l)+c;return n&&n.copy(this.origin).addScaledVector(this.direction,u),i&&i.copy(Eu).addScaledVector(Sl,d),f}intersectSphere(e,t){wr.subVectors(e.center,this.origin);const n=wr.dot(this.direction),i=wr.dot(wr)-n*n,r=e.radius*e.radius;if(i>r)return null;const o=Math.sqrt(r-i),a=n-o,l=n+o;return l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,o,a,l;const c=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,d=this.origin;return c>=0?(n=(e.min.x-d.x)*c,i=(e.max.x-d.x)*c):(n=(e.max.x-d.x)*c,i=(e.min.x-d.x)*c),h>=0?(r=(e.min.y-d.y)*h,o=(e.max.y-d.y)*h):(r=(e.max.y-d.y)*h,o=(e.min.y-d.y)*h),n>o||r>i||((r>n||isNaN(n))&&(n=r),(o<i||isNaN(i))&&(i=o),u>=0?(a=(e.min.z-d.z)*u,l=(e.max.z-d.z)*u):(a=(e.max.z-d.z)*u,l=(e.min.z-d.z)*u),n>l||a>i)||((a>n||n!==n)&&(n=a),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,wr)!==null}intersectTriangle(e,t,n,i,r){Tu.subVectors(t,e),Ml.subVectors(n,e),Au.crossVectors(Tu,Ml);let o=this.direction.dot(Au),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;qr.subVectors(this.origin,e);const l=a*this.direction.dot(Ml.crossVectors(qr,Ml));if(l<0)return null;const c=a*this.direction.dot(Tu.cross(qr));if(c<0||l+c>o)return null;const h=-a*qr.dot(Au);return h<0?null:this.at(h/o,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class st{constructor(e,t,n,i,r,o,a,l,c,h,u,d,f,p,v,g){st.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,o,a,l,c,h,u,d,f,p,v,g)}set(e,t,n,i,r,o,a,l,c,h,u,d,f,p,v,g){const m=this.elements;return m[0]=e,m[4]=t,m[8]=n,m[12]=i,m[1]=r,m[5]=o,m[9]=a,m[13]=l,m[2]=c,m[6]=h,m[10]=u,m[14]=d,m[3]=f,m[7]=p,m[11]=v,m[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new st().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/_o.setFromMatrixColumn(e,0).length(),r=1/_o.setFromMatrixColumn(e,1).length(),o=1/_o.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,r=e.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(i),c=Math.sin(i),h=Math.cos(r),u=Math.sin(r);if(e.order==="XYZ"){const d=o*h,f=o*u,p=a*h,v=a*u;t[0]=l*h,t[4]=-l*u,t[8]=c,t[1]=f+p*c,t[5]=d-v*c,t[9]=-a*l,t[2]=v-d*c,t[6]=p+f*c,t[10]=o*l}else if(e.order==="YXZ"){const d=l*h,f=l*u,p=c*h,v=c*u;t[0]=d+v*a,t[4]=p*a-f,t[8]=o*c,t[1]=o*u,t[5]=o*h,t[9]=-a,t[2]=f*a-p,t[6]=v+d*a,t[10]=o*l}else if(e.order==="ZXY"){const d=l*h,f=l*u,p=c*h,v=c*u;t[0]=d-v*a,t[4]=-o*u,t[8]=p+f*a,t[1]=f+p*a,t[5]=o*h,t[9]=v-d*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const d=o*h,f=o*u,p=a*h,v=a*u;t[0]=l*h,t[4]=p*c-f,t[8]=d*c+v,t[1]=l*u,t[5]=v*c+d,t[9]=f*c-p,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const d=o*l,f=o*c,p=a*l,v=a*c;t[0]=l*h,t[4]=v-d*u,t[8]=p*u+f,t[1]=u,t[5]=o*h,t[9]=-a*h,t[2]=-c*h,t[6]=f*u+p,t[10]=d-v*u}else if(e.order==="XZY"){const d=o*l,f=o*c,p=a*l,v=a*c;t[0]=l*h,t[4]=-u,t[8]=c*h,t[1]=d*u+v,t[5]=o*h,t[9]=f*u-p,t[2]=p*u-f,t[6]=a*h,t[10]=v*u+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Nx,e,Ox)}lookAt(e,t,n){const i=this.elements;return Ii.subVectors(e,t),Ii.lengthSq()===0&&(Ii.z=1),Ii.normalize(),jr.crossVectors(n,Ii),jr.lengthSq()===0&&(Math.abs(n.z)===1?Ii.x+=1e-4:Ii.z+=1e-4,Ii.normalize(),jr.crossVectors(n,Ii)),jr.normalize(),wl.crossVectors(Ii,jr),i[0]=jr.x,i[4]=wl.x,i[8]=Ii.x,i[1]=jr.y,i[5]=wl.y,i[9]=Ii.y,i[2]=jr.z,i[6]=wl.z,i[10]=Ii.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],h=n[1],u=n[5],d=n[9],f=n[13],p=n[2],v=n[6],g=n[10],m=n[14],x=n[3],y=n[7],_=n[11],E=n[15],w=i[0],M=i[4],T=i[8],S=i[12],b=i[1],D=i[5],P=i[9],k=i[13],V=i[2],K=i[6],N=i[10],Q=i[14],Z=i[3],j=i[7],X=i[11],F=i[15];return r[0]=o*w+a*b+l*V+c*Z,r[4]=o*M+a*D+l*K+c*j,r[8]=o*T+a*P+l*N+c*X,r[12]=o*S+a*k+l*Q+c*F,r[1]=h*w+u*b+d*V+f*Z,r[5]=h*M+u*D+d*K+f*j,r[9]=h*T+u*P+d*N+f*X,r[13]=h*S+u*k+d*Q+f*F,r[2]=p*w+v*b+g*V+m*Z,r[6]=p*M+v*D+g*K+m*j,r[10]=p*T+v*P+g*N+m*X,r[14]=p*S+v*k+g*Q+m*F,r[3]=x*w+y*b+_*V+E*Z,r[7]=x*M+y*D+_*K+E*j,r[11]=x*T+y*P+_*N+E*X,r[15]=x*S+y*k+_*Q+E*F,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],o=e[1],a=e[5],l=e[9],c=e[13],h=e[2],u=e[6],d=e[10],f=e[14],p=e[3],v=e[7],g=e[11],m=e[15];return p*(+r*l*u-i*c*u-r*a*d+n*c*d+i*a*f-n*l*f)+v*(+t*l*f-t*c*d+r*o*d-i*o*f+i*c*h-r*l*h)+g*(+t*c*u-t*a*f-r*o*u+n*o*f+r*a*h-n*c*h)+m*(-i*a*h-t*l*u+t*a*d+i*o*u-n*o*d+n*l*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],a=e[5],l=e[6],c=e[7],h=e[8],u=e[9],d=e[10],f=e[11],p=e[12],v=e[13],g=e[14],m=e[15],x=u*g*c-v*d*c+v*l*f-a*g*f-u*l*m+a*d*m,y=p*d*c-h*g*c-p*l*f+o*g*f+h*l*m-o*d*m,_=h*v*c-p*u*c+p*a*f-o*v*f-h*a*m+o*u*m,E=p*u*l-h*v*l-p*a*d+o*v*d+h*a*g-o*u*g,w=t*x+n*y+i*_+r*E;if(w===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/w;return e[0]=x*M,e[1]=(v*d*r-u*g*r-v*i*f+n*g*f+u*i*m-n*d*m)*M,e[2]=(a*g*r-v*l*r+v*i*c-n*g*c-a*i*m+n*l*m)*M,e[3]=(u*l*r-a*d*r-u*i*c+n*d*c+a*i*f-n*l*f)*M,e[4]=y*M,e[5]=(h*g*r-p*d*r+p*i*f-t*g*f-h*i*m+t*d*m)*M,e[6]=(p*l*r-o*g*r-p*i*c+t*g*c+o*i*m-t*l*m)*M,e[7]=(o*d*r-h*l*r+h*i*c-t*d*c-o*i*f+t*l*f)*M,e[8]=_*M,e[9]=(p*u*r-h*v*r-p*n*f+t*v*f+h*n*m-t*u*m)*M,e[10]=(o*v*r-p*a*r+p*n*c-t*v*c-o*n*m+t*a*m)*M,e[11]=(h*a*r-o*u*r-h*n*c+t*u*c+o*n*f-t*a*f)*M,e[12]=E*M,e[13]=(h*v*i-p*u*i+p*n*d-t*v*d-h*n*g+t*u*g)*M,e[14]=(p*a*i-o*v*i-p*n*l+t*v*l+o*n*g-t*a*g)*M,e[15]=(o*u*i-h*a*i+h*n*l-t*u*l-o*n*d+t*a*d)*M,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,o=e.x,a=e.y,l=e.z,c=r*o,h=r*a;return this.set(c*o+n,c*a-i*l,c*l+i*a,0,c*a+i*l,h*a+n,h*l-i*o,0,c*l-i*a,h*l+i*o,r*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,o){return this.set(1,n,r,0,e,1,o,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,o=t._y,a=t._z,l=t._w,c=r+r,h=o+o,u=a+a,d=r*c,f=r*h,p=r*u,v=o*h,g=o*u,m=a*u,x=l*c,y=l*h,_=l*u,E=n.x,w=n.y,M=n.z;return i[0]=(1-(v+m))*E,i[1]=(f+_)*E,i[2]=(p-y)*E,i[3]=0,i[4]=(f-_)*w,i[5]=(1-(d+m))*w,i[6]=(g+x)*w,i[7]=0,i[8]=(p+y)*M,i[9]=(g-x)*M,i[10]=(1-(d+v))*M,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=_o.set(i[0],i[1],i[2]).length();const o=_o.set(i[4],i[5],i[6]).length(),a=_o.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],Ki.copy(this);const c=1/r,h=1/o,u=1/a;return Ki.elements[0]*=c,Ki.elements[1]*=c,Ki.elements[2]*=c,Ki.elements[4]*=h,Ki.elements[5]*=h,Ki.elements[6]*=h,Ki.elements[8]*=u,Ki.elements[9]*=u,Ki.elements[10]*=u,t.setFromRotationMatrix(Ki),n.x=r,n.y=o,n.z=a,this}makePerspective(e,t,n,i,r,o,a=tr){const l=this.elements,c=2*r/(t-e),h=2*r/(n-i),u=(t+e)/(t-e),d=(n+i)/(n-i);let f,p;if(a===tr)f=-(o+r)/(o-r),p=-2*o*r/(o-r);else if(a===Wa)f=-o/(o-r),p=-o*r/(o-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return l[0]=c,l[4]=0,l[8]=u,l[12]=0,l[1]=0,l[5]=h,l[9]=d,l[13]=0,l[2]=0,l[6]=0,l[10]=f,l[14]=p,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,n,i,r,o,a=tr){const l=this.elements,c=1/(t-e),h=1/(n-i),u=1/(o-r),d=(t+e)*c,f=(n+i)*h;let p,v;if(a===tr)p=(o+r)*u,v=-2*u;else if(a===Wa)p=r*u,v=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-d,l[1]=0,l[5]=2*h,l[9]=0,l[13]=-f,l[2]=0,l[6]=0,l[10]=v,l[14]=-p,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const _o=new L,Ki=new st,Nx=new L(0,0,0),Ox=new L(1,1,1),jr=new L,wl=new L,Ii=new L,Dp=new st,Lp=new Ht;class wi{constructor(e=0,t=0,n=0,i=wi.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],o=i[4],a=i[8],l=i[1],c=i[5],h=i[9],u=i[2],d=i[6],f=i[10];switch(t){case"XYZ":this._y=Math.asin(Tt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,f),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-Tt(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(Tt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,f),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-Tt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(Tt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-Tt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-h,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Dp.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Dp,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Lp.setFromEuler(this),this.setFromQuaternion(Lp,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}wi.DEFAULT_ORDER="XYZ";class Lh{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let Fx=0;const Up=new L,yo=new Ht,Er=new st,El=new L,sa=new L,kx=new L,Bx=new Ht,Np=new L(1,0,0),Op=new L(0,1,0),Fp=new L(0,0,1),kp={type:"added"},zx={type:"removed"},xo={type:"childadded",child:null},Cu={type:"childremoved",child:null};class Ot extends br{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Fx++}),this.uuid=Fi(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ot.DEFAULT_UP.clone();const e=new L,t=new wi,n=new Ht,i=new L(1,1,1);function r(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new st},normalMatrix:{value:new Et}}),this.matrix=new st,this.matrixWorld=new st,this.matrixAutoUpdate=Ot.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Ot.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Lh,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return yo.setFromAxisAngle(e,t),this.quaternion.multiply(yo),this}rotateOnWorldAxis(e,t){return yo.setFromAxisAngle(e,t),this.quaternion.premultiply(yo),this}rotateX(e){return this.rotateOnAxis(Np,e)}rotateY(e){return this.rotateOnAxis(Op,e)}rotateZ(e){return this.rotateOnAxis(Fp,e)}translateOnAxis(e,t){return Up.copy(e).applyQuaternion(this.quaternion),this.position.add(Up.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Np,e)}translateY(e){return this.translateOnAxis(Op,e)}translateZ(e){return this.translateOnAxis(Fp,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Er.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?El.copy(e):El.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),sa.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Er.lookAt(sa,El,this.up):Er.lookAt(El,sa,this.up),this.quaternion.setFromRotationMatrix(Er),i&&(Er.extractRotation(i.matrixWorld),yo.setFromRotationMatrix(Er),this.quaternion.premultiply(yo.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(kp),xo.child=e,this.dispatchEvent(xo),xo.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(zx),Cu.child=e,this.dispatchEvent(Cu),Cu.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Er.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Er.multiply(e.parent.matrixWorld)),e.applyMatrix4(Er),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(kp),xo.child=e,this.dispatchEvent(xo),xo.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const i=this.children;for(let r=0,o=i.length;r<o;r++)i[r].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(sa,e,kx),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(sa,Bx,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const i=this.children;for(let r=0,o=i.length;r<o;r++)i[r].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function r(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,h=l.length;c<h;c++){const u=l[c];r(e.shapes,u)}else r(e.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(r(e.materials,this.material[l]));i.material=a}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];i.animations.push(r(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),h=o(e.images),u=o(e.shapes),d=o(e.skeletons),f=o(e.animations),p=o(e.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),h.length>0&&(n.images=h),u.length>0&&(n.shapes=u),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),p.length>0&&(n.nodes=p)}return n.object=i,n;function o(a){const l=[];for(const c in a){const h=a[c];delete h.metadata,l.push(h)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Ot.DEFAULT_UP=new L(0,1,0);Ot.DEFAULT_MATRIX_AUTO_UPDATE=!0;Ot.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Qi=new L,Tr=new L,Ru=new L,Ar=new L,bo=new L,So=new L,Bp=new L,Pu=new L,Iu=new L,Du=new L,Lu=new Rt,Uu=new Rt,Nu=new Rt;class bi{constructor(e=new L,t=new L,n=new L){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),Qi.subVectors(e,t),i.cross(Qi);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){Qi.subVectors(i,t),Tr.subVectors(n,t),Ru.subVectors(e,t);const o=Qi.dot(Qi),a=Qi.dot(Tr),l=Qi.dot(Ru),c=Tr.dot(Tr),h=Tr.dot(Ru),u=o*c-a*a;if(u===0)return r.set(0,0,0),null;const d=1/u,f=(c*l-a*h)*d,p=(o*h-a*l)*d;return r.set(1-f-p,p,f)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Ar)===null?!1:Ar.x>=0&&Ar.y>=0&&Ar.x+Ar.y<=1}static getInterpolation(e,t,n,i,r,o,a,l){return this.getBarycoord(e,t,n,i,Ar)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(r,Ar.x),l.addScaledVector(o,Ar.y),l.addScaledVector(a,Ar.z),l)}static getInterpolatedAttribute(e,t,n,i,r,o){return Lu.setScalar(0),Uu.setScalar(0),Nu.setScalar(0),Lu.fromBufferAttribute(e,t),Uu.fromBufferAttribute(e,n),Nu.fromBufferAttribute(e,i),o.setScalar(0),o.addScaledVector(Lu,r.x),o.addScaledVector(Uu,r.y),o.addScaledVector(Nu,r.z),o}static isFrontFacing(e,t,n,i){return Qi.subVectors(n,t),Tr.subVectors(e,t),Qi.cross(Tr).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Qi.subVectors(this.c,this.b),Tr.subVectors(this.a,this.b),Qi.cross(Tr).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return bi.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return bi.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,i,r){return bi.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return bi.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return bi.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let o,a;bo.subVectors(i,n),So.subVectors(r,n),Pu.subVectors(e,n);const l=bo.dot(Pu),c=So.dot(Pu);if(l<=0&&c<=0)return t.copy(n);Iu.subVectors(e,i);const h=bo.dot(Iu),u=So.dot(Iu);if(h>=0&&u<=h)return t.copy(i);const d=l*u-h*c;if(d<=0&&l>=0&&h<=0)return o=l/(l-h),t.copy(n).addScaledVector(bo,o);Du.subVectors(e,r);const f=bo.dot(Du),p=So.dot(Du);if(p>=0&&f<=p)return t.copy(r);const v=f*c-l*p;if(v<=0&&c>=0&&p<=0)return a=c/(c-p),t.copy(n).addScaledVector(So,a);const g=h*p-f*u;if(g<=0&&u-h>=0&&f-p>=0)return Bp.subVectors(r,i),a=(u-h)/(u-h+(f-p)),t.copy(i).addScaledVector(Bp,a);const m=1/(g+v+d);return o=v*m,a=d*m,t.copy(n).addScaledVector(bo,o).addScaledVector(So,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const rv={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Zr={h:0,s:0,l:0},Tl={h:0,s:0,l:0};function Ou(s,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?s+(e-s)*6*t:t<1/2?e:t<2/3?s+(e-s)*6*(2/3-t):s}class Ge{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=ln){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Lt.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=Lt.workingColorSpace){return this.r=e,this.g=t,this.b=n,Lt.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=Lt.workingColorSpace){if(e=bf(e,1),t=Tt(t,0,1),n=Tt(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,o=2*n-r;this.r=Ou(o,r,e+1/3),this.g=Ou(o,r,e),this.b=Ou(o,r,e-1/3)}return Lt.toWorkingColorSpace(this,i),this}setStyle(e,t=ln){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],o=r.length;if(o===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=ln){const n=rv[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Fr(e.r),this.g=Fr(e.g),this.b=Fr(e.b),this}copyLinearToSRGB(e){return this.r=Go(e.r),this.g=Go(e.g),this.b=Go(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=ln){return Lt.fromWorkingColorSpace(Kn.copy(this),e),Math.round(Tt(Kn.r*255,0,255))*65536+Math.round(Tt(Kn.g*255,0,255))*256+Math.round(Tt(Kn.b*255,0,255))}getHexString(e=ln){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Lt.workingColorSpace){Lt.fromWorkingColorSpace(Kn.copy(this),t);const n=Kn.r,i=Kn.g,r=Kn.b,o=Math.max(n,i,r),a=Math.min(n,i,r);let l,c;const h=(a+o)/2;if(a===o)l=0,c=0;else{const u=o-a;switch(c=h<=.5?u/(o+a):u/(2-o-a),o){case n:l=(i-r)/u+(i<r?6:0);break;case i:l=(r-n)/u+2;break;case r:l=(n-i)/u+4;break}l/=6}return e.h=l,e.s=c,e.l=h,e}getRGB(e,t=Lt.workingColorSpace){return Lt.fromWorkingColorSpace(Kn.copy(this),t),e.r=Kn.r,e.g=Kn.g,e.b=Kn.b,e}getStyle(e=ln){Lt.fromWorkingColorSpace(Kn.copy(this),e);const t=Kn.r,n=Kn.g,i=Kn.b;return e!==ln?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(Zr),this.setHSL(Zr.h+e,Zr.s+t,Zr.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Zr),e.getHSL(Tl);const n=Ia(Zr.h,Tl.h,t),i=Ia(Zr.s,Tl.s,t),r=Ia(Zr.l,Tl.l,t);return this.setHSL(n,i,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,r=e.elements;return this.r=r[0]*t+r[3]*n+r[6]*i,this.g=r[1]*t+r[4]*n+r[7]*i,this.b=r[2]*t+r[5]*n+r[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Kn=new Ge;Ge.NAMES=rv;let Gx=0;class ri extends br{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Gx++}),this.uuid=Fi(),this.name="",this.type="Material",this.blending=Xs,this.side=vr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Ic,this.blendDst=Dc,this.blendEquation=ns,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Ge(0,0,0),this.blendAlpha=0,this.depthFunc=Ks,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Nd,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ds,this.stencilZFail=Ds,this.stencilZPass=Ds,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Xs&&(n.blending=this.blending),this.side!==vr&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==Ic&&(n.blendSrc=this.blendSrc),this.blendDst!==Dc&&(n.blendDst=this.blendDst),this.blendEquation!==ns&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==Ks&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Nd&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Ds&&(n.stencilFail=this.stencilFail),this.stencilZFail!==Ds&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==Ds&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(r){const o=[];for(const a in r){const l=r[a];delete l.metadata,o.push(l)}return o}if(t){const r=i(e.textures),o=i(e.images);r.length>0&&(n.textures=r),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class On extends ri{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ge(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new wi,this.combine=ol,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Pr=Vx();function Vx(){const s=new ArrayBuffer(4),e=new Float32Array(s),t=new Uint32Array(s),n=new Uint32Array(512),i=new Uint32Array(512);for(let l=0;l<256;++l){const c=l-127;c<-27?(n[l]=0,n[l|256]=32768,i[l]=24,i[l|256]=24):c<-14?(n[l]=1024>>-c-14,n[l|256]=1024>>-c-14|32768,i[l]=-c-1,i[l|256]=-c-1):c<=15?(n[l]=c+15<<10,n[l|256]=c+15<<10|32768,i[l]=13,i[l|256]=13):c<128?(n[l]=31744,n[l|256]=64512,i[l]=24,i[l|256]=24):(n[l]=31744,n[l|256]=64512,i[l]=13,i[l|256]=13)}const r=new Uint32Array(2048),o=new Uint32Array(64),a=new Uint32Array(64);for(let l=1;l<1024;++l){let c=l<<13,h=0;for(;(c&8388608)===0;)c<<=1,h-=8388608;c&=-8388609,h+=947912704,r[l]=c|h}for(let l=1024;l<2048;++l)r[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)o[l]=l<<23;o[31]=1199570944,o[32]=2147483648;for(let l=33;l<63;++l)o[l]=2147483648+(l-32<<23);o[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(a[l]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:r,exponentTable:o,offsetTable:a}}function vi(s){Math.abs(s)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),s=Tt(s,-65504,65504),Pr.floatView[0]=s;const e=Pr.uint32View[0],t=e>>23&511;return Pr.baseTable[t]+((e&8388607)>>Pr.shiftTable[t])}function ya(s){const e=s>>10;return Pr.uint32View[0]=Pr.mantissaTable[Pr.offsetTable[e]+(s&1023)]+Pr.exponentTable[e],Pr.floatView[0]}const Hx={toHalfFloat:vi,fromHalfFloat:ya},En=new L,Al=new xe;let Wx=0;class Ct{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:Wx++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=Ha,this.updateRanges=[],this.gpuType=Mi,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Al.fromBufferAttribute(this,t),Al.applyMatrix3(e),this.setXY(t,Al.x,Al.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)En.fromBufferAttribute(this,t),En.applyMatrix3(e),this.setXYZ(t,En.x,En.y,En.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)En.fromBufferAttribute(this,t),En.applyMatrix4(e),this.setXYZ(t,En.x,En.y,En.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)En.fromBufferAttribute(this,t),En.applyNormalMatrix(e),this.setXYZ(t,En.x,En.y,En.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)En.fromBufferAttribute(this,t),En.transformDirection(e),this.setXYZ(t,En.x,En.y,En.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=hi(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=Pt(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=hi(t,this.array)),t}setX(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=hi(t,this.array)),t}setY(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=hi(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=hi(t,this.array)),t}setW(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array),i=Pt(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array),i=Pt(i,this.array),r=Pt(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Ha&&(e.usage=this.usage),e}}class Xx extends Ct{constructor(e,t,n){super(new Int8Array(e),t,n)}}class Yx extends Ct{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class qx extends Ct{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class jx extends Ct{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Sf extends Ct{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Zx extends Ct{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Mf extends Ct{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Jx extends Ct{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=ya(this.array[e*this.itemSize]);return this.normalized&&(t=hi(t,this.array)),t}setX(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize]=vi(t),this}getY(e){let t=ya(this.array[e*this.itemSize+1]);return this.normalized&&(t=hi(t,this.array)),t}setY(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize+1]=vi(t),this}getZ(e){let t=ya(this.array[e*this.itemSize+2]);return this.normalized&&(t=hi(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize+2]=vi(t),this}getW(e){let t=ya(this.array[e*this.itemSize+3]);return this.normalized&&(t=hi(t,this.array)),t}setW(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize+3]=vi(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array)),this.array[e+0]=vi(t),this.array[e+1]=vi(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array),i=Pt(i,this.array)),this.array[e+0]=vi(t),this.array[e+1]=vi(n),this.array[e+2]=vi(i),this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array),i=Pt(i,this.array),r=Pt(r,this.array)),this.array[e+0]=vi(t),this.array[e+1]=vi(n),this.array[e+2]=vi(i),this.array[e+3]=vi(r),this}}class Ke extends Ct{constructor(e,t,n){super(new Float32Array(e),t,n)}}let Kx=0;const Gi=new st,Fu=new Ot,Mo=new L,Di=new Mn,oa=new Mn,Un=new L;class bt extends br{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Kx++}),this.uuid=Fi(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(tv(e)?Mf:Sf)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new Et().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Gi.makeRotationFromQuaternion(e),this.applyMatrix4(Gi),this}rotateX(e){return Gi.makeRotationX(e),this.applyMatrix4(Gi),this}rotateY(e){return Gi.makeRotationY(e),this.applyMatrix4(Gi),this}rotateZ(e){return Gi.makeRotationZ(e),this.applyMatrix4(Gi),this}translate(e,t,n){return Gi.makeTranslation(e,t,n),this.applyMatrix4(Gi),this}scale(e,t,n){return Gi.makeScale(e,t,n),this.applyMatrix4(Gi),this}lookAt(e){return Fu.lookAt(e),Fu.updateMatrix(),this.applyMatrix4(Fu.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Mo).negate(),this.translate(Mo.x,Mo.y,Mo.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const n=[];for(let i=0,r=e.length;i<r;i++){const o=e[i];n.push(o.x,o.y,o.z||0)}this.setAttribute("position",new Ke(n,3))}else{const n=Math.min(e.length,t.count);for(let i=0;i<n;i++){const r=e[i];t.setXYZ(i,r.x,r.y,r.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Mn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new L(-1/0,-1/0,-1/0),new L(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];Di.setFromBufferAttribute(r),this.morphTargetsRelative?(Un.addVectors(this.boundingBox.min,Di.min),this.boundingBox.expandByPoint(Un),Un.addVectors(this.boundingBox.max,Di.max),this.boundingBox.expandByPoint(Un)):(this.boundingBox.expandByPoint(Di.min),this.boundingBox.expandByPoint(Di.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new An);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new L,1/0);return}if(e){const n=this.boundingSphere.center;if(Di.setFromBufferAttribute(e),t)for(let r=0,o=t.length;r<o;r++){const a=t[r];oa.setFromBufferAttribute(a),this.morphTargetsRelative?(Un.addVectors(Di.min,oa.min),Di.expandByPoint(Un),Un.addVectors(Di.max,oa.max),Di.expandByPoint(Un)):(Di.expandByPoint(oa.min),Di.expandByPoint(oa.max))}Di.getCenter(n);let i=0;for(let r=0,o=e.count;r<o;r++)Un.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(Un));if(t)for(let r=0,o=t.length;r<o;r++){const a=t[r],l=this.morphTargetsRelative;for(let c=0,h=a.count;c<h;c++)Un.fromBufferAttribute(a,c),l&&(Mo.fromBufferAttribute(e,c),Un.add(Mo)),i=Math.max(i,n.distanceToSquared(Un))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,i=t.normal,r=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Ct(new Float32Array(4*n.count),4));const o=this.getAttribute("tangent"),a=[],l=[];for(let T=0;T<n.count;T++)a[T]=new L,l[T]=new L;const c=new L,h=new L,u=new L,d=new xe,f=new xe,p=new xe,v=new L,g=new L;function m(T,S,b){c.fromBufferAttribute(n,T),h.fromBufferAttribute(n,S),u.fromBufferAttribute(n,b),d.fromBufferAttribute(r,T),f.fromBufferAttribute(r,S),p.fromBufferAttribute(r,b),h.sub(c),u.sub(c),f.sub(d),p.sub(d);const D=1/(f.x*p.y-p.x*f.y);isFinite(D)&&(v.copy(h).multiplyScalar(p.y).addScaledVector(u,-f.y).multiplyScalar(D),g.copy(u).multiplyScalar(f.x).addScaledVector(h,-p.x).multiplyScalar(D),a[T].add(v),a[S].add(v),a[b].add(v),l[T].add(g),l[S].add(g),l[b].add(g))}let x=this.groups;x.length===0&&(x=[{start:0,count:e.count}]);for(let T=0,S=x.length;T<S;++T){const b=x[T],D=b.start,P=b.count;for(let k=D,V=D+P;k<V;k+=3)m(e.getX(k+0),e.getX(k+1),e.getX(k+2))}const y=new L,_=new L,E=new L,w=new L;function M(T){E.fromBufferAttribute(i,T),w.copy(E);const S=a[T];y.copy(S),y.sub(E.multiplyScalar(E.dot(S))).normalize(),_.crossVectors(w,S);const D=_.dot(l[T])<0?-1:1;o.setXYZW(T,y.x,y.y,y.z,D)}for(let T=0,S=x.length;T<S;++T){const b=x[T],D=b.start,P=b.count;for(let k=D,V=D+P;k<V;k+=3)M(e.getX(k+0)),M(e.getX(k+1)),M(e.getX(k+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Ct(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const i=new L,r=new L,o=new L,a=new L,l=new L,c=new L,h=new L,u=new L;if(e)for(let d=0,f=e.count;d<f;d+=3){const p=e.getX(d+0),v=e.getX(d+1),g=e.getX(d+2);i.fromBufferAttribute(t,p),r.fromBufferAttribute(t,v),o.fromBufferAttribute(t,g),h.subVectors(o,r),u.subVectors(i,r),h.cross(u),a.fromBufferAttribute(n,p),l.fromBufferAttribute(n,v),c.fromBufferAttribute(n,g),a.add(h),l.add(h),c.add(h),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(v,l.x,l.y,l.z),n.setXYZ(g,c.x,c.y,c.z)}else for(let d=0,f=t.count;d<f;d+=3)i.fromBufferAttribute(t,d+0),r.fromBufferAttribute(t,d+1),o.fromBufferAttribute(t,d+2),h.subVectors(o,r),u.subVectors(i,r),h.cross(u),n.setXYZ(d+0,h.x,h.y,h.z),n.setXYZ(d+1,h.x,h.y,h.z),n.setXYZ(d+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Un.fromBufferAttribute(e,t),Un.normalize(),e.setXYZ(t,Un.x,Un.y,Un.z)}toNonIndexed(){function e(a,l){const c=a.array,h=a.itemSize,u=a.normalized,d=new c.constructor(l.length*h);let f=0,p=0;for(let v=0,g=l.length;v<g;v++){a.isInterleavedBufferAttribute?f=l[v]*a.data.stride+a.offset:f=l[v]*h;for(let m=0;m<h;m++)d[p++]=c[f++]}return new Ct(d,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new bt,n=this.index.array,i=this.attributes;for(const a in i){const l=i[a],c=e(l,n);t.setAttribute(a,c)}const r=this.morphAttributes;for(const a in r){const l=[],c=r[a];for(let h=0,u=c.length;h<u;h++){const d=c[h],f=e(d,n);l.push(f)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n){const c=n[l];e.data.attributes[l]=c.toJSON(e.data)}const i={};let r=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],h=[];for(let u=0,d=c.length;u<d;u++){const f=c[u];h.push(f.toJSON(e.data))}h.length>0&&(i[l]=h,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const c in i){const h=i[c];this.setAttribute(c,h.clone(t))}const r=e.morphAttributes;for(const c in r){const h=[],u=r[c];for(let d=0,f=u.length;d<f;d++)h.push(u[d].clone(t));this.morphAttributes[c]=h}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,h=o.length;c<h;c++){const u=o[c];this.addGroup(u.start,u.count,u.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const zp=new st,vs=new ss,Cl=new An,Gp=new L,Rl=new L,Pl=new L,Il=new L,ku=new L,Dl=new L,Vp=new L,Ll=new L;class ke extends Ot{constructor(e=new bt,t=new On){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,o=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const a=this.morphTargetInfluences;if(r&&a){Dl.set(0,0,0);for(let l=0,c=r.length;l<c;l++){const h=a[l],u=r[l];h!==0&&(ku.fromBufferAttribute(u,e),o?Dl.addScaledVector(ku,h):Dl.addScaledVector(ku.sub(t),h))}t.add(Dl)}return t}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),Cl.copy(n.boundingSphere),Cl.applyMatrix4(r),vs.copy(e.ray).recast(e.near),!(Cl.containsPoint(vs.origin)===!1&&(vs.intersectSphere(Cl,Gp)===null||vs.origin.distanceToSquared(Gp)>(e.far-e.near)**2))&&(zp.copy(r).invert(),vs.copy(e.ray).applyMatrix4(zp),!(n.boundingBox!==null&&vs.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,vs)))}_computeIntersections(e,t,n){let i;const r=this.geometry,o=this.material,a=r.index,l=r.attributes.position,c=r.attributes.uv,h=r.attributes.uv1,u=r.attributes.normal,d=r.groups,f=r.drawRange;if(a!==null)if(Array.isArray(o))for(let p=0,v=d.length;p<v;p++){const g=d[p],m=o[g.materialIndex],x=Math.max(g.start,f.start),y=Math.min(a.count,Math.min(g.start+g.count,f.start+f.count));for(let _=x,E=y;_<E;_+=3){const w=a.getX(_),M=a.getX(_+1),T=a.getX(_+2);i=Ul(this,m,e,n,c,h,u,w,M,T),i&&(i.faceIndex=Math.floor(_/3),i.face.materialIndex=g.materialIndex,t.push(i))}}else{const p=Math.max(0,f.start),v=Math.min(a.count,f.start+f.count);for(let g=p,m=v;g<m;g+=3){const x=a.getX(g),y=a.getX(g+1),_=a.getX(g+2);i=Ul(this,o,e,n,c,h,u,x,y,_),i&&(i.faceIndex=Math.floor(g/3),t.push(i))}}else if(l!==void 0)if(Array.isArray(o))for(let p=0,v=d.length;p<v;p++){const g=d[p],m=o[g.materialIndex],x=Math.max(g.start,f.start),y=Math.min(l.count,Math.min(g.start+g.count,f.start+f.count));for(let _=x,E=y;_<E;_+=3){const w=_,M=_+1,T=_+2;i=Ul(this,m,e,n,c,h,u,w,M,T),i&&(i.faceIndex=Math.floor(_/3),i.face.materialIndex=g.materialIndex,t.push(i))}}else{const p=Math.max(0,f.start),v=Math.min(l.count,f.start+f.count);for(let g=p,m=v;g<m;g+=3){const x=g,y=g+1,_=g+2;i=Ul(this,o,e,n,c,h,u,x,y,_),i&&(i.faceIndex=Math.floor(g/3),t.push(i))}}}}function Qx(s,e,t,n,i,r,o,a){let l;if(e.side===ni?l=n.intersectTriangle(o,r,i,!0,a):l=n.intersectTriangle(i,r,o,e.side===vr,a),l===null)return null;Ll.copy(a),Ll.applyMatrix4(s.matrixWorld);const c=t.ray.origin.distanceTo(Ll);return c<t.near||c>t.far?null:{distance:c,point:Ll.clone(),object:s}}function Ul(s,e,t,n,i,r,o,a,l,c){s.getVertexPosition(a,Rl),s.getVertexPosition(l,Pl),s.getVertexPosition(c,Il);const h=Qx(s,e,t,n,Rl,Pl,Il,Vp);if(h){const u=new L;bi.getBarycoord(Vp,Rl,Pl,Il,u),i&&(h.uv=bi.getInterpolatedAttribute(i,a,l,c,u,new xe)),r&&(h.uv1=bi.getInterpolatedAttribute(r,a,l,c,u,new xe)),o&&(h.normal=bi.getInterpolatedAttribute(o,a,l,c,u,new L),h.normal.dot(n.direction)>0&&h.normal.multiplyScalar(-1));const d={a,b:l,c,normal:new L,materialIndex:0};bi.getNormal(Rl,Pl,Il,d.normal),h.face=d,h.barycoord=u}return h}class vn extends bt{constructor(e=1,t=1,n=1,i=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:o};const a=this;i=Math.floor(i),r=Math.floor(r),o=Math.floor(o);const l=[],c=[],h=[],u=[];let d=0,f=0;p("z","y","x",-1,-1,n,t,e,o,r,0),p("z","y","x",1,-1,n,t,-e,o,r,1),p("x","z","y",1,1,e,n,t,i,o,2),p("x","z","y",1,-1,e,n,-t,i,o,3),p("x","y","z",1,-1,e,t,n,i,r,4),p("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(l),this.setAttribute("position",new Ke(c,3)),this.setAttribute("normal",new Ke(h,3)),this.setAttribute("uv",new Ke(u,2));function p(v,g,m,x,y,_,E,w,M,T,S){const b=_/M,D=E/T,P=_/2,k=E/2,V=w/2,K=M+1,N=T+1;let Q=0,Z=0;const j=new L;for(let X=0;X<N;X++){const F=X*D-k;for(let J=0;J<K;J++){const $=J*b-P;j[v]=$*x,j[g]=F*y,j[m]=V,c.push(j.x,j.y,j.z),j[v]=0,j[g]=0,j[m]=w>0?1:-1,h.push(j.x,j.y,j.z),u.push(J/M),u.push(1-X/T),Q+=1}}for(let X=0;X<T;X++)for(let F=0;F<M;F++){const J=d+F+K*X,$=d+F+K*(X+1),G=d+(F+1)+K*(X+1),W=d+(F+1)+K*X;l.push(J,$,W),l.push($,G,W),Z+=6}a.addGroup(f,Z,S),f+=Z,d+=Q}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new vn(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Wo(s){const e={};for(const t in s){e[t]={};for(const n in s[t]){const i=s[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function li(s){const e={};for(let t=0;t<s.length;t++){const n=Wo(s[t]);for(const i in n)e[i]=n[i]}return e}function $x(s){const e=[];for(let t=0;t<s.length;t++)e.push(s[t].clone());return e}function sv(s){const e=s.getRenderTarget();return e===null?s.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:Lt.workingColorSpace}const cl={clone:Wo,merge:li};var eb=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,tb=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Ei extends ri{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=eb,this.fragmentShader=tb,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Wo(e.uniforms),this.uniformsGroups=$x(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?t.uniforms[i]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[i]={type:"m4",value:o.toArray()}:t.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Uh extends Ot{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new st,this.projectionMatrix=new st,this.projectionMatrixInverse=new st,this.coordinateSystem=tr}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const Jr=new L,Hp=new xe,Wp=new xe;class bn extends Uh{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Ho*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(qs*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Ho*2*Math.atan(Math.tan(qs*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){Jr.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(Jr.x,Jr.y).multiplyScalar(-e/Jr.z),Jr.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(Jr.x,Jr.y).multiplyScalar(-e/Jr.z)}getViewSize(e,t){return this.getViewBounds(e,Hp,Wp),t.subVectors(Wp,Hp)}setViewOffset(e,t,n,i,r,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(qs*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;r+=o.offsetX*i/l,t-=o.offsetY*n/c,i*=o.width/l,n*=o.height/c}const a=this.filmOffset;a!==0&&(r+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const wo=-90,Eo=1;class ov extends Ot{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new bn(wo,Eo,e,t);i.layers=this.layers,this.add(i);const r=new bn(wo,Eo,e,t);r.layers=this.layers,this.add(r);const o=new bn(wo,Eo,e,t);o.layers=this.layers,this.add(o);const a=new bn(wo,Eo,e,t);a.layers=this.layers,this.add(a);const l=new bn(wo,Eo,e,t);l.layers=this.layers,this.add(l);const c=new bn(wo,Eo,e,t);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,r,o,a,l]=t;for(const c of t)this.remove(c);if(e===tr)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===Wa)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const c of t)this.add(c),c.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[r,o,a,l,c,h]=this.children,u=e.getRenderTarget(),d=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const v=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,r),e.setRenderTarget(n,1,i),e.render(t,o),e.setRenderTarget(n,2,i),e.render(t,a),e.setRenderTarget(n,3,i),e.render(t,l),e.setRenderTarget(n,4,i),e.render(t,c),n.texture.generateMipmaps=v,e.setRenderTarget(n,5,i),e.render(t,h),e.setRenderTarget(u,d,f),e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class hl extends pn{constructor(e,t,n,i,r,o,a,l,c,h){e=e!==void 0?e:[],t=t!==void 0?t:zr,super(e,t,n,i,r,o,a,l,c,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class av extends Yi{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new hl(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Sn}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new vn(5,5,5),r=new Ei({name:"CubemapFromEquirect",uniforms:Wo(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:ni,blending:Or});r.uniforms.tEquirect.value=t;const o=new ke(i,r),a=t.minFilter;return t.minFilter===er&&(t.minFilter=Sn),new ov(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,i){const r=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,i);e.setRenderTarget(r)}}class Wi extends Ot{constructor(){super(),this.isGroup=!0,this.type="Group"}}const nb={type:"move"};class Tc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Wi,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Wi,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new L,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new L),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Wi,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new L,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new L),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){o=!0;for(const v of e.hand.values()){const g=t.getJointPose(v,n),m=this._getHandJoint(c,v);g!==null&&(m.matrix.fromArray(g.transform.matrix),m.matrix.decompose(m.position,m.rotation,m.scale),m.matrixWorldNeedsUpdate=!0,m.jointRadius=g.radius),m.visible=g!==null}const h=c.joints["index-finger-tip"],u=c.joints["thumb-tip"],d=h.position.distanceTo(u.position),f=.02,p=.005;c.inputState.pinching&&d>f+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&d<=f-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(nb)))}return a!==null&&(a.visible=i!==null),l!==null&&(l.visible=r!==null),c!==null&&(c.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new Wi;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class Nh{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Ge(e),this.density=t}clone(){return new Nh(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class Oh{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Ge(e),this.near=t,this.far=n}clone(){return new Oh(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class Fh extends Ot{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new wi,this.environmentIntensity=1,this.environmentRotation=new wi,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class kh{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Ha,this.updateRanges=[],this.version=0,this.uuid=Fi()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Fi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Fi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const ai=new L;class Ni{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)ai.fromBufferAttribute(this,t),ai.applyMatrix4(e),this.setXYZ(t,ai.x,ai.y,ai.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)ai.fromBufferAttribute(this,t),ai.applyNormalMatrix(e),this.setXYZ(t,ai.x,ai.y,ai.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)ai.fromBufferAttribute(this,t),ai.transformDirection(e),this.setXYZ(t,ai.x,ai.y,ai.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=hi(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=Pt(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=Pt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=Pt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=Pt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=Pt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=hi(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=hi(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=hi(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=hi(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array),i=Pt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array),i=Pt(i,this.array),r=Pt(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new Ct(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Ni(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class qo extends ri{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Ge(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let To;const aa=new L,Ao=new L,Co=new L,Ro=new xe,la=new xe,lv=new st,Nl=new L,ca=new L,Ol=new L,Xp=new xe,Bu=new xe,Yp=new xe;class ul extends Ot{constructor(e=new qo){if(super(),this.isSprite=!0,this.type="Sprite",To===void 0){To=new bt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new kh(t,5);To.setIndex([0,1,2,0,2,3]),To.setAttribute("position",new Ni(n,3,0,!1)),To.setAttribute("uv",new Ni(n,2,3,!1))}this.geometry=To,this.material=e,this.center=new xe(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Ao.setFromMatrixScale(this.matrixWorld),lv.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Co.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Ao.multiplyScalar(-Co.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const o=this.center;Fl(Nl.set(-.5,-.5,0),Co,o,Ao,i,r),Fl(ca.set(.5,-.5,0),Co,o,Ao,i,r),Fl(Ol.set(.5,.5,0),Co,o,Ao,i,r),Xp.set(0,0),Bu.set(1,0),Yp.set(1,1);let a=e.ray.intersectTriangle(Nl,ca,Ol,!1,aa);if(a===null&&(Fl(ca.set(-.5,.5,0),Co,o,Ao,i,r),Bu.set(0,1),a=e.ray.intersectTriangle(Nl,Ol,ca,!1,aa),a===null))return;const l=e.ray.origin.distanceTo(aa);l<e.near||l>e.far||t.push({distance:l,point:aa.clone(),uv:bi.getInterpolation(aa,Nl,ca,Ol,Xp,Bu,Yp,new xe),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function Fl(s,e,t,n,i,r){Ro.subVectors(s,t).addScalar(.5).multiply(n),i!==void 0?(la.x=r*Ro.x-i*Ro.y,la.y=i*Ro.x+r*Ro.y):la.copy(Ro),s.copy(e),s.x+=la.x,s.y+=la.y,s.applyMatrix4(lv)}const kl=new L,qp=new L;class cv extends Ot{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const r=t[n];this.addLevel(r.object.clone(),r.distance,r.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let r;for(r=0;r<i.length&&!(t<i[r].distance);r++);return i.splice(r,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}removeLevel(e){const t=this.levels;for(let n=0;n<t.length;n++)if(t[n].distance===e){const i=t.splice(n,1);return this.remove(i[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let r=t[n].distance;if(t[n].object.visible&&(r-=r*t[n].hysteresis),e<r)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){kl.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(kl);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){kl.setFromMatrixPosition(e.matrixWorld),qp.setFromMatrixPosition(this.matrixWorld);const n=kl.distanceTo(qp)/e.zoom;t[0].object.visible=!0;let i,r;for(i=1,r=t.length;i<r;i++){let o=t[i].distance;if(t[i].object.visible&&(o-=o*t[i].hysteresis),n>=o)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<r;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const o=n[i];t.object.levels.push({object:o.object.uuid,distance:o.distance,hysteresis:o.hysteresis})}return t}}const jp=new L,Zp=new Rt,Jp=new Rt,ib=new L,Kp=new st,Bl=new L,zu=new An,Qp=new st,Gu=new ss;class wf extends ke{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Ud,this.bindMatrix=new st,this.bindMatrixInverse=new st,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Mn),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Bl),this.boundingBox.expandByPoint(Bl)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new An),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Bl),this.boundingSphere.expandByPoint(Bl)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),zu.copy(this.boundingSphere),zu.applyMatrix4(i),e.ray.intersectsSphere(zu)!==!1&&(Qp.copy(i).invert(),Gu.copy(e.ray).applyMatrix4(Qp),!(this.boundingBox!==null&&Gu.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,Gu)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Rt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===Ud?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===V0?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;Zp.fromBufferAttribute(i.attributes.skinIndex,e),Jp.fromBufferAttribute(i.attributes.skinWeight,e),jp.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const o=Jp.getComponent(r);if(o!==0){const a=Zp.getComponent(r);Kp.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),t.addScaledVector(ib.copy(jp).applyMatrix4(Kp),o)}}return t.applyMatrix4(this.bindMatrixInverse)}}class Bh extends Ot{constructor(){super(),this.isBone=!0,this.type="Bone"}}class mr extends pn{constructor(e=null,t=1,n=1,i,r,o,a,l,c=Yn,h=Yn,u,d){super(null,o,a,l,c,h,i,r,u,d),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const $p=new st,rb=new st;class dl{constructor(e=[],t=[]){this.uuid=Fi(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new st)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new st;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,o=e.length;r<o;r++){const a=e[r]?e[r].matrixWorld:rb;$p.multiplyMatrices(a,t[r]),$p.toArray(n,r*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new dl(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new mr(t,e,e,ui,Mi);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const r=e.bones[n];let o=t[r];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),o=new Bh),this.bones.push(o),this.boneInverses.push(new st().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,r=t.length;i<r;i++){const o=t[i];e.bones.push(o.uuid);const a=n[i];e.boneInverses.push(a.toArray())}return e}}class to extends Ct{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Po=new st,em=new st,zl=[],tm=new Mn,sb=new st,ha=new ke,ua=new An;class hv extends ke{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new to(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,sb)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Mn),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Po),tm.copy(e.boundingBox).applyMatrix4(Po),this.boundingBox.union(tm)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new An),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Po),ua.copy(e.boundingSphere).applyMatrix4(Po),this.boundingSphere.union(ua)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const n=t.morphTargetInfluences,i=this.morphTexture.source.data.data,r=n.length+1,o=e*r+1;for(let a=0;a<n.length;a++)n[a]=i[o+a]}raycast(e,t){const n=this.matrixWorld,i=this.count;if(ha.geometry=this.geometry,ha.material=this.material,ha.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),ua.copy(this.boundingSphere),ua.applyMatrix4(n),e.ray.intersectsSphere(ua)!==!1))for(let r=0;r<i;r++){this.getMatrixAt(r,Po),em.multiplyMatrices(n,Po),ha.matrixWorld=em,ha.raycast(e,zl);for(let o=0,a=zl.length;o<a;o++){const l=zl[o];l.instanceId=r,l.object=this,t.push(l)}zl.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new to(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const n=t.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new mr(new Float32Array(i*this.count),i,this.count,Ah,Mi));const r=this.morphTexture.source.data.data;let o=0;for(let c=0;c<n.length;c++)o+=n[c];const a=this.geometry.morphTargetsRelative?1:1-o,l=i*e;r[l]=a,r.set(n,l+1)}updateMorphTargets(){}dispose(){return this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null),this}}const Vu=new L,ob=new L,ab=new Et;class ur{constructor(e=new L(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Vu.subVectors(n,t).cross(ob.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Vu),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(e.start).addScaledVector(n,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||ab.getNormalMatrix(e),i=this.coplanarPoint(Vu).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const _s=new An,Gl=new L;class fl{constructor(e=new ur,t=new ur,n=new ur,i=new ur,r=new ur,o=new ur){this.planes=[e,t,n,i,r,o]}set(e,t,n,i,r,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(i),a[4].copy(r),a[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=tr){const n=this.planes,i=e.elements,r=i[0],o=i[1],a=i[2],l=i[3],c=i[4],h=i[5],u=i[6],d=i[7],f=i[8],p=i[9],v=i[10],g=i[11],m=i[12],x=i[13],y=i[14],_=i[15];if(n[0].setComponents(l-r,d-c,g-f,_-m).normalize(),n[1].setComponents(l+r,d+c,g+f,_+m).normalize(),n[2].setComponents(l+o,d+h,g+p,_+x).normalize(),n[3].setComponents(l-o,d-h,g-p,_-x).normalize(),n[4].setComponents(l-a,d-u,g-v,_-y).normalize(),t===tr)n[5].setComponents(l+a,d+u,g+v,_+y).normalize();else if(t===Wa)n[5].setComponents(a,u,v,y).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),_s.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),_s.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(_s)}intersectsSprite(e){return _s.center.set(0,0,0),_s.radius=.7071067811865476,_s.applyMatrix4(e.matrixWorld),this.intersectsSphere(_s)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(Gl.x=i.normal.x>0?e.max.x:e.min.x,Gl.y=i.normal.y>0?e.max.y:e.min.y,Gl.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(Gl)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Hu(s,e){return s-e}function lb(s,e){return s.z-e.z}function cb(s,e){return e.z-s.z}class hb{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t,n,i){const r=this.pool,o=this.list;this.index>=r.length&&r.push({start:-1,count:-1,z:-1,index:-1});const a=r[this.index];o.push(a),this.index++,a.start=e,a.count=t,a.z=n,a.index=i}reset(){this.list.length=0,this.index=0}}const mi=new st,ub=new Ge(1,1,1),Wu=new fl,Vl=new Mn,ys=new An,da=new L,nm=new L,db=new L,Xu=new hb,Qn=new ke,Hl=[];function fb(s,e,t=0){const n=e.itemSize;if(s.isInterleavedBufferAttribute||s.array.constructor!==e.array.constructor){const i=s.count;for(let r=0;r<i;r++)for(let o=0;o<n;o++)e.setComponent(r+t,o,s.getComponent(r,o))}else e.array.set(s.array,t*n);e.needsUpdate=!0}function xs(s,e){if(s.constructor!==e.constructor){const t=Math.min(s.length,e.length);for(let n=0;n<t;n++)e[n]=s[n]}else{const t=Math.min(s.length,e.length);e.set(new s.constructor(s.buffer,0,t))}}class uv extends ke{get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}constructor(e,t,n=t*2,i){super(new bt,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=e,this._maxVertexCount=t,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}_initMatricesTexture(){let e=Math.sqrt(this._maxInstanceCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),n=new mr(t,e,e,ui,Mi);this._matricesTexture=n}_initIndirectTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Uint32Array(e*e),n=new mr(t,e,e,al,Gr);this._indirectTexture=n}_initColorsTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Float32Array(e*e*4).fill(1),n=new mr(t,e,e,ui,Mi);n.colorSpace=Lt.workingColorSpace,this._colorsTexture=n}_initializeGeometry(e){const t=this.geometry,n=this._maxVertexCount,i=this._maxIndexCount;if(this._geometryInitialized===!1){for(const r in e.attributes){const o=e.getAttribute(r),{array:a,itemSize:l,normalized:c}=o,h=new a.constructor(n*l),u=new Ct(h,l,c);t.setAttribute(r,u)}if(e.getIndex()!==null){const r=n>65535?new Uint32Array(i):new Uint16Array(i);t.setIndex(new Ct(r,1))}this._geometryInitialized=!0}}_validateGeometry(e){const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const n in t.attributes){if(!e.hasAttribute(n))throw new Error(`THREE.BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=e.getAttribute(n),r=t.getAttribute(n);if(i.itemSize!==r.itemSize||i.normalized!==r.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(e){const t=this._instanceInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${e}. Instance is either out of range or has been deleted.`)}validateGeometryId(e){const t=this._geometryInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${e}. Geometry is either out of range or has been deleted.`)}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Mn);const e=this.boundingBox,t=this._instanceInfo;e.makeEmpty();for(let n=0,i=t.length;n<i;n++){if(t[n].active===!1)continue;const r=t[n].geometryIndex;this.getMatrixAt(n,mi),this.getBoundingBoxAt(r,Vl).applyMatrix4(mi),e.union(Vl)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new An);const e=this.boundingSphere,t=this._instanceInfo;e.makeEmpty();for(let n=0,i=t.length;n<i;n++){if(t[n].active===!1)continue;const r=t[n].geometryIndex;this.getMatrixAt(n,mi),this.getBoundingSphereAt(r,ys).applyMatrix4(mi),e.union(ys)}}addInstance(e){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const n={visible:!0,active:!0,geometryIndex:e};let i=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(Hu),i=this._availableInstanceIds.shift(),this._instanceInfo[i]=n):(i=this._instanceInfo.length,this._instanceInfo.push(n));const r=this._matricesTexture;mi.identity().toArray(r.image.data,i*16),r.needsUpdate=!0;const o=this._colorsTexture;return o&&(ub.toArray(o.image.data,i*4),o.needsUpdate=!0),this._visibilityChanged=!0,i}addGeometry(e,t=-1,n=-1){this._initializeGeometry(e),this._validateGeometry(e);const i={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},r=this._geometryInfo;i.vertexStart=this._nextVertexStart,i.reservedVertexCount=t===-1?e.getAttribute("position").count:t;const o=e.getIndex();if(o!==null&&(i.indexStart=this._nextIndexStart,i.reservedIndexCount=n===-1?o.count:n),i.indexStart!==-1&&i.indexStart+i.reservedIndexCount>this._maxIndexCount||i.vertexStart+i.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let l;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(Hu),l=this._availableGeometryIds.shift(),r[l]=i):(l=this._geometryCount,this._geometryCount++,r.push(i)),this.setGeometryAt(l,e),this._nextIndexStart=i.indexStart+i.reservedIndexCount,this._nextVertexStart=i.vertexStart+i.reservedVertexCount,l}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const n=this.geometry,i=n.getIndex()!==null,r=n.getIndex(),o=t.getIndex(),a=this._geometryInfo[e];if(i&&o.count>a.reservedIndexCount||t.attributes.position.count>a.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const l=a.vertexStart,c=a.reservedVertexCount;a.vertexCount=t.getAttribute("position").count;for(const h in n.attributes){const u=t.getAttribute(h),d=n.getAttribute(h);fb(u,d,l);const f=u.itemSize;for(let p=u.count,v=c;p<v;p++){const g=l+p;for(let m=0;m<f;m++)d.setComponent(g,m,0)}d.needsUpdate=!0,d.addUpdateRange(l*f,c*f)}if(i){const h=a.indexStart,u=a.reservedIndexCount;a.indexCount=t.getIndex().count;for(let d=0;d<o.count;d++)r.setX(h+d,l+o.getX(d));for(let d=o.count,f=u;d<f;d++)r.setX(h+d,l);r.needsUpdate=!0,r.addUpdateRange(h,a.reservedIndexCount)}return a.start=i?a.indexStart:a.vertexStart,a.count=i?a.indexCount:a.vertexCount,a.boundingBox=null,t.boundingBox!==null&&(a.boundingBox=t.boundingBox.clone()),a.boundingSphere=null,t.boundingSphere!==null&&(a.boundingSphere=t.boundingSphere.clone()),this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._geometryInfo;if(e>=t.length||t[e].active===!1)return this;const n=this._instanceInfo;for(let i=0,r=n.length;i<r;i++)n[i].active&&n[i].geometryIndex===e&&this.deleteInstance(i);return t[e].active=!1,this._availableGeometryIds.push(e),this._visibilityChanged=!0,this}deleteInstance(e){return this.validateInstanceId(e),this._instanceInfo[e].active=!1,this._availableInstanceIds.push(e),this._visibilityChanged=!0,this}optimize(){let e=0,t=0;const n=this._geometryInfo,i=n.map((o,a)=>a).sort((o,a)=>n[o].vertexStart-n[a].vertexStart),r=this.geometry;for(let o=0,a=n.length;o<a;o++){const l=i[o],c=n[l];if(c.active!==!1){if(r.index!==null){if(c.indexStart!==t){const{indexStart:h,vertexStart:u,reservedIndexCount:d}=c,f=r.index,p=f.array,v=e-u;for(let g=h;g<h+d;g++)p[g]=p[g]+v;f.array.copyWithin(t,h,h+d),f.addUpdateRange(t,d),c.indexStart=t}t+=c.reservedIndexCount}if(c.vertexStart!==e){const{vertexStart:h,reservedVertexCount:u}=c,d=r.attributes;for(const f in d){const p=d[f],{array:v,itemSize:g}=p;v.copyWithin(e*g,h*g,(h+u)*g),p.addUpdateRange(e*g,u*g)}c.vertexStart=e}e+=c.reservedVertexCount,c.start=r.index?c.indexStart:c.vertexStart,this._nextIndexStart=r.index?c.indexStart+c.reservedIndexCount:0,this._nextVertexStart=c.vertexStart+c.reservedVertexCount}}return this}getBoundingBoxAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[e];if(i.boundingBox===null){const r=new Mn,o=n.index,a=n.attributes.position;for(let l=i.start,c=i.start+i.count;l<c;l++){let h=l;o&&(h=o.getX(h)),r.expandByPoint(da.fromBufferAttribute(a,h))}i.boundingBox=r}return t.copy(i.boundingBox),t}getBoundingSphereAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[e];if(i.boundingSphere===null){const r=new An;this.getBoundingBoxAt(e,Vl),Vl.getCenter(r.center);const o=n.index,a=n.attributes.position;let l=0;for(let c=i.start,h=i.start+i.count;c<h;c++){let u=c;o&&(u=o.getX(u)),da.fromBufferAttribute(a,u),l=Math.max(l,r.center.distanceToSquared(da))}r.radius=Math.sqrt(l),i.boundingSphere=r}return t.copy(i.boundingSphere),t}setMatrixAt(e,t){this.validateInstanceId(e);const n=this._matricesTexture,i=this._matricesTexture.image.data;return t.toArray(i,e*16),n.needsUpdate=!0,this}getMatrixAt(e,t){return this.validateInstanceId(e),t.fromArray(this._matricesTexture.image.data,e*16)}setColorAt(e,t){return this.validateInstanceId(e),this._colorsTexture===null&&this._initColorsTexture(),t.toArray(this._colorsTexture.image.data,e*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(e,t){return this.validateInstanceId(e),t.fromArray(this._colorsTexture.image.data,e*4)}setVisibleAt(e,t){return this.validateInstanceId(e),this._instanceInfo[e].visible===t?this:(this._instanceInfo[e].visible=t,this._visibilityChanged=!0,this)}getVisibleAt(e){return this.validateInstanceId(e),this._instanceInfo[e].visible}setGeometryIdAt(e,t){return this.validateInstanceId(e),this.validateGeometryId(t),this._instanceInfo[e].geometryIndex=t,this}getGeometryIdAt(e){return this.validateInstanceId(e),this._instanceInfo[e].geometryIndex}getGeometryRangeAt(e,t={}){this.validateGeometryId(e);const n=this._geometryInfo[e];return t.vertexStart=n.vertexStart,t.vertexCount=n.vertexCount,t.reservedVertexCount=n.reservedVertexCount,t.indexStart=n.indexStart,t.indexCount=n.indexCount,t.reservedIndexCount=n.reservedIndexCount,t.start=n.start,t.count=n.count,t}setInstanceCount(e){const t=this._availableInstanceIds,n=this._instanceInfo;for(t.sort(Hu);t[t.length-1]===n.length;)n.pop(),t.pop();if(e<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${e} are being used. Cannot shrink instance count.`);const i=new Int32Array(e),r=new Int32Array(e);xs(this._multiDrawCounts,i),xs(this._multiDrawStarts,r),this._multiDrawCounts=i,this._multiDrawStarts=r,this._maxInstanceCount=e;const o=this._indirectTexture,a=this._matricesTexture,l=this._colorsTexture;o.dispose(),this._initIndirectTexture(),xs(o.image.data,this._indirectTexture.image.data),a.dispose(),this._initMatricesTexture(),xs(a.image.data,this._matricesTexture.image.data),l&&(l.dispose(),this._initColorsTexture(),xs(l.image.data,this._colorsTexture.image.data))}setGeometrySize(e,t){const n=[...this._geometryInfo].filter(a=>a.active);if(Math.max(...n.map(a=>a.vertexStart+a.reservedVertexCount))>e)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${t}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...n.map(l=>l.indexStart+l.reservedIndexCount))>t)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${t}. Cannot shrink further.`);const r=this.geometry;r.dispose(),this._maxVertexCount=e,this._maxIndexCount=t,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new bt,this._initializeGeometry(r));const o=this.geometry;r.index&&xs(r.index.array,o.index.array);for(const a in r.attributes)xs(r.attributes[a].array,o.attributes[a].array)}raycast(e,t){const n=this._instanceInfo,i=this._geometryInfo,r=this.matrixWorld,o=this.geometry;Qn.material=this.material,Qn.geometry.index=o.index,Qn.geometry.attributes=o.attributes,Qn.geometry.boundingBox===null&&(Qn.geometry.boundingBox=new Mn),Qn.geometry.boundingSphere===null&&(Qn.geometry.boundingSphere=new An);for(let a=0,l=n.length;a<l;a++){if(!n[a].visible||!n[a].active)continue;const c=n[a].geometryIndex,h=i[c];Qn.geometry.setDrawRange(h.start,h.count),this.getMatrixAt(a,Qn.matrixWorld).premultiply(r),this.getBoundingBoxAt(c,Qn.geometry.boundingBox),this.getBoundingSphereAt(c,Qn.geometry.boundingSphere),Qn.raycast(e,Hl);for(let u=0,d=Hl.length;u<d;u++){const f=Hl[u];f.object=this,f.batchId=a,t.push(f)}Hl.length=0}Qn.material=null,Qn.geometry.index=null,Qn.geometry.attributes={},Qn.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._geometryInfo=e._geometryInfo.map(t=>({...t,boundingBox:t.boundingBox!==null?t.boundingBox.clone():null,boundingSphere:t.boundingSphere!==null?t.boundingSphere.clone():null})),this._instanceInfo=e._instanceInfo.map(t=>({...t})),this._maxInstanceCount=e._maxInstanceCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._geometryCount=e._geometryCount,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=e._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){return this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null),this}onBeforeRender(e,t,n,i,r){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const o=i.getIndex(),a=o===null?1:o.array.BYTES_PER_ELEMENT,l=this._instanceInfo,c=this._multiDrawStarts,h=this._multiDrawCounts,u=this._geometryInfo,d=this.perObjectFrustumCulled,f=this._indirectTexture,p=f.image.data;d&&(mi.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),Wu.setFromProjectionMatrix(mi,e.coordinateSystem));let v=0;if(this.sortObjects){mi.copy(this.matrixWorld).invert(),da.setFromMatrixPosition(n.matrixWorld).applyMatrix4(mi),nm.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(mi);for(let x=0,y=l.length;x<y;x++)if(l[x].visible&&l[x].active){const _=l[x].geometryIndex;this.getMatrixAt(x,mi),this.getBoundingSphereAt(_,ys).applyMatrix4(mi);let E=!1;if(d&&(E=!Wu.intersectsSphere(ys)),!E){const w=u[_],M=db.subVectors(ys.center,da).dot(nm);Xu.push(w.start,w.count,M,x)}}const g=Xu.list,m=this.customSort;m===null?g.sort(r.transparent?cb:lb):m.call(this,g,n);for(let x=0,y=g.length;x<y;x++){const _=g[x];c[v]=_.start*a,h[v]=_.count,p[v]=_.index,v++}Xu.reset()}else for(let g=0,m=l.length;g<m;g++)if(l[g].visible&&l[g].active){const x=l[g].geometryIndex;let y=!1;if(d&&(this.getMatrixAt(g,mi),this.getBoundingSphereAt(x,ys).applyMatrix4(mi),y=!Wu.intersectsSphere(ys)),!y){const _=u[x];c[v]=_.start*a,h[v]=_.count,p[v]=g,v++}}f.needsUpdate=!0,this._multiDrawCount=v,this._visibilityChanged=!1}onBeforeShadow(e,t,n,i,r,o){this.onBeforeRender(e,null,i,r,o)}}class Fn extends ri{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Ge(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const ph=new L,mh=new L,im=new st,fa=new ss,Wl=new An,Yu=new L,rm=new L;class Xn extends Ot{constructor(e=new bt,t=new Fn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)ph.fromBufferAttribute(t,i-1),mh.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=ph.distanceTo(mh);e.setAttribute("lineDistance",new Ke(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Wl.copy(n.boundingSphere),Wl.applyMatrix4(i),Wl.radius+=r,e.ray.intersectsSphere(Wl)===!1)return;im.copy(i).invert(),fa.copy(e.ray).applyMatrix4(im);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=this.isLineSegments?2:1,h=n.index,d=n.attributes.position;if(h!==null){const f=Math.max(0,o.start),p=Math.min(h.count,o.start+o.count);for(let v=f,g=p-1;v<g;v+=c){const m=h.getX(v),x=h.getX(v+1),y=Xl(this,e,fa,l,m,x,v);y&&t.push(y)}if(this.isLineLoop){const v=h.getX(p-1),g=h.getX(f),m=Xl(this,e,fa,l,v,g,p-1);m&&t.push(m)}}else{const f=Math.max(0,o.start),p=Math.min(d.count,o.start+o.count);for(let v=f,g=p-1;v<g;v+=c){const m=Xl(this,e,fa,l,v,v+1,v);m&&t.push(m)}if(this.isLineLoop){const v=Xl(this,e,fa,l,p-1,f,p-1);v&&t.push(v)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}function Xl(s,e,t,n,i,r,o){const a=s.geometry.attributes.position;if(ph.fromBufferAttribute(a,i),mh.fromBufferAttribute(a,r),t.distanceSqToSegment(ph,mh,Yu,rm)>n)return;Yu.applyMatrix4(s.matrixWorld);const c=e.ray.origin.distanceTo(Yu);if(!(c<e.near||c>e.far))return{distance:c,point:rm.clone().applyMatrix4(s.matrixWorld),index:o,face:null,faceIndex:null,barycoord:null,object:s}}const sm=new L,om=new L;class ir extends Xn{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)sm.fromBufferAttribute(t,i),om.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+sm.distanceTo(om);e.setAttribute("lineDistance",new Ke(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class dv extends Xn{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class Ef extends ri{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Ge(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const am=new st,Fd=new ss,Yl=new An,ql=new L;class fv extends Ot{constructor(e=new bt,t=new Ef){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Yl.copy(n.boundingSphere),Yl.applyMatrix4(i),Yl.radius+=r,e.ray.intersectsSphere(Yl)===!1)return;am.copy(i).invert(),Fd.copy(e.ray).applyMatrix4(am);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=n.index,u=n.attributes.position;if(c!==null){const d=Math.max(0,o.start),f=Math.min(c.count,o.start+o.count);for(let p=d,v=f;p<v;p++){const g=c.getX(p);ql.fromBufferAttribute(u,g),lm(ql,g,l,i,e,t,this)}}else{const d=Math.max(0,o.start),f=Math.min(u.count,o.start+o.count);for(let p=d,v=f;p<v;p++)ql.fromBufferAttribute(u,p),lm(ql,p,l,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}function lm(s,e,t,n,i,r,o){const a=Fd.distanceSqToPoint(s);if(a<t){const l=new L;Fd.closestPointToPoint(s,l),l.applyMatrix4(n);const c=i.ray.origin.distanceTo(l);if(c<i.near||c>i.far)return;r.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,faceIndex:null,barycoord:null,object:o})}}class pv extends pn{constructor(e,t,n,i,r,o,a,l,c){super(e,t,n,i,r,o,a,l,c),this.isVideoTexture=!0,this.minFilter=o!==void 0?o:Sn,this.magFilter=r!==void 0?r:Sn,this.generateMipmaps=!1;const h=this;function u(){h.needsUpdate=!0,e.requestVideoFrameCallback(u)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(u)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class pb extends pv{constructor(e,t,n,i,r,o,a,l){super({},e,t,n,i,r,o,a,l),this.isVideoFrameTexture=!0}update(){}clone(){return new this.constructor().copy(this)}setFrame(e){this.image=e,this.needsUpdate=!0}}class mb extends pn{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Yn,this.minFilter=Yn,this.generateMipmaps=!1,this.needsUpdate=!0}}class zh extends pn{constructor(e,t,n,i,r,o,a,l,c,h,u,d){super(null,o,a,l,c,h,i,r,u,d),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class gb extends zh{constructor(e,t,n,i,r,o){super(e,t,n,r,o),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Si,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class vb extends zh{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,zr),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class mv extends pn{constructor(e,t,n,i,r,o,a,l,c){super(e,t,n,i,r,o,a,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Tf extends pn{constructor(e,t,n,i,r,o,a,l,c,h=Ys){if(h!==Ys&&h!==$s)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&h===Ys&&(n=Gr),n===void 0&&h===$s&&(n=Qs),super(null,i,r,o,a,l,h,n,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=a!==void 0?a:Yn,this.minFilter=l!==void 0?l:Yn,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class rr{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),r=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),r+=n.distanceTo(i),t.push(r),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const r=n.length;let o;t?o=t:o=e*n[r-1];let a=0,l=r-1,c;for(;a<=l;)if(i=Math.floor(a+(l-a)/2),c=n[i]-o,c<0)a=i+1;else if(c>0)l=i-1;else{l=i;break}if(i=l,n[i]===o)return i/(r-1);const h=n[i],d=n[i+1]-h,f=(o-h)/d;return(i+f)/(r-1)}getTangent(e,t){let i=e-1e-4,r=e+1e-4;i<0&&(i=0),r>1&&(r=1);const o=this.getPoint(i),a=this.getPoint(r),l=t||(o.isVector2?new xe:new L);return l.copy(a).sub(o).normalize(),l}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new L,i=[],r=[],o=[],a=new L,l=new st;for(let f=0;f<=e;f++){const p=f/e;i[f]=this.getTangentAt(p,new L)}r[0]=new L,o[0]=new L;let c=Number.MAX_VALUE;const h=Math.abs(i[0].x),u=Math.abs(i[0].y),d=Math.abs(i[0].z);h<=c&&(c=h,n.set(1,0,0)),u<=c&&(c=u,n.set(0,1,0)),d<=c&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],a),o[0].crossVectors(i[0],r[0]);for(let f=1;f<=e;f++){if(r[f]=r[f-1].clone(),o[f]=o[f-1].clone(),a.crossVectors(i[f-1],i[f]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(Tt(i[f-1].dot(i[f]),-1,1));r[f].applyMatrix4(l.makeRotationAxis(a,p))}o[f].crossVectors(i[f],r[f])}if(t===!0){let f=Math.acos(Tt(r[0].dot(r[e]),-1,1));f/=e,i[0].dot(a.crossVectors(r[0],r[e]))>0&&(f=-f);for(let p=1;p<=e;p++)r[p].applyMatrix4(l.makeRotationAxis(i[p],f*p)),o[p].crossVectors(i[p],r[p])}return{tangents:i,normals:r,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Gh extends rr{constructor(e=0,t=0,n=1,i=1,r=0,o=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(e,t=new xe){const n=t,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const o=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(o?r=0:r=i),this.aClockwise===!0&&!o&&(r===i?r=-i:r=r-i);const a=this.aStartAngle+e*r;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const h=Math.cos(this.aRotation),u=Math.sin(this.aRotation),d=l-this.aX,f=c-this.aY;l=d*h-f*u+this.aX,c=d*u+f*h+this.aY}return n.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class gv extends Gh{constructor(e,t,n,i,r,o){super(e,t,n,n,i,r,o),this.isArcCurve=!0,this.type="ArcCurve"}}function Af(){let s=0,e=0,t=0,n=0;function i(r,o,a,l){s=r,e=a,t=-3*r+3*o-2*a-l,n=2*r-2*o+a+l}return{initCatmullRom:function(r,o,a,l,c){i(o,a,c*(a-r),c*(l-o))},initNonuniformCatmullRom:function(r,o,a,l,c,h,u){let d=(o-r)/c-(a-r)/(c+h)+(a-o)/h,f=(a-o)/h-(l-o)/(h+u)+(l-a)/u;d*=h,f*=h,i(o,a,d,f)},calc:function(r){const o=r*r,a=o*r;return s+e*r+t*o+n*a}}}const jl=new L,qu=new Af,ju=new Af,Zu=new Af;class vv extends rr{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new L){const n=t,i=this.points,r=i.length,o=(r-(this.closed?0:1))*e;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/r)+1)*r:l===0&&a===r-1&&(a=r-2,l=1);let c,h;this.closed||a>0?c=i[(a-1)%r]:(jl.subVectors(i[0],i[1]).add(i[0]),c=jl);const u=i[a%r],d=i[(a+1)%r];if(this.closed||a+2<r?h=i[(a+2)%r]:(jl.subVectors(i[r-1],i[r-2]).add(i[r-1]),h=jl),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let p=Math.pow(c.distanceToSquared(u),f),v=Math.pow(u.distanceToSquared(d),f),g=Math.pow(d.distanceToSquared(h),f);v<1e-4&&(v=1),p<1e-4&&(p=v),g<1e-4&&(g=v),qu.initNonuniformCatmullRom(c.x,u.x,d.x,h.x,p,v,g),ju.initNonuniformCatmullRom(c.y,u.y,d.y,h.y,p,v,g),Zu.initNonuniformCatmullRom(c.z,u.z,d.z,h.z,p,v,g)}else this.curveType==="catmullrom"&&(qu.initCatmullRom(c.x,u.x,d.x,h.x,this.tension),ju.initCatmullRom(c.y,u.y,d.y,h.y,this.tension),Zu.initCatmullRom(c.z,u.z,d.z,h.z,this.tension));return n.set(qu.calc(l),ju.calc(l),Zu.calc(l)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new L().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function cm(s,e,t,n,i){const r=(n-e)*.5,o=(i-t)*.5,a=s*s,l=s*a;return(2*t-2*n+r+o)*l+(-3*t+3*n-2*r-o)*a+r*s+t}function _b(s,e){const t=1-s;return t*t*e}function yb(s,e){return 2*(1-s)*s*e}function xb(s,e){return s*s*e}function Da(s,e,t,n){return _b(s,e)+yb(s,t)+xb(s,n)}function bb(s,e){const t=1-s;return t*t*t*e}function Sb(s,e){const t=1-s;return 3*t*t*s*e}function Mb(s,e){return 3*(1-s)*s*s*e}function wb(s,e){return s*s*s*e}function La(s,e,t,n,i){return bb(s,e)+Sb(s,t)+Mb(s,n)+wb(s,i)}class Cf extends rr{constructor(e=new xe,t=new xe,n=new xe,i=new xe){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new xe){const n=t,i=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(La(e,i.x,r.x,o.x,a.x),La(e,i.y,r.y,o.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class _v extends rr{constructor(e=new L,t=new L,n=new L,i=new L){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new L){const n=t,i=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(La(e,i.x,r.x,o.x,a.x),La(e,i.y,r.y,o.y,a.y),La(e,i.z,r.z,o.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Rf extends rr{constructor(e=new xe,t=new xe){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new xe){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new xe){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class yv extends rr{constructor(e=new L,t=new L){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new L){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new L){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Pf extends rr{constructor(e=new xe,t=new xe,n=new xe){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new xe){const n=t,i=this.v0,r=this.v1,o=this.v2;return n.set(Da(e,i.x,r.x,o.x),Da(e,i.y,r.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class If extends rr{constructor(e=new L,t=new L,n=new L){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new L){const n=t,i=this.v0,r=this.v1,o=this.v2;return n.set(Da(e,i.x,r.x,o.x),Da(e,i.y,r.y,o.y),Da(e,i.z,r.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Df extends rr{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new xe){const n=t,i=this.points,r=(i.length-1)*e,o=Math.floor(r),a=r-o,l=i[o===0?o:o-1],c=i[o],h=i[o>i.length-2?i.length-1:o+1],u=i[o>i.length-3?i.length-1:o+2];return n.set(cm(a,l.x,c.x,h.x,u.x),cm(a,l.y,c.y,h.y,u.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new xe().fromArray(i))}return this}}var gh=Object.freeze({__proto__:null,ArcCurve:gv,CatmullRomCurve3:vv,CubicBezierCurve:Cf,CubicBezierCurve3:_v,EllipseCurve:Gh,LineCurve:Rf,LineCurve3:yv,QuadraticBezierCurve:Pf,QuadraticBezierCurve3:If,SplineCurve:Df});class xv extends rr{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new gh[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const o=i[r]-n,a=this.curves[r],l=a.getLength(),c=l===0?0:1-o/l;return a.getPointAt(c,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const o=r[i],a=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,l=o.getPoints(a);for(let c=0;c<l.length;c++){const h=l[c];n&&n.equals(h)||(t.push(h),n=h)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new gh[i.type]().fromJSON(i))}return this}}class Ya extends xv{constructor(e){super(),this.type="Path",this.currentPoint=new xe,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Rf(this.currentPoint.clone(),new xe(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const r=new Pf(this.currentPoint.clone(),new xe(e,t),new xe(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,r,o){const a=new Cf(this.currentPoint.clone(),new xe(e,t),new xe(n,i),new xe(r,o));return this.curves.push(a),this.currentPoint.set(r,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Df(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,r,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+a,t+l,n,i,r,o),this}absarc(e,t,n,i,r,o){return this.absellipse(e,t,n,n,i,r,o),this}ellipse(e,t,n,i,r,o,a,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+c,t+h,n,i,r,o,a,l),this}absellipse(e,t,n,i,r,o,a,l){const c=new Gh(e,t,n,i,r,o,a,l);if(this.curves.length>0){const u=c.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(c);const h=c.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class pl extends bt{constructor(e=[new xe(0,-.5),new xe(.5,0),new xe(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=Tt(i,0,Math.PI*2);const r=[],o=[],a=[],l=[],c=[],h=1/t,u=new L,d=new xe,f=new L,p=new L,v=new L;let g=0,m=0;for(let x=0;x<=e.length-1;x++)switch(x){case 0:g=e[x+1].x-e[x].x,m=e[x+1].y-e[x].y,f.x=m*1,f.y=-g,f.z=m*0,v.copy(f),f.normalize(),l.push(f.x,f.y,f.z);break;case e.length-1:l.push(v.x,v.y,v.z);break;default:g=e[x+1].x-e[x].x,m=e[x+1].y-e[x].y,f.x=m*1,f.y=-g,f.z=m*0,p.copy(f),f.x+=v.x,f.y+=v.y,f.z+=v.z,f.normalize(),l.push(f.x,f.y,f.z),v.copy(p)}for(let x=0;x<=t;x++){const y=n+x*h*i,_=Math.sin(y),E=Math.cos(y);for(let w=0;w<=e.length-1;w++){u.x=e[w].x*_,u.y=e[w].y,u.z=e[w].x*E,o.push(u.x,u.y,u.z),d.x=x/t,d.y=w/(e.length-1),a.push(d.x,d.y);const M=l[3*w+0]*_,T=l[3*w+1],S=l[3*w+0]*E;c.push(M,T,S)}}for(let x=0;x<t;x++)for(let y=0;y<e.length-1;y++){const _=y+x*e.length,E=_,w=_+e.length,M=_+e.length+1,T=_+1;r.push(E,w,T),r.push(M,T,w)}this.setIndex(r),this.setAttribute("position",new Ke(o,3)),this.setAttribute("uv",new Ke(a,2)),this.setAttribute("normal",new Ke(c,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new pl(e.points,e.segments,e.phiStart,e.phiLength)}}class Vh extends pl{constructor(e=1,t=1,n=4,i=8){const r=new Ya;r.absarc(0,-t/2,e,Math.PI*1.5,0),r.absarc(0,t/2,e,0,Math.PI*.5),super(r.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new Vh(e.radius,e.length,e.capSegments,e.radialSegments)}}class Hh extends bt{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const r=[],o=[],a=[],l=[],c=new L,h=new xe;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let u=0,d=3;u<=t;u++,d+=3){const f=n+u/t*i;c.x=e*Math.cos(f),c.y=e*Math.sin(f),o.push(c.x,c.y,c.z),a.push(0,0,1),h.x=(o[d]/e+1)/2,h.y=(o[d+1]/e+1)/2,l.push(h.x,h.y)}for(let u=1;u<=t;u++)r.push(u,u+1,0);this.setIndex(r),this.setAttribute("position",new Ke(o,3)),this.setAttribute("normal",new Ke(a,3)),this.setAttribute("uv",new Ke(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Hh(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Tn extends bt{constructor(e=1,t=1,n=1,i=32,r=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:o,thetaStart:a,thetaLength:l};const c=this;i=Math.floor(i),r=Math.floor(r);const h=[],u=[],d=[],f=[];let p=0;const v=[],g=n/2;let m=0;x(),o===!1&&(e>0&&y(!0),t>0&&y(!1)),this.setIndex(h),this.setAttribute("position",new Ke(u,3)),this.setAttribute("normal",new Ke(d,3)),this.setAttribute("uv",new Ke(f,2));function x(){const _=new L,E=new L;let w=0;const M=(t-e)/n;for(let T=0;T<=r;T++){const S=[],b=T/r,D=b*(t-e)+e;for(let P=0;P<=i;P++){const k=P/i,V=k*l+a,K=Math.sin(V),N=Math.cos(V);E.x=D*K,E.y=-b*n+g,E.z=D*N,u.push(E.x,E.y,E.z),_.set(K,M,N).normalize(),d.push(_.x,_.y,_.z),f.push(k,1-b),S.push(p++)}v.push(S)}for(let T=0;T<i;T++)for(let S=0;S<r;S++){const b=v[S][T],D=v[S+1][T],P=v[S+1][T+1],k=v[S][T+1];(e>0||S!==0)&&(h.push(b,D,k),w+=3),(t>0||S!==r-1)&&(h.push(D,P,k),w+=3)}c.addGroup(m,w,0),m+=w}function y(_){const E=p,w=new xe,M=new L;let T=0;const S=_===!0?e:t,b=_===!0?1:-1;for(let P=1;P<=i;P++)u.push(0,g*b,0),d.push(0,b,0),f.push(.5,.5),p++;const D=p;for(let P=0;P<=i;P++){const V=P/i*l+a,K=Math.cos(V),N=Math.sin(V);M.x=S*N,M.y=g*b,M.z=S*K,u.push(M.x,M.y,M.z),d.push(0,b,0),w.x=K*.5+.5,w.y=N*.5*b+.5,f.push(w.x,w.y),p++}for(let P=0;P<i;P++){const k=E+P,V=D+P;_===!0?h.push(V,V+1,k):h.push(V+1,V,k),T+=3}c.addGroup(m,T,_===!0?1:2),m+=T}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Tn(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Wh extends Tn{constructor(e=1,t=1,n=32,i=1,r=!1,o=0,a=Math.PI*2){super(0,e,t,n,i,r,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:o,thetaLength:a}}static fromJSON(e){return new Wh(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class os extends bt{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const r=[],o=[];a(i),c(n),h(),this.setAttribute("position",new Ke(r,3)),this.setAttribute("normal",new Ke(r.slice(),3)),this.setAttribute("uv",new Ke(o,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function a(x){const y=new L,_=new L,E=new L;for(let w=0;w<t.length;w+=3)f(t[w+0],y),f(t[w+1],_),f(t[w+2],E),l(y,_,E,x)}function l(x,y,_,E){const w=E+1,M=[];for(let T=0;T<=w;T++){M[T]=[];const S=x.clone().lerp(_,T/w),b=y.clone().lerp(_,T/w),D=w-T;for(let P=0;P<=D;P++)P===0&&T===w?M[T][P]=S:M[T][P]=S.clone().lerp(b,P/D)}for(let T=0;T<w;T++)for(let S=0;S<2*(w-T)-1;S++){const b=Math.floor(S/2);S%2===0?(d(M[T][b+1]),d(M[T+1][b]),d(M[T][b])):(d(M[T][b+1]),d(M[T+1][b+1]),d(M[T+1][b]))}}function c(x){const y=new L;for(let _=0;_<r.length;_+=3)y.x=r[_+0],y.y=r[_+1],y.z=r[_+2],y.normalize().multiplyScalar(x),r[_+0]=y.x,r[_+1]=y.y,r[_+2]=y.z}function h(){const x=new L;for(let y=0;y<r.length;y+=3){x.x=r[y+0],x.y=r[y+1],x.z=r[y+2];const _=g(x)/2/Math.PI+.5,E=m(x)/Math.PI+.5;o.push(_,1-E)}p(),u()}function u(){for(let x=0;x<o.length;x+=6){const y=o[x+0],_=o[x+2],E=o[x+4],w=Math.max(y,_,E),M=Math.min(y,_,E);w>.9&&M<.1&&(y<.2&&(o[x+0]+=1),_<.2&&(o[x+2]+=1),E<.2&&(o[x+4]+=1))}}function d(x){r.push(x.x,x.y,x.z)}function f(x,y){const _=x*3;y.x=e[_+0],y.y=e[_+1],y.z=e[_+2]}function p(){const x=new L,y=new L,_=new L,E=new L,w=new xe,M=new xe,T=new xe;for(let S=0,b=0;S<r.length;S+=9,b+=6){x.set(r[S+0],r[S+1],r[S+2]),y.set(r[S+3],r[S+4],r[S+5]),_.set(r[S+6],r[S+7],r[S+8]),w.set(o[b+0],o[b+1]),M.set(o[b+2],o[b+3]),T.set(o[b+4],o[b+5]),E.copy(x).add(y).add(_).divideScalar(3);const D=g(E);v(w,b+0,x,D),v(M,b+2,y,D),v(T,b+4,_,D)}}function v(x,y,_,E){E<0&&x.x===1&&(o[y]=x.x-1),_.x===0&&_.z===0&&(o[y]=E/2/Math.PI+.5)}function g(x){return Math.atan2(x.z,-x.x)}function m(x){return Math.atan2(-x.y,Math.sqrt(x.x*x.x+x.z*x.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new os(e.vertices,e.indices,e.radius,e.details)}}class Xh extends os{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,o,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Xh(e.radius,e.detail)}}const Zl=new L,Jl=new L,Ju=new L,Kl=new bi;class bv extends bt{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),r=Math.cos(qs*t),o=e.getIndex(),a=e.getAttribute("position"),l=o?o.count:a.count,c=[0,0,0],h=["a","b","c"],u=new Array(3),d={},f=[];for(let p=0;p<l;p+=3){o?(c[0]=o.getX(p),c[1]=o.getX(p+1),c[2]=o.getX(p+2)):(c[0]=p,c[1]=p+1,c[2]=p+2);const{a:v,b:g,c:m}=Kl;if(v.fromBufferAttribute(a,c[0]),g.fromBufferAttribute(a,c[1]),m.fromBufferAttribute(a,c[2]),Kl.getNormal(Ju),u[0]=`${Math.round(v.x*i)},${Math.round(v.y*i)},${Math.round(v.z*i)}`,u[1]=`${Math.round(g.x*i)},${Math.round(g.y*i)},${Math.round(g.z*i)}`,u[2]=`${Math.round(m.x*i)},${Math.round(m.y*i)},${Math.round(m.z*i)}`,!(u[0]===u[1]||u[1]===u[2]||u[2]===u[0]))for(let x=0;x<3;x++){const y=(x+1)%3,_=u[x],E=u[y],w=Kl[h[x]],M=Kl[h[y]],T=`${_}_${E}`,S=`${E}_${_}`;S in d&&d[S]?(Ju.dot(d[S].normal)<=r&&(f.push(w.x,w.y,w.z),f.push(M.x,M.y,M.z)),d[S]=null):T in d||(d[T]={index0:c[x],index1:c[y],normal:Ju.clone()})}}for(const p in d)if(d[p]){const{index0:v,index1:g}=d[p];Zl.fromBufferAttribute(a,v),Jl.fromBufferAttribute(a,g),f.push(Zl.x,Zl.y,Zl.z),f.push(Jl.x,Jl.y,Jl.z)}this.setAttribute("position",new Ke(f,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class js extends Ya{constructor(e){super(e),this.uuid=Fi(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Ya().fromJSON(i))}return this}}const Eb={triangulate:function(s,e,t=2){const n=e&&e.length,i=n?e[0]*t:s.length;let r=Sv(s,0,i,t,!0);const o=[];if(!r||r.next===r.prev)return o;let a,l,c,h,u,d,f;if(n&&(r=Pb(s,e,r,t)),s.length>80*t){a=c=s[0],l=h=s[1];for(let p=t;p<i;p+=t)u=s[p],d=s[p+1],u<a&&(a=u),d<l&&(l=d),u>c&&(c=u),d>h&&(h=d);f=Math.max(c-a,h-l),f=f!==0?32767/f:0}return qa(r,o,t,a,l,f,0),o}};function Sv(s,e,t,n,i){let r,o;if(i===Gb(s,e,t,n)>0)for(r=e;r<t;r+=n)o=hm(r,s[r],s[r+1],o);else for(r=t-n;r>=e;r-=n)o=hm(r,s[r],s[r+1],o);return o&&Yh(o,o.next)&&(Za(o),o=o.next),o}function no(s,e){if(!s)return s;e||(e=s);let t=s,n;do if(n=!1,!t.steiner&&(Yh(t,t.next)||un(t.prev,t,t.next)===0)){if(Za(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function qa(s,e,t,n,i,r,o){if(!s)return;!o&&r&&Nb(s,n,i,r);let a=s,l,c;for(;s.prev!==s.next;){if(l=s.prev,c=s.next,r?Ab(s,n,i,r):Tb(s)){e.push(l.i/t|0),e.push(s.i/t|0),e.push(c.i/t|0),Za(s),s=c.next,a=c.next;continue}if(s=c,s===a){o?o===1?(s=Cb(no(s),e,t),qa(s,e,t,n,i,r,2)):o===2&&Rb(s,e,t,n,i,r):qa(no(s),e,t,n,i,r,1);break}}}function Tb(s){const e=s.prev,t=s,n=s.next;if(un(e,t,n)>=0)return!1;const i=e.x,r=t.x,o=n.x,a=e.y,l=t.y,c=n.y,h=i<r?i<o?i:o:r<o?r:o,u=a<l?a<c?a:c:l<c?l:c,d=i>r?i>o?i:o:r>o?r:o,f=a>l?a>c?a:c:l>c?l:c;let p=n.next;for(;p!==e;){if(p.x>=h&&p.x<=d&&p.y>=u&&p.y<=f&&ko(i,a,r,l,o,c,p.x,p.y)&&un(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function Ab(s,e,t,n){const i=s.prev,r=s,o=s.next;if(un(i,r,o)>=0)return!1;const a=i.x,l=r.x,c=o.x,h=i.y,u=r.y,d=o.y,f=a<l?a<c?a:c:l<c?l:c,p=h<u?h<d?h:d:u<d?u:d,v=a>l?a>c?a:c:l>c?l:c,g=h>u?h>d?h:d:u>d?u:d,m=kd(f,p,e,t,n),x=kd(v,g,e,t,n);let y=s.prevZ,_=s.nextZ;for(;y&&y.z>=m&&_&&_.z<=x;){if(y.x>=f&&y.x<=v&&y.y>=p&&y.y<=g&&y!==i&&y!==o&&ko(a,h,l,u,c,d,y.x,y.y)&&un(y.prev,y,y.next)>=0||(y=y.prevZ,_.x>=f&&_.x<=v&&_.y>=p&&_.y<=g&&_!==i&&_!==o&&ko(a,h,l,u,c,d,_.x,_.y)&&un(_.prev,_,_.next)>=0))return!1;_=_.nextZ}for(;y&&y.z>=m;){if(y.x>=f&&y.x<=v&&y.y>=p&&y.y<=g&&y!==i&&y!==o&&ko(a,h,l,u,c,d,y.x,y.y)&&un(y.prev,y,y.next)>=0)return!1;y=y.prevZ}for(;_&&_.z<=x;){if(_.x>=f&&_.x<=v&&_.y>=p&&_.y<=g&&_!==i&&_!==o&&ko(a,h,l,u,c,d,_.x,_.y)&&un(_.prev,_,_.next)>=0)return!1;_=_.nextZ}return!0}function Cb(s,e,t){let n=s;do{const i=n.prev,r=n.next.next;!Yh(i,r)&&Mv(i,n,n.next,r)&&ja(i,r)&&ja(r,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(r.i/t|0),Za(n),Za(n.next),n=s=r),n=n.next}while(n!==s);return no(n)}function Rb(s,e,t,n,i,r){let o=s;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&kb(o,a)){let l=wv(o,a);o=no(o,o.next),l=no(l,l.next),qa(o,e,t,n,i,r,0),qa(l,e,t,n,i,r,0);return}a=a.next}o=o.next}while(o!==s)}function Pb(s,e,t,n){const i=[];let r,o,a,l,c;for(r=0,o=e.length;r<o;r++)a=e[r]*n,l=r<o-1?e[r+1]*n:s.length,c=Sv(s,a,l,n,!1),c===c.next&&(c.steiner=!0),i.push(Fb(c));for(i.sort(Ib),r=0;r<i.length;r++)t=Db(i[r],t);return t}function Ib(s,e){return s.x-e.x}function Db(s,e){const t=Lb(s,e);if(!t)return e;const n=wv(t,s);return no(n,n.next),no(t,t.next)}function Lb(s,e){let t=e,n=-1/0,i;const r=s.x,o=s.y;do{if(o<=t.y&&o>=t.next.y&&t.next.y!==t.y){const d=t.x+(o-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(d<=r&&d>n&&(n=d,i=t.x<t.next.x?t:t.next,d===r))return i}t=t.next}while(t!==e);if(!i)return null;const a=i,l=i.x,c=i.y;let h=1/0,u;t=i;do r>=t.x&&t.x>=l&&r!==t.x&&ko(o<c?r:n,o,l,c,o<c?n:r,o,t.x,t.y)&&(u=Math.abs(o-t.y)/(r-t.x),ja(t,s)&&(u<h||u===h&&(t.x>i.x||t.x===i.x&&Ub(i,t)))&&(i=t,h=u)),t=t.next;while(t!==a);return i}function Ub(s,e){return un(s.prev,s,e.prev)<0&&un(e.next,s,s.next)<0}function Nb(s,e,t,n){let i=s;do i.z===0&&(i.z=kd(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,Ob(i)}function Ob(s){let e,t,n,i,r,o,a,l,c=1;do{for(t=s,s=null,r=null,o=0;t;){for(o++,n=t,a=0,e=0;e<c&&(a++,n=n.nextZ,!!n);e++);for(l=c;a>0||l>0&&n;)a!==0&&(l===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,a--):(i=n,n=n.nextZ,l--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;t=n}r.nextZ=null,c*=2}while(o>1);return s}function kd(s,e,t,n,i){return s=(s-t)*i|0,e=(e-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function Fb(s){let e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function ko(s,e,t,n,i,r,o,a){return(i-o)*(e-a)>=(s-o)*(r-a)&&(s-o)*(n-a)>=(t-o)*(e-a)&&(t-o)*(r-a)>=(i-o)*(n-a)}function kb(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!Bb(s,e)&&(ja(s,e)&&ja(e,s)&&zb(s,e)&&(un(s.prev,s,e.prev)||un(s,e.prev,e))||Yh(s,e)&&un(s.prev,s,s.next)>0&&un(e.prev,e,e.next)>0)}function un(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function Yh(s,e){return s.x===e.x&&s.y===e.y}function Mv(s,e,t,n){const i=$l(un(s,e,t)),r=$l(un(s,e,n)),o=$l(un(t,n,s)),a=$l(un(t,n,e));return!!(i!==r&&o!==a||i===0&&Ql(s,t,e)||r===0&&Ql(s,n,e)||o===0&&Ql(t,s,n)||a===0&&Ql(t,e,n))}function Ql(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function $l(s){return s>0?1:s<0?-1:0}function Bb(s,e){let t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&Mv(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function ja(s,e){return un(s.prev,s,s.next)<0?un(s,e,s.next)>=0&&un(s,s.prev,e)>=0:un(s,e,s.prev)<0||un(s,s.next,e)<0}function zb(s,e){let t=s,n=!1;const i=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&i<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==s);return n}function wv(s,e){const t=new Bd(s.i,s.x,s.y),n=new Bd(e.i,e.x,e.y),i=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=i,i.prev=t,n.next=t,t.prev=n,r.next=n,n.prev=r,n}function hm(s,e,t,n){const i=new Bd(s,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Za(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function Bd(s,e,t){this.i=s,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function Gb(s,e,t,n){let i=0;for(let r=e,o=t-n;r<t;r+=n)i+=(s[o]-s[r])*(s[r+1]+s[o+1]),o=r;return i}class gr{static area(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return n*.5}static isClockWise(e){return gr.area(e)<0}static triangulateShape(e,t){const n=[],i=[],r=[];um(e),dm(n,e);let o=e.length;t.forEach(um);for(let l=0;l<t.length;l++)i.push(o),o+=t[l].length,dm(n,t[l]);const a=Eb.triangulate(n,i);for(let l=0;l<a.length;l+=3)r.push(a.slice(l,l+3));return r}}function um(s){const e=s.length;e>2&&s[e-1].equals(s[0])&&s.pop()}function dm(s,e){for(let t=0;t<e.length;t++)s.push(e[t].x),s.push(e[t].y)}class qh extends bt{constructor(e=new js([new xe(.5,.5),new xe(-.5,.5),new xe(-.5,-.5),new xe(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],r=[];for(let a=0,l=e.length;a<l;a++){const c=e[a];o(c)}this.setAttribute("position",new Ke(i,3)),this.setAttribute("uv",new Ke(r,2)),this.computeVertexNormals();function o(a){const l=[],c=t.curveSegments!==void 0?t.curveSegments:12,h=t.steps!==void 0?t.steps:1,u=t.depth!==void 0?t.depth:1;let d=t.bevelEnabled!==void 0?t.bevelEnabled:!0,f=t.bevelThickness!==void 0?t.bevelThickness:.2,p=t.bevelSize!==void 0?t.bevelSize:f-.1,v=t.bevelOffset!==void 0?t.bevelOffset:0,g=t.bevelSegments!==void 0?t.bevelSegments:3;const m=t.extrudePath,x=t.UVGenerator!==void 0?t.UVGenerator:Vb;let y,_=!1,E,w,M,T;m&&(y=m.getSpacedPoints(h),_=!0,d=!1,E=m.computeFrenetFrames(h,!1),w=new L,M=new L,T=new L),d||(g=0,f=0,p=0,v=0);const S=a.extractPoints(c);let b=S.shape;const D=S.holes;if(!gr.isClockWise(b)){b=b.reverse();for(let ee=0,ue=D.length;ee<ue;ee++){const B=D[ee];gr.isClockWise(B)&&(D[ee]=B.reverse())}}const k=gr.triangulateShape(b,D),V=b;for(let ee=0,ue=D.length;ee<ue;ee++){const B=D[ee];b=b.concat(B)}function K(ee,ue,B){return ue||console.error("THREE.ExtrudeGeometry: vec does not exist"),ee.clone().addScaledVector(ue,B)}const N=b.length,Q=k.length;function Z(ee,ue,B){let Se,de,Ee;const ce=ee.x-ue.x,De=ee.y-ue.y,be=B.x-ee.x,I=B.y-ee.y,R=ce*ce+De*De,te=ce*I-De*be;if(Math.abs(te)>Number.EPSILON){const ae=Math.sqrt(R),le=Math.sqrt(be*be+I*I),pe=ue.x-De/ae,Ae=ue.y+ce/ae,Me=B.x-I/le,Ce=B.y+be/le,qe=((Me-pe)*I-(Ce-Ae)*be)/(ce*I-De*be);Se=pe+ce*qe-ee.x,de=Ae+De*qe-ee.y;const Re=Se*Se+de*de;if(Re<=2)return new xe(Se,de);Ee=Math.sqrt(Re/2)}else{let ae=!1;ce>Number.EPSILON?be>Number.EPSILON&&(ae=!0):ce<-Number.EPSILON?be<-Number.EPSILON&&(ae=!0):Math.sign(De)===Math.sign(I)&&(ae=!0),ae?(Se=-De,de=ce,Ee=Math.sqrt(R)):(Se=ce,de=De,Ee=Math.sqrt(R/2))}return new xe(Se/Ee,de/Ee)}const j=[];for(let ee=0,ue=V.length,B=ue-1,Se=ee+1;ee<ue;ee++,B++,Se++)B===ue&&(B=0),Se===ue&&(Se=0),j[ee]=Z(V[ee],V[B],V[Se]);const X=[];let F,J=j.concat();for(let ee=0,ue=D.length;ee<ue;ee++){const B=D[ee];F=[];for(let Se=0,de=B.length,Ee=de-1,ce=Se+1;Se<de;Se++,Ee++,ce++)Ee===de&&(Ee=0),ce===de&&(ce=0),F[Se]=Z(B[Se],B[Ee],B[ce]);X.push(F),J=J.concat(F)}for(let ee=0;ee<g;ee++){const ue=ee/g,B=f*Math.cos(ue*Math.PI/2),Se=p*Math.sin(ue*Math.PI/2)+v;for(let de=0,Ee=V.length;de<Ee;de++){const ce=K(V[de],j[de],Se);Y(ce.x,ce.y,-B)}for(let de=0,Ee=D.length;de<Ee;de++){const ce=D[de];F=X[de];for(let De=0,be=ce.length;De<be;De++){const I=K(ce[De],F[De],Se);Y(I.x,I.y,-B)}}}const $=p+v;for(let ee=0;ee<N;ee++){const ue=d?K(b[ee],J[ee],$):b[ee];_?(M.copy(E.normals[0]).multiplyScalar(ue.x),w.copy(E.binormals[0]).multiplyScalar(ue.y),T.copy(y[0]).add(M).add(w),Y(T.x,T.y,T.z)):Y(ue.x,ue.y,0)}for(let ee=1;ee<=h;ee++)for(let ue=0;ue<N;ue++){const B=d?K(b[ue],J[ue],$):b[ue];_?(M.copy(E.normals[ee]).multiplyScalar(B.x),w.copy(E.binormals[ee]).multiplyScalar(B.y),T.copy(y[ee]).add(M).add(w),Y(T.x,T.y,T.z)):Y(B.x,B.y,u/h*ee)}for(let ee=g-1;ee>=0;ee--){const ue=ee/g,B=f*Math.cos(ue*Math.PI/2),Se=p*Math.sin(ue*Math.PI/2)+v;for(let de=0,Ee=V.length;de<Ee;de++){const ce=K(V[de],j[de],Se);Y(ce.x,ce.y,u+B)}for(let de=0,Ee=D.length;de<Ee;de++){const ce=D[de];F=X[de];for(let De=0,be=ce.length;De<be;De++){const I=K(ce[De],F[De],Se);_?Y(I.x,I.y+y[h-1].y,y[h-1].x+B):Y(I.x,I.y,u+B)}}}G(),W();function G(){const ee=i.length/3;if(d){let ue=0,B=N*ue;for(let Se=0;Se<Q;Se++){const de=k[Se];ne(de[2]+B,de[1]+B,de[0]+B)}ue=h+g*2,B=N*ue;for(let Se=0;Se<Q;Se++){const de=k[Se];ne(de[0]+B,de[1]+B,de[2]+B)}}else{for(let ue=0;ue<Q;ue++){const B=k[ue];ne(B[2],B[1],B[0])}for(let ue=0;ue<Q;ue++){const B=k[ue];ne(B[0]+N*h,B[1]+N*h,B[2]+N*h)}}n.addGroup(ee,i.length/3-ee,0)}function W(){const ee=i.length/3;let ue=0;q(V,ue),ue+=V.length;for(let B=0,Se=D.length;B<Se;B++){const de=D[B];q(de,ue),ue+=de.length}n.addGroup(ee,i.length/3-ee,1)}function q(ee,ue){let B=ee.length;for(;--B>=0;){const Se=B;let de=B-1;de<0&&(de=ee.length-1);for(let Ee=0,ce=h+g*2;Ee<ce;Ee++){const De=N*Ee,be=N*(Ee+1),I=ue+Se+De,R=ue+de+De,te=ue+de+be,ae=ue+Se+be;ge(I,R,te,ae)}}}function Y(ee,ue,B){l.push(ee),l.push(ue),l.push(B)}function ne(ee,ue,B){ve(ee),ve(ue),ve(B);const Se=i.length/3,de=x.generateTopUV(n,i,Se-3,Se-2,Se-1);_e(de[0]),_e(de[1]),_e(de[2])}function ge(ee,ue,B,Se){ve(ee),ve(ue),ve(Se),ve(ue),ve(B),ve(Se);const de=i.length/3,Ee=x.generateSideWallUV(n,i,de-6,de-3,de-2,de-1);_e(Ee[0]),_e(Ee[1]),_e(Ee[3]),_e(Ee[1]),_e(Ee[2]),_e(Ee[3])}function ve(ee){i.push(l[ee*3+0]),i.push(l[ee*3+1]),i.push(l[ee*3+2])}function _e(ee){r.push(ee.x),r.push(ee.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return Hb(t,n,e)}static fromJSON(e,t){const n=[];for(let r=0,o=e.shapes.length;r<o;r++){const a=t[e.shapes[r]];n.push(a)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new gh[i.type]().fromJSON(i)),new qh(n,e.options)}}const Vb={generateTopUV:function(s,e,t,n,i){const r=e[t*3],o=e[t*3+1],a=e[n*3],l=e[n*3+1],c=e[i*3],h=e[i*3+1];return[new xe(r,o),new xe(a,l),new xe(c,h)]},generateSideWallUV:function(s,e,t,n,i,r){const o=e[t*3],a=e[t*3+1],l=e[t*3+2],c=e[n*3],h=e[n*3+1],u=e[n*3+2],d=e[i*3],f=e[i*3+1],p=e[i*3+2],v=e[r*3],g=e[r*3+1],m=e[r*3+2];return Math.abs(a-h)<Math.abs(o-c)?[new xe(o,1-l),new xe(c,1-u),new xe(d,1-p),new xe(v,1-m)]:[new xe(a,1-l),new xe(h,1-u),new xe(f,1-p),new xe(g,1-m)]}};function Hb(s,e,t){if(t.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const r=s[n];t.shapes.push(r.uuid)}else t.shapes.push(s.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class jh extends os{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,r,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new jh(e.radius,e.detail)}}class Ur extends os{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ur(e.radius,e.detail)}}class sr extends bt{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,o=t/2,a=Math.floor(n),l=Math.floor(i),c=a+1,h=l+1,u=e/a,d=t/l,f=[],p=[],v=[],g=[];for(let m=0;m<h;m++){const x=m*d-o;for(let y=0;y<c;y++){const _=y*u-r;p.push(_,-x,0),v.push(0,0,1),g.push(y/a),g.push(1-m/l)}}for(let m=0;m<l;m++)for(let x=0;x<a;x++){const y=x+c*m,_=x+c*(m+1),E=x+1+c*(m+1),w=x+1+c*m;f.push(y,_,w),f.push(_,E,w)}this.setIndex(f),this.setAttribute("position",new Ke(p,3)),this.setAttribute("normal",new Ke(v,3)),this.setAttribute("uv",new Ke(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new sr(e.width,e.height,e.widthSegments,e.heightSegments)}}class Zh extends bt{constructor(e=.5,t=1,n=32,i=1,r=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:o},n=Math.max(3,n),i=Math.max(1,i);const a=[],l=[],c=[],h=[];let u=e;const d=(t-e)/i,f=new L,p=new xe;for(let v=0;v<=i;v++){for(let g=0;g<=n;g++){const m=r+g/n*o;f.x=u*Math.cos(m),f.y=u*Math.sin(m),l.push(f.x,f.y,f.z),c.push(0,0,1),p.x=(f.x/t+1)/2,p.y=(f.y/t+1)/2,h.push(p.x,p.y)}u+=d}for(let v=0;v<i;v++){const g=v*(n+1);for(let m=0;m<n;m++){const x=m+g,y=x,_=x+n+1,E=x+n+2,w=x+1;a.push(y,_,w),a.push(_,E,w)}}this.setIndex(a),this.setAttribute("position",new Ke(l,3)),this.setAttribute("normal",new Ke(c,3)),this.setAttribute("uv",new Ke(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Zh(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Jh extends bt{constructor(e=new js([new xe(0,.5),new xe(-.5,-.5),new xe(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],r=[],o=[];let a=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let h=0;h<e.length;h++)c(e[h]),this.addGroup(a,l,h),a+=l,l=0;this.setIndex(n),this.setAttribute("position",new Ke(i,3)),this.setAttribute("normal",new Ke(r,3)),this.setAttribute("uv",new Ke(o,2));function c(h){const u=i.length/3,d=h.extractPoints(t);let f=d.shape;const p=d.holes;gr.isClockWise(f)===!1&&(f=f.reverse());for(let g=0,m=p.length;g<m;g++){const x=p[g];gr.isClockWise(x)===!0&&(p[g]=x.reverse())}const v=gr.triangulateShape(f,p);for(let g=0,m=p.length;g<m;g++){const x=p[g];f=f.concat(x)}for(let g=0,m=f.length;g<m;g++){const x=f[g];i.push(x.x,x.y,0),r.push(0,0,1),o.push(x.x,x.y)}for(let g=0,m=v.length;g<m;g++){const x=v[g],y=x[0]+u,_=x[1]+u,E=x[2]+u;n.push(y,_,E),l+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return Wb(t,e)}static fromJSON(e,t){const n=[];for(let i=0,r=e.shapes.length;i<r;i++){const o=t[e.shapes[i]];n.push(o)}return new Jh(n,e.curveSegments)}}function Wb(s,e){if(e.shapes=[],Array.isArray(s))for(let t=0,n=s.length;t<n;t++){const i=s[t];e.shapes.push(i.uuid)}else e.shapes.push(s.uuid);return e}class ao extends bt{constructor(e=1,t=32,n=16,i=0,r=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const l=Math.min(o+a,Math.PI);let c=0;const h=[],u=new L,d=new L,f=[],p=[],v=[],g=[];for(let m=0;m<=n;m++){const x=[],y=m/n;let _=0;m===0&&o===0?_=.5/t:m===n&&l===Math.PI&&(_=-.5/t);for(let E=0;E<=t;E++){const w=E/t;u.x=-e*Math.cos(i+w*r)*Math.sin(o+y*a),u.y=e*Math.cos(o+y*a),u.z=e*Math.sin(i+w*r)*Math.sin(o+y*a),p.push(u.x,u.y,u.z),d.copy(u).normalize(),v.push(d.x,d.y,d.z),g.push(w+_,1-y),x.push(c++)}h.push(x)}for(let m=0;m<n;m++)for(let x=0;x<t;x++){const y=h[m][x+1],_=h[m][x],E=h[m+1][x],w=h[m+1][x+1];(m!==0||o>0)&&f.push(y,_,w),(m!==n-1||l<Math.PI)&&f.push(_,E,w)}this.setIndex(f),this.setAttribute("position",new Ke(p,3)),this.setAttribute("normal",new Ke(v,3)),this.setAttribute("uv",new Ke(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ao(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Kh extends os{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Kh(e.radius,e.detail)}}class Ir extends bt{constructor(e=1,t=.4,n=12,i=48,r=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const o=[],a=[],l=[],c=[],h=new L,u=new L,d=new L;for(let f=0;f<=n;f++)for(let p=0;p<=i;p++){const v=p/i*r,g=f/n*Math.PI*2;u.x=(e+t*Math.cos(g))*Math.cos(v),u.y=(e+t*Math.cos(g))*Math.sin(v),u.z=t*Math.sin(g),a.push(u.x,u.y,u.z),h.x=e*Math.cos(v),h.y=e*Math.sin(v),d.subVectors(u,h).normalize(),l.push(d.x,d.y,d.z),c.push(p/i),c.push(f/n)}for(let f=1;f<=n;f++)for(let p=1;p<=i;p++){const v=(i+1)*f+p-1,g=(i+1)*(f-1)+p-1,m=(i+1)*(f-1)+p,x=(i+1)*f+p;o.push(v,g,x),o.push(g,m,x)}this.setIndex(o),this.setAttribute("position",new Ke(a,3)),this.setAttribute("normal",new Ke(l,3)),this.setAttribute("uv",new Ke(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ir(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Qh extends bt{constructor(e=1,t=.4,n=64,i=8,r=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:o},n=Math.floor(n),i=Math.floor(i);const a=[],l=[],c=[],h=[],u=new L,d=new L,f=new L,p=new L,v=new L,g=new L,m=new L;for(let y=0;y<=n;++y){const _=y/n*r*Math.PI*2;x(_,r,o,e,f),x(_+.01,r,o,e,p),g.subVectors(p,f),m.addVectors(p,f),v.crossVectors(g,m),m.crossVectors(v,g),v.normalize(),m.normalize();for(let E=0;E<=i;++E){const w=E/i*Math.PI*2,M=-t*Math.cos(w),T=t*Math.sin(w);u.x=f.x+(M*m.x+T*v.x),u.y=f.y+(M*m.y+T*v.y),u.z=f.z+(M*m.z+T*v.z),l.push(u.x,u.y,u.z),d.subVectors(u,f).normalize(),c.push(d.x,d.y,d.z),h.push(y/n),h.push(E/i)}}for(let y=1;y<=n;y++)for(let _=1;_<=i;_++){const E=(i+1)*(y-1)+(_-1),w=(i+1)*y+(_-1),M=(i+1)*y+_,T=(i+1)*(y-1)+_;a.push(E,w,T),a.push(w,M,T)}this.setIndex(a),this.setAttribute("position",new Ke(l,3)),this.setAttribute("normal",new Ke(c,3)),this.setAttribute("uv",new Ke(h,2));function x(y,_,E,w,M){const T=Math.cos(y),S=Math.sin(y),b=E/_*y,D=Math.cos(b);M.x=w*(2+D)*.5*T,M.y=w*(2+D)*S*.5,M.z=w*Math.sin(b)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Qh(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class $h extends bt{constructor(e=new If(new L(-1,-1,0),new L(-1,1,0),new L(1,1,0)),t=64,n=1,i=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r};const o=e.computeFrenetFrames(t,r);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new L,l=new L,c=new xe;let h=new L;const u=[],d=[],f=[],p=[];v(),this.setIndex(p),this.setAttribute("position",new Ke(u,3)),this.setAttribute("normal",new Ke(d,3)),this.setAttribute("uv",new Ke(f,2));function v(){for(let y=0;y<t;y++)g(y);g(r===!1?t:0),x(),m()}function g(y){h=e.getPointAt(y/t,h);const _=o.normals[y],E=o.binormals[y];for(let w=0;w<=i;w++){const M=w/i*Math.PI*2,T=Math.sin(M),S=-Math.cos(M);l.x=S*_.x+T*E.x,l.y=S*_.y+T*E.y,l.z=S*_.z+T*E.z,l.normalize(),d.push(l.x,l.y,l.z),a.x=h.x+n*l.x,a.y=h.y+n*l.y,a.z=h.z+n*l.z,u.push(a.x,a.y,a.z)}}function m(){for(let y=1;y<=t;y++)for(let _=1;_<=i;_++){const E=(i+1)*(y-1)+(_-1),w=(i+1)*y+(_-1),M=(i+1)*y+_,T=(i+1)*(y-1)+_;p.push(E,w,T),p.push(w,M,T)}}function x(){for(let y=0;y<=t;y++)for(let _=0;_<=i;_++)c.x=y/t,c.y=_/i,f.push(c.x,c.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new $h(new gh[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Lf extends bt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new L,r=new L;if(e.index!==null){const o=e.attributes.position,a=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:a.count,materialIndex:0}]);for(let c=0,h=l.length;c<h;++c){const u=l[c],d=u.start,f=u.count;for(let p=d,v=d+f;p<v;p+=3)for(let g=0;g<3;g++){const m=a.getX(p+g),x=a.getX(p+(g+1)%3);i.fromBufferAttribute(o,m),r.fromBufferAttribute(o,x),fm(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}}else{const o=e.attributes.position;for(let a=0,l=o.count/3;a<l;a++)for(let c=0;c<3;c++){const h=3*a+c,u=3*a+(c+1)%3;i.fromBufferAttribute(o,h),r.fromBufferAttribute(o,u),fm(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new Ke(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function fm(s,e,t){const n=`${s.x},${s.y},${s.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${s.x},${s.y},${s.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var pm=Object.freeze({__proto__:null,BoxGeometry:vn,CapsuleGeometry:Vh,CircleGeometry:Hh,ConeGeometry:Wh,CylinderGeometry:Tn,DodecahedronGeometry:Xh,EdgesGeometry:bv,ExtrudeGeometry:qh,IcosahedronGeometry:jh,LatheGeometry:pl,OctahedronGeometry:Ur,PlaneGeometry:sr,PolyhedronGeometry:os,RingGeometry:Zh,ShapeGeometry:Jh,SphereGeometry:ao,TetrahedronGeometry:Kh,TorusGeometry:Ir,TorusKnotGeometry:Qh,TubeGeometry:$h,WireframeGeometry:Lf});class Ev extends ri{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Ge(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class Tv extends Ei{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Uf extends ri{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new Ge(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=rs,this.normalScale=new xe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new wi,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Av extends Uf{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new xe(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Tt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Ge(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Ge(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Ge(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class vh extends ri{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Ge(16777215),this.specular=new Ge(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=rs,this.normalScale=new xe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new wi,this.combine=ol,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Cv extends ri{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ge(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=rs,this.normalScale=new xe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class Rv extends ri{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=rs,this.normalScale=new xe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class Nf extends ri{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Ge(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=rs,this.normalScale=new xe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new wi,this.combine=ol,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class ml extends ri{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Y0,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class eu extends ri{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class Pv extends ri{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ge(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=rs,this.normalScale=new xe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Iv extends Fn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function Hs(s,e,t){return!s||!t&&s.constructor===e?s:typeof e.BYTES_PER_ELEMENT=="number"?new e(s):Array.prototype.slice.call(s)}function Dv(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}function Lv(s){function e(i,r){return s[i]-s[r]}const t=s.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function zd(s,e,t){const n=s.length,i=new s.constructor(n);for(let r=0,o=0;o!==n;++r){const a=t[r]*e;for(let l=0;l!==e;++l)i[o++]=s[a+l]}return i}function Of(s,e,t,n){let i=1,r=s[0];for(;r!==void 0&&r[n]===void 0;)r=s[i++];if(r===void 0)return;let o=r[n];if(o!==void 0)if(Array.isArray(o))do o=r[n],o!==void 0&&(e.push(r.time),t.push.apply(t,o)),r=s[i++];while(r!==void 0);else if(o.toArray!==void 0)do o=r[n],o!==void 0&&(e.push(r.time),o.toArray(t,t.length)),r=s[i++];while(r!==void 0);else do o=r[n],o!==void 0&&(e.push(r.time),t.push(o)),r=s[i++];while(r!==void 0)}function Xb(s,e,t,n,i=30){const r=s.clone();r.name=e;const o=[];for(let l=0;l<r.tracks.length;++l){const c=r.tracks[l],h=c.getValueSize(),u=[],d=[];for(let f=0;f<c.times.length;++f){const p=c.times[f]*i;if(!(p<t||p>=n)){u.push(c.times[f]);for(let v=0;v<h;++v)d.push(c.values[f*h+v])}}u.length!==0&&(c.times=Hs(u,c.times.constructor),c.values=Hs(d,c.values.constructor),o.push(c))}r.tracks=o;let a=1/0;for(let l=0;l<r.tracks.length;++l)a>r.tracks[l].times[0]&&(a=r.tracks[l].times[0]);for(let l=0;l<r.tracks.length;++l)r.tracks[l].shift(-1*a);return r.resetDuration(),r}function Yb(s,e=0,t=s,n=30){n<=0&&(n=30);const i=t.tracks.length,r=e/n;for(let o=0;o<i;++o){const a=t.tracks[o],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const c=s.tracks.find(function(m){return m.name===a.name&&m.ValueTypeName===l});if(c===void 0)continue;let h=0;const u=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=u/3);let d=0;const f=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=f/3);const p=a.times.length-1;let v;if(r<=a.times[0]){const m=h,x=u-h;v=a.values.slice(m,x)}else if(r>=a.times[p]){const m=p*u+h,x=m+u-h;v=a.values.slice(m,x)}else{const m=a.createInterpolant(),x=h,y=u-h;m.evaluate(r),v=m.resultBuffer.slice(x,y)}l==="quaternion"&&new Ht().fromArray(v).normalize().conjugate().toArray(v);const g=c.times.length;for(let m=0;m<g;++m){const x=m*f+d;if(l==="quaternion")Ht.multiplyQuaternionsFlat(c.values,x,v,0,c.values,x);else{const y=f-d*2;for(let _=0;_<y;++_)c.values[x+_]-=v[_]}}}return s.blendMode=_f,s}const qb={convertArray:Hs,isTypedArray:Dv,getKeyframeOrder:Lv,sortedArray:zd,flattenJSON:Of,subclip:Xb,makeClipAdditive:Yb};class gl{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let o;n:{i:if(!(e<i)){for(let a=n+2;;){if(i===void 0){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===a)break;if(r=i,i=t[++n],e<i)break t}o=t.length;break n}if(!(e>=r)){const a=t[1];e<a&&(n=2,r=a);for(let l=n-2;;){if(r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===l)break;if(i=r,r=t[--n-1],e>=r)break t}o=n,n=0;break n}break e}for(;n<o;){const a=n+o>>>1;e<t[a]?o=a:n=a+1}if(i=t[n],r=t[n-1],r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let o=0;o!==i;++o)t[o]=n[r+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Uv extends gl{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:zs,endingEnd:zs}}intervalChanged_(e,t,n){const i=this.parameterPositions;let r=e-2,o=e+1,a=i[r],l=i[o];if(a===void 0)switch(this.getSettings_().endingStart){case Gs:r=e,a=2*t-n;break;case Ga:r=i.length-2,a=t+i[r]-i[r+1];break;default:r=e,a=n}if(l===void 0)switch(this.getSettings_().endingEnd){case Gs:o=e,l=2*n-t;break;case Ga:o=1,l=n+i[1]-i[0];break;default:o=e-1,l=t}const c=(n-t)*.5,h=this.valueSize;this._weightPrev=c/(t-a),this._weightNext=c/(l-n),this._offsetPrev=r*h,this._offsetNext=o*h}interpolate_(e,t,n,i){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,h=this._offsetPrev,u=this._offsetNext,d=this._weightPrev,f=this._weightNext,p=(n-t)/(i-t),v=p*p,g=v*p,m=-d*g+2*d*v-d*p,x=(1+d)*g+(-1.5-2*d)*v+(-.5+d)*p+1,y=(-1-f)*g+(1.5+f)*v+.5*p,_=f*g-f*v;for(let E=0;E!==a;++E)r[E]=m*o[h+E]+x*o[c+E]+y*o[l+E]+_*o[u+E];return r}}class Ff extends gl{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,h=(n-t)/(i-t),u=1-h;for(let d=0;d!==a;++d)r[d]=o[c+d]*u+o[l+d]*h;return r}}class Nv extends gl{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class or{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Hs(t,this.TimeBufferType),this.values=Hs(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Hs(e.times,Array),values:Hs(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Nv(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Ff(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Uv(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case za:t=this.InterpolantFactoryMethodDiscrete;break;case fh:t=this.InterpolantFactoryMethodLinear;break;case Ec:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return za;case this.InterpolantFactoryMethodLinear:return fh;case this.InterpolantFactoryMethodSmooth:return Ec}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let r=0,o=i-1;for(;r!==i&&n[r]<e;)++r;for(;o!==-1&&n[o]>t;)--o;if(++o,r!==0||o!==i){r>=o&&(o=Math.max(o,1),r=o-1);const a=this.getValueSize();this.times=n.slice(r,o),this.values=this.values.slice(r*a,o*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let a=0;a!==r;a++){const l=n[a];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),e=!1;break}if(o!==null&&o>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,o),e=!1;break}o=l}if(i!==void 0&&Dv(i))for(let a=0,l=i.length;a!==l;++a){const c=i[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===Ec,r=e.length-1;let o=1;for(let a=1;a<r;++a){let l=!1;const c=e[a],h=e[a+1];if(c!==h&&(a!==1||c!==e[0]))if(i)l=!0;else{const u=a*n,d=u-n,f=u+n;for(let p=0;p!==n;++p){const v=t[u+p];if(v!==t[d+p]||v!==t[f+p]){l=!0;break}}}if(l){if(a!==o){e[o]=e[a];const u=a*n,d=o*n;for(let f=0;f!==n;++f)t[d+f]=t[u+f]}++o}}if(r>0){e[o]=e[r];for(let a=r*n,l=o*n,c=0;c!==n;++c)t[l+c]=t[a+c];++o}return o!==e.length?(this.times=e.slice(0,o),this.values=t.slice(0,o*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}or.prototype.TimeBufferType=Float32Array;or.prototype.ValueBufferType=Float32Array;or.prototype.DefaultInterpolation=fh;class lo extends or{constructor(e,t,n){super(e,t,n)}}lo.prototype.ValueTypeName="bool";lo.prototype.ValueBufferType=Array;lo.prototype.DefaultInterpolation=za;lo.prototype.InterpolantFactoryMethodLinear=void 0;lo.prototype.InterpolantFactoryMethodSmooth=void 0;class kf extends or{}kf.prototype.ValueTypeName="color";class Ja extends or{}Ja.prototype.ValueTypeName="number";class Ov extends gl{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=(n-t)/(i-t);let c=e*a;for(let h=c+a;c!==h;c+=4)Ht.slerpFlat(r,0,o,c-a,o,c,l);return r}}class jo extends or{InterpolantFactoryMethodLinear(e){return new Ov(this.times,this.values,this.getValueSize(),e)}}jo.prototype.ValueTypeName="quaternion";jo.prototype.InterpolantFactoryMethodSmooth=void 0;class co extends or{constructor(e,t,n){super(e,t,n)}}co.prototype.ValueTypeName="string";co.prototype.ValueBufferType=Array;co.prototype.DefaultInterpolation=za;co.prototype.InterpolantFactoryMethodLinear=void 0;co.prototype.InterpolantFactoryMethodSmooth=void 0;class io extends or{}io.prototype.ValueTypeName="vector";class ro{constructor(e="",t=-1,n=[],i=Ph){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=Fi(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let o=0,a=n.length;o!==a;++o)t.push(Zb(n[o]).scale(i));const r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,o=n.length;r!==o;++r)t.push(or.toJSON(n[r]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const r=t.length,o=[];for(let a=0;a<r;a++){let l=[],c=[];l.push((a+r-1)%r,a,(a+1)%r),c.push(0,1,0);const h=Lv(l);l=zd(l,1,h),c=zd(c,1,h),!i&&l[0]===0&&(l.push(r),c.push(c[0])),o.push(new Ja(".morphTargetInfluences["+t[a].name+"]",l,c).scale(1/n))}return new this(e,-1,o)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let a=0,l=e.length;a<l;a++){const c=e[a],h=c.name.match(r);if(h&&h.length>1){const u=h[1];let d=i[u];d||(i[u]=d=[]),d.push(c)}}const o=[];for(const a in i)o.push(this.CreateFromMorphTargetSequence(a,i[a],t,n));return o}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(u,d,f,p,v){if(f.length!==0){const g=[],m=[];Of(f,g,m,p),g.length!==0&&v.push(new u(d,g,m))}},i=[],r=e.name||"default",o=e.fps||30,a=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let u=0;u<c.length;u++){const d=c[u].keys;if(!(!d||d.length===0))if(d[0].morphTargets){const f={};let p;for(p=0;p<d.length;p++)if(d[p].morphTargets)for(let v=0;v<d[p].morphTargets.length;v++)f[d[p].morphTargets[v]]=-1;for(const v in f){const g=[],m=[];for(let x=0;x!==d[p].morphTargets.length;++x){const y=d[p];g.push(y.time),m.push(y.morphTarget===v?1:0)}i.push(new Ja(".morphTargetInfluence["+v+"]",g,m))}l=f.length*o}else{const f=".bones["+t[u].name+"]";n(io,f+".position",d,"pos",i),n(jo,f+".quaternion",d,"rot",i),n(io,f+".scale",d,"scl",i)}}return i.length===0?null:new this(r,l,i,a)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const r=this.tracks[n];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function jb(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Ja;case"vector":case"vector2":case"vector3":case"vector4":return io;case"color":return kf;case"quaternion":return jo;case"bool":case"boolean":return lo;case"string":return co}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function Zb(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=jb(s.type);if(s.times===void 0){const t=[],n=[];Of(s.keys,t,n,"value"),s.times=t,s.values=n}return e.parse!==void 0?e.parse(s):new e(s.name,s.times,s.values,s.interpolation)}const Nr={enabled:!1,files:{},add:function(s,e){this.enabled!==!1&&(this.files[s]=e)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class Bf{constructor(e,t,n){const i=this;let r=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(h){a++,r===!1&&i.onStart!==void 0&&i.onStart(h,o,a),r=!0},this.itemEnd=function(h){o++,i.onProgress!==void 0&&i.onProgress(h,o,a),o===a&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(h){i.onError!==void 0&&i.onError(h)},this.resolveURL=function(h){return l?l(h):h},this.setURLModifier=function(h){return l=h,this},this.addHandler=function(h,u){return c.push(h,u),this},this.removeHandler=function(h){const u=c.indexOf(h);return u!==-1&&c.splice(u,2),this},this.getHandler=function(h){for(let u=0,d=c.length;u<d;u+=2){const f=c[u],p=c[u+1];if(f.global&&(f.lastIndex=0),f.test(h))return p}return null}}}const ho=new Bf;class qn{constructor(e){this.manager=e!==void 0?e:ho,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}qn.DEFAULT_MATERIAL_NAME="__DEFAULT";const Cr={};class Jb extends Error{constructor(e,t){super(e),this.response=t}}class nr extends qn{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=Nr.get(e);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(Cr[e]!==void 0){Cr[e].push({onLoad:t,onProgress:n,onError:i});return}Cr[e]=[],Cr[e].push({onLoad:t,onProgress:n,onError:i});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,l=this.responseType;fetch(o).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const h=Cr[e],u=c.body.getReader(),d=c.headers.get("X-File-Size")||c.headers.get("Content-Length"),f=d?parseInt(d):0,p=f!==0;let v=0;const g=new ReadableStream({start(m){x();function x(){u.read().then(({done:y,value:_})=>{if(y)m.close();else{v+=_.byteLength;const E=new ProgressEvent("progress",{lengthComputable:p,loaded:v,total:f});for(let w=0,M=h.length;w<M;w++){const T=h[w];T.onProgress&&T.onProgress(E)}m.enqueue(_),x()}},y=>{m.error(y)})}}});return new Response(g)}else throw new Jb(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(h=>new DOMParser().parseFromString(h,a));case"json":return c.json();default:if(a===void 0)return c.text();{const u=/charset="?([^;"\s]*)"?/i.exec(a),d=u&&u[1]?u[1].toLowerCase():void 0,f=new TextDecoder(d);return c.arrayBuffer().then(p=>f.decode(p))}}}).then(c=>{Nr.add(e,c);const h=Cr[e];delete Cr[e];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onLoad&&f.onLoad(c)}}).catch(c=>{const h=Cr[e];if(h===void 0)throw this.manager.itemError(e),c;delete Cr[e];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onError&&f.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Kb extends qn{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new nr(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(r.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=ro.parse(e[n]);t.push(i)}return t}}class Qb extends qn{constructor(e){super(e)}load(e,t,n,i){const r=this,o=[],a=new zh,l=new nr(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(r.withCredentials);let c=0;function h(u){l.load(e[u],function(d){const f=r.parse(d,!0);o[u]={width:f.width,height:f.height,format:f.format,mipmaps:f.mipmaps},c+=1,c===6&&(f.mipmapCount===1&&(a.minFilter=Sn),a.image=o,a.format=f.format,a.needsUpdate=!0,t&&t(a))},n,i)}if(Array.isArray(e))for(let u=0,d=e.length;u<d;++u)h(u);else l.load(e,function(u){const d=r.parse(u,!0);if(d.isCubemap){const f=d.mipmaps.length/d.mipmapCount;for(let p=0;p<f;p++){o[p]={mipmaps:[]};for(let v=0;v<d.mipmapCount;v++)o[p].mipmaps.push(d.mipmaps[p*d.mipmapCount+v]),o[p].format=d.format,o[p].width=d.width,o[p].height=d.height}a.image=o}else a.image.width=d.width,a.image.height=d.height,a.mipmaps=d.mipmaps;d.mipmapCount===1&&(a.minFilter=Sn),a.format=d.format,a.needsUpdate=!0,t&&t(a)},n,i);return a}}class Ka extends qn{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=Nr.get(e);if(o!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o;const a=Xa("img");function l(){h(),Nr.add(e,this),t&&t(this),r.manager.itemEnd(e)}function c(u){h(),i&&i(u),r.manager.itemError(e),r.manager.itemEnd(e)}function h(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(e),a.src=e,a}}class $b extends qn{constructor(e){super(e)}load(e,t,n,i){const r=new hl;r.colorSpace=ln;const o=new Ka(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function l(c){o.load(e[c],function(h){r.images[c]=h,a++,a===6&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}for(let c=0;c<e.length;++c)l(c);return r}}class Fv extends qn{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new mr,a=new nr(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(r.withCredentials),a.load(e,function(l){let c;try{c=r.parse(l)}catch(h){if(i!==void 0)i(h);else{console.error(h);return}}c.image!==void 0?o.image=c.image:c.data!==void 0&&(o.image.width=c.width,o.image.height=c.height,o.image.data=c.data),o.wrapS=c.wrapS!==void 0?c.wrapS:Si,o.wrapT=c.wrapT!==void 0?c.wrapT:Si,o.magFilter=c.magFilter!==void 0?c.magFilter:Sn,o.minFilter=c.minFilter!==void 0?c.minFilter:Sn,o.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.colorSpace!==void 0&&(o.colorSpace=c.colorSpace),c.flipY!==void 0&&(o.flipY=c.flipY),c.format!==void 0&&(o.format=c.format),c.type!==void 0&&(o.type=c.type),c.mipmaps!==void 0&&(o.mipmaps=c.mipmaps,o.minFilter=er),c.mipmapCount===1&&(o.minFilter=Sn),c.generateMipmaps!==void 0&&(o.generateMipmaps=c.generateMipmaps),o.needsUpdate=!0,t&&t(o,c)},n,i),o}}class kv extends qn{constructor(e){super(e)}load(e,t,n,i){const r=new pn,o=new Ka(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){r.image=a,r.needsUpdate=!0,t!==void 0&&t(r)},n,i),r}}class as extends Ot{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Ge(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class Bv extends as{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Ot.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Ge(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Ku=new st,mm=new L,gm=new L;class zf{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new xe(512,512),this.map=null,this.mapPass=null,this.matrix=new st,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new fl,this._frameExtents=new xe(1,1),this._viewportCount=1,this._viewports=[new Rt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;mm.setFromMatrixPosition(e.matrixWorld),t.position.copy(mm),gm.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(gm),t.updateMatrixWorld(),Ku.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Ku),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Ku)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class e1 extends zf{constructor(){super(new bn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=Ho*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(n!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class Gf extends as{constructor(e,t,n=0,i=Math.PI/3,r=0,o=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Ot.DEFAULT_UP),this.updateMatrix(),this.target=new Ot,this.distance=n,this.angle=i,this.penumbra=r,this.decay=o,this.map=null,this.shadow=new e1}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const vm=new st,pa=new L,Qu=new L;class t1 extends zf{constructor(){super(new bn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new xe(4,2),this._viewportCount=6,this._viewports=[new Rt(2,1,1,1),new Rt(0,1,1,1),new Rt(3,1,1,1),new Rt(1,1,1,1),new Rt(3,0,1,1),new Rt(1,0,1,1)],this._cubeDirections=[new L(1,0,0),new L(-1,0,0),new L(0,0,1),new L(0,0,-1),new L(0,1,0),new L(0,-1,0)],this._cubeUps=[new L(0,1,0),new L(0,1,0),new L(0,1,0),new L(0,1,0),new L(0,0,1),new L(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),pa.setFromMatrixPosition(e.matrixWorld),n.position.copy(pa),Qu.copy(n.position),Qu.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Qu),n.updateMatrixWorld(),i.makeTranslation(-pa.x,-pa.y,-pa.z),vm.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(vm)}}class Vf extends as{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new t1}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class ls extends Uh{constructor(e=-1,t=1,n=1,i=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,o=n+e,a=i+t,l=i-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,o=r+c*this.view.width,a-=h*this.view.offsetY,l=a-h*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class n1 extends zf{constructor(){super(new ls(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Hf extends as{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Ot.DEFAULT_UP),this.updateMatrix(),this.target=new Ot,this.shadow=new n1}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Wf extends as{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class zv extends as{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class Gv{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new L)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*i),t.addScaledVector(o[2],.488603*r),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],1.092548*(n*i)),t.addScaledVector(o[5],1.092548*(i*r)),t.addScaledVector(o[6],.315392*(3*r*r-1)),t.addScaledVector(o[7],1.092548*(n*r)),t.addScaledVector(o[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*i),t.addScaledVector(o[2],2*.511664*r),t.addScaledVector(o[3],2*.511664*n),t.addScaledVector(o[4],2*.429043*n*i),t.addScaledVector(o[5],2*.429043*i*r),t.addScaledVector(o[6],.743125*r*r-.247708),t.addScaledVector(o[7],2*.429043*n*r),t.addScaledVector(o[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-i*i)}}class Vv extends as{constructor(e=new Gv,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class tu extends qn{constructor(e){super(e),this.textures={}}load(e,t,n,i){const r=this,o=new nr(r.manager);o.setPath(r.path),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(e,function(a){try{t(r.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(r){return t[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),t[r]}const i=this.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Ge().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.dispersion!==void 0&&(i.dispersion=e.dispersion),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(i.depthFunc=e.depthFunc),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(i.blendSrc=e.blendSrc),e.blendDst!==void 0&&(i.blendDst=e.blendDst),e.blendEquation!==void 0&&(i.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(i.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(i.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==void 0&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const r in e.uniforms){const o=e.uniforms[r];switch(i.uniforms[r]={},o.type){case"t":i.uniforms[r].value=n(o.value);break;case"c":i.uniforms[r].value=new Ge().setHex(o.value);break;case"v2":i.uniforms[r].value=new xe().fromArray(o.value);break;case"v3":i.uniforms[r].value=new L().fromArray(o.value);break;case"v4":i.uniforms[r].value=new Rt().fromArray(o.value);break;case"m3":i.uniforms[r].value=new Et().fromArray(o.value);break;case"m4":i.uniforms[r].value=new st().fromArray(o.value);break;default:i.uniforms[r].value=o.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const r in e.extensions)i.extensions[r]=e.extensions[r];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let r=e.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new xe().fromArray(r)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapRotation!==void 0&&i.envMapRotation.fromArray(e.envMapRotation),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new xe().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}createMaterialFromType(e){return tu.createMaterialFromType(e)}static createMaterialFromType(e){const t={ShadowMaterial:Ev,SpriteMaterial:qo,RawShaderMaterial:Tv,ShaderMaterial:Ei,PointsMaterial:Ef,MeshPhysicalMaterial:Av,MeshStandardMaterial:Uf,MeshPhongMaterial:vh,MeshToonMaterial:Cv,MeshNormalMaterial:Rv,MeshLambertMaterial:Nf,MeshDepthMaterial:ml,MeshDistanceMaterial:eu,MeshBasicMaterial:On,MeshMatcapMaterial:Pv,LineDashedMaterial:Iv,LineBasicMaterial:Fn,Material:ri};return new t[e]}}class _h{static decodeText(e){if(console.warn("THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead."),typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class nu extends bt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class Hv extends qn{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new nr(r.manager);o.setPath(r.path),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(e,function(a){try{t(r.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(f,p){if(t[p]!==void 0)return t[p];const g=f.interleavedBuffers[p],m=r(f,g.buffer),x=Fo(g.type,m),y=new kh(x,g.stride);return y.uuid=g.uuid,t[p]=y,y}function r(f,p){if(n[p]!==void 0)return n[p];const g=f.arrayBuffers[p],m=new Uint32Array(g).buffer;return n[p]=m,m}const o=e.isInstancedBufferGeometry?new nu:new bt,a=e.data.index;if(a!==void 0){const f=Fo(a.type,a.array);o.setIndex(new Ct(f,1))}const l=e.data.attributes;for(const f in l){const p=l[f];let v;if(p.isInterleavedBufferAttribute){const g=i(e.data,p.data);v=new Ni(g,p.itemSize,p.offset,p.normalized)}else{const g=Fo(p.type,p.array),m=p.isInstancedBufferAttribute?to:Ct;v=new m(g,p.itemSize,p.normalized)}p.name!==void 0&&(v.name=p.name),p.usage!==void 0&&v.setUsage(p.usage),o.setAttribute(f,v)}const c=e.data.morphAttributes;if(c)for(const f in c){const p=c[f],v=[];for(let g=0,m=p.length;g<m;g++){const x=p[g];let y;if(x.isInterleavedBufferAttribute){const _=i(e.data,x.data);y=new Ni(_,x.itemSize,x.offset,x.normalized)}else{const _=Fo(x.type,x.array);y=new Ct(_,x.itemSize,x.normalized)}x.name!==void 0&&(y.name=x.name),v.push(y)}o.morphAttributes[f]=v}e.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const u=e.data.groups||e.data.drawcalls||e.data.offsets;if(u!==void 0)for(let f=0,p=u.length;f!==p;++f){const v=u[f];o.addGroup(v.start,v.count,v.materialIndex)}const d=e.data.boundingSphere;if(d!==void 0){const f=new L;d.center!==void 0&&f.fromArray(d.center),o.boundingSphere=new An(f,d.radius)}return e.name&&(o.name=e.name),e.userData&&(o.userData=e.userData),o}}class i1 extends qn{constructor(e){super(e)}load(e,t,n,i){const r=this,o=this.path===""?_h.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const a=new nr(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){let c=null;try{c=JSON.parse(l)}catch(u){i!==void 0&&i(u),console.error("THREE:ObjectLoader: Can't parse "+e+".",u.message);return}const h=c.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(c,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?_h.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const r=new nr(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);const o=await r.loadAsync(e,t),a=JSON.parse(o),l=a.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(a)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,i),o=this.parseImages(e.images,function(){t!==void 0&&t(c)}),a=this.parseTextures(e.textures,o),l=this.parseMaterials(e.materials,a),c=this.parseObject(e.object,r,l,a,n),h=this.parseSkeletons(e.skeletons,c);if(this.bindSkeletons(c,h),this.bindLightTargets(c),t!==void 0){let u=!1;for(const d in o)if(o[d].data instanceof HTMLImageElement){u=!0;break}u===!1&&t(c)}return c}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),r=await this.parseImagesAsync(e.images),o=this.parseTextures(e.textures,r),a=this.parseMaterials(e.materials,o),l=this.parseObject(e.object,i,a,o,t),c=this.parseSkeletons(e.skeletons,l);return this.bindSkeletons(l,c),this.bindLightTargets(l),l}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const r=new js().fromJSON(e[n]);t[r.uuid]=r}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(r){r.isBone&&(i[r.uuid]=r)}),e!==void 0)for(let r=0,o=e.length;r<o;r++){const a=new dl().fromJSON(e[r],i);n[a.uuid]=a}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new Hv;for(let r=0,o=e.length;r<o;r++){let a;const l=e[r];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":a=i.parse(l);break;default:l.type in pm?a=pm[l.type].fromJSON(l,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}a.uuid=l.uuid,l.name!==void 0&&(a.name=l.name),l.userData!==void 0&&(a.userData=l.userData),n[l.uuid]=a}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const r=new tu;r.setTextures(t);for(let o=0,a=e.length;o<a;o++){const l=e[o];n[l.uuid]===void 0&&(n[l.uuid]=r.parse(l)),i[l.uuid]=n[l.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],r=ro.parse(i);t[r.uuid]=r}return t}parseImages(e,t){const n=this,i={};let r;function o(l){return n.manager.itemStart(l),r.load(l,function(){n.manager.itemEnd(l)},void 0,function(){n.manager.itemError(l),n.manager.itemEnd(l)})}function a(l){if(typeof l=="string"){const c=l,h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:n.resourcePath+c;return o(h)}else return l.data?{data:Fo(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new Bf(t);r=new Ka(l),r.setCrossOrigin(this.crossOrigin);for(let c=0,h=e.length;c<h;c++){const u=e[c],d=u.url;if(Array.isArray(d)){const f=[];for(let p=0,v=d.length;p<v;p++){const g=d[p],m=a(g);m!==null&&(m instanceof HTMLImageElement?f.push(m):f.push(new mr(m.data,m.width,m.height)))}i[u.uuid]=new Vs(f)}else{const f=a(u.url);i[u.uuid]=new Vs(f)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function r(o){if(typeof o=="string"){const a=o,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)?a:t.resourcePath+a;return await i.loadAsync(l)}else return o.data?{data:Fo(o.type,o.data),width:o.width,height:o.height}:null}if(e!==void 0&&e.length>0){i=new Ka(this.manager),i.setCrossOrigin(this.crossOrigin);for(let o=0,a=e.length;o<a;o++){const l=e[o],c=l.url;if(Array.isArray(c)){const h=[];for(let u=0,d=c.length;u<d;u++){const f=c[u],p=await r(f);p!==null&&(p instanceof HTMLImageElement?h.push(p):h.push(new mr(p.data,p.width,p.height)))}n[l.uuid]=new Vs(h)}else{const h=await r(l.url);n[l.uuid]=new Vs(h)}}}return n}parseTextures(e,t){function n(r,o){return typeof r=="number"?r:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",r),o[r])}const i={};if(e!==void 0)for(let r=0,o=e.length;r<o;r++){const a=e[r];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),t[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const l=t[a.image],c=l.data;let h;Array.isArray(c)?(h=new hl,c.length===6&&(h.needsUpdate=!0)):(c&&c.data?h=new mr:h=new pn,c&&(h.needsUpdate=!0)),h.source=l,h.uuid=a.uuid,a.name!==void 0&&(h.name=a.name),a.mapping!==void 0&&(h.mapping=n(a.mapping,r1)),a.channel!==void 0&&(h.channel=a.channel),a.offset!==void 0&&h.offset.fromArray(a.offset),a.repeat!==void 0&&h.repeat.fromArray(a.repeat),a.center!==void 0&&h.center.fromArray(a.center),a.rotation!==void 0&&(h.rotation=a.rotation),a.wrap!==void 0&&(h.wrapS=n(a.wrap[0],_m),h.wrapT=n(a.wrap[1],_m)),a.format!==void 0&&(h.format=a.format),a.internalFormat!==void 0&&(h.internalFormat=a.internalFormat),a.type!==void 0&&(h.type=a.type),a.colorSpace!==void 0&&(h.colorSpace=a.colorSpace),a.minFilter!==void 0&&(h.minFilter=n(a.minFilter,ym)),a.magFilter!==void 0&&(h.magFilter=n(a.magFilter,ym)),a.anisotropy!==void 0&&(h.anisotropy=a.anisotropy),a.flipY!==void 0&&(h.flipY=a.flipY),a.generateMipmaps!==void 0&&(h.generateMipmaps=a.generateMipmaps),a.premultiplyAlpha!==void 0&&(h.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(h.unpackAlignment=a.unpackAlignment),a.compareFunction!==void 0&&(h.compareFunction=a.compareFunction),a.userData!==void 0&&(h.userData=a.userData),i[a.uuid]=h}return i}parseObject(e,t,n,i,r){let o;function a(d){return t[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",d),t[d]}function l(d){if(d!==void 0){if(Array.isArray(d)){const f=[];for(let p=0,v=d.length;p<v;p++){const g=d[p];n[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",g),f.push(n[g])}return f}return n[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",d),n[d]}}function c(d){return i[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",d),i[d]}let h,u;switch(e.type){case"Scene":o=new Fh,e.background!==void 0&&(Number.isInteger(e.background)?o.background=new Ge(e.background):o.background=c(e.background)),e.environment!==void 0&&(o.environment=c(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?o.fog=new Oh(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(o.fog=new Nh(e.fog.color,e.fog.density)),e.fog.name!==""&&(o.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(o.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(o.backgroundIntensity=e.backgroundIntensity),e.backgroundRotation!==void 0&&o.backgroundRotation.fromArray(e.backgroundRotation),e.environmentIntensity!==void 0&&(o.environmentIntensity=e.environmentIntensity),e.environmentRotation!==void 0&&o.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":o=new bn(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(o.focus=e.focus),e.zoom!==void 0&&(o.zoom=e.zoom),e.filmGauge!==void 0&&(o.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(o.filmOffset=e.filmOffset),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new ls(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(o.zoom=e.zoom),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new Wf(e.color,e.intensity);break;case"DirectionalLight":o=new Hf(e.color,e.intensity),o.target=e.target||"";break;case"PointLight":o=new Vf(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new zv(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new Gf(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay),o.target=e.target||"";break;case"HemisphereLight":o=new Bv(e.color,e.groundColor,e.intensity);break;case"LightProbe":o=new Vv().fromJSON(e);break;case"SkinnedMesh":h=a(e.geometry),u=l(e.material),o=new wf(h,u),e.bindMode!==void 0&&(o.bindMode=e.bindMode),e.bindMatrix!==void 0&&o.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(o.skeleton=e.skeleton);break;case"Mesh":h=a(e.geometry),u=l(e.material),o=new ke(h,u);break;case"InstancedMesh":h=a(e.geometry),u=l(e.material);const d=e.count,f=e.instanceMatrix,p=e.instanceColor;o=new hv(h,u,d),o.instanceMatrix=new to(new Float32Array(f.array),16),p!==void 0&&(o.instanceColor=new to(new Float32Array(p.array),p.itemSize));break;case"BatchedMesh":h=a(e.geometry),u=l(e.material),o=new uv(e.maxInstanceCount,e.maxVertexCount,e.maxIndexCount,u),o.geometry=h,o.perObjectFrustumCulled=e.perObjectFrustumCulled,o.sortObjects=e.sortObjects,o._drawRanges=e.drawRanges,o._reservedRanges=e.reservedRanges,o._visibility=e.visibility,o._active=e.active,o._bounds=e.bounds.map(v=>{const g=new Mn;g.min.fromArray(v.boxMin),g.max.fromArray(v.boxMax);const m=new An;return m.radius=v.sphereRadius,m.center.fromArray(v.sphereCenter),{boxInitialized:v.boxInitialized,box:g,sphereInitialized:v.sphereInitialized,sphere:m}}),o._maxInstanceCount=e.maxInstanceCount,o._maxVertexCount=e.maxVertexCount,o._maxIndexCount=e.maxIndexCount,o._geometryInitialized=e.geometryInitialized,o._geometryCount=e.geometryCount,o._matricesTexture=c(e.matricesTexture.uuid),e.colorsTexture!==void 0&&(o._colorsTexture=c(e.colorsTexture.uuid));break;case"LOD":o=new cv;break;case"Line":o=new Xn(a(e.geometry),l(e.material));break;case"LineLoop":o=new dv(a(e.geometry),l(e.material));break;case"LineSegments":o=new ir(a(e.geometry),l(e.material));break;case"PointCloud":case"Points":o=new fv(a(e.geometry),l(e.material));break;case"Sprite":o=new ul(l(e.material));break;case"Group":o=new Wi;break;case"Bone":o=new Bh;break;default:o=new Ot}if(o.uuid=e.uuid,e.name!==void 0&&(o.name=e.name),e.matrix!==void 0?(o.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(e.position!==void 0&&o.position.fromArray(e.position),e.rotation!==void 0&&o.rotation.fromArray(e.rotation),e.quaternion!==void 0&&o.quaternion.fromArray(e.quaternion),e.scale!==void 0&&o.scale.fromArray(e.scale)),e.up!==void 0&&o.up.fromArray(e.up),e.castShadow!==void 0&&(o.castShadow=e.castShadow),e.receiveShadow!==void 0&&(o.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.intensity!==void 0&&(o.shadow.intensity=e.shadow.intensity),e.shadow.bias!==void 0&&(o.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(o.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(o.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(o.visible=e.visible),e.frustumCulled!==void 0&&(o.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(o.renderOrder=e.renderOrder),e.userData!==void 0&&(o.userData=e.userData),e.layers!==void 0&&(o.layers.mask=e.layers),e.children!==void 0){const d=e.children;for(let f=0;f<d.length;f++)o.add(this.parseObject(d[f],t,n,i,r))}if(e.animations!==void 0){const d=e.animations;for(let f=0;f<d.length;f++){const p=d[f];o.animations.push(r[p])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(o.autoUpdate=e.autoUpdate);const d=e.levels;for(let f=0;f<d.length;f++){const p=d[f],v=o.getObjectByProperty("uuid",p.object);v!==void 0&&o.addLevel(v,p.distance,p.hysteresis)}}return o}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}bindLightTargets(e){e.traverse(function(t){if(t.isDirectionalLight||t.isSpotLight){const n=t.target,i=e.getObjectByProperty("uuid",n);i!==void 0?t.target=i:t.target=new Ot}})}}const r1={UVMapping:Mh,CubeReflectionMapping:zr,CubeRefractionMapping:is,EquirectangularReflectionMapping:Fa,EquirectangularRefractionMapping:ka,CubeUVReflectionMapping:Xo},_m={RepeatWrapping:$i,ClampToEdgeWrapping:Si,MirroredRepeatWrapping:Ba},ym={NearestFilter:Yn,NearestMipmapNearestFilter:lf,NearestMipmapLinearFilter:Oo,LinearFilter:Sn,LinearMipmapNearestFilter:Ea,LinearMipmapLinearFilter:er};class s1 extends qn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=Nr.get(e);if(o!==void 0){if(r.manager.itemStart(e),o.then){o.then(c=>{t&&t(c),r.manager.itemEnd(e)}).catch(c=>{i&&i(c)});return}return setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o}const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader;const l=fetch(e,a).then(function(c){return c.blob()}).then(function(c){return createImageBitmap(c,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(c){return Nr.add(e,c),t&&t(c),r.manager.itemEnd(e),c}).catch(function(c){i&&i(c),Nr.remove(e),r.manager.itemError(e),r.manager.itemEnd(e)});Nr.add(e,l),r.manager.itemStart(e)}}let ec;class Xf{static getContext(){return ec===void 0&&(ec=new(window.AudioContext||window.webkitAudioContext)),ec}static setContext(e){ec=e}}class o1 extends qn{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new nr(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(l){try{const c=l.slice(0);Xf.getContext().decodeAudioData(c,function(u){t(u)}).catch(a)}catch(c){a(c)}},n,i);function a(l){i?i(l):console.error(l),r.manager.itemError(e)}}}const xm=new st,bm=new st,bs=new st;class a1{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new bn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new bn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,bs.copy(e.projectionMatrix);const i=t.eyeSep/2,r=i*t.near/t.focus,o=t.near*Math.tan(qs*t.fov*.5)/t.zoom;let a,l;bm.elements[12]=-i,xm.elements[12]=i,a=-o*t.aspect+r,l=o*t.aspect+r,bs.elements[0]=2*t.near/(l-a),bs.elements[8]=(l+a)/(l-a),this.cameraL.projectionMatrix.copy(bs),a=-o*t.aspect-r,l=o*t.aspect-r,bs.elements[0]=2*t.near/(l-a),bs.elements[8]=(l+a)/(l-a),this.cameraR.projectionMatrix.copy(bs)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(bm),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(xm)}}class Wv extends bn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e,this.index=0}}class Yf{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Sm(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=Sm();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function Sm(){return performance.now()}const Ss=new L,Mm=new Ht,l1=new L,Ms=new L;class c1 extends Ot{constructor(){super(),this.type="AudioListener",this.context=Xf.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Yf}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Ss,Mm,l1),Ms.set(0,0,-1).applyQuaternion(Mm),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Ss.x,i),t.positionY.linearRampToValueAtTime(Ss.y,i),t.positionZ.linearRampToValueAtTime(Ss.z,i),t.forwardX.linearRampToValueAtTime(Ms.x,i),t.forwardY.linearRampToValueAtTime(Ms.y,i),t.forwardZ.linearRampToValueAtTime(Ms.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(Ss.x,Ss.y,Ss.z),t.setOrientation(Ms.x,Ms.y,Ms.z,n.x,n.y,n.z)}}class Xv extends Ot{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(e=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+e),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}copy(e,t){return super.copy(e,t),e.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=e.autoplay,this.buffer=e.buffer,this.detune=e.detune,this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this.offset=e.offset,this.duration=e.duration,this.playbackRate=e.playbackRate,this.hasPlaybackControl=e.hasPlaybackControl,this.sourceType=e.sourceType,this.filters=e.filters.slice(),this)}clone(e){return new this.constructor(this.listener).copy(this,e)}}const ws=new L,wm=new Ht,h1=new L,Es=new L;class u1 extends Xv{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(ws,wm,h1),Es.set(0,0,1).applyQuaternion(wm);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(ws.x,n),t.positionY.linearRampToValueAtTime(ws.y,n),t.positionZ.linearRampToValueAtTime(ws.z,n),t.orientationX.linearRampToValueAtTime(Es.x,n),t.orientationY.linearRampToValueAtTime(Es.y,n),t.orientationZ.linearRampToValueAtTime(Es.z,n)}else t.setPosition(ws.x,ws.y,ws.z),t.setOrientation(Es.x,Es.y,Es.z)}}class d1{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class Yv{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,r,o;switch(t){case"quaternion":i=this._slerp,r=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let o=this.cumulativeWeight;if(o===0){for(let a=0;a!==i;++a)n[r+a]=n[a];o=t}else{o+=t;const a=t/o;this._mixBufferRegion(n,r,0,a,i)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const l=t*this._origIndex;this._mixBufferRegion(n,i,l,1-r,t)}o>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let l=t,c=t+t;l!==c;++l)if(n[l]!==n[l+t]){a.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let r=n,o=i;r!==o;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,r){if(i>=.5)for(let o=0;o!==r;++o)e[t+o]=e[n+o]}_slerp(e,t,n,i){Ht.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,r){const o=this._workIndex*r;Ht.multiplyQuaternionsFlat(e,o,e,t,e,n),Ht.slerpFlat(e,t,e,t,e,o,i)}_lerp(e,t,n,i,r){const o=1-i;for(let a=0;a!==r;++a){const l=t+a;e[l]=e[l]*o+e[n+a]*i}}_lerpAdditive(e,t,n,i,r){for(let o=0;o!==r;++o){const a=t+o;e[a]=e[a]+e[n+o]*i}}}const qf="\\[\\]\\.:\\/",f1=new RegExp("["+qf+"]","g"),jf="[^"+qf+"]",p1="[^"+qf.replace("\\.","")+"]",m1=/((?:WC+[\/:])*)/.source.replace("WC",jf),g1=/(WCOD+)?/.source.replace("WCOD",p1),v1=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",jf),_1=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",jf),y1=new RegExp("^"+m1+g1+v1+_1+"$"),x1=["material","materials","bones","map"];class b1{constructor(e,t,n){const i=n||Gt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class Gt{constructor(e,t,n){this.path=t,this.parsedPath=n||Gt.parseTrackName(t),this.node=Gt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Gt.Composite(e,t,n):new Gt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(f1,"")}static parseTrackName(e){const t=y1.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);x1.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(r){for(let o=0;o<r.length;o++){const a=r[o];if(a.name===t||a.uuid===t)return a;const l=n(a.children);if(l)return l}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=Gt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let c=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let h=0;h<e.length;h++)if(e[h].name===c){c=h;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const o=e[i];if(o===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+i+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.isMaterial===!0?a=this.Versioning.NeedsUpdate:e.isObject3D===!0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}l=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else o.fromArray!==void 0&&o.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(l=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Gt.Composite=b1;Gt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Gt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Gt.prototype.GetterByBindingType=[Gt.prototype._getValue_direct,Gt.prototype._getValue_array,Gt.prototype._getValue_arrayElement,Gt.prototype._getValue_toArray];Gt.prototype.SetterByBindingTypeAndVersioning=[[Gt.prototype._setValue_direct,Gt.prototype._setValue_direct_setNeedsUpdate,Gt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Gt.prototype._setValue_array,Gt.prototype._setValue_array_setNeedsUpdate,Gt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Gt.prototype._setValue_arrayElement,Gt.prototype._setValue_arrayElement_setNeedsUpdate,Gt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Gt.prototype._setValue_fromArray,Gt.prototype._setValue_fromArray_setNeedsUpdate,Gt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class S1{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Fi(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,o=r.length;let a,l=e.length,c=this.nCachedObjects_;for(let h=0,u=arguments.length;h!==u;++h){const d=arguments[h],f=d.uuid;let p=t[f];if(p===void 0){p=l++,t[f]=p,e.push(d);for(let v=0,g=o;v!==g;++v)r[v].push(new Gt(d,n[v],i[v]))}else if(p<c){a=e[p];const v=--c,g=e[v];t[g.uuid]=p,e[p]=g,t[f]=v,e[v]=d;for(let m=0,x=o;m!==x;++m){const y=r[m],_=y[v];let E=y[p];y[p]=_,E===void 0&&(E=new Gt(d,n[m],i[m])),y[v]=E}}else e[p]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let o=0,a=arguments.length;o!==a;++o){const l=arguments[o],c=l.uuid,h=t[c];if(h!==void 0&&h>=r){const u=r++,d=e[u];t[d.uuid]=h,e[h]=d,t[c]=u,e[u]=l;for(let f=0,p=i;f!==p;++f){const v=n[f],g=v[u],m=v[h];v[h]=g,v[u]=m}}}this.nCachedObjects_=r}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,o=e.length;for(let a=0,l=arguments.length;a!==l;++a){const c=arguments[a],h=c.uuid,u=t[h];if(u!==void 0)if(delete t[h],u<r){const d=--r,f=e[d],p=--o,v=e[p];t[f.uuid]=u,e[u]=f,t[v.uuid]=d,e[d]=v,e.pop();for(let g=0,m=i;g!==m;++g){const x=n[g],y=x[d],_=x[p];x[u]=y,x[d]=_,x.pop()}}else{const d=--o,f=e[d];d>0&&(t[f.uuid]=u),e[u]=f,e.pop();for(let p=0,v=i;p!==v;++p){const g=n[p];g[u]=g[d],g.pop()}}}this.nCachedObjects_=r}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const r=this._bindings;if(i!==void 0)return r[i];const o=this._paths,a=this._parsedPaths,l=this._objects,c=l.length,h=this.nCachedObjects_,u=new Array(c);i=r.length,n[e]=i,o.push(e),a.push(t),r.push(u);for(let d=h,f=l.length;d!==f;++d){const p=l[d];u[d]=new Gt(p,e,t)}return u}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,r=this._parsedPaths,o=this._bindings,a=o.length-1,l=o[a],c=e[a];t[c]=n,o[n]=l,o.pop(),r[n]=r[a],r.pop(),i[n]=i[a],i.pop()}}}class qv{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const r=t.tracks,o=r.length,a=new Array(o),l={endingStart:zs,endingEnd:zs};for(let c=0;c!==o;++c){const h=r[c].createInterpolant(null);a[c]=h,h.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=W0,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,r=e._clip.duration,o=r/i,a=i/r;e.warp(1,o,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,r=i.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,c=a.sampleValues;return l[0]=r,l[1]=r+n,c[0]=e/o,c[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const l=(e-r)*n;l<0||n===0?t=0:(this._startTime=null,t=n*l)}t*=this._updateTimeScale(e);const o=this._updateTime(t),a=this._updateWeight(e);if(a>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case _f:for(let h=0,u=l.length;h!==u;++h)l[h].evaluate(o),c[h].accumulateAdditive(a);break;case Ph:default:for(let h=0,u=l.length;h!==u;++h)l[h].evaluate(o),c[h].accumulate(i,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,r=this._loopCount;const o=n===X0;if(e===0)return r===-1?i:o&&(r&1)===1?t-i:i;if(n===H0){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),i>=t||i<0){const a=Math.floor(i/t);i-=t*a,r+=Math.abs(a);const l=this.repetitions-r;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=i;if(o&&(r&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=Gs,i.endingEnd=Gs):(e?i.endingStart=this.zeroSlopeAtStart?Gs:zs:i.endingStart=Ga,t?i.endingEnd=this.zeroSlopeAtEnd?Gs:zs:i.endingEnd=Ga)}_scheduleFading(e,t,n){const i=this._mixer,r=i.time;let o=this._weightInterpolant;o===null&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=r,l[0]=t,a[1]=r+e,l[1]=n,this}}const M1=new Float32Array(1);class w1 extends br{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,o=e._propertyBindings,a=e._interpolants,l=n.uuid,c=this._bindingsByRootAndName;let h=c[l];h===void 0&&(h={},c[l]=h);for(let u=0;u!==r;++u){const d=i[u],f=d.name;let p=h[f];if(p!==void 0)++p.referenceCount,o[u]=p;else{if(p=o[u],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,l,f));continue}const v=t&&t._propertyBindings[u].binding.parsedPath;p=new Yv(Gt.create(n,f,v),d.ValueTypeName,d.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,l,f),o[u]=p}a[u].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,r=this._actionsByClip;let o=r[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=o;else{const a=o.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=i.length,i.push(e),o.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,o=this._actionsByClip,a=o[r],l=a.knownActions,c=l[l.length-1],h=e._byClipCacheIndex;c._byClipCacheIndex=h,l[h]=c,l.pop(),e._byClipCacheIndex=null;const u=a.actionByRoot,d=(e._localRoot||this._root).uuid;delete u[d],l.length===0&&delete o[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let o=i[t];o===void 0&&(o={},i[t]=o),o[n]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,o=this._bindingsByRootAndName,a=o[i],l=t[t.length-1],c=e._cacheIndex;l._cacheIndex=c,t[c]=l,t.pop(),delete a[r],Object.keys(a).length===0&&delete o[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Ff(new Float32Array(2),new Float32Array(2),1,M1),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r}clipAction(e,t,n){const i=t||this._root,r=i.uuid;let o=typeof e=="string"?ro.findByName(i,e):e;const a=o!==null?o.uuid:e,l=this._actionsByClip[a];let c=null;if(n===void 0&&(o!==null?n=o.blendMode:n=Ph),l!==void 0){const u=l.actionByRoot[r];if(u!==void 0&&u.blendMode===n)return u;c=l.knownActions[0],o===null&&(o=c._clip)}if(o===null)return null;const h=new qv(this,o,t,n);return this._bindAction(h,c),this._addInactiveAction(h,a,r),h}existingAction(e,t){const n=t||this._root,i=n.uuid,r=typeof e=="string"?ro.findByName(n,e):e,o=r?r.uuid:e,a=this._actionsByClip[o];return a!==void 0&&a.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),o=this._accuIndex^=1;for(let c=0;c!==n;++c)t[c]._update(i,e,r,o);const a=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)a[c].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const o=r.knownActions;for(let a=0,l=o.length;a!==l;++a){const c=o[a];this._deactivateAction(c);const h=c._cacheIndex,u=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,u._cacheIndex=h,t[h]=u,t.pop(),this._removeInactiveBindingsForAction(c)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const o in n){const a=n[o].actionByRoot,l=a[t];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const i=this._bindingsByRootAndName,r=i[t];if(r!==void 0)for(const o in r){const a=r[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class E1 extends Ih{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isRenderTarget3D=!0,this.depth=n,this.texture=new Dh(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class T1 extends Ih{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isRenderTargetArray=!0,this.depth=n,this.texture=new ll(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Zf{constructor(e){this.value=e}clone(){return new Zf(this.value.clone===void 0?this.value:this.value.clone())}}let A1=0;class C1 extends br{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:A1++}),this.name="",this.usage=Ha,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++){const r=Array.isArray(t[n])?t[n]:[t[n]];for(let o=0;o<r.length;o++)this.uniforms.push(r[o].clone())}return this}clone(){return new this.constructor().copy(this)}}class yh extends kh{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class R1{constructor(e,t,n,i,r){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const Em=new st;class iu{constructor(e,t,n=0,i=1/0){this.ray=new ss(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new Lh,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return Em.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(Em),this}intersectObject(e,t=!0,n=[]){return Gd(e,this,n,t),n.sort(Tm),n}intersectObjects(e,t=!0,n=[]){for(let i=0,r=e.length;i<r;i++)Gd(e[i],this,n,t);return n.sort(Tm),n}}function Tm(s,e){return s.distance-e.distance}function Gd(s,e,t,n){let i=!0;if(s.layers.test(e.layers)&&s.raycast(e,t)===!1&&(i=!1),i===!0&&n===!0){const r=s.children;for(let o=0,a=r.length;o<a;o++)Gd(r[o],e,t,!0)}}class Qa{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Tt(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Tt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class P1{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}class Jf{constructor(e,t,n,i){Jf.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,t,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let n=0;n<4;n++)this.elements[n]=e[n+t];return this}set(e,t,n,i){const r=this.elements;return r[0]=e,r[2]=t,r[1]=n,r[3]=i,this}}const Am=new xe;class I1{constructor(e=new xe(1/0,1/0),t=new xe(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Am.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Am).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Cm=new L,tc=new L;class jv{constructor(e=new L,t=new L){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Cm.subVectors(e,this.start),tc.subVectors(this.end,this.start);const n=tc.dot(tc);let r=tc.dot(Cm)/n;return t&&(r=Tt(r,0,1)),r}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const Rm=new L;class D1 extends Ot{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new bt,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,l=32;o<l;o++,a++){const c=o/l*Math.PI*2,h=a/l*Math.PI*2;i.push(Math.cos(c),Math.sin(c),1,Math.cos(h),Math.sin(h),1)}n.setAttribute("position",new Ke(i,3));const r=new Fn({fog:!1,toneMapped:!1});this.cone=new ir(n,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),Rm.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Rm),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Kr=new L,nc=new st,$u=new st;class L1 extends ir{constructor(e){const t=Zv(e),n=new bt,i=[],r=[],o=new Ge(0,0,1),a=new Ge(0,1,0);for(let c=0;c<t.length;c++){const h=t[c];h.parent&&h.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(o.r,o.g,o.b),r.push(a.r,a.g,a.b))}n.setAttribute("position",new Ke(i,3)),n.setAttribute("color",new Ke(r,3));const l=new Fn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");$u.copy(this.root.matrixWorld).invert();for(let r=0,o=0;r<t.length;r++){const a=t[r];a.parent&&a.parent.isBone&&(nc.multiplyMatrices($u,a.matrixWorld),Kr.setFromMatrixPosition(nc),i.setXYZ(o,Kr.x,Kr.y,Kr.z),nc.multiplyMatrices($u,a.parent.matrixWorld),Kr.setFromMatrixPosition(nc),i.setXYZ(o+1,Kr.x,Kr.y,Kr.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function Zv(s){const e=[];s.isBone===!0&&e.push(s);for(let t=0;t<s.children.length;t++)e.push.apply(e,Zv(s.children[t]));return e}class U1 extends ke{constructor(e,t,n){const i=new ao(t,4,2),r=new On({wireframe:!0,fog:!1,toneMapped:!1});super(i,r),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const N1=new L,Pm=new Ge,Im=new Ge;class O1 extends Ot{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new Ur(t);i.rotateY(Math.PI*.5),this.material=new On({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const r=i.getAttribute("position"),o=new Float32Array(r.count*3);i.setAttribute("color",new Ct(o,3)),this.add(new ke(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");Pm.copy(this.light.color),Im.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const r=n<i/2?Pm:Im;t.setXYZ(n,r.r,r.g,r.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(N1.setFromMatrixPosition(this.light.matrixWorld).negate())}}class F1 extends ir{constructor(e=10,t=10,n=4473924,i=8947848){n=new Ge(n),i=new Ge(i);const r=t/2,o=e/t,a=e/2,l=[],c=[];for(let d=0,f=0,p=-a;d<=t;d++,p+=o){l.push(-a,0,p,a,0,p),l.push(p,0,-a,p,0,a);const v=d===r?n:i;v.toArray(c,f),f+=3,v.toArray(c,f),f+=3,v.toArray(c,f),f+=3,v.toArray(c,f),f+=3}const h=new bt;h.setAttribute("position",new Ke(l,3)),h.setAttribute("color",new Ke(c,3));const u=new Fn({vertexColors:!0,toneMapped:!1});super(h,u),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class k1 extends ir{constructor(e=10,t=16,n=8,i=64,r=4473924,o=8947848){r=new Ge(r),o=new Ge(o);const a=[],l=[];if(t>1)for(let u=0;u<t;u++){const d=u/t*(Math.PI*2),f=Math.sin(d)*e,p=Math.cos(d)*e;a.push(0,0,0),a.push(f,0,p);const v=u&1?r:o;l.push(v.r,v.g,v.b),l.push(v.r,v.g,v.b)}for(let u=0;u<n;u++){const d=u&1?r:o,f=e-e/n*u;for(let p=0;p<i;p++){let v=p/i*(Math.PI*2),g=Math.sin(v)*f,m=Math.cos(v)*f;a.push(g,0,m),l.push(d.r,d.g,d.b),v=(p+1)/i*(Math.PI*2),g=Math.sin(v)*f,m=Math.cos(v)*f,a.push(g,0,m),l.push(d.r,d.g,d.b)}}const c=new bt;c.setAttribute("position",new Ke(a,3)),c.setAttribute("color",new Ke(l,3));const h=new Fn({vertexColors:!0,toneMapped:!1});super(c,h),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const Dm=new L,ic=new L,Lm=new L;class B1 extends Ot{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new bt;i.setAttribute("position",new Ke([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new Fn({fog:!1,toneMapped:!1});this.lightPlane=new Xn(i,r),this.add(this.lightPlane),i=new bt,i.setAttribute("position",new Ke([0,0,0,0,0,1],3)),this.targetLine=new Xn(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),Dm.setFromMatrixPosition(this.light.matrixWorld),ic.setFromMatrixPosition(this.light.target.matrixWorld),Lm.subVectors(ic,Dm),this.lightPlane.lookAt(ic),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(ic),this.targetLine.scale.z=Lm.length()}}const rc=new L,gn=new Uh;class z1 extends ir{constructor(e){const t=new bt,n=new Fn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],o={};a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4");function a(p,v){l(p),l(v)}function l(p){i.push(0,0,0),r.push(0,0,0),o[p]===void 0&&(o[p]=[]),o[p].push(i.length/3-1)}t.setAttribute("position",new Ke(i,3)),t.setAttribute("color",new Ke(r,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update();const c=new Ge(16755200),h=new Ge(16711680),u=new Ge(43775),d=new Ge(16777215),f=new Ge(3355443);this.setColors(c,h,u,d,f)}setColors(e,t,n,i,r){const a=this.geometry.getAttribute("color");a.setXYZ(0,e.r,e.g,e.b),a.setXYZ(1,e.r,e.g,e.b),a.setXYZ(2,e.r,e.g,e.b),a.setXYZ(3,e.r,e.g,e.b),a.setXYZ(4,e.r,e.g,e.b),a.setXYZ(5,e.r,e.g,e.b),a.setXYZ(6,e.r,e.g,e.b),a.setXYZ(7,e.r,e.g,e.b),a.setXYZ(8,e.r,e.g,e.b),a.setXYZ(9,e.r,e.g,e.b),a.setXYZ(10,e.r,e.g,e.b),a.setXYZ(11,e.r,e.g,e.b),a.setXYZ(12,e.r,e.g,e.b),a.setXYZ(13,e.r,e.g,e.b),a.setXYZ(14,e.r,e.g,e.b),a.setXYZ(15,e.r,e.g,e.b),a.setXYZ(16,e.r,e.g,e.b),a.setXYZ(17,e.r,e.g,e.b),a.setXYZ(18,e.r,e.g,e.b),a.setXYZ(19,e.r,e.g,e.b),a.setXYZ(20,e.r,e.g,e.b),a.setXYZ(21,e.r,e.g,e.b),a.setXYZ(22,e.r,e.g,e.b),a.setXYZ(23,e.r,e.g,e.b),a.setXYZ(24,t.r,t.g,t.b),a.setXYZ(25,t.r,t.g,t.b),a.setXYZ(26,t.r,t.g,t.b),a.setXYZ(27,t.r,t.g,t.b),a.setXYZ(28,t.r,t.g,t.b),a.setXYZ(29,t.r,t.g,t.b),a.setXYZ(30,t.r,t.g,t.b),a.setXYZ(31,t.r,t.g,t.b),a.setXYZ(32,n.r,n.g,n.b),a.setXYZ(33,n.r,n.g,n.b),a.setXYZ(34,n.r,n.g,n.b),a.setXYZ(35,n.r,n.g,n.b),a.setXYZ(36,n.r,n.g,n.b),a.setXYZ(37,n.r,n.g,n.b),a.setXYZ(38,i.r,i.g,i.b),a.setXYZ(39,i.r,i.g,i.b),a.setXYZ(40,r.r,r.g,r.b),a.setXYZ(41,r.r,r.g,r.b),a.setXYZ(42,r.r,r.g,r.b),a.setXYZ(43,r.r,r.g,r.b),a.setXYZ(44,r.r,r.g,r.b),a.setXYZ(45,r.r,r.g,r.b),a.setXYZ(46,r.r,r.g,r.b),a.setXYZ(47,r.r,r.g,r.b),a.setXYZ(48,r.r,r.g,r.b),a.setXYZ(49,r.r,r.g,r.b),a.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;gn.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);const r=this.camera.coordinateSystem===tr?-1:0;xn("c",t,e,gn,0,0,r),xn("t",t,e,gn,0,0,1),xn("n1",t,e,gn,-1,-1,r),xn("n2",t,e,gn,n,-1,r),xn("n3",t,e,gn,-1,i,r),xn("n4",t,e,gn,n,i,r),xn("f1",t,e,gn,-1,-1,1),xn("f2",t,e,gn,n,-1,1),xn("f3",t,e,gn,-1,i,1),xn("f4",t,e,gn,n,i,1),xn("u1",t,e,gn,n*.7,i*1.1,r),xn("u2",t,e,gn,-1*.7,i*1.1,r),xn("u3",t,e,gn,0,i*2,r),xn("cf1",t,e,gn,-1,0,1),xn("cf2",t,e,gn,n,0,1),xn("cf3",t,e,gn,0,-1,1),xn("cf4",t,e,gn,0,i,1),xn("cn1",t,e,gn,-1,0,r),xn("cn2",t,e,gn,n,0,r),xn("cn3",t,e,gn,0,-1,r),xn("cn4",t,e,gn,0,i,r),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function xn(s,e,t,n,i,r,o){rc.set(i,r,o).unproject(n);const a=e[s];if(a!==void 0){const l=t.getAttribute("position");for(let c=0,h=a.length;c<h;c++)l.setXYZ(a[c],rc.x,rc.y,rc.z)}}const sc=new Mn;class G1 extends ir{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),r=new bt;r.setIndex(new Ct(n,1)),r.setAttribute("position",new Ct(i,3)),super(r,new Fn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&sc.setFromObject(this.object),sc.isEmpty())return;const t=sc.min,n=sc.max,i=this.geometry.attributes.position,r=i.array;r[0]=n.x,r[1]=n.y,r[2]=n.z,r[3]=t.x,r[4]=n.y,r[5]=n.z,r[6]=t.x,r[7]=t.y,r[8]=n.z,r[9]=n.x,r[10]=t.y,r[11]=n.z,r[12]=n.x,r[13]=n.y,r[14]=t.z,r[15]=t.x,r[16]=n.y,r[17]=t.z,r[18]=t.x,r[19]=t.y,r[20]=t.z,r[21]=n.x,r[22]=t.y,r[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class V1 extends ir{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],r=new bt;r.setIndex(new Ct(n,1)),r.setAttribute("position",new Ke(i,3)),super(r,new Fn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class H1 extends Xn{constructor(e,t=1,n=16776960){const i=n,r=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],o=new bt;o.setAttribute("position",new Ke(r,3)),o.computeBoundingSphere(),super(o,new Fn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const a=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],l=new bt;l.setAttribute("position",new Ke(a,3)),l.computeBoundingSphere(),this.add(new ke(l,new On({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const Um=new L;let oc,ed;class W1 extends Ot{constructor(e=new L(0,0,1),t=new L(0,0,0),n=1,i=16776960,r=n*.2,o=r*.2){super(),this.type="ArrowHelper",oc===void 0&&(oc=new bt,oc.setAttribute("position",new Ke([0,0,0,0,1,0],3)),ed=new Tn(0,.5,1,5,1),ed.translate(0,-.5,0)),this.position.copy(t),this.line=new Xn(oc,new Fn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new ke(ed,new On({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,r,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{Um.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(Um,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class X1 extends ir{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new bt;i.setAttribute("position",new Ke(t,3)),i.setAttribute("color",new Ke(n,3));const r=new Fn({vertexColors:!0,toneMapped:!1});super(i,r),this.type="AxesHelper"}setColors(e,t,n){const i=new Ge,r=this.geometry.attributes.color.array;return i.set(e),i.toArray(r,0),i.toArray(r,3),i.set(t),i.toArray(r,6),i.toArray(r,9),i.set(n),i.toArray(r,12),i.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Y1{constructor(){this.type="ShapePath",this.color=new Ge,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Ya,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,r,o){return this.currentPath.bezierCurveTo(e,t,n,i,r,o),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(m){const x=[];for(let y=0,_=m.length;y<_;y++){const E=m[y],w=new js;w.curves=E.curves,x.push(w)}return x}function n(m,x){const y=x.length;let _=!1;for(let E=y-1,w=0;w<y;E=w++){let M=x[E],T=x[w],S=T.x-M.x,b=T.y-M.y;if(Math.abs(b)>Number.EPSILON){if(b<0&&(M=x[w],S=-S,T=x[E],b=-b),m.y<M.y||m.y>T.y)continue;if(m.y===M.y){if(m.x===M.x)return!0}else{const D=b*(m.x-M.x)-S*(m.y-M.y);if(D===0)return!0;if(D<0)continue;_=!_}}else{if(m.y!==M.y)continue;if(T.x<=m.x&&m.x<=M.x||M.x<=m.x&&m.x<=T.x)return!0}}return _}const i=gr.isClockWise,r=this.subPaths;if(r.length===0)return[];let o,a,l;const c=[];if(r.length===1)return a=r[0],l=new js,l.curves=a.curves,c.push(l),c;let h=!i(r[0].getPoints());h=e?!h:h;const u=[],d=[];let f=[],p=0,v;d[p]=void 0,f[p]=[];for(let m=0,x=r.length;m<x;m++)a=r[m],v=a.getPoints(),o=i(v),o=e?!o:o,o?(!h&&d[p]&&p++,d[p]={s:new js,p:v},d[p].s.curves=a.curves,h&&p++,f[p]=[]):f[p].push({h:a,p:v[0]});if(!d[0])return t(r);if(d.length>1){let m=!1,x=0;for(let y=0,_=d.length;y<_;y++)u[y]=[];for(let y=0,_=d.length;y<_;y++){const E=f[y];for(let w=0;w<E.length;w++){const M=E[w];let T=!0;for(let S=0;S<d.length;S++)n(M.p,d[S].p)&&(y!==S&&x++,T?(T=!1,u[S].push(M)):m=!0);T&&u[y].push(M)}}x>0&&m===!1&&(f=u)}let g;for(let m=0,x=d.length;m<x;m++){l=d[m].s,c.push(l),g=f[m];for(let y=0,_=g.length;y<_;y++)l.holes.push(g[y].h)}return c}}class ru extends br{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(){}disconnect(){}dispose(){}update(){}}function q1(s,e){const t=s.image&&s.image.width?s.image.width/s.image.height:1;return t>e?(s.repeat.x=1,s.repeat.y=t/e,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2):(s.repeat.x=e/t,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0),s}function j1(s,e){const t=s.image&&s.image.width?s.image.width/s.image.height:1;return t>e?(s.repeat.x=e/t,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0):(s.repeat.x=1,s.repeat.y=t/e,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2),s}function Z1(s){return s.repeat.x=1,s.repeat.y=1,s.offset.x=0,s.offset.y=0,s}function Vd(s,e,t,n){const i=J1(n);switch(t){case df:return s*e;case pf:return s*e;case mf:return s*e*2;case Ah:return s*e/i.components*i.byteLength;case al:return s*e/i.components*i.byteLength;case gf:return s*e*2/i.components*i.byteLength;case Ch:return s*e*2/i.components*i.byteLength;case ff:return s*e*3/i.components*i.byteLength;case ui:return s*e*4/i.components*i.byteLength;case Rh:return s*e*4/i.components*i.byteLength;case Ta:case Aa:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*8;case Ca:case Ra:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case Vc:case Wc:return Math.max(s,16)*Math.max(e,8)/4;case Gc:case Hc:return Math.max(s,8)*Math.max(e,8)/2;case Xc:case Yc:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*8;case qc:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case jc:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case Zc:return Math.floor((s+4)/5)*Math.floor((e+3)/4)*16;case Jc:return Math.floor((s+4)/5)*Math.floor((e+4)/5)*16;case Kc:return Math.floor((s+5)/6)*Math.floor((e+4)/5)*16;case Qc:return Math.floor((s+5)/6)*Math.floor((e+5)/6)*16;case $c:return Math.floor((s+7)/8)*Math.floor((e+4)/5)*16;case eh:return Math.floor((s+7)/8)*Math.floor((e+5)/6)*16;case th:return Math.floor((s+7)/8)*Math.floor((e+7)/8)*16;case nh:return Math.floor((s+9)/10)*Math.floor((e+4)/5)*16;case ih:return Math.floor((s+9)/10)*Math.floor((e+5)/6)*16;case rh:return Math.floor((s+9)/10)*Math.floor((e+7)/8)*16;case sh:return Math.floor((s+9)/10)*Math.floor((e+9)/10)*16;case oh:return Math.floor((s+11)/12)*Math.floor((e+9)/10)*16;case ah:return Math.floor((s+11)/12)*Math.floor((e+11)/12)*16;case Pa:case lh:case ch:return Math.ceil(s/4)*Math.ceil(e/4)*16;case vf:case hh:return Math.ceil(s/4)*Math.ceil(e/4)*8;case uh:case dh:return Math.ceil(s/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function J1(s){switch(s){case _r:case cf:return{byteLength:1,components:1};case Vo:case hf:case Yo:return{byteLength:2,components:1};case Eh:case Th:return{byteLength:2,components:4};case Gr:case wh:case Mi:return{byteLength:4,components:1};case uf:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${s}.`)}const K1={contain:q1,cover:j1,fill:Z1,getByteLength:Vd};typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:sl}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=sl);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function Jv(){let s=null,e=!1,t=null,n=null;function i(r,o){t(r,o),n=s.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=s.requestAnimationFrame(i),e=!0)},stop:function(){s.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){s=r}}}function Q1(s){const e=new WeakMap;function t(a,l){const c=a.array,h=a.usage,u=c.byteLength,d=s.createBuffer();s.bindBuffer(l,d),s.bufferData(l,c,h),a.onUploadCallback();let f;if(c instanceof Float32Array)f=s.FLOAT;else if(c instanceof Uint16Array)a.isFloat16BufferAttribute?f=s.HALF_FLOAT:f=s.UNSIGNED_SHORT;else if(c instanceof Int16Array)f=s.SHORT;else if(c instanceof Uint32Array)f=s.UNSIGNED_INT;else if(c instanceof Int32Array)f=s.INT;else if(c instanceof Int8Array)f=s.BYTE;else if(c instanceof Uint8Array)f=s.UNSIGNED_BYTE;else if(c instanceof Uint8ClampedArray)f=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+c);return{buffer:d,type:f,bytesPerElement:c.BYTES_PER_ELEMENT,version:a.version,size:u}}function n(a,l,c){const h=l.array,u=l.updateRanges;if(s.bindBuffer(c,a),u.length===0)s.bufferSubData(c,0,h);else{u.sort((f,p)=>f.start-p.start);let d=0;for(let f=1;f<u.length;f++){const p=u[d],v=u[f];v.start<=p.start+p.count+1?p.count=Math.max(p.count,v.start+v.count-p.start):(++d,u[d]=v)}u.length=d+1;for(let f=0,p=u.length;f<p;f++){const v=u[f];s.bufferSubData(c,v.start*h.BYTES_PER_ELEMENT,h,v.start,v.count)}l.clearUpdateRanges()}l.onUploadCallback()}function i(a){return a.isInterleavedBufferAttribute&&(a=a.data),e.get(a)}function r(a){a.isInterleavedBufferAttribute&&(a=a.data);const l=e.get(a);l&&(s.deleteBuffer(l.buffer),e.delete(a))}function o(a,l){if(a.isInterleavedBufferAttribute&&(a=a.data),a.isGLBufferAttribute){const h=e.get(a);(!h||h.version<a.version)&&e.set(a,{buffer:a.buffer,type:a.type,bytesPerElement:a.elementSize,version:a.version});return}const c=e.get(a);if(c===void 0)e.set(a,t(a,l));else if(c.version<a.version){if(c.size!==a.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(c.buffer,a,l),c.version=a.version}}return{get:i,remove:r,update:o}}var $1=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,eS=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,tS=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,nS=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,iS=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,rS=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,sS=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,oS=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,aS=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,lS=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,cS=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,hS=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,uS=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,dS=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,fS=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,pS=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,mS=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,gS=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,vS=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,_S=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,yS=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,xS=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,bS=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,SS=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,MS=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,wS=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,ES=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,TS=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,AS=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,CS=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,RS="gl_FragColor = linearToOutputTexel( gl_FragColor );",PS=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,IS=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,DS=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,LS=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,US=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,NS=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,OS=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,FS=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,kS=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,BS=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,zS=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,GS=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,VS=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,HS=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,WS=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,XS=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,YS=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,qS=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,jS=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,ZS=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,JS=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,KS=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,QS=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,$S=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,eM=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,tM=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,nM=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,iM=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,rM=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,sM=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,oM=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,aM=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,lM=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,cM=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,hM=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,uM=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,dM=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,fM=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,pM=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,mM=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,gM=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,vM=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,_M=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,yM=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,xM=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,bM=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,SM=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,MM=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,wM=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,EM=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,TM=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,AM=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,CM=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,RM=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,PM=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,IM=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,DM=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,LM=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,UM=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,NM=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,OM=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,FM=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,kM=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,BM=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,zM=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,GM=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,VM=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,HM=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,WM=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,XM=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,YM=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,qM=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,jM=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,ZM=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,JM=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,KM=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const QM=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,$M=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,ew=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,tw=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,nw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,iw=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,rw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,sw=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,ow=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,aw=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,lw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,cw=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,hw=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,uw=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,dw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,fw=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,pw=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,mw=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,gw=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,vw=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,_w=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,yw=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,xw=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,bw=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Sw=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Mw=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,ww=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Ew=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Tw=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Aw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Cw=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Rw=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Pw=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Iw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,vt={alphahash_fragment:$1,alphahash_pars_fragment:eS,alphamap_fragment:tS,alphamap_pars_fragment:nS,alphatest_fragment:iS,alphatest_pars_fragment:rS,aomap_fragment:sS,aomap_pars_fragment:oS,batching_pars_vertex:aS,batching_vertex:lS,begin_vertex:cS,beginnormal_vertex:hS,bsdfs:uS,iridescence_fragment:dS,bumpmap_pars_fragment:fS,clipping_planes_fragment:pS,clipping_planes_pars_fragment:mS,clipping_planes_pars_vertex:gS,clipping_planes_vertex:vS,color_fragment:_S,color_pars_fragment:yS,color_pars_vertex:xS,color_vertex:bS,common:SS,cube_uv_reflection_fragment:MS,defaultnormal_vertex:wS,displacementmap_pars_vertex:ES,displacementmap_vertex:TS,emissivemap_fragment:AS,emissivemap_pars_fragment:CS,colorspace_fragment:RS,colorspace_pars_fragment:PS,envmap_fragment:IS,envmap_common_pars_fragment:DS,envmap_pars_fragment:LS,envmap_pars_vertex:US,envmap_physical_pars_fragment:XS,envmap_vertex:NS,fog_vertex:OS,fog_pars_vertex:FS,fog_fragment:kS,fog_pars_fragment:BS,gradientmap_pars_fragment:zS,lightmap_pars_fragment:GS,lights_lambert_fragment:VS,lights_lambert_pars_fragment:HS,lights_pars_begin:WS,lights_toon_fragment:YS,lights_toon_pars_fragment:qS,lights_phong_fragment:jS,lights_phong_pars_fragment:ZS,lights_physical_fragment:JS,lights_physical_pars_fragment:KS,lights_fragment_begin:QS,lights_fragment_maps:$S,lights_fragment_end:eM,logdepthbuf_fragment:tM,logdepthbuf_pars_fragment:nM,logdepthbuf_pars_vertex:iM,logdepthbuf_vertex:rM,map_fragment:sM,map_pars_fragment:oM,map_particle_fragment:aM,map_particle_pars_fragment:lM,metalnessmap_fragment:cM,metalnessmap_pars_fragment:hM,morphinstance_vertex:uM,morphcolor_vertex:dM,morphnormal_vertex:fM,morphtarget_pars_vertex:pM,morphtarget_vertex:mM,normal_fragment_begin:gM,normal_fragment_maps:vM,normal_pars_fragment:_M,normal_pars_vertex:yM,normal_vertex:xM,normalmap_pars_fragment:bM,clearcoat_normal_fragment_begin:SM,clearcoat_normal_fragment_maps:MM,clearcoat_pars_fragment:wM,iridescence_pars_fragment:EM,opaque_fragment:TM,packing:AM,premultiplied_alpha_fragment:CM,project_vertex:RM,dithering_fragment:PM,dithering_pars_fragment:IM,roughnessmap_fragment:DM,roughnessmap_pars_fragment:LM,shadowmap_pars_fragment:UM,shadowmap_pars_vertex:NM,shadowmap_vertex:OM,shadowmask_pars_fragment:FM,skinbase_vertex:kM,skinning_pars_vertex:BM,skinning_vertex:zM,skinnormal_vertex:GM,specularmap_fragment:VM,specularmap_pars_fragment:HM,tonemapping_fragment:WM,tonemapping_pars_fragment:XM,transmission_fragment:YM,transmission_pars_fragment:qM,uv_pars_fragment:jM,uv_pars_vertex:ZM,uv_vertex:JM,worldpos_vertex:KM,background_vert:QM,background_frag:$M,backgroundCube_vert:ew,backgroundCube_frag:tw,cube_vert:nw,cube_frag:iw,depth_vert:rw,depth_frag:sw,distanceRGBA_vert:ow,distanceRGBA_frag:aw,equirect_vert:lw,equirect_frag:cw,linedashed_vert:hw,linedashed_frag:uw,meshbasic_vert:dw,meshbasic_frag:fw,meshlambert_vert:pw,meshlambert_frag:mw,meshmatcap_vert:gw,meshmatcap_frag:vw,meshnormal_vert:_w,meshnormal_frag:yw,meshphong_vert:xw,meshphong_frag:bw,meshphysical_vert:Sw,meshphysical_frag:Mw,meshtoon_vert:ww,meshtoon_frag:Ew,points_vert:Tw,points_frag:Aw,shadow_vert:Cw,shadow_frag:Rw,sprite_vert:Pw,sprite_frag:Iw},je={common:{diffuse:{value:new Ge(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Et},alphaMap:{value:null},alphaMapTransform:{value:new Et},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Et}},envmap:{envMap:{value:null},envMapRotation:{value:new Et},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Et}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Et}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Et},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Et},normalScale:{value:new xe(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Et},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Et}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Et}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Et}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ge(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ge(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Et},alphaTest:{value:0},uvTransform:{value:new Et}},sprite:{diffuse:{value:new Ge(16777215)},opacity:{value:1},center:{value:new xe(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Et},alphaMap:{value:null},alphaMapTransform:{value:new Et},alphaTest:{value:0}}},ci={basic:{uniforms:li([je.common,je.specularmap,je.envmap,je.aomap,je.lightmap,je.fog]),vertexShader:vt.meshbasic_vert,fragmentShader:vt.meshbasic_frag},lambert:{uniforms:li([je.common,je.specularmap,je.envmap,je.aomap,je.lightmap,je.emissivemap,je.bumpmap,je.normalmap,je.displacementmap,je.fog,je.lights,{emissive:{value:new Ge(0)}}]),vertexShader:vt.meshlambert_vert,fragmentShader:vt.meshlambert_frag},phong:{uniforms:li([je.common,je.specularmap,je.envmap,je.aomap,je.lightmap,je.emissivemap,je.bumpmap,je.normalmap,je.displacementmap,je.fog,je.lights,{emissive:{value:new Ge(0)},specular:{value:new Ge(1118481)},shininess:{value:30}}]),vertexShader:vt.meshphong_vert,fragmentShader:vt.meshphong_frag},standard:{uniforms:li([je.common,je.envmap,je.aomap,je.lightmap,je.emissivemap,je.bumpmap,je.normalmap,je.displacementmap,je.roughnessmap,je.metalnessmap,je.fog,je.lights,{emissive:{value:new Ge(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:vt.meshphysical_vert,fragmentShader:vt.meshphysical_frag},toon:{uniforms:li([je.common,je.aomap,je.lightmap,je.emissivemap,je.bumpmap,je.normalmap,je.displacementmap,je.gradientmap,je.fog,je.lights,{emissive:{value:new Ge(0)}}]),vertexShader:vt.meshtoon_vert,fragmentShader:vt.meshtoon_frag},matcap:{uniforms:li([je.common,je.bumpmap,je.normalmap,je.displacementmap,je.fog,{matcap:{value:null}}]),vertexShader:vt.meshmatcap_vert,fragmentShader:vt.meshmatcap_frag},points:{uniforms:li([je.points,je.fog]),vertexShader:vt.points_vert,fragmentShader:vt.points_frag},dashed:{uniforms:li([je.common,je.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:vt.linedashed_vert,fragmentShader:vt.linedashed_frag},depth:{uniforms:li([je.common,je.displacementmap]),vertexShader:vt.depth_vert,fragmentShader:vt.depth_frag},normal:{uniforms:li([je.common,je.bumpmap,je.normalmap,je.displacementmap,{opacity:{value:1}}]),vertexShader:vt.meshnormal_vert,fragmentShader:vt.meshnormal_frag},sprite:{uniforms:li([je.sprite,je.fog]),vertexShader:vt.sprite_vert,fragmentShader:vt.sprite_frag},background:{uniforms:{uvTransform:{value:new Et},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:vt.background_vert,fragmentShader:vt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Et}},vertexShader:vt.backgroundCube_vert,fragmentShader:vt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:vt.cube_vert,fragmentShader:vt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:vt.equirect_vert,fragmentShader:vt.equirect_frag},distanceRGBA:{uniforms:li([je.common,je.displacementmap,{referencePosition:{value:new L},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:vt.distanceRGBA_vert,fragmentShader:vt.distanceRGBA_frag},shadow:{uniforms:li([je.lights,je.fog,{color:{value:new Ge(0)},opacity:{value:1}}]),vertexShader:vt.shadow_vert,fragmentShader:vt.shadow_frag}};ci.physical={uniforms:li([ci.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Et},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Et},clearcoatNormalScale:{value:new xe(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Et},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Et},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Et},sheen:{value:0},sheenColor:{value:new Ge(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Et},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Et},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Et},transmissionSamplerSize:{value:new xe},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Et},attenuationDistance:{value:0},attenuationColor:{value:new Ge(0)},specularColor:{value:new Ge(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Et},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Et},anisotropyVector:{value:new xe},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Et}}]),vertexShader:vt.meshphysical_vert,fragmentShader:vt.meshphysical_frag};const ac={r:0,b:0,g:0},Ts=new wi,Dw=new st;function Lw(s,e,t,n,i,r,o){const a=new Ge(0);let l=r===!0?0:1,c,h,u=null,d=0,f=null;function p(y){let _=y.isScene===!0?y.background:null;return _&&_.isTexture&&(_=(y.backgroundBlurriness>0?t:e).get(_)),_}function v(y){let _=!1;const E=p(y);E===null?m(a,l):E&&E.isColor&&(m(E,1),_=!0);const w=s.xr.getEnvironmentBlendMode();w==="additive"?n.buffers.color.setClear(0,0,0,1,o):w==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,o),(s.autoClear||_)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil))}function g(y,_){const E=p(_);E&&(E.isCubeTexture||E.mapping===Xo)?(h===void 0&&(h=new ke(new vn(1,1,1),new Ei({name:"BackgroundCubeMaterial",uniforms:Wo(ci.backgroundCube.uniforms),vertexShader:ci.backgroundCube.vertexShader,fragmentShader:ci.backgroundCube.fragmentShader,side:ni,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(w,M,T){this.matrixWorld.copyPosition(T.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(h)),Ts.copy(_.backgroundRotation),Ts.x*=-1,Ts.y*=-1,Ts.z*=-1,E.isCubeTexture&&E.isRenderTargetTexture===!1&&(Ts.y*=-1,Ts.z*=-1),h.material.uniforms.envMap.value=E,h.material.uniforms.flipEnvMap.value=E.isCubeTexture&&E.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=_.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(Dw.makeRotationFromEuler(Ts)),h.material.toneMapped=Lt.getTransfer(E.colorSpace)!==Zt,(u!==E||d!==E.version||f!==s.toneMapping)&&(h.material.needsUpdate=!0,u=E,d=E.version,f=s.toneMapping),h.layers.enableAll(),y.unshift(h,h.geometry,h.material,0,0,null)):E&&E.isTexture&&(c===void 0&&(c=new ke(new sr(2,2),new Ei({name:"BackgroundMaterial",uniforms:Wo(ci.background.uniforms),vertexShader:ci.background.vertexShader,fragmentShader:ci.background.fragmentShader,side:vr,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(c)),c.material.uniforms.t2D.value=E,c.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,c.material.toneMapped=Lt.getTransfer(E.colorSpace)!==Zt,E.matrixAutoUpdate===!0&&E.updateMatrix(),c.material.uniforms.uvTransform.value.copy(E.matrix),(u!==E||d!==E.version||f!==s.toneMapping)&&(c.material.needsUpdate=!0,u=E,d=E.version,f=s.toneMapping),c.layers.enableAll(),y.unshift(c,c.geometry,c.material,0,0,null))}function m(y,_){y.getRGB(ac,sv(s)),n.buffers.color.setClear(ac.r,ac.g,ac.b,_,o)}function x(){h!==void 0&&(h.geometry.dispose(),h.material.dispose(),h=void 0),c!==void 0&&(c.geometry.dispose(),c.material.dispose(),c=void 0)}return{getClearColor:function(){return a},setClearColor:function(y,_=1){a.set(y),l=_,m(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(y){l=y,m(a,l)},render:v,addToRenderList:g,dispose:x}}function Uw(s,e){const t=s.getParameter(s.MAX_VERTEX_ATTRIBS),n={},i=d(null);let r=i,o=!1;function a(b,D,P,k,V){let K=!1;const N=u(k,P,D);r!==N&&(r=N,c(r.object)),K=f(b,k,P,V),K&&p(b,k,P,V),V!==null&&e.update(V,s.ELEMENT_ARRAY_BUFFER),(K||o)&&(o=!1,_(b,D,P,k),V!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,e.get(V).buffer))}function l(){return s.createVertexArray()}function c(b){return s.bindVertexArray(b)}function h(b){return s.deleteVertexArray(b)}function u(b,D,P){const k=P.wireframe===!0;let V=n[b.id];V===void 0&&(V={},n[b.id]=V);let K=V[D.id];K===void 0&&(K={},V[D.id]=K);let N=K[k];return N===void 0&&(N=d(l()),K[k]=N),N}function d(b){const D=[],P=[],k=[];for(let V=0;V<t;V++)D[V]=0,P[V]=0,k[V]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:D,enabledAttributes:P,attributeDivisors:k,object:b,attributes:{},index:null}}function f(b,D,P,k){const V=r.attributes,K=D.attributes;let N=0;const Q=P.getAttributes();for(const Z in Q)if(Q[Z].location>=0){const X=V[Z];let F=K[Z];if(F===void 0&&(Z==="instanceMatrix"&&b.instanceMatrix&&(F=b.instanceMatrix),Z==="instanceColor"&&b.instanceColor&&(F=b.instanceColor)),X===void 0||X.attribute!==F||F&&X.data!==F.data)return!0;N++}return r.attributesNum!==N||r.index!==k}function p(b,D,P,k){const V={},K=D.attributes;let N=0;const Q=P.getAttributes();for(const Z in Q)if(Q[Z].location>=0){let X=K[Z];X===void 0&&(Z==="instanceMatrix"&&b.instanceMatrix&&(X=b.instanceMatrix),Z==="instanceColor"&&b.instanceColor&&(X=b.instanceColor));const F={};F.attribute=X,X&&X.data&&(F.data=X.data),V[Z]=F,N++}r.attributes=V,r.attributesNum=N,r.index=k}function v(){const b=r.newAttributes;for(let D=0,P=b.length;D<P;D++)b[D]=0}function g(b){m(b,0)}function m(b,D){const P=r.newAttributes,k=r.enabledAttributes,V=r.attributeDivisors;P[b]=1,k[b]===0&&(s.enableVertexAttribArray(b),k[b]=1),V[b]!==D&&(s.vertexAttribDivisor(b,D),V[b]=D)}function x(){const b=r.newAttributes,D=r.enabledAttributes;for(let P=0,k=D.length;P<k;P++)D[P]!==b[P]&&(s.disableVertexAttribArray(P),D[P]=0)}function y(b,D,P,k,V,K,N){N===!0?s.vertexAttribIPointer(b,D,P,V,K):s.vertexAttribPointer(b,D,P,k,V,K)}function _(b,D,P,k){v();const V=k.attributes,K=P.getAttributes(),N=D.defaultAttributeValues;for(const Q in K){const Z=K[Q];if(Z.location>=0){let j=V[Q];if(j===void 0&&(Q==="instanceMatrix"&&b.instanceMatrix&&(j=b.instanceMatrix),Q==="instanceColor"&&b.instanceColor&&(j=b.instanceColor)),j!==void 0){const X=j.normalized,F=j.itemSize,J=e.get(j);if(J===void 0)continue;const $=J.buffer,G=J.type,W=J.bytesPerElement,q=G===s.INT||G===s.UNSIGNED_INT||j.gpuType===wh;if(j.isInterleavedBufferAttribute){const Y=j.data,ne=Y.stride,ge=j.offset;if(Y.isInstancedInterleavedBuffer){for(let ve=0;ve<Z.locationSize;ve++)m(Z.location+ve,Y.meshPerAttribute);b.isInstancedMesh!==!0&&k._maxInstanceCount===void 0&&(k._maxInstanceCount=Y.meshPerAttribute*Y.count)}else for(let ve=0;ve<Z.locationSize;ve++)g(Z.location+ve);s.bindBuffer(s.ARRAY_BUFFER,$);for(let ve=0;ve<Z.locationSize;ve++)y(Z.location+ve,F/Z.locationSize,G,X,ne*W,(ge+F/Z.locationSize*ve)*W,q)}else{if(j.isInstancedBufferAttribute){for(let Y=0;Y<Z.locationSize;Y++)m(Z.location+Y,j.meshPerAttribute);b.isInstancedMesh!==!0&&k._maxInstanceCount===void 0&&(k._maxInstanceCount=j.meshPerAttribute*j.count)}else for(let Y=0;Y<Z.locationSize;Y++)g(Z.location+Y);s.bindBuffer(s.ARRAY_BUFFER,$);for(let Y=0;Y<Z.locationSize;Y++)y(Z.location+Y,F/Z.locationSize,G,X,F*W,F/Z.locationSize*Y*W,q)}}else if(N!==void 0){const X=N[Q];if(X!==void 0)switch(X.length){case 2:s.vertexAttrib2fv(Z.location,X);break;case 3:s.vertexAttrib3fv(Z.location,X);break;case 4:s.vertexAttrib4fv(Z.location,X);break;default:s.vertexAttrib1fv(Z.location,X)}}}}x()}function E(){T();for(const b in n){const D=n[b];for(const P in D){const k=D[P];for(const V in k)h(k[V].object),delete k[V];delete D[P]}delete n[b]}}function w(b){if(n[b.id]===void 0)return;const D=n[b.id];for(const P in D){const k=D[P];for(const V in k)h(k[V].object),delete k[V];delete D[P]}delete n[b.id]}function M(b){for(const D in n){const P=n[D];if(P[b.id]===void 0)continue;const k=P[b.id];for(const V in k)h(k[V].object),delete k[V];delete P[b.id]}}function T(){S(),o=!0,r!==i&&(r=i,c(r.object))}function S(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:a,reset:T,resetDefaultState:S,dispose:E,releaseStatesOfGeometry:w,releaseStatesOfProgram:M,initAttributes:v,enableAttribute:g,disableUnusedAttributes:x}}function Nw(s,e,t){let n;function i(c){n=c}function r(c,h){s.drawArrays(n,c,h),t.update(h,n,1)}function o(c,h,u){u!==0&&(s.drawArraysInstanced(n,c,h,u),t.update(h,n,u))}function a(c,h,u){if(u===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,c,0,h,0,u);let f=0;for(let p=0;p<u;p++)f+=h[p];t.update(f,n,1)}function l(c,h,u,d){if(u===0)return;const f=e.get("WEBGL_multi_draw");if(f===null)for(let p=0;p<c.length;p++)o(c[p],h[p],d[p]);else{f.multiDrawArraysInstancedWEBGL(n,c,0,h,0,d,0,u);let p=0;for(let v=0;v<u;v++)p+=h[v]*d[v];t.update(p,n,1)}}this.setMode=i,this.render=r,this.renderInstances=o,this.renderMultiDraw=a,this.renderMultiDrawInstances=l}function Ow(s,e,t,n){let i;function r(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const M=e.get("EXT_texture_filter_anisotropic");i=s.getParameter(M.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function o(M){return!(M!==ui&&n.convert(M)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_FORMAT))}function a(M){const T=M===Yo&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(M!==_r&&n.convert(M)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_TYPE)&&M!==Mi&&!T)}function l(M){if(M==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";M="mediump"}return M==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let c=t.precision!==void 0?t.precision:"highp";const h=l(c);h!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",h,"instead."),c=h);const u=t.logarithmicDepthBuffer===!0,d=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),f=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),p=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),v=s.getParameter(s.MAX_TEXTURE_SIZE),g=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),m=s.getParameter(s.MAX_VERTEX_ATTRIBS),x=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),y=s.getParameter(s.MAX_VARYING_VECTORS),_=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),E=p>0,w=s.getParameter(s.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:r,getMaxPrecision:l,textureFormatReadable:o,textureTypeReadable:a,precision:c,logarithmicDepthBuffer:u,reverseDepthBuffer:d,maxTextures:f,maxVertexTextures:p,maxTextureSize:v,maxCubemapSize:g,maxAttributes:m,maxVertexUniforms:x,maxVaryings:y,maxFragmentUniforms:_,vertexTextures:E,maxSamples:w}}function Fw(s){const e=this;let t=null,n=0,i=!1,r=!1;const o=new ur,a=new Et,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(u,d){const f=u.length!==0||d||n!==0||i;return i=d,n=u.length,f},this.beginShadows=function(){r=!0,h(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(u,d){t=h(u,d,0)},this.setState=function(u,d,f){const p=u.clippingPlanes,v=u.clipIntersection,g=u.clipShadows,m=s.get(u);if(!i||p===null||p.length===0||r&&!g)r?h(null):c();else{const x=r?0:n,y=x*4;let _=m.clippingState||null;l.value=_,_=h(p,d,y,f);for(let E=0;E!==y;++E)_[E]=t[E];m.clippingState=_,this.numIntersection=v?this.numPlanes:0,this.numPlanes+=x}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function h(u,d,f,p){const v=u!==null?u.length:0;let g=null;if(v!==0){if(g=l.value,p!==!0||g===null){const m=f+v*4,x=d.matrixWorldInverse;a.getNormalMatrix(x),(g===null||g.length<m)&&(g=new Float32Array(m));for(let y=0,_=f;y!==v;++y,_+=4)o.copy(u[y]).applyMatrix4(x,a),o.normal.toArray(g,_),g[_+3]=o.constant}l.value=g,l.needsUpdate=!0}return e.numPlanes=v,e.numIntersection=0,g}}function kw(s){let e=new WeakMap;function t(o,a){return a===Fa?o.mapping=zr:a===ka&&(o.mapping=is),o}function n(o){if(o&&o.isTexture){const a=o.mapping;if(a===Fa||a===ka)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new av(l.height);return c.fromEquirectangularTexture(s,o),e.set(o,c),o.addEventListener("dispose",i),t(c.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function r(){e=new WeakMap}return{get:n,dispose:r}}const Bo=4,Nm=[.125,.215,.35,.446,.526,.582],ks=20,td=new ls,Om=new Ge;let nd=null,id=0,rd=0,sd=!1;const Ls=(1+Math.sqrt(5))/2,Io=1/Ls,Fm=[new L(-Ls,Io,0),new L(Ls,Io,0),new L(-Io,0,Ls),new L(Io,0,Ls),new L(0,Ls,-Io),new L(0,Ls,Io),new L(-1,1,-1),new L(1,1,-1),new L(-1,1,1),new L(1,1,1)];class Hd{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){nd=this._renderer.getRenderTarget(),id=this._renderer.getActiveCubeFace(),rd=this._renderer.getActiveMipmapLevel(),sd=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=zm(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Bm(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(nd,id,rd),this._renderer.xr.enabled=sd,e.scissorTest=!1,lc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===zr||e.mapping===is?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),nd=this._renderer.getRenderTarget(),id=this._renderer.getActiveCubeFace(),rd=this._renderer.getActiveMipmapLevel(),sd=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Sn,minFilter:Sn,generateMipmaps:!1,type:Yo,format:ui,colorSpace:eo,depthBuffer:!1},i=km(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=km(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=Bw(r)),this._blurMaterial=zw(r,e,t)}return i}_compileMaterial(e){const t=new ke(this._lodPlanes[0],e);this._renderer.compile(t,td)}_sceneToCubeUV(e,t,n,i){const a=new bn(90,1,t,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],h=this._renderer,u=h.autoClear,d=h.toneMapping;h.getClearColor(Om),h.toneMapping=pr,h.autoClear=!1;const f=new On({name:"PMREM.Background",side:ni,depthWrite:!1,depthTest:!1}),p=new ke(new vn,f);let v=!1;const g=e.background;g?g.isColor&&(f.color.copy(g),e.background=null,v=!0):(f.color.copy(Om),v=!0);for(let m=0;m<6;m++){const x=m%3;x===0?(a.up.set(0,l[m],0),a.lookAt(c[m],0,0)):x===1?(a.up.set(0,0,l[m]),a.lookAt(0,c[m],0)):(a.up.set(0,l[m],0),a.lookAt(0,0,c[m]));const y=this._cubeSize;lc(i,x*y,m>2?y:0,y,y),h.setRenderTarget(i),v&&h.render(p,a),h.render(e,a)}p.geometry.dispose(),p.material.dispose(),h.toneMapping=d,h.autoClear=u,e.background=g}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===zr||e.mapping===is;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=zm()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Bm());const r=i?this._cubemapMaterial:this._equirectMaterial,o=new ke(this._lodPlanes[0],r),a=r.uniforms;a.envMap.value=e;const l=this._cubeSize;lc(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(o,td)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const i=this._lodPlanes.length;for(let r=1;r<i;r++){const o=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),a=Fm[(i-r-1)%Fm.length];this._blur(e,r-1,r,o,a)}t.autoClear=n}_blur(e,t,n,i,r){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,i,"latitudinal",r),this._halfBlur(o,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=new ke(this._lodPlanes[i],c),d=c.uniforms,f=this._sizeLods[n]-1,p=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*ks-1),v=r/p,g=isFinite(r)?1+Math.floor(h*v):ks;g>ks&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${ks}`);const m=[];let x=0;for(let M=0;M<ks;++M){const T=M/v,S=Math.exp(-T*T/2);m.push(S),M===0?x+=S:M<g&&(x+=2*S)}for(let M=0;M<m.length;M++)m[M]=m[M]/x;d.envMap.value=e.texture,d.samples.value=g,d.weights.value=m,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:y}=this;d.dTheta.value=p,d.mipInt.value=y-n;const _=this._sizeLods[i],E=3*_*(i>y-Bo?i-y+Bo:0),w=4*(this._cubeSize-_);lc(t,E,w,3*_,2*_),l.setRenderTarget(t),l.render(u,td)}}function Bw(s){const e=[],t=[],n=[];let i=s;const r=s-Bo+1+Nm.length;for(let o=0;o<r;o++){const a=Math.pow(2,i);t.push(a);let l=1/a;o>s-Bo?l=Nm[o-s+Bo-1]:o===0&&(l=0),n.push(l);const c=1/(a-2),h=-c,u=1+c,d=[h,h,u,h,u,u,h,h,u,u,h,u],f=6,p=6,v=3,g=2,m=1,x=new Float32Array(v*p*f),y=new Float32Array(g*p*f),_=new Float32Array(m*p*f);for(let w=0;w<f;w++){const M=w%3*2/3-1,T=w>2?0:-1,S=[M,T,0,M+2/3,T,0,M+2/3,T+1,0,M,T,0,M+2/3,T+1,0,M,T+1,0];x.set(S,v*p*w),y.set(d,g*p*w);const b=[w,w,w,w,w,w];_.set(b,m*p*w)}const E=new bt;E.setAttribute("position",new Ct(x,v)),E.setAttribute("uv",new Ct(y,g)),E.setAttribute("faceIndex",new Ct(_,m)),e.push(E),i>Bo&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function km(s,e,t){const n=new Yi(s,e,t);return n.texture.mapping=Xo,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function lc(s,e,t,n,i){s.viewport.set(e,t,n,i),s.scissor.set(e,t,n,i)}function zw(s,e,t){const n=new Float32Array(ks),i=new L(0,1,0);return new Ei({name:"SphericalGaussianBlur",defines:{n:ks,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Kf(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Or,depthTest:!1,depthWrite:!1})}function Bm(){return new Ei({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Kf(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Or,depthTest:!1,depthWrite:!1})}function zm(){return new Ei({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Kf(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Or,depthTest:!1,depthWrite:!1})}function Kf(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Gw(s){let e=new WeakMap,t=null;function n(a){if(a&&a.isTexture){const l=a.mapping,c=l===Fa||l===ka,h=l===zr||l===is;if(c||h){let u=e.get(a);const d=u!==void 0?u.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==d)return t===null&&(t=new Hd(s)),u=c?t.fromEquirectangular(a,u):t.fromCubemap(a,u),u.texture.pmremVersion=a.pmremVersion,e.set(a,u),u.texture;if(u!==void 0)return u.texture;{const f=a.image;return c&&f&&f.height>0||h&&f&&i(f)?(t===null&&(t=new Hd(s)),u=c?t.fromEquirectangular(a):t.fromCubemap(a),u.texture.pmremVersion=a.pmremVersion,e.set(a,u),a.addEventListener("dispose",r),u.texture):null}}}return a}function i(a){let l=0;const c=6;for(let h=0;h<c;h++)a[h]!==void 0&&l++;return l===c}function r(a){const l=a.target;l.removeEventListener("dispose",r);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function Vw(s){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const i=t(n);return i===null&&No("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function Hw(s,e,t,n){const i={},r=new WeakMap;function o(u){const d=u.target;d.index!==null&&e.remove(d.index);for(const p in d.attributes)e.remove(d.attributes[p]);d.removeEventListener("dispose",o),delete i[d.id];const f=r.get(d);f&&(e.remove(f),r.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function a(u,d){return i[d.id]===!0||(d.addEventListener("dispose",o),i[d.id]=!0,t.memory.geometries++),d}function l(u){const d=u.attributes;for(const f in d)e.update(d[f],s.ARRAY_BUFFER)}function c(u){const d=[],f=u.index,p=u.attributes.position;let v=0;if(f!==null){const x=f.array;v=f.version;for(let y=0,_=x.length;y<_;y+=3){const E=x[y+0],w=x[y+1],M=x[y+2];d.push(E,w,w,M,M,E)}}else if(p!==void 0){const x=p.array;v=p.version;for(let y=0,_=x.length/3-1;y<_;y+=3){const E=y+0,w=y+1,M=y+2;d.push(E,w,w,M,M,E)}}else return;const g=new(tv(d)?Mf:Sf)(d,1);g.version=v;const m=r.get(u);m&&e.remove(m),r.set(u,g)}function h(u){const d=r.get(u);if(d){const f=u.index;f!==null&&d.version<f.version&&c(u)}else c(u);return r.get(u)}return{get:a,update:l,getWireframeAttribute:h}}function Ww(s,e,t){let n;function i(d){n=d}let r,o;function a(d){r=d.type,o=d.bytesPerElement}function l(d,f){s.drawElements(n,f,r,d*o),t.update(f,n,1)}function c(d,f,p){p!==0&&(s.drawElementsInstanced(n,f,r,d*o,p),t.update(f,n,p))}function h(d,f,p){if(p===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,f,0,r,d,0,p);let g=0;for(let m=0;m<p;m++)g+=f[m];t.update(g,n,1)}function u(d,f,p,v){if(p===0)return;const g=e.get("WEBGL_multi_draw");if(g===null)for(let m=0;m<d.length;m++)c(d[m]/o,f[m],v[m]);else{g.multiDrawElementsInstancedWEBGL(n,f,0,r,d,0,v,0,p);let m=0;for(let x=0;x<p;x++)m+=f[x]*v[x];t.update(m,n,1)}}this.setMode=i,this.setIndex=a,this.render=l,this.renderInstances=c,this.renderMultiDraw=h,this.renderMultiDrawInstances=u}function Xw(s){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,o,a){switch(t.calls++,o){case s.TRIANGLES:t.triangles+=a*(r/3);break;case s.LINES:t.lines+=a*(r/2);break;case s.LINE_STRIP:t.lines+=a*(r-1);break;case s.LINE_LOOP:t.lines+=a*r;break;case s.POINTS:t.points+=a*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function Yw(s,e,t){const n=new WeakMap,i=new Rt;function r(o,a,l){const c=o.morphTargetInfluences,h=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,u=h!==void 0?h.length:0;let d=n.get(a);if(d===void 0||d.count!==u){let S=function(){M.dispose(),n.delete(a),a.removeEventListener("dispose",S)};d!==void 0&&d.texture.dispose();const f=a.morphAttributes.position!==void 0,p=a.morphAttributes.normal!==void 0,v=a.morphAttributes.color!==void 0,g=a.morphAttributes.position||[],m=a.morphAttributes.normal||[],x=a.morphAttributes.color||[];let y=0;f===!0&&(y=1),p===!0&&(y=2),v===!0&&(y=3);let _=a.attributes.position.count*y,E=1;_>e.maxTextureSize&&(E=Math.ceil(_/e.maxTextureSize),_=e.maxTextureSize);const w=new Float32Array(_*E*4*u),M=new ll(w,_,E,u);M.type=Mi,M.needsUpdate=!0;const T=y*4;for(let b=0;b<u;b++){const D=g[b],P=m[b],k=x[b],V=_*E*4*b;for(let K=0;K<D.count;K++){const N=K*T;f===!0&&(i.fromBufferAttribute(D,K),w[V+N+0]=i.x,w[V+N+1]=i.y,w[V+N+2]=i.z,w[V+N+3]=0),p===!0&&(i.fromBufferAttribute(P,K),w[V+N+4]=i.x,w[V+N+5]=i.y,w[V+N+6]=i.z,w[V+N+7]=0),v===!0&&(i.fromBufferAttribute(k,K),w[V+N+8]=i.x,w[V+N+9]=i.y,w[V+N+10]=i.z,w[V+N+11]=k.itemSize===4?i.w:1)}}d={count:u,texture:M,size:new xe(_,E)},n.set(a,d),a.addEventListener("dispose",S)}if(o.isInstancedMesh===!0&&o.morphTexture!==null)l.getUniforms().setValue(s,"morphTexture",o.morphTexture,t);else{let f=0;for(let v=0;v<c.length;v++)f+=c[v];const p=a.morphTargetsRelative?1:1-f;l.getUniforms().setValue(s,"morphTargetBaseInfluence",p),l.getUniforms().setValue(s,"morphTargetInfluences",c)}l.getUniforms().setValue(s,"morphTargetsTexture",d.texture,t),l.getUniforms().setValue(s,"morphTargetsTextureSize",d.size)}return{update:r}}function qw(s,e,t,n){let i=new WeakMap;function r(l){const c=n.render.frame,h=l.geometry,u=e.get(l,h);if(i.get(u)!==c&&(e.update(u),i.set(u,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),i.get(l)!==c&&(t.update(l.instanceMatrix,s.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,s.ARRAY_BUFFER),i.set(l,c))),l.isSkinnedMesh){const d=l.skeleton;i.get(d)!==c&&(d.update(),i.set(d,c))}return u}function o(){i=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:r,dispose:o}}const Kv=new pn,Gm=new Tf(1,1),Qv=new ll,$v=new Dh,e_=new hl,Vm=[],Hm=[],Wm=new Float32Array(16),Xm=new Float32Array(9),Ym=new Float32Array(4);function Zo(s,e,t){const n=s[0];if(n<=0||n>0)return s;const i=e*t;let r=Vm[i];if(r===void 0&&(r=new Float32Array(i),Vm[i]=r),e!==0){n.toArray(r,0);for(let o=1,a=0;o!==e;++o)a+=t,s[o].toArray(r,a)}return r}function Rn(s,e){if(s.length!==e.length)return!1;for(let t=0,n=s.length;t<n;t++)if(s[t]!==e[t])return!1;return!0}function Pn(s,e){for(let t=0,n=e.length;t<n;t++)s[t]=e[t]}function su(s,e){let t=Hm[e];t===void 0&&(t=new Int32Array(e),Hm[e]=t);for(let n=0;n!==e;++n)t[n]=s.allocateTextureUnit();return t}function jw(s,e){const t=this.cache;t[0]!==e&&(s.uniform1f(this.addr,e),t[0]=e)}function Zw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Rn(t,e))return;s.uniform2fv(this.addr,e),Pn(t,e)}}function Jw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Rn(t,e))return;s.uniform3fv(this.addr,e),Pn(t,e)}}function Kw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Rn(t,e))return;s.uniform4fv(this.addr,e),Pn(t,e)}}function Qw(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(Rn(t,e))return;s.uniformMatrix2fv(this.addr,!1,e),Pn(t,e)}else{if(Rn(t,n))return;Ym.set(n),s.uniformMatrix2fv(this.addr,!1,Ym),Pn(t,n)}}function $w(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(Rn(t,e))return;s.uniformMatrix3fv(this.addr,!1,e),Pn(t,e)}else{if(Rn(t,n))return;Xm.set(n),s.uniformMatrix3fv(this.addr,!1,Xm),Pn(t,n)}}function eE(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(Rn(t,e))return;s.uniformMatrix4fv(this.addr,!1,e),Pn(t,e)}else{if(Rn(t,n))return;Wm.set(n),s.uniformMatrix4fv(this.addr,!1,Wm),Pn(t,n)}}function tE(s,e){const t=this.cache;t[0]!==e&&(s.uniform1i(this.addr,e),t[0]=e)}function nE(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Rn(t,e))return;s.uniform2iv(this.addr,e),Pn(t,e)}}function iE(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Rn(t,e))return;s.uniform3iv(this.addr,e),Pn(t,e)}}function rE(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Rn(t,e))return;s.uniform4iv(this.addr,e),Pn(t,e)}}function sE(s,e){const t=this.cache;t[0]!==e&&(s.uniform1ui(this.addr,e),t[0]=e)}function oE(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Rn(t,e))return;s.uniform2uiv(this.addr,e),Pn(t,e)}}function aE(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Rn(t,e))return;s.uniform3uiv(this.addr,e),Pn(t,e)}}function lE(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Rn(t,e))return;s.uniform4uiv(this.addr,e),Pn(t,e)}}function cE(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i);let r;this.type===s.SAMPLER_2D_SHADOW?(Gm.compareFunction=xf,r=Gm):r=Kv,t.setTexture2D(e||r,i)}function hE(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||$v,i)}function uE(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||e_,i)}function dE(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||Qv,i)}function fE(s){switch(s){case 5126:return jw;case 35664:return Zw;case 35665:return Jw;case 35666:return Kw;case 35674:return Qw;case 35675:return $w;case 35676:return eE;case 5124:case 35670:return tE;case 35667:case 35671:return nE;case 35668:case 35672:return iE;case 35669:case 35673:return rE;case 5125:return sE;case 36294:return oE;case 36295:return aE;case 36296:return lE;case 35678:case 36198:case 36298:case 36306:case 35682:return cE;case 35679:case 36299:case 36307:return hE;case 35680:case 36300:case 36308:case 36293:return uE;case 36289:case 36303:case 36311:case 36292:return dE}}function pE(s,e){s.uniform1fv(this.addr,e)}function mE(s,e){const t=Zo(e,this.size,2);s.uniform2fv(this.addr,t)}function gE(s,e){const t=Zo(e,this.size,3);s.uniform3fv(this.addr,t)}function vE(s,e){const t=Zo(e,this.size,4);s.uniform4fv(this.addr,t)}function _E(s,e){const t=Zo(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,t)}function yE(s,e){const t=Zo(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,t)}function xE(s,e){const t=Zo(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,t)}function bE(s,e){s.uniform1iv(this.addr,e)}function SE(s,e){s.uniform2iv(this.addr,e)}function ME(s,e){s.uniform3iv(this.addr,e)}function wE(s,e){s.uniform4iv(this.addr,e)}function EE(s,e){s.uniform1uiv(this.addr,e)}function TE(s,e){s.uniform2uiv(this.addr,e)}function AE(s,e){s.uniform3uiv(this.addr,e)}function CE(s,e){s.uniform4uiv(this.addr,e)}function RE(s,e,t){const n=this.cache,i=e.length,r=su(t,i);Rn(n,r)||(s.uniform1iv(this.addr,r),Pn(n,r));for(let o=0;o!==i;++o)t.setTexture2D(e[o]||Kv,r[o])}function PE(s,e,t){const n=this.cache,i=e.length,r=su(t,i);Rn(n,r)||(s.uniform1iv(this.addr,r),Pn(n,r));for(let o=0;o!==i;++o)t.setTexture3D(e[o]||$v,r[o])}function IE(s,e,t){const n=this.cache,i=e.length,r=su(t,i);Rn(n,r)||(s.uniform1iv(this.addr,r),Pn(n,r));for(let o=0;o!==i;++o)t.setTextureCube(e[o]||e_,r[o])}function DE(s,e,t){const n=this.cache,i=e.length,r=su(t,i);Rn(n,r)||(s.uniform1iv(this.addr,r),Pn(n,r));for(let o=0;o!==i;++o)t.setTexture2DArray(e[o]||Qv,r[o])}function LE(s){switch(s){case 5126:return pE;case 35664:return mE;case 35665:return gE;case 35666:return vE;case 35674:return _E;case 35675:return yE;case 35676:return xE;case 5124:case 35670:return bE;case 35667:case 35671:return SE;case 35668:case 35672:return ME;case 35669:case 35673:return wE;case 5125:return EE;case 36294:return TE;case 36295:return AE;case 36296:return CE;case 35678:case 36198:case 36298:case 36306:case 35682:return RE;case 35679:case 36299:case 36307:return PE;case 35680:case 36300:case 36308:case 36293:return IE;case 36289:case 36303:case 36311:case 36292:return DE}}class UE{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=fE(t.type)}}class NE{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=LE(t.type)}}class OE{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let r=0,o=i.length;r!==o;++r){const a=i[r];a.setValue(e,t[a.id],n)}}}const od=/(\w+)(\])?(\[|\.)?/g;function qm(s,e){s.seq.push(e),s.map[e.id]=e}function FE(s,e,t){const n=s.name,i=n.length;for(od.lastIndex=0;;){const r=od.exec(n),o=od.lastIndex;let a=r[1];const l=r[2]==="]",c=r[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===i){qm(t,c===void 0?new UE(a,s,e):new NE(a,s,e));break}else{let u=t.map[a];u===void 0&&(u=new OE(a),qm(t,u)),t=u}}}class Ac{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const r=e.getActiveUniform(t,i),o=e.getUniformLocation(t,r.name);FE(r,o,this)}}setValue(e,t,n,i){const r=this.map[t];r!==void 0&&r.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let r=0,o=t.length;r!==o;++r){const a=t[r],l=n[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const o=e[i];o.id in t&&n.push(o)}return n}}function jm(s,e,t){const n=s.createShader(e);return s.shaderSource(n,t),s.compileShader(n),n}const kE=37297;let BE=0;function zE(s,e){const t=s.split(`
`),n=[],i=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let o=i;o<r;o++){const a=o+1;n.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return n.join(`
`)}const Zm=new Et;function GE(s){Lt._getMatrix(Zm,Lt.workingColorSpace,s);const e=`mat3( ${Zm.elements.map(t=>t.toFixed(4))} )`;switch(Lt.getTransfer(s)){case Va:return[e,"LinearTransferOETF"];case Zt:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",s),[e,"LinearTransferOETF"]}}function Jm(s,e,t){const n=s.getShaderParameter(e,s.COMPILE_STATUS),i=s.getShaderInfoLog(e).trim();if(n&&i==="")return"";const r=/ERROR: 0:(\d+)/.exec(i);if(r){const o=parseInt(r[1]);return t.toUpperCase()+`

`+i+`

`+zE(s.getShaderSource(e),o)}else return i}function VE(s,e){const t=GE(e);return[`vec4 ${s}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function HE(s,e){let t;switch(e){case O0:t="Linear";break;case F0:t="Reinhard";break;case k0:t="Cineon";break;case B0:t="ACESFilmic";break;case zc:t="AgX";break;case G0:t="Neutral";break;case z0:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+s+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const cc=new L;function WE(){Lt.getLuminanceCoefficients(cc);const s=cc.x.toFixed(4),e=cc.y.toFixed(4),t=cc.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${s}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function XE(s){return[s.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",s.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(xa).join(`
`)}function YE(s){const e=[];for(const t in s){const n=s[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function qE(s,e){const t={},n=s.getProgramParameter(e,s.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const r=s.getActiveAttrib(e,i),o=r.name;let a=1;r.type===s.FLOAT_MAT2&&(a=2),r.type===s.FLOAT_MAT3&&(a=3),r.type===s.FLOAT_MAT4&&(a=4),t[o]={type:r.type,location:s.getAttribLocation(e,o),locationSize:a}}return t}function xa(s){return s!==""}function Km(s,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Qm(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const jE=/^[ \t]*#include +<([\w\d./]+)>/gm;function Wd(s){return s.replace(jE,JE)}const ZE=new Map;function JE(s,e){let t=vt[e];if(t===void 0){const n=ZE.get(e);if(n!==void 0)t=vt[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return Wd(t)}const KE=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function $m(s){return s.replace(KE,QE)}function QE(s,e,t,n){let i="";for(let r=parseInt(e);r<parseInt(t);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function eg(s){let e=`precision ${s.precision} float;
	precision ${s.precision} int;
	precision ${s.precision} sampler2D;
	precision ${s.precision} samplerCube;
	precision ${s.precision} sampler3D;
	precision ${s.precision} sampler2DArray;
	precision ${s.precision} sampler2DShadow;
	precision ${s.precision} samplerCubeShadow;
	precision ${s.precision} sampler2DArrayShadow;
	precision ${s.precision} isampler2D;
	precision ${s.precision} isampler3D;
	precision ${s.precision} isamplerCube;
	precision ${s.precision} isampler2DArray;
	precision ${s.precision} usampler2D;
	precision ${s.precision} usampler3D;
	precision ${s.precision} usamplerCube;
	precision ${s.precision} usampler2DArray;
	`;return s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function $E(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===af?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===wa?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===hr&&(e="SHADOWMAP_TYPE_VSM"),e}function eT(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case zr:case is:e="ENVMAP_TYPE_CUBE";break;case Xo:e="ENVMAP_TYPE_CUBE_UV";break}return e}function tT(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case is:e="ENVMAP_MODE_REFRACTION";break}return e}function nT(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case ol:e="ENVMAP_BLENDING_MULTIPLY";break;case U0:e="ENVMAP_BLENDING_MIX";break;case N0:e="ENVMAP_BLENDING_ADD";break}return e}function iT(s){const e=s.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function rT(s,e,t,n){const i=s.getContext(),r=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=$E(t),c=eT(t),h=tT(t),u=nT(t),d=iT(t),f=XE(t),p=YE(r),v=i.createProgram();let g,m,x=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(g=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(xa).join(`
`),g.length>0&&(g+=`
`),m=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(xa).join(`
`),m.length>0&&(m+=`
`)):(g=[eg(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(xa).join(`
`),m=[eg(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+h:"",t.envMap?"#define "+u:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==pr?"#define TONE_MAPPING":"",t.toneMapping!==pr?vt.tonemapping_pars_fragment:"",t.toneMapping!==pr?HE("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",vt.colorspace_pars_fragment,VE("linearToOutputTexel",t.outputColorSpace),WE(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(xa).join(`
`)),o=Wd(o),o=Km(o,t),o=Qm(o,t),a=Wd(a),a=Km(a,t),a=Qm(a,t),o=$m(o),a=$m(a),t.isRawShaderMaterial!==!0&&(x=`#version 300 es
`,g=[f,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,m=["#define varying in",t.glslVersion===Od?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Od?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+m);const y=x+g+o,_=x+m+a,E=jm(i,i.VERTEX_SHADER,y),w=jm(i,i.FRAGMENT_SHADER,_);i.attachShader(v,E),i.attachShader(v,w),t.index0AttributeName!==void 0?i.bindAttribLocation(v,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(v,0,"position"),i.linkProgram(v);function M(D){if(s.debug.checkShaderErrors){const P=i.getProgramInfoLog(v).trim(),k=i.getShaderInfoLog(E).trim(),V=i.getShaderInfoLog(w).trim();let K=!0,N=!0;if(i.getProgramParameter(v,i.LINK_STATUS)===!1)if(K=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(i,v,E,w);else{const Q=Jm(i,E,"vertex"),Z=Jm(i,w,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(v,i.VALIDATE_STATUS)+`

Material Name: `+D.name+`
Material Type: `+D.type+`

Program Info Log: `+P+`
`+Q+`
`+Z)}else P!==""?console.warn("THREE.WebGLProgram: Program Info Log:",P):(k===""||V==="")&&(N=!1);N&&(D.diagnostics={runnable:K,programLog:P,vertexShader:{log:k,prefix:g},fragmentShader:{log:V,prefix:m}})}i.deleteShader(E),i.deleteShader(w),T=new Ac(i,v),S=qE(i,v)}let T;this.getUniforms=function(){return T===void 0&&M(this),T};let S;this.getAttributes=function(){return S===void 0&&M(this),S};let b=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return b===!1&&(b=i.getProgramParameter(v,kE)),b},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(v),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=BE++,this.cacheKey=e,this.usedTimes=1,this.program=v,this.vertexShader=E,this.fragmentShader=w,this}let sT=0;class oT{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new aT(e),t.set(e,n)),n}}class aT{constructor(e){this.id=sT++,this.code=e,this.usedTimes=0}}function lT(s,e,t,n,i,r,o){const a=new Lh,l=new oT,c=new Set,h=[],u=i.logarithmicDepthBuffer,d=i.vertexTextures;let f=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function v(S){return c.add(S),S===0?"uv":`uv${S}`}function g(S,b,D,P,k){const V=P.fog,K=k.geometry,N=S.isMeshStandardMaterial?P.environment:null,Q=(S.isMeshStandardMaterial?t:e).get(S.envMap||N),Z=Q&&Q.mapping===Xo?Q.image.height:null,j=p[S.type];S.precision!==null&&(f=i.getMaxPrecision(S.precision),f!==S.precision&&console.warn("THREE.WebGLProgram.getParameters:",S.precision,"not supported, using",f,"instead."));const X=K.morphAttributes.position||K.morphAttributes.normal||K.morphAttributes.color,F=X!==void 0?X.length:0;let J=0;K.morphAttributes.position!==void 0&&(J=1),K.morphAttributes.normal!==void 0&&(J=2),K.morphAttributes.color!==void 0&&(J=3);let $,G,W,q;if(j){const rt=ci[j];$=rt.vertexShader,G=rt.fragmentShader}else $=S.vertexShader,G=S.fragmentShader,l.update(S),W=l.getVertexShaderID(S),q=l.getFragmentShaderID(S);const Y=s.getRenderTarget(),ne=s.state.buffers.depth.getReversed(),ge=k.isInstancedMesh===!0,ve=k.isBatchedMesh===!0,_e=!!S.map,ee=!!S.matcap,ue=!!Q,B=!!S.aoMap,Se=!!S.lightMap,de=!!S.bumpMap,Ee=!!S.normalMap,ce=!!S.displacementMap,De=!!S.emissiveMap,be=!!S.metalnessMap,I=!!S.roughnessMap,R=S.anisotropy>0,te=S.clearcoat>0,ae=S.dispersion>0,le=S.iridescence>0,pe=S.sheen>0,Ae=S.transmission>0,Me=R&&!!S.anisotropyMap,Ce=te&&!!S.clearcoatMap,qe=te&&!!S.clearcoatNormalMap,Re=te&&!!S.clearcoatRoughnessMap,ze=le&&!!S.iridescenceMap,Be=le&&!!S.iridescenceThicknessMap,He=pe&&!!S.sheenColorMap,Pe=pe&&!!S.sheenRoughnessMap,ut=!!S.specularMap,tt=!!S.specularColorMap,wt=!!S.specularIntensityMap,ie=Ae&&!!S.transmissionMap,Te=Ae&&!!S.thicknessMap,he=!!S.gradientMap,Ie=!!S.alphaMap,Oe=S.alphaTest>0,Le=!!S.alphaHash,ot=!!S.extensions;let xt=pr;S.toneMapped&&(Y===null||Y.isXRRenderTarget===!0)&&(xt=s.toneMapping);const ct={shaderID:j,shaderType:S.type,shaderName:S.name,vertexShader:$,fragmentShader:G,defines:S.defines,customVertexShaderID:W,customFragmentShaderID:q,isRawShaderMaterial:S.isRawShaderMaterial===!0,glslVersion:S.glslVersion,precision:f,batching:ve,batchingColor:ve&&k._colorsTexture!==null,instancing:ge,instancingColor:ge&&k.instanceColor!==null,instancingMorph:ge&&k.morphTexture!==null,supportsVertexTextures:d,outputColorSpace:Y===null?s.outputColorSpace:Y.isXRRenderTarget===!0?Y.texture.colorSpace:eo,alphaToCoverage:!!S.alphaToCoverage,map:_e,matcap:ee,envMap:ue,envMapMode:ue&&Q.mapping,envMapCubeUVHeight:Z,aoMap:B,lightMap:Se,bumpMap:de,normalMap:Ee,displacementMap:d&&ce,emissiveMap:De,normalMapObjectSpace:Ee&&S.normalMapType===q0,normalMapTangentSpace:Ee&&S.normalMapType===rs,metalnessMap:be,roughnessMap:I,anisotropy:R,anisotropyMap:Me,clearcoat:te,clearcoatMap:Ce,clearcoatNormalMap:qe,clearcoatRoughnessMap:Re,dispersion:ae,iridescence:le,iridescenceMap:ze,iridescenceThicknessMap:Be,sheen:pe,sheenColorMap:He,sheenRoughnessMap:Pe,specularMap:ut,specularColorMap:tt,specularIntensityMap:wt,transmission:Ae,transmissionMap:ie,thicknessMap:Te,gradientMap:he,opaque:S.transparent===!1&&S.blending===Xs&&S.alphaToCoverage===!1,alphaMap:Ie,alphaTest:Oe,alphaHash:Le,combine:S.combine,mapUv:_e&&v(S.map.channel),aoMapUv:B&&v(S.aoMap.channel),lightMapUv:Se&&v(S.lightMap.channel),bumpMapUv:de&&v(S.bumpMap.channel),normalMapUv:Ee&&v(S.normalMap.channel),displacementMapUv:ce&&v(S.displacementMap.channel),emissiveMapUv:De&&v(S.emissiveMap.channel),metalnessMapUv:be&&v(S.metalnessMap.channel),roughnessMapUv:I&&v(S.roughnessMap.channel),anisotropyMapUv:Me&&v(S.anisotropyMap.channel),clearcoatMapUv:Ce&&v(S.clearcoatMap.channel),clearcoatNormalMapUv:qe&&v(S.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Re&&v(S.clearcoatRoughnessMap.channel),iridescenceMapUv:ze&&v(S.iridescenceMap.channel),iridescenceThicknessMapUv:Be&&v(S.iridescenceThicknessMap.channel),sheenColorMapUv:He&&v(S.sheenColorMap.channel),sheenRoughnessMapUv:Pe&&v(S.sheenRoughnessMap.channel),specularMapUv:ut&&v(S.specularMap.channel),specularColorMapUv:tt&&v(S.specularColorMap.channel),specularIntensityMapUv:wt&&v(S.specularIntensityMap.channel),transmissionMapUv:ie&&v(S.transmissionMap.channel),thicknessMapUv:Te&&v(S.thicknessMap.channel),alphaMapUv:Ie&&v(S.alphaMap.channel),vertexTangents:!!K.attributes.tangent&&(Ee||R),vertexColors:S.vertexColors,vertexAlphas:S.vertexColors===!0&&!!K.attributes.color&&K.attributes.color.itemSize===4,pointsUvs:k.isPoints===!0&&!!K.attributes.uv&&(_e||Ie),fog:!!V,useFog:S.fog===!0,fogExp2:!!V&&V.isFogExp2,flatShading:S.flatShading===!0,sizeAttenuation:S.sizeAttenuation===!0,logarithmicDepthBuffer:u,reverseDepthBuffer:ne,skinning:k.isSkinnedMesh===!0,morphTargets:K.morphAttributes.position!==void 0,morphNormals:K.morphAttributes.normal!==void 0,morphColors:K.morphAttributes.color!==void 0,morphTargetsCount:F,morphTextureStride:J,numDirLights:b.directional.length,numPointLights:b.point.length,numSpotLights:b.spot.length,numSpotLightMaps:b.spotLightMap.length,numRectAreaLights:b.rectArea.length,numHemiLights:b.hemi.length,numDirLightShadows:b.directionalShadowMap.length,numPointLightShadows:b.pointShadowMap.length,numSpotLightShadows:b.spotShadowMap.length,numSpotLightShadowsWithMaps:b.numSpotLightShadowsWithMaps,numLightProbes:b.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:S.dithering,shadowMapEnabled:s.shadowMap.enabled&&D.length>0,shadowMapType:s.shadowMap.type,toneMapping:xt,decodeVideoTexture:_e&&S.map.isVideoTexture===!0&&Lt.getTransfer(S.map.colorSpace)===Zt,decodeVideoTextureEmissive:De&&S.emissiveMap.isVideoTexture===!0&&Lt.getTransfer(S.emissiveMap.colorSpace)===Zt,premultipliedAlpha:S.premultipliedAlpha,doubleSided:S.side===xi,flipSided:S.side===ni,useDepthPacking:S.depthPacking>=0,depthPacking:S.depthPacking||0,index0AttributeName:S.index0AttributeName,extensionClipCullDistance:ot&&S.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(ot&&S.extensions.multiDraw===!0||ve)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:S.customProgramCacheKey()};return ct.vertexUv1s=c.has(1),ct.vertexUv2s=c.has(2),ct.vertexUv3s=c.has(3),c.clear(),ct}function m(S){const b=[];if(S.shaderID?b.push(S.shaderID):(b.push(S.customVertexShaderID),b.push(S.customFragmentShaderID)),S.defines!==void 0)for(const D in S.defines)b.push(D),b.push(S.defines[D]);return S.isRawShaderMaterial===!1&&(x(b,S),y(b,S),b.push(s.outputColorSpace)),b.push(S.customProgramCacheKey),b.join()}function x(S,b){S.push(b.precision),S.push(b.outputColorSpace),S.push(b.envMapMode),S.push(b.envMapCubeUVHeight),S.push(b.mapUv),S.push(b.alphaMapUv),S.push(b.lightMapUv),S.push(b.aoMapUv),S.push(b.bumpMapUv),S.push(b.normalMapUv),S.push(b.displacementMapUv),S.push(b.emissiveMapUv),S.push(b.metalnessMapUv),S.push(b.roughnessMapUv),S.push(b.anisotropyMapUv),S.push(b.clearcoatMapUv),S.push(b.clearcoatNormalMapUv),S.push(b.clearcoatRoughnessMapUv),S.push(b.iridescenceMapUv),S.push(b.iridescenceThicknessMapUv),S.push(b.sheenColorMapUv),S.push(b.sheenRoughnessMapUv),S.push(b.specularMapUv),S.push(b.specularColorMapUv),S.push(b.specularIntensityMapUv),S.push(b.transmissionMapUv),S.push(b.thicknessMapUv),S.push(b.combine),S.push(b.fogExp2),S.push(b.sizeAttenuation),S.push(b.morphTargetsCount),S.push(b.morphAttributeCount),S.push(b.numDirLights),S.push(b.numPointLights),S.push(b.numSpotLights),S.push(b.numSpotLightMaps),S.push(b.numHemiLights),S.push(b.numRectAreaLights),S.push(b.numDirLightShadows),S.push(b.numPointLightShadows),S.push(b.numSpotLightShadows),S.push(b.numSpotLightShadowsWithMaps),S.push(b.numLightProbes),S.push(b.shadowMapType),S.push(b.toneMapping),S.push(b.numClippingPlanes),S.push(b.numClipIntersection),S.push(b.depthPacking)}function y(S,b){a.disableAll(),b.supportsVertexTextures&&a.enable(0),b.instancing&&a.enable(1),b.instancingColor&&a.enable(2),b.instancingMorph&&a.enable(3),b.matcap&&a.enable(4),b.envMap&&a.enable(5),b.normalMapObjectSpace&&a.enable(6),b.normalMapTangentSpace&&a.enable(7),b.clearcoat&&a.enable(8),b.iridescence&&a.enable(9),b.alphaTest&&a.enable(10),b.vertexColors&&a.enable(11),b.vertexAlphas&&a.enable(12),b.vertexUv1s&&a.enable(13),b.vertexUv2s&&a.enable(14),b.vertexUv3s&&a.enable(15),b.vertexTangents&&a.enable(16),b.anisotropy&&a.enable(17),b.alphaHash&&a.enable(18),b.batching&&a.enable(19),b.dispersion&&a.enable(20),b.batchingColor&&a.enable(21),S.push(a.mask),a.disableAll(),b.fog&&a.enable(0),b.useFog&&a.enable(1),b.flatShading&&a.enable(2),b.logarithmicDepthBuffer&&a.enable(3),b.reverseDepthBuffer&&a.enable(4),b.skinning&&a.enable(5),b.morphTargets&&a.enable(6),b.morphNormals&&a.enable(7),b.morphColors&&a.enable(8),b.premultipliedAlpha&&a.enable(9),b.shadowMapEnabled&&a.enable(10),b.doubleSided&&a.enable(11),b.flipSided&&a.enable(12),b.useDepthPacking&&a.enable(13),b.dithering&&a.enable(14),b.transmission&&a.enable(15),b.sheen&&a.enable(16),b.opaque&&a.enable(17),b.pointsUvs&&a.enable(18),b.decodeVideoTexture&&a.enable(19),b.decodeVideoTextureEmissive&&a.enable(20),b.alphaToCoverage&&a.enable(21),S.push(a.mask)}function _(S){const b=p[S.type];let D;if(b){const P=ci[b];D=cl.clone(P.uniforms)}else D=S.uniforms;return D}function E(S,b){let D;for(let P=0,k=h.length;P<k;P++){const V=h[P];if(V.cacheKey===b){D=V,++D.usedTimes;break}}return D===void 0&&(D=new rT(s,b,S,r),h.push(D)),D}function w(S){if(--S.usedTimes===0){const b=h.indexOf(S);h[b]=h[h.length-1],h.pop(),S.destroy()}}function M(S){l.remove(S)}function T(){l.dispose()}return{getParameters:g,getProgramCacheKey:m,getUniforms:_,acquireProgram:E,releaseProgram:w,releaseShaderCache:M,programs:h,dispose:T}}function cT(){let s=new WeakMap;function e(o){return s.has(o)}function t(o){let a=s.get(o);return a===void 0&&(a={},s.set(o,a)),a}function n(o){s.delete(o)}function i(o,a,l){s.get(o)[a]=l}function r(){s=new WeakMap}return{has:e,get:t,remove:n,update:i,dispose:r}}function hT(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}function tg(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function ng(){const s=[];let e=0;const t=[],n=[],i=[];function r(){e=0,t.length=0,n.length=0,i.length=0}function o(u,d,f,p,v,g){let m=s[e];return m===void 0?(m={id:u.id,object:u,geometry:d,material:f,groupOrder:p,renderOrder:u.renderOrder,z:v,group:g},s[e]=m):(m.id=u.id,m.object=u,m.geometry=d,m.material=f,m.groupOrder=p,m.renderOrder=u.renderOrder,m.z=v,m.group=g),e++,m}function a(u,d,f,p,v,g){const m=o(u,d,f,p,v,g);f.transmission>0?n.push(m):f.transparent===!0?i.push(m):t.push(m)}function l(u,d,f,p,v,g){const m=o(u,d,f,p,v,g);f.transmission>0?n.unshift(m):f.transparent===!0?i.unshift(m):t.unshift(m)}function c(u,d){t.length>1&&t.sort(u||hT),n.length>1&&n.sort(d||tg),i.length>1&&i.sort(d||tg)}function h(){for(let u=e,d=s.length;u<d;u++){const f=s[u];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:t,transmissive:n,transparent:i,init:r,push:a,unshift:l,finish:h,sort:c}}function uT(){let s=new WeakMap;function e(n,i){const r=s.get(n);let o;return r===void 0?(o=new ng,s.set(n,[o])):i>=r.length?(o=new ng,r.push(o)):o=r[i],o}function t(){s=new WeakMap}return{get:e,dispose:t}}function dT(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new L,color:new Ge};break;case"SpotLight":t={position:new L,direction:new L,color:new Ge,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new L,color:new Ge,distance:0,decay:0};break;case"HemisphereLight":t={direction:new L,skyColor:new Ge,groundColor:new Ge};break;case"RectAreaLight":t={color:new Ge,position:new L,halfWidth:new L,halfHeight:new L};break}return s[e.id]=t,t}}}function fT(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new xe};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new xe};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new xe,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=t,t}}}let pT=0;function mT(s,e){return(e.castShadow?2:0)-(s.castShadow?2:0)+(e.map?1:0)-(s.map?1:0)}function gT(s){const e=new dT,t=fT(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let c=0;c<9;c++)n.probe.push(new L);const i=new L,r=new st,o=new st;function a(c){let h=0,u=0,d=0;for(let S=0;S<9;S++)n.probe[S].set(0,0,0);let f=0,p=0,v=0,g=0,m=0,x=0,y=0,_=0,E=0,w=0,M=0;c.sort(mT);for(let S=0,b=c.length;S<b;S++){const D=c[S],P=D.color,k=D.intensity,V=D.distance,K=D.shadow&&D.shadow.map?D.shadow.map.texture:null;if(D.isAmbientLight)h+=P.r*k,u+=P.g*k,d+=P.b*k;else if(D.isLightProbe){for(let N=0;N<9;N++)n.probe[N].addScaledVector(D.sh.coefficients[N],k);M++}else if(D.isDirectionalLight){const N=e.get(D);if(N.color.copy(D.color).multiplyScalar(D.intensity),D.castShadow){const Q=D.shadow,Z=t.get(D);Z.shadowIntensity=Q.intensity,Z.shadowBias=Q.bias,Z.shadowNormalBias=Q.normalBias,Z.shadowRadius=Q.radius,Z.shadowMapSize=Q.mapSize,n.directionalShadow[f]=Z,n.directionalShadowMap[f]=K,n.directionalShadowMatrix[f]=D.shadow.matrix,x++}n.directional[f]=N,f++}else if(D.isSpotLight){const N=e.get(D);N.position.setFromMatrixPosition(D.matrixWorld),N.color.copy(P).multiplyScalar(k),N.distance=V,N.coneCos=Math.cos(D.angle),N.penumbraCos=Math.cos(D.angle*(1-D.penumbra)),N.decay=D.decay,n.spot[v]=N;const Q=D.shadow;if(D.map&&(n.spotLightMap[E]=D.map,E++,Q.updateMatrices(D),D.castShadow&&w++),n.spotLightMatrix[v]=Q.matrix,D.castShadow){const Z=t.get(D);Z.shadowIntensity=Q.intensity,Z.shadowBias=Q.bias,Z.shadowNormalBias=Q.normalBias,Z.shadowRadius=Q.radius,Z.shadowMapSize=Q.mapSize,n.spotShadow[v]=Z,n.spotShadowMap[v]=K,_++}v++}else if(D.isRectAreaLight){const N=e.get(D);N.color.copy(P).multiplyScalar(k),N.halfWidth.set(D.width*.5,0,0),N.halfHeight.set(0,D.height*.5,0),n.rectArea[g]=N,g++}else if(D.isPointLight){const N=e.get(D);if(N.color.copy(D.color).multiplyScalar(D.intensity),N.distance=D.distance,N.decay=D.decay,D.castShadow){const Q=D.shadow,Z=t.get(D);Z.shadowIntensity=Q.intensity,Z.shadowBias=Q.bias,Z.shadowNormalBias=Q.normalBias,Z.shadowRadius=Q.radius,Z.shadowMapSize=Q.mapSize,Z.shadowCameraNear=Q.camera.near,Z.shadowCameraFar=Q.camera.far,n.pointShadow[p]=Z,n.pointShadowMap[p]=K,n.pointShadowMatrix[p]=D.shadow.matrix,y++}n.point[p]=N,p++}else if(D.isHemisphereLight){const N=e.get(D);N.skyColor.copy(D.color).multiplyScalar(k),N.groundColor.copy(D.groundColor).multiplyScalar(k),n.hemi[m]=N,m++}}g>0&&(s.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=je.LTC_FLOAT_1,n.rectAreaLTC2=je.LTC_FLOAT_2):(n.rectAreaLTC1=je.LTC_HALF_1,n.rectAreaLTC2=je.LTC_HALF_2)),n.ambient[0]=h,n.ambient[1]=u,n.ambient[2]=d;const T=n.hash;(T.directionalLength!==f||T.pointLength!==p||T.spotLength!==v||T.rectAreaLength!==g||T.hemiLength!==m||T.numDirectionalShadows!==x||T.numPointShadows!==y||T.numSpotShadows!==_||T.numSpotMaps!==E||T.numLightProbes!==M)&&(n.directional.length=f,n.spot.length=v,n.rectArea.length=g,n.point.length=p,n.hemi.length=m,n.directionalShadow.length=x,n.directionalShadowMap.length=x,n.pointShadow.length=y,n.pointShadowMap.length=y,n.spotShadow.length=_,n.spotShadowMap.length=_,n.directionalShadowMatrix.length=x,n.pointShadowMatrix.length=y,n.spotLightMatrix.length=_+E-w,n.spotLightMap.length=E,n.numSpotLightShadowsWithMaps=w,n.numLightProbes=M,T.directionalLength=f,T.pointLength=p,T.spotLength=v,T.rectAreaLength=g,T.hemiLength=m,T.numDirectionalShadows=x,T.numPointShadows=y,T.numSpotShadows=_,T.numSpotMaps=E,T.numLightProbes=M,n.version=pT++)}function l(c,h){let u=0,d=0,f=0,p=0,v=0;const g=h.matrixWorldInverse;for(let m=0,x=c.length;m<x;m++){const y=c[m];if(y.isDirectionalLight){const _=n.directional[u];_.direction.setFromMatrixPosition(y.matrixWorld),i.setFromMatrixPosition(y.target.matrixWorld),_.direction.sub(i),_.direction.transformDirection(g),u++}else if(y.isSpotLight){const _=n.spot[f];_.position.setFromMatrixPosition(y.matrixWorld),_.position.applyMatrix4(g),_.direction.setFromMatrixPosition(y.matrixWorld),i.setFromMatrixPosition(y.target.matrixWorld),_.direction.sub(i),_.direction.transformDirection(g),f++}else if(y.isRectAreaLight){const _=n.rectArea[p];_.position.setFromMatrixPosition(y.matrixWorld),_.position.applyMatrix4(g),o.identity(),r.copy(y.matrixWorld),r.premultiply(g),o.extractRotation(r),_.halfWidth.set(y.width*.5,0,0),_.halfHeight.set(0,y.height*.5,0),_.halfWidth.applyMatrix4(o),_.halfHeight.applyMatrix4(o),p++}else if(y.isPointLight){const _=n.point[d];_.position.setFromMatrixPosition(y.matrixWorld),_.position.applyMatrix4(g),d++}else if(y.isHemisphereLight){const _=n.hemi[v];_.direction.setFromMatrixPosition(y.matrixWorld),_.direction.transformDirection(g),v++}}}return{setup:a,setupView:l,state:n}}function ig(s){const e=new gT(s),t=[],n=[];function i(h){c.camera=h,t.length=0,n.length=0}function r(h){t.push(h)}function o(h){n.push(h)}function a(){e.setup(t)}function l(h){e.setupView(t,h)}const c={lightsArray:t,shadowsArray:n,camera:null,lights:e,transmissionRenderTarget:{}};return{init:i,state:c,setupLights:a,setupLightsView:l,pushLight:r,pushShadow:o}}function vT(s){let e=new WeakMap;function t(i,r=0){const o=e.get(i);let a;return o===void 0?(a=new ig(s),e.set(i,[a])):r>=o.length?(a=new ig(s),o.push(a)):a=o[r],a}function n(){e=new WeakMap}return{get:t,dispose:n}}const _T=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,yT=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function xT(s,e,t){let n=new fl;const i=new xe,r=new xe,o=new Rt,a=new ml({depthPacking:yf}),l=new eu,c={},h=t.maxTextureSize,u={[vr]:ni,[ni]:vr,[xi]:xi},d=new Ei({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new xe},radius:{value:4}},vertexShader:_T,fragmentShader:yT}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const p=new bt;p.setAttribute("position",new Ct(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const v=new ke(p,d),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=af;let m=this.type;this.render=function(w,M,T){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||w.length===0)return;const S=s.getRenderTarget(),b=s.getActiveCubeFace(),D=s.getActiveMipmapLevel(),P=s.state;P.setBlending(Or),P.buffers.color.setClear(1,1,1,1),P.buffers.depth.setTest(!0),P.setScissorTest(!1);const k=m!==hr&&this.type===hr,V=m===hr&&this.type!==hr;for(let K=0,N=w.length;K<N;K++){const Q=w[K],Z=Q.shadow;if(Z===void 0){console.warn("THREE.WebGLShadowMap:",Q,"has no shadow.");continue}if(Z.autoUpdate===!1&&Z.needsUpdate===!1)continue;i.copy(Z.mapSize);const j=Z.getFrameExtents();if(i.multiply(j),r.copy(Z.mapSize),(i.x>h||i.y>h)&&(i.x>h&&(r.x=Math.floor(h/j.x),i.x=r.x*j.x,Z.mapSize.x=r.x),i.y>h&&(r.y=Math.floor(h/j.y),i.y=r.y*j.y,Z.mapSize.y=r.y)),Z.map===null||k===!0||V===!0){const F=this.type!==hr?{minFilter:Yn,magFilter:Yn}:{};Z.map!==null&&Z.map.dispose(),Z.map=new Yi(i.x,i.y,F),Z.map.texture.name=Q.name+".shadowMap",Z.camera.updateProjectionMatrix()}s.setRenderTarget(Z.map),s.clear();const X=Z.getViewportCount();for(let F=0;F<X;F++){const J=Z.getViewport(F);o.set(r.x*J.x,r.y*J.y,r.x*J.z,r.y*J.w),P.viewport(o),Z.updateMatrices(Q,F),n=Z.getFrustum(),_(M,T,Z.camera,Q,this.type)}Z.isPointLightShadow!==!0&&this.type===hr&&x(Z,T),Z.needsUpdate=!1}m=this.type,g.needsUpdate=!1,s.setRenderTarget(S,b,D)};function x(w,M){const T=e.update(v);d.defines.VSM_SAMPLES!==w.blurSamples&&(d.defines.VSM_SAMPLES=w.blurSamples,f.defines.VSM_SAMPLES=w.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),w.mapPass===null&&(w.mapPass=new Yi(i.x,i.y)),d.uniforms.shadow_pass.value=w.map.texture,d.uniforms.resolution.value=w.mapSize,d.uniforms.radius.value=w.radius,s.setRenderTarget(w.mapPass),s.clear(),s.renderBufferDirect(M,null,T,d,v,null),f.uniforms.shadow_pass.value=w.mapPass.texture,f.uniforms.resolution.value=w.mapSize,f.uniforms.radius.value=w.radius,s.setRenderTarget(w.map),s.clear(),s.renderBufferDirect(M,null,T,f,v,null)}function y(w,M,T,S){let b=null;const D=T.isPointLight===!0?w.customDistanceMaterial:w.customDepthMaterial;if(D!==void 0)b=D;else if(b=T.isPointLight===!0?l:a,s.localClippingEnabled&&M.clipShadows===!0&&Array.isArray(M.clippingPlanes)&&M.clippingPlanes.length!==0||M.displacementMap&&M.displacementScale!==0||M.alphaMap&&M.alphaTest>0||M.map&&M.alphaTest>0){const P=b.uuid,k=M.uuid;let V=c[P];V===void 0&&(V={},c[P]=V);let K=V[k];K===void 0&&(K=b.clone(),V[k]=K,M.addEventListener("dispose",E)),b=K}if(b.visible=M.visible,b.wireframe=M.wireframe,S===hr?b.side=M.shadowSide!==null?M.shadowSide:M.side:b.side=M.shadowSide!==null?M.shadowSide:u[M.side],b.alphaMap=M.alphaMap,b.alphaTest=M.alphaTest,b.map=M.map,b.clipShadows=M.clipShadows,b.clippingPlanes=M.clippingPlanes,b.clipIntersection=M.clipIntersection,b.displacementMap=M.displacementMap,b.displacementScale=M.displacementScale,b.displacementBias=M.displacementBias,b.wireframeLinewidth=M.wireframeLinewidth,b.linewidth=M.linewidth,T.isPointLight===!0&&b.isMeshDistanceMaterial===!0){const P=s.properties.get(b);P.light=T}return b}function _(w,M,T,S,b){if(w.visible===!1)return;if(w.layers.test(M.layers)&&(w.isMesh||w.isLine||w.isPoints)&&(w.castShadow||w.receiveShadow&&b===hr)&&(!w.frustumCulled||n.intersectsObject(w))){w.modelViewMatrix.multiplyMatrices(T.matrixWorldInverse,w.matrixWorld);const k=e.update(w),V=w.material;if(Array.isArray(V)){const K=k.groups;for(let N=0,Q=K.length;N<Q;N++){const Z=K[N],j=V[Z.materialIndex];if(j&&j.visible){const X=y(w,j,S,b);w.onBeforeShadow(s,w,M,T,k,X,Z),s.renderBufferDirect(T,null,k,X,w,Z),w.onAfterShadow(s,w,M,T,k,X,Z)}}}else if(V.visible){const K=y(w,V,S,b);w.onBeforeShadow(s,w,M,T,k,K,null),s.renderBufferDirect(T,null,k,K,w,null),w.onAfterShadow(s,w,M,T,k,K,null)}}const P=w.children;for(let k=0,V=P.length;k<V;k++)_(P[k],M,T,S,b)}function E(w){w.target.removeEventListener("dispose",E);for(const T in c){const S=c[T],b=w.target.uuid;b in S&&(S[b].dispose(),delete S[b])}}}const bT={[Lc]:Uc,[Nc]:kc,[Oc]:Bc,[Ks]:Fc,[Uc]:Lc,[kc]:Nc,[Bc]:Oc,[Fc]:Ks};function ST(s,e){function t(){let ie=!1;const Te=new Rt;let he=null;const Ie=new Rt(0,0,0,0);return{setMask:function(Oe){he!==Oe&&!ie&&(s.colorMask(Oe,Oe,Oe,Oe),he=Oe)},setLocked:function(Oe){ie=Oe},setClear:function(Oe,Le,ot,xt,ct){ct===!0&&(Oe*=xt,Le*=xt,ot*=xt),Te.set(Oe,Le,ot,xt),Ie.equals(Te)===!1&&(s.clearColor(Oe,Le,ot,xt),Ie.copy(Te))},reset:function(){ie=!1,he=null,Ie.set(-1,0,0,0)}}}function n(){let ie=!1,Te=!1,he=null,Ie=null,Oe=null;return{setReversed:function(Le){if(Te!==Le){const ot=e.get("EXT_clip_control");Te?ot.clipControlEXT(ot.LOWER_LEFT_EXT,ot.ZERO_TO_ONE_EXT):ot.clipControlEXT(ot.LOWER_LEFT_EXT,ot.NEGATIVE_ONE_TO_ONE_EXT);const xt=Oe;Oe=null,this.setClear(xt)}Te=Le},getReversed:function(){return Te},setTest:function(Le){Le?Y(s.DEPTH_TEST):ne(s.DEPTH_TEST)},setMask:function(Le){he!==Le&&!ie&&(s.depthMask(Le),he=Le)},setFunc:function(Le){if(Te&&(Le=bT[Le]),Ie!==Le){switch(Le){case Lc:s.depthFunc(s.NEVER);break;case Uc:s.depthFunc(s.ALWAYS);break;case Nc:s.depthFunc(s.LESS);break;case Ks:s.depthFunc(s.LEQUAL);break;case Oc:s.depthFunc(s.EQUAL);break;case Fc:s.depthFunc(s.GEQUAL);break;case kc:s.depthFunc(s.GREATER);break;case Bc:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}Ie=Le}},setLocked:function(Le){ie=Le},setClear:function(Le){Oe!==Le&&(Te&&(Le=1-Le),s.clearDepth(Le),Oe=Le)},reset:function(){ie=!1,he=null,Ie=null,Oe=null,Te=!1}}}function i(){let ie=!1,Te=null,he=null,Ie=null,Oe=null,Le=null,ot=null,xt=null,ct=null;return{setTest:function(rt){ie||(rt?Y(s.STENCIL_TEST):ne(s.STENCIL_TEST))},setMask:function(rt){Te!==rt&&!ie&&(s.stencilMask(rt),Te=rt)},setFunc:function(rt,Yt,Jt){(he!==rt||Ie!==Yt||Oe!==Jt)&&(s.stencilFunc(rt,Yt,Jt),he=rt,Ie=Yt,Oe=Jt)},setOp:function(rt,Yt,Jt){(Le!==rt||ot!==Yt||xt!==Jt)&&(s.stencilOp(rt,Yt,Jt),Le=rt,ot=Yt,xt=Jt)},setLocked:function(rt){ie=rt},setClear:function(rt){ct!==rt&&(s.clearStencil(rt),ct=rt)},reset:function(){ie=!1,Te=null,he=null,Ie=null,Oe=null,Le=null,ot=null,xt=null,ct=null}}}const r=new t,o=new n,a=new i,l=new WeakMap,c=new WeakMap;let h={},u={},d=new WeakMap,f=[],p=null,v=!1,g=null,m=null,x=null,y=null,_=null,E=null,w=null,M=new Ge(0,0,0),T=0,S=!1,b=null,D=null,P=null,k=null,V=null;const K=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let N=!1,Q=0;const Z=s.getParameter(s.VERSION);Z.indexOf("WebGL")!==-1?(Q=parseFloat(/^WebGL (\d)/.exec(Z)[1]),N=Q>=1):Z.indexOf("OpenGL ES")!==-1&&(Q=parseFloat(/^OpenGL ES (\d)/.exec(Z)[1]),N=Q>=2);let j=null,X={};const F=s.getParameter(s.SCISSOR_BOX),J=s.getParameter(s.VIEWPORT),$=new Rt().fromArray(F),G=new Rt().fromArray(J);function W(ie,Te,he,Ie){const Oe=new Uint8Array(4),Le=s.createTexture();s.bindTexture(ie,Le),s.texParameteri(ie,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(ie,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let ot=0;ot<he;ot++)ie===s.TEXTURE_3D||ie===s.TEXTURE_2D_ARRAY?s.texImage3D(Te,0,s.RGBA,1,1,Ie,0,s.RGBA,s.UNSIGNED_BYTE,Oe):s.texImage2D(Te+ot,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,Oe);return Le}const q={};q[s.TEXTURE_2D]=W(s.TEXTURE_2D,s.TEXTURE_2D,1),q[s.TEXTURE_CUBE_MAP]=W(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),q[s.TEXTURE_2D_ARRAY]=W(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),q[s.TEXTURE_3D]=W(s.TEXTURE_3D,s.TEXTURE_3D,1,1),r.setClear(0,0,0,1),o.setClear(1),a.setClear(0),Y(s.DEPTH_TEST),o.setFunc(Ks),de(!1),Ee(Pd),Y(s.CULL_FACE),B(Or);function Y(ie){h[ie]!==!0&&(s.enable(ie),h[ie]=!0)}function ne(ie){h[ie]!==!1&&(s.disable(ie),h[ie]=!1)}function ge(ie,Te){return u[ie]!==Te?(s.bindFramebuffer(ie,Te),u[ie]=Te,ie===s.DRAW_FRAMEBUFFER&&(u[s.FRAMEBUFFER]=Te),ie===s.FRAMEBUFFER&&(u[s.DRAW_FRAMEBUFFER]=Te),!0):!1}function ve(ie,Te){let he=f,Ie=!1;if(ie){he=d.get(Te),he===void 0&&(he=[],d.set(Te,he));const Oe=ie.textures;if(he.length!==Oe.length||he[0]!==s.COLOR_ATTACHMENT0){for(let Le=0,ot=Oe.length;Le<ot;Le++)he[Le]=s.COLOR_ATTACHMENT0+Le;he.length=Oe.length,Ie=!0}}else he[0]!==s.BACK&&(he[0]=s.BACK,Ie=!0);Ie&&s.drawBuffers(he)}function _e(ie){return p!==ie?(s.useProgram(ie),p=ie,!0):!1}const ee={[ns]:s.FUNC_ADD,[v0]:s.FUNC_SUBTRACT,[_0]:s.FUNC_REVERSE_SUBTRACT};ee[y0]=s.MIN,ee[x0]=s.MAX;const ue={[b0]:s.ZERO,[S0]:s.ONE,[M0]:s.SRC_COLOR,[Ic]:s.SRC_ALPHA,[R0]:s.SRC_ALPHA_SATURATE,[A0]:s.DST_COLOR,[E0]:s.DST_ALPHA,[w0]:s.ONE_MINUS_SRC_COLOR,[Dc]:s.ONE_MINUS_SRC_ALPHA,[C0]:s.ONE_MINUS_DST_COLOR,[T0]:s.ONE_MINUS_DST_ALPHA,[P0]:s.CONSTANT_COLOR,[I0]:s.ONE_MINUS_CONSTANT_COLOR,[D0]:s.CONSTANT_ALPHA,[L0]:s.ONE_MINUS_CONSTANT_ALPHA};function B(ie,Te,he,Ie,Oe,Le,ot,xt,ct,rt){if(ie===Or){v===!0&&(ne(s.BLEND),v=!1);return}if(v===!1&&(Y(s.BLEND),v=!0),ie!==g0){if(ie!==g||rt!==S){if((m!==ns||_!==ns)&&(s.blendEquation(s.FUNC_ADD),m=ns,_=ns),rt)switch(ie){case Xs:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case Id:s.blendFunc(s.ONE,s.ONE);break;case Dd:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case Ld:s.blendFuncSeparate(s.ZERO,s.SRC_COLOR,s.ZERO,s.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",ie);break}else switch(ie){case Xs:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case Id:s.blendFunc(s.SRC_ALPHA,s.ONE);break;case Dd:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case Ld:s.blendFunc(s.ZERO,s.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",ie);break}x=null,y=null,E=null,w=null,M.set(0,0,0),T=0,g=ie,S=rt}return}Oe=Oe||Te,Le=Le||he,ot=ot||Ie,(Te!==m||Oe!==_)&&(s.blendEquationSeparate(ee[Te],ee[Oe]),m=Te,_=Oe),(he!==x||Ie!==y||Le!==E||ot!==w)&&(s.blendFuncSeparate(ue[he],ue[Ie],ue[Le],ue[ot]),x=he,y=Ie,E=Le,w=ot),(xt.equals(M)===!1||ct!==T)&&(s.blendColor(xt.r,xt.g,xt.b,ct),M.copy(xt),T=ct),g=ie,S=!1}function Se(ie,Te){ie.side===xi?ne(s.CULL_FACE):Y(s.CULL_FACE);let he=ie.side===ni;Te&&(he=!he),de(he),ie.blending===Xs&&ie.transparent===!1?B(Or):B(ie.blending,ie.blendEquation,ie.blendSrc,ie.blendDst,ie.blendEquationAlpha,ie.blendSrcAlpha,ie.blendDstAlpha,ie.blendColor,ie.blendAlpha,ie.premultipliedAlpha),o.setFunc(ie.depthFunc),o.setTest(ie.depthTest),o.setMask(ie.depthWrite),r.setMask(ie.colorWrite);const Ie=ie.stencilWrite;a.setTest(Ie),Ie&&(a.setMask(ie.stencilWriteMask),a.setFunc(ie.stencilFunc,ie.stencilRef,ie.stencilFuncMask),a.setOp(ie.stencilFail,ie.stencilZFail,ie.stencilZPass)),De(ie.polygonOffset,ie.polygonOffsetFactor,ie.polygonOffsetUnits),ie.alphaToCoverage===!0?Y(s.SAMPLE_ALPHA_TO_COVERAGE):ne(s.SAMPLE_ALPHA_TO_COVERAGE)}function de(ie){b!==ie&&(ie?s.frontFace(s.CW):s.frontFace(s.CCW),b=ie)}function Ee(ie){ie!==p0?(Y(s.CULL_FACE),ie!==D&&(ie===Pd?s.cullFace(s.BACK):ie===m0?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):ne(s.CULL_FACE),D=ie}function ce(ie){ie!==P&&(N&&s.lineWidth(ie),P=ie)}function De(ie,Te,he){ie?(Y(s.POLYGON_OFFSET_FILL),(k!==Te||V!==he)&&(s.polygonOffset(Te,he),k=Te,V=he)):ne(s.POLYGON_OFFSET_FILL)}function be(ie){ie?Y(s.SCISSOR_TEST):ne(s.SCISSOR_TEST)}function I(ie){ie===void 0&&(ie=s.TEXTURE0+K-1),j!==ie&&(s.activeTexture(ie),j=ie)}function R(ie,Te,he){he===void 0&&(j===null?he=s.TEXTURE0+K-1:he=j);let Ie=X[he];Ie===void 0&&(Ie={type:void 0,texture:void 0},X[he]=Ie),(Ie.type!==ie||Ie.texture!==Te)&&(j!==he&&(s.activeTexture(he),j=he),s.bindTexture(ie,Te||q[ie]),Ie.type=ie,Ie.texture=Te)}function te(){const ie=X[j];ie!==void 0&&ie.type!==void 0&&(s.bindTexture(ie.type,null),ie.type=void 0,ie.texture=void 0)}function ae(){try{s.compressedTexImage2D.apply(s,arguments)}catch(ie){console.error("THREE.WebGLState:",ie)}}function le(){try{s.compressedTexImage3D.apply(s,arguments)}catch(ie){console.error("THREE.WebGLState:",ie)}}function pe(){try{s.texSubImage2D.apply(s,arguments)}catch(ie){console.error("THREE.WebGLState:",ie)}}function Ae(){try{s.texSubImage3D.apply(s,arguments)}catch(ie){console.error("THREE.WebGLState:",ie)}}function Me(){try{s.compressedTexSubImage2D.apply(s,arguments)}catch(ie){console.error("THREE.WebGLState:",ie)}}function Ce(){try{s.compressedTexSubImage3D.apply(s,arguments)}catch(ie){console.error("THREE.WebGLState:",ie)}}function qe(){try{s.texStorage2D.apply(s,arguments)}catch(ie){console.error("THREE.WebGLState:",ie)}}function Re(){try{s.texStorage3D.apply(s,arguments)}catch(ie){console.error("THREE.WebGLState:",ie)}}function ze(){try{s.texImage2D.apply(s,arguments)}catch(ie){console.error("THREE.WebGLState:",ie)}}function Be(){try{s.texImage3D.apply(s,arguments)}catch(ie){console.error("THREE.WebGLState:",ie)}}function He(ie){$.equals(ie)===!1&&(s.scissor(ie.x,ie.y,ie.z,ie.w),$.copy(ie))}function Pe(ie){G.equals(ie)===!1&&(s.viewport(ie.x,ie.y,ie.z,ie.w),G.copy(ie))}function ut(ie,Te){let he=c.get(Te);he===void 0&&(he=new WeakMap,c.set(Te,he));let Ie=he.get(ie);Ie===void 0&&(Ie=s.getUniformBlockIndex(Te,ie.name),he.set(ie,Ie))}function tt(ie,Te){const Ie=c.get(Te).get(ie);l.get(Te)!==Ie&&(s.uniformBlockBinding(Te,Ie,ie.__bindingPointIndex),l.set(Te,Ie))}function wt(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.blendColor(0,0,0,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),o.setReversed(!1),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),h={},j=null,X={},u={},d=new WeakMap,f=[],p=null,v=!1,g=null,m=null,x=null,y=null,_=null,E=null,w=null,M=new Ge(0,0,0),T=0,S=!1,b=null,D=null,P=null,k=null,V=null,$.set(0,0,s.canvas.width,s.canvas.height),G.set(0,0,s.canvas.width,s.canvas.height),r.reset(),o.reset(),a.reset()}return{buffers:{color:r,depth:o,stencil:a},enable:Y,disable:ne,bindFramebuffer:ge,drawBuffers:ve,useProgram:_e,setBlending:B,setMaterial:Se,setFlipSided:de,setCullFace:Ee,setLineWidth:ce,setPolygonOffset:De,setScissorTest:be,activeTexture:I,bindTexture:R,unbindTexture:te,compressedTexImage2D:ae,compressedTexImage3D:le,texImage2D:ze,texImage3D:Be,updateUBOMapping:ut,uniformBlockBinding:tt,texStorage2D:qe,texStorage3D:Re,texSubImage2D:pe,texSubImage3D:Ae,compressedTexSubImage2D:Me,compressedTexSubImage3D:Ce,scissor:He,viewport:Pe,reset:wt}}function MT(s,e,t,n,i,r,o){const a=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),c=new xe,h=new WeakMap;let u;const d=new WeakMap;let f=!1;try{f=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function p(I,R){return f?new OffscreenCanvas(I,R):Xa("canvas")}function v(I,R,te){let ae=1;const le=be(I);if((le.width>te||le.height>te)&&(ae=te/Math.max(le.width,le.height)),ae<1)if(typeof HTMLImageElement<"u"&&I instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&I instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&I instanceof ImageBitmap||typeof VideoFrame<"u"&&I instanceof VideoFrame){const pe=Math.floor(ae*le.width),Ae=Math.floor(ae*le.height);u===void 0&&(u=p(pe,Ae));const Me=R?p(pe,Ae):u;return Me.width=pe,Me.height=Ae,Me.getContext("2d").drawImage(I,0,0,pe,Ae),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+le.width+"x"+le.height+") to ("+pe+"x"+Ae+")."),Me}else return"data"in I&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+le.width+"x"+le.height+")."),I;return I}function g(I){return I.generateMipmaps}function m(I){s.generateMipmap(I)}function x(I){return I.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:I.isWebGL3DRenderTarget?s.TEXTURE_3D:I.isWebGLArrayRenderTarget||I.isCompressedArrayTexture?s.TEXTURE_2D_ARRAY:s.TEXTURE_2D}function y(I,R,te,ae,le=!1){if(I!==null){if(s[I]!==void 0)return s[I];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+I+"'")}let pe=R;if(R===s.RED&&(te===s.FLOAT&&(pe=s.R32F),te===s.HALF_FLOAT&&(pe=s.R16F),te===s.UNSIGNED_BYTE&&(pe=s.R8)),R===s.RED_INTEGER&&(te===s.UNSIGNED_BYTE&&(pe=s.R8UI),te===s.UNSIGNED_SHORT&&(pe=s.R16UI),te===s.UNSIGNED_INT&&(pe=s.R32UI),te===s.BYTE&&(pe=s.R8I),te===s.SHORT&&(pe=s.R16I),te===s.INT&&(pe=s.R32I)),R===s.RG&&(te===s.FLOAT&&(pe=s.RG32F),te===s.HALF_FLOAT&&(pe=s.RG16F),te===s.UNSIGNED_BYTE&&(pe=s.RG8)),R===s.RG_INTEGER&&(te===s.UNSIGNED_BYTE&&(pe=s.RG8UI),te===s.UNSIGNED_SHORT&&(pe=s.RG16UI),te===s.UNSIGNED_INT&&(pe=s.RG32UI),te===s.BYTE&&(pe=s.RG8I),te===s.SHORT&&(pe=s.RG16I),te===s.INT&&(pe=s.RG32I)),R===s.RGB_INTEGER&&(te===s.UNSIGNED_BYTE&&(pe=s.RGB8UI),te===s.UNSIGNED_SHORT&&(pe=s.RGB16UI),te===s.UNSIGNED_INT&&(pe=s.RGB32UI),te===s.BYTE&&(pe=s.RGB8I),te===s.SHORT&&(pe=s.RGB16I),te===s.INT&&(pe=s.RGB32I)),R===s.RGBA_INTEGER&&(te===s.UNSIGNED_BYTE&&(pe=s.RGBA8UI),te===s.UNSIGNED_SHORT&&(pe=s.RGBA16UI),te===s.UNSIGNED_INT&&(pe=s.RGBA32UI),te===s.BYTE&&(pe=s.RGBA8I),te===s.SHORT&&(pe=s.RGBA16I),te===s.INT&&(pe=s.RGBA32I)),R===s.RGB&&te===s.UNSIGNED_INT_5_9_9_9_REV&&(pe=s.RGB9_E5),R===s.RGBA){const Ae=le?Va:Lt.getTransfer(ae);te===s.FLOAT&&(pe=s.RGBA32F),te===s.HALF_FLOAT&&(pe=s.RGBA16F),te===s.UNSIGNED_BYTE&&(pe=Ae===Zt?s.SRGB8_ALPHA8:s.RGBA8),te===s.UNSIGNED_SHORT_4_4_4_4&&(pe=s.RGBA4),te===s.UNSIGNED_SHORT_5_5_5_1&&(pe=s.RGB5_A1)}return(pe===s.R16F||pe===s.R32F||pe===s.RG16F||pe===s.RG32F||pe===s.RGBA16F||pe===s.RGBA32F)&&e.get("EXT_color_buffer_float"),pe}function _(I,R){let te;return I?R===null||R===Gr||R===Qs?te=s.DEPTH24_STENCIL8:R===Mi?te=s.DEPTH32F_STENCIL8:R===Vo&&(te=s.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):R===null||R===Gr||R===Qs?te=s.DEPTH_COMPONENT24:R===Mi?te=s.DEPTH_COMPONENT32F:R===Vo&&(te=s.DEPTH_COMPONENT16),te}function E(I,R){return g(I)===!0||I.isFramebufferTexture&&I.minFilter!==Yn&&I.minFilter!==Sn?Math.log2(Math.max(R.width,R.height))+1:I.mipmaps!==void 0&&I.mipmaps.length>0?I.mipmaps.length:I.isCompressedTexture&&Array.isArray(I.image)?R.mipmaps.length:1}function w(I){const R=I.target;R.removeEventListener("dispose",w),T(R),R.isVideoTexture&&h.delete(R)}function M(I){const R=I.target;R.removeEventListener("dispose",M),b(R)}function T(I){const R=n.get(I);if(R.__webglInit===void 0)return;const te=I.source,ae=d.get(te);if(ae){const le=ae[R.__cacheKey];le.usedTimes--,le.usedTimes===0&&S(I),Object.keys(ae).length===0&&d.delete(te)}n.remove(I)}function S(I){const R=n.get(I);s.deleteTexture(R.__webglTexture);const te=I.source,ae=d.get(te);delete ae[R.__cacheKey],o.memory.textures--}function b(I){const R=n.get(I);if(I.depthTexture&&(I.depthTexture.dispose(),n.remove(I.depthTexture)),I.isWebGLCubeRenderTarget)for(let ae=0;ae<6;ae++){if(Array.isArray(R.__webglFramebuffer[ae]))for(let le=0;le<R.__webglFramebuffer[ae].length;le++)s.deleteFramebuffer(R.__webglFramebuffer[ae][le]);else s.deleteFramebuffer(R.__webglFramebuffer[ae]);R.__webglDepthbuffer&&s.deleteRenderbuffer(R.__webglDepthbuffer[ae])}else{if(Array.isArray(R.__webglFramebuffer))for(let ae=0;ae<R.__webglFramebuffer.length;ae++)s.deleteFramebuffer(R.__webglFramebuffer[ae]);else s.deleteFramebuffer(R.__webglFramebuffer);if(R.__webglDepthbuffer&&s.deleteRenderbuffer(R.__webglDepthbuffer),R.__webglMultisampledFramebuffer&&s.deleteFramebuffer(R.__webglMultisampledFramebuffer),R.__webglColorRenderbuffer)for(let ae=0;ae<R.__webglColorRenderbuffer.length;ae++)R.__webglColorRenderbuffer[ae]&&s.deleteRenderbuffer(R.__webglColorRenderbuffer[ae]);R.__webglDepthRenderbuffer&&s.deleteRenderbuffer(R.__webglDepthRenderbuffer)}const te=I.textures;for(let ae=0,le=te.length;ae<le;ae++){const pe=n.get(te[ae]);pe.__webglTexture&&(s.deleteTexture(pe.__webglTexture),o.memory.textures--),n.remove(te[ae])}n.remove(I)}let D=0;function P(){D=0}function k(){const I=D;return I>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+I+" texture units while this GPU supports only "+i.maxTextures),D+=1,I}function V(I){const R=[];return R.push(I.wrapS),R.push(I.wrapT),R.push(I.wrapR||0),R.push(I.magFilter),R.push(I.minFilter),R.push(I.anisotropy),R.push(I.internalFormat),R.push(I.format),R.push(I.type),R.push(I.generateMipmaps),R.push(I.premultiplyAlpha),R.push(I.flipY),R.push(I.unpackAlignment),R.push(I.colorSpace),R.join()}function K(I,R){const te=n.get(I);if(I.isVideoTexture&&ce(I),I.isRenderTargetTexture===!1&&I.version>0&&te.__version!==I.version){const ae=I.image;if(ae===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ae.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{G(te,I,R);return}}t.bindTexture(s.TEXTURE_2D,te.__webglTexture,s.TEXTURE0+R)}function N(I,R){const te=n.get(I);if(I.version>0&&te.__version!==I.version){G(te,I,R);return}t.bindTexture(s.TEXTURE_2D_ARRAY,te.__webglTexture,s.TEXTURE0+R)}function Q(I,R){const te=n.get(I);if(I.version>0&&te.__version!==I.version){G(te,I,R);return}t.bindTexture(s.TEXTURE_3D,te.__webglTexture,s.TEXTURE0+R)}function Z(I,R){const te=n.get(I);if(I.version>0&&te.__version!==I.version){W(te,I,R);return}t.bindTexture(s.TEXTURE_CUBE_MAP,te.__webglTexture,s.TEXTURE0+R)}const j={[$i]:s.REPEAT,[Si]:s.CLAMP_TO_EDGE,[Ba]:s.MIRRORED_REPEAT},X={[Yn]:s.NEAREST,[lf]:s.NEAREST_MIPMAP_NEAREST,[Oo]:s.NEAREST_MIPMAP_LINEAR,[Sn]:s.LINEAR,[Ea]:s.LINEAR_MIPMAP_NEAREST,[er]:s.LINEAR_MIPMAP_LINEAR},F={[j0]:s.NEVER,[ev]:s.ALWAYS,[Z0]:s.LESS,[xf]:s.LEQUAL,[J0]:s.EQUAL,[$0]:s.GEQUAL,[K0]:s.GREATER,[Q0]:s.NOTEQUAL};function J(I,R){if(R.type===Mi&&e.has("OES_texture_float_linear")===!1&&(R.magFilter===Sn||R.magFilter===Ea||R.magFilter===Oo||R.magFilter===er||R.minFilter===Sn||R.minFilter===Ea||R.minFilter===Oo||R.minFilter===er)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),s.texParameteri(I,s.TEXTURE_WRAP_S,j[R.wrapS]),s.texParameteri(I,s.TEXTURE_WRAP_T,j[R.wrapT]),(I===s.TEXTURE_3D||I===s.TEXTURE_2D_ARRAY)&&s.texParameteri(I,s.TEXTURE_WRAP_R,j[R.wrapR]),s.texParameteri(I,s.TEXTURE_MAG_FILTER,X[R.magFilter]),s.texParameteri(I,s.TEXTURE_MIN_FILTER,X[R.minFilter]),R.compareFunction&&(s.texParameteri(I,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(I,s.TEXTURE_COMPARE_FUNC,F[R.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(R.magFilter===Yn||R.minFilter!==Oo&&R.minFilter!==er||R.type===Mi&&e.has("OES_texture_float_linear")===!1)return;if(R.anisotropy>1||n.get(R).__currentAnisotropy){const te=e.get("EXT_texture_filter_anisotropic");s.texParameterf(I,te.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(R.anisotropy,i.getMaxAnisotropy())),n.get(R).__currentAnisotropy=R.anisotropy}}}function $(I,R){let te=!1;I.__webglInit===void 0&&(I.__webglInit=!0,R.addEventListener("dispose",w));const ae=R.source;let le=d.get(ae);le===void 0&&(le={},d.set(ae,le));const pe=V(R);if(pe!==I.__cacheKey){le[pe]===void 0&&(le[pe]={texture:s.createTexture(),usedTimes:0},o.memory.textures++,te=!0),le[pe].usedTimes++;const Ae=le[I.__cacheKey];Ae!==void 0&&(le[I.__cacheKey].usedTimes--,Ae.usedTimes===0&&S(R)),I.__cacheKey=pe,I.__webglTexture=le[pe].texture}return te}function G(I,R,te){let ae=s.TEXTURE_2D;(R.isDataArrayTexture||R.isCompressedArrayTexture)&&(ae=s.TEXTURE_2D_ARRAY),R.isData3DTexture&&(ae=s.TEXTURE_3D);const le=$(I,R),pe=R.source;t.bindTexture(ae,I.__webglTexture,s.TEXTURE0+te);const Ae=n.get(pe);if(pe.version!==Ae.__version||le===!0){t.activeTexture(s.TEXTURE0+te);const Me=Lt.getPrimaries(Lt.workingColorSpace),Ce=R.colorSpace===Rr?null:Lt.getPrimaries(R.colorSpace),qe=R.colorSpace===Rr||Me===Ce?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,R.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,R.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,qe);let Re=v(R.image,!1,i.maxTextureSize);Re=De(R,Re);const ze=r.convert(R.format,R.colorSpace),Be=r.convert(R.type);let He=y(R.internalFormat,ze,Be,R.colorSpace,R.isVideoTexture);J(ae,R);let Pe;const ut=R.mipmaps,tt=R.isVideoTexture!==!0,wt=Ae.__version===void 0||le===!0,ie=pe.dataReady,Te=E(R,Re);if(R.isDepthTexture)He=_(R.format===$s,R.type),wt&&(tt?t.texStorage2D(s.TEXTURE_2D,1,He,Re.width,Re.height):t.texImage2D(s.TEXTURE_2D,0,He,Re.width,Re.height,0,ze,Be,null));else if(R.isDataTexture)if(ut.length>0){tt&&wt&&t.texStorage2D(s.TEXTURE_2D,Te,He,ut[0].width,ut[0].height);for(let he=0,Ie=ut.length;he<Ie;he++)Pe=ut[he],tt?ie&&t.texSubImage2D(s.TEXTURE_2D,he,0,0,Pe.width,Pe.height,ze,Be,Pe.data):t.texImage2D(s.TEXTURE_2D,he,He,Pe.width,Pe.height,0,ze,Be,Pe.data);R.generateMipmaps=!1}else tt?(wt&&t.texStorage2D(s.TEXTURE_2D,Te,He,Re.width,Re.height),ie&&t.texSubImage2D(s.TEXTURE_2D,0,0,0,Re.width,Re.height,ze,Be,Re.data)):t.texImage2D(s.TEXTURE_2D,0,He,Re.width,Re.height,0,ze,Be,Re.data);else if(R.isCompressedTexture)if(R.isCompressedArrayTexture){tt&&wt&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Te,He,ut[0].width,ut[0].height,Re.depth);for(let he=0,Ie=ut.length;he<Ie;he++)if(Pe=ut[he],R.format!==ui)if(ze!==null)if(tt){if(ie)if(R.layerUpdates.size>0){const Oe=Vd(Pe.width,Pe.height,R.format,R.type);for(const Le of R.layerUpdates){const ot=Pe.data.subarray(Le*Oe/Pe.data.BYTES_PER_ELEMENT,(Le+1)*Oe/Pe.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,he,0,0,Le,Pe.width,Pe.height,1,ze,ot)}R.clearLayerUpdates()}else t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,he,0,0,0,Pe.width,Pe.height,Re.depth,ze,Pe.data)}else t.compressedTexImage3D(s.TEXTURE_2D_ARRAY,he,He,Pe.width,Pe.height,Re.depth,0,Pe.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else tt?ie&&t.texSubImage3D(s.TEXTURE_2D_ARRAY,he,0,0,0,Pe.width,Pe.height,Re.depth,ze,Be,Pe.data):t.texImage3D(s.TEXTURE_2D_ARRAY,he,He,Pe.width,Pe.height,Re.depth,0,ze,Be,Pe.data)}else{tt&&wt&&t.texStorage2D(s.TEXTURE_2D,Te,He,ut[0].width,ut[0].height);for(let he=0,Ie=ut.length;he<Ie;he++)Pe=ut[he],R.format!==ui?ze!==null?tt?ie&&t.compressedTexSubImage2D(s.TEXTURE_2D,he,0,0,Pe.width,Pe.height,ze,Pe.data):t.compressedTexImage2D(s.TEXTURE_2D,he,He,Pe.width,Pe.height,0,Pe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):tt?ie&&t.texSubImage2D(s.TEXTURE_2D,he,0,0,Pe.width,Pe.height,ze,Be,Pe.data):t.texImage2D(s.TEXTURE_2D,he,He,Pe.width,Pe.height,0,ze,Be,Pe.data)}else if(R.isDataArrayTexture)if(tt){if(wt&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Te,He,Re.width,Re.height,Re.depth),ie)if(R.layerUpdates.size>0){const he=Vd(Re.width,Re.height,R.format,R.type);for(const Ie of R.layerUpdates){const Oe=Re.data.subarray(Ie*he/Re.data.BYTES_PER_ELEMENT,(Ie+1)*he/Re.data.BYTES_PER_ELEMENT);t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,Ie,Re.width,Re.height,1,ze,Be,Oe)}R.clearLayerUpdates()}else t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,Re.width,Re.height,Re.depth,ze,Be,Re.data)}else t.texImage3D(s.TEXTURE_2D_ARRAY,0,He,Re.width,Re.height,Re.depth,0,ze,Be,Re.data);else if(R.isData3DTexture)tt?(wt&&t.texStorage3D(s.TEXTURE_3D,Te,He,Re.width,Re.height,Re.depth),ie&&t.texSubImage3D(s.TEXTURE_3D,0,0,0,0,Re.width,Re.height,Re.depth,ze,Be,Re.data)):t.texImage3D(s.TEXTURE_3D,0,He,Re.width,Re.height,Re.depth,0,ze,Be,Re.data);else if(R.isFramebufferTexture){if(wt)if(tt)t.texStorage2D(s.TEXTURE_2D,Te,He,Re.width,Re.height);else{let he=Re.width,Ie=Re.height;for(let Oe=0;Oe<Te;Oe++)t.texImage2D(s.TEXTURE_2D,Oe,He,he,Ie,0,ze,Be,null),he>>=1,Ie>>=1}}else if(ut.length>0){if(tt&&wt){const he=be(ut[0]);t.texStorage2D(s.TEXTURE_2D,Te,He,he.width,he.height)}for(let he=0,Ie=ut.length;he<Ie;he++)Pe=ut[he],tt?ie&&t.texSubImage2D(s.TEXTURE_2D,he,0,0,ze,Be,Pe):t.texImage2D(s.TEXTURE_2D,he,He,ze,Be,Pe);R.generateMipmaps=!1}else if(tt){if(wt){const he=be(Re);t.texStorage2D(s.TEXTURE_2D,Te,He,he.width,he.height)}ie&&t.texSubImage2D(s.TEXTURE_2D,0,0,0,ze,Be,Re)}else t.texImage2D(s.TEXTURE_2D,0,He,ze,Be,Re);g(R)&&m(ae),Ae.__version=pe.version,R.onUpdate&&R.onUpdate(R)}I.__version=R.version}function W(I,R,te){if(R.image.length!==6)return;const ae=$(I,R),le=R.source;t.bindTexture(s.TEXTURE_CUBE_MAP,I.__webglTexture,s.TEXTURE0+te);const pe=n.get(le);if(le.version!==pe.__version||ae===!0){t.activeTexture(s.TEXTURE0+te);const Ae=Lt.getPrimaries(Lt.workingColorSpace),Me=R.colorSpace===Rr?null:Lt.getPrimaries(R.colorSpace),Ce=R.colorSpace===Rr||Ae===Me?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,R.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,R.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ce);const qe=R.isCompressedTexture||R.image[0].isCompressedTexture,Re=R.image[0]&&R.image[0].isDataTexture,ze=[];for(let Ie=0;Ie<6;Ie++)!qe&&!Re?ze[Ie]=v(R.image[Ie],!0,i.maxCubemapSize):ze[Ie]=Re?R.image[Ie].image:R.image[Ie],ze[Ie]=De(R,ze[Ie]);const Be=ze[0],He=r.convert(R.format,R.colorSpace),Pe=r.convert(R.type),ut=y(R.internalFormat,He,Pe,R.colorSpace),tt=R.isVideoTexture!==!0,wt=pe.__version===void 0||ae===!0,ie=le.dataReady;let Te=E(R,Be);J(s.TEXTURE_CUBE_MAP,R);let he;if(qe){tt&&wt&&t.texStorage2D(s.TEXTURE_CUBE_MAP,Te,ut,Be.width,Be.height);for(let Ie=0;Ie<6;Ie++){he=ze[Ie].mipmaps;for(let Oe=0;Oe<he.length;Oe++){const Le=he[Oe];R.format!==ui?He!==null?tt?ie&&t.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ie,Oe,0,0,Le.width,Le.height,He,Le.data):t.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ie,Oe,ut,Le.width,Le.height,0,Le.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):tt?ie&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ie,Oe,0,0,Le.width,Le.height,He,Pe,Le.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ie,Oe,ut,Le.width,Le.height,0,He,Pe,Le.data)}}}else{if(he=R.mipmaps,tt&&wt){he.length>0&&Te++;const Ie=be(ze[0]);t.texStorage2D(s.TEXTURE_CUBE_MAP,Te,ut,Ie.width,Ie.height)}for(let Ie=0;Ie<6;Ie++)if(Re){tt?ie&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ie,0,0,0,ze[Ie].width,ze[Ie].height,He,Pe,ze[Ie].data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ie,0,ut,ze[Ie].width,ze[Ie].height,0,He,Pe,ze[Ie].data);for(let Oe=0;Oe<he.length;Oe++){const ot=he[Oe].image[Ie].image;tt?ie&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ie,Oe+1,0,0,ot.width,ot.height,He,Pe,ot.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ie,Oe+1,ut,ot.width,ot.height,0,He,Pe,ot.data)}}else{tt?ie&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ie,0,0,0,He,Pe,ze[Ie]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ie,0,ut,He,Pe,ze[Ie]);for(let Oe=0;Oe<he.length;Oe++){const Le=he[Oe];tt?ie&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ie,Oe+1,0,0,He,Pe,Le.image[Ie]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ie,Oe+1,ut,He,Pe,Le.image[Ie])}}}g(R)&&m(s.TEXTURE_CUBE_MAP),pe.__version=le.version,R.onUpdate&&R.onUpdate(R)}I.__version=R.version}function q(I,R,te,ae,le,pe){const Ae=r.convert(te.format,te.colorSpace),Me=r.convert(te.type),Ce=y(te.internalFormat,Ae,Me,te.colorSpace),qe=n.get(R),Re=n.get(te);if(Re.__renderTarget=R,!qe.__hasExternalTextures){const ze=Math.max(1,R.width>>pe),Be=Math.max(1,R.height>>pe);le===s.TEXTURE_3D||le===s.TEXTURE_2D_ARRAY?t.texImage3D(le,pe,Ce,ze,Be,R.depth,0,Ae,Me,null):t.texImage2D(le,pe,Ce,ze,Be,0,Ae,Me,null)}t.bindFramebuffer(s.FRAMEBUFFER,I),Ee(R)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,ae,le,Re.__webglTexture,0,de(R)):(le===s.TEXTURE_2D||le>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&le<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,ae,le,Re.__webglTexture,pe),t.bindFramebuffer(s.FRAMEBUFFER,null)}function Y(I,R,te){if(s.bindRenderbuffer(s.RENDERBUFFER,I),R.depthBuffer){const ae=R.depthTexture,le=ae&&ae.isDepthTexture?ae.type:null,pe=_(R.stencilBuffer,le),Ae=R.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Me=de(R);Ee(R)?a.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Me,pe,R.width,R.height):te?s.renderbufferStorageMultisample(s.RENDERBUFFER,Me,pe,R.width,R.height):s.renderbufferStorage(s.RENDERBUFFER,pe,R.width,R.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,Ae,s.RENDERBUFFER,I)}else{const ae=R.textures;for(let le=0;le<ae.length;le++){const pe=ae[le],Ae=r.convert(pe.format,pe.colorSpace),Me=r.convert(pe.type),Ce=y(pe.internalFormat,Ae,Me,pe.colorSpace),qe=de(R);te&&Ee(R)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,qe,Ce,R.width,R.height):Ee(R)?a.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,qe,Ce,R.width,R.height):s.renderbufferStorage(s.RENDERBUFFER,Ce,R.width,R.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function ne(I,R){if(R&&R.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(s.FRAMEBUFFER,I),!(R.depthTexture&&R.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const ae=n.get(R.depthTexture);ae.__renderTarget=R,(!ae.__webglTexture||R.depthTexture.image.width!==R.width||R.depthTexture.image.height!==R.height)&&(R.depthTexture.image.width=R.width,R.depthTexture.image.height=R.height,R.depthTexture.needsUpdate=!0),K(R.depthTexture,0);const le=ae.__webglTexture,pe=de(R);if(R.depthTexture.format===Ys)Ee(R)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,le,0,pe):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,le,0);else if(R.depthTexture.format===$s)Ee(R)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,le,0,pe):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,le,0);else throw new Error("Unknown depthTexture format")}function ge(I){const R=n.get(I),te=I.isWebGLCubeRenderTarget===!0;if(R.__boundDepthTexture!==I.depthTexture){const ae=I.depthTexture;if(R.__depthDisposeCallback&&R.__depthDisposeCallback(),ae){const le=()=>{delete R.__boundDepthTexture,delete R.__depthDisposeCallback,ae.removeEventListener("dispose",le)};ae.addEventListener("dispose",le),R.__depthDisposeCallback=le}R.__boundDepthTexture=ae}if(I.depthTexture&&!R.__autoAllocateDepthBuffer){if(te)throw new Error("target.depthTexture not supported in Cube render targets");ne(R.__webglFramebuffer,I)}else if(te){R.__webglDepthbuffer=[];for(let ae=0;ae<6;ae++)if(t.bindFramebuffer(s.FRAMEBUFFER,R.__webglFramebuffer[ae]),R.__webglDepthbuffer[ae]===void 0)R.__webglDepthbuffer[ae]=s.createRenderbuffer(),Y(R.__webglDepthbuffer[ae],I,!1);else{const le=I.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,pe=R.__webglDepthbuffer[ae];s.bindRenderbuffer(s.RENDERBUFFER,pe),s.framebufferRenderbuffer(s.FRAMEBUFFER,le,s.RENDERBUFFER,pe)}}else if(t.bindFramebuffer(s.FRAMEBUFFER,R.__webglFramebuffer),R.__webglDepthbuffer===void 0)R.__webglDepthbuffer=s.createRenderbuffer(),Y(R.__webglDepthbuffer,I,!1);else{const ae=I.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,le=R.__webglDepthbuffer;s.bindRenderbuffer(s.RENDERBUFFER,le),s.framebufferRenderbuffer(s.FRAMEBUFFER,ae,s.RENDERBUFFER,le)}t.bindFramebuffer(s.FRAMEBUFFER,null)}function ve(I,R,te){const ae=n.get(I);R!==void 0&&q(ae.__webglFramebuffer,I,I.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,0),te!==void 0&&ge(I)}function _e(I){const R=I.texture,te=n.get(I),ae=n.get(R);I.addEventListener("dispose",M);const le=I.textures,pe=I.isWebGLCubeRenderTarget===!0,Ae=le.length>1;if(Ae||(ae.__webglTexture===void 0&&(ae.__webglTexture=s.createTexture()),ae.__version=R.version,o.memory.textures++),pe){te.__webglFramebuffer=[];for(let Me=0;Me<6;Me++)if(R.mipmaps&&R.mipmaps.length>0){te.__webglFramebuffer[Me]=[];for(let Ce=0;Ce<R.mipmaps.length;Ce++)te.__webglFramebuffer[Me][Ce]=s.createFramebuffer()}else te.__webglFramebuffer[Me]=s.createFramebuffer()}else{if(R.mipmaps&&R.mipmaps.length>0){te.__webglFramebuffer=[];for(let Me=0;Me<R.mipmaps.length;Me++)te.__webglFramebuffer[Me]=s.createFramebuffer()}else te.__webglFramebuffer=s.createFramebuffer();if(Ae)for(let Me=0,Ce=le.length;Me<Ce;Me++){const qe=n.get(le[Me]);qe.__webglTexture===void 0&&(qe.__webglTexture=s.createTexture(),o.memory.textures++)}if(I.samples>0&&Ee(I)===!1){te.__webglMultisampledFramebuffer=s.createFramebuffer(),te.__webglColorRenderbuffer=[],t.bindFramebuffer(s.FRAMEBUFFER,te.__webglMultisampledFramebuffer);for(let Me=0;Me<le.length;Me++){const Ce=le[Me];te.__webglColorRenderbuffer[Me]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,te.__webglColorRenderbuffer[Me]);const qe=r.convert(Ce.format,Ce.colorSpace),Re=r.convert(Ce.type),ze=y(Ce.internalFormat,qe,Re,Ce.colorSpace,I.isXRRenderTarget===!0),Be=de(I);s.renderbufferStorageMultisample(s.RENDERBUFFER,Be,ze,I.width,I.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Me,s.RENDERBUFFER,te.__webglColorRenderbuffer[Me])}s.bindRenderbuffer(s.RENDERBUFFER,null),I.depthBuffer&&(te.__webglDepthRenderbuffer=s.createRenderbuffer(),Y(te.__webglDepthRenderbuffer,I,!0)),t.bindFramebuffer(s.FRAMEBUFFER,null)}}if(pe){t.bindTexture(s.TEXTURE_CUBE_MAP,ae.__webglTexture),J(s.TEXTURE_CUBE_MAP,R);for(let Me=0;Me<6;Me++)if(R.mipmaps&&R.mipmaps.length>0)for(let Ce=0;Ce<R.mipmaps.length;Ce++)q(te.__webglFramebuffer[Me][Ce],I,R,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Me,Ce);else q(te.__webglFramebuffer[Me],I,R,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Me,0);g(R)&&m(s.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Ae){for(let Me=0,Ce=le.length;Me<Ce;Me++){const qe=le[Me],Re=n.get(qe);t.bindTexture(s.TEXTURE_2D,Re.__webglTexture),J(s.TEXTURE_2D,qe),q(te.__webglFramebuffer,I,qe,s.COLOR_ATTACHMENT0+Me,s.TEXTURE_2D,0),g(qe)&&m(s.TEXTURE_2D)}t.unbindTexture()}else{let Me=s.TEXTURE_2D;if((I.isWebGL3DRenderTarget||I.isWebGLArrayRenderTarget)&&(Me=I.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),t.bindTexture(Me,ae.__webglTexture),J(Me,R),R.mipmaps&&R.mipmaps.length>0)for(let Ce=0;Ce<R.mipmaps.length;Ce++)q(te.__webglFramebuffer[Ce],I,R,s.COLOR_ATTACHMENT0,Me,Ce);else q(te.__webglFramebuffer,I,R,s.COLOR_ATTACHMENT0,Me,0);g(R)&&m(Me),t.unbindTexture()}I.depthBuffer&&ge(I)}function ee(I){const R=I.textures;for(let te=0,ae=R.length;te<ae;te++){const le=R[te];if(g(le)){const pe=x(I),Ae=n.get(le).__webglTexture;t.bindTexture(pe,Ae),m(pe),t.unbindTexture()}}}const ue=[],B=[];function Se(I){if(I.samples>0){if(Ee(I)===!1){const R=I.textures,te=I.width,ae=I.height;let le=s.COLOR_BUFFER_BIT;const pe=I.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Ae=n.get(I),Me=R.length>1;if(Me)for(let Ce=0;Ce<R.length;Ce++)t.bindFramebuffer(s.FRAMEBUFFER,Ae.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ce,s.RENDERBUFFER,null),t.bindFramebuffer(s.FRAMEBUFFER,Ae.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ce,s.TEXTURE_2D,null,0);t.bindFramebuffer(s.READ_FRAMEBUFFER,Ae.__webglMultisampledFramebuffer),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,Ae.__webglFramebuffer);for(let Ce=0;Ce<R.length;Ce++){if(I.resolveDepthBuffer&&(I.depthBuffer&&(le|=s.DEPTH_BUFFER_BIT),I.stencilBuffer&&I.resolveStencilBuffer&&(le|=s.STENCIL_BUFFER_BIT)),Me){s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,Ae.__webglColorRenderbuffer[Ce]);const qe=n.get(R[Ce]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,qe,0)}s.blitFramebuffer(0,0,te,ae,0,0,te,ae,le,s.NEAREST),l===!0&&(ue.length=0,B.length=0,ue.push(s.COLOR_ATTACHMENT0+Ce),I.depthBuffer&&I.resolveDepthBuffer===!1&&(ue.push(pe),B.push(pe),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,B)),s.invalidateFramebuffer(s.READ_FRAMEBUFFER,ue))}if(t.bindFramebuffer(s.READ_FRAMEBUFFER,null),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),Me)for(let Ce=0;Ce<R.length;Ce++){t.bindFramebuffer(s.FRAMEBUFFER,Ae.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ce,s.RENDERBUFFER,Ae.__webglColorRenderbuffer[Ce]);const qe=n.get(R[Ce]).__webglTexture;t.bindFramebuffer(s.FRAMEBUFFER,Ae.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ce,s.TEXTURE_2D,qe,0)}t.bindFramebuffer(s.DRAW_FRAMEBUFFER,Ae.__webglMultisampledFramebuffer)}else if(I.depthBuffer&&I.resolveDepthBuffer===!1&&l){const R=I.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[R])}}}function de(I){return Math.min(i.maxSamples,I.samples)}function Ee(I){const R=n.get(I);return I.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&R.__useRenderToTexture!==!1}function ce(I){const R=o.render.frame;h.get(I)!==R&&(h.set(I,R),I.update())}function De(I,R){const te=I.colorSpace,ae=I.format,le=I.type;return I.isCompressedTexture===!0||I.isVideoTexture===!0||te!==eo&&te!==Rr&&(Lt.getTransfer(te)===Zt?(ae!==ui||le!==_r)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",te)),R}function be(I){return typeof HTMLImageElement<"u"&&I instanceof HTMLImageElement?(c.width=I.naturalWidth||I.width,c.height=I.naturalHeight||I.height):typeof VideoFrame<"u"&&I instanceof VideoFrame?(c.width=I.displayWidth,c.height=I.displayHeight):(c.width=I.width,c.height=I.height),c}this.allocateTextureUnit=k,this.resetTextureUnits=P,this.setTexture2D=K,this.setTexture2DArray=N,this.setTexture3D=Q,this.setTextureCube=Z,this.rebindTextures=ve,this.setupRenderTarget=_e,this.updateRenderTargetMipmap=ee,this.updateMultisampleRenderTarget=Se,this.setupDepthRenderbuffer=ge,this.setupFrameBufferTexture=q,this.useMultisampledRTT=Ee}function t_(s,e){function t(n,i=Rr){let r;const o=Lt.getTransfer(i);if(n===_r)return s.UNSIGNED_BYTE;if(n===Eh)return s.UNSIGNED_SHORT_4_4_4_4;if(n===Th)return s.UNSIGNED_SHORT_5_5_5_1;if(n===uf)return s.UNSIGNED_INT_5_9_9_9_REV;if(n===cf)return s.BYTE;if(n===hf)return s.SHORT;if(n===Vo)return s.UNSIGNED_SHORT;if(n===wh)return s.INT;if(n===Gr)return s.UNSIGNED_INT;if(n===Mi)return s.FLOAT;if(n===Yo)return s.HALF_FLOAT;if(n===df)return s.ALPHA;if(n===ff)return s.RGB;if(n===ui)return s.RGBA;if(n===pf)return s.LUMINANCE;if(n===mf)return s.LUMINANCE_ALPHA;if(n===Ys)return s.DEPTH_COMPONENT;if(n===$s)return s.DEPTH_STENCIL;if(n===Ah)return s.RED;if(n===al)return s.RED_INTEGER;if(n===gf)return s.RG;if(n===Ch)return s.RG_INTEGER;if(n===Rh)return s.RGBA_INTEGER;if(n===Ta||n===Aa||n===Ca||n===Ra)if(o===Zt)if(r=e.get("WEBGL_compressed_texture_s3tc_srgb"),r!==null){if(n===Ta)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Aa)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Ca)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===Ra)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(r=e.get("WEBGL_compressed_texture_s3tc"),r!==null){if(n===Ta)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Aa)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Ca)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===Ra)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===Gc||n===Vc||n===Hc||n===Wc)if(r=e.get("WEBGL_compressed_texture_pvrtc"),r!==null){if(n===Gc)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===Vc)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===Hc)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===Wc)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===Xc||n===Yc||n===qc)if(r=e.get("WEBGL_compressed_texture_etc"),r!==null){if(n===Xc||n===Yc)return o===Zt?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(n===qc)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===jc||n===Zc||n===Jc||n===Kc||n===Qc||n===$c||n===eh||n===th||n===nh||n===ih||n===rh||n===sh||n===oh||n===ah)if(r=e.get("WEBGL_compressed_texture_astc"),r!==null){if(n===jc)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===Zc)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Jc)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===Kc)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Qc)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===$c)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===eh)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===th)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===nh)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===ih)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===rh)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===sh)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===oh)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===ah)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===Pa||n===lh||n===ch)if(r=e.get("EXT_texture_compression_bptc"),r!==null){if(n===Pa)return o===Zt?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===lh)return r.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===ch)return r.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===vf||n===hh||n===uh||n===dh)if(r=e.get("EXT_texture_compression_rgtc"),r!==null){if(n===Pa)return r.COMPRESSED_RED_RGTC1_EXT;if(n===hh)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===uh)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===dh)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===Qs?s.UNSIGNED_INT_24_8:s[n]!==void 0?s[n]:null}return{convert:t}}const wT=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,ET=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class TT{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const i=new pn,r=e.properties.get(i);r.__webglTexture=t.texture,(t.depthNear!==n.depthNear||t.depthFar!==n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=i}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,n=new Ei({vertexShader:wT,fragmentShader:ET,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new ke(new sr(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class AT extends br{constructor(e,t){super();const n=this;let i=null,r=1,o=null,a="local-floor",l=1,c=null,h=null,u=null,d=null,f=null,p=null;const v=new TT,g=t.getContextAttributes();let m=null,x=null;const y=[],_=[],E=new xe;let w=null;const M=new bn;M.viewport=new Rt;const T=new bn;T.viewport=new Rt;const S=[M,T],b=new Wv;let D=null,P=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(G){let W=y[G];return W===void 0&&(W=new Tc,y[G]=W),W.getTargetRaySpace()},this.getControllerGrip=function(G){let W=y[G];return W===void 0&&(W=new Tc,y[G]=W),W.getGripSpace()},this.getHand=function(G){let W=y[G];return W===void 0&&(W=new Tc,y[G]=W),W.getHandSpace()};function k(G){const W=_.indexOf(G.inputSource);if(W===-1)return;const q=y[W];q!==void 0&&(q.update(G.inputSource,G.frame,c||o),q.dispatchEvent({type:G.type,data:G.inputSource}))}function V(){i.removeEventListener("select",k),i.removeEventListener("selectstart",k),i.removeEventListener("selectend",k),i.removeEventListener("squeeze",k),i.removeEventListener("squeezestart",k),i.removeEventListener("squeezeend",k),i.removeEventListener("end",V),i.removeEventListener("inputsourceschange",K);for(let G=0;G<y.length;G++){const W=_[G];W!==null&&(_[G]=null,y[G].disconnect(W))}D=null,P=null,v.reset(),e.setRenderTarget(m),f=null,d=null,u=null,i=null,x=null,$.stop(),n.isPresenting=!1,e.setPixelRatio(w),e.setSize(E.width,E.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(G){r=G,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(G){a=G,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||o},this.setReferenceSpace=function(G){c=G},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return u},this.getFrame=function(){return p},this.getSession=function(){return i},this.setSession=async function(G){if(i=G,i!==null){if(m=e.getRenderTarget(),i.addEventListener("select",k),i.addEventListener("selectstart",k),i.addEventListener("selectend",k),i.addEventListener("squeeze",k),i.addEventListener("squeezestart",k),i.addEventListener("squeezeend",k),i.addEventListener("end",V),i.addEventListener("inputsourceschange",K),g.xrCompatible!==!0&&await t.makeXRCompatible(),w=e.getPixelRatio(),e.getSize(E),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let q=null,Y=null,ne=null;g.depth&&(ne=g.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,q=g.stencil?$s:Ys,Y=g.stencil?Qs:Gr);const ge={colorFormat:t.RGBA8,depthFormat:ne,scaleFactor:r};u=new XRWebGLBinding(i,t),d=u.createProjectionLayer(ge),i.updateRenderState({layers:[d]}),e.setPixelRatio(1),e.setSize(d.textureWidth,d.textureHeight,!1),x=new Yi(d.textureWidth,d.textureHeight,{format:ui,type:_r,depthTexture:new Tf(d.textureWidth,d.textureHeight,Y,void 0,void 0,void 0,void 0,void 0,void 0,q),stencilBuffer:g.stencil,colorSpace:e.outputColorSpace,samples:g.antialias?4:0,resolveDepthBuffer:d.ignoreDepthValues===!1})}else{const q={antialias:g.antialias,alpha:!0,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:r};f=new XRWebGLLayer(i,t,q),i.updateRenderState({baseLayer:f}),e.setPixelRatio(1),e.setSize(f.framebufferWidth,f.framebufferHeight,!1),x=new Yi(f.framebufferWidth,f.framebufferHeight,{format:ui,type:_r,colorSpace:e.outputColorSpace,stencilBuffer:g.stencil})}x.isXRRenderTarget=!0,this.setFoveation(l),c=null,o=await i.requestReferenceSpace(a),$.setContext(i),$.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode},this.getDepthTexture=function(){return v.getDepthTexture()};function K(G){for(let W=0;W<G.removed.length;W++){const q=G.removed[W],Y=_.indexOf(q);Y>=0&&(_[Y]=null,y[Y].disconnect(q))}for(let W=0;W<G.added.length;W++){const q=G.added[W];let Y=_.indexOf(q);if(Y===-1){for(let ge=0;ge<y.length;ge++)if(ge>=_.length){_.push(q),Y=ge;break}else if(_[ge]===null){_[ge]=q,Y=ge;break}if(Y===-1)break}const ne=y[Y];ne&&ne.connect(q)}}const N=new L,Q=new L;function Z(G,W,q){N.setFromMatrixPosition(W.matrixWorld),Q.setFromMatrixPosition(q.matrixWorld);const Y=N.distanceTo(Q),ne=W.projectionMatrix.elements,ge=q.projectionMatrix.elements,ve=ne[14]/(ne[10]-1),_e=ne[14]/(ne[10]+1),ee=(ne[9]+1)/ne[5],ue=(ne[9]-1)/ne[5],B=(ne[8]-1)/ne[0],Se=(ge[8]+1)/ge[0],de=ve*B,Ee=ve*Se,ce=Y/(-B+Se),De=ce*-B;if(W.matrixWorld.decompose(G.position,G.quaternion,G.scale),G.translateX(De),G.translateZ(ce),G.matrixWorld.compose(G.position,G.quaternion,G.scale),G.matrixWorldInverse.copy(G.matrixWorld).invert(),ne[10]===-1)G.projectionMatrix.copy(W.projectionMatrix),G.projectionMatrixInverse.copy(W.projectionMatrixInverse);else{const be=ve+ce,I=_e+ce,R=de-De,te=Ee+(Y-De),ae=ee*_e/I*be,le=ue*_e/I*be;G.projectionMatrix.makePerspective(R,te,ae,le,be,I),G.projectionMatrixInverse.copy(G.projectionMatrix).invert()}}function j(G,W){W===null?G.matrixWorld.copy(G.matrix):G.matrixWorld.multiplyMatrices(W.matrixWorld,G.matrix),G.matrixWorldInverse.copy(G.matrixWorld).invert()}this.updateCamera=function(G){if(i===null)return;let W=G.near,q=G.far;v.texture!==null&&(v.depthNear>0&&(W=v.depthNear),v.depthFar>0&&(q=v.depthFar)),b.near=T.near=M.near=W,b.far=T.far=M.far=q,(D!==b.near||P!==b.far)&&(i.updateRenderState({depthNear:b.near,depthFar:b.far}),D=b.near,P=b.far),M.layers.mask=G.layers.mask|2,T.layers.mask=G.layers.mask|4,b.layers.mask=M.layers.mask|T.layers.mask;const Y=G.parent,ne=b.cameras;j(b,Y);for(let ge=0;ge<ne.length;ge++)j(ne[ge],Y);ne.length===2?Z(b,M,T):b.projectionMatrix.copy(M.projectionMatrix),X(G,b,Y)};function X(G,W,q){q===null?G.matrix.copy(W.matrixWorld):(G.matrix.copy(q.matrixWorld),G.matrix.invert(),G.matrix.multiply(W.matrixWorld)),G.matrix.decompose(G.position,G.quaternion,G.scale),G.updateMatrixWorld(!0),G.projectionMatrix.copy(W.projectionMatrix),G.projectionMatrixInverse.copy(W.projectionMatrixInverse),G.isPerspectiveCamera&&(G.fov=Ho*2*Math.atan(1/G.projectionMatrix.elements[5]),G.zoom=1)}this.getCamera=function(){return b},this.getFoveation=function(){if(!(d===null&&f===null))return l},this.setFoveation=function(G){l=G,d!==null&&(d.fixedFoveation=G),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=G)},this.hasDepthSensing=function(){return v.texture!==null},this.getDepthSensingMesh=function(){return v.getMesh(b)};let F=null;function J(G,W){if(h=W.getViewerPose(c||o),p=W,h!==null){const q=h.views;f!==null&&(e.setRenderTargetFramebuffer(x,f.framebuffer),e.setRenderTarget(x));let Y=!1;q.length!==b.cameras.length&&(b.cameras.length=0,Y=!0);for(let ve=0;ve<q.length;ve++){const _e=q[ve];let ee=null;if(f!==null)ee=f.getViewport(_e);else{const B=u.getViewSubImage(d,_e);ee=B.viewport,ve===0&&(e.setRenderTargetTextures(x,B.colorTexture,d.ignoreDepthValues?void 0:B.depthStencilTexture),e.setRenderTarget(x))}let ue=S[ve];ue===void 0&&(ue=new bn,ue.layers.enable(ve),ue.viewport=new Rt,S[ve]=ue),ue.matrix.fromArray(_e.transform.matrix),ue.matrix.decompose(ue.position,ue.quaternion,ue.scale),ue.projectionMatrix.fromArray(_e.projectionMatrix),ue.projectionMatrixInverse.copy(ue.projectionMatrix).invert(),ue.viewport.set(ee.x,ee.y,ee.width,ee.height),ve===0&&(b.matrix.copy(ue.matrix),b.matrix.decompose(b.position,b.quaternion,b.scale)),Y===!0&&b.cameras.push(ue)}const ne=i.enabledFeatures;if(ne&&ne.includes("depth-sensing")&&i.depthUsage=="gpu-optimized"&&u){const ve=u.getDepthInformation(q[0]);ve&&ve.isValid&&ve.texture&&v.init(e,ve,i.renderState)}}for(let q=0;q<y.length;q++){const Y=_[q],ne=y[q];Y!==null&&ne!==void 0&&ne.update(Y,W,c||o)}F&&F(G,W),W.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:W}),p=null}const $=new Jv;$.setAnimationLoop(J),this.setAnimationLoop=function(G){F=G},this.dispose=function(){}}}const As=new wi,CT=new st;function RT(s,e){function t(g,m){g.matrixAutoUpdate===!0&&g.updateMatrix(),m.value.copy(g.matrix)}function n(g,m){m.color.getRGB(g.fogColor.value,sv(s)),m.isFog?(g.fogNear.value=m.near,g.fogFar.value=m.far):m.isFogExp2&&(g.fogDensity.value=m.density)}function i(g,m,x,y,_){m.isMeshBasicMaterial||m.isMeshLambertMaterial?r(g,m):m.isMeshToonMaterial?(r(g,m),u(g,m)):m.isMeshPhongMaterial?(r(g,m),h(g,m)):m.isMeshStandardMaterial?(r(g,m),d(g,m),m.isMeshPhysicalMaterial&&f(g,m,_)):m.isMeshMatcapMaterial?(r(g,m),p(g,m)):m.isMeshDepthMaterial?r(g,m):m.isMeshDistanceMaterial?(r(g,m),v(g,m)):m.isMeshNormalMaterial?r(g,m):m.isLineBasicMaterial?(o(g,m),m.isLineDashedMaterial&&a(g,m)):m.isPointsMaterial?l(g,m,x,y):m.isSpriteMaterial?c(g,m):m.isShadowMaterial?(g.color.value.copy(m.color),g.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function r(g,m){g.opacity.value=m.opacity,m.color&&g.diffuse.value.copy(m.color),m.emissive&&g.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(g.map.value=m.map,t(m.map,g.mapTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,t(m.alphaMap,g.alphaMapTransform)),m.bumpMap&&(g.bumpMap.value=m.bumpMap,t(m.bumpMap,g.bumpMapTransform),g.bumpScale.value=m.bumpScale,m.side===ni&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,t(m.normalMap,g.normalMapTransform),g.normalScale.value.copy(m.normalScale),m.side===ni&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,t(m.displacementMap,g.displacementMapTransform),g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap,t(m.emissiveMap,g.emissiveMapTransform)),m.specularMap&&(g.specularMap.value=m.specularMap,t(m.specularMap,g.specularMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);const x=e.get(m),y=x.envMap,_=x.envMapRotation;y&&(g.envMap.value=y,As.copy(_),As.x*=-1,As.y*=-1,As.z*=-1,y.isCubeTexture&&y.isRenderTargetTexture===!1&&(As.y*=-1,As.z*=-1),g.envMapRotation.value.setFromMatrix4(CT.makeRotationFromEuler(As)),g.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=m.reflectivity,g.ior.value=m.ior,g.refractionRatio.value=m.refractionRatio),m.lightMap&&(g.lightMap.value=m.lightMap,g.lightMapIntensity.value=m.lightMapIntensity,t(m.lightMap,g.lightMapTransform)),m.aoMap&&(g.aoMap.value=m.aoMap,g.aoMapIntensity.value=m.aoMapIntensity,t(m.aoMap,g.aoMapTransform))}function o(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,m.map&&(g.map.value=m.map,t(m.map,g.mapTransform))}function a(g,m){g.dashSize.value=m.dashSize,g.totalSize.value=m.dashSize+m.gapSize,g.scale.value=m.scale}function l(g,m,x,y){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.size.value=m.size*x,g.scale.value=y*.5,m.map&&(g.map.value=m.map,t(m.map,g.uvTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,t(m.alphaMap,g.alphaMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest)}function c(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.rotation.value=m.rotation,m.map&&(g.map.value=m.map,t(m.map,g.mapTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,t(m.alphaMap,g.alphaMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest)}function h(g,m){g.specular.value.copy(m.specular),g.shininess.value=Math.max(m.shininess,1e-4)}function u(g,m){m.gradientMap&&(g.gradientMap.value=m.gradientMap)}function d(g,m){g.metalness.value=m.metalness,m.metalnessMap&&(g.metalnessMap.value=m.metalnessMap,t(m.metalnessMap,g.metalnessMapTransform)),g.roughness.value=m.roughness,m.roughnessMap&&(g.roughnessMap.value=m.roughnessMap,t(m.roughnessMap,g.roughnessMapTransform)),m.envMap&&(g.envMapIntensity.value=m.envMapIntensity)}function f(g,m,x){g.ior.value=m.ior,m.sheen>0&&(g.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),g.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(g.sheenColorMap.value=m.sheenColorMap,t(m.sheenColorMap,g.sheenColorMapTransform)),m.sheenRoughnessMap&&(g.sheenRoughnessMap.value=m.sheenRoughnessMap,t(m.sheenRoughnessMap,g.sheenRoughnessMapTransform))),m.clearcoat>0&&(g.clearcoat.value=m.clearcoat,g.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(g.clearcoatMap.value=m.clearcoatMap,t(m.clearcoatMap,g.clearcoatMapTransform)),m.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap,t(m.clearcoatRoughnessMap,g.clearcoatRoughnessMapTransform)),m.clearcoatNormalMap&&(g.clearcoatNormalMap.value=m.clearcoatNormalMap,t(m.clearcoatNormalMap,g.clearcoatNormalMapTransform),g.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),m.side===ni&&g.clearcoatNormalScale.value.negate())),m.dispersion>0&&(g.dispersion.value=m.dispersion),m.iridescence>0&&(g.iridescence.value=m.iridescence,g.iridescenceIOR.value=m.iridescenceIOR,g.iridescenceThicknessMinimum.value=m.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=m.iridescenceThicknessRange[1],m.iridescenceMap&&(g.iridescenceMap.value=m.iridescenceMap,t(m.iridescenceMap,g.iridescenceMapTransform)),m.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=m.iridescenceThicknessMap,t(m.iridescenceThicknessMap,g.iridescenceThicknessMapTransform))),m.transmission>0&&(g.transmission.value=m.transmission,g.transmissionSamplerMap.value=x.texture,g.transmissionSamplerSize.value.set(x.width,x.height),m.transmissionMap&&(g.transmissionMap.value=m.transmissionMap,t(m.transmissionMap,g.transmissionMapTransform)),g.thickness.value=m.thickness,m.thicknessMap&&(g.thicknessMap.value=m.thicknessMap,t(m.thicknessMap,g.thicknessMapTransform)),g.attenuationDistance.value=m.attenuationDistance,g.attenuationColor.value.copy(m.attenuationColor)),m.anisotropy>0&&(g.anisotropyVector.value.set(m.anisotropy*Math.cos(m.anisotropyRotation),m.anisotropy*Math.sin(m.anisotropyRotation)),m.anisotropyMap&&(g.anisotropyMap.value=m.anisotropyMap,t(m.anisotropyMap,g.anisotropyMapTransform))),g.specularIntensity.value=m.specularIntensity,g.specularColor.value.copy(m.specularColor),m.specularColorMap&&(g.specularColorMap.value=m.specularColorMap,t(m.specularColorMap,g.specularColorMapTransform)),m.specularIntensityMap&&(g.specularIntensityMap.value=m.specularIntensityMap,t(m.specularIntensityMap,g.specularIntensityMapTransform))}function p(g,m){m.matcap&&(g.matcap.value=m.matcap)}function v(g,m){const x=e.get(m).light;g.referencePosition.value.setFromMatrixPosition(x.matrixWorld),g.nearDistance.value=x.shadow.camera.near,g.farDistance.value=x.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function PT(s,e,t,n){let i={},r={},o=[];const a=s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS);function l(x,y){const _=y.program;n.uniformBlockBinding(x,_)}function c(x,y){let _=i[x.id];_===void 0&&(p(x),_=h(x),i[x.id]=_,x.addEventListener("dispose",g));const E=y.program;n.updateUBOMapping(x,E);const w=e.render.frame;r[x.id]!==w&&(d(x),r[x.id]=w)}function h(x){const y=u();x.__bindingPointIndex=y;const _=s.createBuffer(),E=x.__size,w=x.usage;return s.bindBuffer(s.UNIFORM_BUFFER,_),s.bufferData(s.UNIFORM_BUFFER,E,w),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,y,_),_}function u(){for(let x=0;x<a;x++)if(o.indexOf(x)===-1)return o.push(x),x;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(x){const y=i[x.id],_=x.uniforms,E=x.__cache;s.bindBuffer(s.UNIFORM_BUFFER,y);for(let w=0,M=_.length;w<M;w++){const T=Array.isArray(_[w])?_[w]:[_[w]];for(let S=0,b=T.length;S<b;S++){const D=T[S];if(f(D,w,S,E)===!0){const P=D.__offset,k=Array.isArray(D.value)?D.value:[D.value];let V=0;for(let K=0;K<k.length;K++){const N=k[K],Q=v(N);typeof N=="number"||typeof N=="boolean"?(D.__data[0]=N,s.bufferSubData(s.UNIFORM_BUFFER,P+V,D.__data)):N.isMatrix3?(D.__data[0]=N.elements[0],D.__data[1]=N.elements[1],D.__data[2]=N.elements[2],D.__data[3]=0,D.__data[4]=N.elements[3],D.__data[5]=N.elements[4],D.__data[6]=N.elements[5],D.__data[7]=0,D.__data[8]=N.elements[6],D.__data[9]=N.elements[7],D.__data[10]=N.elements[8],D.__data[11]=0):(N.toArray(D.__data,V),V+=Q.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,P,D.__data)}}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function f(x,y,_,E){const w=x.value,M=y+"_"+_;if(E[M]===void 0)return typeof w=="number"||typeof w=="boolean"?E[M]=w:E[M]=w.clone(),!0;{const T=E[M];if(typeof w=="number"||typeof w=="boolean"){if(T!==w)return E[M]=w,!0}else if(T.equals(w)===!1)return T.copy(w),!0}return!1}function p(x){const y=x.uniforms;let _=0;const E=16;for(let M=0,T=y.length;M<T;M++){const S=Array.isArray(y[M])?y[M]:[y[M]];for(let b=0,D=S.length;b<D;b++){const P=S[b],k=Array.isArray(P.value)?P.value:[P.value];for(let V=0,K=k.length;V<K;V++){const N=k[V],Q=v(N),Z=_%E,j=Z%Q.boundary,X=Z+j;_+=j,X!==0&&E-X<Q.storage&&(_+=E-X),P.__data=new Float32Array(Q.storage/Float32Array.BYTES_PER_ELEMENT),P.__offset=_,_+=Q.storage}}}const w=_%E;return w>0&&(_+=E-w),x.__size=_,x.__cache={},this}function v(x){const y={boundary:0,storage:0};return typeof x=="number"||typeof x=="boolean"?(y.boundary=4,y.storage=4):x.isVector2?(y.boundary=8,y.storage=8):x.isVector3||x.isColor?(y.boundary=16,y.storage=12):x.isVector4?(y.boundary=16,y.storage=16):x.isMatrix3?(y.boundary=48,y.storage=48):x.isMatrix4?(y.boundary=64,y.storage=64):x.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",x),y}function g(x){const y=x.target;y.removeEventListener("dispose",g);const _=o.indexOf(y.__bindingPointIndex);o.splice(_,1),s.deleteBuffer(i[y.id]),delete i[y.id],delete r[y.id]}function m(){for(const x in i)s.deleteBuffer(i[x]);o=[],i={},r={}}return{bind:l,update:c,dispose:m}}class Qf{constructor(e={}){const{canvas:t=nv(),context:n=null,depth:i=!0,stencil:r=!1,alpha:o=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:u=!1,reverseDepthBuffer:d=!1}=e;this.isWebGLRenderer=!0;let f;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");f=n.getContextAttributes().alpha}else f=o;const p=new Uint32Array(4),v=new Int32Array(4);let g=null,m=null;const x=[],y=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=ln,this.toneMapping=pr,this.toneMappingExposure=1;const _=this;let E=!1,w=0,M=0,T=null,S=-1,b=null;const D=new Rt,P=new Rt;let k=null;const V=new Ge(0);let K=0,N=t.width,Q=t.height,Z=1,j=null,X=null;const F=new Rt(0,0,N,Q),J=new Rt(0,0,N,Q);let $=!1;const G=new fl;let W=!1,q=!1;this.transmissionResolutionScale=1;const Y=new st,ne=new st,ge=new L,ve=new Rt,_e={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let ee=!1;function ue(){return T===null?Z:1}let B=n;function Se(O,se){return t.getContext(O,se)}try{const O={alpha:!0,depth:i,stencil:r,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:h,failIfMajorPerformanceCaveat:u};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${sl}`),t.addEventListener("webglcontextlost",Ie,!1),t.addEventListener("webglcontextrestored",Oe,!1),t.addEventListener("webglcontextcreationerror",Le,!1),B===null){const se="webgl2";if(B=Se(se,O),B===null)throw Se(se)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(O){throw console.error("THREE.WebGLRenderer: "+O.message),O}let de,Ee,ce,De,be,I,R,te,ae,le,pe,Ae,Me,Ce,qe,Re,ze,Be,He,Pe,ut,tt,wt,ie;function Te(){de=new Vw(B),de.init(),tt=new t_(B,de),Ee=new Ow(B,de,e,tt),ce=new ST(B,de),Ee.reverseDepthBuffer&&d&&ce.buffers.depth.setReversed(!0),De=new Xw(B),be=new cT,I=new MT(B,de,ce,be,Ee,tt,De),R=new kw(_),te=new Gw(_),ae=new Q1(B),wt=new Uw(B,ae),le=new Hw(B,ae,De,wt),pe=new qw(B,le,ae,De),He=new Yw(B,Ee,I),Re=new Fw(be),Ae=new lT(_,R,te,de,Ee,wt,Re),Me=new RT(_,be),Ce=new uT,qe=new vT(de),Be=new Lw(_,R,te,ce,pe,f,l),ze=new xT(_,pe,Ee),ie=new PT(B,De,Ee,ce),Pe=new Nw(B,de,De),ut=new Ww(B,de,De),De.programs=Ae.programs,_.capabilities=Ee,_.extensions=de,_.properties=be,_.renderLists=Ce,_.shadowMap=ze,_.state=ce,_.info=De}Te();const he=new AT(_,B);this.xr=he,this.getContext=function(){return B},this.getContextAttributes=function(){return B.getContextAttributes()},this.forceContextLoss=function(){const O=de.get("WEBGL_lose_context");O&&O.loseContext()},this.forceContextRestore=function(){const O=de.get("WEBGL_lose_context");O&&O.restoreContext()},this.getPixelRatio=function(){return Z},this.setPixelRatio=function(O){O!==void 0&&(Z=O,this.setSize(N,Q,!1))},this.getSize=function(O){return O.set(N,Q)},this.setSize=function(O,se,fe=!0){if(he.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}N=O,Q=se,t.width=Math.floor(O*Z),t.height=Math.floor(se*Z),fe===!0&&(t.style.width=O+"px",t.style.height=se+"px"),this.setViewport(0,0,O,se)},this.getDrawingBufferSize=function(O){return O.set(N*Z,Q*Z).floor()},this.setDrawingBufferSize=function(O,se,fe){N=O,Q=se,Z=fe,t.width=Math.floor(O*fe),t.height=Math.floor(se*fe),this.setViewport(0,0,O,se)},this.getCurrentViewport=function(O){return O.copy(D)},this.getViewport=function(O){return O.copy(F)},this.setViewport=function(O,se,fe,re){O.isVector4?F.set(O.x,O.y,O.z,O.w):F.set(O,se,fe,re),ce.viewport(D.copy(F).multiplyScalar(Z).round())},this.getScissor=function(O){return O.copy(J)},this.setScissor=function(O,se,fe,re){O.isVector4?J.set(O.x,O.y,O.z,O.w):J.set(O,se,fe,re),ce.scissor(P.copy(J).multiplyScalar(Z).round())},this.getScissorTest=function(){return $},this.setScissorTest=function(O){ce.setScissorTest($=O)},this.setOpaqueSort=function(O){j=O},this.setTransparentSort=function(O){X=O},this.getClearColor=function(O){return O.copy(Be.getClearColor())},this.setClearColor=function(){Be.setClearColor.apply(Be,arguments)},this.getClearAlpha=function(){return Be.getClearAlpha()},this.setClearAlpha=function(){Be.setClearAlpha.apply(Be,arguments)},this.clear=function(O=!0,se=!0,fe=!0){let re=0;if(O){let oe=!1;if(T!==null){const Fe=T.texture.format;oe=Fe===Rh||Fe===Ch||Fe===al}if(oe){const Fe=T.texture.type,We=Fe===_r||Fe===Gr||Fe===Vo||Fe===Qs||Fe===Eh||Fe===Th,Qe=Be.getClearColor(),et=Be.getClearAlpha(),yt=Qe.r,mt=Qe.g,ht=Qe.b;We?(p[0]=yt,p[1]=mt,p[2]=ht,p[3]=et,B.clearBufferuiv(B.COLOR,0,p)):(v[0]=yt,v[1]=mt,v[2]=ht,v[3]=et,B.clearBufferiv(B.COLOR,0,v))}else re|=B.COLOR_BUFFER_BIT}se&&(re|=B.DEPTH_BUFFER_BIT),fe&&(re|=B.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),B.clear(re)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ie,!1),t.removeEventListener("webglcontextrestored",Oe,!1),t.removeEventListener("webglcontextcreationerror",Le,!1),Be.dispose(),Ce.dispose(),qe.dispose(),be.dispose(),R.dispose(),te.dispose(),pe.dispose(),wt.dispose(),ie.dispose(),Ae.dispose(),he.dispose(),he.removeEventListener("sessionstart",sn),he.removeEventListener("sessionend",jn),In.stop()};function Ie(O){O.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),E=!0}function Oe(){console.log("THREE.WebGLRenderer: Context Restored."),E=!1;const O=De.autoReset,se=ze.enabled,fe=ze.autoUpdate,re=ze.needsUpdate,oe=ze.type;Te(),De.autoReset=O,ze.enabled=se,ze.autoUpdate=fe,ze.needsUpdate=re,ze.type=oe}function Le(O){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",O.statusMessage)}function ot(O){const se=O.target;se.removeEventListener("dispose",ot),xt(se)}function xt(O){ct(O),be.remove(O)}function ct(O){const se=be.get(O).programs;se!==void 0&&(se.forEach(function(fe){Ae.releaseProgram(fe)}),O.isShaderMaterial&&Ae.releaseShaderCache(O))}this.renderBufferDirect=function(O,se,fe,re,oe,Fe){se===null&&(se=_e);const We=oe.isMesh&&oe.matrixWorld.determinant()<0,Qe=Ko(O,se,fe,re,oe);ce.setMaterial(re,We);let et=fe.index,yt=1;if(re.wireframe===!0){if(et=le.getWireframeAttribute(fe),et===void 0)return;yt=2}const mt=fe.drawRange,ht=fe.attributes.position;let At=mt.start*yt,Ft=(mt.start+mt.count)*yt;Fe!==null&&(At=Math.max(At,Fe.start*yt),Ft=Math.min(Ft,(Fe.start+Fe.count)*yt)),et!==null?(At=Math.max(At,0),Ft=Math.min(Ft,et.count)):ht!=null&&(At=Math.max(At,0),Ft=Math.min(Ft,ht.count));const rn=Ft-At;if(rn<0||rn===1/0)return;wt.setup(oe,re,Qe,fe,et);let Kt,Ut=Pe;if(et!==null&&(Kt=ae.get(et),Ut=ut,Ut.setIndex(Kt)),oe.isMesh)re.wireframe===!0?(ce.setLineWidth(re.wireframeLinewidth*ue()),Ut.setMode(B.LINES)):Ut.setMode(B.TRIANGLES);else if(oe.isLine){let dt=re.linewidth;dt===void 0&&(dt=1),ce.setLineWidth(dt*ue()),oe.isLineSegments?Ut.setMode(B.LINES):oe.isLineLoop?Ut.setMode(B.LINE_LOOP):Ut.setMode(B.LINE_STRIP)}else oe.isPoints?Ut.setMode(B.POINTS):oe.isSprite&&Ut.setMode(B.TRIANGLES);if(oe.isBatchedMesh)if(oe._multiDrawInstances!==null)Ut.renderMultiDrawInstances(oe._multiDrawStarts,oe._multiDrawCounts,oe._multiDrawCount,oe._multiDrawInstances);else if(de.get("WEBGL_multi_draw"))Ut.renderMultiDraw(oe._multiDrawStarts,oe._multiDrawCounts,oe._multiDrawCount);else{const dt=oe._multiDrawStarts,cn=oe._multiDrawCounts,It=oe._multiDrawCount,Dn=et?ae.get(et).bytesPerElement:1,qt=be.get(re).currentProgram.getUniforms();for(let yn=0;yn<It;yn++)qt.setValue(B,"_gl_DrawID",yn),Ut.render(dt[yn]/Dn,cn[yn])}else if(oe.isInstancedMesh)Ut.renderInstances(At,rn,oe.count);else if(fe.isInstancedBufferGeometry){const dt=fe._maxInstanceCount!==void 0?fe._maxInstanceCount:1/0,cn=Math.min(fe.instanceCount,dt);Ut.renderInstances(At,rn,cn)}else Ut.render(At,rn)};function rt(O,se,fe){O.transparent===!0&&O.side===xi&&O.forceSinglePass===!1?(O.side=ni,O.needsUpdate=!0,di(O,se,fe),O.side=vr,O.needsUpdate=!0,di(O,se,fe),O.side=xi):di(O,se,fe)}this.compile=function(O,se,fe=null){fe===null&&(fe=O),m=qe.get(fe),m.init(se),y.push(m),fe.traverseVisible(function(oe){oe.isLight&&oe.layers.test(se.layers)&&(m.pushLight(oe),oe.castShadow&&m.pushShadow(oe))}),O!==fe&&O.traverseVisible(function(oe){oe.isLight&&oe.layers.test(se.layers)&&(m.pushLight(oe),oe.castShadow&&m.pushShadow(oe))}),m.setupLights();const re=new Set;return O.traverse(function(oe){if(!(oe.isMesh||oe.isPoints||oe.isLine||oe.isSprite))return;const Fe=oe.material;if(Fe)if(Array.isArray(Fe))for(let We=0;We<Fe.length;We++){const Qe=Fe[We];rt(Qe,fe,oe),re.add(Qe)}else rt(Fe,fe,oe),re.add(Fe)}),y.pop(),m=null,re},this.compileAsync=function(O,se,fe=null){const re=this.compile(O,se,fe);return new Promise(oe=>{function Fe(){if(re.forEach(function(We){be.get(We).currentProgram.isReady()&&re.delete(We)}),re.size===0){oe(O);return}setTimeout(Fe,10)}de.get("KHR_parallel_shader_compile")!==null?Fe():setTimeout(Fe,10)})};let Yt=null;function Jt(O){Yt&&Yt(O)}function sn(){In.stop()}function jn(){In.start()}const In=new Jv;In.setAnimationLoop(Jt),typeof self<"u"&&In.setContext(self),this.setAnimationLoop=function(O){Yt=O,he.setAnimationLoop(O),O===null?In.stop():In.start()},he.addEventListener("sessionstart",sn),he.addEventListener("sessionend",jn),this.render=function(O,se){if(se!==void 0&&se.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(E===!0)return;if(O.matrixWorldAutoUpdate===!0&&O.updateMatrixWorld(),se.parent===null&&se.matrixWorldAutoUpdate===!0&&se.updateMatrixWorld(),he.enabled===!0&&he.isPresenting===!0&&(he.cameraAutoUpdate===!0&&he.updateCamera(se),se=he.getCamera()),O.isScene===!0&&O.onBeforeRender(_,O,se,T),m=qe.get(O,y.length),m.init(se),y.push(m),ne.multiplyMatrices(se.projectionMatrix,se.matrixWorldInverse),G.setFromProjectionMatrix(ne),q=this.localClippingEnabled,W=Re.init(this.clippingPlanes,q),g=Ce.get(O,x.length),g.init(),x.push(g),he.enabled===!0&&he.isPresenting===!0){const Fe=_.xr.getDepthSensingMesh();Fe!==null&&si(Fe,se,-1/0,_.sortObjects)}si(O,se,0,_.sortObjects),g.finish(),_.sortObjects===!0&&g.sort(j,X),ee=he.enabled===!1||he.isPresenting===!1||he.hasDepthSensing()===!1,ee&&Be.addToRenderList(g,O),this.info.render.frame++,W===!0&&Re.beginShadows();const fe=m.state.shadowsArray;ze.render(fe,O,se),W===!0&&Re.endShadows(),this.info.autoReset===!0&&this.info.reset();const re=g.opaque,oe=g.transmissive;if(m.setupLights(),se.isArrayCamera){const Fe=se.cameras;if(oe.length>0)for(let We=0,Qe=Fe.length;We<Qe;We++){const et=Fe[We];Ci(re,oe,O,et)}ee&&Be.render(O);for(let We=0,Qe=Fe.length;We<Qe;We++){const et=Fe[We];Ai(g,O,et,et.viewport)}}else oe.length>0&&Ci(re,oe,O,se),ee&&Be.render(O),Ai(g,O,se);T!==null&&M===0&&(I.updateMultisampleRenderTarget(T),I.updateRenderTargetMipmap(T)),O.isScene===!0&&O.onAfterRender(_,O,se),wt.resetDefaultState(),S=-1,b=null,y.pop(),y.length>0?(m=y[y.length-1],W===!0&&Re.setGlobalState(_.clippingPlanes,m.state.camera)):m=null,x.pop(),x.length>0?g=x[x.length-1]:g=null};function si(O,se,fe,re){if(O.visible===!1)return;if(O.layers.test(se.layers)){if(O.isGroup)fe=O.renderOrder;else if(O.isLOD)O.autoUpdate===!0&&O.update(se);else if(O.isLight)m.pushLight(O),O.castShadow&&m.pushShadow(O);else if(O.isSprite){if(!O.frustumCulled||G.intersectsSprite(O)){re&&ve.setFromMatrixPosition(O.matrixWorld).applyMatrix4(ne);const We=pe.update(O),Qe=O.material;Qe.visible&&g.push(O,We,Qe,fe,ve.z,null)}}else if((O.isMesh||O.isLine||O.isPoints)&&(!O.frustumCulled||G.intersectsObject(O))){const We=pe.update(O),Qe=O.material;if(re&&(O.boundingSphere!==void 0?(O.boundingSphere===null&&O.computeBoundingSphere(),ve.copy(O.boundingSphere.center)):(We.boundingSphere===null&&We.computeBoundingSphere(),ve.copy(We.boundingSphere.center)),ve.applyMatrix4(O.matrixWorld).applyMatrix4(ne)),Array.isArray(Qe)){const et=We.groups;for(let yt=0,mt=et.length;yt<mt;yt++){const ht=et[yt],At=Qe[ht.materialIndex];At&&At.visible&&g.push(O,We,At,fe,ve.z,ht)}}else Qe.visible&&g.push(O,We,Qe,fe,ve.z,null)}}const Fe=O.children;for(let We=0,Qe=Fe.length;We<Qe;We++)si(Fe[We],se,fe,re)}function Ai(O,se,fe,re){const oe=O.opaque,Fe=O.transmissive,We=O.transparent;m.setupLightsView(fe),W===!0&&Re.setGlobalState(_.clippingPlanes,fe),re&&ce.viewport(D.copy(re)),oe.length>0&&Zn(oe,se,fe),Fe.length>0&&Zn(Fe,se,fe),We.length>0&&Zn(We,se,fe),ce.buffers.depth.setTest(!0),ce.buffers.depth.setMask(!0),ce.buffers.color.setMask(!0),ce.setPolygonOffset(!1)}function Ci(O,se,fe,re){if((fe.isScene===!0?fe.overrideMaterial:null)!==null)return;m.state.transmissionRenderTarget[re.id]===void 0&&(m.state.transmissionRenderTarget[re.id]=new Yi(1,1,{generateMipmaps:!0,type:de.has("EXT_color_buffer_half_float")||de.has("EXT_color_buffer_float")?Yo:_r,minFilter:er,samples:4,stencilBuffer:r,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Lt.workingColorSpace}));const Fe=m.state.transmissionRenderTarget[re.id],We=re.viewport||D;Fe.setSize(We.z*_.transmissionResolutionScale,We.w*_.transmissionResolutionScale);const Qe=_.getRenderTarget();_.setRenderTarget(Fe),_.getClearColor(V),K=_.getClearAlpha(),K<1&&_.setClearColor(16777215,.5),_.clear(),ee&&Be.render(fe);const et=_.toneMapping;_.toneMapping=pr;const yt=re.viewport;if(re.viewport!==void 0&&(re.viewport=void 0),m.setupLightsView(re),W===!0&&Re.setGlobalState(_.clippingPlanes,re),Zn(O,fe,re),I.updateMultisampleRenderTarget(Fe),I.updateRenderTargetMipmap(Fe),de.has("WEBGL_multisampled_render_to_texture")===!1){let mt=!1;for(let ht=0,At=se.length;ht<At;ht++){const Ft=se[ht],rn=Ft.object,Kt=Ft.geometry,Ut=Ft.material,dt=Ft.group;if(Ut.side===xi&&rn.layers.test(re.layers)){const cn=Ut.side;Ut.side=ni,Ut.needsUpdate=!0,_n(rn,fe,re,Kt,Ut,dt),Ut.side=cn,Ut.needsUpdate=!0,mt=!0}}mt===!0&&(I.updateMultisampleRenderTarget(Fe),I.updateRenderTargetMipmap(Fe))}_.setRenderTarget(Qe),_.setClearColor(V,K),yt!==void 0&&(re.viewport=yt),_.toneMapping=et}function Zn(O,se,fe){const re=se.isScene===!0?se.overrideMaterial:null;for(let oe=0,Fe=O.length;oe<Fe;oe++){const We=O[oe],Qe=We.object,et=We.geometry,yt=re===null?We.material:re,mt=We.group;Qe.layers.test(fe.layers)&&_n(Qe,se,fe,et,yt,mt)}}function _n(O,se,fe,re,oe,Fe){O.onBeforeRender(_,se,fe,re,oe,Fe),O.modelViewMatrix.multiplyMatrices(fe.matrixWorldInverse,O.matrixWorld),O.normalMatrix.getNormalMatrix(O.modelViewMatrix),oe.onBeforeRender(_,se,fe,re,O,Fe),oe.transparent===!0&&oe.side===xi&&oe.forceSinglePass===!1?(oe.side=ni,oe.needsUpdate=!0,_.renderBufferDirect(fe,se,re,oe,O,Fe),oe.side=vr,oe.needsUpdate=!0,_.renderBufferDirect(fe,se,re,oe,O,Fe),oe.side=xi):_.renderBufferDirect(fe,se,re,oe,O,Fe),O.onAfterRender(_,se,fe,re,oe,Fe)}function di(O,se,fe){se.isScene!==!0&&(se=_e);const re=be.get(O),oe=m.state.lights,Fe=m.state.shadowsArray,We=oe.state.version,Qe=Ae.getParameters(O,oe.state,Fe,se,fe),et=Ae.getProgramCacheKey(Qe);let yt=re.programs;re.environment=O.isMeshStandardMaterial?se.environment:null,re.fog=se.fog,re.envMap=(O.isMeshStandardMaterial?te:R).get(O.envMap||re.environment),re.envMapRotation=re.environment!==null&&O.envMap===null?se.environmentRotation:O.envMapRotation,yt===void 0&&(O.addEventListener("dispose",ot),yt=new Map,re.programs=yt);let mt=yt.get(et);if(mt!==void 0){if(re.currentProgram===mt&&re.lightsStateVersion===We)return Vr(O,Qe),mt}else Qe.uniforms=Ae.getUniforms(O),O.onBeforeCompile(Qe,_),mt=Ae.acquireProgram(Qe,et),yt.set(et,mt),re.uniforms=Qe.uniforms;const ht=re.uniforms;return(!O.isShaderMaterial&&!O.isRawShaderMaterial||O.clipping===!0)&&(ht.clippingPlanes=Re.uniform),Vr(O,Qe),re.needsLights=Hr(O),re.lightsStateVersion=We,re.needsLights&&(ht.ambientLightColor.value=oe.state.ambient,ht.lightProbe.value=oe.state.probe,ht.directionalLights.value=oe.state.directional,ht.directionalLightShadows.value=oe.state.directionalShadow,ht.spotLights.value=oe.state.spot,ht.spotLightShadows.value=oe.state.spotShadow,ht.rectAreaLights.value=oe.state.rectArea,ht.ltc_1.value=oe.state.rectAreaLTC1,ht.ltc_2.value=oe.state.rectAreaLTC2,ht.pointLights.value=oe.state.point,ht.pointLightShadows.value=oe.state.pointShadow,ht.hemisphereLights.value=oe.state.hemi,ht.directionalShadowMap.value=oe.state.directionalShadowMap,ht.directionalShadowMatrix.value=oe.state.directionalShadowMatrix,ht.spotShadowMap.value=oe.state.spotShadowMap,ht.spotLightMatrix.value=oe.state.spotLightMatrix,ht.spotLightMap.value=oe.state.spotLightMap,ht.pointShadowMap.value=oe.state.pointShadowMap,ht.pointShadowMatrix.value=oe.state.pointShadowMatrix),re.currentProgram=mt,re.uniformsList=null,mt}function cs(O){if(O.uniformsList===null){const se=O.currentProgram.getUniforms();O.uniformsList=Ac.seqWithValue(se.seq,O.uniforms)}return O.uniformsList}function Vr(O,se){const fe=be.get(O);fe.outputColorSpace=se.outputColorSpace,fe.batching=se.batching,fe.batchingColor=se.batchingColor,fe.instancing=se.instancing,fe.instancingColor=se.instancingColor,fe.instancingMorph=se.instancingMorph,fe.skinning=se.skinning,fe.morphTargets=se.morphTargets,fe.morphNormals=se.morphNormals,fe.morphColors=se.morphColors,fe.morphTargetsCount=se.morphTargetsCount,fe.numClippingPlanes=se.numClippingPlanes,fe.numIntersection=se.numClipIntersection,fe.vertexAlphas=se.vertexAlphas,fe.vertexTangents=se.vertexTangents,fe.toneMapping=se.toneMapping}function Ko(O,se,fe,re,oe){se.isScene!==!0&&(se=_e),I.resetTextureUnits();const Fe=se.fog,We=re.isMeshStandardMaterial?se.environment:null,Qe=T===null?_.outputColorSpace:T.isXRRenderTarget===!0?T.texture.colorSpace:eo,et=(re.isMeshStandardMaterial?te:R).get(re.envMap||We),yt=re.vertexColors===!0&&!!fe.attributes.color&&fe.attributes.color.itemSize===4,mt=!!fe.attributes.tangent&&(!!re.normalMap||re.anisotropy>0),ht=!!fe.morphAttributes.position,At=!!fe.morphAttributes.normal,Ft=!!fe.morphAttributes.color;let rn=pr;re.toneMapped&&(T===null||T.isXRRenderTarget===!0)&&(rn=_.toneMapping);const Kt=fe.morphAttributes.position||fe.morphAttributes.normal||fe.morphAttributes.color,Ut=Kt!==void 0?Kt.length:0,dt=be.get(re),cn=m.state.lights;if(W===!0&&(q===!0||O!==b)){const hn=O===b&&re.id===S;Re.setState(re,O,hn)}let It=!1;re.version===dt.__version?(dt.needsLights&&dt.lightsStateVersion!==cn.state.version||dt.outputColorSpace!==Qe||oe.isBatchedMesh&&dt.batching===!1||!oe.isBatchedMesh&&dt.batching===!0||oe.isBatchedMesh&&dt.batchingColor===!0&&oe.colorTexture===null||oe.isBatchedMesh&&dt.batchingColor===!1&&oe.colorTexture!==null||oe.isInstancedMesh&&dt.instancing===!1||!oe.isInstancedMesh&&dt.instancing===!0||oe.isSkinnedMesh&&dt.skinning===!1||!oe.isSkinnedMesh&&dt.skinning===!0||oe.isInstancedMesh&&dt.instancingColor===!0&&oe.instanceColor===null||oe.isInstancedMesh&&dt.instancingColor===!1&&oe.instanceColor!==null||oe.isInstancedMesh&&dt.instancingMorph===!0&&oe.morphTexture===null||oe.isInstancedMesh&&dt.instancingMorph===!1&&oe.morphTexture!==null||dt.envMap!==et||re.fog===!0&&dt.fog!==Fe||dt.numClippingPlanes!==void 0&&(dt.numClippingPlanes!==Re.numPlanes||dt.numIntersection!==Re.numIntersection)||dt.vertexAlphas!==yt||dt.vertexTangents!==mt||dt.morphTargets!==ht||dt.morphNormals!==At||dt.morphColors!==Ft||dt.toneMapping!==rn||dt.morphTargetsCount!==Ut)&&(It=!0):(It=!0,dt.__version=re.version);let Dn=dt.currentProgram;It===!0&&(Dn=di(re,se,oe));let qt=!1,yn=!1,Ln=!1;const jt=Dn.getUniforms(),wn=dt.uniforms;if(ce.useProgram(Dn.program)&&(qt=!0,yn=!0,Ln=!0),re.id!==S&&(S=re.id,yn=!0),qt||b!==O){ce.buffers.depth.getReversed()?(Y.copy(O.projectionMatrix),Ax(Y),Cx(Y),jt.setValue(B,"projectionMatrix",Y)):jt.setValue(B,"projectionMatrix",O.projectionMatrix),jt.setValue(B,"viewMatrix",O.matrixWorldInverse);const on=jt.map.cameraPosition;on!==void 0&&on.setValue(B,ge.setFromMatrixPosition(O.matrixWorld)),Ee.logarithmicDepthBuffer&&jt.setValue(B,"logDepthBufFC",2/(Math.log(O.far+1)/Math.LN2)),(re.isMeshPhongMaterial||re.isMeshToonMaterial||re.isMeshLambertMaterial||re.isMeshBasicMaterial||re.isMeshStandardMaterial||re.isShaderMaterial)&&jt.setValue(B,"isOrthographic",O.isOrthographicCamera===!0),b!==O&&(b=O,yn=!0,Ln=!0)}if(oe.isSkinnedMesh){jt.setOptional(B,oe,"bindMatrix"),jt.setOptional(B,oe,"bindMatrixInverse");const hn=oe.skeleton;hn&&(hn.boneTexture===null&&hn.computeBoneTexture(),jt.setValue(B,"boneTexture",hn.boneTexture,I))}oe.isBatchedMesh&&(jt.setOptional(B,oe,"batchingTexture"),jt.setValue(B,"batchingTexture",oe._matricesTexture,I),jt.setOptional(B,oe,"batchingIdTexture"),jt.setValue(B,"batchingIdTexture",oe._indirectTexture,I),jt.setOptional(B,oe,"batchingColorTexture"),oe._colorsTexture!==null&&jt.setValue(B,"batchingColorTexture",oe._colorsTexture,I));const mn=fe.morphAttributes;if((mn.position!==void 0||mn.normal!==void 0||mn.color!==void 0)&&He.update(oe,fe,Dn),(yn||dt.receiveShadow!==oe.receiveShadow)&&(dt.receiveShadow=oe.receiveShadow,jt.setValue(B,"receiveShadow",oe.receiveShadow)),re.isMeshGouraudMaterial&&re.envMap!==null&&(wn.envMap.value=et,wn.flipEnvMap.value=et.isCubeTexture&&et.isRenderTargetTexture===!1?-1:1),re.isMeshStandardMaterial&&re.envMap===null&&se.environment!==null&&(wn.envMapIntensity.value=se.environmentIntensity),yn&&(jt.setValue(B,"toneMappingExposure",_.toneMappingExposure),dt.needsLights&&uo(wn,Ln),Fe&&re.fog===!0&&Me.refreshFogUniforms(wn,Fe),Me.refreshMaterialUniforms(wn,re,Z,Q,m.state.transmissionRenderTarget[O.id]),Ac.upload(B,cs(dt),wn,I)),re.isShaderMaterial&&re.uniformsNeedUpdate===!0&&(Ac.upload(B,cs(dt),wn,I),re.uniformsNeedUpdate=!1),re.isSpriteMaterial&&jt.setValue(B,"center",oe.center),jt.setValue(B,"modelViewMatrix",oe.modelViewMatrix),jt.setValue(B,"normalMatrix",oe.normalMatrix),jt.setValue(B,"modelMatrix",oe.matrixWorld),re.isShaderMaterial||re.isRawShaderMaterial){const hn=re.uniformsGroups;for(let on=0,qi=hn.length;on<qi;on++){const Ri=hn[on];ie.update(Ri,Dn),ie.bind(Ri,Dn)}}return Dn}function uo(O,se){O.ambientLightColor.needsUpdate=se,O.lightProbe.needsUpdate=se,O.directionalLights.needsUpdate=se,O.directionalLightShadows.needsUpdate=se,O.pointLights.needsUpdate=se,O.pointLightShadows.needsUpdate=se,O.spotLights.needsUpdate=se,O.spotLightShadows.needsUpdate=se,O.rectAreaLights.needsUpdate=se,O.hemisphereLights.needsUpdate=se}function Hr(O){return O.isMeshLambertMaterial||O.isMeshToonMaterial||O.isMeshPhongMaterial||O.isMeshStandardMaterial||O.isShadowMaterial||O.isShaderMaterial&&O.lights===!0}this.getActiveCubeFace=function(){return w},this.getActiveMipmapLevel=function(){return M},this.getRenderTarget=function(){return T},this.setRenderTargetTextures=function(O,se,fe){be.get(O.texture).__webglTexture=se,be.get(O.depthTexture).__webglTexture=fe;const re=be.get(O);re.__hasExternalTextures=!0,re.__autoAllocateDepthBuffer=fe===void 0,re.__autoAllocateDepthBuffer||de.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),re.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(O,se){const fe=be.get(O);fe.__webglFramebuffer=se,fe.__useDefaultFramebuffer=se===void 0};const hs=B.createFramebuffer();this.setRenderTarget=function(O,se=0,fe=0){T=O,w=se,M=fe;let re=!0,oe=null,Fe=!1,We=!1;if(O){const et=be.get(O);if(et.__useDefaultFramebuffer!==void 0)ce.bindFramebuffer(B.FRAMEBUFFER,null),re=!1;else if(et.__webglFramebuffer===void 0)I.setupRenderTarget(O);else if(et.__hasExternalTextures)I.rebindTextures(O,be.get(O.texture).__webglTexture,be.get(O.depthTexture).__webglTexture);else if(O.depthBuffer){const ht=O.depthTexture;if(et.__boundDepthTexture!==ht){if(ht!==null&&be.has(ht)&&(O.width!==ht.image.width||O.height!==ht.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");I.setupDepthRenderbuffer(O)}}const yt=O.texture;(yt.isData3DTexture||yt.isDataArrayTexture||yt.isCompressedArrayTexture)&&(We=!0);const mt=be.get(O).__webglFramebuffer;O.isWebGLCubeRenderTarget?(Array.isArray(mt[se])?oe=mt[se][fe]:oe=mt[se],Fe=!0):O.samples>0&&I.useMultisampledRTT(O)===!1?oe=be.get(O).__webglMultisampledFramebuffer:Array.isArray(mt)?oe=mt[fe]:oe=mt,D.copy(O.viewport),P.copy(O.scissor),k=O.scissorTest}else D.copy(F).multiplyScalar(Z).floor(),P.copy(J).multiplyScalar(Z).floor(),k=$;if(fe!==0&&(oe=hs),ce.bindFramebuffer(B.FRAMEBUFFER,oe)&&re&&ce.drawBuffers(O,oe),ce.viewport(D),ce.scissor(P),ce.setScissorTest(k),Fe){const et=be.get(O.texture);B.framebufferTexture2D(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,B.TEXTURE_CUBE_MAP_POSITIVE_X+se,et.__webglTexture,fe)}else if(We){const et=be.get(O.texture),yt=se;B.framebufferTextureLayer(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,et.__webglTexture,fe,yt)}else if(O!==null&&fe!==0){const et=be.get(O.texture);B.framebufferTexture2D(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,B.TEXTURE_2D,et.__webglTexture,fe)}S=-1},this.readRenderTargetPixels=function(O,se,fe,re,oe,Fe,We){if(!(O&&O.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Qe=be.get(O).__webglFramebuffer;if(O.isWebGLCubeRenderTarget&&We!==void 0&&(Qe=Qe[We]),Qe){ce.bindFramebuffer(B.FRAMEBUFFER,Qe);try{const et=O.texture,yt=et.format,mt=et.type;if(!Ee.textureFormatReadable(yt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!Ee.textureTypeReadable(mt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}se>=0&&se<=O.width-re&&fe>=0&&fe<=O.height-oe&&B.readPixels(se,fe,re,oe,tt.convert(yt),tt.convert(mt),Fe)}finally{const et=T!==null?be.get(T).__webglFramebuffer:null;ce.bindFramebuffer(B.FRAMEBUFFER,et)}}},this.readRenderTargetPixelsAsync=async function(O,se,fe,re,oe,Fe,We){if(!(O&&O.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Qe=be.get(O).__webglFramebuffer;if(O.isWebGLCubeRenderTarget&&We!==void 0&&(Qe=Qe[We]),Qe){const et=O.texture,yt=et.format,mt=et.type;if(!Ee.textureFormatReadable(yt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!Ee.textureTypeReadable(mt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(se>=0&&se<=O.width-re&&fe>=0&&fe<=O.height-oe){ce.bindFramebuffer(B.FRAMEBUFFER,Qe);const ht=B.createBuffer();B.bindBuffer(B.PIXEL_PACK_BUFFER,ht),B.bufferData(B.PIXEL_PACK_BUFFER,Fe.byteLength,B.STREAM_READ),B.readPixels(se,fe,re,oe,tt.convert(yt),tt.convert(mt),0);const At=T!==null?be.get(T).__webglFramebuffer:null;ce.bindFramebuffer(B.FRAMEBUFFER,At);const Ft=B.fenceSync(B.SYNC_GPU_COMMANDS_COMPLETE,0);return B.flush(),await Tx(B,Ft,4),B.bindBuffer(B.PIXEL_PACK_BUFFER,ht),B.getBufferSubData(B.PIXEL_PACK_BUFFER,0,Fe),B.deleteBuffer(ht),B.deleteSync(Ft),Fe}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(O,se=null,fe=0){O.isTexture!==!0&&(No("WebGLRenderer: copyFramebufferToTexture function signature has changed."),se=arguments[0]||null,O=arguments[1]);const re=Math.pow(2,-fe),oe=Math.floor(O.image.width*re),Fe=Math.floor(O.image.height*re),We=se!==null?se.x:0,Qe=se!==null?se.y:0;I.setTexture2D(O,0),B.copyTexSubImage2D(B.TEXTURE_2D,fe,0,0,We,Qe,oe,Fe),ce.unbindTexture()};const Qo=B.createFramebuffer(),fo=B.createFramebuffer();this.copyTextureToTexture=function(O,se,fe=null,re=null,oe=0,Fe=null){O.isTexture!==!0&&(No("WebGLRenderer: copyTextureToTexture function signature has changed."),re=arguments[0]||null,O=arguments[1],se=arguments[2],Fe=arguments[3]||0,fe=null),Fe===null&&(oe!==0?(No("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),Fe=oe,oe=0):Fe=0);let We,Qe,et,yt,mt,ht,At,Ft,rn;const Kt=O.isCompressedTexture?O.mipmaps[Fe]:O.image;if(fe!==null)We=fe.max.x-fe.min.x,Qe=fe.max.y-fe.min.y,et=fe.isBox3?fe.max.z-fe.min.z:1,yt=fe.min.x,mt=fe.min.y,ht=fe.isBox3?fe.min.z:0;else{const mn=Math.pow(2,-oe);We=Math.floor(Kt.width*mn),Qe=Math.floor(Kt.height*mn),O.isDataArrayTexture?et=Kt.depth:O.isData3DTexture?et=Math.floor(Kt.depth*mn):et=1,yt=0,mt=0,ht=0}re!==null?(At=re.x,Ft=re.y,rn=re.z):(At=0,Ft=0,rn=0);const Ut=tt.convert(se.format),dt=tt.convert(se.type);let cn;se.isData3DTexture?(I.setTexture3D(se,0),cn=B.TEXTURE_3D):se.isDataArrayTexture||se.isCompressedArrayTexture?(I.setTexture2DArray(se,0),cn=B.TEXTURE_2D_ARRAY):(I.setTexture2D(se,0),cn=B.TEXTURE_2D),B.pixelStorei(B.UNPACK_FLIP_Y_WEBGL,se.flipY),B.pixelStorei(B.UNPACK_PREMULTIPLY_ALPHA_WEBGL,se.premultiplyAlpha),B.pixelStorei(B.UNPACK_ALIGNMENT,se.unpackAlignment);const It=B.getParameter(B.UNPACK_ROW_LENGTH),Dn=B.getParameter(B.UNPACK_IMAGE_HEIGHT),qt=B.getParameter(B.UNPACK_SKIP_PIXELS),yn=B.getParameter(B.UNPACK_SKIP_ROWS),Ln=B.getParameter(B.UNPACK_SKIP_IMAGES);B.pixelStorei(B.UNPACK_ROW_LENGTH,Kt.width),B.pixelStorei(B.UNPACK_IMAGE_HEIGHT,Kt.height),B.pixelStorei(B.UNPACK_SKIP_PIXELS,yt),B.pixelStorei(B.UNPACK_SKIP_ROWS,mt),B.pixelStorei(B.UNPACK_SKIP_IMAGES,ht);const jt=O.isDataArrayTexture||O.isData3DTexture,wn=se.isDataArrayTexture||se.isData3DTexture;if(O.isDepthTexture){const mn=be.get(O),hn=be.get(se),on=be.get(mn.__renderTarget),qi=be.get(hn.__renderTarget);ce.bindFramebuffer(B.READ_FRAMEBUFFER,on.__webglFramebuffer),ce.bindFramebuffer(B.DRAW_FRAMEBUFFER,qi.__webglFramebuffer);for(let Ri=0;Ri<et;Ri++)jt&&(B.framebufferTextureLayer(B.READ_FRAMEBUFFER,B.COLOR_ATTACHMENT0,be.get(O).__webglTexture,oe,ht+Ri),B.framebufferTextureLayer(B.DRAW_FRAMEBUFFER,B.COLOR_ATTACHMENT0,be.get(se).__webglTexture,Fe,rn+Ri)),B.blitFramebuffer(yt,mt,We,Qe,At,Ft,We,Qe,B.DEPTH_BUFFER_BIT,B.NEAREST);ce.bindFramebuffer(B.READ_FRAMEBUFFER,null),ce.bindFramebuffer(B.DRAW_FRAMEBUFFER,null)}else if(oe!==0||O.isRenderTargetTexture||be.has(O)){const mn=be.get(O),hn=be.get(se);ce.bindFramebuffer(B.READ_FRAMEBUFFER,Qo),ce.bindFramebuffer(B.DRAW_FRAMEBUFFER,fo);for(let on=0;on<et;on++)jt?B.framebufferTextureLayer(B.READ_FRAMEBUFFER,B.COLOR_ATTACHMENT0,mn.__webglTexture,oe,ht+on):B.framebufferTexture2D(B.READ_FRAMEBUFFER,B.COLOR_ATTACHMENT0,B.TEXTURE_2D,mn.__webglTexture,oe),wn?B.framebufferTextureLayer(B.DRAW_FRAMEBUFFER,B.COLOR_ATTACHMENT0,hn.__webglTexture,Fe,rn+on):B.framebufferTexture2D(B.DRAW_FRAMEBUFFER,B.COLOR_ATTACHMENT0,B.TEXTURE_2D,hn.__webglTexture,Fe),oe!==0?B.blitFramebuffer(yt,mt,We,Qe,At,Ft,We,Qe,B.COLOR_BUFFER_BIT,B.NEAREST):wn?B.copyTexSubImage3D(cn,Fe,At,Ft,rn+on,yt,mt,We,Qe):B.copyTexSubImage2D(cn,Fe,At,Ft,yt,mt,We,Qe);ce.bindFramebuffer(B.READ_FRAMEBUFFER,null),ce.bindFramebuffer(B.DRAW_FRAMEBUFFER,null)}else wn?O.isDataTexture||O.isData3DTexture?B.texSubImage3D(cn,Fe,At,Ft,rn,We,Qe,et,Ut,dt,Kt.data):se.isCompressedArrayTexture?B.compressedTexSubImage3D(cn,Fe,At,Ft,rn,We,Qe,et,Ut,Kt.data):B.texSubImage3D(cn,Fe,At,Ft,rn,We,Qe,et,Ut,dt,Kt):O.isDataTexture?B.texSubImage2D(B.TEXTURE_2D,Fe,At,Ft,We,Qe,Ut,dt,Kt.data):O.isCompressedTexture?B.compressedTexSubImage2D(B.TEXTURE_2D,Fe,At,Ft,Kt.width,Kt.height,Ut,Kt.data):B.texSubImage2D(B.TEXTURE_2D,Fe,At,Ft,We,Qe,Ut,dt,Kt);B.pixelStorei(B.UNPACK_ROW_LENGTH,It),B.pixelStorei(B.UNPACK_IMAGE_HEIGHT,Dn),B.pixelStorei(B.UNPACK_SKIP_PIXELS,qt),B.pixelStorei(B.UNPACK_SKIP_ROWS,yn),B.pixelStorei(B.UNPACK_SKIP_IMAGES,Ln),Fe===0&&se.generateMipmaps&&B.generateMipmap(cn),ce.unbindTexture()},this.copyTextureToTexture3D=function(O,se,fe=null,re=null,oe=0){return O.isTexture!==!0&&(No("WebGLRenderer: copyTextureToTexture3D function signature has changed."),fe=arguments[0]||null,re=arguments[1]||null,O=arguments[2],se=arguments[3],oe=arguments[4]||0),No('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(O,se,fe,re,oe)},this.initRenderTarget=function(O){be.get(O).__webglFramebuffer===void 0&&I.setupRenderTarget(O)},this.initTexture=function(O){O.isCubeTexture?I.setTextureCube(O,0):O.isData3DTexture?I.setTexture3D(O,0):O.isDataArrayTexture||O.isCompressedArrayTexture?I.setTexture2DArray(O,0):I.setTexture2D(O,0),ce.unbindTexture()},this.resetState=function(){w=0,M=0,T=null,ce.reset(),wt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return tr}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorspace=Lt._getDrawingBufferColorSpace(e),t.unpackColorSpace=Lt._getUnpackColorSpace()}}const IT=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:B0,AddEquation:ns,AddOperation:N0,AdditiveAnimationBlendMode:_f,AdditiveBlending:Id,AgXToneMapping:zc,AlphaFormat:df,AlwaysCompare:ev,AlwaysDepth:Uc,AlwaysStencilFunc:Nd,AmbientLight:Wf,AnimationAction:qv,AnimationClip:ro,AnimationLoader:Kb,AnimationMixer:w1,AnimationObjectGroup:S1,AnimationUtils:qb,ArcCurve:gv,ArrayCamera:Wv,ArrowHelper:W1,AttachedBindMode:Ud,Audio:Xv,AudioAnalyser:d1,AudioContext:Xf,AudioListener:c1,AudioLoader:o1,AxesHelper:X1,BackSide:ni,BasicDepthPacking:Y0,BasicShadowMap:Cy,BatchedMesh:uv,Bone:Bh,BooleanKeyframeTrack:lo,Box2:I1,Box3:Mn,Box3Helper:V1,BoxGeometry:vn,BoxHelper:G1,BufferAttribute:Ct,BufferGeometry:bt,BufferGeometryLoader:Hv,ByteType:cf,Cache:Nr,Camera:Uh,CameraHelper:z1,CanvasTexture:mv,CapsuleGeometry:Vh,CatmullRomCurve3:vv,CineonToneMapping:k0,CircleGeometry:Hh,ClampToEdgeWrapping:Si,Clock:Yf,Color:Ge,ColorKeyframeTrack:kf,ColorManagement:Lt,CompressedArrayTexture:gb,CompressedCubeTexture:vb,CompressedTexture:zh,CompressedTextureLoader:Qb,ConeGeometry:Wh,ConstantAlphaFactor:D0,ConstantColorFactor:P0,Controls:ru,CubeCamera:ov,CubeReflectionMapping:zr,CubeRefractionMapping:is,CubeTexture:hl,CubeTextureLoader:$b,CubeUVReflectionMapping:Xo,CubicBezierCurve:Cf,CubicBezierCurve3:_v,CubicInterpolant:Uv,CullFaceBack:Pd,CullFaceFront:m0,CullFaceFrontBack:Ay,CullFaceNone:p0,Curve:rr,CurvePath:xv,CustomBlending:g0,CustomToneMapping:z0,CylinderGeometry:Tn,Cylindrical:P1,Data3DTexture:Dh,DataArrayTexture:ll,DataTexture:mr,DataTextureLoader:Fv,DataUtils:Hx,DecrementStencilOp:Vy,DecrementWrapStencilOp:Wy,DefaultLoadingManager:ho,DepthFormat:Ys,DepthStencilFormat:$s,DepthTexture:Tf,DetachedBindMode:V0,DirectionalLight:Hf,DirectionalLightHelper:B1,DiscreteInterpolant:Nv,DodecahedronGeometry:Xh,DoubleSide:xi,DstAlphaFactor:E0,DstColorFactor:A0,DynamicCopyUsage:sx,DynamicDrawUsage:$y,DynamicReadUsage:nx,EdgesGeometry:bv,EllipseCurve:Gh,EqualCompare:J0,EqualDepth:Oc,EqualStencilFunc:jy,EquirectangularReflectionMapping:Fa,EquirectangularRefractionMapping:ka,Euler:wi,EventDispatcher:br,ExtrudeGeometry:qh,FileLoader:nr,Float16BufferAttribute:Jx,Float32BufferAttribute:Ke,FloatType:Mi,Fog:Oh,FogExp2:Nh,FramebufferTexture:mb,FrontSide:vr,Frustum:fl,GLBufferAttribute:R1,GLSL1:ax,GLSL3:Od,GreaterCompare:K0,GreaterDepth:kc,GreaterEqualCompare:$0,GreaterEqualDepth:Fc,GreaterEqualStencilFunc:Qy,GreaterStencilFunc:Jy,GridHelper:F1,Group:Wi,HalfFloatType:Yo,HemisphereLight:Bv,HemisphereLightHelper:O1,IcosahedronGeometry:jh,ImageBitmapLoader:s1,ImageLoader:Ka,ImageUtils:iv,IncrementStencilOp:Gy,IncrementWrapStencilOp:Hy,InstancedBufferAttribute:to,InstancedBufferGeometry:nu,InstancedInterleavedBuffer:yh,InstancedMesh:hv,Int16BufferAttribute:jx,Int32BufferAttribute:Zx,Int8BufferAttribute:Xx,IntType:wh,InterleavedBuffer:kh,InterleavedBufferAttribute:Ni,Interpolant:gl,InterpolateDiscrete:za,InterpolateLinear:fh,InterpolateSmooth:Ec,InvertStencilOp:Xy,KeepStencilOp:Ds,KeyframeTrack:or,LOD:cv,LatheGeometry:pl,Layers:Lh,LessCompare:Z0,LessDepth:Nc,LessEqualCompare:xf,LessEqualDepth:Ks,LessEqualStencilFunc:Zy,LessStencilFunc:qy,Light:as,LightProbe:Vv,Line:Xn,Line3:jv,LineBasicMaterial:Fn,LineCurve:Rf,LineCurve3:yv,LineDashedMaterial:Iv,LineLoop:dv,LineSegments:ir,LinearFilter:Sn,LinearInterpolant:Ff,LinearMipMapLinearFilter:Dy,LinearMipMapNearestFilter:Iy,LinearMipmapLinearFilter:er,LinearMipmapNearestFilter:Ea,LinearSRGBColorSpace:eo,LinearToneMapping:O0,LinearTransfer:Va,Loader:qn,LoaderUtils:_h,LoadingManager:Bf,LoopOnce:H0,LoopPingPong:X0,LoopRepeat:W0,LuminanceAlphaFormat:mf,LuminanceFormat:pf,MOUSE:Oi,Material:ri,MaterialLoader:tu,MathUtils:dr,Matrix2:Jf,Matrix3:Et,Matrix4:st,MaxEquation:x0,Mesh:ke,MeshBasicMaterial:On,MeshDepthMaterial:ml,MeshDistanceMaterial:eu,MeshLambertMaterial:Nf,MeshMatcapMaterial:Pv,MeshNormalMaterial:Rv,MeshPhongMaterial:vh,MeshPhysicalMaterial:Av,MeshStandardMaterial:Uf,MeshToonMaterial:Cv,MinEquation:y0,MirroredRepeatWrapping:Ba,MixOperation:U0,MultiplyBlending:Ld,MultiplyOperation:ol,NearestFilter:Yn,NearestMipMapLinearFilter:Py,NearestMipMapNearestFilter:Ry,NearestMipmapLinearFilter:Oo,NearestMipmapNearestFilter:lf,NeutralToneMapping:G0,NeverCompare:j0,NeverDepth:Lc,NeverStencilFunc:Yy,NoBlending:Or,NoColorSpace:Rr,NoToneMapping:pr,NormalAnimationBlendMode:Ph,NormalBlending:Xs,NotEqualCompare:Q0,NotEqualDepth:Bc,NotEqualStencilFunc:Ky,NumberKeyframeTrack:Ja,Object3D:Ot,ObjectLoader:i1,ObjectSpaceNormalMap:q0,OctahedronGeometry:Ur,OneFactor:S0,OneMinusConstantAlphaFactor:L0,OneMinusConstantColorFactor:I0,OneMinusDstAlphaFactor:T0,OneMinusDstColorFactor:C0,OneMinusSrcAlphaFactor:Dc,OneMinusSrcColorFactor:w0,OrthographicCamera:ls,PCFShadowMap:af,PCFSoftShadowMap:wa,PMREMGenerator:Hd,Path:Ya,PerspectiveCamera:bn,Plane:ur,PlaneGeometry:sr,PlaneHelper:H1,PointLight:Vf,PointLightHelper:U1,Points:fv,PointsMaterial:Ef,PolarGridHelper:k1,PolyhedronGeometry:os,PositionalAudio:u1,PropertyBinding:Gt,PropertyMixer:Yv,QuadraticBezierCurve:Pf,QuadraticBezierCurve3:If,Quaternion:Ht,QuaternionKeyframeTrack:jo,QuaternionLinearInterpolant:Ov,RED_GREEN_RGTC2_Format:uh,RED_RGTC1_Format:vf,REVISION:sl,RGBADepthPacking:yf,RGBAFormat:ui,RGBAIntegerFormat:Rh,RGBA_ASTC_10x10_Format:sh,RGBA_ASTC_10x5_Format:nh,RGBA_ASTC_10x6_Format:ih,RGBA_ASTC_10x8_Format:rh,RGBA_ASTC_12x10_Format:oh,RGBA_ASTC_12x12_Format:ah,RGBA_ASTC_4x4_Format:jc,RGBA_ASTC_5x4_Format:Zc,RGBA_ASTC_5x5_Format:Jc,RGBA_ASTC_6x5_Format:Kc,RGBA_ASTC_6x6_Format:Qc,RGBA_ASTC_8x5_Format:$c,RGBA_ASTC_8x6_Format:eh,RGBA_ASTC_8x8_Format:th,RGBA_BPTC_Format:Pa,RGBA_ETC2_EAC_Format:qc,RGBA_PVRTC_2BPPV1_Format:Wc,RGBA_PVRTC_4BPPV1_Format:Hc,RGBA_S3TC_DXT1_Format:Aa,RGBA_S3TC_DXT3_Format:Ca,RGBA_S3TC_DXT5_Format:Ra,RGBDepthPacking:Fy,RGBFormat:ff,RGBIntegerFormat:Ly,RGB_BPTC_SIGNED_Format:lh,RGB_BPTC_UNSIGNED_Format:ch,RGB_ETC1_Format:Xc,RGB_ETC2_Format:Yc,RGB_PVRTC_2BPPV1_Format:Vc,RGB_PVRTC_4BPPV1_Format:Gc,RGB_S3TC_DXT1_Format:Ta,RGDepthPacking:ky,RGFormat:gf,RGIntegerFormat:Ch,RawShaderMaterial:Tv,Ray:ss,Raycaster:iu,RectAreaLight:zv,RedFormat:Ah,RedIntegerFormat:al,ReinhardToneMapping:F0,RenderTarget:Ih,RenderTarget3D:E1,RenderTargetArray:T1,RepeatWrapping:$i,ReplaceStencilOp:zy,ReverseSubtractEquation:_0,RingGeometry:Zh,SIGNED_RED_GREEN_RGTC2_Format:dh,SIGNED_RED_RGTC1_Format:hh,SRGBColorSpace:ln,SRGBTransfer:Zt,Scene:Fh,ShaderChunk:vt,ShaderLib:ci,ShaderMaterial:Ei,ShadowMaterial:Ev,Shape:js,ShapeGeometry:Jh,ShapePath:Y1,ShapeUtils:gr,ShortType:hf,Skeleton:dl,SkeletonHelper:L1,SkinnedMesh:wf,Source:Vs,Sphere:An,SphereGeometry:ao,Spherical:Qa,SphericalHarmonics3:Gv,SplineCurve:Df,SpotLight:Gf,SpotLightHelper:D1,Sprite:ul,SpriteMaterial:qo,SrcAlphaFactor:Ic,SrcAlphaSaturateFactor:R0,SrcColorFactor:M0,StaticCopyUsage:rx,StaticDrawUsage:Ha,StaticReadUsage:tx,StereoCamera:a1,StreamCopyUsage:ox,StreamDrawUsage:ex,StreamReadUsage:ix,StringKeyframeTrack:co,SubtractEquation:v0,SubtractiveBlending:Dd,TOUCH:Bs,TangentSpaceNormalMap:rs,TetrahedronGeometry:Kh,Texture:pn,TextureLoader:kv,TextureUtils:K1,TimestampQuery:lx,TorusGeometry:Ir,TorusKnotGeometry:Qh,Triangle:bi,TriangleFanDrawMode:Oy,TriangleStripDrawMode:Ny,TrianglesDrawMode:Uy,TubeGeometry:$h,UVMapping:Mh,Uint16BufferAttribute:Sf,Uint32BufferAttribute:Mf,Uint8BufferAttribute:Yx,Uint8ClampedBufferAttribute:qx,Uniform:Zf,UniformsGroup:C1,UniformsLib:je,UniformsUtils:cl,UnsignedByteType:_r,UnsignedInt248Type:Qs,UnsignedInt5999Type:uf,UnsignedIntType:Gr,UnsignedShort4444Type:Eh,UnsignedShort5551Type:Th,UnsignedShortType:Vo,VSMShadowMap:hr,Vector2:xe,Vector3:L,Vector4:Rt,VectorKeyframeTrack:io,VideoFrameTexture:pb,VideoTexture:pv,WebGL3DRenderTarget:Lx,WebGLArrayRenderTarget:Dx,WebGLCoordinateSystem:tr,WebGLCubeRenderTarget:av,WebGLRenderTarget:Yi,WebGLRenderer:Qf,WebGLUtils:t_,WebGPUCoordinateSystem:Wa,WebXRController:Tc,WireframeGeometry:Lf,WrapAroundEnding:Ga,ZeroCurvatureEnding:zs,ZeroFactor:b0,ZeroSlopeEnding:Gs,ZeroStencilOp:By,createCanvasElement:nv},Symbol.toStringTag,{value:"Module"})),rg=(s,e)=>{if(s===e)return!0;if(!s||!e)return!1;const t=s.length;if(e.length!==t)return!1;for(let n=0;n<t;n++)if(s[n]!==e[n])return!1;return!0},DT=()=>{const s=[],n={items:s,remember:(i,r)=>{for(let a=0;a<s.length;a++){const l=s[a];if(rg(r,l.keys)&&l.promise)return l.promise}const o={promise:i(),keys:r};return s.push(o),o.promise},clear:i=>{for(let r=0;r<s.length;r++){const o=s[r];if(rg(i,o.keys)){s.splice(r,1);return}}}};return Ti("threlte-cache",n),n},LT=()=>{const s=ii("threlte-cache");if(!s)throw new Error("No cache found. The cache can only be used in a child component to <Canvas>.");return s},sg=Symbol(),UT=s=>typeof(s==null?void 0:s.subscribe)=="function",n_=(s,e,t)=>{const n=s().map(o=>UT(o)?Ty(o):sg),i=Mt(()=>s().map((o,a)=>n[a]===sg?o:n[a].current)),r=()=>{ye(i);let o;return bh(()=>{o=e(ye(i))}),o};t?Dt(r):yi(r)},NT=(s,e)=>n_(s,e,!1),OT=(s,e)=>n_(s,e,!0),i_=Object.assign(NT,{pre:OT}),Li=(s,e)=>(s==null?void 0:s[`is${e}`])===!0,ad=s=>{const e=ti(void 0),t=ti(void 0);return s.then(n=>{e.set(n)}).catch(n=>{console.error("Error in asyncWritable:",n.message),t.set(n)}),Object.assign(Object.assign(s,e),{error:t,promise:s})},FT=typeof window<"u",ei=(s,e)=>{const t=rl(s,r=>r);let n;const i=t.subscribe(async r=>{n&&n();const o=await e(r);o&&(n=o)});xr(()=>{i(),n&&n()})},dn=s=>{const e=ti(s),t={set:n=>{t.current=n,e.set(n)},subscribe:e.subscribe,update:n=>{const i=n(t.current);t.current=i,e.set(i)},current:s};return t},kT=s=>({subscribe:s.subscribe,get current(){return s.current}}),r_=(s,e)=>{if(e.includes(".")){const t=e.split("."),n=t.pop();for(let i=0;i<t.length;i+=1)s=s[t[i]];return{target:s,key:n}}else return{target:s,key:e}},BT=s=>{const{dom:e,canvas:t}=s,n=dn({width:e.offsetWidth,height:e.offsetHeight});sf(()=>{const r=new ResizeObserver(()=>{const{offsetWidth:o,offsetHeight:a}=e;(n.current.width!==o||n.current.height!==a)&&n.set({width:o,height:a})});return r.observe(e),()=>{r.disconnect()}});const i={dom:e,canvas:t,size:kT(n)};return Ti("threlte-dom-context",i),i},ou=()=>{const s=ii("threlte-dom-context");if(!s)throw new Error("useDOM can only be used in a child component to <Canvas>.");return s};function zT(s){return{all:s=s||new Map,on:function(e,t){var n=s.get(e);n?n.push(t):s.set(e,[t])},off:function(e,t){var n=s.get(e);n&&(t?n.splice(n.indexOf(t)>>>0,1):s.set(e,[]))},emit:function(e,t){var n=s.get(e);n&&n.slice().map(function(i){i(t)}),(n=s.get("*"))&&n.slice().map(function(i){i(e,t)})}}}class ts{constructor(){tn(this,"allVertices",{});tn(this,"isolatedVertices",{});tn(this,"connectedVertices",{});tn(this,"sortedConnectedValues",[]);tn(this,"needsSort",!1);tn(this,"emitter",zT());tn(this,"emit",this.emitter.emit.bind(this.emitter));tn(this,"on",this.emitter.on.bind(this.emitter));tn(this,"off",this.emitter.off.bind(this.emitter));tn(this,"getKey",e=>typeof e=="object"?e.key:e)}get sortedVertices(){return this.mapNodes(e=>e)}moveToIsolated(e){const t=this.connectedVertices[e];t&&(this.isolatedVertices[e]=t,delete this.connectedVertices[e])}moveToConnected(e){const t=this.isolatedVertices[e];t&&(this.connectedVertices[e]=t,delete this.isolatedVertices[e])}add(e,t,n){if(this.allVertices[e]&&this.allVertices[e].value!==void 0)throw new Error(`A node with the key ${e.toString()} already exists`);let i=this.allVertices[e];i?i.value===void 0&&(i.value=t):(i={value:t,previous:new Set,next:new Set},this.allVertices[e]=i);const r=i.next.size>0||i.previous.size>0;if(!(n!=null&&n.after)&&!(n!=null&&n.before)&&!r){this.isolatedVertices[e]=i,this.emit("node:added",{key:e,type:"isolated",value:t});return}else this.connectedVertices[e]=i;if(n!=null&&n.after){const o=Array.isArray(n.after)?n.after:[n.after];o.forEach(a=>{i.previous.add(this.getKey(a))}),o.forEach(a=>{const l=this.getKey(a),c=this.allVertices[l];c?(c.next.add(e),this.moveToConnected(l)):(this.allVertices[l]={value:void 0,previous:new Set,next:new Set([e])},this.connectedVertices[l]=this.allVertices[l])})}if(n!=null&&n.before){const o=Array.isArray(n.before)?n.before:[n.before];o.forEach(a=>{i.next.add(this.getKey(a))}),o.forEach(a=>{const l=this.getKey(a),c=this.allVertices[l];c?(c.previous.add(e),this.moveToConnected(l)):(this.allVertices[l]={value:void 0,previous:new Set([e]),next:new Set},this.connectedVertices[l]=this.allVertices[l])})}this.emit("node:added",{key:e,type:"connected",value:t}),this.needsSort=!0}remove(e){const t=this.getKey(e);if(this.isolatedVertices[t]){delete this.isolatedVertices[t],delete this.allVertices[t],this.emit("node:removed",{key:t,type:"isolated"});return}const i=this.connectedVertices[t];i&&(i.next.forEach(r=>{const o=this.connectedVertices[r];o&&(o.previous.delete(t),o.previous.size===0&&o.next.size===0&&this.moveToIsolated(r))}),i.previous.forEach(r=>{const o=this.connectedVertices[r];o&&(o.next.delete(t),o.previous.size===0&&o.next.size===0&&this.moveToIsolated(r))}),delete this.connectedVertices[t],delete this.allVertices[t],this.emit("node:removed",{key:t,type:"connected"}),this.needsSort=!0)}mapNodes(e){this.needsSort&&this.sort();const t=[];return this.forEachNode((n,i)=>{t.push(e(n,i))}),t}forEachNode(e){this.needsSort&&this.sort();let t=0;for(;t<this.sortedConnectedValues.length;t++)e(this.sortedConnectedValues[t],t);Reflect.ownKeys(this.isolatedVertices).forEach(n=>{const i=this.isolatedVertices[n];i.value!==void 0&&e(i.value,t++)})}getValueByKey(e){var t;return(t=this.allVertices[e])==null?void 0:t.value}getKeyByValue(e){return Reflect.ownKeys(this.connectedVertices).find(t=>this.connectedVertices[t].value===e)??Reflect.ownKeys(this.isolatedVertices).find(t=>this.isolatedVertices[t].value===e)}sort(){var o;const e=new Map,t=[],n=[],i=Reflect.ownKeys(this.connectedVertices).filter(a=>this.connectedVertices[a].value!==void 0);for(i.forEach(a=>{e.set(a,0)}),i.forEach(a=>{this.connectedVertices[a].next.forEach(c=>{this.connectedVertices[c]&&e.set(c,(e.get(c)||0)+1)})}),e.forEach((a,l)=>{a===0&&t.push(l)});t.length>0;){const a=t.shift();n.push(a);const l=i.find(c=>c===a);l&&((o=this.connectedVertices[l])==null||o.next.forEach(c=>{const h=(e.get(c)||0)-1;e.set(c,h),h===0&&t.push(c)}))}if(n.length!==i.length)throw new Error("The graph contains a cycle, and thus can not be sorted topologically.");const r=a=>a!==void 0;this.sortedConnectedValues=n.map(a=>this.connectedVertices[a].value).filter(r),this.needsSort=!1}clear(){this.allVertices={},this.isolatedVertices={},this.connectedVertices={},this.sortedConnectedValues=[],this.needsSort=!1}static isKey(e){return typeof e=="string"||typeof e=="symbol"}static isValue(e){return typeof e=="object"&&"key"in e}}class GT{constructor(e,t,n){tn(this,"key");tn(this,"stage");tn(this,"callback");tn(this,"runTask",!0);this.stage=e,this.key=t,this.callback=n}stop(){this.runTask=!1}start(){this.runTask=!0}run(e){this.runTask&&this.callback(e)}}class VT extends ts{constructor(t,n,i){super();tn(this,"key");tn(this,"scheduler");tn(this,"runTask",!0);tn(this,"callback",(t,n)=>n());tn(this,"removeTask",this.remove.bind(this));this.scheduler=t,this.key=n,this.start=this.start.bind(this),this.stop=this.stop.bind(this),i&&(this.callback=i.bind(this))}stop(){this.runTask=!1}start(){this.runTask=!0}get tasks(){return this.sortedVertices}createTask(t,n,i){const r=new GT(this,t,n);return this.add(t,r,i),r}getTask(t){return this.getValueByKey(t)}run(t){this.runTask&&this.callback(t,n=>{this.forEachNode(i=>{i.run(n??t)})})}runWithTiming(t){if(!this.runTask)return{};const n={};return this.callback(t,i=>{this.forEachNode(r=>{const o=performance.now();r.run(i??t);const a=performance.now()-o;n[r.key]=a})}),n}getSchedule(){return this.mapNodes(t=>t.key.toString())}}class HT extends ts{constructor(t){super();tn(this,"lastTime",performance.now());tn(this,"clampDeltaTo",.1);tn(this,"removeStage",this.remove.bind(this));t!=null&&t.clampDeltaTo&&(this.clampDeltaTo=t.clampDeltaTo),this.run=this.run.bind(this)}get stages(){return this.sortedVertices}createStage(t,n){const i=new VT(this,t,n==null?void 0:n.callback);return this.add(t,i,{after:n==null?void 0:n.after,before:n==null?void 0:n.before}),i}getStage(t){return this.getValueByKey(t)}run(t){const n=t-this.lastTime;this.forEachNode(i=>{i.run(Math.min(n/1e3,this.clampDeltaTo))}),this.lastTime=t}runWithTiming(t){const n=t-this.lastTime,i={},r=performance.now();return this.forEachNode(o=>{const a=performance.now(),l=o.runWithTiming(Math.min(n/1e3,this.clampDeltaTo)),c=performance.now()-a;i[o.key.toString()]={duration:c,tasks:l}}),{total:performance.now()-r,stages:i}}getSchedule(t={tasks:!0}){return{stages:this.mapNodes(n=>{if(n===void 0)throw new Error("Stage not found");return{key:n.key.toString(),tasks:t.tasks?n.getSchedule():void 0}})}}dispose(){this.clear()}}const WT=s=>{const e=new HT,t=e.createStage(Symbol("threlte-main-stage")),n={scheduler:e,frameInvalidated:!0,autoInvalidations:new Set,shouldAdvance:!1,advance:()=>{n.shouldAdvance=!0},autoRender:dn(s.autoRender??!0),renderMode:dn(s.renderMode??"on-demand"),invalidate(){n.frameInvalidated=!0},mainStage:t,shouldRender:()=>n.renderMode.current==="always"||n.renderMode.current==="on-demand"&&(n.frameInvalidated||n.autoInvalidations.size>0)||n.renderMode.current==="manual"&&n.shouldAdvance,renderStage:e.createStage(Symbol("threlte-render-stage"),{after:t,callback(i,r){n.shouldRender()&&r()}}),resetFrameInvalidation(){n.frameInvalidated=!1,n.shouldAdvance=!1}};return yi(()=>{n.autoRender.set(s.autoRender??!0)}),yi(()=>{n.renderMode.set(s.renderMode??"on-demand")}),xr(()=>{n.scheduler.dispose()}),Ti("threlte-scheduler-context",n),n},au=()=>{const s=ii("threlte-scheduler-context");if(!s)throw new Error("useScheduler can only be used in a child component to <Canvas>.");return s},XT=()=>{const{size:s}=ou(),{invalidate:e}=au(),t=new bn(75,0,.1,1e3);t.position.z=5,t.lookAt(0,0,0);const n=dn(t);ei(s,r=>{if(n.current===t){const o=n.current;o.aspect=r.width/r.height,o.updateProjectionMatrix(),e()}});const i={camera:n};return Ti("threlte-camera-context",i),i},s_=()=>{const s=ii("threlte-camera-context");if(!s)throw new Error("useCamera can only be used in a child component to <Canvas>.");return s},YT=()=>{const s={removeObjectFromDisposal:e=>{s.disposableObjects.delete(e)},disposableObjectMounted:e=>{const t=s.disposableObjects.get(e);t?s.disposableObjects.set(e,t+1):s.disposableObjects.set(e,1)},disposableObjectUnmounted:e=>{const t=s.disposableObjects.get(e);t&&t>0&&(s.disposableObjects.set(e,t-1),t-1<=0&&(s.shouldDispose=!0))},disposableObjects:new Map,shouldDispose:!1,dispose:async(e=!1)=>{await rf(),!(!s.shouldDispose&&!e)&&(s.disposableObjects.forEach((t,n)=>{var i;(t===0||e)&&((i=n==null?void 0:n.dispose)==null||i.call(n),s.disposableObjects.delete(n))}),s.shouldDispose=!1)}};return xr(()=>{s.dispose(!0)}),Ti("threlte-disposal-context",s),s},o_=()=>{const s=ii("threlte-disposal-context");if(!s)throw new Error("useDisposal can only be used in a child component to <Canvas>.");return s},a_=Symbol("threlte-parent-context"),l_=s=>{const e=dn(s);return Ti(a_,e),e},$f=()=>ii(a_),xh=Symbol("threlte-parent-object3d-context"),qT=s=>{const e=of(s);return Ti(xh,e),e},jT=s=>{const e=ii(xh),t=ti(s),n=rl([t,e],([i,r])=>i??r);return Ti(xh,n),t},ZT=()=>ii(xh);function so(s,e,t){if(!FT)return{task:void 0,start:()=>{},stop:()=>{},started:of(!1)};let n,i,r;ts.isKey(s)?(n=s,i=e,r=t):(n=Symbol("useTask"),i=s,r=e);const o=au();let a=o.mainStage;if(r){if(r.stage)if(ts.isValue(r.stage))a=r.stage;else{const d=o.scheduler.getStage(r.stage);if(!d)throw new Error(`No stage found with key ${r.stage.toString()}`);a=d}else if(r.after)if(Array.isArray(r.after))for(let d=0;d<r.after.length;d++){const f=r.after[d];if(ts.isValue(f)){a=f.stage;break}}else ts.isValue(r.after)&&(a=r.after.stage);else if(r.before)if(Array.isArray(r.before))for(let d=0;d<r.before.length;d++){const f=r.before[d];if(ts.isValue(f)){a=f.stage;break}}else ts.isValue(r.before)&&(a=r.before.stage)}const l=ti(!1),c=a.createTask(n,i,r),h=()=>{l.set(!0),((r==null?void 0:r.autoInvalidate)??!0)&&o.autoInvalidations.add(i),c.start()},u=()=>{l.set(!1),((r==null?void 0:r.autoInvalidate)??!0)&&o.autoInvalidations.delete(i),c.stop()};return(r==null?void 0:r.autoStart)??!0?h():u(),xr(()=>{u(),a.removeTask(n)}),{task:c,start:h,stop:u,started:{subscribe:l.subscribe}}}const JT=s=>{const e={scene:new Fh};return Ti("threlte-scene-context",e),e},c_=()=>{const s=ii("threlte-scene-context");if(!s)throw new Error("useScene can only be used in a child component to <Canvas>.");return s},KT=s=>{const{dispose:e}=o_(),{camera:t}=s_(),{scene:n}=c_(),{invalidate:i,renderStage:r,autoRender:o,scheduler:a,resetFrameInvalidation:l}=au(),{size:c,canvas:h}=ou(),u=s.createRenderer?s.createRenderer(h):new Qf({canvas:h,powerPreference:"high-performance",antialias:!0,alpha:!0}),d=r.createTask(Symbol("threlte-auto-render-task"),()=>{u.render(n,t.current)}),f={renderer:u,colorManagementEnabled:dn(s.colorManagementEnabled??!0),colorSpace:dn(s.colorSpace??"srgb"),dpr:dn(s.dpr??window.devicePixelRatio),shadows:dn(s.shadows??wa),toneMapping:dn(s.toneMapping??zc),autoRenderTask:d};Ti("threlte-renderer-context",f),ei([f.colorManagementEnabled],([g])=>{Lt.enabled=g}),ei([f.colorSpace],([g])=>{"outputColorSpace"in u&&(u.outputColorSpace=g)}),ei([f.dpr],([g])=>{"setPixelRatio"in u&&u.setPixelRatio(g)});const{start:p,stop:v}=so(()=>{var g;!("xr"in u)||(g=u.xr)!=null&&g.isPresenting||(u.setSize(c.current.width,c.current.height),i(),v())},{before:d,autoStart:!1,autoInvalidate:!1});return ei([c],()=>{p()}),ei([f.shadows],([g])=>{"shadowMap"in u&&(u.shadowMap.enabled=!!g,g&&g!==!0?u.shadowMap.type=g:g===!0&&(u.shadowMap.type=wa))}),ei([f.toneMapping],([g])=>{"toneMapping"in u&&(u.toneMapping=g)}),ei([o],([g])=>(g?f.autoRenderTask.start():f.autoRenderTask.stop(),()=>{f.autoRenderTask.stop()})),"setAnimationLoop"in f.renderer&&f.renderer.setAnimationLoop(m=>{e(),a.run(m),l()}),xr(()=>{if("dispose"in f.renderer){const g=f.renderer.dispose;g()}}),yi(()=>{f.colorManagementEnabled.set(s.colorManagementEnabled??!0)}),yi(()=>{f.colorSpace.set(s.colorSpace??"srgb")}),yi(()=>{f.toneMapping.set(s.toneMapping??zc)}),yi(()=>{f.shadows.set(s.shadows??wa)}),yi(()=>{f.dpr.set(s.dpr??window.devicePixelRatio)}),f},QT=()=>{const s=ii("threlte-renderer-context");if(!s)throw new Error("useRenderer can only be used in a child component to <Canvas>.");return s},$T=()=>{const s=dn({});return Ti("threlte-user-context",s),s},eA=()=>{const s=ii("threlte-user-context");if(!s)throw new Error("useUserContext can only be used in a child component to <Canvas>.");return s},tA=s=>{const{scene:e}=JT();return{scene:e,...BT(s),...DT(),...l_(e),...qT(e),...YT(),...WT(s),...XT(),...KT(s),...$T()}};function nA(s,e){kn(e,!0);let t=yr(e,["$$slots","$$events","$$legacy","children"]);tA(t);var n=pt(),i=Ze(n);Xi(i,()=>e.children),Ye(s,n),Bn()}var iA=$t('<div class="svelte-1osucwe"><canvas class="svelte-1osucwe"><!></canvas></div>');function rA(s,e){let t=yr(e,["$$slots","$$events","$$legacy","children"]),n=Hi(void 0),i=Hi(void 0);var r=iA(),o=Os(r),a=Os(o);{var l=c=>{nA(c,Br({get dom(){return ye(i)},get canvas(){return ye(n)}},()=>t,{children:(h,u)=>{var d=pt(),f=Ze(d);Xi(f,()=>e.children??kr),Ye(h,d)},$$slots:{default:!0}}))};Bt(a,c=>{ye(n)&&ye(i)&&c(l)})}Fs(o),Sp(o,c=>Ui(n,c),()=>ye(n)),Fs(r),Sp(r,c=>Ui(i,c),()=>ye(i)),Ye(s,r)}const ki=()=>{const s=au(),e=QT(),t=s_(),n=c_(),i=ou();return{advance:s.advance,autoRender:s.autoRender,autoRenderTask:e.autoRenderTask,camera:t.camera,colorManagementEnabled:e.colorManagementEnabled,colorSpace:e.colorSpace,dpr:e.dpr,invalidate:s.invalidate,mainStage:s.mainStage,renderer:e.renderer,renderMode:s.renderMode,renderStage:s.renderStage,scheduler:s.scheduler,shadows:e.shadows,shouldRender:s.shouldRender,dom:i.dom,canvas:i.canvas,size:i.size,toneMapping:e.toneMapping,get scene(){return n.scene},set scene(o){n.scene=o}}},sA=s=>typeof s=="object"&&s!==null,oA=()=>{const{invalidate:s}=ki();let e;const t=ti(),n=$f(),i=ZT(),r=l_(),o=jT();ei([t,r,n,i],([c,h,u,d])=>{if(e==null||e(),e=void 0,!h){s();return}if(c!==void 0){if(c){if(typeof c=="function")e=c({ref:h,parent:u,parentObject3D:d});else if(Li(c,"Object3D")&&Li(h,"Object3D"))e=()=>c==null?void 0:c.remove(h),c==null||c.add(h);else if(typeof c=="string"){const{target:f,key:p}=r_(u,c),v=f[p];e=()=>f[p]=v,f[p]=h}}}else Li(h,"Object3D")?(e=()=>d==null?void 0:d.remove(h),d==null||d.add(h)):sA(u)&&(Li(h,"Material")?u.material=h:Li(h,"BufferGeometry")&&(u.geometry=h));s()});const a=c=>{t.set(c)},l=c=>{r.set(c),Li(c,"Object3D")&&o.set(c)};return xr(()=>{e==null||e(),s()}),{updateRef:l,updateAttach:a}},aA=s=>Li(s,"PerspectiveCamera")||Li(s,"OrthographicCamera"),lA=()=>{const{invalidate:s,size:e,camera:t}=ki(),n=ti(),i=ti(!0),r=ti(!1);return ei([n,r],([c,h])=>{!c||!h||(t.set(c),s())}),ei([n,i,e],([c,h,u])=>{!c||h||(Li(c,"OrthographicCamera")?(c.left=u.width/-2,c.right=u.width/2,c.top=u.height/2,c.bottom=u.height/-2,c.updateProjectionMatrix(),c.updateMatrixWorld(),s()):Li(c,"PerspectiveCamera")&&(c.aspect=u.width/u.height,c.updateProjectionMatrix(),c.updateMatrixWorld(),s()))}),{updateRef:c=>{aA(c)&&n.set(c)},updateManual:c=>{i.set(c)},updateMakeDefault:c=>{r.set(c)}}},cA=s=>{let e,t,n=!1;const i=()=>{e==null||e(),e=s==null?void 0:s(t)},r=o=>{t=o,n&&i()};return sf(()=>{i(),n=!0}),xr(()=>e==null?void 0:e()),{updateRef:r}},og=Symbol("threlte-disposable-object-context"),hA=s=>typeof(s==null?void 0:s.dispose)=="function"&&!Li(s,"Scene"),uA=s=>{let e;const t=ti(void 0),n=ti(s),{disposableObjectMounted:i,disposableObjectUnmounted:r,removeObjectFromDisposal:o}=o_(),a=ii(og),l=rl([n,a??ti(!0)],([u,d])=>u??d??!0);return Ti(og,l),ei([t,l],([u,d])=>{u===e?d?e&&i(e):e&&o(e):d&&(e&&r(e),u&&i(u)),e=u}),xr(()=>{if(!Rd(l))return;const u=Rd(t);u&&r(u)}),{updateRef:u=>{hA(u)&&t.set(u)},updateDispose:u=>{n.set(u)}}},dA=s=>s!==null&&typeof s=="object"&&"addEventListener"in s&&"removeEventListener"in s,fA=(s={})=>{const e=i=>{var r;i!=null&&i.type&&((r=s[`on${i.type}`])==null||r.call(s,i))},t=(i,r)=>{const o=[];for(const a of Object.keys(r))a.startsWith("on")&&(i.addEventListener(a.slice(2),e),o.push(a));return()=>{for(let a=0;a<o.length;a++)i.removeEventListener(o[a],e)}};return{updateRef:i=>{if(dA(i))return t(i,s)}}};let Xd;const pA=s=>{Xd=s},mA=()=>{const s=Xd;return Xd=void 0,s},gA=s=>{const t=ii("threlte-plugin-context");if(!t)return;const n=[],i=Object.values(t);if(i.length){const r=s();for(let o=0;o<i.length;o++){const a=i[o],l=a(r);l&&l.pluginProps&&n.push(...l.pluginProps)}}return{pluginsProps:n}},vA=new Set(["$$scope","$$slots","type","args","attach","instance"]),_A=new Set(["fov","aspect","near","far","left","right","top","bottom","zoom"]),yA=s=>typeof s=="string"||typeof s=="number"||typeof s=="boolean"||typeof s>"u"||s===null,ag=(s,e,t)=>{var n,i,r;return!Array.isArray(t)&&typeof t=="number"&&typeof((n=s[e])==null?void 0:n.setScalar)=="function"&&!((i=s[e])!=null&&i.isColor)?(o,a,l)=>{o[a].setScalar(l)}:typeof((r=s[e])==null?void 0:r.set)=="function"?Array.isArray(t)?(o,a,l)=>{o[a].set(...l)}:(o,a,l)=>{o[a].set(l)}:(o,a,l)=>{o[a]=l}},xA=()=>{const{invalidate:s}=ki(),e=new Map,t=new Map,n=(r,o,a,l)=>{if(yA(a)){const u=e.get(o);if(u&&u.instance===r&&u.value===a)return;e.set(o,{instance:r,value:a})}const{key:c,target:h}=r_(r,o);if(a!=null){const u=t.get(o);if(u)u(h,c,a);else{const d=ag(h,c,a);t.set(o,d),d(h,c,a)}}else ag(h,c,a)(h,c,a);l.manualCamera||_A.has(c)&&(h.isPerspectiveCamera||h.isOrthographicCamera)&&h.updateProjectionMatrix()};return{updateProp:(r,o,a,l)=>{var c;!vA.has(o)&&!((c=l.pluginsProps)!=null&&c.includes(o))&&n(r,o,a,l),s()}}},bA=/^\s*class\s+/,SA=s=>typeof s!="function"?!1:bA.test(s.toString()),MA=s=>Array.isArray(s),wA=(s,e)=>SA(s)?MA(e)?new s(...e):new s:s;function ld(s,e){kn(e,!0);let t=Xe(e,"is",19,mA),n=Xe(e,"manual",3,!1),i=Xe(e,"makeDefault",3,!1),r=Xe(e,"ref",15),o=yr(e,["$$slots","$$events","$$legacy","is","args","attach","manual","makeDefault","dispose","ref","oncreate","children"]),a=Mt(()=>wA(t(),e.args));const l=cA(e.oncreate);Dt(()=>{r()!==ye(a)&&(r(ye(a)),l.updateRef(ye(a)))});const c=gA(()=>({get ref(){return ye(a)},get args(){return e.args},get attach(){return e.attach},get manual(){return n()},get makeDefault(){return i()},get dispose(){return e.dispose},get props(){return o}})),{updateProp:h}=xA();Object.keys(o).forEach(m=>{Dt(()=>{h(ye(a),m,o[m],{manualCamera:n(),pluginsProps:c==null?void 0:c.pluginsProps})})});const u=oA();Dt(()=>u.updateAttach(e.attach)),Dt(()=>u.updateRef(ye(a)));const d=lA();Dt(()=>d.updateRef(ye(a))),Dt(()=>d.updateManual(n())),Dt(()=>d.updateMakeDefault(i()));const f=uA(e.dispose);Dt(()=>f.updateRef(ye(a))),Dt(()=>f.updateDispose(e.dispose));const p=fA(o);Dt(()=>p.updateRef(ye(a)));var v=pt(),g=Ze(v);Xi(g,()=>e.children??kr,()=>({ref:ye(a)})),Ye(s,v),Bn()}const EA={},St=new Proxy(function(){},{apply(s,e,t){return ld(...t)},get(s,e){if(typeof e!="string")return ld;const t=EA[e]||IT[e];if(t===void 0)throw new Error(`No Three.js module found for ${e}. Did you forget to extend the catalogue?`);return pA(t),ld}});function TA(s,e){const t="threlte-plugin-context";e&&Ti(t,{...ii(t),[s]:e})}function AA(s,e){const{scheduler:t}=ki();return t.getStage(s)??t.createStage(s,e)}function CA(s,e,t){const n=eA();if(!n)throw new Error("No user context store found, did you invoke this function outside of your main <Canvas> component?");return e?(n.update(i=>{if(s in i)return i;const r=typeof e=="function"?e():e;return i[s]=r,i}),n.current[s]):rl(n,i=>i[s])}function h_(s,e){const{remember:t,clear:n}=LT();let i;const r=()=>new s;return{load:(l,c)=>{const h=async u=>{var d;if(i||(i=r()),"loadAsync"in i){const f=await i.loadAsync(u,c==null?void 0:c.onProgress);return((d=c==null?void 0:c.transform)==null?void 0:d.call(c,f))??f}else return new Promise((f,p)=>{i.load(u,v=>{var g;return f(((g=c==null?void 0:c.transform)==null?void 0:g.call(c,v))??v)},v=>{var g;return(g=c==null?void 0:c.onProgress)==null?void 0:g.call(c,v)},p)})};if(Array.isArray(l)){const u=l.map(f=>t(()=>h(f),[s,f]));return ad(Promise.all(u))}else if(typeof l=="string"){const u=t(()=>h(l),[s,l]);return ad(u)}else{const u=Object.values(l).map(f=>t(()=>h(f),[s,f]));return ad(Promise.all(u).then(f=>Object.fromEntries(Object.entries(l).map(([p],v)=>[p,f[v]]))))}},clear:l=>{Array.isArray(l)?l.forEach(c=>{n([s,c])}):typeof l=="string"?n([s,l]):Object.entries(l).forEach(([c,h])=>{n([s,c,h])})},loader:i}}const Cs=s=>({subscribe:s.subscribe,get current(){return s.current}});let Ua=0;const ep=dn(!1),lu=dn(!1),tp=dn(void 0),np=dn(0),ip=dn(0),u_=dn([]),rp=dn(0),{onStart:cd,onLoad:hd,onError:ud}=ho;ho.onStart=(s,e,t)=>{cd==null||cd(s,e,t),lu.set(!0),tp.set(s),np.set(e),ip.set(t);const n=(e-Ua)/(t-Ua);rp.set(n),n===1&&ep.set(!0)};ho.onLoad=()=>{hd==null||hd(),lu.set(!1)};ho.onError=s=>{ud==null||ud(s),u_.update(e=>[...e,s])};ho.onProgress=(s,e,t)=>{e===t&&(Ua=t),lu.set(!0),tp.set(s),np.set(e),ip.set(t);const n=(e-Ua)/(t-Ua)||1;rp.set(n),n===1&&ep.set(!0)};Cs(lu),Cs(tp),Cs(np),Cs(ip),Cs(u_),Cs(rp),Cs(ep);new L;new L;new L;new An;new st;new ss;new L;const RA=Symbol("THRELTE_SUSPENSE_CONTEXT_IDENTIFIER"),PA=()=>{const s=ii(RA),e=new Set,t=i=>(s&&(s.suspend(i),e.add(i)),i),n={suspended:rl((s==null?void 0:s.suspended)??of(!1),i=>i)};return xr(()=>{if(s){for(const i of e)s.onComponentDestroy(i);e.clear()}}),Object.assign(t,n)};new L;new L;new L;new xe;var IA=Object.defineProperty,DA=(s,e,t)=>e in s?IA(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,Wt=(s,e,t)=>DA(s,typeof e!="symbol"?e+"":e,t);const d_=(s,e)=>{const[t,n]=e.split("-");return Object.assign(s.style,{left:n==="left"?"0":n==="center"?"50%":"",right:n==="right"?"0":"",top:t==="top"?"0":t==="bottom"?"":"50%",bottom:t==="bottom"?"0":"",transform:`${n==="center"?"translateX(-50%)":""} ${t==="center"?"translateY(-50%)":""}`}),e},LA=({placement:s,size:e,offset:t,id:n,className:i})=>{const r=document.createElement("div"),{top:o,left:a,right:l,bottom:c}=t;return Object.assign(r.style,{id:n,position:"absolute",zIndex:"1000",height:`${e}px`,width:`${e}px`,margin:`${o}px ${l}px ${c}px ${a}px`,borderRadius:"100%"}),d_(r,s),n&&(r.id=n),i&&(r.className=i),r},UA=s=>{const e=typeof s=="string"?document.querySelector(s):s;if(!e)throw Error("Invalid DOM element");return e};function Yd(s,e,t){return Math.max(e,Math.min(t,s))}const NA=[["x",0,3],["y",1,4],["z",2,5]],lg=new L;function cg({isSphere:s},e,t){s&&(lg.set(0,0,1).applyQuaternion(t.quaternion),NA.forEach(([n,i,r])=>{const o=lg[n];let a=e[i],l=a.userData.opacity;a.material.opacity=Yd(o>=0?l:l/2,0,1),a=e[r],l=a.userData.opacity,a.material.opacity=Yd(o>=0?l/2:l,0,1)}))}const OA=(s,e,t=10)=>Math.abs(s.clientX-e.x)<t&&Math.abs(s.clientY-e.y)<t,hg=new iu,ug=new xe,dg=(s,e,t,n)=>{ug.set((s.clientX-e.left)/e.width*2-1,-((s.clientY-e.top)/e.height)*2+1),hg.setFromCamera(ug,t);const i=hg.intersectObjects(n,!1),r=i.length?i[0]:null;return!r||!r.object.visible?null:r},dd=1e-6,FA=2*Math.PI,f_=["x","y","z"],$a=[...f_,"nx","ny","nz"],kA=["right","top","front","left","bottom","back"],p_=1.3,fg=(s,e=!0)=>{const{material:t,userData:n}=s,{color:i,opacity:r}=e?n.hover:n;t.color.set(i),t.opacity=r},Rs=s=>JSON.parse(JSON.stringify(s)),BA=s=>{const e=s.type||"sphere",t=e==="sphere",n=s.resolution||t?64:128,{container:i}=s;s.container=void 0,s=JSON.parse(JSON.stringify(s)),s.container=i,kA.forEach((l,c)=>{s[l]&&(s[$a[c]]=s[l])});const r={enabled:!0,color:16777215,opacity:1,scale:.7,labelColor:2236962,line:!1,border:{size:0,color:14540253},hover:{color:t?16777215:9688043,labelColor:2236962,opacity:1,scale:.7,border:{size:0,color:14540253}}},o={line:!1,scale:t?.45:.7,hover:{scale:t?.5:.7}},a={type:e,container:document.body,size:128,placement:"top-right",resolution:n,lineWidth:20,radius:t?1:.2,smoothness:18,animated:!0,speed:1,background:{enabled:!0,color:t?16777215:14739180,opacity:t?0:1,hover:{color:t?16777215:14739180,opacity:t?.2:1}},font:{family:"sans-serif",weight:900},offset:{top:10,left:10,bottom:10,right:10},corners:{enabled:!t,color:t?15915362:16777215,opacity:1,scale:t?.15:.2,radius:1,smoothness:18,hover:{color:t?16777215:9688043,opacity:1,scale:t?.2:.225}},edges:{enabled:!t,color:t?15915362:16777215,opacity:t?1:0,radius:t?1:.125,smoothness:18,scale:t?.15:1,hover:{color:t?16777215:9688043,opacity:1,scale:t?.2:1}},x:{...Rs(r),...t?{label:"X",color:16725587,line:!0}:{label:"Right"}},y:{...Rs(r),...t?{label:"Y",color:9100032,line:!0}:{label:"Top"}},z:{...Rs(r),...t?{label:"Z",color:2920447,line:!0}:{label:"Front"}},nx:{...Rs(o),label:t?"":"Left"},ny:{...Rs(o),label:t?"":"Bottom"},nz:{...Rs(o),label:t?"":"Back"}};return qd(s,a),f_.forEach(l=>qd(s[`n${l}`],Rs(s[l]))),{...s,isSphere:t}};function qd(s,...e){if(s instanceof HTMLElement||typeof s!="object"||s===null)return s;for(const t of e)for(const n in t)n!=="container"&&n in t&&(s[n]===void 0?s[n]=t[n]:typeof t[n]=="object"&&!Array.isArray(t[n])&&(s[n]=qd(s[n]||{},t[n])));return s}const zA=(s,e=2)=>{const t=new Ge,n=e*2,{isSphere:i,resolution:r,radius:o,font:a,corners:l,edges:c}=s,h=$a.map(M=>({...s[M],radius:o}));i&&l.enabled&&h.push(l),i&&c.enabled&&h.push(c);const u=document.createElement("canvas"),d=u.getContext("2d");u.width=r*2+n*2,u.height=r*h.length+n*h.length;const[f,p]=E(h,r,a);h.forEach(({radius:M,label:T,color:S,labelColor:b,border:D,hover:{color:P,labelColor:k,border:V}},K)=>{const N=r*K+K*n+e;_(e,N,e,r,M,T,D,S,b),_(r+e*3,N,e,r,M,T,V??D,P??S,k??b)});const v=h.length,g=e/(r*2),m=e/(r*6),x=1/v,y=new mv(u);return y.repeat.set(.5-2*g,x-2*m),y.offset.set(g,1-m),Object.assign(y,{colorSpace:ln,wrapS:$i,wrapT:$i,userData:{offsetX:g,offsetY:m,cellHeight:x}}),y;function _(M,T,S,b,D,P,k,V,K){if(D=D*(b/2),V!=null&&V!==""&&(N(),d.fillStyle=t.set(V).getStyle(),d.fill()),k&&k.size){const Q=k.size*b/2;M+=Q,T+=Q,b-=k.size*b,D=Math.max(0,D-Q),N(),d.strokeStyle=t.set(k.color).getStyle(),d.lineWidth=k.size*b,d.stroke()}P&&w(d,M+b/2,T+(b+S)/2,P,t.set(K).getStyle());function N(){d.beginPath(),d.moveTo(M+D,T),d.lineTo(M+b-D,T),d.arcTo(M+b,T,M+b,T+D,D),d.lineTo(M+b,T+b-D),d.arcTo(M+b,T+b,M+b-D,T+b,D),d.lineTo(M+D,T+b),d.arcTo(M,T+b,M,T+b-D,D),d.lineTo(M,T+D),d.arcTo(M,T,M+D,T,D),d.closePath()}}function E(M,T,S){const b=[...M].sort((X,F)=>{var J,$;return(((J=X.label)==null?void 0:J.length)||0)-((($=F.label)==null?void 0:$.length)||0)}).pop().label,{family:D,weight:P}=S,k=i?Math.sqrt(Math.pow(T*.7,2)/2):T;let V=k,K=0,N=0;do{d.font=`${P} ${V}px ${D}`;const X=d.measureText(b);K=X.width,N=X.fontBoundingBoxDescent,V--}while(K>k&&V>0);const Q=k/N,Z=Math.min(k/K,Q),j=Math.floor(V*Z);return[`${P} ${j}px ${D}`,Q]}function w(M,T,S,b,D){M.font=f,M.textAlign="center",M.textBaseline="middle",M.fillStyle=D,M.fillText(b,T,S+(i?p:0))}},GA=(s,e)=>s.offset.x=(e?.5:0)+s.userData.offsetX,sp=(s,e)=>{const{offset:t,userData:{offsetY:n,cellHeight:i}}=s;t.y=1-(e+1)*i+n};function op(s,e,t=2,n=2){const i=t/2-s,r=n/2-s,o=s/t,a=(t-s)/t,l=s/n,c=(n-s)/n,h=[i,r,0,-i,r,0,-i,-r,0,i,-r,0],u=[a,c,o,c,o,l,a,l],d=[3*(e+1)+3,3*(e+1)+4,e+4,e+5,2*(e+1)+4,2,1,2*(e+1)+3,3,4*(e+1)+3,4,0],f=[0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11].map(w=>d[w]);let p,v,g,m,x,y,_,E;for(let w=0;w<4;w++){m=w<1||w>2?i:-i,x=w<2?r:-r,y=w<1||w>2?a:o,_=w<2?c:l;for(let M=0;M<=e;M++)p=Math.PI/2*(w+M/e),v=Math.cos(p),g=Math.sin(p),h.push(m+s*v,x+s*g,0),u.push(y+o*v,_+l*g),M<e&&(E=(e+1)*w+M+4,f.push(w,E,E+1))}return new bt().setIndex(new Ct(new Uint32Array(f),1)).setAttribute("position",new Ct(new Float32Array(h),3)).setAttribute("uv",new Ct(new Float32Array(u),2))}const VA=(s,e)=>{const t=new L,{isSphere:n,radius:i,smoothness:r}=s,o=op(i,r);return $a.map((a,l)=>{const c=l<3,h=$a[l],u=l?e.clone():e;sp(u,l);const{enabled:d,scale:f,opacity:p,hover:v}=s[h],g={map:u,opacity:p,transparent:!0},m=n?new ul(new qo(g)):new ke(o,new On(g)),x=c?h:h[1];return m.position[x]=(c?1:-1)*(n?p_:1),n||m.lookAt(t.copy(m.position).multiplyScalar(1.7)),m.scale.setScalar(f),m.renderOrder=1,m.visible=d,m.userData={scale:f,opacity:p,hover:v},m})},HA=(s,e)=>{const{isSphere:t,corners:n}=s;if(!n.enabled)return[];const{color:i,opacity:r,scale:o,radius:a,smoothness:l,hover:c}=n,h=t?null:op(a,l),u={transparent:!0,opacity:r},d=[1,1,1,-1,1,1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,-1,-1,-1,-1,-1].map(p=>p*.85),f=new L;return Array(d.length/3).fill(0).map((p,v)=>{if(t){const x=e.clone();sp(x,6),u.map=x}else u.color=i;const g=t?new ul(new qo(u)):new ke(h,new On(u)),m=v*3;return g.position.set(d[m],d[m+1],d[m+2]),t&&g.position.normalize().multiplyScalar(1.7),g.scale.setScalar(o),g.lookAt(f.copy(g.position).multiplyScalar(2)),g.renderOrder=1,g.userData={color:i,opacity:r,scale:o,hover:c},g})},WA=(s,e,t)=>{const{isSphere:n,edges:i}=s;if(!i.enabled)return[];const{color:r,opacity:o,scale:a,hover:l,radius:c,smoothness:h}=i,u=n?null:op(c,h,1.2,.25),d={transparent:!0,opacity:o},f=[0,1,1,0,-1,1,1,0,1,-1,0,1,0,1,-1,0,-1,-1,1,0,-1,-1,0,-1,1,1,0,1,-1,0,-1,1,0,-1,-1,0].map(v=>v*.925),p=new L;return Array(f.length/3).fill(0).map((v,g)=>{if(n){const y=e.clone();sp(y,t),d.map=y}else d.color=r;const m=n?new ul(new qo(d)):new ke(u,new On(d)),x=g*3;return m.position.set(f[x],f[x+1],f[x+2]),n&&m.position.normalize().multiplyScalar(1.7),m.scale.setScalar(a),m.lookAt(p.copy(m.position).multiplyScalar(2)),!n&&!m.position.y&&(m.rotation.z=Math.PI/2),m.renderOrder=1,m.userData={color:r,opacity:o,scale:a,hover:l},m})};function XA(s,e=!1){const t=s[0].index!==null,n=new Set(Object.keys(s[0].attributes)),i=new Set(Object.keys(s[0].morphAttributes)),r={},o={},a=s[0].morphTargetsRelative,l=new bt;let c=0;for(let h=0;h<s.length;++h){const u=s[h];let d=0;if(t!==(u.index!==null))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(const f in u.attributes){if(!n.has(f))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+'. All geometries must have compatible attributes; make sure "'+f+'" attribute exists among all geometries, or in none of them.'),null;r[f]===void 0&&(r[f]=[]),r[f].push(u.attributes[f]),d++}if(d!==n.size)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". Make sure all geometries have the same number of attributes."),null;if(a!==u.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(const f in u.morphAttributes){if(!i.has(f))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+".  .morphAttributes must be consistent throughout all geometries."),null;o[f]===void 0&&(o[f]=[]),o[f].push(u.morphAttributes[f])}if(e){let f;if(t)f=u.index.count;else if(u.attributes.position!==void 0)f=u.attributes.position.count;else return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". The geometry must have either an index or a position attribute"),null;l.addGroup(c,f,h),c+=f}}if(t){let h=0;const u=[];for(let d=0;d<s.length;++d){const f=s[d].index;for(let p=0;p<f.count;++p)u.push(f.getX(p)+h);h+=s[d].attributes.position.count}l.setIndex(u)}for(const h in r){const u=pg(r[h]);if(!u)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+h+" attribute."),null;l.setAttribute(h,u)}for(const h in o){const u=o[h][0].length;if(u===0)break;l.morphAttributes=l.morphAttributes||{},l.morphAttributes[h]=[];for(let d=0;d<u;++d){const f=[];for(let v=0;v<o[h].length;++v)f.push(o[h][v][d]);const p=pg(f);if(!p)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+h+" morphAttribute."),null;l.morphAttributes[h].push(p)}}return l}function pg(s){let e,t,n,i=-1,r=0;for(let c=0;c<s.length;++c){const h=s[c];if(e===void 0&&(e=h.array.constructor),e!==h.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(t===void 0&&(t=h.itemSize),t!==h.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(n===void 0&&(n=h.normalized),n!==h.normalized)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;if(i===-1&&(i=h.gpuType),i!==h.gpuType)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes."),null;r+=h.count*t}const o=new e(r),a=new Ct(o,t,n);let l=0;for(let c=0;c<s.length;++c){const h=s[c];if(h.isInterleavedBufferAttribute){const u=l/t;for(let d=0,f=h.count;d<f;d++)for(let p=0;p<t;p++){const v=h.getComponent(d,p);a.setComponent(d+u,p,v)}}else o.set(h.array,l);l+=h.count*t}return i!==void 0&&(a.gpuType=i),a}const YA=(s,e)=>{const{isSphere:t,background:{enabled:n,color:i,opacity:r,hover:o}}=e;let a;const l=new On({color:i,side:ni,opacity:r,transparent:!0,depthWrite:!1});if(!n)return null;if(t)a=new ke(new ao(1.8,64,64),l);else{let c;s.forEach(h=>{const u=h.scale.x;h.scale.setScalar(.9),h.updateMatrix();const d=h.geometry.clone();d.applyMatrix4(h.matrix),c=c?XA([c,d]):d,h.scale.setScalar(u)}),a=new ke(c,l)}return a.userData={color:i,opacity:r,hover:o},a},mg=new Mn,hc=new L;class m_ extends nu{constructor(){super(),this.isLineSegmentsGeometry=!0,this.type="LineSegmentsGeometry";const e=[-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],t=[-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],n=[0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5];this.setIndex(n),this.setAttribute("position",new Ke(e,3)),this.setAttribute("uv",new Ke(t,2))}applyMatrix4(e){const t=this.attributes.instanceStart,n=this.attributes.instanceEnd;return t!==void 0&&(t.applyMatrix4(e),n.applyMatrix4(e),t.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}setPositions(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const n=new yh(t,6,1);return this.setAttribute("instanceStart",new Ni(n,3,0)),this.setAttribute("instanceEnd",new Ni(n,3,3)),this.computeBoundingBox(),this.computeBoundingSphere(),this}setColors(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const n=new yh(t,6,1);return this.setAttribute("instanceColorStart",new Ni(n,3,0)),this.setAttribute("instanceColorEnd",new Ni(n,3,3)),this}fromWireframeGeometry(e){return this.setPositions(e.attributes.position.array),this}fromEdgesGeometry(e){return this.setPositions(e.attributes.position.array),this}fromMesh(e){return this.fromWireframeGeometry(new Lf(e.geometry)),this}fromLineSegments(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Mn);const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;e!==void 0&&t!==void 0&&(this.boundingBox.setFromBufferAttribute(e),mg.setFromBufferAttribute(t),this.boundingBox.union(mg))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new An),this.boundingBox===null&&this.computeBoundingBox();const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;if(e!==void 0&&t!==void 0){const n=this.boundingSphere.center;this.boundingBox.getCenter(n);let i=0;for(let r=0,o=e.count;r<o;r++)hc.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(hc)),hc.fromBufferAttribute(t,r),i=Math.max(i,n.distanceToSquared(hc));this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}toJSON(){}applyMatrix(e){return console.warn("THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4()."),this.applyMatrix4(e)}}je.line={worldUnits:{value:1},linewidth:{value:1},resolution:{value:new xe(1,1)},dashOffset:{value:0},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}};ci.line={uniforms:cl.merge([je.common,je.fog,je.line]),vertexShader:`
		#include <common>
		#include <color_pars_vertex>
		#include <fog_pars_vertex>
		#include <logdepthbuf_pars_vertex>
		#include <clipping_planes_pars_vertex>

		uniform float linewidth;
		uniform vec2 resolution;

		attribute vec3 instanceStart;
		attribute vec3 instanceEnd;

		attribute vec3 instanceColorStart;
		attribute vec3 instanceColorEnd;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#ifdef USE_DASH

			uniform float dashScale;
			attribute float instanceDistanceStart;
			attribute float instanceDistanceEnd;
			varying float vLineDistance;

		#endif

		void trimSegment( const in vec4 start, inout vec4 end ) {

			// trim end segment so it terminates between the camera plane and the near plane

			// conservative estimate of the near plane
			float a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column
			float b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column
			float nearEstimate = - 0.5 * b / a;

			float alpha = ( nearEstimate - start.z ) / ( end.z - start.z );

			end.xyz = mix( start.xyz, end.xyz, alpha );

		}

		void main() {

			#ifdef USE_COLOR

				vColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;

			#endif

			#ifdef USE_DASH

				vLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;
				vUv = uv;

			#endif

			float aspect = resolution.x / resolution.y;

			// camera space
			vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );
			vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );

			#ifdef WORLD_UNITS

				worldStart = start.xyz;
				worldEnd = end.xyz;

			#else

				vUv = uv;

			#endif

			// special case for perspective projection, and segments that terminate either in, or behind, the camera plane
			// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space
			// but we need to perform ndc-space calculations in the shader, so we must address this issue directly
			// perhaps there is a more elegant solution -- WestLangley

			bool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column

			if ( perspective ) {

				if ( start.z < 0.0 && end.z >= 0.0 ) {

					trimSegment( start, end );

				} else if ( end.z < 0.0 && start.z >= 0.0 ) {

					trimSegment( end, start );

				}

			}

			// clip space
			vec4 clipStart = projectionMatrix * start;
			vec4 clipEnd = projectionMatrix * end;

			// ndc space
			vec3 ndcStart = clipStart.xyz / clipStart.w;
			vec3 ndcEnd = clipEnd.xyz / clipEnd.w;

			// direction
			vec2 dir = ndcEnd.xy - ndcStart.xy;

			// account for clip-space aspect ratio
			dir.x *= aspect;
			dir = normalize( dir );

			#ifdef WORLD_UNITS

				vec3 worldDir = normalize( end.xyz - start.xyz );
				vec3 tmpFwd = normalize( mix( start.xyz, end.xyz, 0.5 ) );
				vec3 worldUp = normalize( cross( worldDir, tmpFwd ) );
				vec3 worldFwd = cross( worldDir, worldUp );
				worldPos = position.y < 0.5 ? start: end;

				// height offset
				float hw = linewidth * 0.5;
				worldPos.xyz += position.x < 0.0 ? hw * worldUp : - hw * worldUp;

				// don't extend the line if we're rendering dashes because we
				// won't be rendering the endcaps
				#ifndef USE_DASH

					// cap extension
					worldPos.xyz += position.y < 0.5 ? - hw * worldDir : hw * worldDir;

					// add width to the box
					worldPos.xyz += worldFwd * hw;

					// endcaps
					if ( position.y > 1.0 || position.y < 0.0 ) {

						worldPos.xyz -= worldFwd * 2.0 * hw;

					}

				#endif

				// project the worldpos
				vec4 clip = projectionMatrix * worldPos;

				// shift the depth of the projected points so the line
				// segments overlap neatly
				vec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;
				clip.z = clipPose.z * clip.w;

			#else

				vec2 offset = vec2( dir.y, - dir.x );
				// undo aspect ratio adjustment
				dir.x /= aspect;
				offset.x /= aspect;

				// sign flip
				if ( position.x < 0.0 ) offset *= - 1.0;

				// endcaps
				if ( position.y < 0.0 ) {

					offset += - dir;

				} else if ( position.y > 1.0 ) {

					offset += dir;

				}

				// adjust for linewidth
				offset *= linewidth;

				// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...
				offset /= resolution.y;

				// select end
				vec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;

				// back to clip space
				offset *= clip.w;

				clip.xy += offset;

			#endif

			gl_Position = clip;

			vec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation

			#include <logdepthbuf_vertex>
			#include <clipping_planes_vertex>
			#include <fog_vertex>

		}
		`,fragmentShader:`
		uniform vec3 diffuse;
		uniform float opacity;
		uniform float linewidth;

		#ifdef USE_DASH

			uniform float dashOffset;
			uniform float dashSize;
			uniform float gapSize;

		#endif

		varying float vLineDistance;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#include <common>
		#include <color_pars_fragment>
		#include <fog_pars_fragment>
		#include <logdepthbuf_pars_fragment>
		#include <clipping_planes_pars_fragment>

		vec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {

			float mua;
			float mub;

			vec3 p13 = p1 - p3;
			vec3 p43 = p4 - p3;

			vec3 p21 = p2 - p1;

			float d1343 = dot( p13, p43 );
			float d4321 = dot( p43, p21 );
			float d1321 = dot( p13, p21 );
			float d4343 = dot( p43, p43 );
			float d2121 = dot( p21, p21 );

			float denom = d2121 * d4343 - d4321 * d4321;

			float numer = d1343 * d4321 - d1321 * d4343;

			mua = numer / denom;
			mua = clamp( mua, 0.0, 1.0 );
			mub = ( d1343 + d4321 * ( mua ) ) / d4343;
			mub = clamp( mub, 0.0, 1.0 );

			return vec2( mua, mub );

		}

		void main() {

			#include <clipping_planes_fragment>

			#ifdef USE_DASH

				if ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps

				if ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX

			#endif

			float alpha = opacity;

			#ifdef WORLD_UNITS

				// Find the closest points on the view ray and the line segment
				vec3 rayEnd = normalize( worldPos.xyz ) * 1e5;
				vec3 lineDir = worldEnd - worldStart;
				vec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );

				vec3 p1 = worldStart + lineDir * params.x;
				vec3 p2 = rayEnd * params.y;
				vec3 delta = p1 - p2;
				float len = length( delta );
				float norm = len / linewidth;

				#ifndef USE_DASH

					#ifdef USE_ALPHA_TO_COVERAGE

						float dnorm = fwidth( norm );
						alpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );

					#else

						if ( norm > 0.5 ) {

							discard;

						}

					#endif

				#endif

			#else

				#ifdef USE_ALPHA_TO_COVERAGE

					// artifacts appear on some hardware if a derivative is taken within a conditional
					float a = vUv.x;
					float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
					float len2 = a * a + b * b;
					float dlen = fwidth( len2 );

					if ( abs( vUv.y ) > 1.0 ) {

						alpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );

					}

				#else

					if ( abs( vUv.y ) > 1.0 ) {

						float a = vUv.x;
						float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
						float len2 = a * a + b * b;

						if ( len2 > 1.0 ) discard;

					}

				#endif

			#endif

			vec4 diffuseColor = vec4( diffuse, alpha );

			#include <logdepthbuf_fragment>
			#include <color_fragment>

			gl_FragColor = vec4( diffuseColor.rgb, alpha );

			#include <tonemapping_fragment>
			#include <colorspace_fragment>
			#include <fog_fragment>
			#include <premultiplied_alpha_fragment>

		}
		`};let ap=class extends Ei{constructor(e){super({type:"LineMaterial",uniforms:cl.clone(ci.line.uniforms),vertexShader:ci.line.vertexShader,fragmentShader:ci.line.fragmentShader,clipping:!0}),this.isLineMaterial=!0,this.setValues(e)}get color(){return this.uniforms.diffuse.value}set color(e){this.uniforms.diffuse.value=e}get worldUnits(){return"WORLD_UNITS"in this.defines}set worldUnits(e){e===!0?this.defines.WORLD_UNITS="":delete this.defines.WORLD_UNITS}get linewidth(){return this.uniforms.linewidth.value}set linewidth(e){this.uniforms.linewidth&&(this.uniforms.linewidth.value=e)}get dashed(){return"USE_DASH"in this.defines}set dashed(e){e===!0!==this.dashed&&(this.needsUpdate=!0),e===!0?this.defines.USE_DASH="":delete this.defines.USE_DASH}get dashScale(){return this.uniforms.dashScale.value}set dashScale(e){this.uniforms.dashScale.value=e}get dashSize(){return this.uniforms.dashSize.value}set dashSize(e){this.uniforms.dashSize.value=e}get dashOffset(){return this.uniforms.dashOffset.value}set dashOffset(e){this.uniforms.dashOffset.value=e}get gapSize(){return this.uniforms.gapSize.value}set gapSize(e){this.uniforms.gapSize.value=e}get opacity(){return this.uniforms.opacity.value}set opacity(e){this.uniforms&&(this.uniforms.opacity.value=e)}get resolution(){return this.uniforms.resolution.value}set resolution(e){this.uniforms.resolution.value.copy(e)}get alphaToCoverage(){return"USE_ALPHA_TO_COVERAGE"in this.defines}set alphaToCoverage(e){this.defines&&(e===!0!==this.alphaToCoverage&&(this.needsUpdate=!0),e===!0?(this.defines.USE_ALPHA_TO_COVERAGE="",this.extensions.derivatives=!0):(delete this.defines.USE_ALPHA_TO_COVERAGE,this.extensions.derivatives=!1))}};const gg=new L,vg=new L,Gn=new Rt,Vn=new Rt,ar=new Rt,fd=new L,pd=new st,Wn=new jv,_g=new L,uc=new Mn,dc=new An,lr=new Rt;let fr,Zs;function yg(s,e,t){return lr.set(0,0,-e,1).applyMatrix4(s.projectionMatrix),lr.multiplyScalar(1/lr.w),lr.x=Zs/t.width,lr.y=Zs/t.height,lr.applyMatrix4(s.projectionMatrixInverse),lr.multiplyScalar(1/lr.w),Math.abs(Math.max(lr.x,lr.y))}function qA(s,e){const t=s.matrixWorld,n=s.geometry,i=n.attributes.instanceStart,r=n.attributes.instanceEnd,o=Math.min(n.instanceCount,i.count);for(let a=0,l=o;a<l;a++){Wn.start.fromBufferAttribute(i,a),Wn.end.fromBufferAttribute(r,a),Wn.applyMatrix4(t);const c=new L,h=new L;fr.distanceSqToSegment(Wn.start,Wn.end,h,c),h.distanceTo(c)<Zs*.5&&e.push({point:h,pointOnLine:c,distance:fr.origin.distanceTo(h),object:s,face:null,faceIndex:a,uv:null,uv1:null})}}function jA(s,e,t){const n=e.projectionMatrix,i=s.material.resolution,r=s.matrixWorld,o=s.geometry,a=o.attributes.instanceStart,l=o.attributes.instanceEnd,c=Math.min(o.instanceCount,a.count),h=-e.near;fr.at(1,ar),ar.w=1,ar.applyMatrix4(e.matrixWorldInverse),ar.applyMatrix4(n),ar.multiplyScalar(1/ar.w),ar.x*=i.x/2,ar.y*=i.y/2,ar.z=0,fd.copy(ar),pd.multiplyMatrices(e.matrixWorldInverse,r);for(let u=0,d=c;u<d;u++){if(Gn.fromBufferAttribute(a,u),Vn.fromBufferAttribute(l,u),Gn.w=1,Vn.w=1,Gn.applyMatrix4(pd),Vn.applyMatrix4(pd),Gn.z>h&&Vn.z>h)continue;if(Gn.z>h){const m=Gn.z-Vn.z,x=(Gn.z-h)/m;Gn.lerp(Vn,x)}else if(Vn.z>h){const m=Vn.z-Gn.z,x=(Vn.z-h)/m;Vn.lerp(Gn,x)}Gn.applyMatrix4(n),Vn.applyMatrix4(n),Gn.multiplyScalar(1/Gn.w),Vn.multiplyScalar(1/Vn.w),Gn.x*=i.x/2,Gn.y*=i.y/2,Vn.x*=i.x/2,Vn.y*=i.y/2,Wn.start.copy(Gn),Wn.start.z=0,Wn.end.copy(Vn),Wn.end.z=0;const f=Wn.closestPointToPointParameter(fd,!0);Wn.at(f,_g);const p=dr.lerp(Gn.z,Vn.z,f),v=p>=-1&&p<=1,g=fd.distanceTo(_g)<Zs*.5;if(v&&g){Wn.start.fromBufferAttribute(a,u),Wn.end.fromBufferAttribute(l,u),Wn.start.applyMatrix4(r),Wn.end.applyMatrix4(r);const m=new L,x=new L;fr.distanceSqToSegment(Wn.start,Wn.end,x,m),t.push({point:x,pointOnLine:m,distance:fr.origin.distanceTo(x),object:s,face:null,faceIndex:u,uv:null,uv1:null})}}}class ZA extends ke{constructor(e=new m_,t=new ap({color:Math.random()*16777215})){super(e,t),this.isLineSegments2=!0,this.type="LineSegments2"}computeLineDistances(){const e=this.geometry,t=e.attributes.instanceStart,n=e.attributes.instanceEnd,i=new Float32Array(2*t.count);for(let o=0,a=0,l=t.count;o<l;o++,a+=2)gg.fromBufferAttribute(t,o),vg.fromBufferAttribute(n,o),i[a]=a===0?0:i[a-1],i[a+1]=i[a]+gg.distanceTo(vg);const r=new yh(i,2,1);return e.setAttribute("instanceDistanceStart",new Ni(r,1,0)),e.setAttribute("instanceDistanceEnd",new Ni(r,1,1)),this}raycast(e,t){const n=this.material.worldUnits,i=e.camera;i===null&&!n&&console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.');const r=e.params.Line2!==void 0&&e.params.Line2.threshold||0;fr=e.ray;const o=this.matrixWorld,a=this.geometry,l=this.material;Zs=l.linewidth+r,a.boundingSphere===null&&a.computeBoundingSphere(),dc.copy(a.boundingSphere).applyMatrix4(o);let c;if(n)c=Zs*.5;else{const u=Math.max(i.near,dc.distanceToPoint(fr.origin));c=yg(i,u,l.resolution)}if(dc.radius+=c,fr.intersectsSphere(dc)===!1)return;a.boundingBox===null&&a.computeBoundingBox(),uc.copy(a.boundingBox).applyMatrix4(o);let h;if(n)h=Zs*.5;else{const u=Math.max(i.near,uc.distanceToPoint(fr.origin));h=yg(i,u,l.resolution)}uc.expandByScalar(h),fr.intersectsBox(uc)!==!1&&(n?qA(this,t):jA(this,i,t))}}class g_ extends m_{constructor(){super(),this.isLineGeometry=!0,this.type="LineGeometry"}setPositions(e){const t=e.length-3,n=new Float32Array(2*t);for(let i=0;i<t;i+=3)n[2*i]=e[i],n[2*i+1]=e[i+1],n[2*i+2]=e[i+2],n[2*i+3]=e[i+3],n[2*i+4]=e[i+4],n[2*i+5]=e[i+5];return super.setPositions(n),this}setColors(e){const t=e.length-3,n=new Float32Array(2*t);for(let i=0;i<t;i+=3)n[2*i]=e[i],n[2*i+1]=e[i+1],n[2*i+2]=e[i+2],n[2*i+3]=e[i+3],n[2*i+4]=e[i+4],n[2*i+5]=e[i+5];return super.setColors(n),this}fromLine(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}}class JA extends ZA{constructor(e=new g_,t=new ap({color:Math.random()*16777215})){super(e,t),this.isLine2=!0,this.type="Line2"}}const KA=s=>{const e=new Ge,t=[],n=[],{isSphere:i}=s;if($a.forEach((a,l)=>{const{enabled:c,line:h,scale:u,color:d}=s[a];if(!c||!h)return;const f=l<3?1:-1,p=(i?p_-u/2:.975)*f;t.push(a.includes("x")?p:0,a.includes("y")?p:0,a.includes("z")?p:0,0,0,0);const v=e.set(d).toArray();n.push(...v,...v)}),!t.length)return null;const r=new g_().setPositions(t).setColors(n),o=new ap({linewidth:s.lineWidth,vertexColors:!0,resolution:new xe(window.innerWidth,window.innerHeight)});return new JA(r,o).computeLineDistances()},QA=s=>{const{corners:e,edges:t}=s,n=[],i=zA(s),r=VA(s,i);n.push(...r),e.enabled&&n.push(...HA(s,i)),t.enabled&&n.push(...WA(s,i,e.enabled?7:6));const o=YA(r,s),a=KA(s);return[n,o,a]},ma=(s,e=!0)=>{const{material:t,userData:n}=s,{opacity:i,color:r,scale:o}=e?n.hover:n;s.scale.setScalar(o),t.opacity=i,t.map?GA(t.map,e):t.color.set(r)},Do=new st,$A=new Qa,xg=new L,e2=new xe;class bg extends Ot{constructor(e,t,n={}){super(),Wt(this,"type","ViewportGizmo"),Wt(this,"enabled",!0),Wt(this,"camera"),Wt(this,"renderer"),Wt(this,"options"),Wt(this,"target",new L),Wt(this,"animated",!0),Wt(this,"speed",1),Wt(this,"animating",!1),Wt(this,"_options"),Wt(this,"_intersections"),Wt(this,"_background",null),Wt(this,"_viewport",new Rt),Wt(this,"_originalViewport",new Rt),Wt(this,"_originalScissor",new Rt),Wt(this,"_camera"),Wt(this,"_container"),Wt(this,"_domElement"),Wt(this,"_domRect"),Wt(this,"_dragging",!1),Wt(this,"_distance",0),Wt(this,"_clock",new Yf),Wt(this,"_targetPosition",new L),Wt(this,"_targetQuaternion",new Ht),Wt(this,"_quaternionStart",new Ht),Wt(this,"_quaternionEnd",new Ht),Wt(this,"_pointerStart",new xe),Wt(this,"_focus",null),Wt(this,"_placement"),Wt(this,"_controls"),Wt(this,"_controlsListeners"),this.camera=e,this.renderer=t,this.set(n)}get placement(){return this._placement}set placement(e){this._placement=d_(this._domElement,e),this.domUpdate()}set(e={}){this.dispose(),this.options=e,this._options=BA(e),this._camera=this._options.isSphere?new ls(-1.8,1.8,1.8,-1.8,5,10):new bn(26,1,5,10),this._camera.position.set(0,0,7);const[t,n,i]=QA(this._options);n&&this.add(n),i&&this.add(i),this.add(...t),this._background=n,this._intersections=t;const{container:r,animated:o,speed:a}=this._options;return this.animated=o,this.speed=a,this._container=r?UA(r):document.body,this._domElement=LA(this._options),this._domElement.onpointerdown=l=>this._onPointerDown(l),this._domElement.onpointermove=l=>this._onPointerMove(l),this._domElement.onpointerleave=()=>this._onPointerLeave(),this._container.appendChild(this._domElement),this._controls&&this.attachControls(this._controls),this.update(),this}render(){this.animating&&this._animate();const{renderer:e,_viewport:t}=this,n=e.getScissorTest(),i=e.autoClear;return e.autoClear=!1,e.setViewport(t),n&&e.setScissor(t),e.clear(!1,!0,!1),e.render(this,this._camera),e.setViewport(this._originalViewport),n&&e.setScissor(this._originalScissor),e.autoClear=i,this}domUpdate(){this._domRect=this._domElement.getBoundingClientRect();const e=this.renderer,t=this._domRect,n=e.domElement.getBoundingClientRect();return this._viewport.set(t.left-n.left,e.domElement.clientHeight-(t.top-n.top+t.height),t.width,t.height),e.getViewport(this._originalViewport),e.getScissorTest()&&e.getScissor(this._originalScissor),this}cameraUpdate(){return this._updateOrientation(),this}update(e=!0){return e&&this._controls&&this._controls.update(),this.domUpdate().cameraUpdate()}attachControls(e){return this.detachControls(),this.target=e.target,this._controlsListeners={start:()=>e.enabled=!1,end:()=>e.enabled=!0,change:()=>this.update(!1)},this.addEventListener("start",this._controlsListeners.start),this.addEventListener("end",this._controlsListeners.end),e.addEventListener("change",this._controlsListeners.change),this._controls=e,this}detachControls(){if(!(!this._controlsListeners||!this._controls))return this.target=new L().copy(this._controls.target),this.removeEventListener("start",this._controlsListeners.start),this.removeEventListener("end",this._controlsListeners.end),this._controls.removeEventListener("change",this._controlsListeners.change),this._controlsListeners=void 0,this._controls=void 0,this}dispose(){var e;this.detachControls(),this.children.forEach(t=>{var n,i,r,o;this.remove(t);const a=t;(n=a.material)==null||n.dispose(),(r=(i=a.material)==null?void 0:i.map)==null||r.dispose(),(o=a.geometry)==null||o.dispose()}),(e=this._domElement)==null||e.remove()}_updateOrientation(e=!0){e&&(this.quaternion.copy(this.camera.quaternion).invert(),this.updateMatrixWorld()),cg(this._options,this._intersections,this.camera)}_animate(){const{position:e,quaternion:t}=this.camera;if(e.set(0,0,1),!this.animated){e.applyQuaternion(this._quaternionEnd).multiplyScalar(this._distance).add(this.target),t.copy(this._targetQuaternion),this._updateOrientation(),this.animating=!1,this.dispatchEvent({type:"change"}),this.dispatchEvent({type:"end"});return}const n=this._clock.getDelta()*FA*this.speed;this._quaternionStart.rotateTowards(this._quaternionEnd,n),e.applyQuaternion(this._quaternionStart).multiplyScalar(this._distance).add(this.target),t.rotateTowards(this._targetQuaternion,n),this._updateOrientation(),requestAnimationFrame(()=>this.dispatchEvent({type:"change"})),this._quaternionStart.angleTo(this._quaternionEnd)<dd&&(this.animating=!1,this.dispatchEvent({type:"end"}))}_setOrientation(e){const t=this.camera,n=this.target;this._targetPosition.copy(e).multiplyScalar(this._distance),Do.setPosition(this._targetPosition).lookAt(this._targetPosition,this.position,this.up),this._targetQuaternion.setFromRotationMatrix(Do),this._targetPosition.add(n),Do.lookAt(this._targetPosition,n,this.up),this._quaternionEnd.setFromRotationMatrix(Do),Do.setPosition(t.position).lookAt(t.position,n,this.up),this._quaternionStart.setFromRotationMatrix(Do),this.animating=!0,this._clock.start(),this.dispatchEvent({type:"start"})}_onPointerDown(e){if(!this.enabled)return;const t=a=>{if(!this._dragging){if(OA(a,this._pointerStart))return;this._dragging=!0}const l=e2.set(a.clientX,a.clientY).sub(this._pointerStart).multiplyScalar(1/this._domRect.width*Math.PI),c=$A.setFromVector3(xg.subVectors(this.camera.position,this.target));c.theta=r-l.x,c.phi=Yd(o-l.y,dd,Math.PI-dd),this.camera.position.setFromSpherical(c).add(this.target),this.camera.lookAt(this.target),this.quaternion.copy(this.camera.quaternion).invert(),this._updateOrientation(!1),this.dispatchEvent({type:"change"})},n=()=>{if(document.removeEventListener("pointermove",t,!1),document.removeEventListener("pointerup",n,!1),!this._dragging)return this._handleClick(e);this._focus&&(ma(this._focus,!1),this._focus=null),this._dragging=!1,this.dispatchEvent({type:"end"})};if(this.animating)return;e.preventDefault(),this._pointerStart.set(e.clientX,e.clientY);const i=new Qa().setFromVector3(xg.subVectors(this.camera.position,this.target)),r=i.theta,o=i.phi;this._distance=i.radius,document.addEventListener("pointermove",t,!1),document.addEventListener("pointerup",n,!1),this.dispatchEvent({type:"start"})}_onPointerMove(e){!this.enabled||this._dragging||(this._background&&fg(this._background,!0),this._handleHover(e))}_onPointerLeave(){!this.enabled||this._dragging||(this._background&&fg(this._background,!1),this._focus&&ma(this._focus,!1),this._domElement.style.cursor="")}_handleClick(e){const t=dg(e,this._domRect,this._camera,this._intersections);this._focus&&(ma(this._focus,!1),this._focus=null),t&&(this._setOrientation(t.object.position),this.dispatchEvent({type:"change"}))}_handleHover(e){const t=dg(e,this._domRect,this._camera,this._intersections),n=(t==null?void 0:t.object)||null;this._focus!==n&&(this._domElement.style.cursor=n?"pointer":"",this._focus&&ma(this._focus,!1),(this._focus=n)?ma(n,!0):cg(this._options,this._intersections,this.camera))}}const Sg={type:"change"},lp={type:"start"},v_={type:"end"},fc=new ss,Mg=new ur,t2=Math.cos(70*dr.DEG2RAD),Cn=new L,gi=2*Math.PI,Qt={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},md=1e-6;let __=class extends ru{constructor(e,t=null){super(e,t),this.state=Qt.NONE,this.enabled=!0,this.target=new L,this.cursor=new L,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.keyRotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:Oi.ROTATE,MIDDLE:Oi.DOLLY,RIGHT:Oi.PAN},this.touches={ONE:Bs.ROTATE,TWO:Bs.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new L,this._lastQuaternion=new Ht,this._lastTargetPosition=new L,this._quat=new Ht().setFromUnitVectors(e.up,new L(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new Qa,this._sphericalDelta=new Qa,this._scale=1,this._panOffset=new L,this._rotateStart=new xe,this._rotateEnd=new xe,this._rotateDelta=new xe,this._panStart=new xe,this._panEnd=new xe,this._panDelta=new xe,this._dollyStart=new xe,this._dollyEnd=new xe,this._dollyDelta=new xe,this._dollyDirection=new L,this._mouse=new xe,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=i2.bind(this),this._onPointerDown=n2.bind(this),this._onPointerUp=r2.bind(this),this._onContextMenu=u2.bind(this),this._onMouseWheel=a2.bind(this),this._onKeyDown=l2.bind(this),this._onTouchStart=c2.bind(this),this._onTouchMove=h2.bind(this),this._onMouseDown=s2.bind(this),this._onMouseMove=o2.bind(this),this._interceptControlDown=d2.bind(this),this._interceptControlUp=f2.bind(this),this.domElement!==null&&this.connect(),this.update()}connect(){this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(e){e.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=e}stopListenToKeyEvents(){this._domElementKeyEvents!==null&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(Sg),this.update(),this.state=Qt.NONE}update(e=null){const t=this.object.position;Cn.copy(t).sub(this.target),Cn.applyQuaternion(this._quat),this._spherical.setFromVector3(Cn),this.autoRotate&&this.state===Qt.NONE&&this._rotateLeft(this._getAutoRotationAngle(e)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let n=this.minAzimuthAngle,i=this.maxAzimuthAngle;isFinite(n)&&isFinite(i)&&(n<-Math.PI?n+=gi:n>Math.PI&&(n-=gi),i<-Math.PI?i+=gi:i>Math.PI&&(i-=gi),n<=i?this._spherical.theta=Math.max(n,Math.min(i,this._spherical.theta)):this._spherical.theta=this._spherical.theta>(n+i)/2?Math.max(n,this._spherical.theta):Math.min(i,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),this.enableDamping===!0?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let r=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const o=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),r=o!=this._spherical.radius}if(Cn.setFromSpherical(this._spherical),Cn.applyQuaternion(this._quatInverse),t.copy(this.target).add(Cn),this.object.lookAt(this.target),this.enableDamping===!0?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let o=null;if(this.object.isPerspectiveCamera){const a=Cn.length();o=this._clampDistance(a*this._scale);const l=a-o;this.object.position.addScaledVector(this._dollyDirection,l),this.object.updateMatrixWorld(),r=!!l}else if(this.object.isOrthographicCamera){const a=new L(this._mouse.x,this._mouse.y,0);a.unproject(this.object);const l=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),r=l!==this.object.zoom;const c=new L(this._mouse.x,this._mouse.y,0);c.unproject(this.object),this.object.position.sub(c).add(a),this.object.updateMatrixWorld(),o=Cn.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;o!==null&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(o).add(this.object.position):(fc.origin.copy(this.object.position),fc.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(fc.direction))<t2?this.object.lookAt(this.target):(Mg.setFromNormalAndCoplanarPoint(this.object.up,this.target),fc.intersectPlane(Mg,this.target))))}else if(this.object.isOrthographicCamera){const o=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),o!==this.object.zoom&&(this.object.updateProjectionMatrix(),r=!0)}return this._scale=1,this._performCursorZoom=!1,r||this._lastPosition.distanceToSquared(this.object.position)>md||8*(1-this._lastQuaternion.dot(this.object.quaternion))>md||this._lastTargetPosition.distanceToSquared(this.target)>md?(this.dispatchEvent(Sg),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0):!1}_getAutoRotationAngle(e){return e!==null?gi/60*this.autoRotateSpeed*e:gi/60/60*this.autoRotateSpeed}_getZoomScale(e){const t=Math.abs(e*.01);return Math.pow(.95,this.zoomSpeed*t)}_rotateLeft(e){this._sphericalDelta.theta-=e}_rotateUp(e){this._sphericalDelta.phi-=e}_panLeft(e,t){Cn.setFromMatrixColumn(t,0),Cn.multiplyScalar(-e),this._panOffset.add(Cn)}_panUp(e,t){this.screenSpacePanning===!0?Cn.setFromMatrixColumn(t,1):(Cn.setFromMatrixColumn(t,0),Cn.crossVectors(this.object.up,Cn)),Cn.multiplyScalar(e),this._panOffset.add(Cn)}_pan(e,t){const n=this.domElement;if(this.object.isPerspectiveCamera){const i=this.object.position;Cn.copy(i).sub(this.target);let r=Cn.length();r*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*e*r/n.clientHeight,this.object.matrix),this._panUp(2*t*r/n.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(e*(this.object.right-this.object.left)/this.object.zoom/n.clientWidth,this.object.matrix),this._panUp(t*(this.object.top-this.object.bottom)/this.object.zoom/n.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(e,t){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const n=this.domElement.getBoundingClientRect(),i=e-n.left,r=t-n.top,o=n.width,a=n.height;this._mouse.x=i/o*2-1,this._mouse.y=-(r/a)*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(e){return Math.max(this.minDistance,Math.min(this.maxDistance,e))}_handleMouseDownRotate(e){this._rotateStart.set(e.clientX,e.clientY)}_handleMouseDownDolly(e){this._updateZoomParameters(e.clientX,e.clientX),this._dollyStart.set(e.clientX,e.clientY)}_handleMouseDownPan(e){this._panStart.set(e.clientX,e.clientY)}_handleMouseMoveRotate(e){this._rotateEnd.set(e.clientX,e.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(gi*this._rotateDelta.x/t.clientHeight),this._rotateUp(gi*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(e){this._dollyEnd.set(e.clientX,e.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(e){this._panEnd.set(e.clientX,e.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(e){this._updateZoomParameters(e.clientX,e.clientY),e.deltaY<0?this._dollyIn(this._getZoomScale(e.deltaY)):e.deltaY>0&&this._dollyOut(this._getZoomScale(e.deltaY)),this.update()}_handleKeyDown(e){let t=!1;switch(e.code){case this.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(gi*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),t=!0;break;case this.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(-gi*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),t=!0;break;case this.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(gi*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),t=!0;break;case this.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(-gi*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),t=!0;break}t&&(e.preventDefault(),this.update())}_handleTouchStartRotate(e){if(this._pointers.length===1)this._rotateStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);this._rotateStart.set(n,i)}}_handleTouchStartPan(e){if(this._pointers.length===1)this._panStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);this._panStart.set(n,i)}}_handleTouchStartDolly(e){const t=this._getSecondPointerPosition(e),n=e.pageX-t.x,i=e.pageY-t.y,r=Math.sqrt(n*n+i*i);this._dollyStart.set(0,r)}_handleTouchStartDollyPan(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enablePan&&this._handleTouchStartPan(e)}_handleTouchStartDollyRotate(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enableRotate&&this._handleTouchStartRotate(e)}_handleTouchMoveRotate(e){if(this._pointers.length==1)this._rotateEnd.set(e.pageX,e.pageY);else{const n=this._getSecondPointerPosition(e),i=.5*(e.pageX+n.x),r=.5*(e.pageY+n.y);this._rotateEnd.set(i,r)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(gi*this._rotateDelta.x/t.clientHeight),this._rotateUp(gi*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(e){if(this._pointers.length===1)this._panEnd.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);this._panEnd.set(n,i)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(e){const t=this._getSecondPointerPosition(e),n=e.pageX-t.x,i=e.pageY-t.y,r=Math.sqrt(n*n+i*i);this._dollyEnd.set(0,r),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const o=(e.pageX+t.x)*.5,a=(e.pageY+t.y)*.5;this._updateZoomParameters(o,a)}_handleTouchMoveDollyPan(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enablePan&&this._handleTouchMovePan(e)}_handleTouchMoveDollyRotate(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enableRotate&&this._handleTouchMoveRotate(e)}_addPointer(e){this._pointers.push(e.pointerId)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId){this._pointers.splice(t,1);return}}_isTrackingPointer(e){for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId)return!0;return!1}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new xe,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[t]}_customWheelEvent(e){const t=e.deltaMode,n={clientX:e.clientX,clientY:e.clientY,deltaY:e.deltaY};switch(t){case 1:n.deltaY*=16;break;case 2:n.deltaY*=100;break}return e.ctrlKey&&!this._controlActive&&(n.deltaY*=10),n}};function n2(s){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(s.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),!this._isTrackingPointer(s)&&(this._addPointer(s),s.pointerType==="touch"?this._onTouchStart(s):this._onMouseDown(s)))}function i2(s){this.enabled!==!1&&(s.pointerType==="touch"?this._onTouchMove(s):this._onMouseMove(s))}function r2(s){switch(this._removePointer(s),this._pointers.length){case 0:this.domElement.releasePointerCapture(s.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(v_),this.state=Qt.NONE;break;case 1:const e=this._pointers[0],t=this._pointerPositions[e];this._onTouchStart({pointerId:e,pageX:t.x,pageY:t.y});break}}function s2(s){let e;switch(s.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case Oi.DOLLY:if(this.enableZoom===!1)return;this._handleMouseDownDolly(s),this.state=Qt.DOLLY;break;case Oi.ROTATE:if(s.ctrlKey||s.metaKey||s.shiftKey){if(this.enablePan===!1)return;this._handleMouseDownPan(s),this.state=Qt.PAN}else{if(this.enableRotate===!1)return;this._handleMouseDownRotate(s),this.state=Qt.ROTATE}break;case Oi.PAN:if(s.ctrlKey||s.metaKey||s.shiftKey){if(this.enableRotate===!1)return;this._handleMouseDownRotate(s),this.state=Qt.ROTATE}else{if(this.enablePan===!1)return;this._handleMouseDownPan(s),this.state=Qt.PAN}break;default:this.state=Qt.NONE}this.state!==Qt.NONE&&this.dispatchEvent(lp)}function o2(s){switch(this.state){case Qt.ROTATE:if(this.enableRotate===!1)return;this._handleMouseMoveRotate(s);break;case Qt.DOLLY:if(this.enableZoom===!1)return;this._handleMouseMoveDolly(s);break;case Qt.PAN:if(this.enablePan===!1)return;this._handleMouseMovePan(s);break}}function a2(s){this.enabled===!1||this.enableZoom===!1||this.state!==Qt.NONE||(s.preventDefault(),this.dispatchEvent(lp),this._handleMouseWheel(this._customWheelEvent(s)),this.dispatchEvent(v_))}function l2(s){this.enabled!==!1&&this._handleKeyDown(s)}function c2(s){switch(this._trackPointer(s),this._pointers.length){case 1:switch(this.touches.ONE){case Bs.ROTATE:if(this.enableRotate===!1)return;this._handleTouchStartRotate(s),this.state=Qt.TOUCH_ROTATE;break;case Bs.PAN:if(this.enablePan===!1)return;this._handleTouchStartPan(s),this.state=Qt.TOUCH_PAN;break;default:this.state=Qt.NONE}break;case 2:switch(this.touches.TWO){case Bs.DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchStartDollyPan(s),this.state=Qt.TOUCH_DOLLY_PAN;break;case Bs.DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchStartDollyRotate(s),this.state=Qt.TOUCH_DOLLY_ROTATE;break;default:this.state=Qt.NONE}break;default:this.state=Qt.NONE}this.state!==Qt.NONE&&this.dispatchEvent(lp)}function h2(s){switch(this._trackPointer(s),this.state){case Qt.TOUCH_ROTATE:if(this.enableRotate===!1)return;this._handleTouchMoveRotate(s),this.update();break;case Qt.TOUCH_PAN:if(this.enablePan===!1)return;this._handleTouchMovePan(s),this.update();break;case Qt.TOUCH_DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchMoveDollyPan(s),this.update();break;case Qt.TOUCH_DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchMoveDollyRotate(s),this.update();break;default:this.state=Qt.NONE}}function u2(s){this.enabled!==!1&&s.preventDefault()}function d2(s){s.key==="Control"&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function f2(s){s.key==="Control"&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}const gd={type:"change"},cp={type:"start"},hp={type:"end"},wg=1e-6,Xt={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM_PAN:4},pc=new xe,Qr=new xe,p2=new L,mc=new L,vd=new L,Lo=new Ht,Eg=new L,gc=new L,_d=new L,vc=new L;class m2 extends ru{constructor(e,t=null){super(e,t),this.enabled=!0,this.screen={left:0,top:0,width:0,height:0},this.rotateSpeed=1,this.zoomSpeed=1.2,this.panSpeed=.3,this.noRotate=!1,this.noZoom=!1,this.noPan=!1,this.staticMoving=!1,this.dynamicDampingFactor=.2,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.keys=["KeyA","KeyS","KeyD"],this.mouseButtons={LEFT:Oi.ROTATE,MIDDLE:Oi.DOLLY,RIGHT:Oi.PAN},this.state=Xt.NONE,this.keyState=Xt.NONE,this.target=new L,this._lastPosition=new L,this._lastZoom=1,this._touchZoomDistanceStart=0,this._touchZoomDistanceEnd=0,this._lastAngle=0,this._eye=new L,this._movePrev=new xe,this._moveCurr=new xe,this._lastAxis=new L,this._zoomStart=new xe,this._zoomEnd=new xe,this._panStart=new xe,this._panEnd=new xe,this._pointers=[],this._pointerPositions={},this._onPointerMove=v2.bind(this),this._onPointerDown=g2.bind(this),this._onPointerUp=_2.bind(this),this._onPointerCancel=y2.bind(this),this._onContextMenu=T2.bind(this),this._onMouseWheel=E2.bind(this),this._onKeyDown=b2.bind(this),this._onKeyUp=x2.bind(this),this._onTouchStart=A2.bind(this),this._onTouchMove=C2.bind(this),this._onTouchEnd=R2.bind(this),this._onMouseDown=S2.bind(this),this._onMouseMove=M2.bind(this),this._onMouseUp=w2.bind(this),this._target0=this.target.clone(),this._position0=this.object.position.clone(),this._up0=this.object.up.clone(),this._zoom0=this.object.zoom,t!==null&&(this.connect(),this.handleResize()),this.update()}connect(){window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerCancel),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="none"}disconnect(){window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("keyup",this._onKeyUp),this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerCancel),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}handleResize(){const e=this.domElement.getBoundingClientRect(),t=this.domElement.ownerDocument.documentElement;this.screen.left=e.left+window.pageXOffset-t.clientLeft,this.screen.top=e.top+window.pageYOffset-t.clientTop,this.screen.width=e.width,this.screen.height=e.height}update(){this._eye.subVectors(this.object.position,this.target),this.noRotate||this._rotateCamera(),this.noZoom||this._zoomCamera(),this.noPan||this._panCamera(),this.object.position.addVectors(this.target,this._eye),this.object.isPerspectiveCamera?(this._checkDistances(),this.object.lookAt(this.target),this._lastPosition.distanceToSquared(this.object.position)>wg&&(this.dispatchEvent(gd),this._lastPosition.copy(this.object.position))):this.object.isOrthographicCamera?(this.object.lookAt(this.target),(this._lastPosition.distanceToSquared(this.object.position)>wg||this._lastZoom!==this.object.zoom)&&(this.dispatchEvent(gd),this._lastPosition.copy(this.object.position),this._lastZoom=this.object.zoom)):console.warn("THREE.TrackballControls: Unsupported camera type.")}reset(){this.state=Xt.NONE,this.keyState=Xt.NONE,this.target.copy(this._target0),this.object.position.copy(this._position0),this.object.up.copy(this._up0),this.object.zoom=this._zoom0,this.object.updateProjectionMatrix(),this._eye.subVectors(this.object.position,this.target),this.object.lookAt(this.target),this.dispatchEvent(gd),this._lastPosition.copy(this.object.position),this._lastZoom=this.object.zoom}_panCamera(){if(Qr.copy(this._panEnd).sub(this._panStart),Qr.lengthSq()){if(this.object.isOrthographicCamera){const e=(this.object.right-this.object.left)/this.object.zoom/this.domElement.clientWidth,t=(this.object.top-this.object.bottom)/this.object.zoom/this.domElement.clientWidth;Qr.x*=e,Qr.y*=t}Qr.multiplyScalar(this._eye.length()*this.panSpeed),mc.copy(this._eye).cross(this.object.up).setLength(Qr.x),mc.add(p2.copy(this.object.up).setLength(Qr.y)),this.object.position.add(mc),this.target.add(mc),this.staticMoving?this._panStart.copy(this._panEnd):this._panStart.add(Qr.subVectors(this._panEnd,this._panStart).multiplyScalar(this.dynamicDampingFactor))}}_rotateCamera(){vc.set(this._moveCurr.x-this._movePrev.x,this._moveCurr.y-this._movePrev.y,0);let e=vc.length();e?(this._eye.copy(this.object.position).sub(this.target),Eg.copy(this._eye).normalize(),gc.copy(this.object.up).normalize(),_d.crossVectors(gc,Eg).normalize(),gc.setLength(this._moveCurr.y-this._movePrev.y),_d.setLength(this._moveCurr.x-this._movePrev.x),vc.copy(gc.add(_d)),vd.crossVectors(vc,this._eye).normalize(),e*=this.rotateSpeed,Lo.setFromAxisAngle(vd,e),this._eye.applyQuaternion(Lo),this.object.up.applyQuaternion(Lo),this._lastAxis.copy(vd),this._lastAngle=e):!this.staticMoving&&this._lastAngle&&(this._lastAngle*=Math.sqrt(1-this.dynamicDampingFactor),this._eye.copy(this.object.position).sub(this.target),Lo.setFromAxisAngle(this._lastAxis,this._lastAngle),this._eye.applyQuaternion(Lo),this.object.up.applyQuaternion(Lo)),this._movePrev.copy(this._moveCurr)}_zoomCamera(){let e;this.state===Xt.TOUCH_ZOOM_PAN?(e=this._touchZoomDistanceStart/this._touchZoomDistanceEnd,this._touchZoomDistanceStart=this._touchZoomDistanceEnd,this.object.isPerspectiveCamera?this._eye.multiplyScalar(e):this.object.isOrthographicCamera?(this.object.zoom=dr.clamp(this.object.zoom/e,this.minZoom,this.maxZoom),this._lastZoom!==this.object.zoom&&this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")):(e=1+(this._zoomEnd.y-this._zoomStart.y)*this.zoomSpeed,e!==1&&e>0&&(this.object.isPerspectiveCamera?this._eye.multiplyScalar(e):this.object.isOrthographicCamera?(this.object.zoom=dr.clamp(this.object.zoom/e,this.minZoom,this.maxZoom),this._lastZoom!==this.object.zoom&&this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")),this.staticMoving?this._zoomStart.copy(this._zoomEnd):this._zoomStart.y+=(this._zoomEnd.y-this._zoomStart.y)*this.dynamicDampingFactor)}_getMouseOnScreen(e,t){return pc.set((e-this.screen.left)/this.screen.width,(t-this.screen.top)/this.screen.height),pc}_getMouseOnCircle(e,t){return pc.set((e-this.screen.width*.5-this.screen.left)/(this.screen.width*.5),(this.screen.height+2*(this.screen.top-t))/this.screen.width),pc}_addPointer(e){this._pointers.push(e)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t].pointerId==e.pointerId){this._pointers.splice(t,1);return}}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new xe,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0].pointerId?this._pointers[1]:this._pointers[0];return this._pointerPositions[t.pointerId]}_checkDistances(){(!this.noZoom||!this.noPan)&&(this._eye.lengthSq()>this.maxDistance*this.maxDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.maxDistance)),this._zoomStart.copy(this._zoomEnd)),this._eye.lengthSq()<this.minDistance*this.minDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.minDistance)),this._zoomStart.copy(this._zoomEnd)))}}function g2(s){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(s.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),this._addPointer(s),s.pointerType==="touch"?this._onTouchStart(s):this._onMouseDown(s))}function v2(s){this.enabled!==!1&&(s.pointerType==="touch"?this._onTouchMove(s):this._onMouseMove(s))}function _2(s){this.enabled!==!1&&(s.pointerType==="touch"?this._onTouchEnd(s):this._onMouseUp(),this._removePointer(s),this._pointers.length===0&&(this.domElement.releasePointerCapture(s.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp)))}function y2(s){this._removePointer(s)}function x2(){this.enabled!==!1&&(this.keyState=Xt.NONE,window.addEventListener("keydown",this._onKeyDown))}function b2(s){this.enabled!==!1&&(window.removeEventListener("keydown",this._onKeyDown),this.keyState===Xt.NONE&&(s.code===this.keys[Xt.ROTATE]&&!this.noRotate?this.keyState=Xt.ROTATE:s.code===this.keys[Xt.ZOOM]&&!this.noZoom?this.keyState=Xt.ZOOM:s.code===this.keys[Xt.PAN]&&!this.noPan&&(this.keyState=Xt.PAN)))}function S2(s){let e;switch(s.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case Oi.DOLLY:this.state=Xt.ZOOM;break;case Oi.ROTATE:this.state=Xt.ROTATE;break;case Oi.PAN:this.state=Xt.PAN;break;default:this.state=Xt.NONE}const t=this.keyState!==Xt.NONE?this.keyState:this.state;t===Xt.ROTATE&&!this.noRotate?(this._moveCurr.copy(this._getMouseOnCircle(s.pageX,s.pageY)),this._movePrev.copy(this._moveCurr)):t===Xt.ZOOM&&!this.noZoom?(this._zoomStart.copy(this._getMouseOnScreen(s.pageX,s.pageY)),this._zoomEnd.copy(this._zoomStart)):t===Xt.PAN&&!this.noPan&&(this._panStart.copy(this._getMouseOnScreen(s.pageX,s.pageY)),this._panEnd.copy(this._panStart)),this.dispatchEvent(cp)}function M2(s){const e=this.keyState!==Xt.NONE?this.keyState:this.state;e===Xt.ROTATE&&!this.noRotate?(this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this._getMouseOnCircle(s.pageX,s.pageY))):e===Xt.ZOOM&&!this.noZoom?this._zoomEnd.copy(this._getMouseOnScreen(s.pageX,s.pageY)):e===Xt.PAN&&!this.noPan&&this._panEnd.copy(this._getMouseOnScreen(s.pageX,s.pageY))}function w2(){this.state=Xt.NONE,this.dispatchEvent(hp)}function E2(s){if(this.enabled!==!1&&this.noZoom!==!0){switch(s.preventDefault(),s.deltaMode){case 2:this._zoomStart.y-=s.deltaY*.025;break;case 1:this._zoomStart.y-=s.deltaY*.01;break;default:this._zoomStart.y-=s.deltaY*25e-5;break}this.dispatchEvent(cp),this.dispatchEvent(hp)}}function T2(s){this.enabled!==!1&&s.preventDefault()}function A2(s){switch(this._trackPointer(s),this._pointers.length){case 1:this.state=Xt.TOUCH_ROTATE,this._moveCurr.copy(this._getMouseOnCircle(this._pointers[0].pageX,this._pointers[0].pageY)),this._movePrev.copy(this._moveCurr);break;default:this.state=Xt.TOUCH_ZOOM_PAN;const e=this._pointers[0].pageX-this._pointers[1].pageX,t=this._pointers[0].pageY-this._pointers[1].pageY;this._touchZoomDistanceEnd=this._touchZoomDistanceStart=Math.sqrt(e*e+t*t);const n=(this._pointers[0].pageX+this._pointers[1].pageX)/2,i=(this._pointers[0].pageY+this._pointers[1].pageY)/2;this._panStart.copy(this._getMouseOnScreen(n,i)),this._panEnd.copy(this._panStart);break}this.dispatchEvent(cp)}function C2(s){switch(this._trackPointer(s),this._pointers.length){case 1:this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this._getMouseOnCircle(s.pageX,s.pageY));break;default:const e=this._getSecondPointerPosition(s),t=s.pageX-e.x,n=s.pageY-e.y;this._touchZoomDistanceEnd=Math.sqrt(t*t+n*n);const i=(s.pageX+e.x)/2,r=(s.pageY+e.y)/2;this._panEnd.copy(this._getMouseOnScreen(i,r));break}}function R2(s){switch(this._pointers.length){case 0:this.state=Xt.NONE;break;case 1:this.state=Xt.TOUCH_ROTATE,this._moveCurr.copy(this._getMouseOnCircle(s.pageX,s.pageY)),this._movePrev.copy(this._moveCurr);break;case 2:this.state=Xt.TOUCH_ZOOM_PAN;for(let e=0;e<this._pointers.length;e++)if(this._pointers[e].pointerId!==s.pointerId){const t=this._pointerPositions[this._pointers[e].pointerId];this._moveCurr.copy(this._getMouseOnCircle(t.x,t.y)),this._movePrev.copy(this._moveCurr);break}break}this.dispatchEvent(hp)}function P2(s,e){var y;kn(e,!0);const[t,n]=il(),i=()=>Ws(c,"$parent",t),r=()=>Ws(h,"$camera",t),o=()=>Ws(v,"$size",t);let a=Xe(e,"ref",15),l=yr(e,["$$slots","$$events","$$legacy","controls","renderTask","ref","onstart","onchange","onend"]);const c=$f(),{camera:h,renderer:u,dom:d,autoRenderTask:f,shouldRender:p,size:v,invalidate:g}=ki();a(new bg(h.current,u));const m=new Rt,x=Mt(()=>e.controls??i());so(((y=e.renderTask)==null?void 0:y.key)??Symbol("threlte-extras-gizmo-render"),()=>{if(p()){const _=u.toneMapping;u.getViewport(m),u.toneMapping=pr,a().render(),u.setViewport(m),u.toneMapping=_}},{autoInvalidate:!1,...e.renderTask??{after:f}}),Dt(()=>{a(a().camera=r(),!0)}),yi(()=>{if(ye(x))if(ye(x)instanceof __||ye(x)instanceof m2){a(a().target=ye(x).target,!0);const _=()=>{a().update(!1)};return ye(x).addEventListener("change",_),()=>ye(x).removeEventListener("change",_)}else{const _=()=>{"getTarget"in ye(x)&&typeof ye(x).getTarget=="function"&&(ye(x).getTarget(a().target),a().update())},E=()=>{ye(x).setPosition(...h.current.position.toArray())};return a().addEventListener("change",E),ye(x).addEventListener("update",_),()=>{a().removeEventListener("change",E),ye(x).removeEventListener("update",_)}}}),yi(()=>{const _=E=>{var w;ye(x).enabled=!1,(w=e.onstart)==null||w.call(e,E)};return a().addEventListener("start",_),()=>a().removeEventListener("start",_)}),yi(()=>{const _=E=>{var w;g(),(w=e.onchange)==null||w.call(e,E)};return a().addEventListener("change",_),()=>a().removeEventListener("change",_)}),yi(()=>{const _=E=>{var w;ye(x).enabled=!0,(w=e.onend)==null||w.call(e,E)};return a().addEventListener("end",_),()=>a().removeEventListener("end",_)}),Dt(()=>{d&&(a().dispose(),a(new bg(h.current,u,{container:d,placement:"bottom-left",size:86,...l})),g())}),yi(()=>{o(),a().update(),g()}),yi(()=>()=>a().dispose()),Bn(),n()}const I2={name:"HorizontalBlurShader",uniforms:{tDiffuse:{value:null},h:{value:1/512}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform sampler2D tDiffuse;
		uniform float h;

		varying vec2 vUv;

		void main() {

			vec4 sum = vec4( 0.0 );

			sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;
			sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;
			sum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;

			gl_FragColor = sum;

		}`},D2={name:"VerticalBlurShader",uniforms:{tDiffuse:{value:null},v:{value:1/512}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform sampler2D tDiffuse;
		uniform float v;

		varying vec2 vUv;

		void main() {

			vec4 sum = vec4( 0.0 );

			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;

			gl_FragColor = sum;

		}`};var L2=$t("<!> <!> <!>",1);function U2(s,e){kn(e,!0);let t=Xe(e,"opacity",3,1),n=Xe(e,"width",3,1),i=Xe(e,"height",3,1),r=Xe(e,"blur",3,1),o=Xe(e,"far",3,10),a=Xe(e,"smooth",3,!0),l=Xe(e,"resolution",3,512),c=Xe(e,"frames",3,1/0),h=Xe(e,"scale",3,10),u=Xe(e,"color",3,"#000000"),d=Xe(e,"depthWrite",3,!1),f=Xe(e,"ref",15),p=yr(e,["$$slots","$$events","$$legacy","opacity","width","height","blur","far","smooth","resolution","frames","scale","color","depthWrite","ref","children"]);const{scene:v,renderer:g}=ki(),m=new Wi,x=Mt(()=>n()*(Array.isArray(h())?h()[0]:h()||1)),y=Mt(()=>i()*(Array.isArray(h())?h()[1]:h()||1)),_=Mt(()=>{const j=new Yi(l(),l());return j.texture.generateMipmaps=!1,j.texture.colorSpace=g.outputColorSpace,j}),E=Mt(()=>{const j=new Yi(l(),l());return j.texture.generateMipmaps=!1,j}),w=Mt(()=>new sr(ye(x),ye(y)).rotateX(Math.PI/2)),M=Mt(()=>new ke(ye(w))),T=Mt(()=>{const j=new ml({depthTest:!1,depthWrite:!1});return j.onBeforeCompile=X=>{X.uniforms={...X.uniforms,uColor:{value:new Ge(u()).convertSRGBToLinear()}},X.fragmentShader=`uniform vec3 uColor;
${X.fragmentShader}`,X.fragmentShader=X.fragmentShader.replace("vec4( vec3( 1.0 - fragCoordZ ), opacity );","vec4( uColor, ( 1.0 - fragCoordZ ) * 1.0 );"),X.fragmentShader=X.fragmentShader.replace("vec4(vec3(1.0-fragCoordZ),opacity);","vec4(uColor,(1.0-fragCoordZ)*1.0);")},j}),S=new Ei({...I2,depthTest:!1}),b=new Ei({...D2,depthTest:!1}),D=Mt(()=>new ls(-ye(x)/2,ye(x)/2,ye(y)/2,-ye(y)/2,0,o()));Dt(()=>ye(D).updateProjectionMatrix());const P=Mt(()=>new On({map:ye(_).texture,transparent:!0,opacity:t(),depthWrite:d()})),k=j=>{ye(M).visible=!0,ye(M).material=S,S.uniforms.tDiffuse.value=ye(_).texture,S.uniforms.h.value=j*1/256,g.setRenderTarget(ye(E)),g.render(ye(M),ye(D)),ye(M).material=b,b.uniforms.tDiffuse.value=ye(E).texture,b.uniforms.v.value=j*1/256,g.setRenderTarget(ye(_)),g.render(ye(M),ye(D)),ye(M).visible=!1},V=()=>{const j=v.background;v.background=null;const X=v.overrideMaterial;v.overrideMaterial=ye(T);const F=g.getClearAlpha();g.setClearAlpha(0),g.setRenderTarget(ye(_)),g.render(v,ye(D)),v.overrideMaterial=X,k(r()),a()&&k(r()*.4),g.setRenderTarget(null),v.background=j,g.setClearAlpha(F)},K=()=>{V()},N=so(()=>{V()},{autoStart:!1});let Q=0;const Z=so(()=>{V(),Q+=1,Q>=c()&&Z.stop()},{autoStart:!1});return Dt(()=>{c()===Number.POSITIVE_INFINITY?N.start():Q<c()&&Z.start()}),xr(()=>{ye(_).dispose(),ye(E).dispose(),ye(w).dispose(),ye(T).dispose(),S.dispose(),b.dispose(),ye(P).dispose()}),St(s,Br({is:m},()=>p,{get ref(){return f()},set ref(j){f(j)},children:(j,X)=>{var F=pt(),J=Ze(F);Nt(J,()=>St.Group,($,G)=>{G($,{"rotation.x":Math.PI/2,children:(W,q)=>{var Y=L2(),ne=Ze(Y);Nt(ne,()=>St.Mesh,(_e,ee)=>{ee(_e,{"scale.y":-1,"rotation.x":-Math.PI/2,get material(){return ye(P)},get geometry(){return ye(w)}})});var ge=_t(ne,2);St(ge,{get is(){return ye(D)},manual:!0});var ve=_t(ge,2);Xi(ve,()=>e.children??kr,()=>({ref:m})),Ye(W,Y)},$$slots:{default:!0}})}),Ye(j,F)},$$slots:{default:!0}})),Bn({refresh:K})}const N2=Number.parseInt(sl.replace("dev","")),O2=`
  varying vec3 localPosition;
  varying vec4 worldPosition;

  uniform vec3 worldCamProjPosition;
	uniform vec3 worldPlanePosition;
	uniform float fadeDistance;
	uniform bool infiniteGrid;
	uniform bool followCamera;

	uniform int coord0;
	uniform int coord1;
	uniform int coord2;

	void main() {
		localPosition = vec3(
		  position[coord0],
			position[coord1],
			position[coord2]
		);

		if (infiniteGrid) {
		  localPosition *= 1.0 + fadeDistance;
		}

		worldPosition = modelMatrix * vec4(localPosition, 1.0);
		if (followCamera) {
		  worldPosition.xyz += (worldCamProjPosition - worldPlanePosition);
      localPosition = (inverse(modelMatrix) * worldPosition).xyz;
		}

		gl_Position = projectionMatrix * viewMatrix * worldPosition;
	}
`,F2=`
  #define PI 3.141592653589793

	varying vec3 localPosition;
	varying vec4 worldPosition;

	uniform vec3 worldCamProjPosition;
	uniform float cellSize;
	uniform float sectionSize;
	uniform vec3 cellColor;
	uniform vec3 sectionColor;
	uniform float fadeDistance;
	uniform float fadeStrength;
	uniform float cellThickness;
	uniform float sectionThickness;
	uniform vec3 backgroundColor;
	uniform float backgroundOpacity;

	uniform bool infiniteGrid;

	uniform int coord0;
	uniform int coord1;
	uniform int coord2;

	// 0 - default; 1 - lines; 2 - circles; 3 - polar
	uniform int gridType;

  // lineGrid coord for lines
	uniform int lineGridCoord;

	// circlegrid max radius
	uniform float circleGridMaxRadius;

	// polar grid dividers
	uniform float polarCellDividers;
	uniform float polarSectionDividers;

	float getSquareGrid(float size, float thickness, vec3 localPos) {
		vec2 coord = localPos.xy / size;

		vec2 grid = abs(fract(coord - 0.5) - 0.5) / fwidth(coord);
		float line = min(grid.x, grid.y) + 1.0 - thickness;

		return 1.0 - min(line, 1.0);
	}

	float getLinesGrid(float size, float thickness, vec3 localPos) {
		float coord = localPos[lineGridCoord] / size;
		float line = abs(fract(coord - 0.5) - 0.5) / fwidth(coord) - thickness * 0.2;

		return 1.0 - min(line, 1.0);
	}

	float getCirclesGrid(float size, float thickness, vec3 localPos) {
		float coord = length(localPos.xy) / size;
		float line = abs(fract(coord - 0.5) - 0.5) / fwidth(coord) - thickness * 0.2;

		if (!infiniteGrid && circleGridMaxRadius > 0. && coord > circleGridMaxRadius + thickness * 0.05) {
		  discard;
		}

		return 1.0 - min(line, 1.0);
	}

	float getPolarGrid(float size, float thickness, float polarDividers, vec3 localPos) {
		float rad = length(localPos.xy) / size;
		vec2 coord = vec2(rad, atan(localPos.x, localPos.y) * polarDividers / PI) ;

		vec2 wrapped = vec2(coord.x, fract(coord.y / (2.0 * polarDividers)) * (2.0 * polarDividers));
		vec2 coordWidth = fwidth(coord);
		vec2 wrappedWidth = fwidth(wrapped);
		vec2 width = (coord.y < -polarDividers * 0.5 || coord.y > polarDividers * 0.5 ? wrappedWidth : coordWidth) * (1.+thickness*0.25);

		// Compute anti-aliased world-space grid lines
		vec2 grid = abs(fract(coord - 0.5) - 0.5) / width;
		float line = min(grid.x, grid.y);

if (!infiniteGrid && circleGridMaxRadius > 0.0 && rad > circleGridMaxRadius + thickness * 0.05) {
		  discard;
		}

		return 1.0 - min(line, 1.0);
	}

	void main() {
		float g1 = 0.0;
		float g2 = 0.0;

		vec3 localPos = vec3(localPosition[coord0], localPosition[coord1], localPosition[coord2]);

		if (gridType == 0) {
			g1 = getSquareGrid(cellSize, cellThickness, localPos);
			g2 = getSquareGrid(sectionSize, sectionThickness, localPos);

		} else if (gridType == 1) {
			g1 = getLinesGrid(cellSize, cellThickness, localPos);
			g2 = getLinesGrid(sectionSize, sectionThickness, localPos);

		} else if (gridType == 2) {
			g1 = getCirclesGrid(cellSize, cellThickness, localPos);
			g2 = getCirclesGrid(sectionSize, sectionThickness, localPos);

		} else if (gridType == 3) {
			g1 = getPolarGrid(cellSize, cellThickness, polarCellDividers, localPos);
			g2 = getPolarGrid(sectionSize, sectionThickness, polarSectionDividers, localPos);
		}

		float dist = distance(worldCamProjPosition, worldPosition.xyz);
		float d = 1.0 - min(dist / fadeDistance, 1.0);
		float fadeFactor = pow(d, fadeStrength) * 0.95;

		vec3 color = mix(cellColor, sectionColor, min(1.0, sectionThickness * g2));

		if (backgroundOpacity > 0.0) {
			float linesAlpha = clamp((g1 + g2) * fadeFactor, 0.0,1.0);
			vec3 finalColor = mix(backgroundColor, color, linesAlpha);
			float blendedAlpha = max(linesAlpha, backgroundOpacity * fadeFactor);
			gl_FragColor = vec4(finalColor, blendedAlpha);

		} else {
			gl_FragColor = vec4(color, (g1 + g2) * pow(d, fadeStrength));
			gl_FragColor.a = mix(0.75 * gl_FragColor.a, gl_FragColor.a, g2);
		}

		if (gl_FragColor.a <= 0.0) {
		  discard;
		}

		#include <tonemapping_fragment>
		#include <${N2<154?"encodings_fragment":"colorspace_fragment"}>
	}
`;var k2=$t("<!> <!>",1);function B2(s,e){kn(e,!0);let t=Xe(e,"cellColor",3,"#000000"),n=Xe(e,"sectionColor",3,"#0000ee"),i=Xe(e,"cellSize",3,1),r=Xe(e,"backgroundColor",3,"#dadada"),o=Xe(e,"backgroundOpacity",3,0),a=Xe(e,"sectionSize",3,10),l=Xe(e,"plane",3,"xz"),c=Xe(e,"gridSize",19,()=>[20,20]),h=Xe(e,"followCamera",3,!1),u=Xe(e,"infiniteGrid",3,!1),d=Xe(e,"fadeDistance",3,100),f=Xe(e,"fadeStrength",3,1),p=Xe(e,"cellThickness",3,1),v=Xe(e,"sectionThickness",3,2),g=Xe(e,"side",3,xi),m=Xe(e,"type",3,"grid"),x=Xe(e,"axis",3,"x"),y=Xe(e,"maxRadius",3,0),_=Xe(e,"cellDividers",3,6),E=Xe(e,"sectionDividers",3,2),w=Xe(e,"ref",15),M=yr(e,["$$slots","$$events","$$legacy","cellColor","sectionColor","cellSize","backgroundColor","backgroundOpacity","sectionSize","plane","gridSize","followCamera","infiniteGrid","fadeDistance","fadeStrength","cellThickness","sectionThickness","side","type","axis","maxRadius","cellDividers","sectionDividers","ref","children"]);const T=new ke,{invalidate:S,camera:b}=ki(),D=new ur,P=new L(0,1,0),k=new L(0,0,0),V={x:0,y:1,z:2},K={xz:"xzy",xy:"xyz",zy:"zyx"},N={grid:0,lines:1,circular:2,polar:3},Q={cellSize:{value:i()},sectionSize:{value:a()},cellColor:{value:new Ge(t())},sectionColor:{value:new Ge(n())},backgroundColor:{value:new Ge(r())},backgroundOpacity:{value:o()},fadeDistance:{value:d()},fadeStrength:{value:f()},cellThickness:{value:p()},sectionThickness:{value:v()},infiniteGrid:{value:u()},followCamera:{value:h()},coord0:{value:0},coord1:{value:2},coord2:{value:1},gridType:{value:N.grid},lineGridCoord:{value:V[x()]},circleGridMaxRadius:{value:y()},polarCellDividers:{value:_()},polarSectionDividers:{value:E()},worldCamProjPosition:{value:new L},worldPlanePosition:{value:new L}};Dt(()=>{const Z=K[l()],j=Z.charAt(0),X=Z.charAt(1),F=Z.charAt(2);Q.coord0.value=V[j],Q.coord1.value=V[X],Q.coord2.value=V[F],S()}),Dt(()=>{Q.cellSize.value=i(),S()}),Dt(()=>{Q.sectionSize.value=a(),S()}),Dt(()=>{Q.cellColor.value.set(t()),S()}),Dt(()=>{Q.sectionColor.value.set(n()),S()}),Dt(()=>{Q.backgroundColor.value.set(r()),S()}),Dt(()=>{Q.backgroundOpacity.value=o(),S()}),Dt(()=>{Q.fadeDistance.value=d(),S()}),Dt(()=>{Q.fadeStrength.value=f(),S()}),Dt(()=>{Q.cellThickness.value=p(),S()}),Dt(()=>{Q.sectionThickness.value=v(),S()}),Dt(()=>{Q.followCamera.value=h(),S()}),Dt(()=>{Q.infiniteGrid.value=u(),S()}),Dt(()=>{switch(m()){case"grid":{Q.gridType.value=N.grid;break}case"lines":{Q.gridType.value=N.lines,Q.lineGridCoord.value=V[x()];break}case"circular":{Q.gridType.value=N.circular,Q.circleGridMaxRadius.value=y();break}case"polar":{Q.gridType.value=N.polar,Q.circleGridMaxRadius.value=y(),Q.polarCellDividers.value=_(),Q.polarSectionDividers.value=E();break}}S()}),so(()=>{D.setFromNormalAndCoplanarPoint(P,k).applyMatrix4(T.matrixWorld);const Z=T.material,j=Z.uniforms.worldCamProjPosition,X=Z.uniforms.worldPlanePosition;D.projectPoint(b.current.position,j.value),X.value.set(0,0,0).applyMatrix4(T.matrixWorld)},{autoInvalidate:!1}),St(s,Br({is:T,frustumCulled:!1},()=>M,{get ref(){return w()},set ref(Z){w(Z)},children:(Z,j)=>{var X=k2(),F=Ze(X);Nt(F,()=>St.ShaderMaterial,(W,q)=>{q(W,{fragmentShader:F2,vertexShader:O2,uniforms:Q,transparent:!0,get side(){return g()}})});var J=_t(F,2);{var $=W=>{var q=pt(),Y=Ze(q);Xi(Y,()=>e.children,()=>({ref:T})),Ye(W,q)},G=W=>{var q=pt(),Y=Ze(q);const ne=Mt(()=>typeof c()=="number"?[c(),c()]:c());Nt(Y,()=>St.PlaneGeometry,(ge,ve)=>{ve(ge,{get args(){return ye(ne)}})}),Ye(W,q)};Bt(J,W=>{e.children?W($):W(G,!1)})}Ye(Z,X)},$$slots:{default:!0}})),Bn()}const Ps=new iu,$n=new L,$r=new L,an=new Ht,Tg={X:new L(1,0,0),Y:new L(0,1,0),Z:new L(0,0,1)},yd={type:"change"},Ag={type:"mouseDown",mode:null},Cg={type:"mouseUp",mode:null},Rg={type:"objectChange"};class z2 extends ru{constructor(e,t=null){super(void 0,t);const n=new Y2(this);this._root=n;const i=new q2;this._gizmo=i,n.add(i);const r=new j2;this._plane=r,n.add(r);const o=this;function a(y,_){let E=_;Object.defineProperty(o,y,{get:function(){return E!==void 0?E:_},set:function(w){E!==w&&(E=w,r[y]=w,i[y]=w,o.dispatchEvent({type:y+"-changed",value:w}),o.dispatchEvent(yd))}}),o[y]=_,r[y]=_,i[y]=_}a("camera",e),a("object",void 0),a("enabled",!0),a("axis",null),a("mode","translate"),a("translationSnap",null),a("rotationSnap",null),a("scaleSnap",null),a("space","world"),a("size",1),a("dragging",!1),a("showX",!0),a("showY",!0),a("showZ",!0),a("minX",-1/0),a("maxX",1/0),a("minY",-1/0),a("maxY",1/0),a("minZ",-1/0),a("maxZ",1/0);const l=new L,c=new L,h=new Ht,u=new Ht,d=new L,f=new Ht,p=new L,v=new L,g=new L,m=0,x=new L;a("worldPosition",l),a("worldPositionStart",c),a("worldQuaternion",h),a("worldQuaternionStart",u),a("cameraPosition",d),a("cameraQuaternion",f),a("pointStart",p),a("pointEnd",v),a("rotationAxis",g),a("rotationAngle",m),a("eye",x),this._offset=new L,this._startNorm=new L,this._endNorm=new L,this._cameraScale=new L,this._parentPosition=new L,this._parentQuaternion=new Ht,this._parentQuaternionInv=new Ht,this._parentScale=new L,this._worldScaleStart=new L,this._worldQuaternionInv=new Ht,this._worldScale=new L,this._positionStart=new L,this._quaternionStart=new Ht,this._scaleStart=new L,this._getPointer=G2.bind(this),this._onPointerDown=H2.bind(this),this._onPointerHover=V2.bind(this),this._onPointerMove=W2.bind(this),this._onPointerUp=X2.bind(this),t!==null&&this.connect()}connect(){this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointermove",this._onPointerHover),this.domElement.addEventListener("pointerup",this._onPointerUp),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerHover),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.style.touchAction="auto"}getHelper(){return this._root}pointerHover(e){if(this.object===void 0||this.dragging===!0)return;e!==null&&Ps.setFromCamera(e,this.camera);const t=xd(this._gizmo.picker[this.mode],Ps);t?this.axis=t.object.name:this.axis=null}pointerDown(e){if(!(this.object===void 0||this.dragging===!0||e!=null&&e.button!==0)&&this.axis!==null){e!==null&&Ps.setFromCamera(e,this.camera);const t=xd(this._plane,Ps,!0);t&&(this.object.updateMatrixWorld(),this.object.parent.updateMatrixWorld(),this._positionStart.copy(this.object.position),this._quaternionStart.copy(this.object.quaternion),this._scaleStart.copy(this.object.scale),this.object.matrixWorld.decompose(this.worldPositionStart,this.worldQuaternionStart,this._worldScaleStart),this.pointStart.copy(t.point).sub(this.worldPositionStart)),this.dragging=!0,Ag.mode=this.mode,this.dispatchEvent(Ag)}}pointerMove(e){const t=this.axis,n=this.mode,i=this.object;let r=this.space;if(n==="scale"?r="local":(t==="E"||t==="XYZE"||t==="XYZ")&&(r="world"),i===void 0||t===null||this.dragging===!1||e!==null&&e.button!==-1)return;e!==null&&Ps.setFromCamera(e,this.camera);const o=xd(this._plane,Ps,!0);if(o){if(this.pointEnd.copy(o.point).sub(this.worldPositionStart),n==="translate")this._offset.copy(this.pointEnd).sub(this.pointStart),r==="local"&&t!=="XYZ"&&this._offset.applyQuaternion(this._worldQuaternionInv),t.indexOf("X")===-1&&(this._offset.x=0),t.indexOf("Y")===-1&&(this._offset.y=0),t.indexOf("Z")===-1&&(this._offset.z=0),r==="local"&&t!=="XYZ"?this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale):this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale),i.position.copy(this._offset).add(this._positionStart),this.translationSnap&&(r==="local"&&(i.position.applyQuaternion(an.copy(this._quaternionStart).invert()),t.search("X")!==-1&&(i.position.x=Math.round(i.position.x/this.translationSnap)*this.translationSnap),t.search("Y")!==-1&&(i.position.y=Math.round(i.position.y/this.translationSnap)*this.translationSnap),t.search("Z")!==-1&&(i.position.z=Math.round(i.position.z/this.translationSnap)*this.translationSnap),i.position.applyQuaternion(this._quaternionStart)),r==="world"&&(i.parent&&i.position.add($n.setFromMatrixPosition(i.parent.matrixWorld)),t.search("X")!==-1&&(i.position.x=Math.round(i.position.x/this.translationSnap)*this.translationSnap),t.search("Y")!==-1&&(i.position.y=Math.round(i.position.y/this.translationSnap)*this.translationSnap),t.search("Z")!==-1&&(i.position.z=Math.round(i.position.z/this.translationSnap)*this.translationSnap),i.parent&&i.position.sub($n.setFromMatrixPosition(i.parent.matrixWorld)))),i.position.x=Math.max(this.minX,Math.min(this.maxX,i.position.x)),i.position.y=Math.max(this.minY,Math.min(this.maxY,i.position.y)),i.position.z=Math.max(this.minZ,Math.min(this.maxZ,i.position.z));else if(n==="scale"){if(t.search("XYZ")!==-1){let a=this.pointEnd.length()/this.pointStart.length();this.pointEnd.dot(this.pointStart)<0&&(a*=-1),$r.set(a,a,a)}else $n.copy(this.pointStart),$r.copy(this.pointEnd),$n.applyQuaternion(this._worldQuaternionInv),$r.applyQuaternion(this._worldQuaternionInv),$r.divide($n),t.search("X")===-1&&($r.x=1),t.search("Y")===-1&&($r.y=1),t.search("Z")===-1&&($r.z=1);i.scale.copy(this._scaleStart).multiply($r),this.scaleSnap&&(t.search("X")!==-1&&(i.scale.x=Math.round(i.scale.x/this.scaleSnap)*this.scaleSnap||this.scaleSnap),t.search("Y")!==-1&&(i.scale.y=Math.round(i.scale.y/this.scaleSnap)*this.scaleSnap||this.scaleSnap),t.search("Z")!==-1&&(i.scale.z=Math.round(i.scale.z/this.scaleSnap)*this.scaleSnap||this.scaleSnap))}else if(n==="rotate"){this._offset.copy(this.pointEnd).sub(this.pointStart);const a=20/this.worldPosition.distanceTo($n.setFromMatrixPosition(this.camera.matrixWorld));let l=!1;t==="XYZE"?(this.rotationAxis.copy(this._offset).cross(this.eye).normalize(),this.rotationAngle=this._offset.dot($n.copy(this.rotationAxis).cross(this.eye))*a):(t==="X"||t==="Y"||t==="Z")&&(this.rotationAxis.copy(Tg[t]),$n.copy(Tg[t]),r==="local"&&$n.applyQuaternion(this.worldQuaternion),$n.cross(this.eye),$n.length()===0?l=!0:this.rotationAngle=this._offset.dot($n.normalize())*a),(t==="E"||l)&&(this.rotationAxis.copy(this.eye),this.rotationAngle=this.pointEnd.angleTo(this.pointStart),this._startNorm.copy(this.pointStart).normalize(),this._endNorm.copy(this.pointEnd).normalize(),this.rotationAngle*=this._endNorm.cross(this._startNorm).dot(this.eye)<0?1:-1),this.rotationSnap&&(this.rotationAngle=Math.round(this.rotationAngle/this.rotationSnap)*this.rotationSnap),r==="local"&&t!=="E"&&t!=="XYZE"?(i.quaternion.copy(this._quaternionStart),i.quaternion.multiply(an.setFromAxisAngle(this.rotationAxis,this.rotationAngle)).normalize()):(this.rotationAxis.applyQuaternion(this._parentQuaternionInv),i.quaternion.copy(an.setFromAxisAngle(this.rotationAxis,this.rotationAngle)),i.quaternion.multiply(this._quaternionStart).normalize())}this.dispatchEvent(yd),this.dispatchEvent(Rg)}}pointerUp(e){e!==null&&e.button!==0||(this.dragging&&this.axis!==null&&(Cg.mode=this.mode,this.dispatchEvent(Cg)),this.dragging=!1,this.axis=null)}dispose(){this.disconnect(),this._root.dispose()}attach(e){return this.object=e,this._root.visible=!0,this}detach(){return this.object=void 0,this.axis=null,this._root.visible=!1,this}reset(){this.enabled&&this.dragging&&(this.object.position.copy(this._positionStart),this.object.quaternion.copy(this._quaternionStart),this.object.scale.copy(this._scaleStart),this.dispatchEvent(yd),this.dispatchEvent(Rg),this.pointStart.copy(this.pointEnd))}getRaycaster(){return Ps}getMode(){return this.mode}setMode(e){this.mode=e}setTranslationSnap(e){this.translationSnap=e}setRotationSnap(e){this.rotationSnap=e}setScaleSnap(e){this.scaleSnap=e}setSize(e){this.size=e}setSpace(e){this.space=e}}function G2(s){if(this.domElement.ownerDocument.pointerLockElement)return{x:0,y:0,button:s.button};{const e=this.domElement.getBoundingClientRect();return{x:(s.clientX-e.left)/e.width*2-1,y:-(s.clientY-e.top)/e.height*2+1,button:s.button}}}function V2(s){if(this.enabled)switch(s.pointerType){case"mouse":case"pen":this.pointerHover(this._getPointer(s));break}}function H2(s){this.enabled&&(document.pointerLockElement||this.domElement.setPointerCapture(s.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.pointerHover(this._getPointer(s)),this.pointerDown(this._getPointer(s)))}function W2(s){this.enabled&&this.pointerMove(this._getPointer(s))}function X2(s){this.enabled&&(this.domElement.releasePointerCapture(s.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.pointerUp(this._getPointer(s)))}function xd(s,e,t){const n=e.intersectObject(s,!0);for(let i=0;i<n.length;i++)if(n[i].object.visible||t)return n[i];return!1}const _c=new wi,nn=new L(0,1,0),Pg=new L(0,0,0),Ig=new st,yc=new Ht,Cc=new Ht,cr=new L,Dg=new st,ba=new L(1,0,0),Us=new L(0,1,0),Sa=new L(0,0,1),xc=new L,ga=new L,va=new L;class Y2 extends Ot{constructor(e){super(),this.isTransformControlsRoot=!0,this.controls=e,this.visible=!1}updateMatrixWorld(e){const t=this.controls;t.object!==void 0&&(t.object.updateMatrixWorld(),t.object.parent===null?console.error("TransformControls: The attached 3D object must be a part of the scene graph."):t.object.parent.matrixWorld.decompose(t._parentPosition,t._parentQuaternion,t._parentScale),t.object.matrixWorld.decompose(t.worldPosition,t.worldQuaternion,t._worldScale),t._parentQuaternionInv.copy(t._parentQuaternion).invert(),t._worldQuaternionInv.copy(t.worldQuaternion).invert()),t.camera.updateMatrixWorld(),t.camera.matrixWorld.decompose(t.cameraPosition,t.cameraQuaternion,t._cameraScale),t.camera.isOrthographicCamera?t.camera.getWorldDirection(t.eye).negate():t.eye.copy(t.cameraPosition).sub(t.worldPosition).normalize(),super.updateMatrixWorld(e)}dispose(){this.traverse(function(e){e.geometry&&e.geometry.dispose(),e.material&&e.material.dispose()})}}class q2 extends Ot{constructor(){super(),this.isTransformControlsGizmo=!0,this.type="TransformControlsGizmo";const e=new On({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),t=new Fn({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),n=e.clone();n.opacity=.15;const i=t.clone();i.opacity=.5;const r=e.clone();r.color.setHex(16711680);const o=e.clone();o.color.setHex(65280);const a=e.clone();a.color.setHex(255);const l=e.clone();l.color.setHex(16711680),l.opacity=.5;const c=e.clone();c.color.setHex(65280),c.opacity=.5;const h=e.clone();h.color.setHex(255),h.opacity=.5;const u=e.clone();u.opacity=.25;const d=e.clone();d.color.setHex(16776960),d.opacity=.25,e.clone().color.setHex(16776960);const p=e.clone();p.color.setHex(7895160);const v=new Tn(0,.04,.1,12);v.translate(0,.05,0);const g=new vn(.08,.08,.08);g.translate(0,.04,0);const m=new bt;m.setAttribute("position",new Ke([0,0,0,1,0,0],3));const x=new Tn(.0075,.0075,.5,3);x.translate(0,.25,0);function y(K,N){const Q=new Ir(K,.0075,3,64,N*Math.PI*2);return Q.rotateY(Math.PI/2),Q.rotateX(Math.PI/2),Q}function _(){const K=new bt;return K.setAttribute("position",new Ke([0,0,0,1,1,1],3)),K}const E={X:[[new ke(v,r),[.5,0,0],[0,0,-Math.PI/2]],[new ke(v,r),[-.5,0,0],[0,0,Math.PI/2]],[new ke(x,r),[0,0,0],[0,0,-Math.PI/2]]],Y:[[new ke(v,o),[0,.5,0]],[new ke(v,o),[0,-.5,0],[Math.PI,0,0]],[new ke(x,o)]],Z:[[new ke(v,a),[0,0,.5],[Math.PI/2,0,0]],[new ke(v,a),[0,0,-.5],[-Math.PI/2,0,0]],[new ke(x,a),null,[Math.PI/2,0,0]]],XYZ:[[new ke(new Ur(.1,0),u.clone()),[0,0,0]]],XY:[[new ke(new vn(.15,.15,.01),h.clone()),[.15,.15,0]]],YZ:[[new ke(new vn(.15,.15,.01),l.clone()),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new ke(new vn(.15,.15,.01),c.clone()),[.15,0,.15],[-Math.PI/2,0,0]]]},w={X:[[new ke(new Tn(.2,0,.6,4),n),[.3,0,0],[0,0,-Math.PI/2]],[new ke(new Tn(.2,0,.6,4),n),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new ke(new Tn(.2,0,.6,4),n),[0,.3,0]],[new ke(new Tn(.2,0,.6,4),n),[0,-.3,0],[0,0,Math.PI]]],Z:[[new ke(new Tn(.2,0,.6,4),n),[0,0,.3],[Math.PI/2,0,0]],[new ke(new Tn(.2,0,.6,4),n),[0,0,-.3],[-Math.PI/2,0,0]]],XYZ:[[new ke(new Ur(.2,0),n)]],XY:[[new ke(new vn(.2,.2,.01),n),[.15,.15,0]]],YZ:[[new ke(new vn(.2,.2,.01),n),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new ke(new vn(.2,.2,.01),n),[.15,0,.15],[-Math.PI/2,0,0]]]},M={START:[[new ke(new Ur(.01,2),i),null,null,null,"helper"]],END:[[new ke(new Ur(.01,2),i),null,null,null,"helper"]],DELTA:[[new Xn(_(),i),null,null,null,"helper"]],X:[[new Xn(m,i.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new Xn(m,i.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new Xn(m,i.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]},T={XYZE:[[new ke(y(.5,1),p),null,[0,Math.PI/2,0]]],X:[[new ke(y(.5,.5),r)]],Y:[[new ke(y(.5,.5),o),null,[0,0,-Math.PI/2]]],Z:[[new ke(y(.5,.5),a),null,[0,Math.PI/2,0]]],E:[[new ke(y(.75,1),d),null,[0,Math.PI/2,0]]]},S={AXIS:[[new Xn(m,i.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]]},b={XYZE:[[new ke(new ao(.25,10,8),n)]],X:[[new ke(new Ir(.5,.1,4,24),n),[0,0,0],[0,-Math.PI/2,-Math.PI/2]]],Y:[[new ke(new Ir(.5,.1,4,24),n),[0,0,0],[Math.PI/2,0,0]]],Z:[[new ke(new Ir(.5,.1,4,24),n),[0,0,0],[0,0,-Math.PI/2]]],E:[[new ke(new Ir(.75,.1,2,24),n)]]},D={X:[[new ke(g,r),[.5,0,0],[0,0,-Math.PI/2]],[new ke(x,r),[0,0,0],[0,0,-Math.PI/2]],[new ke(g,r),[-.5,0,0],[0,0,Math.PI/2]]],Y:[[new ke(g,o),[0,.5,0]],[new ke(x,o)],[new ke(g,o),[0,-.5,0],[0,0,Math.PI]]],Z:[[new ke(g,a),[0,0,.5],[Math.PI/2,0,0]],[new ke(x,a),[0,0,0],[Math.PI/2,0,0]],[new ke(g,a),[0,0,-.5],[-Math.PI/2,0,0]]],XY:[[new ke(new vn(.15,.15,.01),h),[.15,.15,0]]],YZ:[[new ke(new vn(.15,.15,.01),l),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new ke(new vn(.15,.15,.01),c),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new ke(new vn(.1,.1,.1),u.clone())]]},P={X:[[new ke(new Tn(.2,0,.6,4),n),[.3,0,0],[0,0,-Math.PI/2]],[new ke(new Tn(.2,0,.6,4),n),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new ke(new Tn(.2,0,.6,4),n),[0,.3,0]],[new ke(new Tn(.2,0,.6,4),n),[0,-.3,0],[0,0,Math.PI]]],Z:[[new ke(new Tn(.2,0,.6,4),n),[0,0,.3],[Math.PI/2,0,0]],[new ke(new Tn(.2,0,.6,4),n),[0,0,-.3],[-Math.PI/2,0,0]]],XY:[[new ke(new vn(.2,.2,.01),n),[.15,.15,0]]],YZ:[[new ke(new vn(.2,.2,.01),n),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new ke(new vn(.2,.2,.01),n),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new ke(new vn(.2,.2,.2),n),[0,0,0]]]},k={X:[[new Xn(m,i.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new Xn(m,i.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new Xn(m,i.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]};function V(K){const N=new Ot;for(const Q in K)for(let Z=K[Q].length;Z--;){const j=K[Q][Z][0].clone(),X=K[Q][Z][1],F=K[Q][Z][2],J=K[Q][Z][3],$=K[Q][Z][4];j.name=Q,j.tag=$,X&&j.position.set(X[0],X[1],X[2]),F&&j.rotation.set(F[0],F[1],F[2]),J&&j.scale.set(J[0],J[1],J[2]),j.updateMatrix();const G=j.geometry.clone();G.applyMatrix4(j.matrix),j.geometry=G,j.renderOrder=1/0,j.position.set(0,0,0),j.rotation.set(0,0,0),j.scale.set(1,1,1),N.add(j)}return N}this.gizmo={},this.picker={},this.helper={},this.add(this.gizmo.translate=V(E)),this.add(this.gizmo.rotate=V(T)),this.add(this.gizmo.scale=V(D)),this.add(this.picker.translate=V(w)),this.add(this.picker.rotate=V(b)),this.add(this.picker.scale=V(P)),this.add(this.helper.translate=V(M)),this.add(this.helper.rotate=V(S)),this.add(this.helper.scale=V(k)),this.picker.translate.visible=!1,this.picker.rotate.visible=!1,this.picker.scale.visible=!1}updateMatrixWorld(e){const n=(this.mode==="scale"?"local":this.space)==="local"?this.worldQuaternion:Cc;this.gizmo.translate.visible=this.mode==="translate",this.gizmo.rotate.visible=this.mode==="rotate",this.gizmo.scale.visible=this.mode==="scale",this.helper.translate.visible=this.mode==="translate",this.helper.rotate.visible=this.mode==="rotate",this.helper.scale.visible=this.mode==="scale";let i=[];i=i.concat(this.picker[this.mode].children),i=i.concat(this.gizmo[this.mode].children),i=i.concat(this.helper[this.mode].children);for(let r=0;r<i.length;r++){const o=i[r];o.visible=!0,o.rotation.set(0,0,0),o.position.copy(this.worldPosition);let a;if(this.camera.isOrthographicCamera?a=(this.camera.top-this.camera.bottom)/this.camera.zoom:a=this.worldPosition.distanceTo(this.cameraPosition)*Math.min(1.9*Math.tan(Math.PI*this.camera.fov/360)/this.camera.zoom,7),o.scale.set(1,1,1).multiplyScalar(a*this.size/4),o.tag==="helper"){o.visible=!1,o.name==="AXIS"?(o.visible=!!this.axis,this.axis==="X"&&(an.setFromEuler(_c.set(0,0,0)),o.quaternion.copy(n).multiply(an),Math.abs(nn.copy(ba).applyQuaternion(n).dot(this.eye))>.9&&(o.visible=!1)),this.axis==="Y"&&(an.setFromEuler(_c.set(0,0,Math.PI/2)),o.quaternion.copy(n).multiply(an),Math.abs(nn.copy(Us).applyQuaternion(n).dot(this.eye))>.9&&(o.visible=!1)),this.axis==="Z"&&(an.setFromEuler(_c.set(0,Math.PI/2,0)),o.quaternion.copy(n).multiply(an),Math.abs(nn.copy(Sa).applyQuaternion(n).dot(this.eye))>.9&&(o.visible=!1)),this.axis==="XYZE"&&(an.setFromEuler(_c.set(0,Math.PI/2,0)),nn.copy(this.rotationAxis),o.quaternion.setFromRotationMatrix(Ig.lookAt(Pg,nn,Us)),o.quaternion.multiply(an),o.visible=this.dragging),this.axis==="E"&&(o.visible=!1)):o.name==="START"?(o.position.copy(this.worldPositionStart),o.visible=this.dragging):o.name==="END"?(o.position.copy(this.worldPosition),o.visible=this.dragging):o.name==="DELTA"?(o.position.copy(this.worldPositionStart),o.quaternion.copy(this.worldQuaternionStart),$n.set(1e-10,1e-10,1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1),$n.applyQuaternion(this.worldQuaternionStart.clone().invert()),o.scale.copy($n),o.visible=this.dragging):(o.quaternion.copy(n),this.dragging?o.position.copy(this.worldPositionStart):o.position.copy(this.worldPosition),this.axis&&(o.visible=this.axis.search(o.name)!==-1));continue}o.quaternion.copy(n),this.mode==="translate"||this.mode==="scale"?(o.name==="X"&&Math.abs(nn.copy(ba).applyQuaternion(n).dot(this.eye))>.99&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="Y"&&Math.abs(nn.copy(Us).applyQuaternion(n).dot(this.eye))>.99&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="Z"&&Math.abs(nn.copy(Sa).applyQuaternion(n).dot(this.eye))>.99&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="XY"&&Math.abs(nn.copy(Sa).applyQuaternion(n).dot(this.eye))<.2&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="YZ"&&Math.abs(nn.copy(ba).applyQuaternion(n).dot(this.eye))<.2&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="XZ"&&Math.abs(nn.copy(Us).applyQuaternion(n).dot(this.eye))<.2&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1)):this.mode==="rotate"&&(yc.copy(n),nn.copy(this.eye).applyQuaternion(an.copy(n).invert()),o.name.search("E")!==-1&&o.quaternion.setFromRotationMatrix(Ig.lookAt(this.eye,Pg,Us)),o.name==="X"&&(an.setFromAxisAngle(ba,Math.atan2(-nn.y,nn.z)),an.multiplyQuaternions(yc,an),o.quaternion.copy(an)),o.name==="Y"&&(an.setFromAxisAngle(Us,Math.atan2(nn.x,nn.z)),an.multiplyQuaternions(yc,an),o.quaternion.copy(an)),o.name==="Z"&&(an.setFromAxisAngle(Sa,Math.atan2(nn.y,nn.x)),an.multiplyQuaternions(yc,an),o.quaternion.copy(an))),o.visible=o.visible&&(o.name.indexOf("X")===-1||this.showX),o.visible=o.visible&&(o.name.indexOf("Y")===-1||this.showY),o.visible=o.visible&&(o.name.indexOf("Z")===-1||this.showZ),o.visible=o.visible&&(o.name.indexOf("E")===-1||this.showX&&this.showY&&this.showZ),o.material._color=o.material._color||o.material.color.clone(),o.material._opacity=o.material._opacity||o.material.opacity,o.material.color.copy(o.material._color),o.material.opacity=o.material._opacity,this.enabled&&this.axis&&(o.name===this.axis||this.axis.split("").some(function(l){return o.name===l}))&&(o.material.color.setHex(16776960),o.material.opacity=1)}super.updateMatrixWorld(e)}}class j2 extends ke{constructor(){super(new sr(1e5,1e5,2,2),new On({visible:!1,wireframe:!0,side:xi,transparent:!0,opacity:.1,toneMapped:!1})),this.isTransformControlsPlane=!0,this.type="TransformControlsPlane"}updateMatrixWorld(e){let t=this.space;switch(this.position.copy(this.worldPosition),this.mode==="scale"&&(t="local"),xc.copy(ba).applyQuaternion(t==="local"?this.worldQuaternion:Cc),ga.copy(Us).applyQuaternion(t==="local"?this.worldQuaternion:Cc),va.copy(Sa).applyQuaternion(t==="local"?this.worldQuaternion:Cc),nn.copy(ga),this.mode){case"translate":case"scale":switch(this.axis){case"X":nn.copy(this.eye).cross(xc),cr.copy(xc).cross(nn);break;case"Y":nn.copy(this.eye).cross(ga),cr.copy(ga).cross(nn);break;case"Z":nn.copy(this.eye).cross(va),cr.copy(va).cross(nn);break;case"XY":cr.copy(va);break;case"YZ":cr.copy(xc);break;case"XZ":nn.copy(va),cr.copy(ga);break;case"XYZ":case"E":cr.set(0,0,0);break}break;case"rotate":default:cr.set(0,0,0)}cr.length()===0?this.quaternion.copy(this.cameraQuaternion):(Dg.lookAt($n.set(0,0,0),cr,nn),this.quaternion.setFromRotationMatrix(Dg)),super.updateMatrixWorld(e)}}const y_=()=>CA("threlte-controls",{orbitControls:ti(void 0),trackballControls:ti(void 0)});var Z2=$t("<!> <!>",1);function J2(s,e){kn(e,!0);const[t,n]=il(),i=()=>Ws(h,"$camera",t);let r=Xe(e,"autoPauseOrbitControls",3,!0),o=Xe(e,"autoPauseTrackballControls",3,!0),a=Xe(e,"controls",15),l=Xe(e,"group",15),c=yr(e,["$$slots","$$events","$$legacy","autoPauseOrbitControls","autoPauseTrackballControls","object","controls","group","children"]);const{camera:h,dom:u,invalidate:d,scene:f}=ki(),{orbitControls:p,trackballControls:v}=y_(),g=dn(!1),m=ti(r()??!0);Dt(()=>m.set(r()??!0));const x=ti(o()??!0);Dt(()=>x.set(o()??!0)),ei([p,g,m],([P,k,V])=>{if(!(!P||!P.enabled&&k))return P.enabled=!(k&&V),()=>{P.enabled=!0}}),ei([v,g,x],([P,k,V])=>{if(!(!P||!P.enabled&&k))return P.enabled=!(k&&V),()=>{P.enabled=!0}});const y=new Wi;let _=Mt(()=>new z2(i(),u));Dt(()=>{var P;return(P=ye(_))==null||P.attach(e.object??y),()=>{var k;return(k=ye(_))==null?void 0:k.detach()}});const E=["enabled","axis","mode","translationSnap","rotationSnap","scaleSnap","space","size","showX","showY","showZ","visible","onmouseDown","onmouseUp","onobjectChange"];let w=Hi(Nn({})),M=Hi(Nn({}));Dt(()=>{Ui(w,Nn({})),Ui(M,Nn({})),Object.keys(c).forEach(P=>{Dt(()=>{E.includes(P)?ye(w)[P]=c[P]:ye(M)[P]=c[P]})})});const T=P=>{var k;d(),ye(_).dragging&&!g.current?g.set(!0):!ye(_).dragging&&g.current&&g.set(!1),(k=e.onchange)==null||k.call(e,P)};var S=Z2(),b=Ze(S);St(b,Br({get is(){return ye(_)},onchange:T},()=>ye(w),{attach:({ref:P})=>{const k=P.getHelper();return f.add(k),()=>{f.remove(k)}},dispose:!1,oncreate:P=>()=>P.dispose(),get ref(){return a()},set ref(P){a(P)}}));var D=_t(b,2);St(D,Br({is:y},()=>ye(M),{get ref(){return l()},set ref(P){l(P)},children:(P,k)=>{var V=pt(),K=Ze(V);{var N=Q=>{var Z=pt(),j=Ze(Z);Xi(j,()=>e.children,()=>({ref:y})),Ye(Q,Z)};Bt(K,Q=>{e.children&&Q(N)})}Ye(P,V)},$$slots:{default:!0}})),Ye(s,S),Bn(),n()}function K2(s,e){kn(e,!0);const[t,n]=il(),i=()=>Ws(a,"$parent",t);let r=Xe(e,"ref",15),o=yr(e,["$$slots","$$events","$$legacy","ref","children"]);const a=$f(),{dom:l,invalidate:c}=ki();if(!Li(i(),"Camera"))throw new Error("Parent missing: <OrbitControls> need to be a child of a <Camera>");const h=new __(i(),l),{orbitControls:u}=y_(),{start:d,stop:f}=so(()=>{h.update()},{autoStart:!1,autoInvalidate:!1});Dt(()=>{e.autoRotate||e.enableDamping?d():f()}),Dt(()=>{const p=v=>{var g;c(),(g=e.onchange)==null||g.call(e,v)};return u.set(h),h.addEventListener("change",p),()=>{u.set(void 0),h.removeEventListener("change",p)}}),St(s,Br({is:h},()=>o,{get ref(){return r()},set ref(p){r(p)},children:(p,v)=>{var g=pt(),m=Ze(g);Xi(m,()=>e.children??kr,()=>({ref:h})),Ye(p,g)},$$slots:{default:!0}})),Bn(),n()}new st;new st;new ke;function Lg(s,e){kn(e,!0);let t=Xe(e,"points",19,()=>[]),n=Xe(e,"shape",3,"none"),i=Xe(e,"shapeFunction",7,()=>1),r=Xe(e,"ref",15),o=t().length;const{invalidate:a}=ki(),l=new Ct(new Float32Array(o*6),3),c=new Ct(new Float32Array(o*6),3),h=new Ct(new Float32Array(o*6),3),u=new Ct(new Float32Array(o*2),1),d=new Ct(new Float32Array(o*2),1),f=new Ct(new Float32Array(o*2),1),p=new Ct(new Float32Array(o*4),2),v=new Ct(new Uint16Array(o*6),1);n()==="taper"&&i(x=>1*Math.pow(4*x*(1-x),1));for(let x=0,y=0,_=0,E=0;x<o;x+=1,y+=2,_+=4,E+=6){u.setX(y,x/t().length),u.setX(y+1,x/t().length),d.setX(y,1),d.setX(y+1,-1);const w=n()==="none"?1:i()(x/(o-1));if(f.setX(y,w),f.setX(y+1,w),p.setXYZW(y,x/(o-1),0,x/(o-1),1),x<o-1){const M=x*2;v.setX(E+0,M+0),v.setX(E+1,M+1),v.setX(E+2,M+2),v.setX(E+3,M+2),v.setX(E+4,M+1),v.setX(E+5,M+3)}}const g=new bt;g.setAttribute("position",l),g.setAttribute("previous",c),g.setAttribute("next",h),g.setAttribute("counters",u),g.setAttribute("side",d),g.setAttribute("width",f),g.setAttribute("uv",p),g.setIndex(v);const m=x=>{if(x.length===0||x.length!==o)return;let y=0,_=0,E=0;const w=x[0];c.setXYZ(_,w.x,w.y,w.z),_+=1,c.setXYZ(_,w.x,w.y,w.z),_+=1;for(let T=0;T<o;T++){const S=x[T];l.setXYZ(y,S.x,S.y,S.z),y+=1,l.setXYZ(y,S.x,S.y,S.z),y+=1,T<o-1&&(c.setXYZ(_,S.x,S.y,S.z),_+=1,c.setXYZ(_,S.x,S.y,S.z),_+=1),T>0&&T+1<=o&&(h.setXYZ(E,S.x,S.y,S.z),E+=1,h.setXYZ(E,S.x,S.y,S.z),E+=1)}const M=x[o-1];h.setXYZ(E,M.x,M.y,M.z),E+=1,h.setXYZ(E,M.x,M.y,M.z),E+=1,l.needsUpdate=!0,c.needsUpdate=!0,h.needsUpdate=!0,g.computeBoundingSphere(),a()};Dt(()=>m(t())),St(s,Br({is:g},()=>e.props,{get ref(){return r()},set ref(x){r(x)},children:(x,y)=>{var _=pt(),E=Ze(_);Xi(E,()=>e.children??kr,()=>({ref:g})),Ye(x,_)},$$slots:{default:!0}})),Bn()}`${vt.logdepthbuf_pars_vertex}${vt.fog_pars_vertex}${vt.logdepthbuf_vertex}${vt.fog_vertex}`;function x_(s,e){kn(e,!0);const[t,n]=il(),i=()=>Ws(h,"$camera",t);let r=Xe(e,"follow",3,!0),o=Xe(e,"ref",15),a=yr(e,["$$slots","$$events","$$legacy","follow","ref","children"]);const l=new Wi,c=new Wi,{camera:h,renderStage:u}=ki(),d=new Ht;let f=Mt(()=>r()===!0?i():r()===!1?void 0:r());const p=AA("<Billboard>",{before:u}),{start:v,stop:g}=so(()=>{var m;c.updateMatrix(),c.updateWorldMatrix(!1,!1),c.getWorldQuaternion(d),(m=ye(f))==null||m.getWorldQuaternion(l.quaternion).premultiply(d.invert())},{autoStart:!1,stage:p});Dt(()=>{r()?v():g()}),St(s,Br({is:c},()=>a,{get ref(){return o()},set ref(m){o(m)},children:(m,x)=>{St(m,{is:l,children:(y,_)=>{var E=pt(),w=Ze(E);Xi(w,()=>e.children??kr,()=>({ref:c})),Ye(y,E)},$$slots:{default:!0}})},$$slots:{default:!0}})),Bn(),n()}`${vt.tonemapping_fragment}${vt.colorspace_fragment}`;`${vt.tonemapping_fragment}${vt.colorspace_fragment}`;const Q2=`

// A stack of uint32 indices can can store the indices for
// a perfectly balanced tree with a depth up to 31. Lower stack
// depth gets higher performance.
//
// However not all trees are balanced. Best value to set this to
// is the trees max depth.
#ifndef BVH_STACK_DEPTH
#define BVH_STACK_DEPTH 60
#endif

#ifndef INFINITY
#define INFINITY 1e20
#endif

// Utilities
uvec4 uTexelFetch1D( usampler2D tex, uint index ) {

	uint width = uint( textureSize( tex, 0 ).x );
	uvec2 uv;
	uv.x = index % width;
	uv.y = index / width;

	return texelFetch( tex, ivec2( uv ), 0 );

}

ivec4 iTexelFetch1D( isampler2D tex, uint index ) {

	uint width = uint( textureSize( tex, 0 ).x );
	uvec2 uv;
	uv.x = index % width;
	uv.y = index / width;

	return texelFetch( tex, ivec2( uv ), 0 );

}

vec4 texelFetch1D( sampler2D tex, uint index ) {

	uint width = uint( textureSize( tex, 0 ).x );
	uvec2 uv;
	uv.x = index % width;
	uv.y = index / width;

	return texelFetch( tex, ivec2( uv ), 0 );

}

vec4 textureSampleBarycoord( sampler2D tex, vec3 barycoord, uvec3 faceIndices ) {

	return
		barycoord.x * texelFetch1D( tex, faceIndices.x ) +
		barycoord.y * texelFetch1D( tex, faceIndices.y ) +
		barycoord.z * texelFetch1D( tex, faceIndices.z );

}

void ndcToCameraRay(
	vec2 coord, mat4 cameraWorld, mat4 invProjectionMatrix,
	out vec3 rayOrigin, out vec3 rayDirection
) {

	// get camera look direction and near plane for camera clipping
	vec4 lookDirection = cameraWorld * vec4( 0.0, 0.0, - 1.0, 0.0 );
	vec4 nearVector = invProjectionMatrix * vec4( 0.0, 0.0, - 1.0, 1.0 );
	float near = abs( nearVector.z / nearVector.w );

	// get the camera direction and position from camera matrices
	vec4 origin = cameraWorld * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec4 direction = invProjectionMatrix * vec4( coord, 0.5, 1.0 );
	direction /= direction.w;
	direction = cameraWorld * direction - origin;

	// slide the origin along the ray until it sits at the near clip plane position
	origin.xyz += direction.xyz * near / dot( direction, lookDirection );

	rayOrigin = origin.xyz;
	rayDirection = direction.xyz;

}
`,$2=`

#ifndef TRI_INTERSECT_EPSILON
#define TRI_INTERSECT_EPSILON 1e-5
#endif

// Raycasting
bool intersectsBounds( vec3 rayOrigin, vec3 rayDirection, vec3 boundsMin, vec3 boundsMax, out float dist ) {

	// https://www.reddit.com/r/opengl/comments/8ntzz5/fast_glsl_ray_box_intersection/
	// https://tavianator.com/2011/ray_box.html
	vec3 invDir = 1.0 / rayDirection;

	// find intersection distances for each plane
	vec3 tMinPlane = invDir * ( boundsMin - rayOrigin );
	vec3 tMaxPlane = invDir * ( boundsMax - rayOrigin );

	// get the min and max distances from each intersection
	vec3 tMinHit = min( tMaxPlane, tMinPlane );
	vec3 tMaxHit = max( tMaxPlane, tMinPlane );

	// get the furthest hit distance
	vec2 t = max( tMinHit.xx, tMinHit.yz );
	float t0 = max( t.x, t.y );

	// get the minimum hit distance
	t = min( tMaxHit.xx, tMaxHit.yz );
	float t1 = min( t.x, t.y );

	// set distance to 0.0 if the ray starts inside the box
	dist = max( t0, 0.0 );

	return t1 >= dist;

}

bool intersectsTriangle(
	vec3 rayOrigin, vec3 rayDirection, vec3 a, vec3 b, vec3 c,
	out vec3 barycoord, out vec3 norm, out float dist, out float side
) {

	// https://stackoverflow.com/questions/42740765/intersection-between-line-and-triangle-in-3d
	vec3 edge1 = b - a;
	vec3 edge2 = c - a;
	norm = cross( edge1, edge2 );

	float det = - dot( rayDirection, norm );
	float invdet = 1.0 / det;

	vec3 AO = rayOrigin - a;
	vec3 DAO = cross( AO, rayDirection );

	vec4 uvt;
	uvt.x = dot( edge2, DAO ) * invdet;
	uvt.y = - dot( edge1, DAO ) * invdet;
	uvt.z = dot( AO, norm ) * invdet;
	uvt.w = 1.0 - uvt.x - uvt.y;

	// set the hit information
	barycoord = uvt.wxy; // arranged in A, B, C order
	dist = uvt.z;
	side = sign( det );
	norm = side * normalize( norm );

	// add an epsilon to avoid misses between triangles
	uvt += vec4( TRI_INTERSECT_EPSILON );

	return all( greaterThanEqual( uvt, vec4( 0.0 ) ) );

}

bool intersectTriangles(
	// geometry info and triangle range
	sampler2D positionAttr, usampler2D indexAttr, uint offset, uint count,

	// ray
	vec3 rayOrigin, vec3 rayDirection,

	// outputs
	inout float minDistance, inout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord,
	inout float side, inout float dist
) {

	bool found = false;
	vec3 localBarycoord, localNormal;
	float localDist, localSide;
	for ( uint i = offset, l = offset + count; i < l; i ++ ) {

		uvec3 indices = uTexelFetch1D( indexAttr, i ).xyz;
		vec3 a = texelFetch1D( positionAttr, indices.x ).rgb;
		vec3 b = texelFetch1D( positionAttr, indices.y ).rgb;
		vec3 c = texelFetch1D( positionAttr, indices.z ).rgb;

		if (
			intersectsTriangle( rayOrigin, rayDirection, a, b, c, localBarycoord, localNormal, localDist, localSide )
			&& localDist < minDistance
		) {

			found = true;
			minDistance = localDist;

			faceIndices = uvec4( indices.xyz, i );
			faceNormal = localNormal;

			side = localSide;
			barycoord = localBarycoord;
			dist = localDist;

		}

	}

	return found;

}

bool intersectsBVHNodeBounds( vec3 rayOrigin, vec3 rayDirection, sampler2D bvhBounds, uint currNodeIndex, out float dist ) {

	uint cni2 = currNodeIndex * 2u;
	vec3 boundsMin = texelFetch1D( bvhBounds, cni2 ).xyz;
	vec3 boundsMax = texelFetch1D( bvhBounds, cni2 + 1u ).xyz;
	return intersectsBounds( rayOrigin, rayDirection, boundsMin, boundsMax, dist );

}

// use a macro to hide the fact that we need to expand the struct into separate fields
#define	bvhIntersectFirstHit(		bvh,		rayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist	)	_bvhIntersectFirstHit(		bvh.position, bvh.index, bvh.bvhBounds, bvh.bvhContents,		rayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist	)

bool _bvhIntersectFirstHit(
	// bvh info
	sampler2D bvh_position, usampler2D bvh_index, sampler2D bvh_bvhBounds, usampler2D bvh_bvhContents,

	// ray
	vec3 rayOrigin, vec3 rayDirection,

	// output variables split into separate variables due to output precision
	inout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord,
	inout float side, inout float dist
) {

	// stack needs to be twice as long as the deepest tree we expect because
	// we push both the left and right child onto the stack every traversal
	int ptr = 0;
	uint stack[ BVH_STACK_DEPTH ];
	stack[ 0 ] = 0u;

	float triangleDistance = INFINITY;
	bool found = false;
	while ( ptr > - 1 && ptr < BVH_STACK_DEPTH ) {

		uint currNodeIndex = stack[ ptr ];
		ptr --;

		// check if we intersect the current bounds
		float boundsHitDistance;
		if (
			! intersectsBVHNodeBounds( rayOrigin, rayDirection, bvh_bvhBounds, currNodeIndex, boundsHitDistance )
			|| boundsHitDistance > triangleDistance
		) {

			continue;

		}

		uvec2 boundsInfo = uTexelFetch1D( bvh_bvhContents, currNodeIndex ).xy;
		bool isLeaf = bool( boundsInfo.x & 0xffff0000u );

		if ( isLeaf ) {

			uint count = boundsInfo.x & 0x0000ffffu;
			uint offset = boundsInfo.y;

			found = intersectTriangles(
				bvh_position, bvh_index, offset, count,
				rayOrigin, rayDirection, triangleDistance,
				faceIndices, faceNormal, barycoord, side, dist
			) || found;

		} else {

			uint leftIndex = currNodeIndex + 1u;
			uint splitAxis = boundsInfo.x & 0x0000ffffu;
			uint rightIndex = boundsInfo.y;

			bool leftToRight = rayDirection[ splitAxis ] >= 0.0;
			uint c1 = leftToRight ? leftIndex : rightIndex;
			uint c2 = leftToRight ? rightIndex : leftIndex;

			// set c2 in the stack so we traverse it later. We need to keep track of a pointer in
			// the stack while we traverse. The second pointer added is the one that will be
			// traversed first
			ptr ++;
			stack[ ptr ] = c2;

			ptr ++;
			stack[ ptr ] = c1;

		}

	}

	return found;

}
`,eC=`
struct BVH {

	usampler2D index;
	sampler2D position;

	sampler2D bvhBounds;
	usampler2D bvhContents;

};
`,tC=eC,nC=`
	${Q2}
	${$2}
`;`${tC}${nC}${vt.tonemapping_fragment}${vt.colorspace_fragment}`;function b_(){var s=function(e){function t(j,X,F,J,$,G,W,q){var Y=1-W;q.x=Y*Y*j+2*Y*W*F+W*W*$,q.y=Y*Y*X+2*Y*W*J+W*W*G}function n(j,X,F,J,$,G,W,q,Y,ne){var ge=1-Y;ne.x=ge*ge*ge*j+3*ge*ge*Y*F+3*ge*Y*Y*$+Y*Y*Y*W,ne.y=ge*ge*ge*X+3*ge*ge*Y*J+3*ge*Y*Y*G+Y*Y*Y*q}function i(j,X){for(var F=/([MLQCZ])([^MLQCZ]*)/g,J,$,G,W,q;J=F.exec(j);){var Y=J[2].replace(/^\s*|\s*$/g,"").split(/[,\s]+/).map(function(ne){return parseFloat(ne)});switch(J[1]){case"M":W=$=Y[0],q=G=Y[1];break;case"L":(Y[0]!==W||Y[1]!==q)&&X("L",W,q,W=Y[0],q=Y[1]);break;case"Q":{X("Q",W,q,W=Y[2],q=Y[3],Y[0],Y[1]);break}case"C":{X("C",W,q,W=Y[4],q=Y[5],Y[0],Y[1],Y[2],Y[3]);break}case"Z":(W!==$||q!==G)&&X("L",W,q,$,G);break}}}function r(j,X,F){F===void 0&&(F=16);var J={x:0,y:0};i(j,function($,G,W,q,Y,ne,ge,ve,_e){switch($){case"L":X(G,W,q,Y);break;case"Q":{for(var ee=G,ue=W,B=1;B<F;B++)t(G,W,ne,ge,q,Y,B/(F-1),J),X(ee,ue,J.x,J.y),ee=J.x,ue=J.y;break}case"C":{for(var Se=G,de=W,Ee=1;Ee<F;Ee++)n(G,W,ne,ge,ve,_e,q,Y,Ee/(F-1),J),X(Se,de,J.x,J.y),Se=J.x,de=J.y;break}}})}var o="precision highp float;attribute vec2 aUV;varying vec2 vUV;void main(){vUV=aUV;gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}",a="precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){gl_FragColor=texture2D(tex,vUV);}",l=new WeakMap,c={premultipliedAlpha:!1,preserveDrawingBuffer:!0,antialias:!1,depth:!1};function h(j,X){var F=j.getContext?j.getContext("webgl",c):j,J=l.get(F);if(!J){let ge=function(Se){var de=G[Se];if(!de&&(de=G[Se]=F.getExtension(Se),!de))throw new Error(Se+" not supported");return de},ve=function(Se,de){var Ee=F.createShader(de);return F.shaderSource(Ee,Se),F.compileShader(Ee),Ee},_e=function(Se,de,Ee,ce){if(!W[Se]){var De={},be={},I=F.createProgram();F.attachShader(I,ve(de,F.VERTEX_SHADER)),F.attachShader(I,ve(Ee,F.FRAGMENT_SHADER)),F.linkProgram(I),W[Se]={program:I,transaction:function(te){F.useProgram(I),te({setUniform:function(le,pe){for(var Ae=[],Me=arguments.length-2;Me-- >0;)Ae[Me]=arguments[Me+2];var Ce=be[pe]||(be[pe]=F.getUniformLocation(I,pe));F["uniform"+le].apply(F,[Ce].concat(Ae))},setAttribute:function(le,pe,Ae,Me,Ce){var qe=De[le];qe||(qe=De[le]={buf:F.createBuffer(),loc:F.getAttribLocation(I,le),data:null}),F.bindBuffer(F.ARRAY_BUFFER,qe.buf),F.vertexAttribPointer(qe.loc,pe,F.FLOAT,!1,0,0),F.enableVertexAttribArray(qe.loc),$?F.vertexAttribDivisor(qe.loc,Me):ge("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(qe.loc,Me),Ce!==qe.data&&(F.bufferData(F.ARRAY_BUFFER,Ce,Ae),qe.data=Ce)}})}}}W[Se].transaction(ce)},ee=function(Se,de){Y++;try{F.activeTexture(F.TEXTURE0+Y);var Ee=q[Se];Ee||(Ee=q[Se]=F.createTexture(),F.bindTexture(F.TEXTURE_2D,Ee),F.texParameteri(F.TEXTURE_2D,F.TEXTURE_MIN_FILTER,F.NEAREST),F.texParameteri(F.TEXTURE_2D,F.TEXTURE_MAG_FILTER,F.NEAREST)),F.bindTexture(F.TEXTURE_2D,Ee),de(Ee,Y)}finally{Y--}},ue=function(Se,de,Ee){var ce=F.createFramebuffer();ne.push(ce),F.bindFramebuffer(F.FRAMEBUFFER,ce),F.activeTexture(F.TEXTURE0+de),F.bindTexture(F.TEXTURE_2D,Se),F.framebufferTexture2D(F.FRAMEBUFFER,F.COLOR_ATTACHMENT0,F.TEXTURE_2D,Se,0);try{Ee(ce)}finally{F.deleteFramebuffer(ce),F.bindFramebuffer(F.FRAMEBUFFER,ne[--ne.length-1]||null)}},B=function(){G={},W={},q={},Y=-1,ne.length=0};var $=typeof WebGL2RenderingContext<"u"&&F instanceof WebGL2RenderingContext,G={},W={},q={},Y=-1,ne=[];F.canvas.addEventListener("webglcontextlost",function(Se){B(),Se.preventDefault()},!1),l.set(F,J={gl:F,isWebGL2:$,getExtension:ge,withProgram:_e,withTexture:ee,withTextureFramebuffer:ue,handleContextLoss:B})}X(J)}function u(j,X,F,J,$,G,W,q){W===void 0&&(W=15),q===void 0&&(q=null),h(j,function(Y){var ne=Y.gl,ge=Y.withProgram,ve=Y.withTexture;ve("copy",function(_e,ee){ne.texImage2D(ne.TEXTURE_2D,0,ne.RGBA,$,G,0,ne.RGBA,ne.UNSIGNED_BYTE,X),ge("copy",o,a,function(ue){var B=ue.setUniform,Se=ue.setAttribute;Se("aUV",2,ne.STATIC_DRAW,0,new Float32Array([0,0,2,0,0,2])),B("1i","image",ee),ne.bindFramebuffer(ne.FRAMEBUFFER,q||null),ne.disable(ne.BLEND),ne.colorMask(W&8,W&4,W&2,W&1),ne.viewport(F,J,$,G),ne.scissor(F,J,$,G),ne.drawArrays(ne.TRIANGLES,0,3)})})})}function d(j,X,F){var J=j.width,$=j.height;h(j,function(G){var W=G.gl,q=new Uint8Array(J*$*4);W.readPixels(0,0,J,$,W.RGBA,W.UNSIGNED_BYTE,q),j.width=X,j.height=F,u(W,q,0,0,J,$)})}var f=Object.freeze({__proto__:null,withWebGLContext:h,renderImageData:u,resizeWebGLCanvasWithoutClearing:d});function p(j,X,F,J,$,G){G===void 0&&(G=1);var W=new Uint8Array(j*X),q=J[2]-J[0],Y=J[3]-J[1],ne=[];r(F,function(Se,de,Ee,ce){ne.push({x1:Se,y1:de,x2:Ee,y2:ce,minX:Math.min(Se,Ee),minY:Math.min(de,ce),maxX:Math.max(Se,Ee),maxY:Math.max(de,ce)})}),ne.sort(function(Se,de){return Se.maxX-de.maxX});for(var ge=0;ge<j;ge++)for(var ve=0;ve<X;ve++){var _e=ue(J[0]+q*(ge+.5)/j,J[1]+Y*(ve+.5)/X),ee=Math.pow(1-Math.abs(_e)/$,G)/2;_e<0&&(ee=1-ee),ee=Math.max(0,Math.min(255,Math.round(ee*255))),W[ve*j+ge]=ee}return W;function ue(Se,de){for(var Ee=1/0,ce=1/0,De=ne.length;De--;){var be=ne[De];if(be.maxX+ce<=Se)break;if(Se+ce>be.minX&&de-ce<be.maxY&&de+ce>be.minY){var I=m(Se,de,be.x1,be.y1,be.x2,be.y2);I<Ee&&(Ee=I,ce=Math.sqrt(Ee))}}return B(Se,de)&&(ce=-ce),ce}function B(Se,de){for(var Ee=0,ce=ne.length;ce--;){var De=ne[ce];if(De.maxX<=Se)break;var be=De.y1>de!=De.y2>de&&Se<(De.x2-De.x1)*(de-De.y1)/(De.y2-De.y1)+De.x1;be&&(Ee+=De.y1<De.y2?1:-1)}return Ee!==0}}function v(j,X,F,J,$,G,W,q,Y,ne){G===void 0&&(G=1),q===void 0&&(q=0),Y===void 0&&(Y=0),ne===void 0&&(ne=0),g(j,X,F,J,$,G,W,null,q,Y,ne)}function g(j,X,F,J,$,G,W,q,Y,ne,ge){G===void 0&&(G=1),Y===void 0&&(Y=0),ne===void 0&&(ne=0),ge===void 0&&(ge=0);for(var ve=p(j,X,F,J,$,G),_e=new Uint8Array(ve.length*4),ee=0;ee<ve.length;ee++)_e[ee*4+ge]=ve[ee];u(W,_e,Y,ne,j,X,1<<3-ge,q)}function m(j,X,F,J,$,G){var W=$-F,q=G-J,Y=W*W+q*q,ne=Y?Math.max(0,Math.min(1,((j-F)*W+(X-J)*q)/Y)):0,ge=j-(F+ne*W),ve=X-(J+ne*q);return ge*ge+ve*ve}var x=Object.freeze({__proto__:null,generate:p,generateIntoCanvas:v,generateIntoFramebuffer:g}),y="precision highp float;uniform vec4 uGlyphBounds;attribute vec2 aUV;attribute vec4 aLineSegment;varying vec4 vLineSegment;varying vec2 vGlyphXY;void main(){vLineSegment=aLineSegment;vGlyphXY=mix(uGlyphBounds.xy,uGlyphBounds.zw,aUV);gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}",_="precision highp float;uniform vec4 uGlyphBounds;uniform float uMaxDistance;uniform float uExponent;varying vec4 vLineSegment;varying vec2 vGlyphXY;float absDistToSegment(vec2 point,vec2 lineA,vec2 lineB){vec2 lineDir=lineB-lineA;float lenSq=dot(lineDir,lineDir);float t=lenSq==0.0 ? 0.0 : clamp(dot(point-lineA,lineDir)/lenSq,0.0,1.0);vec2 linePt=lineA+t*lineDir;return distance(point,linePt);}void main(){vec4 seg=vLineSegment;vec2 p=vGlyphXY;float dist=absDistToSegment(p,seg.xy,seg.zw);float val=pow(1.0-clamp(dist/uMaxDistance,0.0,1.0),uExponent)*0.5;bool crossing=(seg.y>p.y!=seg.w>p.y)&&(p.x<(seg.z-seg.x)*(p.y-seg.y)/(seg.w-seg.y)+seg.x);bool crossingUp=crossing&&vLineSegment.y<vLineSegment.w;gl_FragColor=vec4(crossingUp ? 1.0/255.0 : 0.0,crossing&&!crossingUp ? 1.0/255.0 : 0.0,0.0,val);}",E="precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){vec4 color=texture2D(tex,vUV);bool inside=color.r!=color.g;float val=inside ? 1.0-color.a : color.a;gl_FragColor=vec4(val);}",w=new Float32Array([0,0,2,0,0,2]),M=null,T=!1,S={},b=new WeakMap;function D(j){if(!T&&!K(j))throw new Error("WebGL generation not supported")}function P(j,X,F,J,$,G,W){if(G===void 0&&(G=1),W===void 0&&(W=null),!W&&(W=M,!W)){var q=typeof OffscreenCanvas=="function"?new OffscreenCanvas(1,1):typeof document<"u"?document.createElement("canvas"):null;if(!q)throw new Error("OffscreenCanvas or DOM canvas not supported");W=M=q.getContext("webgl",{depth:!1})}D(W);var Y=new Uint8Array(j*X*4);h(W,function(_e){var ee=_e.gl,ue=_e.withTexture,B=_e.withTextureFramebuffer;ue("readable",function(Se,de){ee.texImage2D(ee.TEXTURE_2D,0,ee.RGBA,j,X,0,ee.RGBA,ee.UNSIGNED_BYTE,null),B(Se,de,function(Ee){V(j,X,F,J,$,G,ee,Ee,0,0,0),ee.readPixels(0,0,j,X,ee.RGBA,ee.UNSIGNED_BYTE,Y)})})});for(var ne=new Uint8Array(j*X),ge=0,ve=0;ge<Y.length;ge+=4)ne[ve++]=Y[ge];return ne}function k(j,X,F,J,$,G,W,q,Y,ne){G===void 0&&(G=1),q===void 0&&(q=0),Y===void 0&&(Y=0),ne===void 0&&(ne=0),V(j,X,F,J,$,G,W,null,q,Y,ne)}function V(j,X,F,J,$,G,W,q,Y,ne,ge){G===void 0&&(G=1),Y===void 0&&(Y=0),ne===void 0&&(ne=0),ge===void 0&&(ge=0),D(W);var ve=[];r(F,function(_e,ee,ue,B){ve.push(_e,ee,ue,B)}),ve=new Float32Array(ve),h(W,function(_e){var ee=_e.gl,ue=_e.isWebGL2,B=_e.getExtension,Se=_e.withProgram,de=_e.withTexture,Ee=_e.withTextureFramebuffer,ce=_e.handleContextLoss;if(de("rawDistances",function(De,be){(j!==De._lastWidth||X!==De._lastHeight)&&ee.texImage2D(ee.TEXTURE_2D,0,ee.RGBA,De._lastWidth=j,De._lastHeight=X,0,ee.RGBA,ee.UNSIGNED_BYTE,null),Se("main",y,_,function(I){var R=I.setAttribute,te=I.setUniform,ae=!ue&&B("ANGLE_instanced_arrays"),le=!ue&&B("EXT_blend_minmax");R("aUV",2,ee.STATIC_DRAW,0,w),R("aLineSegment",4,ee.DYNAMIC_DRAW,1,ve),te.apply(void 0,["4f","uGlyphBounds"].concat(J)),te("1f","uMaxDistance",$),te("1f","uExponent",G),Ee(De,be,function(pe){ee.enable(ee.BLEND),ee.colorMask(!0,!0,!0,!0),ee.viewport(0,0,j,X),ee.scissor(0,0,j,X),ee.blendFunc(ee.ONE,ee.ONE),ee.blendEquationSeparate(ee.FUNC_ADD,ue?ee.MAX:le.MAX_EXT),ee.clear(ee.COLOR_BUFFER_BIT),ue?ee.drawArraysInstanced(ee.TRIANGLES,0,3,ve.length/4):ae.drawArraysInstancedANGLE(ee.TRIANGLES,0,3,ve.length/4)})}),Se("post",o,E,function(I){I.setAttribute("aUV",2,ee.STATIC_DRAW,0,w),I.setUniform("1i","tex",be),ee.bindFramebuffer(ee.FRAMEBUFFER,q),ee.disable(ee.BLEND),ee.colorMask(ge===0,ge===1,ge===2,ge===3),ee.viewport(Y,ne,j,X),ee.scissor(Y,ne,j,X),ee.drawArrays(ee.TRIANGLES,0,3)})}),ee.isContextLost())throw ce(),new Error("webgl context lost")})}function K(j){var X=!j||j===M?S:j.canvas||j,F=b.get(X);if(F===void 0){T=!0;var J=null;try{var $=[97,106,97,61,99,137,118,80,80,118,137,99,61,97,106,97],G=P(4,4,"M8,8L16,8L24,24L16,24Z",[0,0,32,32],24,1,j);F=G&&$.length===G.length&&G.every(function(W,q){return W===$[q]}),F||(J="bad trial run results",console.info($,G))}catch(W){F=!1,J=W.message}J&&console.warn("WebGL SDF generation not supported:",J),T=!1,b.set(X,F)}return F}var N=Object.freeze({__proto__:null,generate:P,generateIntoCanvas:k,generateIntoFramebuffer:V,isSupported:K});function Q(j,X,F,J,$,G){$===void 0&&($=Math.max(J[2]-J[0],J[3]-J[1])/2),G===void 0&&(G=1);try{return P.apply(N,arguments)}catch(W){return console.info("WebGL SDF generation failed, falling back to JS",W),p.apply(x,arguments)}}function Z(j,X,F,J,$,G,W,q,Y,ne){$===void 0&&($=Math.max(J[2]-J[0],J[3]-J[1])/2),G===void 0&&(G=1),q===void 0&&(q=0),Y===void 0&&(Y=0),ne===void 0&&(ne=0);try{return k.apply(N,arguments)}catch(ge){return console.info("WebGL SDF generation failed, falling back to JS",ge),v.apply(x,arguments)}}return e.forEachPathCommand=i,e.generate=Q,e.generateIntoCanvas=Z,e.javascript=x,e.pathToLineSegments=r,e.webgl=N,e.webglUtils=f,Object.defineProperty(e,"__esModule",{value:!0}),e}({});return s}function iC(){var s=function(e){var t={R:"13k,1a,2,3,3,2+1j,ch+16,a+1,5+2,2+n,5,a,4,6+16,4+3,h+1b,4mo,179q,2+9,2+11,2i9+7y,2+68,4,3+4,5+13,4+3,2+4k,3+29,8+cf,1t+7z,w+17,3+3m,1t+3z,16o1+5r,8+30,8+mc,29+1r,29+4v,75+73",EN:"1c+9,3d+1,6,187+9,513,4+5,7+9,sf+j,175h+9,qw+q,161f+1d,4xt+a,25i+9",ES:"17,2,6dp+1,f+1,av,16vr,mx+1,4o,2",ET:"z+2,3h+3,b+1,ym,3e+1,2o,p4+1,8,6u,7c,g6,1wc,1n9+4,30+1b,2n,6d,qhx+1,h0m,a+1,49+2,63+1,4+1,6bb+3,12jj",AN:"16o+5,2j+9,2+1,35,ed,1ff2+9,87+u",CS:"18,2+1,b,2u,12k,55v,l,17v0,2,3,53,2+1,b",B:"a,3,f+2,2v,690",S:"9,2,k",WS:"c,k,4f4,1vk+a,u,1j,335",ON:"x+1,4+4,h+5,r+5,r+3,z,5+3,2+1,2+1,5,2+2,3+4,o,w,ci+1,8+d,3+d,6+8,2+g,39+1,9,6+1,2,33,b8,3+1,3c+1,7+1,5r,b,7h+3,sa+5,2,3i+6,jg+3,ur+9,2v,ij+1,9g+9,7+a,8m,4+1,49+x,14u,2+2,c+2,e+2,e+2,e+1,i+n,e+e,2+p,u+2,e+2,36+1,2+3,2+1,b,2+2,6+5,2,2,2,h+1,5+4,6+3,3+f,16+2,5+3l,3+81,1y+p,2+40,q+a,m+13,2r+ch,2+9e,75+hf,3+v,2+2w,6e+5,f+6,75+2a,1a+p,2+2g,d+5x,r+b,6+3,4+o,g,6+1,6+2,2k+1,4,2j,5h+z,1m+1,1e+f,t+2,1f+e,d+3,4o+3,2s+1,w,535+1r,h3l+1i,93+2,2s,b+1,3l+x,2v,4g+3,21+3,kz+1,g5v+1,5a,j+9,n+v,2,3,2+8,2+1,3+2,2,3,46+1,4+4,h+5,r+5,r+a,3h+2,4+6,b+4,78,1r+24,4+c,4,1hb,ey+6,103+j,16j+c,1ux+7,5+g,fsh,jdq+1t,4,57+2e,p1,1m,1m,1m,1m,4kt+1,7j+17,5+2r,d+e,3+e,2+e,2+10,m+4,w,1n+5,1q,4z+5,4b+rb,9+c,4+c,4+37,d+2g,8+b,l+b,5+1j,9+9,7+13,9+t,3+1,27+3c,2+29,2+3q,d+d,3+4,4+2,6+6,a+o,8+6,a+2,e+6,16+42,2+1i",BN:"0+8,6+d,2s+5,2+p,e,4m9,1kt+2,2b+5,5+5,17q9+v,7k,6p+8,6+1,119d+3,440+7,96s+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+75,6p+2rz,1ben+1,1ekf+1,1ekf+1",NSM:"lc+33,7o+6,7c+18,2,2+1,2+1,2,21+a,1d+k,h,2u+6,3+5,3+1,2+3,10,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,g+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+g,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,k1+w,2db+2,3y,2p+v,ff+3,30+1,n9x+3,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,r2,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+5,3+1,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2d+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,f0c+4,1o+6,t5,1s+3,2a,f5l+1,43t+2,i+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,gzhy+6n",AL:"16w,3,2,e+1b,z+2,2+2s,g+1,8+1,b+m,2+t,s+2i,c+e,4h+f,1d+1e,1bwe+dp,3+3z,x+c,2+1,35+3y,2rm+z,5+7,b+5,dt+l,c+u,17nl+27,1t+27,4x+6n,3+d",LRO:"6ct",RLO:"6cu",LRE:"6cq",RLE:"6cr",PDF:"6cs",LRI:"6ee",RLI:"6ef",FSI:"6eg",PDI:"6eh"},n={},i={};n.L=1,i[1]="L",Object.keys(t).forEach(function(ce,De){n[ce]=1<<De+1,i[n[ce]]=ce}),Object.freeze(n);var r=n.LRI|n.RLI|n.FSI,o=n.L|n.R|n.AL,a=n.B|n.S|n.WS|n.ON|n.FSI|n.LRI|n.RLI|n.PDI,l=n.BN|n.RLE|n.LRE|n.RLO|n.LRO|n.PDF,c=n.S|n.WS|n.B|r|n.PDI|l,h=null;function u(){if(!h){h=new Map;var ce=function(be){if(t.hasOwnProperty(be)){var I=0;t[be].split(",").forEach(function(R){var te=R.split("+"),ae=te[0],le=te[1];ae=parseInt(ae,36),le=le?parseInt(le,36):0,h.set(I+=ae,n[be]);for(var pe=0;pe<le;pe++)h.set(++I,n[be])})}};for(var De in t)ce(De)}}function d(ce){return u(),h.get(ce.codePointAt(0))||n.L}function f(ce){return i[d(ce)]}var p={pairs:"14>1,1e>2,u>2,2wt>1,1>1,1ge>1,1wp>1,1j>1,f>1,hm>1,1>1,u>1,u6>1,1>1,+5,28>1,w>1,1>1,+3,b8>1,1>1,+3,1>3,-1>-1,3>1,1>1,+2,1s>1,1>1,x>1,th>1,1>1,+2,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,4q>1,1e>2,u>2,2>1,+1",canonical:"6f1>-6dx,6dy>-6dx,6ec>-6ed,6ee>-6ed,6ww>2jj,-2ji>2jj,14r4>-1e7l,1e7m>-1e7l,1e7m>-1e5c,1e5d>-1e5b,1e5c>-14qx,14qy>-14qx,14vn>-1ecg,1ech>-1ecg,1edu>-1ecg,1eci>-1ecg,1eda>-1ecg,1eci>-1ecg,1eci>-168q,168r>-168q,168s>-14ye,14yf>-14ye"};function v(ce,De){var be=36,I=0,R=new Map,te=De&&new Map,ae;return ce.split(",").forEach(function le(pe){if(pe.indexOf("+")!==-1)for(var Ae=+pe;Ae--;)le(ae);else{ae=pe;var Me=pe.split(">"),Ce=Me[0],qe=Me[1];Ce=String.fromCodePoint(I+=parseInt(Ce,be)),qe=String.fromCodePoint(I+=parseInt(qe,be)),R.set(Ce,qe),De&&te.set(qe,Ce)}}),{map:R,reverseMap:te}}var g,m,x;function y(){if(!g){var ce=v(p.pairs,!0),De=ce.map,be=ce.reverseMap;g=De,m=be,x=v(p.canonical,!1).map}}function _(ce){return y(),g.get(ce)||null}function E(ce){return y(),m.get(ce)||null}function w(ce){return y(),x.get(ce)||null}var M=n.L,T=n.R,S=n.EN,b=n.ES,D=n.ET,P=n.AN,k=n.CS,V=n.B,K=n.S,N=n.ON,Q=n.BN,Z=n.NSM,j=n.AL,X=n.LRO,F=n.RLO,J=n.LRE,$=n.RLE,G=n.PDF,W=n.LRI,q=n.RLI,Y=n.FSI,ne=n.PDI;function ge(ce,De){for(var be=125,I=new Uint32Array(ce.length),R=0;R<ce.length;R++)I[R]=d(ce[R]);var te=new Map;function ae(fi,Zi){var pi=I[fi];I[fi]=Zi,te.set(pi,te.get(pi)-1),pi&a&&te.set(a,te.get(a)-1),te.set(Zi,(te.get(Zi)||0)+1),Zi&a&&te.set(a,(te.get(a)||0)+1)}for(var le=new Uint8Array(ce.length),pe=new Map,Ae=[],Me=null,Ce=0;Ce<ce.length;Ce++)Me||Ae.push(Me={start:Ce,end:ce.length-1,level:De==="rtl"?1:De==="ltr"?0:gp(Ce,!1)}),I[Ce]&V&&(Me.end=Ce,Me=null);for(var qe=$|J|F|X|r|ne|G|V,Re=function(fi){return fi+(fi&1?1:2)},ze=function(fi){return fi+(fi&1?2:1)},Be=0;Be<Ae.length;Be++){Me=Ae[Be];var He=[{_level:Me.level,_override:0,_isolate:0}],Pe=void 0,ut=0,tt=0,wt=0;te.clear();for(var ie=Me.start;ie<=Me.end;ie++){var Te=I[ie];if(Pe=He[He.length-1],te.set(Te,(te.get(Te)||0)+1),Te&a&&te.set(a,(te.get(a)||0)+1),Te&qe)if(Te&($|J)){le[ie]=Pe._level;var he=(Te===$?ze:Re)(Pe._level);he<=be&&!ut&&!tt?He.push({_level:he,_override:0,_isolate:0}):ut||tt++}else if(Te&(F|X)){le[ie]=Pe._level;var Ie=(Te===F?ze:Re)(Pe._level);Ie<=be&&!ut&&!tt?He.push({_level:Ie,_override:Te&F?T:M,_isolate:0}):ut||tt++}else if(Te&r){Te&Y&&(Te=gp(ie+1,!0)===1?q:W),le[ie]=Pe._level,Pe._override&&ae(ie,Pe._override);var Oe=(Te===q?ze:Re)(Pe._level);Oe<=be&&ut===0&&tt===0?(wt++,He.push({_level:Oe,_override:0,_isolate:1,_isolInitIndex:ie})):ut++}else if(Te&ne){if(ut>0)ut--;else if(wt>0){for(tt=0;!He[He.length-1]._isolate;)He.pop();var Le=He[He.length-1]._isolInitIndex;Le!=null&&(pe.set(Le,ie),pe.set(ie,Le)),He.pop(),wt--}Pe=He[He.length-1],le[ie]=Pe._level,Pe._override&&ae(ie,Pe._override)}else Te&G?(ut===0&&(tt>0?tt--:!Pe._isolate&&He.length>1&&(He.pop(),Pe=He[He.length-1])),le[ie]=Pe._level):Te&V&&(le[ie]=Me.level);else le[ie]=Pe._level,Pe._override&&Te!==Q&&ae(ie,Pe._override)}for(var ot=[],xt=null,ct=Me.start;ct<=Me.end;ct++){var rt=I[ct];if(!(rt&l)){var Yt=le[ct],Jt=rt&r,sn=rt===ne;xt&&Yt===xt._level?(xt._end=ct,xt._endsWithIsolInit=Jt):ot.push(xt={_start:ct,_end:ct,_level:Yt,_startsWithPDI:sn,_endsWithIsolInit:Jt})}}for(var jn=[],In=0;In<ot.length;In++){var si=ot[In];if(!si._startsWithPDI||si._startsWithPDI&&!pe.has(si._start)){for(var Ai=[xt=si],Ci=void 0;xt&&xt._endsWithIsolInit&&(Ci=pe.get(xt._end))!=null;)for(var Zn=In+1;Zn<ot.length;Zn++)if(ot[Zn]._start===Ci){Ai.push(xt=ot[Zn]);break}for(var _n=[],di=0;di<Ai.length;di++)for(var cs=Ai[di],Vr=cs._start;Vr<=cs._end;Vr++)_n.push(Vr);for(var Ko=le[_n[0]],uo=Me.level,Hr=_n[0]-1;Hr>=0;Hr--)if(!(I[Hr]&l)){uo=le[Hr];break}var hs=_n[_n.length-1],Qo=le[hs],fo=Me.level;if(!(I[hs]&r)){for(var O=hs+1;O<=Me.end;O++)if(!(I[O]&l)){fo=le[O];break}}jn.push({_seqIndices:_n,_sosType:Math.max(uo,Ko)%2?T:M,_eosType:Math.max(fo,Qo)%2?T:M})}}for(var se=0;se<jn.length;se++){var fe=jn[se],re=fe._seqIndices,oe=fe._sosType,Fe=fe._eosType,We=le[re[0]]&1?T:M;if(te.get(Z))for(var Qe=0;Qe<re.length;Qe++){var et=re[Qe];if(I[et]&Z){for(var yt=oe,mt=Qe-1;mt>=0;mt--)if(!(I[re[mt]]&l)){yt=I[re[mt]];break}ae(et,yt&(r|ne)?N:yt)}}if(te.get(S))for(var ht=0;ht<re.length;ht++){var At=re[ht];if(I[At]&S)for(var Ft=ht-1;Ft>=-1;Ft--){var rn=Ft===-1?oe:I[re[Ft]];if(rn&o){rn===j&&ae(At,P);break}}}if(te.get(j))for(var Kt=0;Kt<re.length;Kt++){var Ut=re[Kt];I[Ut]&j&&ae(Ut,T)}if(te.get(b)||te.get(k))for(var dt=1;dt<re.length-1;dt++){var cn=re[dt];if(I[cn]&(b|k)){for(var It=0,Dn=0,qt=dt-1;qt>=0&&(It=I[re[qt]],!!(It&l));qt--);for(var yn=dt+1;yn<re.length&&(Dn=I[re[yn]],!!(Dn&l));yn++);It===Dn&&(I[cn]===b?It===S:It&(S|P))&&ae(cn,It)}}if(te.get(S))for(var Ln=0;Ln<re.length;Ln++){var jt=re[Ln];if(I[jt]&S){for(var wn=Ln-1;wn>=0&&I[re[wn]]&(D|l);wn--)ae(re[wn],S);for(Ln++;Ln<re.length&&I[re[Ln]]&(D|l|S);Ln++)I[re[Ln]]!==S&&ae(re[Ln],S)}}if(te.get(D)||te.get(b)||te.get(k))for(var mn=0;mn<re.length;mn++){var hn=re[mn];if(I[hn]&(D|b|k)){ae(hn,N);for(var on=mn-1;on>=0&&I[re[on]]&l;on--)ae(re[on],N);for(var qi=mn+1;qi<re.length&&I[re[qi]]&l;qi++)ae(re[qi],N)}}if(te.get(S))for(var Ri=0,gt=oe;Ri<re.length;Ri++){var us=re[Ri],C=I[us];C&S?gt===M&&ae(us,M):C&o&&(gt=C)}if(te.get(a)){var A=T|S|P,z=A|M,U=[];{for(var H=[],me=0;me<re.length;me++)if(I[re[me]]&a){var we=ce[re[me]],$e=void 0;if(_(we)!==null)if(H.length<63)H.push({char:we,seqIndex:me});else break;else if(($e=E(we))!==null)for(var Ve=H.length-1;Ve>=0;Ve--){var Je=H[Ve].char;if(Je===$e||Je===E(w(we))||_(w(Je))===we){U.push([H[Ve].seqIndex,me]),H.length=Ve;break}}}U.sort(function(fi,Zi){return fi[0]-Zi[0]})}for(var lt=0;lt<U.length;lt++){for(var Ue=U[lt],at=Ue[0],nt=Ue[1],ft=!1,it=0,en=at+1;en<nt;en++){var Vt=re[en];if(I[Vt]&z){ft=!0;var zt=I[Vt]&A?T:M;if(zt===We){it=zt;break}}}if(ft&&!it){it=oe;for(var kt=at-1;kt>=0;kt--){var Bi=re[kt];if(I[Bi]&z){var zn=I[Bi]&A?T:M;zn!==We?it=zn:it=We;break}}}if(it){if(I[re[at]]=I[re[nt]]=it,it!==We){for(var zi=at+1;zi<re.length;zi++)if(!(I[re[zi]]&l)){d(ce[re[zi]])&Z&&(I[re[zi]]=it);break}}if(it!==We){for(var ds=nt+1;ds<re.length;ds++)if(!(I[re[ds]]&l)){d(ce[re[ds]])&Z&&(I[re[ds]]=it);break}}}}for(var ji=0;ji<re.length;ji++)if(I[re[ji]]&a){for(var pp=ji,du=ji,fu=oe,$o=ji-1;$o>=0;$o--)if(I[re[$o]]&l)pp=$o;else{fu=I[re[$o]]&A?T:M;break}for(var mp=Fe,ea=ji+1;ea<re.length;ea++)if(I[re[ea]]&(a|l))du=ea;else{mp=I[re[ea]]&A?T:M;break}for(var pu=pp;pu<=du;pu++)I[re[pu]]=fu===mp?fu:We;ji=du}}}for(var Pi=Me.start;Pi<=Me.end;Pi++){var V_=le[Pi],vl=I[Pi];if(V_&1?vl&(M|S|P)&&le[Pi]++:vl&T?le[Pi]++:vl&(P|S)&&(le[Pi]+=2),vl&l&&(le[Pi]=Pi===0?Me.level:le[Pi-1]),Pi===Me.end||d(ce[Pi])&(K|V))for(var _l=Pi;_l>=0&&d(ce[_l])&c;_l--)le[_l]=Me.level}}return{levels:le,paragraphs:Ae};function gp(fi,Zi){for(var pi=fi;pi<ce.length;pi++){var Wr=I[pi];if(Wr&(T|j))return 1;if(Wr&(V|M)||Zi&&Wr===ne)return 0;if(Wr&r){var vp=H_(pi);pi=vp===-1?ce.length:vp}}return 0}function H_(fi){for(var Zi=1,pi=fi+1;pi<ce.length;pi++){var Wr=I[pi];if(Wr&V)break;if(Wr&ne){if(--Zi===0)return pi}else Wr&r&&Zi++}return-1}}var ve="14>1,j>2,t>2,u>2,1a>g,2v3>1,1>1,1ge>1,1wd>1,b>1,1j>1,f>1,ai>3,-2>3,+1,8>1k0,-1jq>1y7,-1y6>1hf,-1he>1h6,-1h5>1ha,-1h8>1qi,-1pu>1,6>3u,-3s>7,6>1,1>1,f>1,1>1,+2,3>1,1>1,+13,4>1,1>1,6>1eo,-1ee>1,3>1mg,-1me>1mk,-1mj>1mi,-1mg>1mi,-1md>1,1>1,+2,1>10k,-103>1,1>1,4>1,5>1,1>1,+10,3>1,1>8,-7>8,+1,-6>7,+1,a>1,1>1,u>1,u6>1,1>1,+5,26>1,1>1,2>1,2>2,8>1,7>1,4>1,1>1,+5,b8>1,1>1,+3,1>3,-2>1,2>1,1>1,+2,c>1,3>1,1>1,+2,h>1,3>1,a>1,1>1,2>1,3>1,1>1,d>1,f>1,3>1,1a>1,1>1,6>1,7>1,13>1,k>1,1>1,+19,4>1,1>1,+2,2>1,1>1,+18,m>1,a>1,1>1,lk>1,1>1,4>1,2>1,f>1,3>1,1>1,+3,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,6>1,4j>1,j>2,t>2,u>2,2>1,+1",_e;function ee(){if(!_e){var ce=v(ve,!0),De=ce.map,be=ce.reverseMap;be.forEach(function(I,R){De.set(R,I)}),_e=De}}function ue(ce){return ee(),_e.get(ce)||null}function B(ce,De,be,I){var R=ce.length;be=Math.max(0,be==null?0:+be),I=Math.min(R-1,I==null?R-1:+I);for(var te=new Map,ae=be;ae<=I;ae++)if(De[ae]&1){var le=ue(ce[ae]);le!==null&&te.set(ae,le)}return te}function Se(ce,De,be,I){var R=ce.length;be=Math.max(0,be==null?0:+be),I=Math.min(R-1,I==null?R-1:+I);var te=[];return De.paragraphs.forEach(function(ae){var le=Math.max(be,ae.start),pe=Math.min(I,ae.end);if(le<pe){for(var Ae=De.levels.slice(le,pe+1),Me=pe;Me>=le&&d(ce[Me])&c;Me--)Ae[Me]=ae.level;for(var Ce=ae.level,qe=1/0,Re=0;Re<Ae.length;Re++){var ze=Ae[Re];ze>Ce&&(Ce=ze),ze<qe&&(qe=ze|1)}for(var Be=Ce;Be>=qe;Be--)for(var He=0;He<Ae.length;He++)if(Ae[He]>=Be){for(var Pe=He;He+1<Ae.length&&Ae[He+1]>=Be;)He++;He>Pe&&te.push([Pe+le,He+le])}}}),te}function de(ce,De,be,I){var R=Ee(ce,De,be,I),te=[].concat(ce);return R.forEach(function(ae,le){te[le]=(De.levels[ae]&1?ue(ce[ae]):null)||ce[ae]}),te.join("")}function Ee(ce,De,be,I){for(var R=Se(ce,De,be,I),te=[],ae=0;ae<ce.length;ae++)te[ae]=ae;return R.forEach(function(le){for(var pe=le[0],Ae=le[1],Me=te.slice(pe,Ae+1),Ce=Me.length;Ce--;)te[Ae-Ce]=Me[Ce]}),te}return e.closingToOpeningBracket=E,e.getBidiCharType=d,e.getBidiCharTypeName=f,e.getCanonicalBracket=w,e.getEmbeddingLevels=ge,e.getMirroredCharacter=ue,e.getMirroredCharactersMap=B,e.getReorderSegments=Se,e.getReorderedIndices=Ee,e.getReorderedString=de,e.openingToClosingBracket=_,Object.defineProperty(e,"__esModule",{value:!0}),e}({});return s}new Mn;new Ge;typeof window<"u"&&document.createElement("div");function rC(){var s=Object.create(null);function e(i,r){var o=i.id,a=i.name,l=i.dependencies;l===void 0&&(l=[]);var c=i.init;c===void 0&&(c=function(){});var h=i.getTransferables;if(h===void 0&&(h=null),!s[o])try{l=l.map(function(d){return d&&d.isWorkerModule&&(e(d,function(f){if(f instanceof Error)throw f}),d=s[d.id].value),d}),c=n("<"+a+">.init",c),h&&(h=n("<"+a+">.getTransferables",h));var u=null;typeof c=="function"?u=c.apply(void 0,l):console.error("worker module init function failed to rehydrate"),s[o]={id:o,value:u,getTransferables:h},r(u)}catch(d){d&&d.noLog||console.error(d),r(d)}}function t(i,r){var o,a=i.id,l=i.args;(!s[a]||typeof s[a].value!="function")&&r(new Error("Worker module "+a+": not found or its 'init' did not return a function"));try{var c=(o=s[a]).value.apply(o,l);c&&typeof c.then=="function"?c.then(h,function(u){return r(u instanceof Error?u:new Error(""+u))}):h(c)}catch(u){r(u)}function h(u){try{var d=s[a].getTransferables&&s[a].getTransferables(u);(!d||!Array.isArray(d)||!d.length)&&(d=void 0),r(u,d)}catch(f){console.error(f),r(f)}}}function n(i,r){var o=void 0;self.troikaDefine=function(l){return o=l};var a=URL.createObjectURL(new Blob(["/** "+i.replace(/\*/g,"")+` **/

troikaDefine(
`+r+`
)`],{type:"application/javascript"}));try{importScripts(a)}catch(l){console.error(l)}return URL.revokeObjectURL(a),delete self.troikaDefine,o}self.addEventListener("message",function(i){var r=i.data,o=r.messageId,a=r.action,l=r.data;try{a==="registerModule"&&e(l,function(c){c instanceof Error?postMessage({messageId:o,success:!1,error:c.message}):postMessage({messageId:o,success:!0,result:{isCallable:typeof c=="function"}})}),a==="callModule"&&t(l,function(c,h){c instanceof Error?postMessage({messageId:o,success:!1,error:c.message}):postMessage({messageId:o,success:!0,result:c},h||void 0)})}catch(c){postMessage({messageId:o,success:!1,error:c.stack})}})}function sC(s){var e=function(){for(var t=[],n=arguments.length;n--;)t[n]=arguments[n];return e._getInitResult().then(function(i){if(typeof i=="function")return i.apply(void 0,t);throw new Error("Worker module function was called but `init` did not return a callable function")})};return e._getInitResult=function(){var t=s.dependencies,n=s.init;t=Array.isArray(t)?t.map(function(r){return r&&r._getInitResult?r._getInitResult():r}):[];var i=Promise.all(t).then(function(r){return n.apply(null,r)});return e._getInitResult=function(){return i},i},e}var S_=function(){var s=!1;if(typeof window<"u"&&typeof window.document<"u")try{var e=new Worker(URL.createObjectURL(new Blob([""],{type:"application/javascript"})));e.terminate(),s=!0}catch(t){console.log("Troika createWorkerModule: web workers not allowed; falling back to main thread execution. Cause: ["+t.message+"]")}return S_=function(){return s},s},oC=0,aC=0,bd=!1,Na=Object.create(null),Oa=Object.create(null),jd=Object.create(null);function Jo(s){if((!s||typeof s.init!="function")&&!bd)throw new Error("requires `options.init` function");var e=s.dependencies,t=s.init,n=s.getTransferables,i=s.workerId;if(!S_())return sC(s);i==null&&(i="#default");var r="workerModule"+ ++oC,o=s.name||r,a=null;e=e&&e.map(function(c){return typeof c=="function"&&!c.workerModuleData&&(bd=!0,c=Jo({workerId:i,name:"<"+o+"> function dependency: "+c.name,init:`function(){return (
`+Rc(c)+`
)}`}),bd=!1),c&&c.workerModuleData&&(c=c.workerModuleData),c});function l(){for(var c=[],h=arguments.length;h--;)c[h]=arguments[h];if(!a){a=Ug(i,"registerModule",l.workerModuleData);var u=function(){a=null,Oa[i].delete(u)};(Oa[i]||(Oa[i]=new Set)).add(u)}return a.then(function(d){var f=d.isCallable;if(f)return Ug(i,"callModule",{id:r,args:c});throw new Error("Worker module function was called but `init` did not return a callable function")})}return l.workerModuleData={isWorkerModule:!0,id:r,name:o,dependencies:e,init:Rc(t),getTransferables:n&&Rc(n)},l}function lC(s){Oa[s]&&Oa[s].forEach(function(e){e()}),Na[s]&&(Na[s].terminate(),delete Na[s])}function Rc(s){var e=s.toString();return!/^function/.test(e)&&/^\w+\s*\(/.test(e)&&(e="function "+e),e}function cC(s){var e=Na[s];if(!e){var t=Rc(rC);e=Na[s]=new Worker(URL.createObjectURL(new Blob(["/** Worker Module Bootstrap: "+s.replace(/\*/g,"")+` **/

;(`+t+")()"],{type:"application/javascript"}))),e.onmessage=function(n){var i=n.data,r=i.messageId,o=jd[r];if(!o)throw new Error("WorkerModule response with empty or unknown messageId");delete jd[r],o(i)}}return e}function Ug(s,e,t){return new Promise(function(n,i){var r=++aC;jd[r]=function(o){o.success?n(o.result):i(new Error("Error in worker "+e+" call: "+o.error))},cC(s).postMessage({messageId:r,action:e,data:t})})}const M_=/\bvoid\s+main\s*\(\s*\)\s*{/g;function Zd(s){const e=/^[ \t]*#include +<([\w\d./]+)>/gm;function t(n,i){let r=vt[i];return r?Zd(r):n}return s.replace(e,t)}const Hn=[];for(let s=0;s<256;s++)Hn[s]=(s<16?"0":"")+s.toString(16);function hC(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Hn[s&255]+Hn[s>>8&255]+Hn[s>>16&255]+Hn[s>>24&255]+"-"+Hn[e&255]+Hn[e>>8&255]+"-"+Hn[e>>16&15|64]+Hn[e>>24&255]+"-"+Hn[t&63|128]+Hn[t>>8&255]+"-"+Hn[t>>16&255]+Hn[t>>24&255]+Hn[n&255]+Hn[n>>8&255]+Hn[n>>16&255]+Hn[n>>24&255]).toUpperCase()}const Is=Object.assign||function(){let s=arguments[0];for(let e=1,t=arguments.length;e<t;e++){let n=arguments[e];if(n)for(let i in n)Object.prototype.hasOwnProperty.call(n,i)&&(s[i]=n[i])}return s},uC=Date.now(),Ng=new WeakMap,Og=new Map;let dC=1e10;function Jd(s,e){const t=gC(e);let n=Ng.get(s);if(n||Ng.set(s,n=Object.create(null)),n[t])return new n[t];const i=`_onBeforeCompile${t}`,r=function(c,h){s.onBeforeCompile.call(this,c,h);const u=this.customProgramCacheKey()+"|"+c.vertexShader+"|"+c.fragmentShader;let d=Og[u];if(!d){const f=fC(this,c,e,t);d=Og[u]=f}c.vertexShader=d.vertexShader,c.fragmentShader=d.fragmentShader,Is(c.uniforms,this.uniforms),e.timeUniform&&(c.uniforms[e.timeUniform]={get value(){return Date.now()-uC}}),this[i]&&this[i](c)},o=function(){return a(e.chained?s:s.clone())},a=function(c){const h=Object.create(c,l);return Object.defineProperty(h,"baseMaterial",{value:s}),Object.defineProperty(h,"id",{value:dC++}),h.uuid=hC(),h.uniforms=Is({},c.uniforms,e.uniforms),h.defines=Is({},c.defines,e.defines),h.defines[`TROIKA_DERIVED_MATERIAL_${t}`]="",h.extensions=Is({},c.extensions,e.extensions),h._listeners=void 0,h},l={constructor:{value:o},isDerivedMaterial:{value:!0},type:{get:()=>s.type,set:c=>{s.type=c}},isDerivedFrom:{writable:!0,configurable:!0,value:function(c){const h=this.baseMaterial;return c===h||h.isDerivedMaterial&&h.isDerivedFrom(c)||!1}},customProgramCacheKey:{writable:!0,configurable:!0,value:function(){return s.customProgramCacheKey()+"|"+t}},onBeforeCompile:{get(){return r},set(c){this[i]=c}},copy:{writable:!0,configurable:!0,value:function(c){return s.copy.call(this,c),!s.isShaderMaterial&&!s.isDerivedMaterial&&(Is(this.extensions,c.extensions),Is(this.defines,c.defines),Is(this.uniforms,cl.clone(c.uniforms))),this}},clone:{writable:!0,configurable:!0,value:function(){const c=new s.constructor;return a(c).copy(this)}},getDepthMaterial:{writable:!0,configurable:!0,value:function(){let c=this._depthMaterial;return c||(c=this._depthMaterial=Jd(s.isDerivedMaterial?s.getDepthMaterial():new ml({depthPacking:yf}),e),c.defines.IS_DEPTH_MATERIAL="",c.uniforms=this.uniforms),c}},getDistanceMaterial:{writable:!0,configurable:!0,value:function(){let c=this._distanceMaterial;return c||(c=this._distanceMaterial=Jd(s.isDerivedMaterial?s.getDistanceMaterial():new eu,e),c.defines.IS_DISTANCE_MATERIAL="",c.uniforms=this.uniforms),c}},dispose:{writable:!0,configurable:!0,value(){const{_depthMaterial:c,_distanceMaterial:h}=this;c&&c.dispose(),h&&h.dispose(),s.dispose.call(this)}}};return n[t]=o,new o}function fC(s,{vertexShader:e,fragmentShader:t},n,i){let{vertexDefs:r,vertexMainIntro:o,vertexMainOutro:a,vertexTransform:l,fragmentDefs:c,fragmentMainIntro:h,fragmentMainOutro:u,fragmentColorTransform:d,customRewriter:f,timeUniform:p}=n;if(r=r||"",o=o||"",a=a||"",c=c||"",h=h||"",u=u||"",(l||f)&&(e=Zd(e)),(d||f)&&(t=t.replace(/^[ \t]*#include <((?:tonemapping|encodings|colorspace|fog|premultiplied_alpha|dithering)_fragment)>/gm,`
//!BEGIN_POST_CHUNK $1
$&
//!END_POST_CHUNK
`),t=Zd(t)),f){let v=f({vertexShader:e,fragmentShader:t});e=v.vertexShader,t=v.fragmentShader}if(d){let v=[];t=t.replace(/^\/\/!BEGIN_POST_CHUNK[^]+?^\/\/!END_POST_CHUNK/gm,g=>(v.push(g),"")),u=`${d}
${v.join(`
`)}
${u}`}if(p){const v=`
uniform float ${p};
`;r=v+r,c=v+c}return l&&(e=`vec3 troika_position_${i};
vec3 troika_normal_${i};
vec2 troika_uv_${i};
${e}
`,r=`${r}
void troikaVertexTransform${i}(inout vec3 position, inout vec3 normal, inout vec2 uv) {
  ${l}
}
`,o=`
troika_position_${i} = vec3(position);
troika_normal_${i} = vec3(normal);
troika_uv_${i} = vec2(uv);
troikaVertexTransform${i}(troika_position_${i}, troika_normal_${i}, troika_uv_${i});
${o}
`,e=e.replace(/\b(position|normal|uv)\b/g,(v,g,m,x)=>/\battribute\s+vec[23]\s+$/.test(x.substr(0,m))?g:`troika_${g}_${i}`),s.map&&s.map.channel>0||(e=e.replace(/\bMAP_UV\b/g,`troika_uv_${i}`))),e=Fg(e,i,r,o,a),t=Fg(t,i,c,h,u),{vertexShader:e,fragmentShader:t}}function Fg(s,e,t,n,i){return(n||i||t)&&(s=s.replace(M_,`
${t}
void troikaOrigMain${e}() {`),s+=`
void main() {
  ${n}
  troikaOrigMain${e}();
  ${i}
}`),s}function pC(s,e){return s==="uniforms"?void 0:typeof e=="function"?e.toString():e}let mC=0;const kg=new Map;function gC(s){const e=JSON.stringify(s,pC);let t=kg.get(e);return t==null&&kg.set(e,t=++mC),t}/*!
Custom build of Typr.ts (https://github.com/fredli74/Typr.ts) for use in Troika text rendering.
Original MIT license applies: https://github.com/fredli74/Typr.ts/blob/master/LICENSE
*/function vC(){return typeof window>"u"&&(self.window=self),function(s){var e={parse:function(i){var r=e._bin,o=new Uint8Array(i);if(r.readASCII(o,0,4)=="ttcf"){var a=4;r.readUshort(o,a),a+=2,r.readUshort(o,a),a+=2;var l=r.readUint(o,a);a+=4;for(var c=[],h=0;h<l;h++){var u=r.readUint(o,a);a+=4,c.push(e._readFont(o,u))}return c}return[e._readFont(o,0)]},_readFont:function(i,r){var o=e._bin,a=r;o.readFixed(i,r),r+=4;var l=o.readUshort(i,r);r+=2,o.readUshort(i,r),r+=2,o.readUshort(i,r),r+=2,o.readUshort(i,r),r+=2;for(var c=["cmap","head","hhea","maxp","hmtx","name","OS/2","post","loca","glyf","kern","CFF ","GDEF","GPOS","GSUB","SVG "],h={_data:i,_offset:a},u={},d=0;d<l;d++){var f=o.readASCII(i,r,4);r+=4,o.readUint(i,r),r+=4;var p=o.readUint(i,r);r+=4;var v=o.readUint(i,r);r+=4,u[f]={offset:p,length:v}}for(d=0;d<c.length;d++){var g=c[d];u[g]&&(h[g.trim()]=e[g.trim()].parse(i,u[g].offset,u[g].length,h))}return h},_tabOffset:function(i,r,o){for(var a=e._bin,l=a.readUshort(i,o+4),c=o+12,h=0;h<l;h++){var u=a.readASCII(i,c,4);c+=4,a.readUint(i,c),c+=4;var d=a.readUint(i,c);if(c+=4,a.readUint(i,c),c+=4,u==r)return d}return 0}};e._bin={readFixed:function(i,r){return(i[r]<<8|i[r+1])+(i[r+2]<<8|i[r+3])/65540},readF2dot14:function(i,r){return e._bin.readShort(i,r)/16384},readInt:function(i,r){return e._bin._view(i).getInt32(r)},readInt8:function(i,r){return e._bin._view(i).getInt8(r)},readShort:function(i,r){return e._bin._view(i).getInt16(r)},readUshort:function(i,r){return e._bin._view(i).getUint16(r)},readUshorts:function(i,r,o){for(var a=[],l=0;l<o;l++)a.push(e._bin.readUshort(i,r+2*l));return a},readUint:function(i,r){return e._bin._view(i).getUint32(r)},readUint64:function(i,r){return 4294967296*e._bin.readUint(i,r)+e._bin.readUint(i,r+4)},readASCII:function(i,r,o){for(var a="",l=0;l<o;l++)a+=String.fromCharCode(i[r+l]);return a},readUnicode:function(i,r,o){for(var a="",l=0;l<o;l++){var c=i[r++]<<8|i[r++];a+=String.fromCharCode(c)}return a},_tdec:typeof window<"u"&&window.TextDecoder?new window.TextDecoder:null,readUTF8:function(i,r,o){var a=e._bin._tdec;return a&&r==0&&o==i.length?a.decode(i):e._bin.readASCII(i,r,o)},readBytes:function(i,r,o){for(var a=[],l=0;l<o;l++)a.push(i[r+l]);return a},readASCIIArray:function(i,r,o){for(var a=[],l=0;l<o;l++)a.push(String.fromCharCode(i[r+l]));return a},_view:function(i){return i._dataView||(i._dataView=i.buffer?new DataView(i.buffer,i.byteOffset,i.byteLength):new DataView(new Uint8Array(i).buffer))}},e._lctf={},e._lctf.parse=function(i,r,o,a,l){var c=e._bin,h={},u=r;c.readFixed(i,r),r+=4;var d=c.readUshort(i,r);r+=2;var f=c.readUshort(i,r);r+=2;var p=c.readUshort(i,r);return r+=2,h.scriptList=e._lctf.readScriptList(i,u+d),h.featureList=e._lctf.readFeatureList(i,u+f),h.lookupList=e._lctf.readLookupList(i,u+p,l),h},e._lctf.readLookupList=function(i,r,o){var a=e._bin,l=r,c=[],h=a.readUshort(i,r);r+=2;for(var u=0;u<h;u++){var d=a.readUshort(i,r);r+=2;var f=e._lctf.readLookupTable(i,l+d,o);c.push(f)}return c},e._lctf.readLookupTable=function(i,r,o){var a=e._bin,l=r,c={tabs:[]};c.ltype=a.readUshort(i,r),r+=2,c.flag=a.readUshort(i,r),r+=2;var h=a.readUshort(i,r);r+=2;for(var u=c.ltype,d=0;d<h;d++){var f=a.readUshort(i,r);r+=2;var p=o(i,u,l+f,c);c.tabs.push(p)}return c},e._lctf.numOfOnes=function(i){for(var r=0,o=0;o<32;o++)(i>>>o&1)!=0&&r++;return r},e._lctf.readClassDef=function(i,r){var o=e._bin,a=[],l=o.readUshort(i,r);if(r+=2,l==1){var c=o.readUshort(i,r);r+=2;var h=o.readUshort(i,r);r+=2;for(var u=0;u<h;u++)a.push(c+u),a.push(c+u),a.push(o.readUshort(i,r)),r+=2}if(l==2){var d=o.readUshort(i,r);for(r+=2,u=0;u<d;u++)a.push(o.readUshort(i,r)),r+=2,a.push(o.readUshort(i,r)),r+=2,a.push(o.readUshort(i,r)),r+=2}return a},e._lctf.getInterval=function(i,r){for(var o=0;o<i.length;o+=3){var a=i[o],l=i[o+1];if(i[o+2],a<=r&&r<=l)return o}return-1},e._lctf.readCoverage=function(i,r){var o=e._bin,a={};a.fmt=o.readUshort(i,r),r+=2;var l=o.readUshort(i,r);return r+=2,a.fmt==1&&(a.tab=o.readUshorts(i,r,l)),a.fmt==2&&(a.tab=o.readUshorts(i,r,3*l)),a},e._lctf.coverageIndex=function(i,r){var o=i.tab;if(i.fmt==1)return o.indexOf(r);if(i.fmt==2){var a=e._lctf.getInterval(o,r);if(a!=-1)return o[a+2]+(r-o[a])}return-1},e._lctf.readFeatureList=function(i,r){var o=e._bin,a=r,l=[],c=o.readUshort(i,r);r+=2;for(var h=0;h<c;h++){var u=o.readASCII(i,r,4);r+=4;var d=o.readUshort(i,r);r+=2;var f=e._lctf.readFeatureTable(i,a+d);f.tag=u.trim(),l.push(f)}return l},e._lctf.readFeatureTable=function(i,r){var o=e._bin,a=r,l={},c=o.readUshort(i,r);r+=2,c>0&&(l.featureParams=a+c);var h=o.readUshort(i,r);r+=2,l.tab=[];for(var u=0;u<h;u++)l.tab.push(o.readUshort(i,r+2*u));return l},e._lctf.readScriptList=function(i,r){var o=e._bin,a=r,l={},c=o.readUshort(i,r);r+=2;for(var h=0;h<c;h++){var u=o.readASCII(i,r,4);r+=4;var d=o.readUshort(i,r);r+=2,l[u.trim()]=e._lctf.readScriptTable(i,a+d)}return l},e._lctf.readScriptTable=function(i,r){var o=e._bin,a=r,l={},c=o.readUshort(i,r);r+=2,c>0&&(l.default=e._lctf.readLangSysTable(i,a+c));var h=o.readUshort(i,r);r+=2;for(var u=0;u<h;u++){var d=o.readASCII(i,r,4);r+=4;var f=o.readUshort(i,r);r+=2,l[d.trim()]=e._lctf.readLangSysTable(i,a+f)}return l},e._lctf.readLangSysTable=function(i,r){var o=e._bin,a={};o.readUshort(i,r),r+=2,a.reqFeature=o.readUshort(i,r),r+=2;var l=o.readUshort(i,r);return r+=2,a.features=o.readUshorts(i,r,l),a},e.CFF={},e.CFF.parse=function(i,r,o){var a=e._bin;(i=new Uint8Array(i.buffer,r,o))[r=0],i[++r],i[++r],i[++r],r++;var l=[];r=e.CFF.readIndex(i,r,l);for(var c=[],h=0;h<l.length-1;h++)c.push(a.readASCII(i,r+l[h],l[h+1]-l[h]));r+=l[l.length-1];var u=[];r=e.CFF.readIndex(i,r,u);var d=[];for(h=0;h<u.length-1;h++)d.push(e.CFF.readDict(i,r+u[h],r+u[h+1]));r+=u[u.length-1];var f=d[0],p=[];r=e.CFF.readIndex(i,r,p);var v=[];for(h=0;h<p.length-1;h++)v.push(a.readASCII(i,r+p[h],p[h+1]-p[h]));if(r+=p[p.length-1],e.CFF.readSubrs(i,r,f),f.CharStrings){r=f.CharStrings,p=[],r=e.CFF.readIndex(i,r,p);var g=[];for(h=0;h<p.length-1;h++)g.push(a.readBytes(i,r+p[h],p[h+1]-p[h]));f.CharStrings=g}if(f.ROS){r=f.FDArray;var m=[];for(r=e.CFF.readIndex(i,r,m),f.FDArray=[],h=0;h<m.length-1;h++){var x=e.CFF.readDict(i,r+m[h],r+m[h+1]);e.CFF._readFDict(i,x,v),f.FDArray.push(x)}r+=m[m.length-1],r=f.FDSelect,f.FDSelect=[];var y=i[r];if(r++,y!=3)throw y;var _=a.readUshort(i,r);for(r+=2,h=0;h<_+1;h++)f.FDSelect.push(a.readUshort(i,r),i[r+2]),r+=3}return f.Encoding&&(f.Encoding=e.CFF.readEncoding(i,f.Encoding,f.CharStrings.length)),f.charset&&(f.charset=e.CFF.readCharset(i,f.charset,f.CharStrings.length)),e.CFF._readFDict(i,f,v),f},e.CFF._readFDict=function(i,r,o){var a;for(var l in r.Private&&(a=r.Private[1],r.Private=e.CFF.readDict(i,a,a+r.Private[0]),r.Private.Subrs&&e.CFF.readSubrs(i,a+r.Private.Subrs,r.Private)),r)["FamilyName","FontName","FullName","Notice","version","Copyright"].indexOf(l)!=-1&&(r[l]=o[r[l]-426+35])},e.CFF.readSubrs=function(i,r,o){var a=e._bin,l=[];r=e.CFF.readIndex(i,r,l);var c,h=l.length;c=h<1240?107:h<33900?1131:32768,o.Bias=c,o.Subrs=[];for(var u=0;u<l.length-1;u++)o.Subrs.push(a.readBytes(i,r+l[u],l[u+1]-l[u]))},e.CFF.tableSE=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,0,111,112,113,114,0,115,116,117,118,119,120,121,122,0,123,0,124,125,126,127,128,129,130,131,0,132,133,0,134,135,136,137,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,138,0,139,0,0,0,0,140,141,142,143,0,0,0,0,0,144,0,0,0,145,0,0,146,147,148,149,0,0,0,0],e.CFF.glyphByUnicode=function(i,r){for(var o=0;o<i.charset.length;o++)if(i.charset[o]==r)return o;return-1},e.CFF.glyphBySE=function(i,r){return r<0||r>255?-1:e.CFF.glyphByUnicode(i,e.CFF.tableSE[r])},e.CFF.readEncoding=function(i,r,o){e._bin;var a=[".notdef"],l=i[r];if(r++,l!=0)throw"error: unknown encoding format: "+l;var c=i[r];r++;for(var h=0;h<c;h++)a.push(i[r+h]);return a},e.CFF.readCharset=function(i,r,o){var a=e._bin,l=[".notdef"],c=i[r];if(r++,c==0)for(var h=0;h<o;h++){var u=a.readUshort(i,r);r+=2,l.push(u)}else{if(c!=1&&c!=2)throw"error: format: "+c;for(;l.length<o;){u=a.readUshort(i,r),r+=2;var d=0;for(c==1?(d=i[r],r++):(d=a.readUshort(i,r),r+=2),h=0;h<=d;h++)l.push(u),u++}}return l},e.CFF.readIndex=function(i,r,o){var a=e._bin,l=a.readUshort(i,r)+1,c=i[r+=2];if(r++,c==1)for(var h=0;h<l;h++)o.push(i[r+h]);else if(c==2)for(h=0;h<l;h++)o.push(a.readUshort(i,r+2*h));else if(c==3)for(h=0;h<l;h++)o.push(16777215&a.readUint(i,r+3*h-1));else if(l!=1)throw"unsupported offset size: "+c+", count: "+l;return(r+=l*c)-1},e.CFF.getCharString=function(i,r,o){var a=e._bin,l=i[r],c=i[r+1];i[r+2],i[r+3],i[r+4];var h=1,u=null,d=null;l<=20&&(u=l,h=1),l==12&&(u=100*l+c,h=2),21<=l&&l<=27&&(u=l,h=1),l==28&&(d=a.readShort(i,r+1),h=3),29<=l&&l<=31&&(u=l,h=1),32<=l&&l<=246&&(d=l-139,h=1),247<=l&&l<=250&&(d=256*(l-247)+c+108,h=2),251<=l&&l<=254&&(d=256*-(l-251)-c-108,h=2),l==255&&(d=a.readInt(i,r+1)/65535,h=5),o.val=d??"o"+u,o.size=h},e.CFF.readCharString=function(i,r,o){for(var a=r+o,l=e._bin,c=[];r<a;){var h=i[r],u=i[r+1];i[r+2],i[r+3],i[r+4];var d=1,f=null,p=null;h<=20&&(f=h,d=1),h==12&&(f=100*h+u,d=2),h!=19&&h!=20||(f=h,d=2),21<=h&&h<=27&&(f=h,d=1),h==28&&(p=l.readShort(i,r+1),d=3),29<=h&&h<=31&&(f=h,d=1),32<=h&&h<=246&&(p=h-139,d=1),247<=h&&h<=250&&(p=256*(h-247)+u+108,d=2),251<=h&&h<=254&&(p=256*-(h-251)-u-108,d=2),h==255&&(p=l.readInt(i,r+1)/65535,d=5),c.push(p??"o"+f),r+=d}return c},e.CFF.readDict=function(i,r,o){for(var a=e._bin,l={},c=[];r<o;){var h=i[r],u=i[r+1];i[r+2],i[r+3],i[r+4];var d=1,f=null,p=null;if(h==28&&(p=a.readShort(i,r+1),d=3),h==29&&(p=a.readInt(i,r+1),d=5),32<=h&&h<=246&&(p=h-139,d=1),247<=h&&h<=250&&(p=256*(h-247)+u+108,d=2),251<=h&&h<=254&&(p=256*-(h-251)-u-108,d=2),h==255)throw p=a.readInt(i,r+1)/65535,d=5,"unknown number";if(h==30){var v=[];for(d=1;;){var g=i[r+d];d++;var m=g>>4,x=15&g;if(m!=15&&v.push(m),x!=15&&v.push(x),x==15)break}for(var y="",_=[0,1,2,3,4,5,6,7,8,9,".","e","e-","reserved","-","endOfNumber"],E=0;E<v.length;E++)y+=_[v[E]];p=parseFloat(y)}h<=21&&(f=["version","Notice","FullName","FamilyName","Weight","FontBBox","BlueValues","OtherBlues","FamilyBlues","FamilyOtherBlues","StdHW","StdVW","escape","UniqueID","XUID","charset","Encoding","CharStrings","Private","Subrs","defaultWidthX","nominalWidthX"][h],d=1,h==12&&(f=["Copyright","isFixedPitch","ItalicAngle","UnderlinePosition","UnderlineThickness","PaintType","CharstringType","FontMatrix","StrokeWidth","BlueScale","BlueShift","BlueFuzz","StemSnapH","StemSnapV","ForceBold",0,0,"LanguageGroup","ExpansionFactor","initialRandomSeed","SyntheticBase","PostScript","BaseFontName","BaseFontBlend",0,0,0,0,0,0,"ROS","CIDFontVersion","CIDFontRevision","CIDFontType","CIDCount","UIDBase","FDArray","FDSelect","FontName"][u],d=2)),f!=null?(l[f]=c.length==1?c[0]:c,c=[]):c.push(p),r+=d}return l},e.cmap={},e.cmap.parse=function(i,r,o){i=new Uint8Array(i.buffer,r,o),r=0;var a=e._bin,l={};a.readUshort(i,r),r+=2;var c=a.readUshort(i,r);r+=2;var h=[];l.tables=[];for(var u=0;u<c;u++){var d=a.readUshort(i,r);r+=2;var f=a.readUshort(i,r);r+=2;var p=a.readUint(i,r);r+=4;var v="p"+d+"e"+f,g=h.indexOf(p);if(g==-1){var m;g=l.tables.length,h.push(p);var x=a.readUshort(i,p);x==0?m=e.cmap.parse0(i,p):x==4?m=e.cmap.parse4(i,p):x==6?m=e.cmap.parse6(i,p):x==12?m=e.cmap.parse12(i,p):console.debug("unknown format: "+x,d,f,p),l.tables.push(m)}if(l[v]!=null)throw"multiple tables for one platform+encoding";l[v]=g}return l},e.cmap.parse0=function(i,r){var o=e._bin,a={};a.format=o.readUshort(i,r),r+=2;var l=o.readUshort(i,r);r+=2,o.readUshort(i,r),r+=2,a.map=[];for(var c=0;c<l-6;c++)a.map.push(i[r+c]);return a},e.cmap.parse4=function(i,r){var o=e._bin,a=r,l={};l.format=o.readUshort(i,r),r+=2;var c=o.readUshort(i,r);r+=2,o.readUshort(i,r),r+=2;var h=o.readUshort(i,r);r+=2;var u=h/2;l.searchRange=o.readUshort(i,r),r+=2,l.entrySelector=o.readUshort(i,r),r+=2,l.rangeShift=o.readUshort(i,r),r+=2,l.endCount=o.readUshorts(i,r,u),r+=2*u,r+=2,l.startCount=o.readUshorts(i,r,u),r+=2*u,l.idDelta=[];for(var d=0;d<u;d++)l.idDelta.push(o.readShort(i,r)),r+=2;for(l.idRangeOffset=o.readUshorts(i,r,u),r+=2*u,l.glyphIdArray=[];r<a+c;)l.glyphIdArray.push(o.readUshort(i,r)),r+=2;return l},e.cmap.parse6=function(i,r){var o=e._bin,a={};a.format=o.readUshort(i,r),r+=2,o.readUshort(i,r),r+=2,o.readUshort(i,r),r+=2,a.firstCode=o.readUshort(i,r),r+=2;var l=o.readUshort(i,r);r+=2,a.glyphIdArray=[];for(var c=0;c<l;c++)a.glyphIdArray.push(o.readUshort(i,r)),r+=2;return a},e.cmap.parse12=function(i,r){var o=e._bin,a={};a.format=o.readUshort(i,r),r+=2,r+=2,o.readUint(i,r),r+=4,o.readUint(i,r),r+=4;var l=o.readUint(i,r);r+=4,a.groups=[];for(var c=0;c<l;c++){var h=r+12*c,u=o.readUint(i,h+0),d=o.readUint(i,h+4),f=o.readUint(i,h+8);a.groups.push([u,d,f])}return a},e.glyf={},e.glyf.parse=function(i,r,o,a){for(var l=[],c=0;c<a.maxp.numGlyphs;c++)l.push(null);return l},e.glyf._parseGlyf=function(i,r){var o=e._bin,a=i._data,l=e._tabOffset(a,"glyf",i._offset)+i.loca[r];if(i.loca[r]==i.loca[r+1])return null;var c={};if(c.noc=o.readShort(a,l),l+=2,c.xMin=o.readShort(a,l),l+=2,c.yMin=o.readShort(a,l),l+=2,c.xMax=o.readShort(a,l),l+=2,c.yMax=o.readShort(a,l),l+=2,c.xMin>=c.xMax||c.yMin>=c.yMax)return null;if(c.noc>0){c.endPts=[];for(var h=0;h<c.noc;h++)c.endPts.push(o.readUshort(a,l)),l+=2;var u=o.readUshort(a,l);if(l+=2,a.length-l<u)return null;c.instructions=o.readBytes(a,l,u),l+=u;var d=c.endPts[c.noc-1]+1;for(c.flags=[],h=0;h<d;h++){var f=a[l];if(l++,c.flags.push(f),(8&f)!=0){var p=a[l];l++;for(var v=0;v<p;v++)c.flags.push(f),h++}}for(c.xs=[],h=0;h<d;h++){var g=(2&c.flags[h])!=0,m=(16&c.flags[h])!=0;g?(c.xs.push(m?a[l]:-a[l]),l++):m?c.xs.push(0):(c.xs.push(o.readShort(a,l)),l+=2)}for(c.ys=[],h=0;h<d;h++)g=(4&c.flags[h])!=0,m=(32&c.flags[h])!=0,g?(c.ys.push(m?a[l]:-a[l]),l++):m?c.ys.push(0):(c.ys.push(o.readShort(a,l)),l+=2);var x=0,y=0;for(h=0;h<d;h++)x+=c.xs[h],y+=c.ys[h],c.xs[h]=x,c.ys[h]=y}else{var _;c.parts=[];do{_=o.readUshort(a,l),l+=2;var E={m:{a:1,b:0,c:0,d:1,tx:0,ty:0},p1:-1,p2:-1};if(c.parts.push(E),E.glyphIndex=o.readUshort(a,l),l+=2,1&_){var w=o.readShort(a,l);l+=2;var M=o.readShort(a,l);l+=2}else w=o.readInt8(a,l),l++,M=o.readInt8(a,l),l++;2&_?(E.m.tx=w,E.m.ty=M):(E.p1=w,E.p2=M),8&_?(E.m.a=E.m.d=o.readF2dot14(a,l),l+=2):64&_?(E.m.a=o.readF2dot14(a,l),l+=2,E.m.d=o.readF2dot14(a,l),l+=2):128&_&&(E.m.a=o.readF2dot14(a,l),l+=2,E.m.b=o.readF2dot14(a,l),l+=2,E.m.c=o.readF2dot14(a,l),l+=2,E.m.d=o.readF2dot14(a,l),l+=2)}while(32&_);if(256&_){var T=o.readUshort(a,l);for(l+=2,c.instr=[],h=0;h<T;h++)c.instr.push(a[l]),l++}}return c},e.GDEF={},e.GDEF.parse=function(i,r,o,a){var l=r;r+=4;var c=e._bin.readUshort(i,r);return{glyphClassDef:c===0?null:e._lctf.readClassDef(i,l+c)}},e.GPOS={},e.GPOS.parse=function(i,r,o,a){return e._lctf.parse(i,r,o,a,e.GPOS.subt)},e.GPOS.subt=function(i,r,o,a){var l=e._bin,c=o,h={};if(h.fmt=l.readUshort(i,o),o+=2,r==1||r==2||r==3||r==7||r==8&&h.fmt<=2){var u=l.readUshort(i,o);o+=2,h.coverage=e._lctf.readCoverage(i,u+c)}if(r==1&&h.fmt==1){var d=l.readUshort(i,o);o+=2,d!=0&&(h.pos=e.GPOS.readValueRecord(i,o,d))}else if(r==2&&h.fmt>=1&&h.fmt<=2){d=l.readUshort(i,o),o+=2;var f=l.readUshort(i,o);o+=2;var p=e._lctf.numOfOnes(d),v=e._lctf.numOfOnes(f);if(h.fmt==1){h.pairsets=[];var g=l.readUshort(i,o);o+=2;for(var m=0;m<g;m++){var x=c+l.readUshort(i,o);o+=2;var y=l.readUshort(i,x);x+=2;for(var _=[],E=0;E<y;E++){var w=l.readUshort(i,x);x+=2,d!=0&&(P=e.GPOS.readValueRecord(i,x,d),x+=2*p),f!=0&&(k=e.GPOS.readValueRecord(i,x,f),x+=2*v),_.push({gid2:w,val1:P,val2:k})}h.pairsets.push(_)}}if(h.fmt==2){var M=l.readUshort(i,o);o+=2;var T=l.readUshort(i,o);o+=2;var S=l.readUshort(i,o);o+=2;var b=l.readUshort(i,o);for(o+=2,h.classDef1=e._lctf.readClassDef(i,c+M),h.classDef2=e._lctf.readClassDef(i,c+T),h.matrix=[],m=0;m<S;m++){var D=[];for(E=0;E<b;E++){var P=null,k=null;d!=0&&(P=e.GPOS.readValueRecord(i,o,d),o+=2*p),f!=0&&(k=e.GPOS.readValueRecord(i,o,f),o+=2*v),D.push({val1:P,val2:k})}h.matrix.push(D)}}}else if(r==4&&h.fmt==1)h.markCoverage=e._lctf.readCoverage(i,l.readUshort(i,o)+c),h.baseCoverage=e._lctf.readCoverage(i,l.readUshort(i,o+2)+c),h.markClassCount=l.readUshort(i,o+4),h.markArray=e.GPOS.readMarkArray(i,l.readUshort(i,o+6)+c),h.baseArray=e.GPOS.readBaseArray(i,l.readUshort(i,o+8)+c,h.markClassCount);else if(r==6&&h.fmt==1)h.mark1Coverage=e._lctf.readCoverage(i,l.readUshort(i,o)+c),h.mark2Coverage=e._lctf.readCoverage(i,l.readUshort(i,o+2)+c),h.markClassCount=l.readUshort(i,o+4),h.mark1Array=e.GPOS.readMarkArray(i,l.readUshort(i,o+6)+c),h.mark2Array=e.GPOS.readBaseArray(i,l.readUshort(i,o+8)+c,h.markClassCount);else{if(r==9&&h.fmt==1){var V=l.readUshort(i,o);o+=2;var K=l.readUint(i,o);if(o+=4,a.ltype==9)a.ltype=V;else if(a.ltype!=V)throw"invalid extension substitution";return e.GPOS.subt(i,a.ltype,c+K)}console.debug("unsupported GPOS table LookupType",r,"format",h.fmt)}return h},e.GPOS.readValueRecord=function(i,r,o){var a=e._bin,l=[];return l.push(1&o?a.readShort(i,r):0),r+=1&o?2:0,l.push(2&o?a.readShort(i,r):0),r+=2&o?2:0,l.push(4&o?a.readShort(i,r):0),r+=4&o?2:0,l.push(8&o?a.readShort(i,r):0),r+=8&o?2:0,l},e.GPOS.readBaseArray=function(i,r,o){var a=e._bin,l=[],c=r,h=a.readUshort(i,r);r+=2;for(var u=0;u<h;u++){for(var d=[],f=0;f<o;f++)d.push(e.GPOS.readAnchorRecord(i,c+a.readUshort(i,r))),r+=2;l.push(d)}return l},e.GPOS.readMarkArray=function(i,r){var o=e._bin,a=[],l=r,c=o.readUshort(i,r);r+=2;for(var h=0;h<c;h++){var u=e.GPOS.readAnchorRecord(i,o.readUshort(i,r+2)+l);u.markClass=o.readUshort(i,r),a.push(u),r+=4}return a},e.GPOS.readAnchorRecord=function(i,r){var o=e._bin,a={};return a.fmt=o.readUshort(i,r),a.x=o.readShort(i,r+2),a.y=o.readShort(i,r+4),a},e.GSUB={},e.GSUB.parse=function(i,r,o,a){return e._lctf.parse(i,r,o,a,e.GSUB.subt)},e.GSUB.subt=function(i,r,o,a){var l=e._bin,c=o,h={};if(h.fmt=l.readUshort(i,o),o+=2,r!=1&&r!=2&&r!=4&&r!=5&&r!=6)return null;if(r==1||r==2||r==4||r==5&&h.fmt<=2||r==6&&h.fmt<=2){var u=l.readUshort(i,o);o+=2,h.coverage=e._lctf.readCoverage(i,c+u)}if(r==1&&h.fmt>=1&&h.fmt<=2){if(h.fmt==1)h.delta=l.readShort(i,o),o+=2;else if(h.fmt==2){var d=l.readUshort(i,o);o+=2,h.newg=l.readUshorts(i,o,d),o+=2*h.newg.length}}else if(r==2&&h.fmt==1){d=l.readUshort(i,o),o+=2,h.seqs=[];for(var f=0;f<d;f++){var p=l.readUshort(i,o)+c;o+=2;var v=l.readUshort(i,p);h.seqs.push(l.readUshorts(i,p+2,v))}}else if(r==4)for(h.vals=[],d=l.readUshort(i,o),o+=2,f=0;f<d;f++){var g=l.readUshort(i,o);o+=2,h.vals.push(e.GSUB.readLigatureSet(i,c+g))}else if(r==5&&h.fmt==2){if(h.fmt==2){var m=l.readUshort(i,o);o+=2,h.cDef=e._lctf.readClassDef(i,c+m),h.scset=[];var x=l.readUshort(i,o);for(o+=2,f=0;f<x;f++){var y=l.readUshort(i,o);o+=2,h.scset.push(y==0?null:e.GSUB.readSubClassSet(i,c+y))}}}else if(r==6&&h.fmt==3){if(h.fmt==3){for(f=0;f<3;f++){d=l.readUshort(i,o),o+=2;for(var _=[],E=0;E<d;E++)_.push(e._lctf.readCoverage(i,c+l.readUshort(i,o+2*E)));o+=2*d,f==0&&(h.backCvg=_),f==1&&(h.inptCvg=_),f==2&&(h.ahedCvg=_)}d=l.readUshort(i,o),o+=2,h.lookupRec=e.GSUB.readSubstLookupRecords(i,o,d)}}else{if(r==7&&h.fmt==1){var w=l.readUshort(i,o);o+=2;var M=l.readUint(i,o);if(o+=4,a.ltype==9)a.ltype=w;else if(a.ltype!=w)throw"invalid extension substitution";return e.GSUB.subt(i,a.ltype,c+M)}console.debug("unsupported GSUB table LookupType",r,"format",h.fmt)}return h},e.GSUB.readSubClassSet=function(i,r){var o=e._bin.readUshort,a=r,l=[],c=o(i,r);r+=2;for(var h=0;h<c;h++){var u=o(i,r);r+=2,l.push(e.GSUB.readSubClassRule(i,a+u))}return l},e.GSUB.readSubClassRule=function(i,r){var o=e._bin.readUshort,a={},l=o(i,r),c=o(i,r+=2);r+=2,a.input=[];for(var h=0;h<l-1;h++)a.input.push(o(i,r)),r+=2;return a.substLookupRecords=e.GSUB.readSubstLookupRecords(i,r,c),a},e.GSUB.readSubstLookupRecords=function(i,r,o){for(var a=e._bin.readUshort,l=[],c=0;c<o;c++)l.push(a(i,r),a(i,r+2)),r+=4;return l},e.GSUB.readChainSubClassSet=function(i,r){var o=e._bin,a=r,l=[],c=o.readUshort(i,r);r+=2;for(var h=0;h<c;h++){var u=o.readUshort(i,r);r+=2,l.push(e.GSUB.readChainSubClassRule(i,a+u))}return l},e.GSUB.readChainSubClassRule=function(i,r){for(var o=e._bin,a={},l=["backtrack","input","lookahead"],c=0;c<l.length;c++){var h=o.readUshort(i,r);r+=2,c==1&&h--,a[l[c]]=o.readUshorts(i,r,h),r+=2*a[l[c]].length}return h=o.readUshort(i,r),r+=2,a.subst=o.readUshorts(i,r,2*h),r+=2*a.subst.length,a},e.GSUB.readLigatureSet=function(i,r){var o=e._bin,a=r,l=[],c=o.readUshort(i,r);r+=2;for(var h=0;h<c;h++){var u=o.readUshort(i,r);r+=2,l.push(e.GSUB.readLigature(i,a+u))}return l},e.GSUB.readLigature=function(i,r){var o=e._bin,a={chain:[]};a.nglyph=o.readUshort(i,r),r+=2;var l=o.readUshort(i,r);r+=2;for(var c=0;c<l-1;c++)a.chain.push(o.readUshort(i,r)),r+=2;return a},e.head={},e.head.parse=function(i,r,o){var a=e._bin,l={};return a.readFixed(i,r),r+=4,l.fontRevision=a.readFixed(i,r),r+=4,a.readUint(i,r),r+=4,a.readUint(i,r),r+=4,l.flags=a.readUshort(i,r),r+=2,l.unitsPerEm=a.readUshort(i,r),r+=2,l.created=a.readUint64(i,r),r+=8,l.modified=a.readUint64(i,r),r+=8,l.xMin=a.readShort(i,r),r+=2,l.yMin=a.readShort(i,r),r+=2,l.xMax=a.readShort(i,r),r+=2,l.yMax=a.readShort(i,r),r+=2,l.macStyle=a.readUshort(i,r),r+=2,l.lowestRecPPEM=a.readUshort(i,r),r+=2,l.fontDirectionHint=a.readShort(i,r),r+=2,l.indexToLocFormat=a.readShort(i,r),r+=2,l.glyphDataFormat=a.readShort(i,r),r+=2,l},e.hhea={},e.hhea.parse=function(i,r,o){var a=e._bin,l={};return a.readFixed(i,r),r+=4,l.ascender=a.readShort(i,r),r+=2,l.descender=a.readShort(i,r),r+=2,l.lineGap=a.readShort(i,r),r+=2,l.advanceWidthMax=a.readUshort(i,r),r+=2,l.minLeftSideBearing=a.readShort(i,r),r+=2,l.minRightSideBearing=a.readShort(i,r),r+=2,l.xMaxExtent=a.readShort(i,r),r+=2,l.caretSlopeRise=a.readShort(i,r),r+=2,l.caretSlopeRun=a.readShort(i,r),r+=2,l.caretOffset=a.readShort(i,r),r+=2,r+=8,l.metricDataFormat=a.readShort(i,r),r+=2,l.numberOfHMetrics=a.readUshort(i,r),r+=2,l},e.hmtx={},e.hmtx.parse=function(i,r,o,a){for(var l=e._bin,c={aWidth:[],lsBearing:[]},h=0,u=0,d=0;d<a.maxp.numGlyphs;d++)d<a.hhea.numberOfHMetrics&&(h=l.readUshort(i,r),r+=2,u=l.readShort(i,r),r+=2),c.aWidth.push(h),c.lsBearing.push(u);return c},e.kern={},e.kern.parse=function(i,r,o,a){var l=e._bin,c=l.readUshort(i,r);if(r+=2,c==1)return e.kern.parseV1(i,r-2,o,a);var h=l.readUshort(i,r);r+=2;for(var u={glyph1:[],rval:[]},d=0;d<h;d++){r+=2,o=l.readUshort(i,r),r+=2;var f=l.readUshort(i,r);r+=2;var p=f>>>8;if((p&=15)!=0)throw"unknown kern table format: "+p;r=e.kern.readFormat0(i,r,u)}return u},e.kern.parseV1=function(i,r,o,a){var l=e._bin;l.readFixed(i,r),r+=4;var c=l.readUint(i,r);r+=4;for(var h={glyph1:[],rval:[]},u=0;u<c;u++){l.readUint(i,r),r+=4;var d=l.readUshort(i,r);r+=2,l.readUshort(i,r),r+=2;var f=d>>>8;if((f&=15)!=0)throw"unknown kern table format: "+f;r=e.kern.readFormat0(i,r,h)}return h},e.kern.readFormat0=function(i,r,o){var a=e._bin,l=-1,c=a.readUshort(i,r);r+=2,a.readUshort(i,r),r+=2,a.readUshort(i,r),r+=2,a.readUshort(i,r),r+=2;for(var h=0;h<c;h++){var u=a.readUshort(i,r);r+=2;var d=a.readUshort(i,r);r+=2;var f=a.readShort(i,r);r+=2,u!=l&&(o.glyph1.push(u),o.rval.push({glyph2:[],vals:[]}));var p=o.rval[o.rval.length-1];p.glyph2.push(d),p.vals.push(f),l=u}return r},e.loca={},e.loca.parse=function(i,r,o,a){var l=e._bin,c=[],h=a.head.indexToLocFormat,u=a.maxp.numGlyphs+1;if(h==0)for(var d=0;d<u;d++)c.push(l.readUshort(i,r+(d<<1))<<1);if(h==1)for(d=0;d<u;d++)c.push(l.readUint(i,r+(d<<2)));return c},e.maxp={},e.maxp.parse=function(i,r,o){var a=e._bin,l={},c=a.readUint(i,r);return r+=4,l.numGlyphs=a.readUshort(i,r),r+=2,c==65536&&(l.maxPoints=a.readUshort(i,r),r+=2,l.maxContours=a.readUshort(i,r),r+=2,l.maxCompositePoints=a.readUshort(i,r),r+=2,l.maxCompositeContours=a.readUshort(i,r),r+=2,l.maxZones=a.readUshort(i,r),r+=2,l.maxTwilightPoints=a.readUshort(i,r),r+=2,l.maxStorage=a.readUshort(i,r),r+=2,l.maxFunctionDefs=a.readUshort(i,r),r+=2,l.maxInstructionDefs=a.readUshort(i,r),r+=2,l.maxStackElements=a.readUshort(i,r),r+=2,l.maxSizeOfInstructions=a.readUshort(i,r),r+=2,l.maxComponentElements=a.readUshort(i,r),r+=2,l.maxComponentDepth=a.readUshort(i,r),r+=2),l},e.name={},e.name.parse=function(i,r,o){var a=e._bin,l={};a.readUshort(i,r),r+=2;var c=a.readUshort(i,r);r+=2,a.readUshort(i,r);for(var h,u=["copyright","fontFamily","fontSubfamily","ID","fullName","version","postScriptName","trademark","manufacturer","designer","description","urlVendor","urlDesigner","licence","licenceURL","---","typoFamilyName","typoSubfamilyName","compatibleFull","sampleText","postScriptCID","wwsFamilyName","wwsSubfamilyName","lightPalette","darkPalette"],d=r+=2,f=0;f<c;f++){var p=a.readUshort(i,r);r+=2;var v=a.readUshort(i,r);r+=2;var g=a.readUshort(i,r);r+=2;var m=a.readUshort(i,r);r+=2;var x=a.readUshort(i,r);r+=2;var y=a.readUshort(i,r);r+=2;var _,E=u[m],w=d+12*c+y;if(p==0)_=a.readUnicode(i,w,x/2);else if(p==3&&v==0)_=a.readUnicode(i,w,x/2);else if(v==0)_=a.readASCII(i,w,x);else if(v==1)_=a.readUnicode(i,w,x/2);else if(v==3)_=a.readUnicode(i,w,x/2);else{if(p!=1)throw"unknown encoding "+v+", platformID: "+p;_=a.readASCII(i,w,x),console.debug("reading unknown MAC encoding "+v+" as ASCII")}var M="p"+p+","+g.toString(16);l[M]==null&&(l[M]={}),l[M][E!==void 0?E:m]=_,l[M]._lang=g}for(var T in l)if(l[T].postScriptName!=null&&l[T]._lang==1033)return l[T];for(var T in l)if(l[T].postScriptName!=null&&l[T]._lang==0)return l[T];for(var T in l)if(l[T].postScriptName!=null&&l[T]._lang==3084)return l[T];for(var T in l)if(l[T].postScriptName!=null)return l[T];for(var T in l){h=T;break}return console.debug("returning name table with languageID "+l[h]._lang),l[h]},e["OS/2"]={},e["OS/2"].parse=function(i,r,o){var a=e._bin.readUshort(i,r);r+=2;var l={};if(a==0)e["OS/2"].version0(i,r,l);else if(a==1)e["OS/2"].version1(i,r,l);else if(a==2||a==3||a==4)e["OS/2"].version2(i,r,l);else{if(a!=5)throw"unknown OS/2 table version: "+a;e["OS/2"].version5(i,r,l)}return l},e["OS/2"].version0=function(i,r,o){var a=e._bin;return o.xAvgCharWidth=a.readShort(i,r),r+=2,o.usWeightClass=a.readUshort(i,r),r+=2,o.usWidthClass=a.readUshort(i,r),r+=2,o.fsType=a.readUshort(i,r),r+=2,o.ySubscriptXSize=a.readShort(i,r),r+=2,o.ySubscriptYSize=a.readShort(i,r),r+=2,o.ySubscriptXOffset=a.readShort(i,r),r+=2,o.ySubscriptYOffset=a.readShort(i,r),r+=2,o.ySuperscriptXSize=a.readShort(i,r),r+=2,o.ySuperscriptYSize=a.readShort(i,r),r+=2,o.ySuperscriptXOffset=a.readShort(i,r),r+=2,o.ySuperscriptYOffset=a.readShort(i,r),r+=2,o.yStrikeoutSize=a.readShort(i,r),r+=2,o.yStrikeoutPosition=a.readShort(i,r),r+=2,o.sFamilyClass=a.readShort(i,r),r+=2,o.panose=a.readBytes(i,r,10),r+=10,o.ulUnicodeRange1=a.readUint(i,r),r+=4,o.ulUnicodeRange2=a.readUint(i,r),r+=4,o.ulUnicodeRange3=a.readUint(i,r),r+=4,o.ulUnicodeRange4=a.readUint(i,r),r+=4,o.achVendID=[a.readInt8(i,r),a.readInt8(i,r+1),a.readInt8(i,r+2),a.readInt8(i,r+3)],r+=4,o.fsSelection=a.readUshort(i,r),r+=2,o.usFirstCharIndex=a.readUshort(i,r),r+=2,o.usLastCharIndex=a.readUshort(i,r),r+=2,o.sTypoAscender=a.readShort(i,r),r+=2,o.sTypoDescender=a.readShort(i,r),r+=2,o.sTypoLineGap=a.readShort(i,r),r+=2,o.usWinAscent=a.readUshort(i,r),r+=2,o.usWinDescent=a.readUshort(i,r),r+=2},e["OS/2"].version1=function(i,r,o){var a=e._bin;return r=e["OS/2"].version0(i,r,o),o.ulCodePageRange1=a.readUint(i,r),r+=4,o.ulCodePageRange2=a.readUint(i,r),r+=4},e["OS/2"].version2=function(i,r,o){var a=e._bin;return r=e["OS/2"].version1(i,r,o),o.sxHeight=a.readShort(i,r),r+=2,o.sCapHeight=a.readShort(i,r),r+=2,o.usDefault=a.readUshort(i,r),r+=2,o.usBreak=a.readUshort(i,r),r+=2,o.usMaxContext=a.readUshort(i,r),r+=2},e["OS/2"].version5=function(i,r,o){var a=e._bin;return r=e["OS/2"].version2(i,r,o),o.usLowerOpticalPointSize=a.readUshort(i,r),r+=2,o.usUpperOpticalPointSize=a.readUshort(i,r),r+=2},e.post={},e.post.parse=function(i,r,o){var a=e._bin,l={};return l.version=a.readFixed(i,r),r+=4,l.italicAngle=a.readFixed(i,r),r+=4,l.underlinePosition=a.readShort(i,r),r+=2,l.underlineThickness=a.readShort(i,r),r+=2,l},e==null&&(e={}),e.U==null&&(e.U={}),e.U.codeToGlyph=function(i,r){var o=i.cmap,a=-1;if(o.p0e4!=null?a=o.p0e4:o.p3e1!=null?a=o.p3e1:o.p1e0!=null?a=o.p1e0:o.p0e3!=null&&(a=o.p0e3),a==-1)throw"no familiar platform and encoding!";var l=o.tables[a];if(l.format==0)return r>=l.map.length?0:l.map[r];if(l.format==4){for(var c=-1,h=0;h<l.endCount.length;h++)if(r<=l.endCount[h]){c=h;break}return c==-1||l.startCount[c]>r?0:65535&(l.idRangeOffset[c]!=0?l.glyphIdArray[r-l.startCount[c]+(l.idRangeOffset[c]>>1)-(l.idRangeOffset.length-c)]:r+l.idDelta[c])}if(l.format==12){if(r>l.groups[l.groups.length-1][1])return 0;for(h=0;h<l.groups.length;h++){var u=l.groups[h];if(u[0]<=r&&r<=u[1])return u[2]+(r-u[0])}return 0}throw"unknown cmap table format "+l.format},e.U.glyphToPath=function(i,r){var o={cmds:[],crds:[]};if(i.SVG&&i.SVG.entries[r]){var a=i.SVG.entries[r];return a==null?o:(typeof a=="string"&&(a=e.SVG.toPath(a),i.SVG.entries[r]=a),a)}if(i.CFF){var l={x:0,y:0,stack:[],nStems:0,haveWidth:!1,width:i.CFF.Private?i.CFF.Private.defaultWidthX:0,open:!1},c=i.CFF,h=i.CFF.Private;if(c.ROS){for(var u=0;c.FDSelect[u+2]<=r;)u+=2;h=c.FDArray[c.FDSelect[u+1]].Private}e.U._drawCFF(i.CFF.CharStrings[r],l,c,h,o)}else i.glyf&&e.U._drawGlyf(r,i,o);return o},e.U._drawGlyf=function(i,r,o){var a=r.glyf[i];a==null&&(a=r.glyf[i]=e.glyf._parseGlyf(r,i)),a!=null&&(a.noc>-1?e.U._simpleGlyph(a,o):e.U._compoGlyph(a,r,o))},e.U._simpleGlyph=function(i,r){for(var o=0;o<i.noc;o++){for(var a=o==0?0:i.endPts[o-1]+1,l=i.endPts[o],c=a;c<=l;c++){var h=c==a?l:c-1,u=c==l?a:c+1,d=1&i.flags[c],f=1&i.flags[h],p=1&i.flags[u],v=i.xs[c],g=i.ys[c];if(c==a)if(d){if(!f){e.U.P.moveTo(r,v,g);continue}e.U.P.moveTo(r,i.xs[h],i.ys[h])}else f?e.U.P.moveTo(r,i.xs[h],i.ys[h]):e.U.P.moveTo(r,(i.xs[h]+v)/2,(i.ys[h]+g)/2);d?f&&e.U.P.lineTo(r,v,g):p?e.U.P.qcurveTo(r,v,g,i.xs[u],i.ys[u]):e.U.P.qcurveTo(r,v,g,(v+i.xs[u])/2,(g+i.ys[u])/2)}e.U.P.closePath(r)}},e.U._compoGlyph=function(i,r,o){for(var a=0;a<i.parts.length;a++){var l={cmds:[],crds:[]},c=i.parts[a];e.U._drawGlyf(c.glyphIndex,r,l);for(var h=c.m,u=0;u<l.crds.length;u+=2){var d=l.crds[u],f=l.crds[u+1];o.crds.push(d*h.a+f*h.b+h.tx),o.crds.push(d*h.c+f*h.d+h.ty)}for(u=0;u<l.cmds.length;u++)o.cmds.push(l.cmds[u])}},e.U._getGlyphClass=function(i,r){var o=e._lctf.getInterval(r,i);return o==-1?0:r[o+2]},e.U._applySubs=function(i,r,o,a){for(var l=i.length-r-1,c=0;c<o.tabs.length;c++)if(o.tabs[c]!=null){var h,u=o.tabs[c];if(!u.coverage||(h=e._lctf.coverageIndex(u.coverage,i[r]))!=-1){if(o.ltype==1)i[r],u.fmt==1?i[r]=i[r]+u.delta:i[r]=u.newg[h];else if(o.ltype==4)for(var d=u.vals[h],f=0;f<d.length;f++){var p=d[f],v=p.chain.length;if(!(v>l)){for(var g=!0,m=0,x=0;x<v;x++){for(;i[r+m+(1+x)]==-1;)m++;p.chain[x]!=i[r+m+(1+x)]&&(g=!1)}if(g){for(i[r]=p.nglyph,x=0;x<v+m;x++)i[r+x+1]=-1;break}}}else if(o.ltype==5&&u.fmt==2)for(var y=e._lctf.getInterval(u.cDef,i[r]),_=u.cDef[y+2],E=u.scset[_],w=0;w<E.length;w++){var M=E[w],T=M.input;if(!(T.length>l)){for(g=!0,x=0;x<T.length;x++){var S=e._lctf.getInterval(u.cDef,i[r+1+x]);if(y==-1&&u.cDef[S+2]!=T[x]){g=!1;break}}if(g){var b=M.substLookupRecords;for(f=0;f<b.length;f+=2)b[f],b[f+1]}}}else if(o.ltype==6&&u.fmt==3){if(!e.U._glsCovered(i,u.backCvg,r-u.backCvg.length)||!e.U._glsCovered(i,u.inptCvg,r)||!e.U._glsCovered(i,u.ahedCvg,r+u.inptCvg.length))continue;var D=u.lookupRec;for(w=0;w<D.length;w+=2){y=D[w];var P=a[D[w+1]];e.U._applySubs(i,r+y,P,a)}}}}},e.U._glsCovered=function(i,r,o){for(var a=0;a<r.length;a++)if(e._lctf.coverageIndex(r[a],i[o+a])==-1)return!1;return!0},e.U.glyphsToPath=function(i,r,o){for(var a={cmds:[],crds:[]},l=0,c=0;c<r.length;c++){var h=r[c];if(h!=-1){for(var u=c<r.length-1&&r[c+1]!=-1?r[c+1]:0,d=e.U.glyphToPath(i,h),f=0;f<d.crds.length;f+=2)a.crds.push(d.crds[f]+l),a.crds.push(d.crds[f+1]);for(o&&a.cmds.push(o),f=0;f<d.cmds.length;f++)a.cmds.push(d.cmds[f]);o&&a.cmds.push("X"),l+=i.hmtx.aWidth[h],c<r.length-1&&(l+=e.U.getPairAdjustment(i,h,u))}}return a},e.U.P={},e.U.P.moveTo=function(i,r,o){i.cmds.push("M"),i.crds.push(r,o)},e.U.P.lineTo=function(i,r,o){i.cmds.push("L"),i.crds.push(r,o)},e.U.P.curveTo=function(i,r,o,a,l,c,h){i.cmds.push("C"),i.crds.push(r,o,a,l,c,h)},e.U.P.qcurveTo=function(i,r,o,a,l){i.cmds.push("Q"),i.crds.push(r,o,a,l)},e.U.P.closePath=function(i){i.cmds.push("Z")},e.U._drawCFF=function(i,r,o,a,l){for(var c=r.stack,h=r.nStems,u=r.haveWidth,d=r.width,f=r.open,p=0,v=r.x,g=r.y,m=0,x=0,y=0,_=0,E=0,w=0,M=0,T=0,S=0,b=0,D={val:0,size:0};p<i.length;){e.CFF.getCharString(i,p,D);var P=D.val;if(p+=D.size,P=="o1"||P=="o18")c.length%2!=0&&!u&&(d=c.shift()+a.nominalWidthX),h+=c.length>>1,c.length=0,u=!0;else if(P=="o3"||P=="o23")c.length%2!=0&&!u&&(d=c.shift()+a.nominalWidthX),h+=c.length>>1,c.length=0,u=!0;else if(P=="o4")c.length>1&&!u&&(d=c.shift()+a.nominalWidthX,u=!0),f&&e.U.P.closePath(l),g+=c.pop(),e.U.P.moveTo(l,v,g),f=!0;else if(P=="o5")for(;c.length>0;)v+=c.shift(),g+=c.shift(),e.U.P.lineTo(l,v,g);else if(P=="o6"||P=="o7")for(var k=c.length,V=P=="o6",K=0;K<k;K++){var N=c.shift();V?v+=N:g+=N,V=!V,e.U.P.lineTo(l,v,g)}else if(P=="o8"||P=="o24"){k=c.length;for(var Q=0;Q+6<=k;)m=v+c.shift(),x=g+c.shift(),y=m+c.shift(),_=x+c.shift(),v=y+c.shift(),g=_+c.shift(),e.U.P.curveTo(l,m,x,y,_,v,g),Q+=6;P=="o24"&&(v+=c.shift(),g+=c.shift(),e.U.P.lineTo(l,v,g))}else{if(P=="o11")break;if(P=="o1234"||P=="o1235"||P=="o1236"||P=="o1237")P=="o1234"&&(x=g,y=(m=v+c.shift())+c.shift(),b=_=x+c.shift(),w=_,T=g,v=(M=(E=(S=y+c.shift())+c.shift())+c.shift())+c.shift(),e.U.P.curveTo(l,m,x,y,_,S,b),e.U.P.curveTo(l,E,w,M,T,v,g)),P=="o1235"&&(m=v+c.shift(),x=g+c.shift(),y=m+c.shift(),_=x+c.shift(),S=y+c.shift(),b=_+c.shift(),E=S+c.shift(),w=b+c.shift(),M=E+c.shift(),T=w+c.shift(),v=M+c.shift(),g=T+c.shift(),c.shift(),e.U.P.curveTo(l,m,x,y,_,S,b),e.U.P.curveTo(l,E,w,M,T,v,g)),P=="o1236"&&(m=v+c.shift(),x=g+c.shift(),y=m+c.shift(),b=_=x+c.shift(),w=_,M=(E=(S=y+c.shift())+c.shift())+c.shift(),T=w+c.shift(),v=M+c.shift(),e.U.P.curveTo(l,m,x,y,_,S,b),e.U.P.curveTo(l,E,w,M,T,v,g)),P=="o1237"&&(m=v+c.shift(),x=g+c.shift(),y=m+c.shift(),_=x+c.shift(),S=y+c.shift(),b=_+c.shift(),E=S+c.shift(),w=b+c.shift(),M=E+c.shift(),T=w+c.shift(),Math.abs(M-v)>Math.abs(T-g)?v=M+c.shift():g=T+c.shift(),e.U.P.curveTo(l,m,x,y,_,S,b),e.U.P.curveTo(l,E,w,M,T,v,g));else if(P=="o14"){if(c.length>0&&!u&&(d=c.shift()+o.nominalWidthX,u=!0),c.length==4){var Z=c.shift(),j=c.shift(),X=c.shift(),F=c.shift(),J=e.CFF.glyphBySE(o,X),$=e.CFF.glyphBySE(o,F);e.U._drawCFF(o.CharStrings[J],r,o,a,l),r.x=Z,r.y=j,e.U._drawCFF(o.CharStrings[$],r,o,a,l)}f&&(e.U.P.closePath(l),f=!1)}else if(P=="o19"||P=="o20")c.length%2!=0&&!u&&(d=c.shift()+a.nominalWidthX),h+=c.length>>1,c.length=0,u=!0,p+=h+7>>3;else if(P=="o21")c.length>2&&!u&&(d=c.shift()+a.nominalWidthX,u=!0),g+=c.pop(),v+=c.pop(),f&&e.U.P.closePath(l),e.U.P.moveTo(l,v,g),f=!0;else if(P=="o22")c.length>1&&!u&&(d=c.shift()+a.nominalWidthX,u=!0),v+=c.pop(),f&&e.U.P.closePath(l),e.U.P.moveTo(l,v,g),f=!0;else if(P=="o25"){for(;c.length>6;)v+=c.shift(),g+=c.shift(),e.U.P.lineTo(l,v,g);m=v+c.shift(),x=g+c.shift(),y=m+c.shift(),_=x+c.shift(),v=y+c.shift(),g=_+c.shift(),e.U.P.curveTo(l,m,x,y,_,v,g)}else if(P=="o26")for(c.length%2&&(v+=c.shift());c.length>0;)m=v,x=g+c.shift(),v=y=m+c.shift(),g=(_=x+c.shift())+c.shift(),e.U.P.curveTo(l,m,x,y,_,v,g);else if(P=="o27")for(c.length%2&&(g+=c.shift());c.length>0;)x=g,y=(m=v+c.shift())+c.shift(),_=x+c.shift(),v=y+c.shift(),g=_,e.U.P.curveTo(l,m,x,y,_,v,g);else if(P=="o10"||P=="o29"){var G=P=="o10"?a:o;if(c.length==0)console.debug("error: empty stack");else{var W=c.pop(),q=G.Subrs[W+G.Bias];r.x=v,r.y=g,r.nStems=h,r.haveWidth=u,r.width=d,r.open=f,e.U._drawCFF(q,r,o,a,l),v=r.x,g=r.y,h=r.nStems,u=r.haveWidth,d=r.width,f=r.open}}else if(P=="o30"||P=="o31"){var Y=c.length,ne=(Q=0,P=="o31");for(Q+=Y-(k=-3&Y);Q<k;)ne?(x=g,y=(m=v+c.shift())+c.shift(),g=(_=x+c.shift())+c.shift(),k-Q==5?(v=y+c.shift(),Q++):v=y,ne=!1):(m=v,x=g+c.shift(),y=m+c.shift(),_=x+c.shift(),v=y+c.shift(),k-Q==5?(g=_+c.shift(),Q++):g=_,ne=!0),e.U.P.curveTo(l,m,x,y,_,v,g),Q+=4}else{if((P+"").charAt(0)=="o")throw console.debug("Unknown operation: "+P,i),P;c.push(P)}}}r.x=v,r.y=g,r.nStems=h,r.haveWidth=u,r.width=d,r.open=f};var t=e,n={Typr:t};return s.Typr=t,s.default=n,Object.defineProperty(s,"__esModule",{value:!0}),s}({}).Typr}/*!
Custom bundle of woff2otf (https://github.com/arty-name/woff2otf) with fflate
(https://github.com/101arrowz/fflate) for use in Troika text rendering. 
Original licenses apply: 
- fflate: https://github.com/101arrowz/fflate/blob/master/LICENSE (MIT)
- woff2otf.js: https://github.com/arty-name/woff2otf/blob/master/woff2otf.js (Apache2)
*/function _C(){return function(s){var e=Uint8Array,t=Uint16Array,n=Uint32Array,i=new e([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),r=new e([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),o=new e([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),a=function(P,k){for(var V=new t(31),K=0;K<31;++K)V[K]=k+=1<<P[K-1];var N=new n(V[30]);for(K=1;K<30;++K)for(var Q=V[K];Q<V[K+1];++Q)N[Q]=Q-V[K]<<5|K;return[V,N]},l=a(i,2),c=l[0],h=l[1];c[28]=258,h[258]=28;for(var u=a(r,0)[0],d=new t(32768),f=0;f<32768;++f){var p=(43690&f)>>>1|(21845&f)<<1;p=(61680&(p=(52428&p)>>>2|(13107&p)<<2))>>>4|(3855&p)<<4,d[f]=((65280&p)>>>8|(255&p)<<8)>>>1}var v=function(P,k,V){for(var K=P.length,N=0,Q=new t(k);N<K;++N)++Q[P[N]-1];var Z,j=new t(k);for(N=0;N<k;++N)j[N]=j[N-1]+Q[N-1]<<1;{Z=new t(1<<k);var X=15-k;for(N=0;N<K;++N)if(P[N])for(var F=N<<4|P[N],J=k-P[N],$=j[P[N]-1]++<<J,G=$|(1<<J)-1;$<=G;++$)Z[d[$]>>>X]=F}return Z},g=new e(288);for(f=0;f<144;++f)g[f]=8;for(f=144;f<256;++f)g[f]=9;for(f=256;f<280;++f)g[f]=7;for(f=280;f<288;++f)g[f]=8;var m=new e(32);for(f=0;f<32;++f)m[f]=5;var x=v(g,9),y=v(m,5),_=function(P){for(var k=P[0],V=1;V<P.length;++V)P[V]>k&&(k=P[V]);return k},E=function(P,k,V){var K=k/8|0;return(P[K]|P[K+1]<<8)>>(7&k)&V},w=function(P,k){var V=k/8|0;return(P[V]|P[V+1]<<8|P[V+2]<<16)>>(7&k)},M=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],T=function(P,k,V){var K=new Error(k||M[P]);if(K.code=P,Error.captureStackTrace&&Error.captureStackTrace(K,T),!V)throw K;return K},S=function(P,k,V){var K=P.length;if(!K||V&&!V.l&&K<5)return k||new e(0);var N=!k||V,Q=!V||V.i;V||(V={}),k||(k=new e(3*K));var Z,j=function(Pe){var ut=k.length;if(Pe>ut){var tt=new e(Math.max(2*ut,Pe));tt.set(k),k=tt}},X=V.f||0,F=V.p||0,J=V.b||0,$=V.l,G=V.d,W=V.m,q=V.n,Y=8*K;do{if(!$){V.f=X=E(P,F,1);var ne=E(P,F+1,3);if(F+=3,!ne){var ge=P[(be=((Z=F)/8|0)+(7&Z&&1)+4)-4]|P[be-3]<<8,ve=be+ge;if(ve>K){Q&&T(0);break}N&&j(J+ge),k.set(P.subarray(be,ve),J),V.b=J+=ge,V.p=F=8*ve;continue}if(ne==1)$=x,G=y,W=9,q=5;else if(ne==2){var _e=E(P,F,31)+257,ee=E(P,F+10,15)+4,ue=_e+E(P,F+5,31)+1;F+=14;for(var B=new e(ue),Se=new e(19),de=0;de<ee;++de)Se[o[de]]=E(P,F+3*de,7);F+=3*ee;var Ee=_(Se),ce=(1<<Ee)-1,De=v(Se,Ee);for(de=0;de<ue;){var be,I=De[E(P,F,ce)];if(F+=15&I,(be=I>>>4)<16)B[de++]=be;else{var R=0,te=0;for(be==16?(te=3+E(P,F,3),F+=2,R=B[de-1]):be==17?(te=3+E(P,F,7),F+=3):be==18&&(te=11+E(P,F,127),F+=7);te--;)B[de++]=R}}var ae=B.subarray(0,_e),le=B.subarray(_e);W=_(ae),q=_(le),$=v(ae,W),G=v(le,q)}else T(1);if(F>Y){Q&&T(0);break}}N&&j(J+131072);for(var pe=(1<<W)-1,Ae=(1<<q)-1,Me=F;;Me=F){var Ce=(R=$[w(P,F)&pe])>>>4;if((F+=15&R)>Y){Q&&T(0);break}if(R||T(2),Ce<256)k[J++]=Ce;else{if(Ce==256){Me=F,$=null;break}var qe=Ce-254;if(Ce>264){var Re=i[de=Ce-257];qe=E(P,F,(1<<Re)-1)+c[de],F+=Re}var ze=G[w(P,F)&Ae],Be=ze>>>4;if(ze||T(3),F+=15&ze,le=u[Be],Be>3&&(Re=r[Be],le+=w(P,F)&(1<<Re)-1,F+=Re),F>Y){Q&&T(0);break}N&&j(J+131072);for(var He=J+qe;J<He;J+=4)k[J]=k[J-le],k[J+1]=k[J+1-le],k[J+2]=k[J+2-le],k[J+3]=k[J+3-le];J=He}}V.l=$,V.p=Me,V.b=J,$&&(X=1,V.m=W,V.d=G,V.n=q)}while(!X);return J==k.length?k:function(Pe,ut,tt){(tt==null||tt>Pe.length)&&(tt=Pe.length);var wt=new(Pe instanceof t?t:Pe instanceof n?n:e)(tt-ut);return wt.set(Pe.subarray(ut,tt)),wt}(k,0,J)},b=new e(0),D=typeof TextDecoder<"u"&&new TextDecoder;try{D.decode(b,{stream:!0})}catch{}return s.convert_streams=function(P){var k=new DataView(P),V=0;function K(){var _e=k.getUint16(V);return V+=2,_e}function N(){var _e=k.getUint32(V);return V+=4,_e}function Q(_e){ge.setUint16(ve,_e),ve+=2}function Z(_e){ge.setUint32(ve,_e),ve+=4}for(var j={signature:N(),flavor:N(),length:N(),numTables:K(),reserved:K(),totalSfntSize:N(),majorVersion:K(),minorVersion:K(),metaOffset:N(),metaLength:N(),metaOrigLength:N(),privOffset:N(),privLength:N()},X=0;Math.pow(2,X)<=j.numTables;)X++;X--;for(var F=16*Math.pow(2,X),J=16*j.numTables-F,$=12,G=[],W=0;W<j.numTables;W++)G.push({tag:N(),offset:N(),compLength:N(),origLength:N(),origChecksum:N()}),$+=16;var q,Y=new Uint8Array(12+16*G.length+G.reduce(function(_e,ee){return _e+ee.origLength+4},0)),ne=Y.buffer,ge=new DataView(ne),ve=0;return Z(j.flavor),Q(j.numTables),Q(F),Q(X),Q(J),G.forEach(function(_e){Z(_e.tag),Z(_e.origChecksum),Z($),Z(_e.origLength),_e.outOffset=$,($+=_e.origLength)%4!=0&&($+=4-$%4)}),G.forEach(function(_e){var ee,ue=P.slice(_e.offset,_e.offset+_e.compLength);if(_e.compLength!=_e.origLength){var B=new Uint8Array(_e.origLength);ee=new Uint8Array(ue,2),S(ee,B)}else B=new Uint8Array(ue);Y.set(B,_e.outOffset);var Se=0;($=_e.outOffset+_e.origLength)%4!=0&&(Se=4-$%4),Y.set(new Uint8Array(Se).buffer,_e.outOffset+_e.origLength),q=$+Se}),ne.slice(0,q)},Object.defineProperty(s,"__esModule",{value:!0}),s}({}).convert_streams}function yC(s,e){const t={M:2,L:2,Q:4,C:6,Z:0},n={C:"18g,ca,368,1kz",D:"17k,6,2,2+4,5+c,2+6,2+1,10+1,9+f,j+11,2+1,a,2,2+1,15+2,3,j+2,6+3,2+8,2,2,2+1,w+a,4+e,3+3,2,3+2,3+5,23+w,2f+4,3,2+9,2,b,2+3,3,1k+9,6+1,3+1,2+2,2+d,30g,p+y,1,1+1g,f+x,2,sd2+1d,jf3+4,f+3,2+4,2+2,b+3,42,2,4+2,2+1,2,3,t+1,9f+w,2,el+2,2+g,d+2,2l,2+1,5,3+1,2+1,2,3,6,16wm+1v",R:"17m+3,2,2,6+3,m,15+2,2+2,h+h,13,3+8,2,2,3+1,2,p+1,x,5+4,5,a,2,2,3,u,c+2,g+1,5,2+1,4+1,5j,6+1,2,b,2+2,f,2+1,1s+2,2,3+1,7,1ez0,2,2+1,4+4,b,4,3,b,42,2+2,4,3,2+1,2,o+3,ae,ep,x,2o+2,3+1,3,5+1,6",L:"x9u,jff,a,fd,jv",T:"4t,gj+33,7o+4,1+1,7c+18,2,2+1,2+1,2,21+a,2,1b+k,h,2u+6,3+5,3+1,2+3,y,2,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,3,7,6+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+d,1,1+1,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,ek,3+1,r+4,1e+4,6+5,2p+c,1+3,1,1+2,1+b,2db+2,3y,2p+v,ff+3,30+1,n9x,1+2,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,5s,6y+2,ea,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+9,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2,2b+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,470+8,at4+4,1o+6,t5,1s+3,2a,f5l+1,2+3,43o+2,a+7,1+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,1,gzau,v+2n,3l+6n"},i=1,r=2,o=4,a=8,l=16,c=32;let h;function u(M){if(!h){const T={R:r,L:i,D:o,C:l,U:c,T:a};h=new Map;for(let S in n){let b=0;n[S].split(",").forEach(D=>{let[P,k]=D.split("+");P=parseInt(P,36),k=k?parseInt(k,36):0,h.set(b+=P,T[S]);for(let V=k;V--;)h.set(++b,T[S])})}}return h.get(M)||c}const d=1,f=2,p=3,v=4,g=[null,"isol","init","fina","medi"];function m(M){const T=new Uint8Array(M.length);let S=c,b=d,D=-1;for(let P=0;P<M.length;P++){const k=M.codePointAt(P);let V=u(k)|0,K=d;V&a||(S&(i|o|l)?V&(r|o|l)?(K=p,(b===d||b===p)&&T[D]++):V&(i|c)&&(b===f||b===v)&&T[D]--:S&(r|c)&&(b===f||b===v)&&T[D]--,b=T[P]=K,S=V,D=P,k>65535&&P++)}return T}function x(M,T){const S=[];for(let D=0;D<T.length;D++){const P=T.codePointAt(D);P>65535&&D++,S.push(s.U.codeToGlyph(M,P))}const b=M.GSUB;if(b){const{lookupList:D,featureList:P}=b;let k;const V=/^(rlig|liga|mset|isol|init|fina|medi|half|pres|blws|ccmp)$/,K=[];P.forEach(N=>{if(V.test(N.tag))for(let Q=0;Q<N.tab.length;Q++){if(K[N.tab[Q]])continue;K[N.tab[Q]]=!0;const Z=D[N.tab[Q]],j=/^(isol|init|fina|medi)$/.test(N.tag);j&&!k&&(k=m(T));for(let X=0;X<S.length;X++)(!k||!j||g[k[X]]===N.tag)&&s.U._applySubs(S,X,Z,D)}})}return S}function y(M,T){const S=new Int16Array(T.length*3);let b=0;for(;b<T.length;b++){const V=T[b];if(V===-1)continue;S[b*3+2]=M.hmtx.aWidth[V];const K=M.GPOS;if(K){const N=K.lookupList;for(let Q=0;Q<N.length;Q++){const Z=N[Q];for(let j=0;j<Z.tabs.length;j++){const X=Z.tabs[j];if(Z.ltype===1){if(s._lctf.coverageIndex(X.coverage,V)!==-1&&X.pos){k(X.pos,b);break}}else if(Z.ltype===2){let F=null,J=D();if(J!==-1){const $=s._lctf.coverageIndex(X.coverage,T[J]);if($!==-1){if(X.fmt===1){const G=X.pairsets[$];for(let W=0;W<G.length;W++)G[W].gid2===V&&(F=G[W])}else if(X.fmt===2){const G=s.U._getGlyphClass(T[J],X.classDef1),W=s.U._getGlyphClass(V,X.classDef2);F=X.matrix[G][W]}if(F){F.val1&&k(F.val1,J),F.val2&&k(F.val2,b);break}}}}else if(Z.ltype===4){const F=s._lctf.coverageIndex(X.markCoverage,V);if(F!==-1){const J=D(P),$=J===-1?-1:s._lctf.coverageIndex(X.baseCoverage,T[J]);if($!==-1){const G=X.markArray[F],W=X.baseArray[$][G.markClass];S[b*3]=W.x-G.x+S[J*3]-S[J*3+2],S[b*3+1]=W.y-G.y+S[J*3+1];break}}}else if(Z.ltype===6){const F=s._lctf.coverageIndex(X.mark1Coverage,V);if(F!==-1){const J=D();if(J!==-1){const $=T[J];if(_(M,$)===3){const G=s._lctf.coverageIndex(X.mark2Coverage,$);if(G!==-1){const W=X.mark1Array[F],q=X.mark2Array[G][W.markClass];S[b*3]=q.x-W.x+S[J*3]-S[J*3+2],S[b*3+1]=q.y-W.y+S[J*3+1];break}}}}}}}}else if(M.kern&&!M.cff){const N=D();if(N!==-1){const Q=M.kern.glyph1.indexOf(T[N]);if(Q!==-1){const Z=M.kern.rval[Q].glyph2.indexOf(V);Z!==-1&&(S[N*3+2]+=M.kern.rval[Q].vals[Z])}}}}return S;function D(V){for(let K=b-1;K>=0;K--)if(T[K]!==-1&&(!V||V(T[K])))return K;return-1}function P(V){return _(M,V)===1}function k(V,K){for(let N=0;N<3;N++)S[K*3+N]+=V[N]||0}}function _(M,T){const S=M.GDEF&&M.GDEF.glyphClassDef;return S?s.U._getGlyphClass(T,S):0}function E(...M){for(let T=0;T<M.length;T++)if(typeof M[T]=="number")return M[T]}function w(M){const T=Object.create(null),S=M["OS/2"],b=M.hhea,D=M.head.unitsPerEm,P=E(S&&S.sTypoAscender,b&&b.ascender,D),k={unitsPerEm:D,ascender:P,descender:E(S&&S.sTypoDescender,b&&b.descender,0),capHeight:E(S&&S.sCapHeight,P),xHeight:E(S&&S.sxHeight,P),lineGap:E(S&&S.sTypoLineGap,b&&b.lineGap),supportsCodePoint(V){return s.U.codeToGlyph(M,V)>0},forEachGlyph(V,K,N,Q){let Z=0;const j=1/k.unitsPerEm*K,X=x(M,V);let F=0;const J=y(M,X);return X.forEach(($,G)=>{if($!==-1){let W=T[$];if(!W){const{cmds:q,crds:Y}=s.U.glyphToPath(M,$);let ne="",ge=0;for(let B=0,Se=q.length;B<Se;B++){const de=t[q[B]];ne+=q[B];for(let Ee=1;Ee<=de;Ee++)ne+=(Ee>1?",":"")+Y[ge++]}let ve,_e,ee,ue;if(Y.length){ve=_e=1/0,ee=ue=-1/0;for(let B=0,Se=Y.length;B<Se;B+=2){let de=Y[B],Ee=Y[B+1];de<ve&&(ve=de),Ee<_e&&(_e=Ee),de>ee&&(ee=de),Ee>ue&&(ue=Ee)}}else ve=ee=_e=ue=0;W=T[$]={index:$,advanceWidth:M.hmtx.aWidth[$],xMin:ve,yMin:_e,xMax:ee,yMax:ue,path:ne}}Q.call(null,W,Z+J[G*3]*j,J[G*3+1]*j,F),Z+=J[G*3+2]*j,N&&(Z+=N*K)}F+=V.codePointAt(F)>65535?2:1}),Z}};return k}return function(T){const S=new Uint8Array(T,0,4),b=s._bin.readASCII(S,0,4);if(b==="wOFF")T=e(T);else if(b==="wOF2")throw new Error("woff2 fonts not supported");return w(s.parse(T)[0])}}const xC=Jo({name:"Typr Font Parser",dependencies:[vC,_C,yC],init(s,e,t){const n=s(),i=e();return t(n,i)}});/*!
Custom bundle of @unicode-font-resolver/client v1.0.2 (https://github.com/lojjic/unicode-font-resolver)
for use in Troika text rendering. 
Original MIT license applies
*/function bC(){return function(s){var e=function(){this.buckets=new Map};e.prototype.add=function(y){var _=y>>5;this.buckets.set(_,(this.buckets.get(_)||0)|1<<(31&y))},e.prototype.has=function(y){var _=this.buckets.get(y>>5);return _!==void 0&&(_&1<<(31&y))!=0},e.prototype.serialize=function(){var y=[];return this.buckets.forEach(function(_,E){y.push((+E).toString(36)+":"+_.toString(36))}),y.join(",")},e.prototype.deserialize=function(y){var _=this;this.buckets.clear(),y.split(",").forEach(function(E){var w=E.split(":");_.buckets.set(parseInt(w[0],36),parseInt(w[1],36))})};var t=Math.pow(2,8),n=t-1,i=~n;function r(y){var _=function(w){return w&i}(y).toString(16),E=function(w){return(w&i)+t-1}(y).toString(16);return"codepoint-index/plane"+(y>>16)+"/"+_+"-"+E+".json"}function o(y,_){var E=y&n,w=_.codePointAt(E/6|0);return((w=(w||48)-48)&1<<E%6)!=0}function a(y,_){var E;(E=y,E.replace(/U\+/gi,"").replace(/^,+|,+$/g,"").split(/,+/).map(function(w){return w.split("-").map(function(M){return parseInt(M.trim(),16)})})).forEach(function(w){var M=w[0],T=w[1];T===void 0&&(T=M),_(M,T)})}function l(y,_){a(y,function(E,w){for(var M=E;M<=w;M++)_(M)})}var c={},h={},u=new WeakMap,d="https://cdn.jsdelivr.net/gh/lojjic/unicode-font-resolver@v1.0.1/packages/data";function f(y){var _=u.get(y);return _||(_=new e,l(y.ranges,function(E){return _.add(E)}),u.set(y,_)),_}var p,v=new Map;function g(y,_,E){return y[_]?_:y[E]?E:function(w){for(var M in w)return M}(y)}function m(y,_){var E=_;if(!y.includes(E)){E=1/0;for(var w=0;w<y.length;w++)Math.abs(y[w]-_)<Math.abs(E-_)&&(E=y[w])}return E}function x(y){return p||(p=new Set,l("9-D,20,85,A0,1680,2000-200A,2028-202F,205F,3000",function(_){p.add(_)})),p.has(y)}return s.CodePointSet=e,s.clearCache=function(){c={},h={}},s.getFontsForString=function(y,_){_===void 0&&(_={});var E,w=_.lang;w===void 0&&(w=new RegExp("\\p{Script=Hangul}","u").test(E=y)?"ko":new RegExp("\\p{Script=Hiragana}|\\p{Script=Katakana}","u").test(E)?"ja":"en");var M=_.category;M===void 0&&(M="sans-serif");var T=_.style;T===void 0&&(T="normal");var S=_.weight;S===void 0&&(S=400);var b=(_.dataUrl||d).replace(/\/$/g,""),D=new Map,P=new Uint8Array(y.length),k={},V={},K=new Array(y.length),N=new Map,Q=!1;function Z(F){var J=v.get(F);return J||(J=fetch(b+"/"+F).then(function($){if(!$.ok)throw new Error($.statusText);return $.json().then(function(G){if(!Array.isArray(G)||G[0]!==1)throw new Error("Incorrect schema version; need 1, got "+G[0]);return G[1]})}).catch(function($){if(b!==d)return Q||(console.error('unicode-font-resolver: Failed loading from dataUrl "'+b+'", trying default CDN. '+$.message),Q=!0),b=d,v.delete(F),Z(F);throw $}),v.set(F,J)),J}for(var j=function(F){var J=y.codePointAt(F),$=r(J);K[F]=$,c[$]||N.has($)||N.set($,Z($).then(function(G){c[$]=G})),J>65535&&(F++,X=F)},X=0;X<y.length;X++)j(X);return Promise.all(N.values()).then(function(){N.clear();for(var F=function($){var G=y.codePointAt($),W=null,q=c[K[$]],Y=void 0;for(var ne in q){var ge=V[ne];if(ge===void 0&&(ge=V[ne]=new RegExp(ne).test(w||"en")),ge){for(var ve in Y=ne,q[ne])if(o(G,q[ne][ve])){W=ve;break}break}}if(!W){e:for(var _e in q)if(_e!==Y){for(var ee in q[_e])if(o(G,q[_e][ee])){W=ee;break e}}}W||(console.debug("No font coverage for U+"+G.toString(16)),W="latin"),K[$]=W,h[W]||N.has(W)||N.set(W,Z("font-meta/"+W+".json").then(function(ue){h[W]=ue})),G>65535&&($++,J=$)},J=0;J<y.length;J++)F(J);return Promise.all(N.values())}).then(function(){for(var F,J=null,$=0;$<y.length;$++){var G=y.codePointAt($);if(J&&(x(G)||f(J).has(G)))P[$]=P[$-1];else{J=h[K[$]];var W=k[J.id];if(!W){var q=J.typeforms,Y=g(q,M,"sans-serif"),ne=g(q[Y],T,"normal"),ge=m((F=q[Y])===null||F===void 0?void 0:F[ne],S);W=k[J.id]=b+"/font-files/"+J.id+"/"+Y+"."+ne+"."+ge+".woff"}var ve=D.get(W);ve==null&&(ve=D.size,D.set(W,ve)),P[$]=ve}G>65535&&($++,P[$]=P[$-1])}return{fontUrls:Array.from(D.keys()),chars:P}})},Object.defineProperty(s,"__esModule",{value:!0}),s}({})}function SC(s,e){const t=Object.create(null),n=Object.create(null);function i(o,a){const l=c=>{console.error(`Failure loading font ${o}`,c)};try{const c=new XMLHttpRequest;c.open("get",o,!0),c.responseType="arraybuffer",c.onload=function(){if(c.status>=400)l(new Error(c.statusText));else if(c.status>0)try{const h=s(c.response);h.src=o,a(h)}catch(h){l(h)}},c.onerror=l,c.send()}catch(c){l(c)}}function r(o,a){let l=t[o];l?a(l):n[o]?n[o].push(a):(n[o]=[a],i(o,c=>{c.src=o,t[o]=c,n[o].forEach(h=>h(c)),delete n[o]}))}return function(o,a,{lang:l,fonts:c=[],style:h="normal",weight:u="normal",unicodeFontsURL:d}={}){const f=new Uint8Array(o.length),p=[];o.length||x();const v=new Map,g=[];if(h!=="italic"&&(h="normal"),typeof u!="number"&&(u=u==="bold"?700:400),c&&!Array.isArray(c)&&(c=[c]),c=c.slice().filter(_=>!_.lang||_.lang.test(l)).reverse(),c.length){let M=0;(function T(S=0){for(let b=S,D=o.length;b<D;b++){const P=o.codePointAt(b);if(M===1&&p[f[b-1]].supportsCodePoint(P)||/\s/.test(o[b]))f[b]=f[b-1],M===2&&(g[g.length-1][1]=b);else for(let k=f[b],V=c.length;k<=V;k++)if(k===V){const K=M===2?g[g.length-1]:g[g.length]=[b,b];K[1]=b,M=2}else{f[b]=k;const{src:K,unicodeRange:N}=c[k];if(!N||y(P,N)){const Q=t[K];if(!Q){r(K,()=>{T(b)});return}if(Q.supportsCodePoint(P)){let Z=v.get(Q);typeof Z!="number"&&(Z=p.length,p.push(Q),v.set(Q,Z)),f[b]=Z,M=1;break}}}P>65535&&b+1<D&&(f[b+1]=f[b],b++,M===2&&(g[g.length-1][1]=b))}m()})()}else g.push([0,o.length-1]),m();function m(){if(g.length){const _=g.map(E=>o.substring(E[0],E[1]+1)).join(`
`);e.getFontsForString(_,{lang:l||void 0,style:h,weight:u,dataUrl:d}).then(({fontUrls:E,chars:w})=>{const M=p.length;let T=0;g.forEach(b=>{for(let D=0,P=b[1]-b[0];D<=P;D++)f[b[0]+D]=w[T++]+M;T++});let S=0;E.forEach((b,D)=>{r(b,P=>{p[D+M]=P,++S===E.length&&x()})})})}else x()}function x(){a({chars:f,fonts:p})}function y(_,E){for(let w=0;w<E.length;w++){const[M,T=M]=E[w];if(M<=_&&_<=T)return!0}return!1}}}const MC=Jo({name:"FontResolver",dependencies:[SC,xC,bC],init(s,e,t){return s(e,t())}});function wC(s,e){const n=/[\u00AD\u034F\u061C\u115F-\u1160\u17B4-\u17B5\u180B-\u180E\u200B-\u200F\u202A-\u202E\u2060-\u206F\u3164\uFE00-\uFE0F\uFEFF\uFFA0\uFFF0-\uFFF8]/,i="[^\\S\\u00A0]",r=new RegExp(`${i}|[\\-\\u007C\\u00AD\\u2010\\u2012-\\u2014\\u2027\\u2056\\u2E17\\u2E40]`);function o({text:p,lang:v,fonts:g,style:m,weight:x,preResolvedFonts:y,unicodeFontsURL:_},E){const w=({chars:M,fonts:T})=>{let S,b;const D=[];for(let P=0;P<M.length;P++)M[P]!==b?(b=M[P],D.push(S={start:P,end:P,fontObj:T[M[P]]})):S.end=P;E(D)};y?w(y):s(p,w,{lang:v,fonts:g,style:m,weight:x,unicodeFontsURL:_})}function a({text:p="",font:v,lang:g,sdfGlyphSize:m=64,fontSize:x=400,fontWeight:y=1,fontStyle:_="normal",letterSpacing:E=0,lineHeight:w="normal",maxWidth:M=1/0,direction:T,textAlign:S="left",textIndent:b=0,whiteSpace:D="normal",overflowWrap:P="normal",anchorX:k=0,anchorY:V=0,metricsOnly:K=!1,unicodeFontsURL:N,preResolvedFonts:Q=null,includeCaretPositions:Z=!1,chunkedBoundsSize:j=8192,colorRanges:X=null},F){const J=u(),$={fontLoad:0,typesetting:0};p.indexOf("\r")>-1&&(console.info("Typesetter: got text with \\r chars; normalizing to \\n"),p=p.replace(/\r\n/g,`
`).replace(/\r/g,`
`)),x=+x,E=+E,M=+M,w=w||"normal",b=+b,o({text:p,lang:g,style:_,weight:y,fonts:typeof v=="string"?[{src:v}]:v,unicodeFontsURL:N,preResolvedFonts:Q},G=>{$.fontLoad=u()-J;const W=isFinite(M);let q=null,Y=null,ne=null,ge=null,ve=null,_e=null,ee=null,ue=null,B=0,Se=0,de=D!=="nowrap";const Ee=new Map,ce=u();let De=b,be=0,I=new d;const R=[I];G.forEach(Ae=>{const{fontObj:Me}=Ae,{ascender:Ce,descender:qe,unitsPerEm:Re,lineGap:ze,capHeight:Be,xHeight:He}=Me;let Pe=Ee.get(Me);if(!Pe){const Te=x/Re,he=w==="normal"?(Ce-qe+ze)*Te:w*x,Ie=(he-(Ce-qe)*Te)/2,Oe=Math.min(he,(Ce-qe)*Te),Le=(Ce+qe)/2*Te+Oe/2;Pe={index:Ee.size,src:Me.src,fontObj:Me,fontSizeMult:Te,unitsPerEm:Re,ascender:Ce*Te,descender:qe*Te,capHeight:Be*Te,xHeight:He*Te,lineHeight:he,baseline:-Ie-Ce*Te,caretTop:Le,caretBottom:Le-Oe},Ee.set(Me,Pe)}const{fontSizeMult:ut}=Pe,tt=p.slice(Ae.start,Ae.end+1);let wt,ie;Me.forEachGlyph(tt,x,E,(Te,he,Ie,Oe)=>{he+=be,Oe+=Ae.start,wt=he,ie=Te;const Le=p.charAt(Oe),ot=Te.advanceWidth*ut,xt=I.count;let ct;if("isEmpty"in Te||(Te.isWhitespace=!!Le&&new RegExp(i).test(Le),Te.canBreakAfter=!!Le&&r.test(Le),Te.isEmpty=Te.xMin===Te.xMax||Te.yMin===Te.yMax||n.test(Le)),!Te.isWhitespace&&!Te.isEmpty&&Se++,de&&W&&!Te.isWhitespace&&he+ot+De>M&&xt){if(I.glyphAt(xt-1).glyphObj.canBreakAfter)ct=new d,De=-he;else for(let Yt=xt;Yt--;)if(Yt===0&&P==="break-word"){ct=new d,De=-he;break}else if(I.glyphAt(Yt).glyphObj.canBreakAfter){ct=I.splitAt(Yt+1);const Jt=ct.glyphAt(0).x;De-=Jt;for(let sn=ct.count;sn--;)ct.glyphAt(sn).x-=Jt;break}ct&&(I.isSoftWrapped=!0,I=ct,R.push(I),B=M)}let rt=I.glyphAt(I.count);rt.glyphObj=Te,rt.x=he+De,rt.y=Ie,rt.width=ot,rt.charIndex=Oe,rt.fontData=Pe,Le===`
`&&(I=new d,R.push(I),De=-(he+ot+E*x)+b)}),be=wt+ie.advanceWidth*ut+E*x});let te=0;R.forEach(Ae=>{let Me=!0;for(let Ce=Ae.count;Ce--;){const qe=Ae.glyphAt(Ce);Me&&!qe.glyphObj.isWhitespace&&(Ae.width=qe.x+qe.width,Ae.width>B&&(B=Ae.width),Me=!1);let{lineHeight:Re,capHeight:ze,xHeight:Be,baseline:He}=qe.fontData;Re>Ae.lineHeight&&(Ae.lineHeight=Re);const Pe=He-Ae.baseline;Pe<0&&(Ae.baseline+=Pe,Ae.cap+=Pe,Ae.ex+=Pe),Ae.cap=Math.max(Ae.cap,Ae.baseline+ze),Ae.ex=Math.max(Ae.ex,Ae.baseline+Be)}Ae.baseline-=te,Ae.cap-=te,Ae.ex-=te,te+=Ae.lineHeight});let ae=0,le=0;if(k&&(typeof k=="number"?ae=-k:typeof k=="string"&&(ae=-B*(k==="left"?0:k==="center"?.5:k==="right"?1:c(k)))),V&&(typeof V=="number"?le=-V:typeof V=="string"&&(le=V==="top"?0:V==="top-baseline"?-R[0].baseline:V==="top-cap"?-R[0].cap:V==="top-ex"?-R[0].ex:V==="middle"?te/2:V==="bottom"?te:V==="bottom-baseline"?-R[R.length-1].baseline:c(V)*te)),!K){const Ae=e.getEmbeddingLevels(p,T);q=new Uint16Array(Se),Y=new Uint8Array(Se),ne=new Float32Array(Se*2),ge={},ee=[1/0,1/0,-1/0,-1/0],ue=[],Z&&(_e=new Float32Array(p.length*4)),X&&(ve=new Uint8Array(Se*3));let Me=0,Ce=-1,qe=-1,Re,ze;if(R.forEach((Be,He)=>{let{count:Pe,width:ut}=Be;if(Pe>0){let tt=0;for(let Oe=Pe;Oe--&&Be.glyphAt(Oe).glyphObj.isWhitespace;)tt++;let wt=0,ie=0;if(S==="center")wt=(B-ut)/2;else if(S==="right")wt=B-ut;else if(S==="justify"&&Be.isSoftWrapped){let Oe=0;for(let Le=Pe-tt;Le--;)Be.glyphAt(Le).glyphObj.isWhitespace&&Oe++;ie=(B-ut)/Oe}if(ie||wt){let Oe=0;for(let Le=0;Le<Pe;Le++){let ot=Be.glyphAt(Le);const xt=ot.glyphObj;ot.x+=wt+Oe,ie!==0&&xt.isWhitespace&&Le<Pe-tt&&(Oe+=ie,ot.width+=ie)}}const Te=e.getReorderSegments(p,Ae,Be.glyphAt(0).charIndex,Be.glyphAt(Be.count-1).charIndex);for(let Oe=0;Oe<Te.length;Oe++){const[Le,ot]=Te[Oe];let xt=1/0,ct=-1/0;for(let rt=0;rt<Pe;rt++)if(Be.glyphAt(rt).charIndex>=Le){let Yt=rt,Jt=rt;for(;Jt<Pe;Jt++){let sn=Be.glyphAt(Jt);if(sn.charIndex>ot)break;Jt<Pe-tt&&(xt=Math.min(xt,sn.x),ct=Math.max(ct,sn.x+sn.width))}for(let sn=Yt;sn<Jt;sn++){const jn=Be.glyphAt(sn);jn.x=ct-(jn.x+jn.width-xt)}break}}let he;const Ie=Oe=>he=Oe;for(let Oe=0;Oe<Pe;Oe++){const Le=Be.glyphAt(Oe);he=Le.glyphObj;const ot=he.index,xt=Ae.levels[Le.charIndex]&1;if(xt){const ct=e.getMirroredCharacter(p[Le.charIndex]);ct&&Le.fontData.fontObj.forEachGlyph(ct,0,0,Ie)}if(Z){const{charIndex:ct,fontData:rt}=Le,Yt=Le.x+ae,Jt=Le.x+Le.width+ae;_e[ct*4]=xt?Jt:Yt,_e[ct*4+1]=xt?Yt:Jt,_e[ct*4+2]=Be.baseline+rt.caretBottom+le,_e[ct*4+3]=Be.baseline+rt.caretTop+le;const sn=ct-Ce;sn>1&&h(_e,Ce,sn),Ce=ct}if(X){const{charIndex:ct}=Le;for(;ct>qe;)qe++,X.hasOwnProperty(qe)&&(ze=X[qe])}if(!he.isWhitespace&&!he.isEmpty){const ct=Me++,{fontSizeMult:rt,src:Yt,index:Jt}=Le.fontData,sn=ge[Yt]||(ge[Yt]={});sn[ot]||(sn[ot]={path:he.path,pathBounds:[he.xMin,he.yMin,he.xMax,he.yMax]});const jn=Le.x+ae,In=Le.y+Be.baseline+le;ne[ct*2]=jn,ne[ct*2+1]=In;const si=jn+he.xMin*rt,Ai=In+he.yMin*rt,Ci=jn+he.xMax*rt,Zn=In+he.yMax*rt;si<ee[0]&&(ee[0]=si),Ai<ee[1]&&(ee[1]=Ai),Ci>ee[2]&&(ee[2]=Ci),Zn>ee[3]&&(ee[3]=Zn),ct%j===0&&(Re={start:ct,end:ct,rect:[1/0,1/0,-1/0,-1/0]},ue.push(Re)),Re.end++;const _n=Re.rect;if(si<_n[0]&&(_n[0]=si),Ai<_n[1]&&(_n[1]=Ai),Ci>_n[2]&&(_n[2]=Ci),Zn>_n[3]&&(_n[3]=Zn),q[ct]=ot,Y[ct]=Jt,X){const di=ct*3;ve[di]=ze>>16&255,ve[di+1]=ze>>8&255,ve[di+2]=ze&255}}}}}),_e){const Be=p.length-Ce;Be>1&&h(_e,Ce,Be)}}const pe=[];Ee.forEach(({index:Ae,src:Me,unitsPerEm:Ce,ascender:qe,descender:Re,lineHeight:ze,capHeight:Be,xHeight:He})=>{pe[Ae]={src:Me,unitsPerEm:Ce,ascender:qe,descender:Re,lineHeight:ze,capHeight:Be,xHeight:He}}),$.typesetting=u()-ce,F({glyphIds:q,glyphFontIndices:Y,glyphPositions:ne,glyphData:ge,fontData:pe,caretPositions:_e,glyphColors:ve,chunkedBounds:ue,fontSize:x,topBaseline:le+R[0].baseline,blockBounds:[ae,le-te,ae+B,le],visibleBounds:ee,timings:$})})}function l(p,v){a({...p,metricsOnly:!0},g=>{const[m,x,y,_]=g.blockBounds;v({width:y-m,height:_-x})})}function c(p){let v=p.match(/^([\d.]+)%$/),g=v?parseFloat(v[1]):NaN;return isNaN(g)?0:g/100}function h(p,v,g){const m=p[v*4],x=p[v*4+1],y=p[v*4+2],_=p[v*4+3],E=(x-m)/g;for(let w=0;w<g;w++){const M=(v+w)*4;p[M]=m+E*w,p[M+1]=m+E*(w+1),p[M+2]=y,p[M+3]=_}}function u(){return(self.performance||Date).now()}function d(){this.data=[]}const f=["glyphObj","x","y","width","charIndex","fontData"];return d.prototype={width:0,lineHeight:0,baseline:0,cap:0,ex:0,isSoftWrapped:!1,get count(){return Math.ceil(this.data.length/f.length)},glyphAt(p){let v=d.flyweight;return v.data=this.data,v.index=p,v},splitAt(p){let v=new d;return v.data=this.data.splice(p*f.length),v}},d.flyweight=f.reduce((p,v,g,m)=>(Object.defineProperty(p,v,{get(){return this.data[this.index*f.length+g]},set(x){this.data[this.index*f.length+g]=x}}),p),{data:null,index:0}),{typeset:a,measure:l}}const Js=()=>(self.performance||Date).now(),cu=b_();let Bg;function EC(s,e,t,n,i,r,o,a,l,c,h=!0){return h?AC(s,e,t,n,i,r,o,a,l,c).then(null,u=>(Bg||(console.warn("WebGL SDF generation failed, falling back to JS",u),Bg=!0),Gg(s,e,t,n,i,r,o,a,l,c))):Gg(s,e,t,n,i,r,o,a,l,c)}const Pc=[],TC=5;let Kd=0;function w_(){const s=Js();for(;Pc.length&&Js()-s<TC;)Pc.shift()();Kd=Pc.length?setTimeout(w_,0):0}const AC=(...s)=>new Promise((e,t)=>{Pc.push(()=>{const n=Js();try{cu.webgl.generateIntoCanvas(...s),e({timing:Js()-n})}catch(i){t(i)}}),Kd||(Kd=setTimeout(w_,0))}),CC=4,RC=2e3,zg={};let PC=0;function Gg(s,e,t,n,i,r,o,a,l,c){const h="TroikaTextSDFGenerator_JS_"+PC++%CC;let u=zg[h];return u||(u=zg[h]={workerModule:Jo({name:h,workerId:h,dependencies:[b_,Js],init(d,f){const p=d().javascript.generate;return function(...v){const g=f();return{textureData:p(...v),timing:f()-g}}},getTransferables(d){return[d.textureData.buffer]}}),requests:0,idleTimer:null}),u.requests++,clearTimeout(u.idleTimer),u.workerModule(s,e,t,n,i,r).then(({textureData:d,timing:f})=>{const p=Js(),v=new Uint8Array(d.length*4);for(let g=0;g<d.length;g++)v[g*4+c]=d[g];return cu.webglUtils.renderImageData(o,v,a,l,s,e,1<<3-c),f+=Js()-p,--u.requests===0&&(u.idleTimer=setTimeout(()=>{lC(h)},RC)),{timing:f}})}function IC(s){s._warm||(cu.webgl.isSupported(s),s._warm=!0)}const DC=cu.webglUtils.resizeWebGLCanvasWithoutClearing,Ma={unicodeFontsURL:null,sdfGlyphSize:64,sdfMargin:1/16,sdfExponent:9,textureWidth:2048},LC=new Ge;function Uo(){return(self.performance||Date).now()}const Vg=Object.create(null);function E_(s,e){s=OC({},s);const t=Uo(),n=[];if(s.font&&n.push({label:"user",src:FC(s.font)}),s.font=n,s.text=""+s.text,s.sdfGlyphSize=s.sdfGlyphSize||Ma.sdfGlyphSize,s.unicodeFontsURL=s.unicodeFontsURL||Ma.unicodeFontsURL,s.colorRanges!=null){let u={};for(let d in s.colorRanges)if(s.colorRanges.hasOwnProperty(d)){let f=s.colorRanges[d];typeof f!="number"&&(f=LC.set(f).getHex()),u[d]=f}s.colorRanges=u}Object.freeze(s);const{textureWidth:i,sdfExponent:r}=Ma,{sdfGlyphSize:o}=s,a=i/o*4;let l=Vg[o];if(!l){const u=document.createElement("canvas");u.width=i,u.height=o*256/a,l=Vg[o]={glyphCount:0,sdfGlyphSize:o,sdfCanvas:u,sdfTexture:new pn(u,void 0,void 0,void 0,Sn,Sn),contextLost:!1,glyphsByFont:new Map},l.sdfTexture.generateMipmaps=!1,UC(l)}const{sdfTexture:c,sdfCanvas:h}=l;BC(s).then(u=>{const{glyphIds:d,glyphFontIndices:f,fontData:p,glyphPositions:v,fontSize:g,timings:m}=u,x=[],y=new Float32Array(d.length*4);let _=0,E=0;const w=Uo(),M=p.map(P=>{let k=l.glyphsByFont.get(P.src);return k||l.glyphsByFont.set(P.src,k=new Map),k});d.forEach((P,k)=>{const V=f[k],{src:K,unitsPerEm:N}=p[V];let Q=M[V].get(P);if(!Q){const{path:J,pathBounds:$}=u.glyphData[K][P],G=Math.max($[2]-$[0],$[3]-$[1])/o*(Ma.sdfMargin*o+.5),W=l.glyphCount++,q=[$[0]-G,$[1]-G,$[2]+G,$[3]+G];M[V].set(P,Q={path:J,atlasIndex:W,sdfViewBox:q}),x.push(Q)}const{sdfViewBox:Z}=Q,j=v[E++],X=v[E++],F=g/N;y[_++]=j+Z[0]*F,y[_++]=X+Z[1]*F,y[_++]=j+Z[2]*F,y[_++]=X+Z[3]*F,d[k]=Q.atlasIndex}),m.quads=(m.quads||0)+(Uo()-w);const T=Uo();m.sdf={};const S=h.height,b=Math.ceil(l.glyphCount/a),D=Math.pow(2,Math.ceil(Math.log2(b*o)));D>S&&(console.info(`Increasing SDF texture size ${S}->${D}`),DC(h,i,D),c.dispose()),Promise.all(x.map(P=>T_(P,l,s.gpuAccelerateSDF).then(({timing:k})=>{m.sdf[P.atlasIndex]=k}))).then(()=>{x.length&&!l.contextLost&&(A_(l),c.needsUpdate=!0),m.sdfTotal=Uo()-T,m.total=Uo()-t,e(Object.freeze({parameters:s,sdfTexture:c,sdfGlyphSize:o,sdfExponent:r,glyphBounds:y,glyphAtlasIndices:d,glyphColors:u.glyphColors,caretPositions:u.caretPositions,chunkedBounds:u.chunkedBounds,ascender:u.ascender,descender:u.descender,lineHeight:u.lineHeight,capHeight:u.capHeight,xHeight:u.xHeight,topBaseline:u.topBaseline,blockBounds:u.blockBounds,visibleBounds:u.visibleBounds,timings:u.timings}))})}),Promise.resolve().then(()=>{l.contextLost||IC(h)})}function T_({path:s,atlasIndex:e,sdfViewBox:t},{sdfGlyphSize:n,sdfCanvas:i,contextLost:r},o){if(r)return Promise.resolve({timing:-1});const{textureWidth:a,sdfExponent:l}=Ma,c=Math.max(t[2]-t[0],t[3]-t[1]),h=Math.floor(e/4),u=h%(a/n)*n,d=Math.floor(h/(a/n))*n,f=e%4;return EC(n,n,s,t,c,l,i,u,d,f,o)}function UC(s){const e=s.sdfCanvas;e.addEventListener("webglcontextlost",t=>{console.log("Context Lost",t),t.preventDefault(),s.contextLost=!0}),e.addEventListener("webglcontextrestored",t=>{console.log("Context Restored",t),s.contextLost=!1;const n=[];s.glyphsByFont.forEach(i=>{i.forEach(r=>{n.push(T_(r,s,!0))})}),Promise.all(n).then(()=>{A_(s),s.sdfTexture.needsUpdate=!0})})}function NC({font:s,characters:e,sdfGlyphSize:t},n){let i=Array.isArray(e)?e.join(`
`):""+e;E_({font:s,sdfGlyphSize:t,text:i},n)}function OC(s,e){for(let t in e)e.hasOwnProperty(t)&&(s[t]=e[t]);return s}let bc;function FC(s){return bc||(bc=typeof document>"u"?{}:document.createElement("a")),bc.href=s,bc.href}function A_(s){if(typeof createImageBitmap!="function"){console.info("Safari<15: applying SDF canvas workaround");const{sdfCanvas:e,sdfTexture:t}=s,{width:n,height:i}=e,r=s.sdfCanvas.getContext("webgl");let o=t.image.data;(!o||o.length!==n*i*4)&&(o=new Uint8Array(n*i*4),t.image={width:n,height:i,data:o},t.flipY=!1,t.isDataTexture=!0),r.readPixels(0,0,n,i,r.RGBA,r.UNSIGNED_BYTE,o)}}const kC=Jo({name:"Typesetter",dependencies:[wC,MC,iC],init(s,e,t){return s(e,t())}}),BC=Jo({name:"Typesetter",dependencies:[kC],init(s){return function(e){return new Promise(t=>{s.typeset(e,t)})}},getTransferables(s){const e=[];for(let t in s)s[t]&&s[t].buffer&&e.push(s[t].buffer);return e}}),Hg={};function zC(s){let e=Hg[s];return e||(e=Hg[s]=new sr(1,1,s,s).translate(.5,.5,0)),e}const GC="aTroikaGlyphBounds",Wg="aTroikaGlyphIndex",VC="aTroikaGlyphColor";class HC extends nu{constructor(){super(),this.detail=1,this.curveRadius=0,this.groups=[{start:0,count:1/0,materialIndex:0},{start:0,count:1/0,materialIndex:1}],this.boundingSphere=new An,this.boundingBox=new Mn}computeBoundingSphere(){}computeBoundingBox(){}set detail(e){if(e!==this._detail){this._detail=e,(typeof e!="number"||e<1)&&(e=1);let t=zC(e);["position","normal","uv"].forEach(n=>{this.attributes[n]=t.attributes[n].clone()}),this.setIndex(t.getIndex().clone())}}get detail(){return this._detail}set curveRadius(e){e!==this._curveRadius&&(this._curveRadius=e,this._updateBounds())}get curveRadius(){return this._curveRadius}updateGlyphs(e,t,n,i,r){this.updateAttributeData(GC,e,4),this.updateAttributeData(Wg,t,1),this.updateAttributeData(VC,r,3),this._blockBounds=n,this._chunkedBounds=i,this.instanceCount=t.length,this._updateBounds()}_updateBounds(){const e=this._blockBounds;if(e){const{curveRadius:t,boundingBox:n}=this;if(t){const{PI:i,floor:r,min:o,max:a,sin:l,cos:c}=Math,h=i/2,u=i*2,d=Math.abs(t),f=e[0]/d,p=e[2]/d,v=r((f+h)/u)!==r((p+h)/u)?-d:o(l(f)*d,l(p)*d),g=r((f-h)/u)!==r((p-h)/u)?d:a(l(f)*d,l(p)*d),m=r((f+i)/u)!==r((p+i)/u)?d*2:a(d-c(f)*d,d-c(p)*d);n.min.set(v,e[1],t<0?-m:0),n.max.set(g,e[3],t<0?0:m)}else n.min.set(e[0],e[1],0),n.max.set(e[2],e[3],0);n.getBoundingSphere(this.boundingSphere)}}applyClipRect(e){let t=this.getAttribute(Wg).count,n=this._chunkedBounds;if(n)for(let i=n.length;i--;){t=n[i].end;let r=n[i].rect;if(r[1]<e.w&&r[3]>e.y&&r[0]<e.z&&r[2]>e.x)break}this.instanceCount=t}updateAttributeData(e,t,n){const i=this.getAttribute(e);t?i&&i.array.length===t.length?(i.array.set(t),i.needsUpdate=!0):(this.setAttribute(e,new to(t,n)),delete this._maxInstanceCount,this.dispose()):i&&this.deleteAttribute(e)}}const WC=`
uniform vec2 uTroikaSDFTextureSize;
uniform float uTroikaSDFGlyphSize;
uniform vec4 uTroikaTotalBounds;
uniform vec4 uTroikaClipRect;
uniform mat3 uTroikaOrient;
uniform bool uTroikaUseGlyphColors;
uniform float uTroikaDistanceOffset;
uniform float uTroikaBlurRadius;
uniform vec2 uTroikaPositionOffset;
uniform float uTroikaCurveRadius;
attribute vec4 aTroikaGlyphBounds;
attribute float aTroikaGlyphIndex;
attribute vec3 aTroikaGlyphColor;
varying vec2 vTroikaGlyphUV;
varying vec4 vTroikaTextureUVBounds;
varying float vTroikaTextureChannel;
varying vec3 vTroikaGlyphColor;
varying vec2 vTroikaGlyphDimensions;
`,XC=`
vec4 bounds = aTroikaGlyphBounds;
bounds.xz += uTroikaPositionOffset.x;
bounds.yw -= uTroikaPositionOffset.y;

vec4 outlineBounds = vec4(
  bounds.xy - uTroikaDistanceOffset - uTroikaBlurRadius,
  bounds.zw + uTroikaDistanceOffset + uTroikaBlurRadius
);
vec4 clippedBounds = vec4(
  clamp(outlineBounds.xy, uTroikaClipRect.xy, uTroikaClipRect.zw),
  clamp(outlineBounds.zw, uTroikaClipRect.xy, uTroikaClipRect.zw)
);

vec2 clippedXY = (mix(clippedBounds.xy, clippedBounds.zw, position.xy) - bounds.xy) / (bounds.zw - bounds.xy);

position.xy = mix(bounds.xy, bounds.zw, clippedXY);

uv = (position.xy - uTroikaTotalBounds.xy) / (uTroikaTotalBounds.zw - uTroikaTotalBounds.xy);

float rad = uTroikaCurveRadius;
if (rad != 0.0) {
  float angle = position.x / rad;
  position.xz = vec2(sin(angle) * rad, rad - cos(angle) * rad);
  normal.xz = vec2(sin(angle), cos(angle));
}
  
position = uTroikaOrient * position;
normal = uTroikaOrient * normal;

vTroikaGlyphUV = clippedXY.xy;
vTroikaGlyphDimensions = vec2(bounds[2] - bounds[0], bounds[3] - bounds[1]);


float txCols = uTroikaSDFTextureSize.x / uTroikaSDFGlyphSize;
vec2 txUvPerSquare = uTroikaSDFGlyphSize / uTroikaSDFTextureSize;
vec2 txStartUV = txUvPerSquare * vec2(
  mod(floor(aTroikaGlyphIndex / 4.0), txCols),
  floor(floor(aTroikaGlyphIndex / 4.0) / txCols)
);
vTroikaTextureUVBounds = vec4(txStartUV, vec2(txStartUV) + txUvPerSquare);
vTroikaTextureChannel = mod(aTroikaGlyphIndex, 4.0);
`,YC=`
uniform sampler2D uTroikaSDFTexture;
uniform vec2 uTroikaSDFTextureSize;
uniform float uTroikaSDFGlyphSize;
uniform float uTroikaSDFExponent;
uniform float uTroikaDistanceOffset;
uniform float uTroikaFillOpacity;
uniform float uTroikaOutlineOpacity;
uniform float uTroikaBlurRadius;
uniform vec3 uTroikaStrokeColor;
uniform float uTroikaStrokeWidth;
uniform float uTroikaStrokeOpacity;
uniform bool uTroikaSDFDebug;
varying vec2 vTroikaGlyphUV;
varying vec4 vTroikaTextureUVBounds;
varying float vTroikaTextureChannel;
varying vec2 vTroikaGlyphDimensions;

float troikaSdfValueToSignedDistance(float alpha) {
  // Inverse of exponential encoding in webgl-sdf-generator
  
  float maxDimension = max(vTroikaGlyphDimensions.x, vTroikaGlyphDimensions.y);
  float absDist = (1.0 - pow(2.0 * (alpha > 0.5 ? 1.0 - alpha : alpha), 1.0 / uTroikaSDFExponent)) * maxDimension;
  float signedDist = absDist * (alpha > 0.5 ? -1.0 : 1.0);
  return signedDist;
}

float troikaGlyphUvToSdfValue(vec2 glyphUV) {
  vec2 textureUV = mix(vTroikaTextureUVBounds.xy, vTroikaTextureUVBounds.zw, glyphUV);
  vec4 rgba = texture2D(uTroikaSDFTexture, textureUV);
  float ch = floor(vTroikaTextureChannel + 0.5); //NOTE: can't use round() in WebGL1
  return ch == 0.0 ? rgba.r : ch == 1.0 ? rgba.g : ch == 2.0 ? rgba.b : rgba.a;
}

float troikaGlyphUvToDistance(vec2 uv) {
  return troikaSdfValueToSignedDistance(troikaGlyphUvToSdfValue(uv));
}

float troikaGetAADist() {
  
  #if defined(GL_OES_standard_derivatives) || __VERSION__ >= 300
  return length(fwidth(vTroikaGlyphUV * vTroikaGlyphDimensions)) * 0.5;
  #else
  return vTroikaGlyphDimensions.x / 64.0;
  #endif
}

float troikaGetFragDistValue() {
  vec2 clampedGlyphUV = clamp(vTroikaGlyphUV, 0.5 / uTroikaSDFGlyphSize, 1.0 - 0.5 / uTroikaSDFGlyphSize);
  float distance = troikaGlyphUvToDistance(clampedGlyphUV);
 
  // Extrapolate distance when outside bounds:
  distance += clampedGlyphUV == vTroikaGlyphUV ? 0.0 : 
    length((vTroikaGlyphUV - clampedGlyphUV) * vTroikaGlyphDimensions);

  

  return distance;
}

float troikaGetEdgeAlpha(float distance, float distanceOffset, float aaDist) {
  #if defined(IS_DEPTH_MATERIAL) || defined(IS_DISTANCE_MATERIAL)
  float alpha = step(-distanceOffset, -distance);
  #else

  float alpha = smoothstep(
    distanceOffset + aaDist,
    distanceOffset - aaDist,
    distance
  );
  #endif

  return alpha;
}
`,qC=`
float aaDist = troikaGetAADist();
float fragDistance = troikaGetFragDistValue();
float edgeAlpha = uTroikaSDFDebug ?
  troikaGlyphUvToSdfValue(vTroikaGlyphUV) :
  troikaGetEdgeAlpha(fragDistance, uTroikaDistanceOffset, max(aaDist, uTroikaBlurRadius));

#if !defined(IS_DEPTH_MATERIAL) && !defined(IS_DISTANCE_MATERIAL)
vec4 fillRGBA = gl_FragColor;
fillRGBA.a *= uTroikaFillOpacity;
vec4 strokeRGBA = uTroikaStrokeWidth == 0.0 ? fillRGBA : vec4(uTroikaStrokeColor, uTroikaStrokeOpacity);
if (fillRGBA.a == 0.0) fillRGBA.rgb = strokeRGBA.rgb;
gl_FragColor = mix(fillRGBA, strokeRGBA, smoothstep(
  -uTroikaStrokeWidth - aaDist,
  -uTroikaStrokeWidth + aaDist,
  fragDistance
));
gl_FragColor.a *= edgeAlpha;
#endif

if (edgeAlpha == 0.0) {
  discard;
}
`;function jC(s){const e=Jd(s,{chained:!0,extensions:{derivatives:!0},uniforms:{uTroikaSDFTexture:{value:null},uTroikaSDFTextureSize:{value:new xe},uTroikaSDFGlyphSize:{value:0},uTroikaSDFExponent:{value:0},uTroikaTotalBounds:{value:new Rt(0,0,0,0)},uTroikaClipRect:{value:new Rt(0,0,0,0)},uTroikaDistanceOffset:{value:0},uTroikaOutlineOpacity:{value:0},uTroikaFillOpacity:{value:1},uTroikaPositionOffset:{value:new xe},uTroikaCurveRadius:{value:0},uTroikaBlurRadius:{value:0},uTroikaStrokeWidth:{value:0},uTroikaStrokeColor:{value:new Ge},uTroikaStrokeOpacity:{value:1},uTroikaOrient:{value:new Et},uTroikaUseGlyphColors:{value:!0},uTroikaSDFDebug:{value:!1}},vertexDefs:WC,vertexTransform:XC,fragmentDefs:YC,fragmentColorTransform:qC,customRewriter({vertexShader:t,fragmentShader:n}){let i=/\buniform\s+vec3\s+diffuse\b/;return i.test(n)&&(n=n.replace(i,"varying vec3 vTroikaGlyphColor").replace(/\bdiffuse\b/g,"vTroikaGlyphColor"),i.test(t)||(t=t.replace(M_,`uniform vec3 diffuse;
$&
vTroikaGlyphColor = uTroikaUseGlyphColors ? aTroikaGlyphColor / 255.0 : diffuse;
`))),{vertexShader:t,fragmentShader:n}}});return e.transparent=!0,e.forceSinglePass=!0,Object.defineProperties(e,{isTroikaTextMaterial:{value:!0},shadowSide:{get(){return this.side},set(){}}}),e}const up=new On({color:16777215,side:xi,transparent:!0}),Xg=8421504,Yg=new st,Sc=new L,Sd=new L,_a=[],ZC=new L,Md="+x+y";function qg(s){return Array.isArray(s)?s[0]:s}let C_=()=>{const s=new ke(new sr(1,1),up);return C_=()=>s,s},R_=()=>{const s=new ke(new sr(1,1,32,1),up);return R_=()=>s,s};const JC={type:"syncstart"},KC={type:"synccomplete"},P_=["font","fontSize","fontStyle","fontWeight","lang","letterSpacing","lineHeight","maxWidth","overflowWrap","text","direction","textAlign","textIndent","whiteSpace","anchorX","anchorY","colorRanges","sdfGlyphSize"],QC=P_.concat("material","color","depthOffset","clipRect","curveRadius","orientation","glyphGeometryDetail");let I_=class extends ke{constructor(){const e=new HC;super(e,null),this.text="",this.anchorX=0,this.anchorY=0,this.curveRadius=0,this.direction="auto",this.font=null,this.unicodeFontsURL=null,this.fontSize=.1,this.fontWeight="normal",this.fontStyle="normal",this.lang=null,this.letterSpacing=0,this.lineHeight="normal",this.maxWidth=1/0,this.overflowWrap="normal",this.textAlign="left",this.textIndent=0,this.whiteSpace="normal",this.material=null,this.color=null,this.colorRanges=null,this.outlineWidth=0,this.outlineColor=0,this.outlineOpacity=1,this.outlineBlur=0,this.outlineOffsetX=0,this.outlineOffsetY=0,this.strokeWidth=0,this.strokeColor=Xg,this.strokeOpacity=1,this.fillOpacity=1,this.depthOffset=0,this.clipRect=null,this.orientation=Md,this.glyphGeometryDetail=1,this.sdfGlyphSize=null,this.gpuAccelerateSDF=!0,this.debugSDF=!1}sync(e){this._needsSync&&(this._needsSync=!1,this._isSyncing?(this._queuedSyncs||(this._queuedSyncs=[])).push(e):(this._isSyncing=!0,this.dispatchEvent(JC),E_({text:this.text,font:this.font,lang:this.lang,fontSize:this.fontSize||.1,fontWeight:this.fontWeight||"normal",fontStyle:this.fontStyle||"normal",letterSpacing:this.letterSpacing||0,lineHeight:this.lineHeight||"normal",maxWidth:this.maxWidth,direction:this.direction||"auto",textAlign:this.textAlign,textIndent:this.textIndent,whiteSpace:this.whiteSpace,overflowWrap:this.overflowWrap,anchorX:this.anchorX,anchorY:this.anchorY,colorRanges:this.colorRanges,includeCaretPositions:!0,sdfGlyphSize:this.sdfGlyphSize,gpuAccelerateSDF:this.gpuAccelerateSDF,unicodeFontsURL:this.unicodeFontsURL},t=>{this._isSyncing=!1,this._textRenderInfo=t,this.geometry.updateGlyphs(t.glyphBounds,t.glyphAtlasIndices,t.blockBounds,t.chunkedBounds,t.glyphColors);const n=this._queuedSyncs;n&&(this._queuedSyncs=null,this._needsSync=!0,this.sync(()=>{n.forEach(i=>i&&i())})),this.dispatchEvent(KC),e&&e()})))}onBeforeRender(e,t,n,i,r,o){this.sync(),r.isTroikaTextMaterial&&this._prepareForRender(r)}dispose(){this.geometry.dispose()}get textRenderInfo(){return this._textRenderInfo||null}createDerivedMaterial(e){return jC(e)}get material(){let e=this._derivedMaterial;const t=this._baseMaterial||this._defaultMaterial||(this._defaultMaterial=up.clone());if((!e||!e.isDerivedFrom(t))&&(e=this._derivedMaterial=this.createDerivedMaterial(t),t.addEventListener("dispose",function n(){t.removeEventListener("dispose",n),e.dispose()})),this.outlineWidth||this.outlineBlur||this.outlineOffsetX||this.outlineOffsetY){let n=e._outlineMtl;return n||(n=e._outlineMtl=Object.create(e,{id:{value:e.id+.1}}),n.isTextOutlineMaterial=!0,n.depthWrite=!1,n.map=null,e.addEventListener("dispose",function i(){e.removeEventListener("dispose",i),n.dispose()})),[n,e]}else return e}set material(e){e&&e.isTroikaTextMaterial?(this._derivedMaterial=e,this._baseMaterial=e.baseMaterial):this._baseMaterial=e}get glyphGeometryDetail(){return this.geometry.detail}set glyphGeometryDetail(e){this.geometry.detail=e}get curveRadius(){return this.geometry.curveRadius}set curveRadius(e){this.geometry.curveRadius=e}get customDepthMaterial(){return qg(this.material).getDepthMaterial()}get customDistanceMaterial(){return qg(this.material).getDistanceMaterial()}_prepareForRender(e){const t=e.isTextOutlineMaterial,n=e.uniforms,i=this.textRenderInfo;if(i){const{sdfTexture:a,blockBounds:l}=i;n.uTroikaSDFTexture.value=a,n.uTroikaSDFTextureSize.value.set(a.image.width,a.image.height),n.uTroikaSDFGlyphSize.value=i.sdfGlyphSize,n.uTroikaSDFExponent.value=i.sdfExponent,n.uTroikaTotalBounds.value.fromArray(l),n.uTroikaUseGlyphColors.value=!t&&!!i.glyphColors;let c=0,h=0,u=0,d,f,p,v=0,g=0;if(t){let{outlineWidth:x,outlineOffsetX:y,outlineOffsetY:_,outlineBlur:E,outlineOpacity:w}=this;c=this._parsePercent(x)||0,h=Math.max(0,this._parsePercent(E)||0),d=w,v=this._parsePercent(y)||0,g=this._parsePercent(_)||0}else u=Math.max(0,this._parsePercent(this.strokeWidth)||0),u&&(p=this.strokeColor,n.uTroikaStrokeColor.value.set(p??Xg),f=this.strokeOpacity,f==null&&(f=1)),d=this.fillOpacity;n.uTroikaDistanceOffset.value=c,n.uTroikaPositionOffset.value.set(v,g),n.uTroikaBlurRadius.value=h,n.uTroikaStrokeWidth.value=u,n.uTroikaStrokeOpacity.value=f,n.uTroikaFillOpacity.value=d??1,n.uTroikaCurveRadius.value=this.curveRadius||0;let m=this.clipRect;if(m&&Array.isArray(m)&&m.length===4)n.uTroikaClipRect.value.fromArray(m);else{const x=(this.fontSize||.1)*100;n.uTroikaClipRect.value.set(l[0]-x,l[1]-x,l[2]+x,l[3]+x)}this.geometry.applyClipRect(n.uTroikaClipRect.value)}n.uTroikaSDFDebug.value=!!this.debugSDF,e.polygonOffset=!!this.depthOffset,e.polygonOffsetFactor=e.polygonOffsetUnits=this.depthOffset||0;const r=t?this.outlineColor||0:this.color;if(r==null)delete e.color;else{const a=e.hasOwnProperty("color")?e.color:e.color=new Ge;(r!==a._input||typeof r=="object")&&a.set(a._input=r)}let o=this.orientation||Md;if(o!==e._orientation){let a=n.uTroikaOrient.value;o=o.replace(/[^-+xyz]/g,"");let l=o!==Md&&o.match(/^([-+])([xyz])([-+])([xyz])$/);if(l){let[,c,h,u,d]=l;Sc.set(0,0,0)[h]=c==="-"?1:-1,Sd.set(0,0,0)[d]=u==="-"?-1:1,Yg.lookAt(ZC,Sc.cross(Sd),Sd),a.setFromMatrix4(Yg)}else a.identity();e._orientation=o}}_parsePercent(e){if(typeof e=="string"){let t=e.match(/^(-?[\d.]+)%$/),n=t?parseFloat(t[1]):NaN;e=(isNaN(n)?0:n/100)*this.fontSize}return e}localPositionToTextCoords(e,t=new xe){t.copy(e);const n=this.curveRadius;return n&&(t.x=Math.atan2(e.x,Math.abs(n)-Math.abs(e.z))*Math.abs(n)),t}worldPositionToTextCoords(e,t=new xe){return Sc.copy(e),this.localPositionToTextCoords(this.worldToLocal(Sc),t)}raycast(e,t){const{textRenderInfo:n,curveRadius:i}=this;if(n){const r=n.blockBounds,o=i?R_():C_(),a=o.geometry,{position:l,uv:c}=a.attributes;for(let h=0;h<c.count;h++){let u=r[0]+c.getX(h)*(r[2]-r[0]);const d=r[1]+c.getY(h)*(r[3]-r[1]);let f=0;i&&(f=i-Math.cos(u/i)*i,u=Math.sin(u/i)*i),l.setXYZ(h,u,d,f)}a.boundingSphere=this.geometry.boundingSphere,a.boundingBox=this.geometry.boundingBox,o.matrixWorld=this.matrixWorld,o.material.side=this.material.side,_a.length=0,o.raycast(e,_a);for(let h=0;h<_a.length;h++)_a[h].object=this,t.push(_a[h])}}copy(e){const t=this.geometry;return super.copy(e),this.geometry=t,QC.forEach(n=>{this[n]=e[n]}),this}clone(){return new this.constructor().copy(this)}};P_.forEach(s=>{const e="_private_"+s;Object.defineProperty(I_.prototype,s,{get(){return this[e]},set(t){t!==this[e]&&(this[e]=t,this._needsSync=!0)}})});new Mn;new Ge;function D_(s,e){kn(e,!0);let t=Xe(e,"ref",15),n=yr(e,["$$slots","$$events","$$legacy","font","characters","sdfGlyphSize","ref","onsync","children"]);const i=new I_,{invalidate:r}=ki(),o=async()=>{await rf(),i.sync(()=>{var c;r(),(c=e.onsync)==null||c.call(e)})},a=["text","anchorX","anchorY","curveRadius","direction","font","fontSize","letterSpacing","lineHeight","maxWidth","overflowWrap","textAlign","textIndent","whiteSpace","material","color","depthOffset","clipRect","glyphGeometryDetail","sdfGlyphSize","outlineWidth","outlineColor","outlineOpacity","outlineBlur","outlineOffsetX","outlineOffsetY","strokeWidth","strokeColor","strokeOpacity","fillOpacity","characters","colorRanges"];i_(()=>a.map(c=>n[c]),()=>{o()});const l=PA();Dt(()=>{l(new Promise(c=>NC({font:e.font,characters:e.characters,sdfGlyphSize:e.sdfGlyphSize},c)))}),St(s,Br({is:i},()=>n,{get font(){return e.font},get characters(){return e.characters},get sdfGlyphSize(){return e.sdfGlyphSize},get ref(){return t()},set ref(c){t(c)},children:(c,h)=>{var u=pt(),d=Ze(u);Xi(d,()=>e.children??kr,()=>({ref:i})),Ye(c,u)},$$slots:{default:!0}})),Bn()}const $C=s=>{const{camera:e}=ki();let t=s.current.clientWidth,n=s.current.clientHeight;const i=new ResizeObserver(([r])=>{t=r.contentRect.width,n=r.contentRect.height});return ei(s,r=>(r&&i.observe(r),()=>{r&&i.unobserve(r)})),(r,o)=>{o.pointer.update(a=>(a.set(r.offsetX/t*2-1,-(r.offsetY/n)*2+1),a)),o.raycaster.setFromCamera(o.pointer.current,e.current)}},L_=Symbol("interactivity-context"),eR=()=>ii(L_),tR=s=>{const e=dn(ou().dom),t={enabled:dn(!0),pointer:dn(new xe),pointerOverTarget:dn(!1),lastEvent:void 0,raycaster:new iu,initialClick:[0,0],initialHits:[],hovered:new Map,interactiveObjects:[],target:e,handlers:new WeakMap,compute:$C(e),filter:s==null?void 0:s.filter,addInteractiveObject:(n,i)=>{t.interactiveObjects.indexOf(n)>-1||(t.handlers.set(n,i),t.interactiveObjects.push(n))},removeInteractiveObject:n=>{const i=t.interactiveObjects.indexOf(n);t.interactiveObjects.splice(i,1),t.handlers.delete(n)}};return Ti(L_,t),t},U_=()=>{const s=eR();if(!s)throw new Error("No interactivity context found. Did you forget to implement interactivity()?");return s},jg=["onclick","oncontextmenu","ondblclick","onwheel","onpointerup","onpointerdown","onpointerover","onpointerout","onpointerenter","onpointerleave","onpointermove","onpointermissed"],nR=()=>{TA("interactivity",s=>{if(!Li(s.ref,"Object3D")||!Object.entries(s.props).some(([i,r])=>r!==void 0&&jg.includes(i)))return;const{addInteractiveObject:t,removeInteractiveObject:n}=U_();return i_.pre(()=>[s.ref],([i])=>(t(i,s.props),()=>{n(i)})),{pluginProps:jg}})};function Zg(s){return`${(s.eventObject||s.object).uuid}/${s.index}${s.instanceId}`}const Jg=[["click",!1],["contextmenu",!1],["dblclick",!1],["wheel",!1],["pointerdown",!0],["pointerup",!0],["pointerleave",!0],["pointerenter",!0],["pointermove",!0],["pointercancel",!0]],iR=s=>{const{handlers:e}=U_(),t=c=>{const h=c.offsetX-s.initialClick[0],u=c.offsetY-s.initialClick[1];return Math.round(Math.hypot(h,u))},n=c=>{var h,u;for(const d of s.hovered.values())if(c.length===0||!c.some(f=>f.object===d.object&&f.index===d.index&&f.instanceId===d.instanceId)){const{eventObject:f}=d;s.hovered.delete(Zg(d));const p=e.get(f);if(p){const v={...d,intersections:c};(h=p.onpointerout)==null||h.call(p,v),(u=p.onpointerleave)==null||u.call(p,v)}}},i=()=>{if(!s.enabled.current)return[];const c=[],h=s.raycaster.intersectObjects(s.interactiveObjects,!0),u=s.filter===void 0?h:s.filter(h,s);for(const d of u){let f=d.object;for(;f;)e.has(f)&&c.push({...d,eventObject:f}),f=f.parent}return c},r=(c,h)=>{var u,d;for(const f of h)(d=(u=e.get(f))==null?void 0:u.onpointermissed)==null||d.call(u,c)},o=c=>c==="pointerleave"||c==="pointercancel"?()=>{s.pointerOverTarget.set(!1),n([])}:c==="pointerenter"?()=>{s.pointerOverTarget.set(!0)}:h=>{var g,m,x,y;const u=c==="pointermove",d=c==="click"||c==="contextmenu"||c==="dblclick";s.compute(h,s);const f=i(),p=d?t(h):0;c==="pointerdown"&&(s.initialClick=[h.offsetX,h.offsetY],s.initialHits=f.map(_=>_.eventObject)),d&&f.length===0&&p<=2&&r(h,s.interactiveObjects),u&&n(f);let v=!1;e:for(const _ of f){const E={stopped:v,..._,intersections:f,stopPropagation(){if(v=!0,E.stopped=!0,s.hovered.size>0&&Array.from(s.hovered.values()).some(M=>M.eventObject===_.eventObject)){const M=f.slice(0,f.indexOf(_));n([...M,_])}},camera:s.raycaster.camera,delta:p,nativeEvent:h,pointer:s.pointer.current,ray:s.raycaster.ray},w=e.get(_.eventObject);if(!w)return;if(u){if(w.onpointerover||w.onpointerenter||w.onpointerout||w.onpointerleave){const M=Zg(E),T=s.hovered.get(M);T?T.stopped&&E.stopPropagation():(s.hovered.set(M,E),(g=w.onpointerover)==null||g.call(w,E),(m=w.onpointerenter)==null||m.call(w,E))}(x=w.onpointermove)==null||x.call(w,E)}else w[`on${c}`]?(!d||s.initialHits.includes(_.eventObject))&&(r(h,s.interactiveObjects.filter(M=>!s.initialHits.includes(M))),(y=w[`on${c}`])==null||y.call(w,E)):d&&s.initialHits.includes(_.eventObject)&&r(h,s.interactiveObjects.filter(M=>!s.initialHits.includes(M)));if(v)break e}},a=c=>{Jg.forEach(([h])=>{c.removeEventListener(h,o(h))})},l=c=>{Jg.forEach(([h,u])=>{c.addEventListener(h,o(h),{passive:u})})};ei(s.target,c=>(c&&l(c),()=>{c&&a(c)}))},dp=s=>{const e=tR(s);return nR(),iR(e),e};for(let s=0;s<256;s++)(s<16?"0":"")+s.toString(16);new ls(-1,1,1,-1,0,1);class rR extends bt{constructor(){super(),this.setAttribute("position",new Ke([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new Ke([0,2,0,0,2,0],2))}}new rR;var N_={exports:{}};N_.exports=hu;N_.exports.default=hu;function hu(s,e,t){t=t||2;var n=e&&e.length,i=n?e[0]*t:s.length,r=O_(s,0,i,t,!0),o=[];if(!r||r.next===r.prev)return o;var a,l,c,h,u,d,f;if(n&&(r=cR(s,e,r,t)),s.length>80*t){a=c=s[0],l=h=s[1];for(var p=t;p<i;p+=t)u=s[p],d=s[p+1],u<a&&(a=u),d<l&&(l=d),u>c&&(c=u),d>h&&(h=d);f=Math.max(c-a,h-l),f=f!==0?32767/f:0}return el(r,o,t,a,l,f,0),o}function O_(s,e,t,n,i){var r,o;if(i===ef(s,e,t,n)>0)for(r=e;r<t;r+=n)o=Kg(r,s[r],s[r+1],o);else for(r=t-n;r>=e;r-=n)o=Kg(r,s[r],s[r+1],o);return o&&uu(o,o.next)&&(nl(o),o=o.next),o}function oo(s,e){if(!s)return s;e||(e=s);var t=s,n;do if(n=!1,!t.steiner&&(uu(t,t.next)||fn(t.prev,t,t.next)===0)){if(nl(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function el(s,e,t,n,i,r,o){if(s){!o&&r&&pR(s,n,i,r);for(var a=s,l,c;s.prev!==s.next;){if(l=s.prev,c=s.next,r?oR(s,n,i,r):sR(s)){e.push(l.i/t|0),e.push(s.i/t|0),e.push(c.i/t|0),nl(s),s=c.next,a=c.next;continue}if(s=c,s===a){o?o===1?(s=aR(oo(s),e,t),el(s,e,t,n,i,r,2)):o===2&&lR(s,e,t,n,i,r):el(oo(s),e,t,n,i,r,1);break}}}}function sR(s){var e=s.prev,t=s,n=s.next;if(fn(e,t,n)>=0)return!1;for(var i=e.x,r=t.x,o=n.x,a=e.y,l=t.y,c=n.y,h=i<r?i<o?i:o:r<o?r:o,u=a<l?a<c?a:c:l<c?l:c,d=i>r?i>o?i:o:r>o?r:o,f=a>l?a>c?a:c:l>c?l:c,p=n.next;p!==e;){if(p.x>=h&&p.x<=d&&p.y>=u&&p.y<=f&&zo(i,a,r,l,o,c,p.x,p.y)&&fn(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function oR(s,e,t,n){var i=s.prev,r=s,o=s.next;if(fn(i,r,o)>=0)return!1;for(var a=i.x,l=r.x,c=o.x,h=i.y,u=r.y,d=o.y,f=a<l?a<c?a:c:l<c?l:c,p=h<u?h<d?h:d:u<d?u:d,v=a>l?a>c?a:c:l>c?l:c,g=h>u?h>d?h:d:u>d?u:d,m=Qd(f,p,e,t,n),x=Qd(v,g,e,t,n),y=s.prevZ,_=s.nextZ;y&&y.z>=m&&_&&_.z<=x;){if(y.x>=f&&y.x<=v&&y.y>=p&&y.y<=g&&y!==i&&y!==o&&zo(a,h,l,u,c,d,y.x,y.y)&&fn(y.prev,y,y.next)>=0||(y=y.prevZ,_.x>=f&&_.x<=v&&_.y>=p&&_.y<=g&&_!==i&&_!==o&&zo(a,h,l,u,c,d,_.x,_.y)&&fn(_.prev,_,_.next)>=0))return!1;_=_.nextZ}for(;y&&y.z>=m;){if(y.x>=f&&y.x<=v&&y.y>=p&&y.y<=g&&y!==i&&y!==o&&zo(a,h,l,u,c,d,y.x,y.y)&&fn(y.prev,y,y.next)>=0)return!1;y=y.prevZ}for(;_&&_.z<=x;){if(_.x>=f&&_.x<=v&&_.y>=p&&_.y<=g&&_!==i&&_!==o&&zo(a,h,l,u,c,d,_.x,_.y)&&fn(_.prev,_,_.next)>=0)return!1;_=_.nextZ}return!0}function aR(s,e,t){var n=s;do{var i=n.prev,r=n.next.next;!uu(i,r)&&F_(i,n,n.next,r)&&tl(i,r)&&tl(r,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(r.i/t|0),nl(n),nl(n.next),n=s=r),n=n.next}while(n!==s);return oo(n)}function lR(s,e,t,n,i,r){var o=s;do{for(var a=o.next.next;a!==o.prev;){if(o.i!==a.i&&vR(o,a)){var l=k_(o,a);o=oo(o,o.next),l=oo(l,l.next),el(o,e,t,n,i,r,0),el(l,e,t,n,i,r,0);return}a=a.next}o=o.next}while(o!==s)}function cR(s,e,t,n){var i=[],r,o,a,l,c;for(r=0,o=e.length;r<o;r++)a=e[r]*n,l=r<o-1?e[r+1]*n:s.length,c=O_(s,a,l,n,!1),c===c.next&&(c.steiner=!0),i.push(gR(c));for(i.sort(hR),r=0;r<i.length;r++)t=uR(i[r],t);return t}function hR(s,e){return s.x-e.x}function uR(s,e){var t=dR(s,e);if(!t)return e;var n=k_(t,s);return oo(n,n.next),oo(t,t.next)}function dR(s,e){var t=e,n=s.x,i=s.y,r=-1/0,o;do{if(i<=t.y&&i>=t.next.y&&t.next.y!==t.y){var a=t.x+(i-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(a<=n&&a>r&&(r=a,o=t.x<t.next.x?t:t.next,a===n))return o}t=t.next}while(t!==e);if(!o)return null;var l=o,c=o.x,h=o.y,u=1/0,d;t=o;do n>=t.x&&t.x>=c&&n!==t.x&&zo(i<h?n:r,i,c,h,i<h?r:n,i,t.x,t.y)&&(d=Math.abs(i-t.y)/(n-t.x),tl(t,s)&&(d<u||d===u&&(t.x>o.x||t.x===o.x&&fR(o,t)))&&(o=t,u=d)),t=t.next;while(t!==l);return o}function fR(s,e){return fn(s.prev,s,e.prev)<0&&fn(e.next,s,s.next)<0}function pR(s,e,t,n){var i=s;do i.z===0&&(i.z=Qd(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,mR(i)}function mR(s){var e,t,n,i,r,o,a,l,c=1;do{for(t=s,s=null,r=null,o=0;t;){for(o++,n=t,a=0,e=0;e<c&&(a++,n=n.nextZ,!!n);e++);for(l=c;a>0||l>0&&n;)a!==0&&(l===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,a--):(i=n,n=n.nextZ,l--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;t=n}r.nextZ=null,c*=2}while(o>1);return s}function Qd(s,e,t,n,i){return s=(s-t)*i|0,e=(e-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function gR(s){var e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function zo(s,e,t,n,i,r,o,a){return(i-o)*(e-a)>=(s-o)*(r-a)&&(s-o)*(n-a)>=(t-o)*(e-a)&&(t-o)*(r-a)>=(i-o)*(n-a)}function vR(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!_R(s,e)&&(tl(s,e)&&tl(e,s)&&yR(s,e)&&(fn(s.prev,s,e.prev)||fn(s,e.prev,e))||uu(s,e)&&fn(s.prev,s,s.next)>0&&fn(e.prev,e,e.next)>0)}function fn(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function uu(s,e){return s.x===e.x&&s.y===e.y}function F_(s,e,t,n){var i=wc(fn(s,e,t)),r=wc(fn(s,e,n)),o=wc(fn(t,n,s)),a=wc(fn(t,n,e));return!!(i!==r&&o!==a||i===0&&Mc(s,t,e)||r===0&&Mc(s,n,e)||o===0&&Mc(t,s,n)||a===0&&Mc(t,e,n))}function Mc(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function wc(s){return s>0?1:s<0?-1:0}function _R(s,e){var t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&F_(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function tl(s,e){return fn(s.prev,s,s.next)<0?fn(s,e,s.next)>=0&&fn(s,s.prev,e)>=0:fn(s,e,s.prev)<0||fn(s,s.next,e)<0}function yR(s,e){var t=s,n=!1,i=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&i<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==s);return n}function k_(s,e){var t=new $d(s.i,s.x,s.y),n=new $d(e.i,e.x,e.y),i=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=i,i.prev=t,n.next=t,t.prev=n,r.next=n,n.prev=r,n}function Kg(s,e,t,n){var i=new $d(s,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function nl(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function $d(s,e,t){this.i=s,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}hu.deviation=function(s,e,t,n){var i=e&&e.length,r=i?e[0]*t:s.length,o=Math.abs(ef(s,0,r,t));if(i)for(var a=0,l=e.length;a<l;a++){var c=e[a]*t,h=a<l-1?e[a+1]*t:s.length;o-=Math.abs(ef(s,c,h,t))}var u=0;for(a=0;a<n.length;a+=3){var d=n[a]*t,f=n[a+1]*t,p=n[a+2]*t;u+=Math.abs((s[d]-s[p])*(s[f+1]-s[d+1])-(s[d]-s[f])*(s[p+1]-s[d+1]))}return o===0&&u===0?0:Math.abs((u-o)/o)};function ef(s,e,t,n){for(var i=0,r=e,o=t-n;r<t;r+=n)i+=(s[o]-s[r])*(s[r+1]+s[o+1]),o=r;return i}hu.flatten=function(s){for(var e=s[0][0].length,t={vertices:[],holes:[],dimensions:e},n=0,i=0;i<s.length;i++){for(var r=0;r<s[i].length;r++)for(var o=0;o<e;o++)t.vertices.push(s[i][r][o]);i>0&&(n+=s[i-1].length,t.holes.push(n))}return t};new xe;new xe;var Qg;(s=>{function e(i){let r=i.slice();return r.sort(s.POINT_COMPARATOR),s.makeHullPresorted(r)}s.makeHull=e;function t(i){if(i.length<=1)return i.slice();let r=[];for(let a=0;a<i.length;a++){const l=i[a];for(;r.length>=2;){const c=r[r.length-1],h=r[r.length-2];if((c.x-h.x)*(l.y-h.y)>=(c.y-h.y)*(l.x-h.x))r.pop();else break}r.push(l)}r.pop();let o=[];for(let a=i.length-1;a>=0;a--){const l=i[a];for(;o.length>=2;){const c=o[o.length-1],h=o[o.length-2];if((c.x-h.x)*(l.y-h.y)>=(c.y-h.y)*(l.x-h.x))o.pop();else break}o.push(l)}return o.pop(),r.length==1&&o.length==1&&r[0].x==o[0].x&&r[0].y==o[0].y?r:r.concat(o)}s.makeHullPresorted=t;function n(i,r){return i.x<r.x?-1:i.x>r.x?1:i.y<r.y?-1:i.y>r.y?1:0}s.POINT_COMPARATOR=n})(Qg||(Qg={}));const Ne=Nn({edit:!1,tool:"translate",selectedLink:void 0,selectedJoint:void 0,robot:void 0,continuousJoints:{},revoluteJoints:{},visual:!0,collision:!1,collisionColor:"#813d9c",joints:!0,jointNames:!0,jointColor:"#62a0ea",linkNames:!0,linkColor:"#57e389",jointIndicatorColor:"#f66151",linkOpacity:1,highlightColor:"#ffa348",visualOpacity:1,collisionOpacity:.7,backgroundColor:"#241f31",translationSnap:.001,scaleSnap:.001,rotationSnap:1,initialZoom:1.3,zoom:1.3,nameHeight:.12});function wd(s){const e=fp(s,"xyz");if(!(!e||e.length!=3))return e}function $g(s){const e=fp(s,"rpy");if(!(!e||e.length!=3))return e}function e0(s){const e=fp(s,"rgba");if(!(!e||e.length!=4))return e}function fp(s,e="xyz"){var t;if(s.hasAttribute(e)){const n=(t=s.getAttribute(e))==null?void 0:t.split(" ");if(n){const i=[];for(const r of n)i.push(parseFloat(r));return i}}}function t0(s){return s*180/Math.PI}function xR(s){return s?new Ge(s[0],s[1],s[2]):new Ge("white")}function B_(s){return Math.max(Ne.zoom/Ne.initialZoom*s,s)}function bR(s){const e=[],t=s.joints;for(const n of Object.values(s.links)){let i=!0;for(const r of t)if(r.child.name==n.name){i=!1;break}i&&e.push(n)}return e}function SR(s,e){const t=[],n=s.joints;if(!n)return[];for(const i of n)i.parent.name==e.name&&t.push(i);return t}function MR(s){const e=s.elem.getElementsByTagName("origin")[0];e.setAttribute("xyz",s.origin_xyz.join(" ")),e.setAttribute("rpy",s.origin_rpy.join(" "))}class wR{constructor(e,t=""){tn(this,"filename");tn(this,"colors",{});tn(this,"robot",{name:"",links:{},joints:[]});tn(this,"prefix","");this.filename=e,this.prefix=t}async load(){return fetch(this.filename).then(e=>e.text())}reset(){this.robot={name:"",links:{},joints:[]}}fromString(e){this.reset();let t=new window.DOMParser().parseFromString(e,"text/xml");return this.robot.elem=t.documentElement,this.parseRobotXMLNode(t.documentElement)}parseRobotXMLNode(e){const t=e.nodeName;if(t!=="robot")throw new Error(`Invalid URDF: no root node ${t}`);return this.robot.name=e.getAttribute("name"),this.parseColorsFromRobot(e),this.parseLinks(e),this.parseJoints(e),this.robot}parseColorsFromRobot(e){const t=e.getElementsByTagName("material");for(let n=0;n<t.length;n++){const i=t[n],r=this.colorFromMaterial(i);r&&(this.colors[r.name]=r.rgba)}}colorFromMaterial(e){if(!e.hasAttribute("name")){console.warn("Found material-tag with name without name inside robot tag!");return}const t=e.getAttribute("name"),n=e.getElementsByTagName("color");if(n.length===0)return;const i=n[0];if(!i.hasAttribute("rgba")){console.warn(`Color tag ${t} does not have expected "rgba" attribute!`);return}return{name:t,rgba:e0(i)||[0,0,0,1]}}getLinkByName(e){if(!this.robot.elem)return;const t=this.robot.elem.getElementsByTagName("link");for(let n=0;n<t.length;n++){const i=t[n];if(i.hasAttribute("name")){const r=i.getAttribute("name");if(e==r)return i}}}parseLinks(e){const t=e.getElementsByTagName("link");for(let n=0;n<t.length;n++){const i=t[n],r={visual:[],collision:[],name:"",elem:i};i.hasAttribute("name")?(r.name=i.getAttribute("name"),this.robot.links[r.name]=r):console.error("No name in xml link node: ",i);const o=i.getElementsByTagName("visual");for(let l=0;l<o.length;l++)r.visual.push(this.parseVisual(o[l]));const a=i.getElementsByTagName("collision");for(let l=0;l<a.length;l++)r.collision.push(this.parseVisual(a[l]))}}parseVisual(e){let t,n,i,r="pink";const o={elem:e};for(let a=0;a<e.childNodes.length;a++){const l=e.childNodes[a];switch(l.nodeName){case"geometry":this.parseGeometry(l,o);break;case"origin":t=wd(l),t&&(o.origin_xyz=t),n=$g(l),n&&(o.origin_rpy=n);break;case"material":i=l.getElementsByTagName("color"),i.length>0&&i[0].hasAttribute("rgba")?o.color_rgba=e0(i[0]):l.hasAttribute("name")&&(r=l.getAttribute("name"),o.color_rgba=this.colors[r])}}return o}parseGeometry(e,t){for(let n=0;n<e.childNodes.length;n++){const i=e.childNodes[n];switch(i.nodeName){case"mesh":let r=[1,1,1],o=i.getAttribute("scale");if(o){const u=o.split(" ");for(const d in u)r[d]=parseFloat(u[d])}let a=i.getAttribute("filename");a=a.replace("package:/",this.prefix);let l="stl";switch(a.substring(a.length-3).toLocaleLowerCase()){case"fbx":l="fbx";break;case"obj":l="obj";break;case"stl":l="stl";break;case"dae":l="dae";break;default:throw new Error("Unknown type "+a)}t.geometry={filename:a,type:l,scale:r},t.type="mesh";return;case"cylinder":const c={};i.hasAttribute("length")&&(c.length=parseFloat(i.getAttribute("length"))),i.hasAttribute("radius")&&(c.radius=parseFloat(i.getAttribute("radius"))),t.geometry=c,t.type="cylinder";return;case"box":const h={size:[1,1,1]};if(i.hasAttribute("size")){const d=i.getAttribute("size").split(" ");for(const f in d)h.size[f]=parseFloat(d[f])}t.geometry=h,t.type="box";return}}}parseJoints(e){const t=this.robot.links,n=[];this.robot.joints=n;const i=e.getElementsByTagName("joint");for(let r=0;r<i.length;r++){const o=i[r],a=o.getElementsByTagName("origin");let l=[0,0,0],c=[0,0,0];if(a.length===1){let x=wd(a[0]);x&&(c=x);let y=$g(a[0]);y&&(l=y)}let h;const u=o.getElementsByTagName("parent");if(u.length===1){const x=u[0].getAttribute("link");if(!x)throw Error("Name not set for link");const y=this.getLinkByName(x);if(!y)throw Error(`Link with name ${x} not found!`);x&&t[x]?h=t[x]:h={name:x,visual:[],collision:[],elem:y}}let d;const f=o.getElementsByTagName("child");if(f.length===1){const x=f[0].getAttribute("link");if(x&&t[x])d=t[x];else if(x){const y=this.getLinkByName(x);d={name:x,visual:[],collision:[],elem:y}}}let p,v=[0,0,1];const g=o.getElementsByTagName("axis");g.length===1&&(v=wd(g[0])||v);const m=o.getElementsByTagName("limit");if(m.length===1){p={lower:0,upper:0,effort:0,velocity:0};const x=m[0].getAttribute("lower");x&&(p.lower=parseInt(x));const y=m[0].getAttribute("upper");y&&(p.upper=parseInt(y));const _=m[0].getAttribute("effort");_&&(p.effort=parseInt(_));const E=m[0].getAttribute("velocity");E&&(p.velocity=parseInt(E))}d&&h&&n.push({name:o.getAttribute("name")||void 0,type:o.getAttribute("type")||void 0,origin_rpy:l,origin_xyz:c,rotation:[0,0,0],axis_xyz:v,parent:h,child:d,limit:p,elem:o})}}getURDFXML(){return this.robot.elem?`<?xml version="1.0" ?>
`+this.robot.elem.outerHTML:""}}class n0 extends Fv{constructor(e){super(e)}parse(e){function t(N){switch(N.image_type){case d:case v:if(N.colormap_length>256||N.colormap_size!==24||N.colormap_type!==1)throw new Error("THREE.TGALoader: Invalid type colormap data for indexed type.");break;case f:case p:case g:case m:if(N.colormap_type)throw new Error("THREE.TGALoader: Invalid type colormap data for colormap type.");break;case u:throw new Error("THREE.TGALoader: No data.");default:throw new Error("THREE.TGALoader: Invalid type "+N.image_type)}if(N.width<=0||N.height<=0)throw new Error("THREE.TGALoader: Invalid image size.");if(N.pixel_size!==8&&N.pixel_size!==16&&N.pixel_size!==24&&N.pixel_size!==32)throw new Error("THREE.TGALoader: Invalid pixel size "+N.pixel_size)}function n(N,Q,Z,j,X){let F,J;const $=Z.pixel_size>>3,G=Z.width*Z.height*$;if(Q&&(J=X.subarray(j,j+=Z.colormap_length*(Z.colormap_size>>3))),N){F=new Uint8Array(G);let W,q,Y,ne=0;const ge=new Uint8Array($);for(;ne<G;)if(W=X[j++],q=(W&127)+1,W&128){for(Y=0;Y<$;++Y)ge[Y]=X[j++];for(Y=0;Y<q;++Y)F.set(ge,ne+Y*$);ne+=$*q}else{for(q*=$,Y=0;Y<q;++Y)F[ne+Y]=X[j++];ne+=q}}else F=X.subarray(j,j+=Q?Z.width*Z.height:G);return{pixel_data:F,palettes:J}}function i(N,Q,Z,j,X,F,J,$,G){const W=G;let q,Y=0,ne,ge;const ve=b.width;for(ge=Q;ge!==j;ge+=Z)for(ne=X;ne!==J;ne+=F,Y++)q=$[Y],N[(ne+ve*ge)*4+3]=255,N[(ne+ve*ge)*4+2]=W[q*3+0],N[(ne+ve*ge)*4+1]=W[q*3+1],N[(ne+ve*ge)*4+0]=W[q*3+2];return N}function r(N,Q,Z,j,X,F,J,$){let G,W=0,q,Y;const ne=b.width;for(Y=Q;Y!==j;Y+=Z)for(q=X;q!==J;q+=F,W+=2)G=$[W+0]+($[W+1]<<8),N[(q+ne*Y)*4+0]=(G&31744)>>7,N[(q+ne*Y)*4+1]=(G&992)>>2,N[(q+ne*Y)*4+2]=(G&31)<<3,N[(q+ne*Y)*4+3]=G&32768?0:255;return N}function o(N,Q,Z,j,X,F,J,$){let G=0,W,q;const Y=b.width;for(q=Q;q!==j;q+=Z)for(W=X;W!==J;W+=F,G+=3)N[(W+Y*q)*4+3]=255,N[(W+Y*q)*4+2]=$[G+0],N[(W+Y*q)*4+1]=$[G+1],N[(W+Y*q)*4+0]=$[G+2];return N}function a(N,Q,Z,j,X,F,J,$){let G=0,W,q;const Y=b.width;for(q=Q;q!==j;q+=Z)for(W=X;W!==J;W+=F,G+=4)N[(W+Y*q)*4+2]=$[G+0],N[(W+Y*q)*4+1]=$[G+1],N[(W+Y*q)*4+0]=$[G+2],N[(W+Y*q)*4+3]=$[G+3];return N}function l(N,Q,Z,j,X,F,J,$){let G,W=0,q,Y;const ne=b.width;for(Y=Q;Y!==j;Y+=Z)for(q=X;q!==J;q+=F,W++)G=$[W],N[(q+ne*Y)*4+0]=G,N[(q+ne*Y)*4+1]=G,N[(q+ne*Y)*4+2]=G,N[(q+ne*Y)*4+3]=255;return N}function c(N,Q,Z,j,X,F,J,$){let G=0,W,q;const Y=b.width;for(q=Q;q!==j;q+=Z)for(W=X;W!==J;W+=F,G+=2)N[(W+Y*q)*4+0]=$[G+0],N[(W+Y*q)*4+1]=$[G+0],N[(W+Y*q)*4+2]=$[G+0],N[(W+Y*q)*4+3]=$[G+1];return N}function h(N,Q,Z,j,X){let F,J,$,G,W,q;switch((b.flags&x)>>y){default:case w:F=0,$=1,W=Q,J=0,G=1,q=Z;break;case _:F=0,$=1,W=Q,J=Z-1,G=-1,q=-1;break;case M:F=Q-1,$=-1,W=-1,J=0,G=1,q=Z;break;case E:F=Q-1,$=-1,W=-1,J=Z-1,G=-1,q=-1;break}if(k)switch(b.pixel_size){case 8:l(N,J,G,q,F,$,W,j);break;case 16:c(N,J,G,q,F,$,W,j);break;default:throw new Error("THREE.TGALoader: Format not supported.")}else switch(b.pixel_size){case 8:i(N,J,G,q,F,$,W,j,X);break;case 16:r(N,J,G,q,F,$,W,j);break;case 24:o(N,J,G,q,F,$,W,j);break;case 32:a(N,J,G,q,F,$,W,j);break;default:throw new Error("THREE.TGALoader: Format not supported.")}return N}const u=0,d=1,f=2,p=3,v=9,g=10,m=11,x=48,y=4,_=0,E=1,w=2,M=3;if(e.length<19)throw new Error("THREE.TGALoader: Not enough data to contain header.");let T=0;const S=new Uint8Array(e),b={id_length:S[T++],colormap_type:S[T++],image_type:S[T++],colormap_index:S[T++]|S[T++]<<8,colormap_length:S[T++]|S[T++]<<8,colormap_size:S[T++],origin:[S[T++]|S[T++]<<8,S[T++]|S[T++]<<8],width:S[T++]|S[T++]<<8,height:S[T++]|S[T++]<<8,pixel_size:S[T++],flags:S[T++]};if(t(b),b.id_length+T>e.length)throw new Error("THREE.TGALoader: No data.");T+=b.id_length;let D=!1,P=!1,k=!1;switch(b.image_type){case v:D=!0,P=!0;break;case d:P=!0;break;case g:D=!0;break;case f:break;case m:D=!0,k=!0;break;case p:k=!0;break}const V=new Uint8Array(b.width*b.height*4),K=n(D,P,b,T,S);return h(V,b.width,b.height,K.pixel_data,K.palettes),{data:V,width:b.width,height:b.height,flipY:!0,generateMipmaps:!0,minFilter:er}}}class ER extends qn{load(e,t,n,i){const r=this,o=r.path===""?_h.extractUrlBase(e):r.path,a=new nr(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(l){try{t(r.parse(l,o))}catch(c){i?i(c):console.error(c),r.manager.itemError(e)}},n,i)}parse(e,t){function n(C,A){const z=[],U=C.childNodes;for(let H=0,me=U.length;H<me;H++){const we=U[H];we.nodeName===A&&z.push(we)}return z}function i(C){if(C.length===0)return[];const A=C.trim().split(/\s+/),z=new Array(A.length);for(let U=0,H=A.length;U<H;U++)z[U]=A[U];return z}function r(C){if(C.length===0)return[];const A=C.trim().split(/\s+/),z=new Array(A.length);for(let U=0,H=A.length;U<H;U++)z[U]=parseFloat(A[U]);return z}function o(C){if(C.length===0)return[];const A=C.trim().split(/\s+/),z=new Array(A.length);for(let U=0,H=A.length;U<H;U++)z[U]=parseInt(A[U]);return z}function a(C){return C.substring(1)}function l(){return"three_default_"+Ri++}function c(C){return Object.keys(C).length===0}function h(C){return{unit:u(n(C,"unit")[0]),upAxis:d(n(C,"up_axis")[0])}}function u(C){return C!==void 0&&C.hasAttribute("meter")===!0?parseFloat(C.getAttribute("meter")):1}function d(C){return C!==void 0?C.textContent:"Y_UP"}function f(C,A,z,U){const H=n(C,A)[0];if(H!==void 0){const me=n(H,z);for(let we=0;we<me.length;we++)U(me[we])}}function p(C,A){for(const z in C){const U=C[z];U.build=A(C[z])}}function v(C,A){return C.build!==void 0||(C.build=A(C)),C.build}function g(C){const A={sources:{},samplers:{},channels:{}};let z=!1;for(let U=0,H=C.childNodes.length;U<H;U++){const me=C.childNodes[U];if(me.nodeType!==1)continue;let we;switch(me.nodeName){case"source":we=me.getAttribute("id"),A.sources[we]=he(me);break;case"sampler":we=me.getAttribute("id"),A.samplers[we]=m(me);break;case"channel":we=me.getAttribute("target"),A.channels[we]=x(me);break;case"animation":g(me),z=!0;break;default:console.log(me)}}z===!1&&(gt.animations[C.getAttribute("id")||dr.generateUUID()]=A)}function m(C){const A={inputs:{}};for(let z=0,U=C.childNodes.length;z<U;z++){const H=C.childNodes[z];if(H.nodeType===1)switch(H.nodeName){case"input":const me=a(H.getAttribute("source")),we=H.getAttribute("semantic");A.inputs[we]=me;break}}return A}function x(C){const A={};let U=C.getAttribute("target").split("/");const H=U.shift();let me=U.shift();const we=me.indexOf("(")!==-1,$e=me.indexOf(".")!==-1;if($e)U=me.split("."),me=U.shift(),A.member=U.shift();else if(we){const Ve=me.split("(");me=Ve.shift();for(let Je=0;Je<Ve.length;Je++)Ve[Je]=parseInt(Ve[Je].replace(/\)/,""));A.indices=Ve}return A.id=H,A.sid=me,A.arraySyntax=we,A.memberSyntax=$e,A.sampler=a(C.getAttribute("source")),A}function y(C){const A=[],z=C.channels,U=C.samplers,H=C.sources;for(const me in z)if(z.hasOwnProperty(me)){const we=z[me],$e=U[we.sampler],Ve=$e.inputs.INPUT,Je=$e.inputs.OUTPUT,lt=H[Ve],Ue=H[Je],at=E(we,lt,Ue);b(at,A)}return A}function _(C){return v(gt.animations[C],y)}function E(C,A,z){const U=gt.nodes[C.id],H=At(U.id),me=U.transforms[C.sid],we=U.matrix.clone().transpose();let $e,Ve,Je,lt,Ue,at;const nt={};switch(me){case"matrix":for(Je=0,lt=A.array.length;Je<lt;Je++)if($e=A.array[Je],Ve=Je*z.stride,nt[$e]===void 0&&(nt[$e]={}),C.arraySyntax===!0){const en=z.array[Ve],Vt=C.indices[0]+4*C.indices[1];nt[$e][Vt]=en}else for(Ue=0,at=z.stride;Ue<at;Ue++)nt[$e][Ue]=z.array[Ve+Ue];break;case"translate":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',me);break;case"rotate":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',me);break;case"scale":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',me);break}const ft=w(nt,we);return{name:H.uuid,keyframes:ft}}function w(C,A){const z=[];for(const H in C)z.push({time:parseFloat(H),value:C[H]});z.sort(U);for(let H=0;H<16;H++)D(z,H,A.elements[H]);return z;function U(H,me){return H.time-me.time}}const M=new L,T=new L,S=new Ht;function b(C,A){const z=C.keyframes,U=C.name,H=[],me=[],we=[],$e=[];for(let Ve=0,Je=z.length;Ve<Je;Ve++){const lt=z[Ve],Ue=lt.time,at=lt.value;se.fromArray(at).transpose(),se.decompose(M,S,T),H.push(Ue),me.push(M.x,M.y,M.z),we.push(S.x,S.y,S.z,S.w),$e.push(T.x,T.y,T.z)}return me.length>0&&A.push(new io(U+".position",H,me)),we.length>0&&A.push(new jo(U+".quaternion",H,we)),$e.length>0&&A.push(new io(U+".scale",H,$e)),A}function D(C,A,z){let U,H=!0,me,we;for(me=0,we=C.length;me<we;me++)U=C[me],U.value[A]===void 0?U.value[A]=null:H=!1;if(H===!0)for(me=0,we=C.length;me<we;me++)U=C[me],U.value[A]=z;else P(C,A)}function P(C,A){let z,U;for(let H=0,me=C.length;H<me;H++){const we=C[H];if(we.value[A]===null){if(z=k(C,H,A),U=V(C,H,A),z===null){we.value[A]=U.value[A];continue}if(U===null){we.value[A]=z.value[A];continue}K(we,z,U,A)}}}function k(C,A,z){for(;A>=0;){const U=C[A];if(U.value[z]!==null)return U;A--}return null}function V(C,A,z){for(;A<C.length;){const U=C[A];if(U.value[z]!==null)return U;A++}return null}function K(C,A,z,U){if(z.time-A.time===0){C.value[U]=A.value[U];return}C.value[U]=(C.time-A.time)*(z.value[U]-A.value[U])/(z.time-A.time)+A.value[U]}function N(C){const A={name:C.getAttribute("id")||"default",start:parseFloat(C.getAttribute("start")||0),end:parseFloat(C.getAttribute("end")||0),animations:[]};for(let z=0,U=C.childNodes.length;z<U;z++){const H=C.childNodes[z];if(H.nodeType===1)switch(H.nodeName){case"instance_animation":A.animations.push(a(H.getAttribute("url")));break}}gt.clips[C.getAttribute("id")]=A}function Q(C){const A=[],z=C.name,U=C.end-C.start||-1,H=C.animations;for(let me=0,we=H.length;me<we;me++){const $e=_(H[me]);for(let Ve=0,Je=$e.length;Ve<Je;Ve++)A.push($e[Ve])}return new ro(z,U,A)}function Z(C){return v(gt.clips[C],Q)}function j(C){const A={};for(let z=0,U=C.childNodes.length;z<U;z++){const H=C.childNodes[z];if(H.nodeType===1)switch(H.nodeName){case"skin":A.id=a(H.getAttribute("source")),A.skin=X(H);break;case"morph":A.id=a(H.getAttribute("source")),console.warn("THREE.ColladaLoader: Morph target animation not supported yet.");break}}gt.controllers[C.getAttribute("id")]=A}function X(C){const A={sources:{}};for(let z=0,U=C.childNodes.length;z<U;z++){const H=C.childNodes[z];if(H.nodeType===1)switch(H.nodeName){case"bind_shape_matrix":A.bindShapeMatrix=r(H.textContent);break;case"source":const me=H.getAttribute("id");A.sources[me]=he(H);break;case"joints":A.joints=F(H);break;case"vertex_weights":A.vertexWeights=J(H);break}}return A}function F(C){const A={inputs:{}};for(let z=0,U=C.childNodes.length;z<U;z++){const H=C.childNodes[z];if(H.nodeType===1)switch(H.nodeName){case"input":const me=H.getAttribute("semantic"),we=a(H.getAttribute("source"));A.inputs[me]=we;break}}return A}function J(C){const A={inputs:{}};for(let z=0,U=C.childNodes.length;z<U;z++){const H=C.childNodes[z];if(H.nodeType===1)switch(H.nodeName){case"input":const me=H.getAttribute("semantic"),we=a(H.getAttribute("source")),$e=parseInt(H.getAttribute("offset"));A.inputs[me]={id:we,offset:$e};break;case"vcount":A.vcount=o(H.textContent);break;case"v":A.v=o(H.textContent);break}}return A}function $(C){const A={id:C.id},z=gt.geometries[A.id];return C.skin!==void 0&&(A.skin=G(C.skin),z.sources.skinIndices=A.skin.indices,z.sources.skinWeights=A.skin.weights),A}function G(C){const z={joints:[],indices:{array:[],stride:4},weights:{array:[],stride:4}},U=C.sources,H=C.vertexWeights,me=H.vcount,we=H.v,$e=H.inputs.JOINT.offset,Ve=H.inputs.WEIGHT.offset,Je=C.sources[C.joints.inputs.JOINT],lt=C.sources[C.joints.inputs.INV_BIND_MATRIX],Ue=U[H.inputs.WEIGHT.id].array;let at=0,nt,ft,it;for(nt=0,it=me.length;nt<it;nt++){const Vt=me[nt],zt=[];for(ft=0;ft<Vt;ft++){const kt=we[at+$e],Bi=we[at+Ve],zn=Ue[Bi];zt.push({index:kt,weight:zn}),at+=2}for(zt.sort(en),ft=0;ft<4;ft++){const kt=zt[ft];kt!==void 0?(z.indices.array.push(kt.index),z.weights.array.push(kt.weight)):(z.indices.array.push(0),z.weights.array.push(0))}}for(C.bindShapeMatrix?z.bindMatrix=new st().fromArray(C.bindShapeMatrix).transpose():z.bindMatrix=new st().identity(),nt=0,it=Je.array.length;nt<it;nt++){const Vt=Je.array[nt],zt=new st().fromArray(lt.array,nt*lt.stride).transpose();z.joints.push({name:Vt,boneInverse:zt})}return z;function en(Vt,zt){return zt.weight-Vt.weight}}function W(C){return v(gt.controllers[C],$)}function q(C){const A={init_from:n(C,"init_from")[0].textContent};gt.images[C.getAttribute("id")]=A}function Y(C){return C.build!==void 0?C.build:C.init_from}function ne(C){const A=gt.images[C];return A!==void 0?v(A,Y):(console.warn("THREE.ColladaLoader: Couldn't find image with ID:",C),null)}function ge(C){const A={};for(let z=0,U=C.childNodes.length;z<U;z++){const H=C.childNodes[z];if(H.nodeType===1)switch(H.nodeName){case"profile_COMMON":A.profile=ve(H);break}}gt.effects[C.getAttribute("id")]=A}function ve(C){const A={surfaces:{},samplers:{}};for(let z=0,U=C.childNodes.length;z<U;z++){const H=C.childNodes[z];if(H.nodeType===1)switch(H.nodeName){case"newparam":_e(H,A);break;case"technique":A.technique=B(H);break;case"extra":A.extra=be(H);break}}return A}function _e(C,A){const z=C.getAttribute("sid");for(let U=0,H=C.childNodes.length;U<H;U++){const me=C.childNodes[U];if(me.nodeType===1)switch(me.nodeName){case"surface":A.surfaces[z]=ee(me);break;case"sampler2D":A.samplers[z]=ue(me);break}}}function ee(C){const A={};for(let z=0,U=C.childNodes.length;z<U;z++){const H=C.childNodes[z];if(H.nodeType===1)switch(H.nodeName){case"init_from":A.init_from=H.textContent;break}}return A}function ue(C){const A={};for(let z=0,U=C.childNodes.length;z<U;z++){const H=C.childNodes[z];if(H.nodeType===1)switch(H.nodeName){case"source":A.source=H.textContent;break}}return A}function B(C){const A={};for(let z=0,U=C.childNodes.length;z<U;z++){const H=C.childNodes[z];if(H.nodeType===1)switch(H.nodeName){case"constant":case"lambert":case"blinn":case"phong":A.type=H.nodeName,A.parameters=Se(H);break;case"extra":A.extra=be(H);break}}return A}function Se(C){const A={};for(let z=0,U=C.childNodes.length;z<U;z++){const H=C.childNodes[z];if(H.nodeType===1)switch(H.nodeName){case"emission":case"diffuse":case"specular":case"bump":case"ambient":case"shininess":case"transparency":A[H.nodeName]=de(H);break;case"transparent":A[H.nodeName]={opaque:H.hasAttribute("opaque")?H.getAttribute("opaque"):"A_ONE",data:de(H)};break}}return A}function de(C){const A={};for(let z=0,U=C.childNodes.length;z<U;z++){const H=C.childNodes[z];if(H.nodeType===1)switch(H.nodeName){case"color":A[H.nodeName]=r(H.textContent);break;case"float":A[H.nodeName]=parseFloat(H.textContent);break;case"texture":A[H.nodeName]={id:H.getAttribute("texture"),extra:Ee(H)};break}}return A}function Ee(C){const A={technique:{}};for(let z=0,U=C.childNodes.length;z<U;z++){const H=C.childNodes[z];if(H.nodeType===1)switch(H.nodeName){case"extra":ce(H,A);break}}return A}function ce(C,A){for(let z=0,U=C.childNodes.length;z<U;z++){const H=C.childNodes[z];if(H.nodeType===1)switch(H.nodeName){case"technique":De(H,A);break}}}function De(C,A){for(let z=0,U=C.childNodes.length;z<U;z++){const H=C.childNodes[z];if(H.nodeType===1)switch(H.nodeName){case"repeatU":case"repeatV":case"offsetU":case"offsetV":A.technique[H.nodeName]=parseFloat(H.textContent);break;case"wrapU":case"wrapV":H.textContent.toUpperCase()==="TRUE"?A.technique[H.nodeName]=1:H.textContent.toUpperCase()==="FALSE"?A.technique[H.nodeName]=0:A.technique[H.nodeName]=parseInt(H.textContent);break;case"bump":A[H.nodeName]=R(H);break}}}function be(C){const A={};for(let z=0,U=C.childNodes.length;z<U;z++){const H=C.childNodes[z];if(H.nodeType===1)switch(H.nodeName){case"technique":A.technique=I(H);break}}return A}function I(C){const A={};for(let z=0,U=C.childNodes.length;z<U;z++){const H=C.childNodes[z];if(H.nodeType===1)switch(H.nodeName){case"double_sided":A[H.nodeName]=parseInt(H.textContent);break;case"bump":A[H.nodeName]=R(H);break}}return A}function R(C){const A={};for(let z=0,U=C.childNodes.length;z<U;z++){const H=C.childNodes[z];if(H.nodeType===1)switch(H.nodeName){case"texture":A[H.nodeName]={id:H.getAttribute("texture"),texcoord:H.getAttribute("texcoord"),extra:Ee(H)};break}}return A}function te(C){return C}function ae(C){return v(gt.effects[C],te)}function le(C){const A={name:C.getAttribute("name")};for(let z=0,U=C.childNodes.length;z<U;z++){const H=C.childNodes[z];if(H.nodeType===1)switch(H.nodeName){case"instance_effect":A.url=a(H.getAttribute("url"));break}}gt.materials[C.getAttribute("id")]=A}function pe(C){let A,z=C.slice((C.lastIndexOf(".")-1>>>0)+2);switch(z=z.toLowerCase(),z){case"tga":A=mn;break;default:A=wn}return A}function Ae(C){const A=ae(C.url),z=A.profile.technique;let U;switch(z.type){case"phong":case"blinn":U=new vh;break;case"lambert":U=new Nf;break;default:U=new On;break}U.name=C.name||"";function H(Ve,Je=null){const lt=A.profile.samplers[Ve.id];let Ue=null;if(lt!==void 0){const at=A.profile.surfaces[lt.source];Ue=ne(at.init_from)}else console.warn("THREE.ColladaLoader: Undefined sampler. Access image directly (see #12530)."),Ue=ne(Ve.id);if(Ue!==null){const at=pe(Ue);if(at!==void 0){const nt=at.load(Ue),ft=Ve.extra;if(ft!==void 0&&ft.technique!==void 0&&c(ft.technique)===!1){const it=ft.technique;nt.wrapS=it.wrapU?$i:Si,nt.wrapT=it.wrapV?$i:Si,nt.offset.set(it.offsetU||0,it.offsetV||0),nt.repeat.set(it.repeatU||1,it.repeatV||1)}else nt.wrapS=$i,nt.wrapT=$i;return Je!==null&&(nt.colorSpace=Je),nt}else return console.warn("THREE.ColladaLoader: Loader for texture %s not found.",Ue),null}else return console.warn("THREE.ColladaLoader: Couldn't create texture with ID:",Ve.id),null}const me=z.parameters;for(const Ve in me){const Je=me[Ve];switch(Ve){case"diffuse":Je.color&&U.color.fromArray(Je.color),Je.texture&&(U.map=H(Je.texture,ln));break;case"specular":Je.color&&U.specular&&U.specular.fromArray(Je.color),Je.texture&&(U.specularMap=H(Je.texture));break;case"bump":Je.texture&&(U.normalMap=H(Je.texture));break;case"ambient":Je.texture&&(U.lightMap=H(Je.texture,ln));break;case"shininess":Je.float&&U.shininess&&(U.shininess=Je.float);break;case"emission":Je.color&&U.emissive&&U.emissive.fromArray(Je.color),Je.texture&&(U.emissiveMap=H(Je.texture,ln));break}}Lt.toWorkingColorSpace(U.color,ln),U.specular&&Lt.toWorkingColorSpace(U.specular,ln),U.emissive&&Lt.toWorkingColorSpace(U.emissive,ln);let we=me.transparent,$e=me.transparency;if($e===void 0&&we&&($e={float:1}),we===void 0&&$e&&(we={opaque:"A_ONE",data:{color:[1,1,1,1]}}),we&&$e)if(we.data.texture)U.transparent=!0;else{const Ve=we.data.color;switch(we.opaque){case"A_ONE":U.opacity=Ve[3]*$e.float;break;case"RGB_ZERO":U.opacity=1-Ve[0]*$e.float;break;case"A_ZERO":U.opacity=1-Ve[3]*$e.float;break;case"RGB_ONE":U.opacity=Ve[0]*$e.float;break;default:console.warn('THREE.ColladaLoader: Invalid opaque type "%s" of transparent tag.',we.opaque)}U.opacity<1&&(U.transparent=!0)}if(z.extra!==void 0&&z.extra.technique!==void 0){const Ve=z.extra.technique;for(const Je in Ve){const lt=Ve[Je];switch(Je){case"double_sided":U.side=lt===1?xi:vr;break;case"bump":U.normalMap=H(lt.texture),U.normalScale=new xe(1,1);break}}}return U}function Me(C){return v(gt.materials[C],Ae)}function Ce(C){const A={name:C.getAttribute("name")};for(let z=0,U=C.childNodes.length;z<U;z++){const H=C.childNodes[z];if(H.nodeType===1)switch(H.nodeName){case"optics":A.optics=qe(H);break}}gt.cameras[C.getAttribute("id")]=A}function qe(C){for(let A=0;A<C.childNodes.length;A++){const z=C.childNodes[A];switch(z.nodeName){case"technique_common":return Re(z)}}return{}}function Re(C){const A={};for(let z=0;z<C.childNodes.length;z++){const U=C.childNodes[z];switch(U.nodeName){case"perspective":case"orthographic":A.technique=U.nodeName,A.parameters=ze(U);break}}return A}function ze(C){const A={};for(let z=0;z<C.childNodes.length;z++){const U=C.childNodes[z];switch(U.nodeName){case"xfov":case"yfov":case"xmag":case"ymag":case"znear":case"zfar":case"aspect_ratio":A[U.nodeName]=parseFloat(U.textContent);break}}return A}function Be(C){let A;switch(C.optics.technique){case"perspective":A=new bn(C.optics.parameters.yfov,C.optics.parameters.aspect_ratio,C.optics.parameters.znear,C.optics.parameters.zfar);break;case"orthographic":let z=C.optics.parameters.ymag,U=C.optics.parameters.xmag;const H=C.optics.parameters.aspect_ratio;U=U===void 0?z*H:U,z=z===void 0?U/H:z,U*=.5,z*=.5,A=new ls(-U,U,z,-z,C.optics.parameters.znear,C.optics.parameters.zfar);break;default:A=new bn;break}return A.name=C.name||"",A}function He(C){const A=gt.cameras[C];return A!==void 0?v(A,Be):(console.warn("THREE.ColladaLoader: Couldn't find camera with ID:",C),null)}function Pe(C){let A={};for(let z=0,U=C.childNodes.length;z<U;z++){const H=C.childNodes[z];if(H.nodeType===1)switch(H.nodeName){case"technique_common":A=ut(H);break}}gt.lights[C.getAttribute("id")]=A}function ut(C){const A={};for(let z=0,U=C.childNodes.length;z<U;z++){const H=C.childNodes[z];if(H.nodeType===1)switch(H.nodeName){case"directional":case"point":case"spot":case"ambient":A.technique=H.nodeName,A.parameters=tt(H)}}return A}function tt(C){const A={};for(let z=0,U=C.childNodes.length;z<U;z++){const H=C.childNodes[z];if(H.nodeType===1)switch(H.nodeName){case"color":const me=r(H.textContent);A.color=new Ge().fromArray(me),Lt.toWorkingColorSpace(A.color,ln);break;case"falloff_angle":A.falloffAngle=parseFloat(H.textContent);break;case"quadratic_attenuation":const we=parseFloat(H.textContent);A.distance=we?Math.sqrt(1/we):0;break}}return A}function wt(C){let A;switch(C.technique){case"directional":A=new Hf;break;case"point":A=new Vf;break;case"spot":A=new Gf;break;case"ambient":A=new Wf;break}return C.parameters.color&&A.color.copy(C.parameters.color),C.parameters.distance&&(A.distance=C.parameters.distance),A}function ie(C){const A=gt.lights[C];return A!==void 0?v(A,wt):(console.warn("THREE.ColladaLoader: Couldn't find light with ID:",C),null)}function Te(C){const A={name:C.getAttribute("name"),sources:{},vertices:{},primitives:[]},z=n(C,"mesh")[0];if(z!==void 0){for(let U=0;U<z.childNodes.length;U++){const H=z.childNodes[U];if(H.nodeType!==1)continue;const me=H.getAttribute("id");switch(H.nodeName){case"source":A.sources[me]=he(H);break;case"vertices":A.vertices=Ie(H);break;case"polygons":console.warn("THREE.ColladaLoader: Unsupported primitive type: ",H.nodeName);break;case"lines":case"linestrips":case"polylist":case"triangles":A.primitives.push(Oe(H));break;default:console.log(H)}}gt.geometries[C.getAttribute("id")]=A}}function he(C){const A={array:[],stride:3};for(let z=0;z<C.childNodes.length;z++){const U=C.childNodes[z];if(U.nodeType===1)switch(U.nodeName){case"float_array":A.array=r(U.textContent);break;case"Name_array":A.array=i(U.textContent);break;case"technique_common":const H=n(U,"accessor")[0];H!==void 0&&(A.stride=parseInt(H.getAttribute("stride")));break}}return A}function Ie(C){const A={};for(let z=0;z<C.childNodes.length;z++){const U=C.childNodes[z];U.nodeType===1&&(A[U.getAttribute("semantic")]=a(U.getAttribute("source")))}return A}function Oe(C){const A={type:C.nodeName,material:C.getAttribute("material"),count:parseInt(C.getAttribute("count")),inputs:{},stride:0,hasUV:!1};for(let z=0,U=C.childNodes.length;z<U;z++){const H=C.childNodes[z];if(H.nodeType===1)switch(H.nodeName){case"input":const me=a(H.getAttribute("source")),we=H.getAttribute("semantic"),$e=parseInt(H.getAttribute("offset")),Ve=parseInt(H.getAttribute("set")),Je=Ve>0?we+Ve:we;A.inputs[Je]={id:me,offset:$e},A.stride=Math.max(A.stride,$e+1),we==="TEXCOORD"&&(A.hasUV=!0);break;case"vcount":A.vcount=o(H.textContent);break;case"p":A.p=o(H.textContent);break}}return A}function Le(C){const A={};for(let z=0;z<C.length;z++){const U=C[z];A[U.type]===void 0&&(A[U.type]=[]),A[U.type].push(U)}return A}function ot(C){let A=0;for(let z=0,U=C.length;z<U;z++)C[z].hasUV===!0&&A++;A>0&&A<C.length&&(C.uvsNeedsFix=!0)}function xt(C){const A={},z=C.sources,U=C.vertices,H=C.primitives;if(H.length===0)return{};const me=Le(H);for(const we in me){const $e=me[we];ot($e),A[we]=ct($e,z,U)}return A}function ct(C,A,z){const U={},H={array:[],stride:0},me={array:[],stride:0},we={array:[],stride:0},$e={array:[],stride:0},Ve={array:[],stride:0},Je={array:[],stride:4},lt={array:[],stride:4},Ue=new bt,at=[];let nt=0;for(let ft=0;ft<C.length;ft++){const it=C[ft],en=it.inputs;let Vt=0;switch(it.type){case"lines":case"linestrips":Vt=it.count*2;break;case"triangles":Vt=it.count*3;break;case"polylist":for(let zt=0;zt<it.count;zt++){const kt=it.vcount[zt];switch(kt){case 3:Vt+=3;break;case 4:Vt+=6;break;default:Vt+=(kt-2)*3;break}}break;default:console.warn("THREE.ColladaLoader: Unknown primitive type:",it.type)}Ue.addGroup(nt,Vt,ft),nt+=Vt,it.material&&at.push(it.material);for(const zt in en){const kt=en[zt];switch(zt){case"VERTEX":for(const Bi in z){const zn=z[Bi];switch(Bi){case"POSITION":const zi=H.array.length;if(rt(it,A[zn],kt.offset,H.array),H.stride=A[zn].stride,A.skinWeights&&A.skinIndices&&(rt(it,A.skinIndices,kt.offset,Je.array),rt(it,A.skinWeights,kt.offset,lt.array)),it.hasUV===!1&&C.uvsNeedsFix===!0){const ds=(H.array.length-zi)/H.stride;for(let ji=0;ji<ds;ji++)we.array.push(0,0)}break;case"NORMAL":rt(it,A[zn],kt.offset,me.array),me.stride=A[zn].stride;break;case"COLOR":rt(it,A[zn],kt.offset,Ve.array),Ve.stride=A[zn].stride;break;case"TEXCOORD":rt(it,A[zn],kt.offset,we.array),we.stride=A[zn].stride;break;case"TEXCOORD1":rt(it,A[zn],kt.offset,$e.array),we.stride=A[zn].stride;break;default:console.warn('THREE.ColladaLoader: Semantic "%s" not handled in geometry build process.',Bi)}}break;case"NORMAL":rt(it,A[kt.id],kt.offset,me.array),me.stride=A[kt.id].stride;break;case"COLOR":rt(it,A[kt.id],kt.offset,Ve.array,!0),Ve.stride=A[kt.id].stride;break;case"TEXCOORD":rt(it,A[kt.id],kt.offset,we.array),we.stride=A[kt.id].stride;break;case"TEXCOORD1":rt(it,A[kt.id],kt.offset,$e.array),$e.stride=A[kt.id].stride;break}}}return H.array.length>0&&Ue.setAttribute("position",new Ke(H.array,H.stride)),me.array.length>0&&Ue.setAttribute("normal",new Ke(me.array,me.stride)),Ve.array.length>0&&Ue.setAttribute("color",new Ke(Ve.array,Ve.stride)),we.array.length>0&&Ue.setAttribute("uv",new Ke(we.array,we.stride)),$e.array.length>0&&Ue.setAttribute("uv1",new Ke($e.array,$e.stride)),Je.array.length>0&&Ue.setAttribute("skinIndex",new Ke(Je.array,Je.stride)),lt.array.length>0&&Ue.setAttribute("skinWeight",new Ke(lt.array,lt.stride)),U.data=Ue,U.type=C[0].type,U.materialKeys=at,U}function rt(C,A,z,U,H=!1){const me=C.p,we=C.stride,$e=C.vcount;function Ve(Ue){let at=me[Ue+z]*lt;const nt=at+lt;for(;at<nt;at++)U.push(Je[at]);if(H){const ft=U.length-lt-1;hn.setRGB(U[ft+0],U[ft+1],U[ft+2],ln),U[ft+0]=hn.r,U[ft+1]=hn.g,U[ft+2]=hn.b}}const Je=A.array,lt=A.stride;if(C.vcount!==void 0){let Ue=0;for(let at=0,nt=$e.length;at<nt;at++){const ft=$e[at];if(ft===4){const it=Ue+we*0,en=Ue+we*1,Vt=Ue+we*2,zt=Ue+we*3;Ve(it),Ve(en),Ve(zt),Ve(en),Ve(Vt),Ve(zt)}else if(ft===3){const it=Ue+we*0,en=Ue+we*1,Vt=Ue+we*2;Ve(it),Ve(en),Ve(Vt)}else if(ft>4)for(let it=1,en=ft-2;it<=en;it++){const Vt=Ue+we*0,zt=Ue+we*it,kt=Ue+we*(it+1);Ve(Vt),Ve(zt),Ve(kt)}Ue+=we*ft}}else for(let Ue=0,at=me.length;Ue<at;Ue+=we)Ve(Ue)}function Yt(C){return v(gt.geometries[C],xt)}function Jt(C){const A={name:C.getAttribute("name")||"",joints:{},links:[]};for(let z=0;z<C.childNodes.length;z++){const U=C.childNodes[z];if(U.nodeType===1)switch(U.nodeName){case"technique_common":In(U,A);break}}gt.kinematicsModels[C.getAttribute("id")]=A}function sn(C){return C.build!==void 0?C.build:C}function jn(C){return v(gt.kinematicsModels[C],sn)}function In(C,A){for(let z=0;z<C.childNodes.length;z++){const U=C.childNodes[z];if(U.nodeType===1)switch(U.nodeName){case"joint":A.joints[U.getAttribute("sid")]=si(U);break;case"link":A.links.push(Ci(U));break}}}function si(C){let A;for(let z=0;z<C.childNodes.length;z++){const U=C.childNodes[z];if(U.nodeType===1)switch(U.nodeName){case"prismatic":case"revolute":A=Ai(U);break}}return A}function Ai(C){const A={sid:C.getAttribute("sid"),name:C.getAttribute("name")||"",axis:new L,limits:{min:0,max:0},type:C.nodeName,static:!1,zeroPosition:0,middlePosition:0};for(let z=0;z<C.childNodes.length;z++){const U=C.childNodes[z];if(U.nodeType===1)switch(U.nodeName){case"axis":const H=r(U.textContent);A.axis.fromArray(H);break;case"limits":const me=U.getElementsByTagName("max")[0],we=U.getElementsByTagName("min")[0];A.limits.max=parseFloat(me.textContent),A.limits.min=parseFloat(we.textContent);break}}return A.limits.min>=A.limits.max&&(A.static=!0),A.middlePosition=(A.limits.min+A.limits.max)/2,A}function Ci(C){const A={sid:C.getAttribute("sid"),name:C.getAttribute("name")||"",attachments:[],transforms:[]};for(let z=0;z<C.childNodes.length;z++){const U=C.childNodes[z];if(U.nodeType===1)switch(U.nodeName){case"attachment_full":A.attachments.push(Zn(U));break;case"matrix":case"translate":case"rotate":A.transforms.push(_n(U));break}}return A}function Zn(C){const A={joint:C.getAttribute("joint").split("/").pop(),transforms:[],links:[]};for(let z=0;z<C.childNodes.length;z++){const U=C.childNodes[z];if(U.nodeType===1)switch(U.nodeName){case"link":A.links.push(Ci(U));break;case"matrix":case"translate":case"rotate":A.transforms.push(_n(U));break}}return A}function _n(C){const A={type:C.nodeName},z=r(C.textContent);switch(A.type){case"matrix":A.obj=new st,A.obj.fromArray(z).transpose();break;case"translate":A.obj=new L,A.obj.fromArray(z);break;case"rotate":A.obj=new L,A.obj.fromArray(z),A.angle=dr.degToRad(z[3]);break}return A}function di(C){const A={name:C.getAttribute("name")||"",rigidBodies:{}};for(let z=0;z<C.childNodes.length;z++){const U=C.childNodes[z];if(U.nodeType===1)switch(U.nodeName){case"rigid_body":A.rigidBodies[U.getAttribute("name")]={},cs(U,A.rigidBodies[U.getAttribute("name")]);break}}gt.physicsModels[C.getAttribute("id")]=A}function cs(C,A){for(let z=0;z<C.childNodes.length;z++){const U=C.childNodes[z];if(U.nodeType===1)switch(U.nodeName){case"technique_common":Vr(U,A);break}}}function Vr(C,A){for(let z=0;z<C.childNodes.length;z++){const U=C.childNodes[z];if(U.nodeType===1)switch(U.nodeName){case"inertia":A.inertia=r(U.textContent);break;case"mass":A.mass=r(U.textContent)[0];break}}}function Ko(C){const A={bindJointAxis:[]};for(let z=0;z<C.childNodes.length;z++){const U=C.childNodes[z];if(U.nodeType===1)switch(U.nodeName){case"bind_joint_axis":A.bindJointAxis.push(uo(U));break}}gt.kinematicsScenes[a(C.getAttribute("url"))]=A}function uo(C){const A={target:C.getAttribute("target").split("/").pop()};for(let z=0;z<C.childNodes.length;z++){const U=C.childNodes[z];if(U.nodeType===1)switch(U.nodeName){case"axis":const H=U.getElementsByTagName("param")[0];A.axis=H.textContent;const me=A.axis.split("inst_").pop().split("axis")[0];A.jointIndex=me.substring(0,me.length-1);break}}return A}function Hr(C){return C.build!==void 0?C.build:C}function hs(C){return v(gt.kinematicsScenes[C],Hr)}function Qo(){const C=Object.keys(gt.kinematicsModels)[0],A=Object.keys(gt.kinematicsScenes)[0],z=Object.keys(gt.visualScenes)[0];if(C===void 0||A===void 0)return;const U=jn(C),H=hs(A),me=Ut(z),we=H.bindJointAxis,$e={};for(let lt=0,Ue=we.length;lt<Ue;lt++){const at=we[lt],nt=qt.querySelector('[sid="'+at.target+'"]');if(nt){const ft=nt.parentElement;Ve(at.jointIndex,ft)}}function Ve(lt,Ue){const at=Ue.getAttribute("name"),nt=U.joints[lt];me.traverse(function(ft){ft.name===at&&($e[lt]={object:ft,transforms:fo(Ue),joint:nt,position:nt.zeroPosition})})}const Je=new st;qi={joints:U&&U.joints,getJointValue:function(lt){const Ue=$e[lt];if(Ue)return Ue.position;console.warn("THREE.ColladaLoader: Joint "+lt+" doesn't exist.")},setJointValue:function(lt,Ue){const at=$e[lt];if(at){const nt=at.joint;if(Ue>nt.limits.max||Ue<nt.limits.min)console.warn("THREE.ColladaLoader: Joint "+lt+" value "+Ue+" outside of limits (min: "+nt.limits.min+", max: "+nt.limits.max+").");else if(nt.static)console.warn("THREE.ColladaLoader: Joint "+lt+" is static.");else{const ft=at.object,it=nt.axis,en=at.transforms;se.identity();for(let Vt=0;Vt<en.length;Vt++){const zt=en[Vt];if(zt.sid&&zt.sid.indexOf(lt)!==-1)switch(nt.type){case"revolute":se.multiply(Je.makeRotationAxis(it,dr.degToRad(Ue)));break;case"prismatic":se.multiply(Je.makeTranslation(it.x*Ue,it.y*Ue,it.z*Ue));break;default:console.warn("THREE.ColladaLoader: Unknown joint type: "+nt.type);break}else switch(zt.type){case"matrix":se.multiply(zt.obj);break;case"translate":se.multiply(Je.makeTranslation(zt.obj.x,zt.obj.y,zt.obj.z));break;case"scale":se.scale(zt.obj);break;case"rotate":se.multiply(Je.makeRotationAxis(zt.obj,zt.angle));break}}ft.matrix.copy(se),ft.matrix.decompose(ft.position,ft.quaternion,ft.scale),$e[lt].position=Ue}}else console.log("THREE.ColladaLoader: "+lt+" does not exist.")}}}function fo(C){const A=[],z=qt.querySelector('[id="'+C.id+'"]');for(let U=0;U<z.childNodes.length;U++){const H=z.childNodes[U];if(H.nodeType!==1)continue;let me,we;switch(H.nodeName){case"matrix":me=r(H.textContent);const $e=new st().fromArray(me).transpose();A.push({sid:H.getAttribute("sid"),type:H.nodeName,obj:$e});break;case"translate":case"scale":me=r(H.textContent),we=new L().fromArray(me),A.push({sid:H.getAttribute("sid"),type:H.nodeName,obj:we});break;case"rotate":me=r(H.textContent),we=new L().fromArray(me);const Ve=dr.degToRad(me[3]);A.push({sid:H.getAttribute("sid"),type:H.nodeName,obj:we,angle:Ve});break}}return A}function O(C){const A=C.getElementsByTagName("node");for(let z=0;z<A.length;z++){const U=A[z];U.hasAttribute("id")===!1&&U.setAttribute("id",l())}}const se=new st,fe=new L;function re(C){const A={name:C.getAttribute("name")||"",type:C.getAttribute("type"),id:C.getAttribute("id"),sid:C.getAttribute("sid"),matrix:new st,nodes:[],instanceCameras:[],instanceControllers:[],instanceLights:[],instanceGeometries:[],instanceNodes:[],transforms:{}};for(let z=0;z<C.childNodes.length;z++){const U=C.childNodes[z];if(U.nodeType!==1)continue;let H;switch(U.nodeName){case"node":A.nodes.push(U.getAttribute("id")),re(U);break;case"instance_camera":A.instanceCameras.push(a(U.getAttribute("url")));break;case"instance_controller":A.instanceControllers.push(oe(U));break;case"instance_light":A.instanceLights.push(a(U.getAttribute("url")));break;case"instance_geometry":A.instanceGeometries.push(oe(U));break;case"instance_node":A.instanceNodes.push(a(U.getAttribute("url")));break;case"matrix":H=r(U.textContent),A.matrix.multiply(se.fromArray(H).transpose()),A.transforms[U.getAttribute("sid")]=U.nodeName;break;case"translate":H=r(U.textContent),fe.fromArray(H),A.matrix.multiply(se.makeTranslation(fe.x,fe.y,fe.z)),A.transforms[U.getAttribute("sid")]=U.nodeName;break;case"rotate":H=r(U.textContent);const me=dr.degToRad(H[3]);A.matrix.multiply(se.makeRotationAxis(fe.fromArray(H),me)),A.transforms[U.getAttribute("sid")]=U.nodeName;break;case"scale":H=r(U.textContent),A.matrix.scale(fe.fromArray(H)),A.transforms[U.getAttribute("sid")]=U.nodeName;break;case"extra":break;default:console.log(U)}}return ht(A.id)?console.warn("THREE.ColladaLoader: There is already a node with ID %s. Exclude current node from further processing.",A.id):gt.nodes[A.id]=A,A}function oe(C){const A={id:a(C.getAttribute("url")),materials:{},skeletons:[]};for(let z=0;z<C.childNodes.length;z++){const U=C.childNodes[z];switch(U.nodeName){case"bind_material":const H=U.getElementsByTagName("instance_material");for(let me=0;me<H.length;me++){const we=H[me],$e=we.getAttribute("symbol"),Ve=we.getAttribute("target");A.materials[$e]=a(Ve)}break;case"skeleton":A.skeletons.push(a(U.textContent));break}}return A}function Fe(C,A){const z=[],U=[];let H,me,we;for(H=0;H<C.length;H++){const Je=C[H];let lt;if(ht(Je))lt=At(Je),We(lt,A,z);else if(Kt(Je)){const at=gt.visualScenes[Je].children;for(let nt=0;nt<at.length;nt++){const ft=at[nt];if(ft.type==="JOINT"){const it=At(ft.id);We(it,A,z)}}}else console.error("THREE.ColladaLoader: Unable to find root bone of skeleton with ID:",Je)}for(H=0;H<A.length;H++)for(me=0;me<z.length;me++)if(we=z[me],we.bone.name===A[H].name){U[H]=we,we.processed=!0;break}for(H=0;H<z.length;H++)we=z[H],we.processed===!1&&(U.push(we),we.processed=!0);const $e=[],Ve=[];for(H=0;H<U.length;H++)we=U[H],$e.push(we.bone),Ve.push(we.boneInverse);return new dl($e,Ve)}function We(C,A,z){C.traverse(function(U){if(U.isBone===!0){let H;for(let me=0;me<A.length;me++){const we=A[me];if(we.name===U.name){H=we.boneInverse;break}}H===void 0&&(H=new st),z.push({bone:U,boneInverse:H,processed:!1})}})}function Qe(C){const A=[],z=C.matrix,U=C.nodes,H=C.type,me=C.instanceCameras,we=C.instanceControllers,$e=C.instanceLights,Ve=C.instanceGeometries,Je=C.instanceNodes;for(let Ue=0,at=U.length;Ue<at;Ue++)A.push(At(U[Ue]));for(let Ue=0,at=me.length;Ue<at;Ue++){const nt=He(me[Ue]);nt!==null&&A.push(nt.clone())}for(let Ue=0,at=we.length;Ue<at;Ue++){const nt=we[Ue],ft=W(nt.id),it=Yt(ft.id),en=mt(it,nt.materials),Vt=nt.skeletons,zt=ft.skin.joints,kt=Fe(Vt,zt);for(let Bi=0,zn=en.length;Bi<zn;Bi++){const zi=en[Bi];zi.isSkinnedMesh&&(zi.bind(kt,ft.skin.bindMatrix),zi.normalizeSkinWeights()),A.push(zi)}}for(let Ue=0,at=$e.length;Ue<at;Ue++){const nt=ie($e[Ue]);nt!==null&&A.push(nt.clone())}for(let Ue=0,at=Ve.length;Ue<at;Ue++){const nt=Ve[Ue],ft=Yt(nt.id),it=mt(ft,nt.materials);for(let en=0,Vt=it.length;en<Vt;en++)A.push(it[en])}for(let Ue=0,at=Je.length;Ue<at;Ue++)A.push(At(Je[Ue]).clone());let lt;if(U.length===0&&A.length===1)lt=A[0];else{lt=H==="JOINT"?new Bh:new Wi;for(let Ue=0;Ue<A.length;Ue++)lt.add(A[Ue])}return lt.name=H==="JOINT"?C.sid:C.name,lt.matrix.copy(z),lt.matrix.decompose(lt.position,lt.quaternion,lt.scale),lt}const et=new On({name:qn.DEFAULT_MATERIAL_NAME,color:16711935});function yt(C,A){const z=[];for(let U=0,H=C.length;U<H;U++){const me=A[C[U]];me===void 0?(console.warn("THREE.ColladaLoader: Material with key %s not found. Apply fallback material.",C[U]),z.push(et)):z.push(Me(me))}return z}function mt(C,A){const z=[];for(const U in C){const H=C[U],me=yt(H.materialKeys,A);if(me.length===0&&(U==="lines"||U==="linestrips"?me.push(new Fn):me.push(new vh)),U==="lines"||U==="linestrips")for(let Je=0,lt=me.length;Je<lt;Je++){const Ue=me[Je];if(Ue.isMeshPhongMaterial===!0||Ue.isMeshLambertMaterial===!0){const at=new Fn;at.color.copy(Ue.color),at.opacity=Ue.opacity,at.transparent=Ue.transparent,me[Je]=at}}const we=H.data.attributes.skinIndex!==void 0,$e=me.length===1?me[0]:me;let Ve;switch(U){case"lines":Ve=new ir(H.data,$e);break;case"linestrips":Ve=new Xn(H.data,$e);break;case"triangles":case"polylist":we?Ve=new wf(H.data,$e):Ve=new ke(H.data,$e);break}z.push(Ve)}return z}function ht(C){return gt.nodes[C]!==void 0}function At(C){return v(gt.nodes[C],Qe)}function Ft(C){const A={name:C.getAttribute("name"),children:[]};O(C);const z=n(C,"node");for(let U=0;U<z.length;U++)A.children.push(re(z[U]));gt.visualScenes[C.getAttribute("id")]=A}function rn(C){const A=new Wi;A.name=C.name;const z=C.children;for(let U=0;U<z.length;U++){const H=z[U];A.add(At(H.id))}return A}function Kt(C){return gt.visualScenes[C]!==void 0}function Ut(C){return v(gt.visualScenes[C],rn)}function dt(C){const A=n(C,"instance_visual_scene")[0];return Ut(a(A.getAttribute("url")))}function cn(){const C=gt.clips;if(c(C)===!0){if(c(gt.animations)===!1){const A=[];for(const z in gt.animations){const U=_(z);for(let H=0,me=U.length;H<me;H++)A.push(U[H])}on.push(new ro("default",-1,A))}}else for(const A in C)on.push(Z(A))}function It(C){let A="";const z=[C];for(;z.length;){const U=z.shift();U.nodeType===Node.TEXT_NODE?A+=U.textContent:(A+=`
`,z.push.apply(z,U.childNodes))}return A.trim()}if(e.length===0)return{scene:new Fh};const Dn=new DOMParser().parseFromString(e,"application/xml"),qt=n(Dn,"COLLADA")[0],yn=Dn.getElementsByTagName("parsererror")[0];if(yn!==void 0){const C=n(yn,"div")[0];let A;return C?A=C.textContent:A=It(yn),console.error(`THREE.ColladaLoader: Failed to parse collada file.
`,A),null}const Ln=qt.getAttribute("version");console.debug("THREE.ColladaLoader: File version",Ln);const jt=h(n(qt,"asset")[0]),wn=new kv(this.manager);wn.setPath(this.resourcePath||t).setCrossOrigin(this.crossOrigin);let mn;n0&&(mn=new n0(this.manager),mn.setPath(this.resourcePath||t));const hn=new Ge,on=[];let qi={},Ri=0;const gt={animations:{},clips:{},controllers:{},images:{},effects:{},materials:{},cameras:{},lights:{},geometries:{},nodes:{},visualScenes:{},kinematicsModels:{},physicsModels:{},kinematicsScenes:{}};f(qt,"library_animations","animation",g),f(qt,"library_animation_clips","animation_clip",N),f(qt,"library_controllers","controller",j),f(qt,"library_images","image",q),f(qt,"library_effects","effect",ge),f(qt,"library_materials","material",le),f(qt,"library_cameras","camera",Ce),f(qt,"library_lights","light",Pe),f(qt,"library_geometries","geometry",Te),f(qt,"library_nodes","node",re),f(qt,"library_visual_scenes","visual_scene",Ft),f(qt,"library_kinematics_models","kinematics_model",Jt),f(qt,"library_physics_models","physics_model",di),f(qt,"scene","instance_kinematics_scene",Ko),p(gt.animations,y),p(gt.clips,Q),p(gt.controllers,$),p(gt.images,Y),p(gt.effects,te),p(gt.materials,Ae),p(gt.cameras,Be),p(gt.lights,wt),p(gt.geometries,xt),p(gt.visualScenes,rn),cn(),Qo();const us=dt(n(qt,"scene")[0]);return us.animations=on,jt.upAxis==="Z_UP"&&(console.warn("THREE.ColladaLoader: You are loading an asset with a Z-UP coordinate system. The loader just rotates the asset to transform it into Y-UP. The vertex data are not converted, see #24289."),us.rotation.set(-Math.PI/2,0,0)),us.scale.multiplyScalar(jt.unit),{get animations(){return console.warn("THREE.ColladaLoader: Please access animations over scene.animations now."),on},kinematics:qi,library:gt,scene:us}}}var TR=$t("<!> <!>",1);function AR(s,e){kn(e,!0);let t=Xe(e,"color",19,()=>new Ge("pink")),n=Xe(e,"scale",19,()=>[1,1,1]),i=Xe(e,"rotation",19,()=>[0,0,0]),r=Xe(e,"position",19,()=>[0,0,0]),o=Xe(e,"onclick",3,()=>{}),a=Xe(e,"opacity",3,1),l=Hi(Nn([1,1,1])),c=Hi(Nn([0,0,0])),h=Hi(Nn([0,0,0])),u=Hi(Nn([]));const d=[Math.PI/2,-Math.PI/2,-Math.PI/2];h_(ER).load(e.filename).subscribe(x=>{if(!x)return;let y=x.scene;Ui(l,Nn(y.scale.toArray())),Ui(c,Nn(y.position.toArray())),Ui(h,Nn(y.rotation?y.rotation.toArray():ye(h)));let _=[];x.scene.traverse(E=>{E.type==="Mesh"&&_.push(E)}),Ui(u,Nn(_))});var v=pt(),g=Ze(v);{var m=x=>{var y=TR(),_=Ze(y);Sh(_,()=>`<!-- include dae: ${e.filename} ${n()} -->`);var E=_t(_,2);Nt(E,()=>St.Group,(w,M)=>{M(w,{get scale(){return n()},get position(){return r()},get rotation(){return i()},children:(T,S)=>{var b=pt(),D=Ze(b);Nt(D,()=>St.Group,(P,k)=>{k(P,{rotation:d,children:(V,K)=>{var N=pt(),Q=Ze(N);Nt(Q,()=>St.Group,(Z,j)=>{j(Z,{get scale(){return ye(l)},get position(){return ye(c)},get rotation(){return ye(h)},children:(X,F)=>{var J=pt(),$=Ze(J);Lr($,17,()=>ye(u),Dr,(G,W)=>{var q=pt(),Y=Ze(q);const ne=Mt(()=>ye(W).scale?ye(W).scale.toArray():[1,1,1]),ge=Mt(()=>ye(W).position?ye(W).position.toArray():[0,0,0]);Nt(Y,()=>St.Mesh,(ve,_e)=>{_e(ve,{castShadow:!0,receiveShadow:!0,get geometry(){return ye(W).geometry},get scale(){return ye(ne)},get position(){return ye(ge)},get material(){return ye(W).material},get onclick(){return o()},children:(ee,ue)=>{var B=pt(),Se=Ze(B);{var de=Ee=>{var ce=pt(),De=Ze(ce);{var be=R=>{var te=pt(),ae=Ze(te);Nt(ae,()=>St.MeshLambertMaterial,(le,pe)=>{pe(le,{get color(){return t()},get opacity(){return a()},transparent:!0})}),Ye(R,te)},I=R=>{var te=pt(),ae=Ze(te);Nt(ae,()=>St.MeshLambertMaterial,(le,pe)=>{pe(le,{get color(){return t()}})}),Ye(R,te)};Bt(De,R=>{a()<1?R(be):R(I,!1)})}Ye(Ee,ce)};Bt(Se,Ee=>{t()&&Ee(de)})}Ye(ee,B)},$$slots:{default:!0}})}),Ye(G,q)}),Ye(X,J)},$$slots:{default:!0}})}),Ye(V,N)},$$slots:{default:!0}})}),Ye(T,b)},$$slots:{default:!0}})}),Ye(x,y)};Bt(g,x=>{ye(u).length>0&&x(m)})}Ye(s,v),Bn()}class CR extends qn{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new nr(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(r.parse(a))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}parse(e){function t(c){const h=new DataView(c),u=32/8*3+32/8*3*3+16/8,d=h.getUint32(80,!0);if(80+32/8+d*u===h.byteLength)return!0;const p=[115,111,108,105,100];for(let v=0;v<5;v++)if(n(p,h,v))return!1;return!0}function n(c,h,u){for(let d=0,f=c.length;d<f;d++)if(c[d]!==h.getUint8(u+d))return!1;return!0}function i(c){const h=new DataView(c),u=h.getUint32(80,!0);let d,f,p,v=!1,g,m,x,y,_;for(let D=0;D<70;D++)h.getUint32(D,!1)==1129270351&&h.getUint8(D+4)==82&&h.getUint8(D+5)==61&&(v=!0,g=new Float32Array(u*3*3),m=h.getUint8(D+6)/255,x=h.getUint8(D+7)/255,y=h.getUint8(D+8)/255,_=h.getUint8(D+9)/255);const E=84,w=12*4+2,M=new bt,T=new Float32Array(u*3*3),S=new Float32Array(u*3*3),b=new Ge;for(let D=0;D<u;D++){const P=E+D*w,k=h.getFloat32(P,!0),V=h.getFloat32(P+4,!0),K=h.getFloat32(P+8,!0);if(v){const N=h.getUint16(P+48,!0);(N&32768)===0?(d=(N&31)/31,f=(N>>5&31)/31,p=(N>>10&31)/31):(d=m,f=x,p=y)}for(let N=1;N<=3;N++){const Q=P+N*12,Z=D*3*3+(N-1)*3;T[Z]=h.getFloat32(Q,!0),T[Z+1]=h.getFloat32(Q+4,!0),T[Z+2]=h.getFloat32(Q+8,!0),S[Z]=k,S[Z+1]=V,S[Z+2]=K,v&&(b.setRGB(d,f,p,ln),g[Z]=b.r,g[Z+1]=b.g,g[Z+2]=b.b)}}return M.setAttribute("position",new Ct(T,3)),M.setAttribute("normal",new Ct(S,3)),v&&(M.setAttribute("color",new Ct(g,3)),M.hasColors=!0,M.alpha=_),M}function r(c){const h=new bt,u=/solid([\s\S]*?)endsolid/g,d=/facet([\s\S]*?)endfacet/g,f=/solid\s(.+)/;let p=0;const v=/[\s]+([+-]?(?:\d*)(?:\.\d*)?(?:[eE][+-]?\d+)?)/.source,g=new RegExp("vertex"+v+v+v,"g"),m=new RegExp("normal"+v+v+v,"g"),x=[],y=[],_=[],E=new L;let w,M=0,T=0,S=0;for(;(w=u.exec(c))!==null;){T=S;const b=w[0],D=(w=f.exec(b))!==null?w[1]:"";for(_.push(D);(w=d.exec(b))!==null;){let V=0,K=0;const N=w[0];for(;(w=m.exec(N))!==null;)E.x=parseFloat(w[1]),E.y=parseFloat(w[2]),E.z=parseFloat(w[3]),K++;for(;(w=g.exec(N))!==null;)x.push(parseFloat(w[1]),parseFloat(w[2]),parseFloat(w[3])),y.push(E.x,E.y,E.z),V++,S++;K!==1&&console.error("THREE.STLLoader: Something isn't right with the normal of face number "+p),V!==3&&console.error("THREE.STLLoader: Something isn't right with the vertices of face number "+p),p++}const P=T,k=S-T;h.userData.groupNames=_,h.addGroup(P,k,M),M++}return h.setAttribute("position",new Ke(x,3)),h.setAttribute("normal",new Ke(y,3)),h}function o(c){return typeof c!="string"?new TextDecoder().decode(c):c}function a(c){if(typeof c=="string"){const h=new Uint8Array(c.length);for(let u=0;u<c.length;u++)h[u]=c.charCodeAt(u)&255;return h.buffer||h}else return c}const l=a(e);return t(l)?i(l):r(o(e))}}var RR=$t("<!> <!>",1);function PR(s,e){kn(e,!0);const[t,n]=il(),i=()=>Ws(ye(d),"$stl",t);let r=Xe(e,"color",19,()=>new Ge("pink")),o=Xe(e,"scale",19,()=>[1,1,1]),a=Xe(e,"rotation",19,()=>[0,0,0]),l=Xe(e,"position",19,()=>[0,0,0]),c=Xe(e,"onclick",3,()=>{}),h=Xe(e,"opacity",3,1);const u=h_(CR);let d=Mt(()=>u.load(e.filename));var f=pt(),p=Ze(f);{var v=g=>{var m=RR(),x=Ze(m);Sh(x,()=>`<!-- include stl: ${e.filename} ${o()} -->`);var y=_t(x,2);Nt(y,()=>St.Mesh,(_,E)=>{E(_,{castShadow:!0,receiveShadow:!0,get geometry(){return i()},get scale(){return o()},get onclick(){return c()},get position(){return l()},get rotation(){return a()},children:(w,M)=>{var T=pt(),S=Ze(T);{var b=P=>{var k=pt(),V=Ze(k);Nt(V,()=>St.MeshLambertMaterial,(K,N)=>{N(K,{get color(){return r()},get opacity(){return h()},transparent:!0})}),Ye(P,k)},D=P=>{var k=pt(),V=Ze(k);Nt(V,()=>St.MeshLambertMaterial,(K,N)=>{N(K,{get color(){return r()}})}),Ye(P,k)};Bt(S,P=>{h()<1?P(b):P(D,!1)})}Ye(w,T)},$$slots:{default:!0}})}),Ye(g,m)};Bt(p,g=>{i()&&g(v)})}Ye(s,f),Bn(),n()}function z_(s,e){kn(e,!0);let t=Xe(e,"origin",7),n=Xe(e,"selected",3,!1);const i=h=>{t().origin_xyz=h.position.toArray(),t().origin_rpy=[h.rotation.x,h.rotation.y,h.rotation.z],MR(t())},r=h=>{if(!h.target)return;const u=h.target.object;i(u),e.ondatachange&&e.ondatachange(h)};dp();var o=pt(),a=Ze(o);{var l=h=>{const u=Mt(()=>Math.PI/Ne.rotationSnap);J2(h,{get translationSnap(){return Ne.translationSnap},get scaleSnap(){return Ne.scaleSnap},get rotationSnap(){return ye(u)},get position(){return t().origin_xyz},get rotation(){return t().origin_rpy},get mode(){return Ne.tool},onobjectChange:r,children:(d,f)=>{var p=pt(),v=Ze(p);Xi(v,()=>e.children??kr),Ye(d,p)},$$slots:{default:!0}})},c=h=>{var u=pt(),d=Ze(u);Nt(d,()=>St.Group,(f,p)=>{p(f,{get position(){return t().origin_xyz},get rotation(){return t().origin_rpy},children:(v,g)=>{var m=pt(),x=Ze(m);Xi(x,()=>e.children??kr),Ye(v,m)},$$slots:{default:!0}})}),Ye(h,u)};Bt(a,h=>{n()&&Ne.edit?h(l):h(c,!1)})}Ye(s,o),Bn()}var IR=$t("<!> <!>",1),DR=$t("<!> <!>",1);function i0(s,e){kn(e,!0);let t=Xe(e,"opacity",3,1),n=Xe(e,"color",3,void 0),i=Xe(e,"ondatachange",3,void 0);function r(){var h;return Ne.selectedLink==e.link?new Ge(Ne.highlightColor):(h=e.visual)!=null&&h.color_rgba?xR(e.visual.color_rgba):new Ge(n()||"gray")}const o=h=>{h.stopPropagation(),Ne.selectedLink=e.link,Ne.selectedJoint=void 0};dp();var a=pt(),l=Ze(a);{var c=h=>{const u=Mt(()=>Ne.selectedLink==e.link);z_(h,{get origin(){return e.visual},get ondatachange(){return i()},get selected(){return ye(u)},children:(d,f)=>{var p=pt(),v=Ze(p);{var g=x=>{var y=pt(),_=Ze(y);{var E=M=>{const T=Mt(r),S=Mt(()=>e.visual.geometry.scale||[1,1,1]);PR(M,{onclick:o,get filename(){return e.visual.geometry.filename},get color(){return ye(T)},get opacity(){return t()},get scale(){return ye(S)}})},w=M=>{var T=pt(),S=Ze(T);{var b=D=>{const P=Mt(r),k=Mt(()=>e.visual.geometry.scale||[1,1,1]);AR(D,{onclick:o,get filename(){return e.visual.geometry.filename},get color(){return ye(P)},get opacity(){return t()},get scale(){return ye(k)}})};Bt(S,D=>{e.visual.geometry.type==="dae"&&D(b)},!0)}Ye(M,T)};Bt(_,M=>{e.visual.geometry.type==="stl"?M(E):M(w,!1)})}Ye(x,y)},m=x=>{var y=pt(),_=Ze(y);{var E=M=>{var T=pt(),S=Ze(T);Nt(S,()=>St.Mesh,(b,D)=>{D(b,{castShadow:!0,receiveShadow:!0,rotation:[Math.PI/2,0,0],onclick:o,children:(P,k)=>{var V=IR(),K=Ze(V);const N=Mt(()=>[e.visual.geometry.radius,e.visual.geometry.radius,e.visual.geometry.length]);Nt(K,()=>St.CylinderGeometry,(X,F)=>{F(X,{get args(){return ye(N)}})});var Q=_t(K,2);{var Z=X=>{var F=pt(),J=Ze(F);const $=Mt(r);Nt(J,()=>St.MeshBasicMaterial,(G,W)=>{W(G,{get color(){return ye($)},get opacity(){return t()},transparent:!0})}),Ye(X,F)},j=X=>{var F=pt(),J=Ze(F);const $=Mt(r);Nt(J,()=>St.MeshBasicMaterial,(G,W)=>{W(G,{get color(){return ye($)}})}),Ye(X,F)};Bt(Q,X=>{t()<1?X(Z):X(j,!1)})}Ye(P,V)},$$slots:{default:!0}})}),Ye(M,T)},w=M=>{var T=pt(),S=Ze(T);{var b=D=>{var P=pt(),k=Ze(P);const V=Mt(()=>e.visual.geometry.size||[1,1,1]);Nt(k,()=>St.Mesh,(K,N)=>{N(K,{castShadow:!0,receiveShadow:!0,get scale(){return ye(V)},onclick:o,children:(Q,Z)=>{var j=DR(),X=Ze(j);Nt(X,()=>St.BoxGeometry,(G,W)=>{W(G,{})});var F=_t(X,2);{var J=G=>{var W=pt(),q=Ze(W);const Y=Mt(r);Nt(q,()=>St.MeshBasicMaterial,(ne,ge)=>{ge(ne,{get color(){return ye(Y)},get opacity(){return t()},transparent:!0})}),Ye(G,W)},$=G=>{var W=pt(),q=Ze(W);const Y=Mt(r);Nt(q,()=>St.MeshBasicMaterial,(ne,ge)=>{ge(ne,{get color(){return ye(Y)}})}),Ye(G,W)};Bt(F,G=>{t()<1?G(J):G($,!1)})}Ye(Q,j)},$$slots:{default:!0}})}),Ye(D,P)};Bt(S,D=>{e.visual.type==="box"&&D(b)},!0)}Ye(M,T)};Bt(_,M=>{e.visual.type==="cylinder"?M(E):M(w,!1)})}Ye(x,y)};Bt(v,x=>{e.visual.type==="mesh"&&e.visual.geometry?x(g):x(m,!1)})}Ye(d,p)},$$slots:{default:!0}})};Bt(l,h=>{e.visual&&h(c)})}Ye(s,a),Bn()}var LR=$t("<!> <!>",1),UR=$t("<!> <!>",1),NR=$t("<!> <!>",1),OR=$t("<!> <!>",1),FR=$t("<!> <!>",1),kR=$t("<!> <!> <!>",1),BR=$t("<!> <!>",1);function zR(s,e){kn(e,!0);let t=Xe(e,"ondatachange",3,void 0),n=.7;const i=c=>{c.stopPropagation(),Ne.selectedLink=void 0,Ne.selectedJoint=e.joint};dp();var r=BR(),o=Ze(r);Sh(o,()=>`<!-- Joint ${e.joint.name} (${e.joint.type}) -->`);var a=_t(o,2);{var l=c=>{var h=kR(),u=Ze(h);{var d=m=>{x_(m,{get"position.x"(){return e.joint.origin_xyz[0]},get"position.y"(){return e.joint.origin_xyz[1]},get"position.z"(){return e.joint.origin_xyz[2]},children:(x,y)=>{const _=Mt(()=>B_(Ne.nameHeight)),E=Mt(()=>Ne.selectedJoint==e.joint?Ne.highlightColor:Ne.jointColor);D_(x,{get scale(){return ye(_)},get color(){return ye(E)},get text(){return e.joint.name}})},$$slots:{default:!0}})};Bt(u,m=>{Ne.jointNames&&m(d)})}var f=_t(u,2);{var p=m=>{var x=pt(),y=Ze(x);Nt(y,()=>St.Line,(_,E)=>{E(_,{children:(w,M)=>{var T=LR(),S=Ze(T);const b=Mt(()=>[new L(0,0,0),new L(e.joint.origin_xyz[0],e.joint.origin_xyz[1],e.joint.origin_xyz[2])]);Lg(S,{get points(){return ye(b)}});var D=_t(S,2);Nt(D,()=>St.LineBasicMaterial,(P,k)=>{k(P,{get color(){return Ne.jointColor}})}),Ye(w,T)},$$slots:{default:!0}})}),Ye(m,x)};Bt(f,m=>{Ne.joints&&m(p)})}var v=_t(f,2);const g=Mt(()=>Ne.selectedJoint==e.joint);z_(v,{get ondatachange(){return t()},get origin(){return e.joint},get selected(){return ye(g)},children:(m,x)=>{var y=pt(),_=Ze(y);const E=Mt(()=>e.joint.rotation||[0,0,0]);Nt(_,()=>St.Group,(w,M)=>{M(w,{get rotation(){return ye(E)},children:(T,S)=>{var b=FR(),D=Ze(b);{var P=K=>{G_(K,{get link(){return e.joint.child},get ondatachange(){return t()}})};Bt(D,K=>{e.joint.child&&K(P)})}var k=_t(D,2);{var V=K=>{var N=OR(),Q=Ze(N);Nt(Q,()=>St.Line,(j,X)=>{X(j,{children:(F,J)=>{var $=UR(),G=Ze($);Lg(G,{onclick:i,points:[new L(0,0,0),new L(0,-.02,0)]});var W=_t(G,2);Nt(W,()=>St.LineBasicMaterial,(q,Y)=>{Y(q,{get color(){return Ne.jointIndicatorColor}})}),Ye(F,$)},$$slots:{default:!0}})});var Z=_t(Q,2);Nt(Z,()=>St.Mesh,(j,X)=>{X(j,{onclick:i,rotation:[Math.PI/2,0,0],children:(F,J)=>{var $=NR(),G=Ze($);Nt(G,()=>St.CylinderGeometry,(Y,ne)=>{ne(Y,{args:[.004,.004,.03]})});var W=_t(G,2);{var q=Y=>{var ne=pt(),ge=Ze(ne);const ve=Mt(()=>Ne.selectedJoint==e.joint?Ne.highlightColor:Ne.jointColor);Nt(ge,()=>St.MeshBasicMaterial,(_e,ee)=>{ee(_e,{get color(){return ye(ve)},opacity:n,transparent:!0})}),Ye(Y,ne)};Bt(W,Y=>{Y(q)})}Ye(F,$)},$$slots:{default:!0}})}),Ye(K,N)};Bt(k,K=>{Ne.joints&&K(V)})}Ye(T,b)},$$slots:{default:!0}})}),Ye(m,y)},$$slots:{default:!0}}),Ye(c,h)};Bt(a,c=>{Ne.robot&&c(l)})}Ye(s,r),Bn()}var GR=$t("<!> <!> <!> <!> <!>",1);function G_(s,e){kn(e,!0);let t=Xe(e,"ondatachange",3,void 0);function n(){return e.link.collision&&e.link.collision.length>0?e.link.collision[0].origin_xyz:e.link.visual&&e.link.visual.length>0?e.link.visual[0].origin_xyz:[0,0,0]}var i=pt(),r=Ze(i);{var o=a=>{var l=GR(),c=Ze(l);Sh(c,()=>`<!-- Link ${e.link.name} -->`);var h=_t(c,2);{var u=m=>{const x=Mt(n);x_(m,{get position(){return ye(x)},children:(y,_)=>{const E=Mt(()=>Ne.selectedLink==e.link?Ne.highlightColor:Ne.linkColor),w=Mt(()=>B_(Ne.nameHeight));D_(y,{anchorY:-.2,get color(){return ye(E)},get scale(){return ye(w)},get text(){return e.link.name}})},$$slots:{default:!0}})};Bt(h,m=>{Ne.linkNames&&m(u)})}var d=_t(h,2);{var f=m=>{var x=pt(),y=Ze(x);Lr(y,17,()=>e.link.visual,Dr,(_,E)=>{i0(_,{get ondatachange(){return t()},get opacity(){return Ne.visualOpacity},get visual(){return ye(E)},get link(){return e.link}})}),Ye(m,x)};Bt(d,m=>{Ne.visual&&m(f)})}var p=_t(d,2);{var v=m=>{var x=pt(),y=Ze(x);Lr(y,17,()=>e.link.collision,Dr,(_,E)=>{i0(_,{get ondatachange(){return t()},get opacity(){return Ne.collisionOpacity},get visual(){return ye(E)},get color(){return Ne.collisionColor},get link(){return e.link}})}),Ye(m,x)};Bt(p,m=>{Ne.collision&&m(v)})}var g=_t(p,2);Lr(g,17,()=>SR(Ne.robot,e.link),Dr,(m,x)=>{zR(m,{get ondatachange(){return t()},get joint(){return ye(x)}})}),Ye(a,l)};Bt(r,a=>{Ne.robot&&a(o)})}Ye(s,i),Bn()}function VR(s,e){kn(e,!0);let t=Xe(e,"position",19,()=>[0,0,0]),n=Xe(e,"quaternion",19,()=>[0,0,0,1]),i=Xe(e,"ondatachange",3,void 0);var r=pt(),o=Ze(r);{var a=l=>{var c=pt(),h=Ze(c);Nt(h,()=>St.Group,(u,d)=>{d(u,{get position(){return t()},get quaternion(){return n()},children:(f,p)=>{var v=pt(),g=Ze(v);Lr(g,17,()=>bR(Ne.robot),Dr,(m,x)=>{G_(m,{get link(){return ye(x)},get ondatachange(){return i()}})}),Ye(f,v)},$$slots:{default:!0}})}),Ye(l,c)};Bt(o,l=>{Ne.robot&&l(a)})}Ye(s,r),Bn()}var HR=$t("<!> <!> <!> <!>",1);function WR(s,e){let t=Xe(e,"intensity",3,.5),n=Xe(e,"radius",3,1),i=Xe(e,"shadows",3,!0),r=Xe(e,"preset_name",3,"rembrandt"),o=Xe(e,"shadowBias",19,()=>-1e-4),a=Xe(e,"normalBias",3,0),l=Xe(e,"shadowSize",3,256),c=Xe(e,"height",3,1),h=Xe(e,"shadowOffset",3,1);const d={rembrandt:{main:[1,2,1],fill:[-2,-.5,-2]},portrait:{main:[-1,2,.5],fill:[-1,.5,-1.5]},upfront:{main:[0,2,1],fill:[-1,.5,-1.5]},soft:{main:[-2,4,4],fill:[-1,.5,-1.5]}}[r()];var f=HR(),p=Ze(f);const v=Mt(()=>t()/3);Nt(p,()=>St.AmbientLight,(M,T)=>{T(M,{get intensity(){return ye(v)}})});var g=_t(p,2);const m=Mt(()=>[d.main[0]*n(),d.main[1]*n(),d.main[2]*n()]),x=Mt(()=>t()*2);Nt(g,()=>St.SpotLight,(M,T)=>{T(M,{penumbra:1,get position(){return ye(m)},get intensity(){return ye(x)},get castShadow(){return i()},get"shadow-bias"(){return o()},get"shadow-normalBias"(){return a()},get"shadow-mapSize"(){return l()}})});var y=_t(g,2);const _=Mt(()=>[d.fill[0]*n(),d.fill[1]*n(),d.fill[2]*n()]);Nt(y,()=>St.PointLight,(M,T)=>{T(M,{get position(){return ye(_)},get intensity(){return t()}})});var E=_t(y,2);const w=Mt(()=>[0,-c()/2-h()/2,0]);Nt(E,()=>St.Group,(M,T)=>{T(M,{get position(){return ye(w)},children:(S,b)=>{var D=pt(),P=Ze(D);{var k=V=>{const K=Mt(()=>n()*4);U2(V,{get scale(){return ye(K)},get far(){return n()},blur:2})};Bt(P,V=>{i()&&V(k)})}Ye(S,D)},$$slots:{default:!0}})}),Ye(s,f)}var XR=$t("<!> <!>",1),YR=$t("<!> <!> <!> <!>",1),qR=$t('<input type="range" min="0" max="360" step="1"><label> </label>',1),jR=$t("<h3>Continuous Joints</h3> <!> <br> <button>reset</button><br>",1),ZR=$t('<input type="range" step="1"><label> </label>',1),JR=$t("<h3>Revolute Joints</h3> <!>",1),KR=$t(" <br> ",1),QR=$t(" <br>",1),$R=$t(" <br>",1),eP=$t(" <br> visuals: <br> <!> collisions: <br> <!>",1),tP=$t('<main class="main-content"><div><!></div> <div class="joint_states svelte-tlisrv"><!> <!> <hr> <input type="range" id="_visual_opacity"><br> <label for="_visual_opacity">Visual Opacity</label> <input type="range" id="_collision_opacity"><br> <label for="_collision_opacity">Collision Opacity</label> <hr> <input type="checkbox" id="_urdf_visual"> <label for="_urdf_visual">Visual</label> <br> <input type="checkbox" id="_urdf_collision"> <label for="_urdf_collision">Collision</label><br> <input type="checkbox" id="_urdf_linknames"> <label for="_urdf_linknames">Link names</label><br> <input type="checkbox" id="_urdf_joints"> <label for="_urdf_joints">Joints</label><br> <input type="checkbox" id="_urdf_jointnames"> <label for="_urdf_jointnames">Joint names</label><br> <input id="_urdf_jointcolor" type="color"> <label for="_urdf_jointcolor">Joint color</label><br> <input id="_urdf_linkcolor" type="color"> <label for="_urdf_linkcolor">Link color</label><br> <input id="_urdf_jointindicolor" type="color"> <label for="_urdf_jointindicolor">Joint indicator color</label><br> <input id="_urdf_highlightcolor" type="color"> <label for="_urdf_highlightcolor">Highlight color</label><br> <input id="_urdf_collisioncolor" type="color"> <label for="_urdf_collisioncolor">Collision color</label><br> <input id="_urdf_bgcolor" type="color"> <label for="_urdf_bgcolor">Background color</label><br> <hr> Selected:<br> <!> <!></div></main>');function fP(s,e){kn(e,!0),Ot.DEFAULT_UP=new L(0,0,1);let t=Hi(0),n=Hi(0),i=Hi(void 0),r=Hi(void 0),o=vy.url.href;o=o.endsWith("/")?o.substring(0,o.length-1):o;const l="turtlebot3_description/turtlebot3_waffle.xml",c=new wR(`${o}/${l}`,o);sf(async()=>{let F=await c.load();const J=c.fromString(F),$={},G={};for(let W=0;W<J.joints.length;W++){const q=J.joints[W];q.type=="continuous"&&q.name?$[q.name]=W:q.type=="revolute"&&q.name&&(G[q.name]=W)}Ne.continuousJoints=$,Ne.revoluteJoints=G,Ne.robot=J});const h=Nn({});var u=tP(),d=Os(u),f=Os(d);rA(f,{createRenderer:X=>new Qf({canvas:X,alpha:!0,powerPreference:"high-performance",logarithmicDepthBuffer:!0}),shadows:!0,children:(X,F)=>{var J=YR(),$=Ze(J);Nt($,()=>St.PerspectiveCamera,(ne,ge)=>{ge(ne,{makeDefault:!0,position:[.6,.6,.6],fov:25,get ref(){return ye(i)},set ref(ve){Ui(i,Nn(ve))},children:(ve,_e)=>{K2(ve,{onchange:()=>{if(!ye(r)||!ye(i))return;const ee=ye(i).position;Ne.zoom=ee.distanceTo(ye(r).target)},enableZoom:!0,get ref(){return ye(r)},set ref(ee){Ui(r,Nn(ee))},children:(ee,ue)=>{P2(ee,{})},$$slots:{default:!0}})},$$slots:{default:!0}})});var G=_t($,2);Nt(G,()=>St.Group,(ne,ge)=>{ge(ne,{rotation:[-Math.PI/2,0,0],children:(ve,_e)=>{var ee=XR(),ue=Ze(ee);Nt(ue,()=>St.HemisphereLight,(Se,de)=>{de(Se,{skycolor:11657727,groundColor:12155424,intensity:.2})});var B=_t(ue,2);B2(B,{cellSize:.1}),Ye(ve,ee)},$$slots:{default:!0}})});var W=_t(G,2);WR(W,{preset_name:"soft"});var q=_t(W,2);{var Y=ne=>{VR(ne,{})};Bt(q,ne=>{Ne.robot&&ne(Y)})}Ye(X,J)},$$slots:{default:!0}}),Fs(d);var p=_t(d,2),v=Os(p);{var g=X=>{var F=jR(),J=_t(Ze(F),2);Lr(J,17,()=>Object.entries(Ne.continuousJoints),Dr,(G,W)=>{let q=()=>ye(W)[0],Y=()=>ye(W)[1];var ne=qR(),ge=Ze(ne);oi(ge),ge.__input=ee=>{if(!ee.target||!Ne.robot)return;const ue=Ne.robot.joints[Y()],Se=h[q()]*Math.PI/180-Math.PI;ue.rotation=[Se*ue.axis_xyz[0],Se*ue.axis_xyz[1],Se*ue.axis_xyz[2]]};var ve=_t(ge),_e=Os(ve,!0);Fs(ve),fs(()=>{_i(ge,"id",q()),_i(ve,"for",q()),ps(_e,q())}),Sr(ge,()=>h[q()],ee=>h[q()]=ee),Ye(G,ne)});var $=_t(J,4);$.__click=()=>{var G;for(let W of Object.values(Ne.continuousJoints)){const q=(G=Ne.robot)==null?void 0:G.joints[W];!q||!Ne.robot||!q.name||(q.rotation=[0,0,0],h[q.name]=180)}},ta(),Ye(X,F)};Bt(v,X=>{Ne.robot&&Ne.continuousJoints&&X(g)})}var m=_t(v,2);{var x=X=>{var F=JR(),J=_t(Ze(F),2);Lr(J,17,()=>Object.entries(Ne.revoluteJoints),Dr,($,G)=>{let W=()=>ye(G)[0],q=()=>ye(G)[1];var Y=ZR(),ne=Ze(Y);oi(ne),ne.__input=_e=>{if(!_e.target||!Ne.robot)return;const ee=Ne.robot.joints[q()],B=_e.target.value*Math.PI/180-Math.PI;ee.rotation=[B*ee.axis_xyz[0],B*ee.axis_xyz[1],B*ee.axis_xyz[2]]};var ge=_t(ne),ve=Os(ge,!0);Fs(ge),fs((_e,ee)=>{_i(ne,"id",W()),_i(ne,"min",_e),_i(ne,"max",ee),Sy(ne,_e),_i(ge,"for",W()),ps(ve,W())},[()=>{var _e,ee;return t0(((ee=(_e=Ne.robot)==null?void 0:_e.joints[q()].limit)==null?void 0:ee.lower)||0)},()=>{var _e,ee;return t0(((ee=(_e=Ne.robot)==null?void 0:_e.joints[q()].limit)==null?void 0:ee.upper)||2*Math.PI)}]),Ye($,Y)}),Ye(X,F)};Bt(m,X=>{Ne.revoluteJoints&&X(x)})}var y=_t(m,4);oi(y),y.__input=()=>{Ne.visualOpacity=Number(Ne.visualOpacity)},_i(y,"min",.1),_i(y,"max",1),_i(y,"step",.1);var _=_t(y,5);oi(_),_.__input=()=>{Ne.collisionOpacity=Number(Ne.collisionOpacity)},_i(_,"min",.1),_i(_,"max",1),_i(_,"step",.1);var E=_t(_,7);oi(E);var w=_t(E,6);oi(w);var M=_t(w,5);oi(M);var T=_t(M,5);oi(T);var S=_t(T,5);oi(S);var b=_t(S,5);oi(b);var D=_t(b,5);oi(D);var P=_t(D,5);oi(P);var k=_t(P,5);oi(k);var V=_t(k,5);oi(V);var K=_t(V,5);oi(K);var N=_t(K,9);{var Q=X=>{var F=KR(),J=Ze(F),$=_t(J,2);fs(()=>{ps(J,`joint: ${Ne.selectedJoint.name??""}`),ps($,` origin: ${Ne.selectedJoint.origin_xyz??""}`)}),Ye(X,F)};Bt(N,X=>{Ne.selectedJoint&&X(Q)})}var Z=_t(N,2);{var j=X=>{var F=eP(),J=Ze(F),$=_t(J,5);{var G=Y=>{var ne=pt(),ge=Ze(ne);Lr(ge,17,()=>Ne.selectedLink.visual,Dr,(ve,_e)=>{ta();var ee=QR(),ue=Ze(ee);ta(),fs(()=>ps(ue,` - origin: ${ye(_e).origin_xyz??""} (${ye(_e).type??""}) `)),Ye(ve,ee)}),Ye(Y,ne)};Bt($,Y=>{Ne.selectedLink.visual&&Y(G)})}var W=_t($,4);{var q=Y=>{var ne=pt(),ge=Ze(ne);Lr(ge,17,()=>Ne.selectedLink.collision,Dr,(ve,_e)=>{ta();var ee=$R(),ue=Ze(ee);ta(),fs(()=>ps(ue,` - origin: ${ye(_e).origin_xyz??""} (${ye(_e).type??""}) `)),Ye(ve,ee)}),Ye(Y,ne)};Bt(W,Y=>{Ne.selectedLink.collision&&Y(q)})}fs(()=>ps(J,`link: ${Ne.selectedLink.name??""}`)),Ye(X,F)};Bt(Z,X=>{Ne.selectedLink&&X(j)})}Fs(p),Fs(u),fs(()=>{vu(d,"width",ye(n)-250+"px"),vu(d,"height",ye(t)+"px"),vu(d,"background-color",Ne.backgroundColor)}),Tp("innerHeight",X=>Ui(t,Nn(X))),Tp("innerWidth",X=>Ui(n,Nn(X))),Sr(y,()=>Ne.visualOpacity,X=>Ne.visualOpacity=X),Sr(_,()=>Ne.collisionOpacity,X=>Ne.collisionOpacity=X),na(E,()=>Ne.visual,X=>Ne.visual=X),na(w,()=>Ne.collision,X=>Ne.collision=X),na(M,()=>Ne.linkNames,X=>Ne.linkNames=X),na(T,()=>Ne.joints,X=>Ne.joints=X),na(S,()=>Ne.jointNames,X=>Ne.jointNames=X),Sr(b,()=>Ne.jointColor,X=>Ne.jointColor=X),Sr(D,()=>Ne.linkColor,X=>Ne.linkColor=X),Sr(P,()=>Ne.jointIndicatorColor,X=>Ne.jointIndicatorColor=X),Sr(k,()=>Ne.highlightColor,X=>Ne.highlightColor=X),Sr(V,()=>Ne.collisionColor,X=>Ne.collisionColor=X),Sr(K,()=>Ne.backgroundColor,X=>Ne.backgroundColor=X),Ye(s,u),Bn()}gy(["input","click"]);export{fP as component};
