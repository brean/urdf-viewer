var cy=Object.defineProperty;var hy=(s,e,t)=>e in s?cy(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var tn=(s,e,t)=>hy(s,typeof e!="symbol"?e+"":e,t);import{b as Ip,e as uy,c as pt,a as Xe,t as Jt}from"../chunks/BWHegj7s.js";import{a8 as dy,y as Dp,z as Lp,B as fy,C as Vc,h as yi,L as Fd,b as py,k as _e,ac as my,Z as gy,_ as Up,K as kd,J as wu,c as ks,M as vy,$ as S0,a as M0,a0 as _y,Q as w0,A as yy,a6 as xy,aq as Bd,ar as Eu,as as by,at as Sy,au as My,P as wy,av as Ey,d as Ty,aw as Ay,ax as Cy,G as E0,t as es,ay as Ry,N as Py,I as Iy,F as El,az as Dy,aA as Ly,aB as Uy,aC as Ny,aD as Oy,aE as Fy,i as Lh,a3 as vf,a7 as Si,aF as T0,ao as _f,aG as Ai,aH as ii,u as It,g as _i,ap as Mt,p as Dn,f as je,o as Ln,q as Bs,an as Ni,s as zs,n as kr,v as gt,af as rs,aI as ia}from"../chunks/e6Y1vjnQ.js";import{d as ky,s as gs}from"../chunks/DYRmF44-.js";import{r as yr,i as Ot,b as Np,s as Br,p as He,a as js,d as al,c as Dt}from"../chunks/yEdz9OMg.js";import{g as zd,w as ti,d as ll,a as xr,o as yf,r as xf}from"../chunks/B_oy0_mV.js";import{p as By}from"../chunks/C7rBQHpY.js";import{s as Yi}from"../chunks/BOsPitLS.js";let Op=!1;function A0(){Op||(Op=!0,document.addEventListener("reset",s=>{Promise.resolve().then(()=>{var e;if(!s.defaultPrevented)for(const t of s.target.elements)(e=t.__on_r)==null||e.call(t)})},{capture:!0}))}function zy(s,e,t,i=!0){i&&t();for(var n of e)s.addEventListener(n,t);dy(()=>{for(var r of e)s.removeEventListener(r,t)})}function C0(s){var e=fy,t=Vc;Dp(null),Lp(null);try{return s()}finally{Dp(e),Lp(t)}}function R0(s,e,t,i=t){s.addEventListener(e,()=>C0(t));const n=s.__on_r;n?s.__on_r=()=>{n(),i(!0)}:s.__on_r=()=>i(!0),A0()}function Dr(s,e){return e}function Gy(s,e,t,i){for(var n=[],r=e.length,o=0;o<r;o++)My(e[o].e,n,!0);var a=r>0&&n.length===0&&t!==null;if(a){var l=t.parentNode;wy(l),l.append(t),i.clear(),ts(s,e[0].prev,e[r-1].next)}Ey(n,()=>{for(var c=0;c<r;c++){var h=e[c];a||(i.delete(h.k),ts(s,h.prev,h.next)),Ty(h.e,!a)}})}function Lr(s,e,t,i,n,r=null){var o=s,a={flags:e,items:new Map,first:null};yi&&Fd();var l=null,c=!1,h=my(()=>{var u=t();return yy(u)?u:u==null?[]:w0(u)});py(()=>{var u=_e(h),d=u.length;if(c&&d===0)return;c=d===0;let f=!1;if(yi){var p=o.data===gy;p!==(d===0)&&(o=Up(),kd(o),wu(!1),f=!0)}if(yi){for(var v=null,m,g=0;g<d;g++){if(ks.nodeType===8&&ks.data===vy){o=ks,f=!0,wu(!1);break}var y=u[g],x=i(y,g);m=P0(ks,a,v,null,y,x,g,n,e,t),a.items.set(x,m),v=m}d>0&&kd(Up())}yi||Vy(u,a,o,n,e,i,t),r!==null&&(d===0?l?S0(l):l=M0(()=>r(o)):l!==null&&_y(l,()=>{l=null})),f&&wu(!0),_e(h)}),yi&&(o=ks)}function Vy(s,e,t,i,n,r,o){var a=s.length,l=e.items,c=e.first,h=c,u,d=null,f=[],p=[],v,m,g,y;for(y=0;y<a;y+=1){if(v=s[y],m=r(v,y),g=l.get(m),g===void 0){var x=h?h.e.nodes_start:t;d=P0(x,e,d,d===null?e.first:d.next,v,m,y,i,n,o),l.set(m,d),f=[],p=[],h=d.next;continue}if(Hy(g,v,y),(g.e.f&Eu)!==0&&S0(g.e),g!==h){if(u!==void 0&&u.has(g)){if(f.length<p.length){var _=p[0],E;d=_.prev;var M=f[0],S=f[f.length-1];for(E=0;E<f.length;E+=1)Fp(f[E],_,t);for(E=0;E<p.length;E+=1)u.delete(p[E]);ts(e,M.prev,S.next),ts(e,d,M),ts(e,S,_),h=_,d=S,y-=1,f=[],p=[]}else u.delete(g),Fp(g,h,t),ts(e,g.prev,g.next),ts(e,g,d===null?e.first:d.next),ts(e,d,g),d=g;continue}for(f=[],p=[];h!==null&&h.k!==m;)(h.e.f&Eu)===0&&(u??(u=new Set)).add(h),p.push(h),h=h.next;if(h===null)continue;g=h}f.push(g),d=g,h=g.next}if(h!==null||u!==void 0){for(var T=u===void 0?[]:w0(u);h!==null;)(h.e.f&Eu)===0&&T.push(h),h=h.next;var w=T.length;if(w>0){var b=null;Gy(e,T,b,l)}}Vc.first=e.first&&e.first.e,Vc.last=d&&d.e}function Hy(s,e,t,i){Sy(s.v,e),s.i=t}function P0(s,e,t,i,n,r,o,a,l,c){var h=(l&Ay)!==0,u=(l&Cy)===0,d=h?u?xy(n):Bd(n):n,f=(l&by)===0?o:Bd(o),p={i:f,v:d,k:r,a:null,e:null,prev:t,next:i};try{return p.e=M0(()=>a(s,d,f,c),yi),p.e.prev=t&&t.e,p.e.next=i&&i.e,t===null?e.first=p:(t.next=p,t.e.next=p.e),i!==null&&(i.prev=p,i.e.prev=p.e),p}finally{}}function Fp(s,e,t){for(var i=s.next?s.next.e.nodes_start:t,n=e?e.e.nodes_start:t,r=s.e.nodes_start;r!==i;){var o=E0(r);n.before(r),r=o}}function ts(s,e,t){e===null?s.first=t:(e.next=t,e.e.next=t&&t.e),t!==null&&(t.prev=e,t.e.prev=e&&e.e)}function cl(s,e,t=!1,i=!1,n=!1){var r=s,o="";es(()=>{var a=Vc;if(o===(o=e()??"")){yi&&Fd();return}if(a.nodes_start!==null&&(Ry(a.nodes_start,a.nodes_end),a.nodes_start=a.nodes_end=null),o!==""){if(yi){ks.data;for(var l=Fd(),c=l;l!==null&&(l.nodeType!==8||l.data!=="");)c=l,l=E0(l);if(l===null)throw Py(),Iy;Ip(ks,c),r=kd(l);return}var h=o+"";t?h=`<svg>${h}</svg>`:i&&(h=`<math>${h}</math>`);var u=uy(h);if((t||i)&&(u=El(u)),Ip(El(u),u.lastChild),t||i)for(;El(u);)r.before(El(u));else r.before(u)}})}function kp(s,e=!1){var t=e?" !important;":";",i="";for(var n in s){var r=s[n];r!=null&&r!==""&&(i+=" "+n+": "+r+t)}return i}function Wy(s,e){if(e){var t="",i,n;return Array.isArray(e)?(i=e[0],n=e[1]):i=e,i&&(t+=kp(i)),n&&(t+=kp(n,!0)),t=t.trim(),t===""?null:t}return String(s)}function Tu(s,e={},t,i){for(var n in t){var r=t[n];e[n]!==r&&(t[n]==null?s.style.removeProperty(n):s.style.setProperty(n,r,i))}}function Xy(s,e,t,i){var n=s.__style;if(yi||n!==e){var r=Wy(e,i);(!yi||r!==s.getAttribute("style"))&&(r==null?s.removeAttribute("style"):s.style.cssText=r),s.__style=e}else i&&(Array.isArray(i)?(Tu(s,t==null?void 0:t[0],i[0]),Tu(s,t==null?void 0:t[1],i[1],"important")):Tu(s,t,i));return i}const Yy=Symbol("is custom element"),jy=Symbol("is html");function si(s){if(yi){var e=!1,t=()=>{if(!e){if(e=!0,s.hasAttribute("value")){var i=s.value;vi(s,"value",null),s.value=i}if(s.hasAttribute("checked")){var n=s.checked;vi(s,"checked",null),s.checked=n}}};s.__on_r=t,Oy(t),A0()}}function qy(s,e){var t=I0(s);t.value===(t.value=e??void 0)||s.value===e&&(e!==0||s.nodeName!=="PROGRESS")||(s.value=e??"")}function vi(s,e,t,i){var n=I0(s);yi&&(n[e]=s.getAttribute(e),e==="src"||e==="srcset"||e==="href"&&s.nodeName==="LINK")||n[e]!==(n[e]=t)&&(e==="loading"&&(s[Dy]=t),t==null?s.removeAttribute(e):typeof t!="string"&&Zy(s).includes(e)?s[e]=t:s.setAttribute(e,t))}function I0(s){return s.__attributes??(s.__attributes={[Yy]:s.nodeName.includes("-"),[jy]:s.namespaceURI===Ly})}var Bp=new Map;function Zy(s){var e=Bp.get(s.nodeName);if(e)return e;Bp.set(s.nodeName,e=[]);for(var t,i=s,n=Element.prototype;n!==i;){t=Ny(i);for(var r in t)t[r].set&&e.push(r);i=Uy(i)}return e}function Sr(s,e,t=e){var i=Fy();R0(s,"input",n=>{var r=n?s.defaultValue:s.value;if(r=Au(s)?Cu(r):r,t(r),i&&r!==(r=e())){var o=s.selectionStart,a=s.selectionEnd;s.value=r??"",a!==null&&(s.selectionStart=o,s.selectionEnd=Math.min(a,s.value.length))}}),(yi&&s.defaultValue!==s.value||Lh(e)==null&&s.value)&&t(Au(s)?Cu(s.value):s.value),vf(()=>{var n=e();Au(s)&&n===Cu(s.value)||s.type==="date"&&!n&&!s.value||n!==s.value&&(s.value=n??"")})}function ra(s,e,t=e){R0(s,"change",i=>{var n=i?s.defaultChecked:s.checked;t(n)}),(yi&&s.defaultChecked!==s.checked||Lh(e)==null)&&t(s.checked),vf(()=>{var i=e();s.checked=!!i})}function Au(s){var e=s.type;return e==="number"||e==="range"}function Cu(s){return s===""?null:+s}function zp(s,e){zy(window,["resize"],()=>C0(()=>e(window[s])))}function Jy(s){Si(s,s.v+1)}function Ky(s){let e=0,t=Bd(0),i;return()=>{T0()&&(_e(t),vf(()=>(e===0&&(i=Lh(()=>s(()=>Jy(t)))),e+=1,()=>{_f().then(()=>{e-=1,e===0&&(i==null||i(),i=void 0)})})))}}function Qy(s){let e;const t=Ky(n=>{let r=!1;const o=s.subscribe(a=>{e=a,r&&n()});return r=!0,o});function i(){return T0()?(t(),e):zd(s)}return"set"in s?{get current(){return i()},set current(n){s.set(n)}}:{get current(){return i()}}}/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const hl="175",ki={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Vs={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},D0=0,Gd=1,L0=2,$y=3,ex=0,bf=1,Aa=2,hr=3,vr=0,ni=1,xi=2,Or=0,qs=1,Vd=2,Hd=3,Wd=4,U0=5,is=100,N0=101,O0=102,F0=103,k0=104,B0=200,z0=201,G0=202,V0=203,Hc=204,Wc=205,H0=206,W0=207,X0=208,Y0=209,j0=210,q0=211,Z0=212,J0=213,K0=214,Xc=0,Yc=1,jc=2,$s=3,qc=4,Zc=5,Jc=6,Kc=7,ul=0,Q0=1,$0=2,pr=0,ev=1,tv=2,nv=3,iv=4,rv=5,Qc=6,sv=7,Xd="attached",ov="detached",Uh=300,zr=301,os=302,Ga=303,Va=304,jo=306,nr=1e3,Mi=1001,Ha=1002,jn=1003,Sf=1004,tx=1004,No=1005,nx=1005,Sn=1006,Ca=1007,ix=1007,ir=1008,rx=1008,_r=1009,Mf=1010,wf=1011,zo=1012,Nh=1013,Gr=1014,wi=1015,qo=1016,Oh=1017,Fh=1018,Go=1020,Ef=35902,Tf=1021,Af=1022,hi=1023,Cf=1024,Rf=1025,Vo=1026,Ho=1027,kh=1028,dl=1029,Pf=1030,Bh=1031,sx=1032,zh=1033,Ra=33776,Pa=33777,Ia=33778,Da=33779,$c=35840,eh=35841,th=35842,nh=35843,ih=36196,rh=37492,sh=37496,oh=37808,ah=37809,lh=37810,ch=37811,hh=37812,uh=37813,dh=37814,fh=37815,ph=37816,mh=37817,gh=37818,vh=37819,_h=37820,yh=37821,La=36492,xh=36494,bh=36495,If=36283,Sh=36284,Mh=36285,wh=36286,av=2200,lv=2201,cv=2202,Wa=2300,Eh=2301,Lc=2302,Hs=2400,Ws=2401,Xa=2402,Gh=2500,Df=2501,ox=0,ax=1,lx=2,hv=3200,Lf=3201,cx=3202,hx=3203,as=0,uv=1,Rr="",sn="srgb",eo="srgb-linear",Ya="linear",Zt="srgb",ux=0,Ns=7680,dx=7681,fx=7682,px=7683,mx=34055,gx=34056,vx=5386,_x=512,yx=513,xx=514,bx=515,Sx=516,Mx=517,wx=518,Yd=519,dv=512,fv=513,pv=514,Uf=515,mv=516,gv=517,vv=518,_v=519,ja=35044,Ex=35048,Tx=35040,Ax=35045,Cx=35049,Rx=35041,Px=35046,Ix=35050,Dx=35042,Lx="100",jd="300 es",rr=2e3,qa=2001,Ux={COMPUTE:"compute",RENDER:"render"};class br{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){const i=this._listeners;return i===void 0?!1:i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){const i=this._listeners;if(i===void 0)return;const n=i[e];if(n!==void 0){const r=n.indexOf(t);r!==-1&&n.splice(r,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const i=t[e.type];if(i!==void 0){e.target=this;const n=i.slice(0);for(let r=0,o=n.length;r<o;r++)n[r].call(this,e);e.target=null}}}const Jn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Gp=1234567;const Zs=Math.PI/180,Wo=180/Math.PI;function Bi(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(Jn[s&255]+Jn[s>>8&255]+Jn[s>>16&255]+Jn[s>>24&255]+"-"+Jn[e&255]+Jn[e>>8&255]+"-"+Jn[e>>16&15|64]+Jn[e>>24&255]+"-"+Jn[t&63|128]+Jn[t>>8&255]+"-"+Jn[t>>16&255]+Jn[t>>24&255]+Jn[i&255]+Jn[i>>8&255]+Jn[i>>16&255]+Jn[i>>24&255]).toLowerCase()}function Tt(s,e,t){return Math.max(e,Math.min(t,s))}function Nf(s,e){return(s%e+e)%e}function Nx(s,e,t,i,n){return i+(s-e)*(n-i)/(t-e)}function Ox(s,e,t){return s!==e?(t-s)/(e-s):0}function Ua(s,e,t){return(1-t)*s+t*e}function Fx(s,e,t,i){return Ua(s,e,1-Math.exp(-t*i))}function kx(s,e=1){return e-Math.abs(Nf(s,e*2)-e)}function Bx(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*(3-2*s))}function zx(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*s*(s*(s*6-15)+10))}function Gx(s,e){return s+Math.floor(Math.random()*(e-s+1))}function Vx(s,e){return s+Math.random()*(e-s)}function Hx(s){return s*(.5-Math.random())}function Wx(s){s!==void 0&&(Gp=s);let e=Gp+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function Xx(s){return s*Zs}function Yx(s){return s*Wo}function jx(s){return(s&s-1)===0&&s!==0}function qx(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function Zx(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function Jx(s,e,t,i,n){const r=Math.cos,o=Math.sin,a=r(t/2),l=o(t/2),c=r((e+i)/2),h=o((e+i)/2),u=r((e-i)/2),d=o((e-i)/2),f=r((i-e)/2),p=o((i-e)/2);switch(n){case"XYX":s.set(a*h,l*u,l*d,a*c);break;case"YZY":s.set(l*d,a*h,l*u,a*c);break;case"ZXZ":s.set(l*u,l*d,a*h,a*c);break;case"XZX":s.set(a*h,l*p,l*f,a*c);break;case"YXY":s.set(l*f,a*h,l*p,a*c);break;case"ZYZ":s.set(l*p,l*f,a*h,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+n)}}function ci(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function Rt(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const dr={DEG2RAD:Zs,RAD2DEG:Wo,generateUUID:Bi,clamp:Tt,euclideanModulo:Nf,mapLinear:Nx,inverseLerp:Ox,lerp:Ua,damp:Fx,pingpong:kx,smoothstep:Bx,smootherstep:zx,randInt:Gx,randFloat:Vx,randFloatSpread:Hx,seededRandom:Wx,degToRad:Xx,radToDeg:Yx,isPowerOfTwo:jx,ceilPowerOfTwo:qx,floorPowerOfTwo:Zx,setQuaternionFromProperEuler:Jx,normalize:Rt,denormalize:ci};class xe{constructor(e=0,t=0){xe.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6],this.y=n[1]*t+n[4]*i+n[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Tt(this.x,e.x,t.x),this.y=Tt(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=Tt(this.x,e,t),this.y=Tt(this.y,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Tt(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(Tt(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),n=Math.sin(t),r=this.x-e.x,o=this.y-e.y;return this.x=r*i-o*n+e.x,this.y=r*n+o*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Et{constructor(e,t,i,n,r,o,a,l,c){Et.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,i,n,r,o,a,l,c)}set(e,t,i,n,r,o,a,l,c){const h=this.elements;return h[0]=e,h[1]=n,h[2]=a,h[3]=t,h[4]=r,h[5]=l,h[6]=i,h[7]=o,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,r=this.elements,o=i[0],a=i[3],l=i[6],c=i[1],h=i[4],u=i[7],d=i[2],f=i[5],p=i[8],v=n[0],m=n[3],g=n[6],y=n[1],x=n[4],_=n[7],E=n[2],M=n[5],S=n[8];return r[0]=o*v+a*y+l*E,r[3]=o*m+a*x+l*M,r[6]=o*g+a*_+l*S,r[1]=c*v+h*y+u*E,r[4]=c*m+h*x+u*M,r[7]=c*g+h*_+u*S,r[2]=d*v+f*y+p*E,r[5]=d*m+f*x+p*M,r[8]=d*g+f*_+p*S,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],o=e[4],a=e[5],l=e[6],c=e[7],h=e[8];return t*o*h-t*a*c-i*r*h+i*a*l+n*r*c-n*o*l}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],o=e[4],a=e[5],l=e[6],c=e[7],h=e[8],u=h*o-a*c,d=a*l-h*r,f=c*r-o*l,p=t*u+i*d+n*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const v=1/p;return e[0]=u*v,e[1]=(n*c-h*i)*v,e[2]=(a*i-n*o)*v,e[3]=d*v,e[4]=(h*t-n*l)*v,e[5]=(n*r-a*t)*v,e[6]=f*v,e[7]=(i*l-c*t)*v,e[8]=(o*t-i*r)*v,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,n,r,o,a){const l=Math.cos(r),c=Math.sin(r);return this.set(i*l,i*c,-i*(l*o+c*a)+o+e,-n*c,n*l,-n*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(Ru.makeScale(e,t)),this}rotate(e){return this.premultiply(Ru.makeRotation(-e)),this}translate(e,t){return this.premultiply(Ru.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<9;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Ru=new Et;function yv(s){for(let e=s.length-1;e>=0;--e)if(s[e]>=65535)return!0;return!1}const Kx={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Oo(s,e){return new Kx[s](e)}function Za(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function xv(){const s=Za("canvas");return s.style.display="block",s}const Vp={};function Uc(s){s in Vp||(Vp[s]=!0,console.warn(s))}function Qx(s,e,t){return new Promise(function(i,n){function r(){switch(s.clientWaitSync(e,s.SYNC_FLUSH_COMMANDS_BIT,0)){case s.WAIT_FAILED:n();break;case s.TIMEOUT_EXPIRED:setTimeout(r,t);break;default:i()}}setTimeout(r,t)})}function $x(s){const e=s.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function eb(s){const e=s.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const Hp=new Et().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Wp=new Et().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function tb(){const s={enabled:!0,workingColorSpace:eo,spaces:{},convert:function(n,r,o){return this.enabled===!1||r===o||!r||!o||(this.spaces[r].transfer===Zt&&(n.r=Fr(n.r),n.g=Fr(n.g),n.b=Fr(n.b)),this.spaces[r].primaries!==this.spaces[o].primaries&&(n.applyMatrix3(this.spaces[r].toXYZ),n.applyMatrix3(this.spaces[o].fromXYZ)),this.spaces[o].transfer===Zt&&(n.r=Bo(n.r),n.g=Bo(n.g),n.b=Bo(n.b))),n},fromWorkingColorSpace:function(n,r){return this.convert(n,this.workingColorSpace,r)},toWorkingColorSpace:function(n,r){return this.convert(n,r,this.workingColorSpace)},getPrimaries:function(n){return this.spaces[n].primaries},getTransfer:function(n){return n===Rr?Ya:this.spaces[n].transfer},getLuminanceCoefficients:function(n,r=this.workingColorSpace){return n.fromArray(this.spaces[r].luminanceCoefficients)},define:function(n){Object.assign(this.spaces,n)},_getMatrix:function(n,r,o){return n.copy(this.spaces[r].toXYZ).multiply(this.spaces[o].fromXYZ)},_getDrawingBufferColorSpace:function(n){return this.spaces[n].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(n=this.workingColorSpace){return this.spaces[n].workingColorSpaceConfig.unpackColorSpace}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],i=[.3127,.329];return s.define({[eo]:{primaries:e,whitePoint:i,transfer:Ya,toXYZ:Hp,fromXYZ:Wp,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:sn},outputColorSpaceConfig:{drawingBufferColorSpace:sn}},[sn]:{primaries:e,whitePoint:i,transfer:Zt,toXYZ:Hp,fromXYZ:Wp,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:sn}}}),s}const Nt=tb();function Fr(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function Bo(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}let po;class bv{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let i;if(e instanceof HTMLCanvasElement)i=e;else{po===void 0&&(po=Za("canvas")),po.width=e.width,po.height=e.height;const n=po.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),i=po}return i.toDataURL(t)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Za("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const n=i.getImageData(0,0,e.width,e.height),r=n.data;for(let o=0;o<r.length;o++)r[o]=Fr(r[o]/255)*255;return i.putImageData(n,0,0),t}else if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor(Fr(t[i]/255)*255):t[i]=Fr(t[i]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let nb=0;class ss{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:nb++}),this.uuid=Bi(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},n=this.data;if(n!==null){let r;if(Array.isArray(n)){r=[];for(let o=0,a=n.length;o<a;o++)n[o].isDataTexture?r.push(Pu(n[o].image)):r.push(Pu(n[o]))}else r=Pu(n);i.url=r}return t||(e.images[this.uuid]=i),i}}function Pu(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?bv.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let ib=0;class pn extends br{constructor(e=pn.DEFAULT_IMAGE,t=pn.DEFAULT_MAPPING,i=Mi,n=Mi,r=Sn,o=ir,a=hi,l=_r,c=pn.DEFAULT_ANISOTROPY,h=Rr){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:ib++}),this.uuid=Bi(),this.name="",this.source=new ss(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=i,this.wrapT=n,this.magFilter=r,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new xe(0,0),this.repeat=new xe(1,1),this.center=new xe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Et,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Uh)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case nr:e.x=e.x-Math.floor(e.x);break;case Mi:e.x=e.x<0?0:1;break;case Ha:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case nr:e.y=e.y-Math.floor(e.y);break;case Mi:e.y=e.y<0?0:1;break;case Ha:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}pn.DEFAULT_IMAGE=null;pn.DEFAULT_MAPPING=Uh;pn.DEFAULT_ANISOTROPY=1;class Pt{constructor(e=0,t=0,i=0,n=1){Pt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,n){return this.x=e,this.y=t,this.z=i,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,r=this.w,o=e.elements;return this.x=o[0]*t+o[4]*i+o[8]*n+o[12]*r,this.y=o[1]*t+o[5]*i+o[9]*n+o[13]*r,this.z=o[2]*t+o[6]*i+o[10]*n+o[14]*r,this.w=o[3]*t+o[7]*i+o[11]*n+o[15]*r,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,n,r;const l=e.elements,c=l[0],h=l[4],u=l[8],d=l[1],f=l[5],p=l[9],v=l[2],m=l[6],g=l[10];if(Math.abs(h-d)<.01&&Math.abs(u-v)<.01&&Math.abs(p-m)<.01){if(Math.abs(h+d)<.1&&Math.abs(u+v)<.1&&Math.abs(p+m)<.1&&Math.abs(c+f+g-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const x=(c+1)/2,_=(f+1)/2,E=(g+1)/2,M=(h+d)/4,S=(u+v)/4,T=(p+m)/4;return x>_&&x>E?x<.01?(i=0,n=.707106781,r=.707106781):(i=Math.sqrt(x),n=M/i,r=S/i):_>E?_<.01?(i=.707106781,n=0,r=.707106781):(n=Math.sqrt(_),i=M/n,r=T/n):E<.01?(i=.707106781,n=.707106781,r=0):(r=Math.sqrt(E),i=S/r,n=T/r),this.set(i,n,r,t),this}let y=Math.sqrt((m-p)*(m-p)+(u-v)*(u-v)+(d-h)*(d-h));return Math.abs(y)<.001&&(y=1),this.x=(m-p)/y,this.y=(u-v)/y,this.z=(d-h)/y,this.w=Math.acos((c+f+g-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Tt(this.x,e.x,t.x),this.y=Tt(this.y,e.y,t.y),this.z=Tt(this.z,e.z,t.z),this.w=Tt(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=Tt(this.x,e,t),this.y=Tt(this.y,e,t),this.z=Tt(this.z,e,t),this.w=Tt(this.w,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Tt(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Vh extends br{constructor(e=1,t=1,i={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Pt(0,0,e,t),this.scissorTest=!1,this.viewport=new Pt(0,0,e,t);const n={width:e,height:t,depth:1};i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Sn,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},i);const r=new pn(n,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace);r.flipY=!1,r.generateMipmaps=i.generateMipmaps,r.internalFormat=i.internalFormat,this.textures=[];const o=i.count;for(let a=0;a<o;a++)this.textures[a]=r.clone(),this.textures[a].isRenderTargetTexture=!0,this.textures[a].renderTarget=this;this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this._depthTexture=i.depthTexture,this.samples=i.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let n=0,r=this.textures.length;n<r;n++)this.textures[n].image.width=e,this.textures[n].image.height=t,this.textures[n].image.depth=i;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,i=e.textures.length;t<i;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;const n=Object.assign({},e.textures[t].image);this.textures[t].source=new ss(n)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class ji extends Vh{constructor(e=1,t=1,i={}){super(e,t,i),this.isWebGLRenderTarget=!0}}class fl extends pn{constructor(e=null,t=1,i=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=jn,this.minFilter=jn,this.wrapR=Mi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class rb extends ji{constructor(e=1,t=1,i=1,n={}){super(e,t,n),this.isWebGLArrayRenderTarget=!0,this.depth=i,this.texture=new fl(null,e,t,i),this.texture.isRenderTargetTexture=!0}}class Hh extends pn{constructor(e=null,t=1,i=1,n=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=jn,this.minFilter=jn,this.wrapR=Mi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class sb extends ji{constructor(e=1,t=1,i=1,n={}){super(e,t,n),this.isWebGL3DRenderTarget=!0,this.depth=i,this.texture=new Hh(null,e,t,i),this.texture.isRenderTargetTexture=!0}}class Ht{constructor(e=0,t=0,i=0,n=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=n}static slerpFlat(e,t,i,n,r,o,a){let l=i[n+0],c=i[n+1],h=i[n+2],u=i[n+3];const d=r[o+0],f=r[o+1],p=r[o+2],v=r[o+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=h,e[t+3]=u;return}if(a===1){e[t+0]=d,e[t+1]=f,e[t+2]=p,e[t+3]=v;return}if(u!==v||l!==d||c!==f||h!==p){let m=1-a;const g=l*d+c*f+h*p+u*v,y=g>=0?1:-1,x=1-g*g;if(x>Number.EPSILON){const E=Math.sqrt(x),M=Math.atan2(E,g*y);m=Math.sin(m*M)/E,a=Math.sin(a*M)/E}const _=a*y;if(l=l*m+d*_,c=c*m+f*_,h=h*m+p*_,u=u*m+v*_,m===1-a){const E=1/Math.sqrt(l*l+c*c+h*h+u*u);l*=E,c*=E,h*=E,u*=E}}e[t]=l,e[t+1]=c,e[t+2]=h,e[t+3]=u}static multiplyQuaternionsFlat(e,t,i,n,r,o){const a=i[n],l=i[n+1],c=i[n+2],h=i[n+3],u=r[o],d=r[o+1],f=r[o+2],p=r[o+3];return e[t]=a*p+h*u+l*f-c*d,e[t+1]=l*p+h*d+c*u-a*f,e[t+2]=c*p+h*f+a*d-l*u,e[t+3]=h*p-a*u-l*d-c*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,n){return this._x=e,this._y=t,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const i=e._x,n=e._y,r=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(i/2),h=a(n/2),u=a(r/2),d=l(i/2),f=l(n/2),p=l(r/2);switch(o){case"XYZ":this._x=d*h*u+c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u-d*f*p;break;case"YXZ":this._x=d*h*u+c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u+d*f*p;break;case"ZXY":this._x=d*h*u-c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u-d*f*p;break;case"ZYX":this._x=d*h*u-c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u+d*f*p;break;case"YZX":this._x=d*h*u+c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u-d*f*p;break;case"XZY":this._x=d*h*u-c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,n=Math.sin(i);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],n=t[4],r=t[8],o=t[1],a=t[5],l=t[9],c=t[2],h=t[6],u=t[10],d=i+a+u;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(h-l)*f,this._y=(r-c)*f,this._z=(o-n)*f}else if(i>a&&i>u){const f=2*Math.sqrt(1+i-a-u);this._w=(h-l)/f,this._x=.25*f,this._y=(n+o)/f,this._z=(r+c)/f}else if(a>u){const f=2*Math.sqrt(1+a-i-u);this._w=(r-c)/f,this._x=(n+o)/f,this._y=.25*f,this._z=(l+h)/f}else{const f=2*Math.sqrt(1+u-i-a);this._w=(o-n)/f,this._x=(r+c)/f,this._y=(l+h)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Tt(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const n=Math.min(1,t/i);return this.slerp(e,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,n=e._y,r=e._z,o=e._w,a=t._x,l=t._y,c=t._z,h=t._w;return this._x=i*h+o*a+n*c-r*l,this._y=n*h+o*l+r*a-i*c,this._z=r*h+o*c+i*l-n*a,this._w=o*h-i*a-n*l-r*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,n=this._y,r=this._z,o=this._w;let a=o*e._w+i*e._x+n*e._y+r*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=i,this._y=n,this._z=r,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-t;return this._w=f*o+t*this._w,this._x=f*i+t*this._x,this._y=f*n+t*this._y,this._z=f*r+t*this._z,this.normalize(),this}const c=Math.sqrt(l),h=Math.atan2(c,a),u=Math.sin((1-t)*h)/c,d=Math.sin(t*h)/c;return this._w=o*u+this._w*d,this._x=i*u+this._x*d,this._y=n*u+this._y*d,this._z=r*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),i=Math.random(),n=Math.sqrt(1-i),r=Math.sqrt(i);return this.set(n*Math.sin(e),n*Math.cos(e),r*Math.sin(t),r*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class L{constructor(e=0,t=0,i=0){L.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Xp.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Xp.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6]*n,this.y=r[1]*t+r[4]*i+r[7]*n,this.z=r[2]*t+r[5]*i+r[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,r=e.elements,o=1/(r[3]*t+r[7]*i+r[11]*n+r[15]);return this.x=(r[0]*t+r[4]*i+r[8]*n+r[12])*o,this.y=(r[1]*t+r[5]*i+r[9]*n+r[13])*o,this.z=(r[2]*t+r[6]*i+r[10]*n+r[14])*o,this}applyQuaternion(e){const t=this.x,i=this.y,n=this.z,r=e.x,o=e.y,a=e.z,l=e.w,c=2*(o*n-a*i),h=2*(a*t-r*n),u=2*(r*i-o*t);return this.x=t+l*c+o*u-a*h,this.y=i+l*h+a*c-r*u,this.z=n+l*u+r*h-o*c,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[4]*i+r[8]*n,this.y=r[1]*t+r[5]*i+r[9]*n,this.z=r[2]*t+r[6]*i+r[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Tt(this.x,e.x,t.x),this.y=Tt(this.y,e.y,t.y),this.z=Tt(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=Tt(this.x,e,t),this.y=Tt(this.y,e,t),this.z=Tt(this.z,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Tt(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,n=e.y,r=e.z,o=t.x,a=t.y,l=t.z;return this.x=n*l-r*a,this.y=r*o-i*l,this.z=i*a-n*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return Iu.copy(this).projectOnVector(e),this.sub(Iu)}reflect(e){return this.sub(Iu.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(Tt(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,n=this.z-e.z;return t*t+i*i+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const n=Math.sin(t)*e;return this.x=n*Math.sin(i),this.y=Math.cos(t)*e,this.z=n*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=n,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,i=Math.sqrt(1-t*t);return this.x=i*Math.cos(e),this.y=t,this.z=i*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Iu=new L,Xp=new Ht;class Mn{constructor(e=new L(1/0,1/0,1/0),t=new L(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t+=3)this.expandByPoint($i.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,i=e.count;t<i;t++)this.expandByPoint($i.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=$i.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0){const r=i.getAttribute("position");if(t===!0&&r!==void 0&&e.isInstancedMesh!==!0)for(let o=0,a=r.count;o<a;o++)e.isMesh===!0?e.getVertexPosition(o,$i):$i.fromBufferAttribute(r,o),$i.applyMatrix4(e.matrixWorld),this.expandByPoint($i);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),Tl.copy(e.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),Tl.copy(i.boundingBox)),Tl.applyMatrix4(e.matrixWorld),this.union(Tl)}const n=e.children;for(let r=0,o=n.length;r<o;r++)this.expandByObject(n[r],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,$i),$i.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(sa),Al.subVectors(this.max,sa),mo.subVectors(e.a,sa),go.subVectors(e.b,sa),vo.subVectors(e.c,sa),Xr.subVectors(go,mo),Yr.subVectors(vo,go),vs.subVectors(mo,vo);let t=[0,-Xr.z,Xr.y,0,-Yr.z,Yr.y,0,-vs.z,vs.y,Xr.z,0,-Xr.x,Yr.z,0,-Yr.x,vs.z,0,-vs.x,-Xr.y,Xr.x,0,-Yr.y,Yr.x,0,-vs.y,vs.x,0];return!Du(t,mo,go,vo,Al)||(t=[1,0,0,0,1,0,0,0,1],!Du(t,mo,go,vo,Al))?!1:(Cl.crossVectors(Xr,Yr),t=[Cl.x,Cl.y,Cl.z],Du(t,mo,go,vo,Al))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,$i).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize($i).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Mr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Mr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Mr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Mr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Mr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Mr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Mr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Mr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Mr),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Mr=[new L,new L,new L,new L,new L,new L,new L,new L],$i=new L,Tl=new Mn,mo=new L,go=new L,vo=new L,Xr=new L,Yr=new L,vs=new L,sa=new L,Al=new L,Cl=new L,_s=new L;function Du(s,e,t,i,n){for(let r=0,o=s.length-3;r<=o;r+=3){_s.fromArray(s,r);const a=n.x*Math.abs(_s.x)+n.y*Math.abs(_s.y)+n.z*Math.abs(_s.z),l=e.dot(_s),c=t.dot(_s),h=i.dot(_s);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>a)return!1}return!0}const ob=new Mn,oa=new L,Lu=new L;class Cn{constructor(e=new L,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):ob.setFromPoints(e).getCenter(i);let n=0;for(let r=0,o=e.length;r<o;r++)n=Math.max(n,i.distanceToSquared(e[r]));return this.radius=Math.sqrt(n),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;oa.subVectors(e,this.center);const t=oa.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),n=(i-this.radius)*.5;this.center.addScaledVector(oa,n/i),this.radius+=n}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Lu.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(oa.copy(e.center).add(Lu)),this.expandByPoint(oa.copy(e.center).sub(Lu))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const wr=new L,Uu=new L,Rl=new L,jr=new L,Nu=new L,Pl=new L,Ou=new L;class ls{constructor(e=new L,t=new L(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,wr)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=wr.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(wr.copy(this.origin).addScaledVector(this.direction,t),wr.distanceToSquared(e))}distanceSqToSegment(e,t,i,n){Uu.copy(e).add(t).multiplyScalar(.5),Rl.copy(t).sub(e).normalize(),jr.copy(this.origin).sub(Uu);const r=e.distanceTo(t)*.5,o=-this.direction.dot(Rl),a=jr.dot(this.direction),l=-jr.dot(Rl),c=jr.lengthSq(),h=Math.abs(1-o*o);let u,d,f,p;if(h>0)if(u=o*l-a,d=o*a-l,p=r*h,u>=0)if(d>=-p)if(d<=p){const v=1/h;u*=v,d*=v,f=u*(u+o*d+2*a)+d*(o*u+d+2*l)+c}else d=r,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*l)+c;else d=-r,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*l)+c;else d<=-p?(u=Math.max(0,-(-o*r+a)),d=u>0?-r:Math.min(Math.max(-r,-l),r),f=-u*u+d*(d+2*l)+c):d<=p?(u=0,d=Math.min(Math.max(-r,-l),r),f=d*(d+2*l)+c):(u=Math.max(0,-(o*r+a)),d=u>0?r:Math.min(Math.max(-r,-l),r),f=-u*u+d*(d+2*l)+c);else d=o>0?-r:r,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*l)+c;return i&&i.copy(this.origin).addScaledVector(this.direction,u),n&&n.copy(Uu).addScaledVector(Rl,d),f}intersectSphere(e,t){wr.subVectors(e.center,this.origin);const i=wr.dot(this.direction),n=wr.dot(wr)-i*i,r=e.radius*e.radius;if(n>r)return null;const o=Math.sqrt(r-n),a=i-o,l=i+o;return l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,n,r,o,a,l;const c=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,d=this.origin;return c>=0?(i=(e.min.x-d.x)*c,n=(e.max.x-d.x)*c):(i=(e.max.x-d.x)*c,n=(e.min.x-d.x)*c),h>=0?(r=(e.min.y-d.y)*h,o=(e.max.y-d.y)*h):(r=(e.max.y-d.y)*h,o=(e.min.y-d.y)*h),i>o||r>n||((r>i||isNaN(i))&&(i=r),(o<n||isNaN(n))&&(n=o),u>=0?(a=(e.min.z-d.z)*u,l=(e.max.z-d.z)*u):(a=(e.max.z-d.z)*u,l=(e.min.z-d.z)*u),i>l||a>n)||((a>i||i!==i)&&(i=a),(l<n||n!==n)&&(n=l),n<0)?null:this.at(i>=0?i:n,t)}intersectsBox(e){return this.intersectBox(e,wr)!==null}intersectTriangle(e,t,i,n,r){Nu.subVectors(t,e),Pl.subVectors(i,e),Ou.crossVectors(Nu,Pl);let o=this.direction.dot(Ou),a;if(o>0){if(n)return null;a=1}else if(o<0)a=-1,o=-o;else return null;jr.subVectors(this.origin,e);const l=a*this.direction.dot(Pl.crossVectors(jr,Pl));if(l<0)return null;const c=a*this.direction.dot(Nu.cross(jr));if(c<0||l+c>o)return null;const h=-a*jr.dot(Ou);return h<0?null:this.at(h/o,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class st{constructor(e,t,i,n,r,o,a,l,c,h,u,d,f,p,v,m){st.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,i,n,r,o,a,l,c,h,u,d,f,p,v,m)}set(e,t,i,n,r,o,a,l,c,h,u,d,f,p,v,m){const g=this.elements;return g[0]=e,g[4]=t,g[8]=i,g[12]=n,g[1]=r,g[5]=o,g[9]=a,g[13]=l,g[2]=c,g[6]=h,g[10]=u,g[14]=d,g[3]=f,g[7]=p,g[11]=v,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new st().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,n=1/_o.setFromMatrixColumn(e,0).length(),r=1/_o.setFromMatrixColumn(e,1).length(),o=1/_o.setFromMatrixColumn(e,2).length();return t[0]=i[0]*n,t[1]=i[1]*n,t[2]=i[2]*n,t[3]=0,t[4]=i[4]*r,t[5]=i[5]*r,t[6]=i[6]*r,t[7]=0,t[8]=i[8]*o,t[9]=i[9]*o,t[10]=i[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,n=e.y,r=e.z,o=Math.cos(i),a=Math.sin(i),l=Math.cos(n),c=Math.sin(n),h=Math.cos(r),u=Math.sin(r);if(e.order==="XYZ"){const d=o*h,f=o*u,p=a*h,v=a*u;t[0]=l*h,t[4]=-l*u,t[8]=c,t[1]=f+p*c,t[5]=d-v*c,t[9]=-a*l,t[2]=v-d*c,t[6]=p+f*c,t[10]=o*l}else if(e.order==="YXZ"){const d=l*h,f=l*u,p=c*h,v=c*u;t[0]=d+v*a,t[4]=p*a-f,t[8]=o*c,t[1]=o*u,t[5]=o*h,t[9]=-a,t[2]=f*a-p,t[6]=v+d*a,t[10]=o*l}else if(e.order==="ZXY"){const d=l*h,f=l*u,p=c*h,v=c*u;t[0]=d-v*a,t[4]=-o*u,t[8]=p+f*a,t[1]=f+p*a,t[5]=o*h,t[9]=v-d*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const d=o*h,f=o*u,p=a*h,v=a*u;t[0]=l*h,t[4]=p*c-f,t[8]=d*c+v,t[1]=l*u,t[5]=v*c+d,t[9]=f*c-p,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const d=o*l,f=o*c,p=a*l,v=a*c;t[0]=l*h,t[4]=v-d*u,t[8]=p*u+f,t[1]=u,t[5]=o*h,t[9]=-a*h,t[2]=-c*h,t[6]=f*u+p,t[10]=d-v*u}else if(e.order==="XZY"){const d=o*l,f=o*c,p=a*l,v=a*c;t[0]=l*h,t[4]=-u,t[8]=c*h,t[1]=d*u+v,t[5]=o*h,t[9]=f*u-p,t[2]=p*u-f,t[6]=a*h,t[10]=v*u+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(ab,e,lb)}lookAt(e,t,i){const n=this.elements;return Di.subVectors(e,t),Di.lengthSq()===0&&(Di.z=1),Di.normalize(),qr.crossVectors(i,Di),qr.lengthSq()===0&&(Math.abs(i.z)===1?Di.x+=1e-4:Di.z+=1e-4,Di.normalize(),qr.crossVectors(i,Di)),qr.normalize(),Il.crossVectors(Di,qr),n[0]=qr.x,n[4]=Il.x,n[8]=Di.x,n[1]=qr.y,n[5]=Il.y,n[9]=Di.y,n[2]=qr.z,n[6]=Il.z,n[10]=Di.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,r=this.elements,o=i[0],a=i[4],l=i[8],c=i[12],h=i[1],u=i[5],d=i[9],f=i[13],p=i[2],v=i[6],m=i[10],g=i[14],y=i[3],x=i[7],_=i[11],E=i[15],M=n[0],S=n[4],T=n[8],w=n[12],b=n[1],D=n[5],I=n[9],F=n[13],V=n[2],J=n[6],O=n[10],ee=n[14],Y=n[3],j=n[7],$=n[11],U=n[15];return r[0]=o*M+a*b+l*V+c*Y,r[4]=o*S+a*D+l*J+c*j,r[8]=o*T+a*I+l*O+c*$,r[12]=o*w+a*F+l*ee+c*U,r[1]=h*M+u*b+d*V+f*Y,r[5]=h*S+u*D+d*J+f*j,r[9]=h*T+u*I+d*O+f*$,r[13]=h*w+u*F+d*ee+f*U,r[2]=p*M+v*b+m*V+g*Y,r[6]=p*S+v*D+m*J+g*j,r[10]=p*T+v*I+m*O+g*$,r[14]=p*w+v*F+m*ee+g*U,r[3]=y*M+x*b+_*V+E*Y,r[7]=y*S+x*D+_*J+E*j,r[11]=y*T+x*I+_*O+E*$,r[15]=y*w+x*F+_*ee+E*U,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],n=e[8],r=e[12],o=e[1],a=e[5],l=e[9],c=e[13],h=e[2],u=e[6],d=e[10],f=e[14],p=e[3],v=e[7],m=e[11],g=e[15];return p*(+r*l*u-n*c*u-r*a*d+i*c*d+n*a*f-i*l*f)+v*(+t*l*f-t*c*d+r*o*d-n*o*f+n*c*h-r*l*h)+m*(+t*c*u-t*a*f-r*o*u+i*o*f+r*a*h-i*c*h)+g*(-n*a*h-t*l*u+t*a*d+n*o*u-i*o*d+i*l*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],o=e[4],a=e[5],l=e[6],c=e[7],h=e[8],u=e[9],d=e[10],f=e[11],p=e[12],v=e[13],m=e[14],g=e[15],y=u*m*c-v*d*c+v*l*f-a*m*f-u*l*g+a*d*g,x=p*d*c-h*m*c-p*l*f+o*m*f+h*l*g-o*d*g,_=h*v*c-p*u*c+p*a*f-o*v*f-h*a*g+o*u*g,E=p*u*l-h*v*l-p*a*d+o*v*d+h*a*m-o*u*m,M=t*y+i*x+n*_+r*E;if(M===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const S=1/M;return e[0]=y*S,e[1]=(v*d*r-u*m*r-v*n*f+i*m*f+u*n*g-i*d*g)*S,e[2]=(a*m*r-v*l*r+v*n*c-i*m*c-a*n*g+i*l*g)*S,e[3]=(u*l*r-a*d*r-u*n*c+i*d*c+a*n*f-i*l*f)*S,e[4]=x*S,e[5]=(h*m*r-p*d*r+p*n*f-t*m*f-h*n*g+t*d*g)*S,e[6]=(p*l*r-o*m*r-p*n*c+t*m*c+o*n*g-t*l*g)*S,e[7]=(o*d*r-h*l*r+h*n*c-t*d*c-o*n*f+t*l*f)*S,e[8]=_*S,e[9]=(p*u*r-h*v*r-p*i*f+t*v*f+h*i*g-t*u*g)*S,e[10]=(o*v*r-p*a*r+p*i*c-t*v*c-o*i*g+t*a*g)*S,e[11]=(h*a*r-o*u*r-h*i*c+t*u*c+o*i*f-t*a*f)*S,e[12]=E*S,e[13]=(h*v*n-p*u*n+p*i*d-t*v*d-h*i*m+t*u*m)*S,e[14]=(p*a*n-o*v*n-p*i*l+t*v*l+o*i*m-t*a*m)*S,e[15]=(o*u*n-h*a*n+h*i*l-t*u*l-o*i*d+t*a*d)*S,this}scale(e){const t=this.elements,i=e.x,n=e.y,r=e.z;return t[0]*=i,t[4]*=n,t[8]*=r,t[1]*=i,t[5]*=n,t[9]*=r,t[2]*=i,t[6]*=n,t[10]*=r,t[3]*=i,t[7]*=n,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,n))}makeTranslation(e,t,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),n=Math.sin(t),r=1-i,o=e.x,a=e.y,l=e.z,c=r*o,h=r*a;return this.set(c*o+i,c*a-n*l,c*l+n*a,0,c*a+n*l,h*a+i,h*l-n*o,0,c*l-n*a,h*l+n*o,r*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,n,r,o){return this.set(1,i,r,0,e,1,o,0,t,n,1,0,0,0,0,1),this}compose(e,t,i){const n=this.elements,r=t._x,o=t._y,a=t._z,l=t._w,c=r+r,h=o+o,u=a+a,d=r*c,f=r*h,p=r*u,v=o*h,m=o*u,g=a*u,y=l*c,x=l*h,_=l*u,E=i.x,M=i.y,S=i.z;return n[0]=(1-(v+g))*E,n[1]=(f+_)*E,n[2]=(p-x)*E,n[3]=0,n[4]=(f-_)*M,n[5]=(1-(d+g))*M,n[6]=(m+y)*M,n[7]=0,n[8]=(p+x)*S,n[9]=(m-y)*S,n[10]=(1-(d+v))*S,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,i){const n=this.elements;let r=_o.set(n[0],n[1],n[2]).length();const o=_o.set(n[4],n[5],n[6]).length(),a=_o.set(n[8],n[9],n[10]).length();this.determinant()<0&&(r=-r),e.x=n[12],e.y=n[13],e.z=n[14],er.copy(this);const c=1/r,h=1/o,u=1/a;return er.elements[0]*=c,er.elements[1]*=c,er.elements[2]*=c,er.elements[4]*=h,er.elements[5]*=h,er.elements[6]*=h,er.elements[8]*=u,er.elements[9]*=u,er.elements[10]*=u,t.setFromRotationMatrix(er),i.x=r,i.y=o,i.z=a,this}makePerspective(e,t,i,n,r,o,a=rr){const l=this.elements,c=2*r/(t-e),h=2*r/(i-n),u=(t+e)/(t-e),d=(i+n)/(i-n);let f,p;if(a===rr)f=-(o+r)/(o-r),p=-2*o*r/(o-r);else if(a===qa)f=-o/(o-r),p=-o*r/(o-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return l[0]=c,l[4]=0,l[8]=u,l[12]=0,l[1]=0,l[5]=h,l[9]=d,l[13]=0,l[2]=0,l[6]=0,l[10]=f,l[14]=p,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,i,n,r,o,a=rr){const l=this.elements,c=1/(t-e),h=1/(i-n),u=1/(o-r),d=(t+e)*c,f=(i+n)*h;let p,v;if(a===rr)p=(o+r)*u,v=-2*u;else if(a===qa)p=r*u,v=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-d,l[1]=0,l[5]=2*h,l[9]=0,l[13]=-f,l[2]=0,l[6]=0,l[10]=v,l[14]=-p,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<16;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}const _o=new L,er=new st,ab=new L(0,0,0),lb=new L(1,1,1),qr=new L,Il=new L,Di=new L,Yp=new st,jp=new Ht;class Ei{constructor(e=0,t=0,i=0,n=Ei.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,n=this._order){return this._x=e,this._y=t,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const n=e.elements,r=n[0],o=n[4],a=n[8],l=n[1],c=n[5],h=n[9],u=n[2],d=n[6],f=n[10];switch(t){case"XYZ":this._y=Math.asin(Tt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,f),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-Tt(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(Tt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,f),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-Tt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(Tt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-Tt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-h,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return Yp.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Yp,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return jp.setFromEuler(this),this.setFromQuaternion(jp,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ei.DEFAULT_ORDER="XYZ";class Wh{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let cb=0;const qp=new L,yo=new Ht,Er=new st,Dl=new L,aa=new L,hb=new L,ub=new Ht,Zp=new L(1,0,0),Jp=new L(0,1,0),Kp=new L(0,0,1),Qp={type:"added"},db={type:"removed"},xo={type:"childadded",child:null},Fu={type:"childremoved",child:null};class Lt extends br{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:cb++}),this.uuid=Bi(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Lt.DEFAULT_UP.clone();const e=new L,t=new Ei,i=new Ht,n=new L(1,1,1);function r(){i.setFromEuler(t,!1)}function o(){t.setFromQuaternion(i,void 0,!1)}t._onChange(r),i._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new st},normalMatrix:{value:new Et}}),this.matrix=new st,this.matrixWorld=new st,this.matrixAutoUpdate=Lt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Lt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Wh,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return yo.setFromAxisAngle(e,t),this.quaternion.multiply(yo),this}rotateOnWorldAxis(e,t){return yo.setFromAxisAngle(e,t),this.quaternion.premultiply(yo),this}rotateX(e){return this.rotateOnAxis(Zp,e)}rotateY(e){return this.rotateOnAxis(Jp,e)}rotateZ(e){return this.rotateOnAxis(Kp,e)}translateOnAxis(e,t){return qp.copy(e).applyQuaternion(this.quaternion),this.position.add(qp.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Zp,e)}translateY(e){return this.translateOnAxis(Jp,e)}translateZ(e){return this.translateOnAxis(Kp,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Er.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?Dl.copy(e):Dl.set(e,t,i);const n=this.parent;this.updateWorldMatrix(!0,!1),aa.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Er.lookAt(aa,Dl,this.up):Er.lookAt(Dl,aa,this.up),this.quaternion.setFromRotationMatrix(Er),n&&(Er.extractRotation(n.matrixWorld),yo.setFromRotationMatrix(Er),this.quaternion.premultiply(yo.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(Qp),xo.child=e,this.dispatchEvent(xo),xo.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(db),Fu.child=e,this.dispatchEvent(Fu),Fu.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Er.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Er.multiply(e.parent.matrixWorld)),e.applyMatrix4(Er),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(Qp),xo.child=e,this.dispatchEvent(xo),xo.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,n=this.children.length;i<n;i++){const o=this.children[i].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t,i=[]){this[e]===t&&i.push(this);const n=this.children;for(let r=0,o=n.length;r<o;r++)n[r].getObjectsByProperty(e,t,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(aa,e,hb),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(aa,ub,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){const i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const n=this.children;for(let r=0,o=n.length;r<o;r++)n[r].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const n={};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.castShadow===!0&&(n.castShadow=!0),this.receiveShadow===!0&&(n.receiveShadow=!0),this.visible===!1&&(n.visible=!1),this.frustumCulled===!1&&(n.frustumCulled=!1),this.renderOrder!==0&&(n.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),n.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(n.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(n.type="BatchedMesh",n.perObjectFrustumCulled=this.perObjectFrustumCulled,n.sortObjects=this.sortObjects,n.drawRanges=this._drawRanges,n.reservedRanges=this._reservedRanges,n.visibility=this._visibility,n.active=this._active,n.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),n.maxInstanceCount=this._maxInstanceCount,n.maxVertexCount=this._maxVertexCount,n.maxIndexCount=this._maxIndexCount,n.geometryInitialized=this._geometryInitialized,n.geometryCount=this._geometryCount,n.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(n.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(n.boundingSphere={center:n.boundingSphere.center.toArray(),radius:n.boundingSphere.radius}),this.boundingBox!==null&&(n.boundingBox={min:n.boundingBox.min.toArray(),max:n.boundingBox.max.toArray()}));function r(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(n.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=r(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,h=l.length;c<h;c++){const u=l[c];r(e.shapes,u)}else r(e.shapes,l)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(r(e.materials,this.material[l]));n.material=a}else n.material=r(e.materials,this.material);if(this.children.length>0){n.children=[];for(let a=0;a<this.children.length;a++)n.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){n.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];n.animations.push(r(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),h=o(e.images),u=o(e.shapes),d=o(e.skeletons),f=o(e.animations),p=o(e.nodes);a.length>0&&(i.geometries=a),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),h.length>0&&(i.images=h),u.length>0&&(i.shapes=u),d.length>0&&(i.skeletons=d),f.length>0&&(i.animations=f),p.length>0&&(i.nodes=p)}return i.object=n,i;function o(a){const l=[];for(const c in a){const h=a[c];delete h.metadata,l.push(h)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){const n=e.children[i];this.add(n.clone())}return this}}Lt.DEFAULT_UP=new L(0,1,0);Lt.DEFAULT_MATRIX_AUTO_UPDATE=!0;Lt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const tr=new L,Tr=new L,ku=new L,Ar=new L,bo=new L,So=new L,$p=new L,Bu=new L,zu=new L,Gu=new L,Vu=new Pt,Hu=new Pt,Wu=new Pt;class bi{constructor(e=new L,t=new L,i=new L){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,n){n.subVectors(i,t),tr.subVectors(e,t),n.cross(tr);const r=n.lengthSq();return r>0?n.multiplyScalar(1/Math.sqrt(r)):n.set(0,0,0)}static getBarycoord(e,t,i,n,r){tr.subVectors(n,t),Tr.subVectors(i,t),ku.subVectors(e,t);const o=tr.dot(tr),a=tr.dot(Tr),l=tr.dot(ku),c=Tr.dot(Tr),h=Tr.dot(ku),u=o*c-a*a;if(u===0)return r.set(0,0,0),null;const d=1/u,f=(c*l-a*h)*d,p=(o*h-a*l)*d;return r.set(1-f-p,p,f)}static containsPoint(e,t,i,n){return this.getBarycoord(e,t,i,n,Ar)===null?!1:Ar.x>=0&&Ar.y>=0&&Ar.x+Ar.y<=1}static getInterpolation(e,t,i,n,r,o,a,l){return this.getBarycoord(e,t,i,n,Ar)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(r,Ar.x),l.addScaledVector(o,Ar.y),l.addScaledVector(a,Ar.z),l)}static getInterpolatedAttribute(e,t,i,n,r,o){return Vu.setScalar(0),Hu.setScalar(0),Wu.setScalar(0),Vu.fromBufferAttribute(e,t),Hu.fromBufferAttribute(e,i),Wu.fromBufferAttribute(e,n),o.setScalar(0),o.addScaledVector(Vu,r.x),o.addScaledVector(Hu,r.y),o.addScaledVector(Wu,r.z),o}static isFrontFacing(e,t,i,n){return tr.subVectors(i,t),Tr.subVectors(e,t),tr.cross(Tr).dot(n)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,n){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[n]),this}setFromAttributeAndIndices(e,t,i,n){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return tr.subVectors(this.c,this.b),Tr.subVectors(this.a,this.b),tr.cross(Tr).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return bi.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return bi.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,i,n,r){return bi.getInterpolation(e,this.a,this.b,this.c,t,i,n,r)}containsPoint(e){return bi.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return bi.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,n=this.b,r=this.c;let o,a;bo.subVectors(n,i),So.subVectors(r,i),Bu.subVectors(e,i);const l=bo.dot(Bu),c=So.dot(Bu);if(l<=0&&c<=0)return t.copy(i);zu.subVectors(e,n);const h=bo.dot(zu),u=So.dot(zu);if(h>=0&&u<=h)return t.copy(n);const d=l*u-h*c;if(d<=0&&l>=0&&h<=0)return o=l/(l-h),t.copy(i).addScaledVector(bo,o);Gu.subVectors(e,r);const f=bo.dot(Gu),p=So.dot(Gu);if(p>=0&&f<=p)return t.copy(r);const v=f*c-l*p;if(v<=0&&c>=0&&p<=0)return a=c/(c-p),t.copy(i).addScaledVector(So,a);const m=h*p-f*u;if(m<=0&&u-h>=0&&f-p>=0)return $p.subVectors(r,n),a=(u-h)/(u-h+(f-p)),t.copy(n).addScaledVector($p,a);const g=1/(m+v+d);return o=v*g,a=d*g,t.copy(i).addScaledVector(bo,o).addScaledVector(So,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const Sv={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Zr={h:0,s:0,l:0},Ll={h:0,s:0,l:0};function Xu(s,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?s+(e-s)*6*t:t<1/2?e:t<2/3?s+(e-s)*6*(2/3-t):s}class ze{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,i)}set(e,t,i){if(t===void 0&&i===void 0){const n=e;n&&n.isColor?this.copy(n):typeof n=="number"?this.setHex(n):typeof n=="string"&&this.setStyle(n)}else this.setRGB(e,t,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=sn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Nt.toWorkingColorSpace(this,t),this}setRGB(e,t,i,n=Nt.workingColorSpace){return this.r=e,this.g=t,this.b=i,Nt.toWorkingColorSpace(this,n),this}setHSL(e,t,i,n=Nt.workingColorSpace){if(e=Nf(e,1),t=Tt(t,0,1),i=Tt(i,0,1),t===0)this.r=this.g=this.b=i;else{const r=i<=.5?i*(1+t):i+t-i*t,o=2*i-r;this.r=Xu(o,r,e+1/3),this.g=Xu(o,r,e),this.b=Xu(o,r,e-1/3)}return Nt.toWorkingColorSpace(this,n),this}setStyle(e,t=sn){function i(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const o=n[1],a=n[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=n[1],o=r.length;if(o===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=sn){const i=Sv[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Fr(e.r),this.g=Fr(e.g),this.b=Fr(e.b),this}copyLinearToSRGB(e){return this.r=Bo(e.r),this.g=Bo(e.g),this.b=Bo(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=sn){return Nt.fromWorkingColorSpace(Kn.copy(this),e),Math.round(Tt(Kn.r*255,0,255))*65536+Math.round(Tt(Kn.g*255,0,255))*256+Math.round(Tt(Kn.b*255,0,255))}getHexString(e=sn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Nt.workingColorSpace){Nt.fromWorkingColorSpace(Kn.copy(this),t);const i=Kn.r,n=Kn.g,r=Kn.b,o=Math.max(i,n,r),a=Math.min(i,n,r);let l,c;const h=(a+o)/2;if(a===o)l=0,c=0;else{const u=o-a;switch(c=h<=.5?u/(o+a):u/(2-o-a),o){case i:l=(n-r)/u+(n<r?6:0);break;case n:l=(r-i)/u+2;break;case r:l=(i-n)/u+4;break}l/=6}return e.h=l,e.s=c,e.l=h,e}getRGB(e,t=Nt.workingColorSpace){return Nt.fromWorkingColorSpace(Kn.copy(this),t),e.r=Kn.r,e.g=Kn.g,e.b=Kn.b,e}getStyle(e=sn){Nt.fromWorkingColorSpace(Kn.copy(this),e);const t=Kn.r,i=Kn.g,n=Kn.b;return e!==sn?`color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${n.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(i*255)},${Math.round(n*255)})`}offsetHSL(e,t,i){return this.getHSL(Zr),this.setHSL(Zr.h+e,Zr.s+t,Zr.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(Zr),e.getHSL(Ll);const i=Ua(Zr.h,Ll.h,t),n=Ua(Zr.s,Ll.s,t),r=Ua(Zr.l,Ll.l,t);return this.setHSL(i,n,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,i=this.g,n=this.b,r=e.elements;return this.r=r[0]*t+r[3]*i+r[6]*n,this.g=r[1]*t+r[4]*i+r[7]*n,this.b=r[2]*t+r[5]*i+r[8]*n,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Kn=new ze;ze.NAMES=Sv;let fb=0;class kn extends br{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:fb++}),this.uuid=Bi(),this.name="",this.type="Material",this.blending=qs,this.side=vr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Hc,this.blendDst=Wc,this.blendEquation=is,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new ze(0,0,0),this.blendAlpha=0,this.depthFunc=$s,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Yd,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ns,this.stencilZFail=Ns,this.stencilZPass=Ns,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const n=this[t];if(n===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==qs&&(i.blending=this.blending),this.side!==vr&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==Hc&&(i.blendSrc=this.blendSrc),this.blendDst!==Wc&&(i.blendDst=this.blendDst),this.blendEquation!==is&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==$s&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Yd&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Ns&&(i.stencilFail=this.stencilFail),this.stencilZFail!==Ns&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==Ns&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function n(r){const o=[];for(const a in r){const l=r[a];delete l.metadata,o.push(l)}return o}if(t){const r=n(e.textures),o=n(e.images);r.length>0&&(i.textures=r),o.length>0&&(i.images=o)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(t!==null){const n=t.length;i=new Array(n);for(let r=0;r!==n;++r)i[r]=t[r].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class Bn extends kn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new ze(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ei,this.combine=ul,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Pr=pb();function pb(){const s=new ArrayBuffer(4),e=new Float32Array(s),t=new Uint32Array(s),i=new Uint32Array(512),n=new Uint32Array(512);for(let l=0;l<256;++l){const c=l-127;c<-27?(i[l]=0,i[l|256]=32768,n[l]=24,n[l|256]=24):c<-14?(i[l]=1024>>-c-14,i[l|256]=1024>>-c-14|32768,n[l]=-c-1,n[l|256]=-c-1):c<=15?(i[l]=c+15<<10,i[l|256]=c+15<<10|32768,n[l]=13,n[l|256]=13):c<128?(i[l]=31744,i[l|256]=64512,n[l]=24,n[l|256]=24):(i[l]=31744,i[l|256]=64512,n[l]=13,n[l|256]=13)}const r=new Uint32Array(2048),o=new Uint32Array(64),a=new Uint32Array(64);for(let l=1;l<1024;++l){let c=l<<13,h=0;for(;(c&8388608)===0;)c<<=1,h-=8388608;c&=-8388609,h+=947912704,r[l]=c|h}for(let l=1024;l<2048;++l)r[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)o[l]=l<<23;o[31]=1199570944,o[32]=2147483648;for(let l=33;l<63;++l)o[l]=2147483648+(l-32<<23);o[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(a[l]=1024);return{floatView:e,uint32View:t,baseTable:i,shiftTable:n,mantissaTable:r,exponentTable:o,offsetTable:a}}function gi(s){Math.abs(s)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),s=Tt(s,-65504,65504),Pr.floatView[0]=s;const e=Pr.uint32View[0],t=e>>23&511;return Pr.baseTable[t]+((e&8388607)>>Pr.shiftTable[t])}function ba(s){const e=s>>10;return Pr.uint32View[0]=Pr.mantissaTable[Pr.offsetTable[e]+(s&1023)]+Pr.exponentTable[e],Pr.floatView[0]}class mb{static toHalfFloat(e){return gi(e)}static fromHalfFloat(e){return ba(e)}}const Tn=new L,Ul=new xe;let gb=0;class Ct{constructor(e,t,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:gb++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i,this.usage=ja,this.updateRanges=[],this.gpuType=wi,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let n=0,r=this.itemSize;n<r;n++)this.array[e+n]=t.array[i+n];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)Ul.fromBufferAttribute(this,t),Ul.applyMatrix3(e),this.setXY(t,Ul.x,Ul.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)Tn.fromBufferAttribute(this,t),Tn.applyMatrix3(e),this.setXYZ(t,Tn.x,Tn.y,Tn.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)Tn.fromBufferAttribute(this,t),Tn.applyMatrix4(e),this.setXYZ(t,Tn.x,Tn.y,Tn.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)Tn.fromBufferAttribute(this,t),Tn.applyNormalMatrix(e),this.setXYZ(t,Tn.x,Tn.y,Tn.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)Tn.fromBufferAttribute(this,t),Tn.transformDirection(e),this.setXYZ(t,Tn.x,Tn.y,Tn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let i=this.array[e*this.itemSize+t];return this.normalized&&(i=ci(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=Rt(i,this.array)),this.array[e*this.itemSize+t]=i,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=ci(t,this.array)),t}setX(e,t){return this.normalized&&(t=Rt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=ci(t,this.array)),t}setY(e,t){return this.normalized&&(t=Rt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=ci(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Rt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=ci(t,this.array)),t}setW(e,t){return this.normalized&&(t=Rt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=Rt(t,this.array),i=Rt(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=Rt(t,this.array),i=Rt(i,this.array),n=Rt(n,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this}setXYZW(e,t,i,n,r){return e*=this.itemSize,this.normalized&&(t=Rt(t,this.array),i=Rt(i,this.array),n=Rt(n,this.array),r=Rt(r,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==ja&&(e.usage=this.usage),e}}class vb extends Ct{constructor(e,t,i){super(new Int8Array(e),t,i)}}class _b extends Ct{constructor(e,t,i){super(new Uint8Array(e),t,i)}}class yb extends Ct{constructor(e,t,i){super(new Uint8ClampedArray(e),t,i)}}class xb extends Ct{constructor(e,t,i){super(new Int16Array(e),t,i)}}class Of extends Ct{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class bb extends Ct{constructor(e,t,i){super(new Int32Array(e),t,i)}}class Ff extends Ct{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class Sb extends Ct{constructor(e,t,i){super(new Uint16Array(e),t,i),this.isFloat16BufferAttribute=!0}getX(e){let t=ba(this.array[e*this.itemSize]);return this.normalized&&(t=ci(t,this.array)),t}setX(e,t){return this.normalized&&(t=Rt(t,this.array)),this.array[e*this.itemSize]=gi(t),this}getY(e){let t=ba(this.array[e*this.itemSize+1]);return this.normalized&&(t=ci(t,this.array)),t}setY(e,t){return this.normalized&&(t=Rt(t,this.array)),this.array[e*this.itemSize+1]=gi(t),this}getZ(e){let t=ba(this.array[e*this.itemSize+2]);return this.normalized&&(t=ci(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Rt(t,this.array)),this.array[e*this.itemSize+2]=gi(t),this}getW(e){let t=ba(this.array[e*this.itemSize+3]);return this.normalized&&(t=ci(t,this.array)),t}setW(e,t){return this.normalized&&(t=Rt(t,this.array)),this.array[e*this.itemSize+3]=gi(t),this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=Rt(t,this.array),i=Rt(i,this.array)),this.array[e+0]=gi(t),this.array[e+1]=gi(i),this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=Rt(t,this.array),i=Rt(i,this.array),n=Rt(n,this.array)),this.array[e+0]=gi(t),this.array[e+1]=gi(i),this.array[e+2]=gi(n),this}setXYZW(e,t,i,n,r){return e*=this.itemSize,this.normalized&&(t=Rt(t,this.array),i=Rt(i,this.array),n=Rt(n,this.array),r=Rt(r,this.array)),this.array[e+0]=gi(t),this.array[e+1]=gi(i),this.array[e+2]=gi(n),this.array[e+3]=gi(r),this}}class qe extends Ct{constructor(e,t,i){super(new Float32Array(e),t,i)}}let Mb=0;const Wi=new st,Yu=new Lt,Mo=new L,Li=new Mn,la=new Mn,Fn=new L;class yt extends br{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Mb++}),this.uuid=Bi(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(yv(e)?Ff:Of)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const r=new Et().getNormalMatrix(e);i.applyNormalMatrix(r),i.needsUpdate=!0}const n=this.attributes.tangent;return n!==void 0&&(n.transformDirection(e),n.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Wi.makeRotationFromQuaternion(e),this.applyMatrix4(Wi),this}rotateX(e){return Wi.makeRotationX(e),this.applyMatrix4(Wi),this}rotateY(e){return Wi.makeRotationY(e),this.applyMatrix4(Wi),this}rotateZ(e){return Wi.makeRotationZ(e),this.applyMatrix4(Wi),this}translate(e,t,i){return Wi.makeTranslation(e,t,i),this.applyMatrix4(Wi),this}scale(e,t,i){return Wi.makeScale(e,t,i),this.applyMatrix4(Wi),this}lookAt(e){return Yu.lookAt(e),Yu.updateMatrix(),this.applyMatrix4(Yu.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Mo).negate(),this.translate(Mo.x,Mo.y,Mo.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const i=[];for(let n=0,r=e.length;n<r;n++){const o=e[n];i.push(o.x,o.y,o.z||0)}this.setAttribute("position",new qe(i,3))}else{const i=Math.min(e.length,t.count);for(let n=0;n<i;n++){const r=e[n];t.setXYZ(n,r.x,r.y,r.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Mn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new L(-1/0,-1/0,-1/0),new L(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,n=t.length;i<n;i++){const r=t[i];Li.setFromBufferAttribute(r),this.morphTargetsRelative?(Fn.addVectors(this.boundingBox.min,Li.min),this.boundingBox.expandByPoint(Fn),Fn.addVectors(this.boundingBox.max,Li.max),this.boundingBox.expandByPoint(Fn)):(this.boundingBox.expandByPoint(Li.min),this.boundingBox.expandByPoint(Li.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Cn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new L,1/0);return}if(e){const i=this.boundingSphere.center;if(Li.setFromBufferAttribute(e),t)for(let r=0,o=t.length;r<o;r++){const a=t[r];la.setFromBufferAttribute(a),this.morphTargetsRelative?(Fn.addVectors(Li.min,la.min),Li.expandByPoint(Fn),Fn.addVectors(Li.max,la.max),Li.expandByPoint(Fn)):(Li.expandByPoint(la.min),Li.expandByPoint(la.max))}Li.getCenter(i);let n=0;for(let r=0,o=e.count;r<o;r++)Fn.fromBufferAttribute(e,r),n=Math.max(n,i.distanceToSquared(Fn));if(t)for(let r=0,o=t.length;r<o;r++){const a=t[r],l=this.morphTargetsRelative;for(let c=0,h=a.count;c<h;c++)Fn.fromBufferAttribute(a,c),l&&(Mo.fromBufferAttribute(e,c),Fn.add(Mo)),n=Math.max(n,i.distanceToSquared(Fn))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=t.position,n=t.normal,r=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Ct(new Float32Array(4*i.count),4));const o=this.getAttribute("tangent"),a=[],l=[];for(let T=0;T<i.count;T++)a[T]=new L,l[T]=new L;const c=new L,h=new L,u=new L,d=new xe,f=new xe,p=new xe,v=new L,m=new L;function g(T,w,b){c.fromBufferAttribute(i,T),h.fromBufferAttribute(i,w),u.fromBufferAttribute(i,b),d.fromBufferAttribute(r,T),f.fromBufferAttribute(r,w),p.fromBufferAttribute(r,b),h.sub(c),u.sub(c),f.sub(d),p.sub(d);const D=1/(f.x*p.y-p.x*f.y);isFinite(D)&&(v.copy(h).multiplyScalar(p.y).addScaledVector(u,-f.y).multiplyScalar(D),m.copy(u).multiplyScalar(f.x).addScaledVector(h,-p.x).multiplyScalar(D),a[T].add(v),a[w].add(v),a[b].add(v),l[T].add(m),l[w].add(m),l[b].add(m))}let y=this.groups;y.length===0&&(y=[{start:0,count:e.count}]);for(let T=0,w=y.length;T<w;++T){const b=y[T],D=b.start,I=b.count;for(let F=D,V=D+I;F<V;F+=3)g(e.getX(F+0),e.getX(F+1),e.getX(F+2))}const x=new L,_=new L,E=new L,M=new L;function S(T){E.fromBufferAttribute(n,T),M.copy(E);const w=a[T];x.copy(w),x.sub(E.multiplyScalar(E.dot(w))).normalize(),_.crossVectors(M,w);const D=_.dot(l[T])<0?-1:1;o.setXYZW(T,x.x,x.y,x.z,D)}for(let T=0,w=y.length;T<w;++T){const b=y[T],D=b.start,I=b.count;for(let F=D,V=D+I;F<V;F+=3)S(e.getX(F+0)),S(e.getX(F+1)),S(e.getX(F+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new Ct(new Float32Array(t.count*3),3),this.setAttribute("normal",i);else for(let d=0,f=i.count;d<f;d++)i.setXYZ(d,0,0,0);const n=new L,r=new L,o=new L,a=new L,l=new L,c=new L,h=new L,u=new L;if(e)for(let d=0,f=e.count;d<f;d+=3){const p=e.getX(d+0),v=e.getX(d+1),m=e.getX(d+2);n.fromBufferAttribute(t,p),r.fromBufferAttribute(t,v),o.fromBufferAttribute(t,m),h.subVectors(o,r),u.subVectors(n,r),h.cross(u),a.fromBufferAttribute(i,p),l.fromBufferAttribute(i,v),c.fromBufferAttribute(i,m),a.add(h),l.add(h),c.add(h),i.setXYZ(p,a.x,a.y,a.z),i.setXYZ(v,l.x,l.y,l.z),i.setXYZ(m,c.x,c.y,c.z)}else for(let d=0,f=t.count;d<f;d+=3)n.fromBufferAttribute(t,d+0),r.fromBufferAttribute(t,d+1),o.fromBufferAttribute(t,d+2),h.subVectors(o,r),u.subVectors(n,r),h.cross(u),i.setXYZ(d+0,h.x,h.y,h.z),i.setXYZ(d+1,h.x,h.y,h.z),i.setXYZ(d+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)Fn.fromBufferAttribute(e,t),Fn.normalize(),e.setXYZ(t,Fn.x,Fn.y,Fn.z)}toNonIndexed(){function e(a,l){const c=a.array,h=a.itemSize,u=a.normalized,d=new c.constructor(l.length*h);let f=0,p=0;for(let v=0,m=l.length;v<m;v++){a.isInterleavedBufferAttribute?f=l[v]*a.data.stride+a.offset:f=l[v]*h;for(let g=0;g<h;g++)d[p++]=c[f++]}return new Ct(d,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new yt,i=this.index.array,n=this.attributes;for(const a in n){const l=n[a],c=e(l,i);t.setAttribute(a,c)}const r=this.morphAttributes;for(const a in r){const l=[],c=r[a];for(let h=0,u=c.length;h<u;h++){const d=c[h],f=e(d,i);l.push(f)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const l in i){const c=i[l];e.data.attributes[l]=c.toJSON(e.data)}const n={};let r=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],h=[];for(let u=0,d=c.length;u<d;u++){const f=c[u];h.push(f.toJSON(e.data))}h.length>0&&(n[l]=h,r=!0)}r&&(e.data.morphAttributes=n,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone());const n=e.attributes;for(const c in n){const h=n[c];this.setAttribute(c,h.clone(t))}const r=e.morphAttributes;for(const c in r){const h=[],u=r[c];for(let d=0,f=u.length;d<f;d++)h.push(u[d].clone(t));this.morphAttributes[c]=h}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,h=o.length;c<h;c++){const u=o[c];this.addGroup(u.start,u.count,u.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const em=new st,ys=new ls,Nl=new Cn,tm=new L,Ol=new L,Fl=new L,kl=new L,ju=new L,Bl=new L,nm=new L,zl=new L;class ke extends Lt{constructor(e=new yt,t=new Bn){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=n.length;r<o;r++){const a=n[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}getVertexPosition(e,t){const i=this.geometry,n=i.attributes.position,r=i.morphAttributes.position,o=i.morphTargetsRelative;t.fromBufferAttribute(n,e);const a=this.morphTargetInfluences;if(r&&a){Bl.set(0,0,0);for(let l=0,c=r.length;l<c;l++){const h=a[l],u=r[l];h!==0&&(ju.fromBufferAttribute(u,e),o?Bl.addScaledVector(ju,h):Bl.addScaledVector(ju.sub(t),h))}t.add(Bl)}return t}raycast(e,t){const i=this.geometry,n=this.material,r=this.matrixWorld;n!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),Nl.copy(i.boundingSphere),Nl.applyMatrix4(r),ys.copy(e.ray).recast(e.near),!(Nl.containsPoint(ys.origin)===!1&&(ys.intersectSphere(Nl,tm)===null||ys.origin.distanceToSquared(tm)>(e.far-e.near)**2))&&(em.copy(r).invert(),ys.copy(e.ray).applyMatrix4(em),!(i.boundingBox!==null&&ys.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,t,ys)))}_computeIntersections(e,t,i){let n;const r=this.geometry,o=this.material,a=r.index,l=r.attributes.position,c=r.attributes.uv,h=r.attributes.uv1,u=r.attributes.normal,d=r.groups,f=r.drawRange;if(a!==null)if(Array.isArray(o))for(let p=0,v=d.length;p<v;p++){const m=d[p],g=o[m.materialIndex],y=Math.max(m.start,f.start),x=Math.min(a.count,Math.min(m.start+m.count,f.start+f.count));for(let _=y,E=x;_<E;_+=3){const M=a.getX(_),S=a.getX(_+1),T=a.getX(_+2);n=Gl(this,g,e,i,c,h,u,M,S,T),n&&(n.faceIndex=Math.floor(_/3),n.face.materialIndex=m.materialIndex,t.push(n))}}else{const p=Math.max(0,f.start),v=Math.min(a.count,f.start+f.count);for(let m=p,g=v;m<g;m+=3){const y=a.getX(m),x=a.getX(m+1),_=a.getX(m+2);n=Gl(this,o,e,i,c,h,u,y,x,_),n&&(n.faceIndex=Math.floor(m/3),t.push(n))}}else if(l!==void 0)if(Array.isArray(o))for(let p=0,v=d.length;p<v;p++){const m=d[p],g=o[m.materialIndex],y=Math.max(m.start,f.start),x=Math.min(l.count,Math.min(m.start+m.count,f.start+f.count));for(let _=y,E=x;_<E;_+=3){const M=_,S=_+1,T=_+2;n=Gl(this,g,e,i,c,h,u,M,S,T),n&&(n.faceIndex=Math.floor(_/3),n.face.materialIndex=m.materialIndex,t.push(n))}}else{const p=Math.max(0,f.start),v=Math.min(l.count,f.start+f.count);for(let m=p,g=v;m<g;m+=3){const y=m,x=m+1,_=m+2;n=Gl(this,o,e,i,c,h,u,y,x,_),n&&(n.faceIndex=Math.floor(m/3),t.push(n))}}}}function wb(s,e,t,i,n,r,o,a){let l;if(e.side===ni?l=i.intersectTriangle(o,r,n,!0,a):l=i.intersectTriangle(n,r,o,e.side===vr,a),l===null)return null;zl.copy(a),zl.applyMatrix4(s.matrixWorld);const c=t.ray.origin.distanceTo(zl);return c<t.near||c>t.far?null:{distance:c,point:zl.clone(),object:s}}function Gl(s,e,t,i,n,r,o,a,l,c){s.getVertexPosition(a,Ol),s.getVertexPosition(l,Fl),s.getVertexPosition(c,kl);const h=wb(s,e,t,i,Ol,Fl,kl,nm);if(h){const u=new L;bi.getBarycoord(nm,Ol,Fl,kl,u),n&&(h.uv=bi.getInterpolatedAttribute(n,a,l,c,u,new xe)),r&&(h.uv1=bi.getInterpolatedAttribute(r,a,l,c,u,new xe)),o&&(h.normal=bi.getInterpolatedAttribute(o,a,l,c,u,new L),h.normal.dot(i.direction)>0&&h.normal.multiplyScalar(-1));const d={a,b:l,c,normal:new L,materialIndex:0};bi.getNormal(Ol,Fl,kl,d.normal),h.face=d,h.barycoord=u}return h}class vn extends yt{constructor(e=1,t=1,i=1,n=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:n,heightSegments:r,depthSegments:o};const a=this;n=Math.floor(n),r=Math.floor(r),o=Math.floor(o);const l=[],c=[],h=[],u=[];let d=0,f=0;p("z","y","x",-1,-1,i,t,e,o,r,0),p("z","y","x",1,-1,i,t,-e,o,r,1),p("x","z","y",1,1,e,i,t,n,o,2),p("x","z","y",1,-1,e,i,-t,n,o,3),p("x","y","z",1,-1,e,t,i,n,r,4),p("x","y","z",-1,-1,e,t,-i,n,r,5),this.setIndex(l),this.setAttribute("position",new qe(c,3)),this.setAttribute("normal",new qe(h,3)),this.setAttribute("uv",new qe(u,2));function p(v,m,g,y,x,_,E,M,S,T,w){const b=_/S,D=E/T,I=_/2,F=E/2,V=M/2,J=S+1,O=T+1;let ee=0,Y=0;const j=new L;for(let $=0;$<O;$++){const U=$*D-F;for(let Z=0;Z<J;Z++){const K=Z*b-I;j[v]=K*y,j[m]=U*x,j[g]=V,c.push(j.x,j.y,j.z),j[v]=0,j[m]=0,j[g]=M>0?1:-1,h.push(j.x,j.y,j.z),u.push(Z/S),u.push(1-$/T),ee+=1}}for(let $=0;$<T;$++)for(let U=0;U<S;U++){const Z=d+U+J*$,K=d+U+J*($+1),k=d+(U+1)+J*($+1),H=d+(U+1)+J*$;l.push(Z,K,H),l.push(K,k,H),Y+=6}a.addGroup(f,Y,w),f+=Y,d+=ee}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new vn(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Xo(s){const e={};for(const t in s){e[t]={};for(const i in s[t]){const n=s[t][i];n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture||n.isQuaternion)?n.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][i]=null):e[t][i]=n.clone():Array.isArray(n)?e[t][i]=n.slice():e[t][i]=n}}return e}function ai(s){const e={};for(let t=0;t<s.length;t++){const i=Xo(s[t]);for(const n in i)e[n]=i[n]}return e}function Eb(s){const e=[];for(let t=0;t<s.length;t++)e.push(s[t].clone());return e}function Mv(s){const e=s.getRenderTarget();return e===null?s.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:Nt.workingColorSpace}const pl={clone:Xo,merge:ai};var Tb=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Ab=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Ti extends kn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Tb,this.fragmentShader=Ab,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Xo(e.uniforms),this.uniformsGroups=Eb(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const o=this.uniforms[n].value;o&&o.isTexture?t.uniforms[n]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[n]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[n]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[n]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[n]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[n]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[n]={type:"m4",value:o.toArray()}:t.uniforms[n]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const i={};for(const n in this.extensions)this.extensions[n]===!0&&(i[n]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}class Xh extends Lt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new st,this.projectionMatrix=new st,this.projectionMatrixInverse=new st,this.coordinateSystem=rr}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const Jr=new L,im=new xe,rm=new xe;class bn extends Xh{constructor(e=50,t=1,i=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Wo*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Zs*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Wo*2*Math.atan(Math.tan(Zs*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,i){Jr.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(Jr.x,Jr.y).multiplyScalar(-e/Jr.z),Jr.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(Jr.x,Jr.y).multiplyScalar(-e/Jr.z)}getViewSize(e,t){return this.getViewBounds(e,im,rm),t.subVectors(rm,im)}setViewOffset(e,t,i,n,r,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Zs*.5*this.fov)/this.zoom,i=2*t,n=this.aspect*i,r=-.5*n;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;r+=o.offsetX*n/l,t-=o.offsetY*i/c,n*=o.width/l,i*=o.height/c}const a=this.filmOffset;a!==0&&(r+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+n,t,t-i,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const wo=-90,Eo=1;class wv extends Lt{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const n=new bn(wo,Eo,e,t);n.layers=this.layers,this.add(n);const r=new bn(wo,Eo,e,t);r.layers=this.layers,this.add(r);const o=new bn(wo,Eo,e,t);o.layers=this.layers,this.add(o);const a=new bn(wo,Eo,e,t);a.layers=this.layers,this.add(a);const l=new bn(wo,Eo,e,t);l.layers=this.layers,this.add(l);const c=new bn(wo,Eo,e,t);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[i,n,r,o,a,l]=t;for(const c of t)this.remove(c);if(e===rr)i.up.set(0,1,0),i.lookAt(1,0,0),n.up.set(0,1,0),n.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===qa)i.up.set(0,-1,0),i.lookAt(-1,0,0),n.up.set(0,-1,0),n.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const c of t)this.add(c),c.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:n}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[r,o,a,l,c,h]=this.children,u=e.getRenderTarget(),d=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const v=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,n),e.render(t,r),e.setRenderTarget(i,1,n),e.render(t,o),e.setRenderTarget(i,2,n),e.render(t,a),e.setRenderTarget(i,3,n),e.render(t,l),e.setRenderTarget(i,4,n),e.render(t,c),i.texture.generateMipmaps=v,e.setRenderTarget(i,5,n),e.render(t,h),e.setRenderTarget(u,d,f),e.xr.enabled=p,i.texture.needsPMREMUpdate=!0}}class ml extends pn{constructor(e=[],t=zr,i,n,r,o,a,l,c,h){super(e,t,i,n,r,o,a,l,c,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Ev extends ji{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},n=[i,i,i,i,i,i];this.texture=new ml(n,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Sn}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},n=new vn(5,5,5),r=new Ti({name:"CubemapFromEquirect",uniforms:Xo(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:ni,blending:Or});r.uniforms.tEquirect.value=t;const o=new ke(n,r),a=t.minFilter;return t.minFilter===ir&&(t.minFilter=Sn),new wv(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t=!0,i=!0,n=!0){const r=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,i,n);e.setRenderTarget(r)}}class Oi extends Lt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Cb={type:"move"};class Nc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Oi,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Oi,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new L,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new L),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Oi,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new L,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new L),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const i of e.hand.values())this._getHandJoint(t,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,i){let n=null,r=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){o=!0;for(const v of e.hand.values()){const m=t.getJointPose(v,i),g=this._getHandJoint(c,v);m!==null&&(g.matrix.fromArray(m.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),g.matrixWorldNeedsUpdate=!0,g.jointRadius=m.radius),g.visible=m!==null}const h=c.joints["index-finger-tip"],u=c.joints["thumb-tip"],d=h.position.distanceTo(u.position),f=.02,p=.005;c.inputState.pinching&&d>f+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&d<=f-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,i),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(n=t.getPose(e.targetRaySpace,i),n===null&&r!==null&&(n=r),n!==null&&(a.matrix.fromArray(n.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,n.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(n.linearVelocity)):a.hasLinearVelocity=!1,n.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(n.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(Cb)))}return a!==null&&(a.visible=n!==null),l!==null&&(l.visible=r!==null),c!==null&&(c.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const i=new Oi;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[t.jointName]=i,e.add(i)}return e.joints[t.jointName]}}class Yh{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new ze(e),this.density=t}clone(){return new Yh(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class jh{constructor(e,t=1,i=1e3){this.isFog=!0,this.name="",this.color=new ze(e),this.near=t,this.far=i}clone(){return new jh(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class gl extends Lt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Ei,this.environmentIntensity=1,this.environmentRotation=new Ei,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class qh{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=ja,this.updateRanges=[],this.version=0,this.uuid=Bi()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,i){e*=this.stride,i*=t.stride;for(let n=0,r=this.stride;n<r;n++)this.array[e+n]=t.array[i+n];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Bi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(t,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Bi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const oi=new L;class Fi{constructor(e,t,i,n=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,i=this.data.count;t<i;t++)oi.fromBufferAttribute(this,t),oi.applyMatrix4(e),this.setXYZ(t,oi.x,oi.y,oi.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)oi.fromBufferAttribute(this,t),oi.applyNormalMatrix(e),this.setXYZ(t,oi.x,oi.y,oi.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)oi.fromBufferAttribute(this,t),oi.transformDirection(e),this.setXYZ(t,oi.x,oi.y,oi.z);return this}getComponent(e,t){let i=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(i=ci(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=Rt(i,this.array)),this.data.array[e*this.data.stride+this.offset+t]=i,this}setX(e,t){return this.normalized&&(t=Rt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=Rt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=Rt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=Rt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=ci(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=ci(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=ci(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=ci(t,this.array)),t}setXY(e,t,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=Rt(t,this.array),i=Rt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this}setXYZ(e,t,i,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=Rt(t,this.array),i=Rt(i,this.array),n=Rt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this}setXYZW(e,t,i,n,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=Rt(t,this.array),i=Rt(i,this.array),n=Rt(n,this.array),r=Rt(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[n+r])}return new Ct(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Fi(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[n+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Zo extends kn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new ze(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let To;const ca=new L,Ao=new L,Co=new L,Ro=new xe,ha=new xe,Tv=new st,Vl=new L,ua=new L,Hl=new L,sm=new xe,qu=new xe,om=new xe;class vl extends Lt{constructor(e=new Zo){if(super(),this.isSprite=!0,this.type="Sprite",To===void 0){To=new yt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),i=new qh(t,5);To.setIndex([0,1,2,0,2,3]),To.setAttribute("position",new Fi(i,3,0,!1)),To.setAttribute("uv",new Fi(i,2,3,!1))}this.geometry=To,this.material=e,this.center=new xe(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Ao.setFromMatrixScale(this.matrixWorld),Tv.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Co.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Ao.multiplyScalar(-Co.z);const i=this.material.rotation;let n,r;i!==0&&(r=Math.cos(i),n=Math.sin(i));const o=this.center;Wl(Vl.set(-.5,-.5,0),Co,o,Ao,n,r),Wl(ua.set(.5,-.5,0),Co,o,Ao,n,r),Wl(Hl.set(.5,.5,0),Co,o,Ao,n,r),sm.set(0,0),qu.set(1,0),om.set(1,1);let a=e.ray.intersectTriangle(Vl,ua,Hl,!1,ca);if(a===null&&(Wl(ua.set(-.5,.5,0),Co,o,Ao,n,r),qu.set(0,1),a=e.ray.intersectTriangle(Vl,Hl,ua,!1,ca),a===null))return;const l=e.ray.origin.distanceTo(ca);l<e.near||l>e.far||t.push({distance:l,point:ca.clone(),uv:bi.getInterpolation(ca,Vl,ua,Hl,sm,qu,om,new xe),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function Wl(s,e,t,i,n,r){Ro.subVectors(s,t).addScalar(.5).multiply(i),n!==void 0?(ha.x=r*Ro.x-n*Ro.y,ha.y=n*Ro.x+r*Ro.y):ha.copy(Ro),s.copy(e),s.x+=ha.x,s.y+=ha.y,s.applyMatrix4(Tv)}const Xl=new L,am=new L;class Av extends Lt{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let i=0,n=t.length;i<n;i++){const r=t[i];this.addLevel(r.object.clone(),r.distance,r.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,i=0){t=Math.abs(t);const n=this.levels;let r;for(r=0;r<n.length&&!(t<n[r].distance);r++);return n.splice(r,0,{distance:t,hysteresis:i,object:e}),this.add(e),this}removeLevel(e){const t=this.levels;for(let i=0;i<t.length;i++)if(t[i].distance===e){const n=t.splice(i,1);return this.remove(n[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let i,n;for(i=1,n=t.length;i<n;i++){let r=t[i].distance;if(t[i].object.visible&&(r-=r*t[i].hysteresis),e<r)break}return t[i-1].object}return null}raycast(e,t){if(this.levels.length>0){Xl.setFromMatrixPosition(this.matrixWorld);const n=e.ray.origin.distanceTo(Xl);this.getObjectForDistance(n).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){Xl.setFromMatrixPosition(e.matrixWorld),am.setFromMatrixPosition(this.matrixWorld);const i=Xl.distanceTo(am)/e.zoom;t[0].object.visible=!0;let n,r;for(n=1,r=t.length;n<r;n++){let o=t[n].distance;if(t[n].object.visible&&(o-=o*t[n].hysteresis),i>=o)t[n-1].object.visible=!1,t[n].object.visible=!0;else break}for(this._currentLevel=n-1;n<r;n++)t[n].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const i=this.levels;for(let n=0,r=i.length;n<r;n++){const o=i[n];t.object.levels.push({object:o.object.uuid,distance:o.distance,hysteresis:o.hysteresis})}return t}}const lm=new L,cm=new Pt,hm=new Pt,Rb=new L,um=new st,Yl=new L,Zu=new Cn,dm=new st,Ju=new ls;class kf extends ke{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Xd,this.bindMatrix=new st,this.bindMatrixInverse=new st,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Mn),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let i=0;i<t.count;i++)this.getVertexPosition(i,Yl),this.boundingBox.expandByPoint(Yl)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Cn),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let i=0;i<t.count;i++)this.getVertexPosition(i,Yl),this.boundingSphere.expandByPoint(Yl)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const i=this.material,n=this.matrixWorld;i!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Zu.copy(this.boundingSphere),Zu.applyMatrix4(n),e.ray.intersectsSphere(Zu)!==!1&&(dm.copy(n).invert(),Ju.copy(e.ray).applyMatrix4(dm),!(this.boundingBox!==null&&Ju.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,Ju)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Pt,t=this.geometry.attributes.skinWeight;for(let i=0,n=t.count;i<n;i++){e.fromBufferAttribute(t,i);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(i,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===Xd?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===ov?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const i=this.skeleton,n=this.geometry;cm.fromBufferAttribute(n.attributes.skinIndex,e),hm.fromBufferAttribute(n.attributes.skinWeight,e),lm.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const o=hm.getComponent(r);if(o!==0){const a=cm.getComponent(r);um.multiplyMatrices(i.bones[a].matrixWorld,i.boneInverses[a]),t.addScaledVector(Rb.copy(lm).applyMatrix4(um),o)}}return t.applyMatrix4(this.bindMatrixInverse)}}class Zh extends Lt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class mr extends pn{constructor(e=null,t=1,i=1,n,r,o,a,l,c=jn,h=jn,u,d){super(null,o,a,l,c,h,n,r,u,d),this.isDataTexture=!0,this.image={data:e,width:t,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const fm=new st,Pb=new st;class _l{constructor(e=[],t=[]){this.uuid=Bi(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let i=0,n=this.bones.length;i<n;i++)this.boneInverses.push(new st)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const i=new st;this.bones[e]&&i.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(i)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];i&&i.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];i&&(i.parent&&i.parent.isBone?(i.matrix.copy(i.parent.matrixWorld).invert(),i.matrix.multiply(i.matrixWorld)):i.matrix.copy(i.matrixWorld),i.matrix.decompose(i.position,i.quaternion,i.scale))}}update(){const e=this.bones,t=this.boneInverses,i=this.boneMatrices,n=this.boneTexture;for(let r=0,o=e.length;r<o;r++){const a=e[r]?e[r].matrixWorld:Pb;fm.multiplyMatrices(a,t[r]),fm.toArray(i,r*16)}n!==null&&(n.needsUpdate=!0)}clone(){return new _l(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const i=new mr(t,e,e,hi,wi);return i.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=i,this}getBoneByName(e){for(let t=0,i=this.bones.length;t<i;t++){const n=this.bones[t];if(n.name===e)return n}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let i=0,n=e.bones.length;i<n;i++){const r=e.bones[i];let o=t[r];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),o=new Zh),this.bones.push(o),this.boneInverses.push(new st().fromArray(e.boneInverses[i]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,i=this.boneInverses;for(let n=0,r=t.length;n<r;n++){const o=t[n];e.bones.push(o.uuid);const a=i[n];e.boneInverses.push(a.toArray())}return e}}class to extends Ct{constructor(e,t,i,n=1){super(e,t,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Po=new st,pm=new st,jl=[],mm=new Mn,Ib=new st,da=new ke,fa=new Cn;class Cv extends ke{constructor(e,t,i){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new to(new Float32Array(i*16),16),this.instanceColor=null,this.morphTexture=null,this.count=i,this.boundingBox=null,this.boundingSphere=null;for(let n=0;n<i;n++)this.setMatrixAt(n,Ib)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Mn),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,Po),mm.copy(e.boundingBox).applyMatrix4(Po),this.boundingBox.union(mm)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Cn),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,Po),fa.copy(e.boundingSphere).applyMatrix4(Po),this.boundingSphere.union(fa)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const i=t.morphTargetInfluences,n=this.morphTexture.source.data.data,r=i.length+1,o=e*r+1;for(let a=0;a<i.length;a++)i[a]=n[o+a]}raycast(e,t){const i=this.matrixWorld,n=this.count;if(da.geometry=this.geometry,da.material=this.material,da.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),fa.copy(this.boundingSphere),fa.applyMatrix4(i),e.ray.intersectsSphere(fa)!==!1))for(let r=0;r<n;r++){this.getMatrixAt(r,Po),pm.multiplyMatrices(i,Po),da.matrixWorld=pm,da.raycast(e,jl);for(let o=0,a=jl.length;o<a;o++){const l=jl[o];l.instanceId=r,l.object=this,t.push(l)}jl.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new to(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const i=t.morphTargetInfluences,n=i.length+1;this.morphTexture===null&&(this.morphTexture=new mr(new Float32Array(n*this.count),n,this.count,kh,wi));const r=this.morphTexture.source.data.data;let o=0;for(let c=0;c<i.length;c++)o+=i[c];const a=this.geometry.morphTargetsRelative?1:1-o,l=n*e;r[l]=a,r.set(i,l+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const Ku=new L,Db=new L,Lb=new Et;class ur{constructor(e=new L(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,n){return this.normal.set(e,t,i),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const n=Ku.subVectors(i,t).cross(Db.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const i=e.delta(Ku),n=this.normal.dot(i);if(n===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/n;return r<0||r>1?null:t.copy(e.start).addScaledVector(i,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||Lb.getNormalMatrix(e),n=this.coplanarPoint(Ku).applyMatrix4(e),r=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const xs=new Cn,ql=new L;class yl{constructor(e=new ur,t=new ur,i=new ur,n=new ur,r=new ur,o=new ur){this.planes=[e,t,i,n,r,o]}set(e,t,i,n,r,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(n),a[4].copy(r),a[5].copy(o),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,t=rr){const i=this.planes,n=e.elements,r=n[0],o=n[1],a=n[2],l=n[3],c=n[4],h=n[5],u=n[6],d=n[7],f=n[8],p=n[9],v=n[10],m=n[11],g=n[12],y=n[13],x=n[14],_=n[15];if(i[0].setComponents(l-r,d-c,m-f,_-g).normalize(),i[1].setComponents(l+r,d+c,m+f,_+g).normalize(),i[2].setComponents(l+o,d+h,m+p,_+y).normalize(),i[3].setComponents(l-o,d-h,m-p,_-y).normalize(),i[4].setComponents(l-a,d-u,m-v,_-x).normalize(),t===rr)i[5].setComponents(l+a,d+u,m+v,_+x).normalize();else if(t===qa)i[5].setComponents(a,u,v,x).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),xs.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),xs.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(xs)}intersectsSprite(e){return xs.center.set(0,0,0),xs.radius=.7071067811865476,xs.applyMatrix4(e.matrixWorld),this.intersectsSphere(xs)}intersectsSphere(e){const t=this.planes,i=e.center,n=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(i)<n)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const n=t[i];if(ql.x=n.normal.x>0?e.max.x:e.min.x,ql.y=n.normal.y>0?e.max.y:e.min.y,ql.z=n.normal.z>0?e.max.z:e.min.z,n.distanceToPoint(ql)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Qu(s,e){return s-e}function Ub(s,e){return s.z-e.z}function Nb(s,e){return e.z-s.z}class Ob{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t,i,n){const r=this.pool,o=this.list;this.index>=r.length&&r.push({start:-1,count:-1,z:-1,index:-1});const a=r[this.index];o.push(a),this.index++,a.start=e,a.count=t,a.z=i,a.index=n}reset(){this.list.length=0,this.index=0}}const pi=new st,Fb=new ze(1,1,1),$u=new yl,Zl=new Mn,bs=new Cn,pa=new L,gm=new L,kb=new L,ed=new Ob,Qn=new ke,Jl=[];function Bb(s,e,t=0){const i=e.itemSize;if(s.isInterleavedBufferAttribute||s.array.constructor!==e.array.constructor){const n=s.count;for(let r=0;r<n;r++)for(let o=0;o<i;o++)e.setComponent(r+t,o,s.getComponent(r,o))}else e.array.set(s.array,t*i);e.needsUpdate=!0}function Ss(s,e){if(s.constructor!==e.constructor){const t=Math.min(s.length,e.length);for(let i=0;i<t;i++)e[i]=s[i]}else{const t=Math.min(s.length,e.length);e.set(new s.constructor(s.buffer,0,t))}}class Rv extends ke{constructor(e,t,i=t*2,n){super(new yt,n),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=e,this._maxVertexCount=t,this._maxIndexCount=i,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}_initMatricesTexture(){let e=Math.sqrt(this._maxInstanceCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),i=new mr(t,e,e,hi,wi);this._matricesTexture=i}_initIndirectTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Uint32Array(e*e),i=new mr(t,e,e,dl,Gr);this._indirectTexture=i}_initColorsTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Float32Array(e*e*4).fill(1),i=new mr(t,e,e,hi,wi);i.colorSpace=Nt.workingColorSpace,this._colorsTexture=i}_initializeGeometry(e){const t=this.geometry,i=this._maxVertexCount,n=this._maxIndexCount;if(this._geometryInitialized===!1){for(const r in e.attributes){const o=e.getAttribute(r),{array:a,itemSize:l,normalized:c}=o,h=new a.constructor(i*l),u=new Ct(h,l,c);t.setAttribute(r,u)}if(e.getIndex()!==null){const r=i>65535?new Uint32Array(n):new Uint16Array(n);t.setIndex(new Ct(r,1))}this._geometryInitialized=!0}}_validateGeometry(e){const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const i in t.attributes){if(!e.hasAttribute(i))throw new Error(`THREE.BatchedMesh: Added geometry missing "${i}". All geometries must have consistent attributes.`);const n=e.getAttribute(i),r=t.getAttribute(i);if(n.itemSize!==r.itemSize||n.normalized!==r.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(e){const t=this._instanceInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${e}. Instance is either out of range or has been deleted.`)}validateGeometryId(e){const t=this._geometryInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${e}. Geometry is either out of range or has been deleted.`)}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Mn);const e=this.boundingBox,t=this._instanceInfo;e.makeEmpty();for(let i=0,n=t.length;i<n;i++){if(t[i].active===!1)continue;const r=t[i].geometryIndex;this.getMatrixAt(i,pi),this.getBoundingBoxAt(r,Zl).applyMatrix4(pi),e.union(Zl)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Cn);const e=this.boundingSphere,t=this._instanceInfo;e.makeEmpty();for(let i=0,n=t.length;i<n;i++){if(t[i].active===!1)continue;const r=t[i].geometryIndex;this.getMatrixAt(i,pi),this.getBoundingSphereAt(r,bs).applyMatrix4(pi),e.union(bs)}}addInstance(e){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const i={visible:!0,active:!0,geometryIndex:e};let n=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(Qu),n=this._availableInstanceIds.shift(),this._instanceInfo[n]=i):(n=this._instanceInfo.length,this._instanceInfo.push(i));const r=this._matricesTexture;pi.identity().toArray(r.image.data,n*16),r.needsUpdate=!0;const o=this._colorsTexture;return o&&(Fb.toArray(o.image.data,n*4),o.needsUpdate=!0),this._visibilityChanged=!0,n}addGeometry(e,t=-1,i=-1){this._initializeGeometry(e),this._validateGeometry(e);const n={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},r=this._geometryInfo;n.vertexStart=this._nextVertexStart,n.reservedVertexCount=t===-1?e.getAttribute("position").count:t;const o=e.getIndex();if(o!==null&&(n.indexStart=this._nextIndexStart,n.reservedIndexCount=i===-1?o.count:i),n.indexStart!==-1&&n.indexStart+n.reservedIndexCount>this._maxIndexCount||n.vertexStart+n.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let l;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(Qu),l=this._availableGeometryIds.shift(),r[l]=n):(l=this._geometryCount,this._geometryCount++,r.push(n)),this.setGeometryAt(l,e),this._nextIndexStart=n.indexStart+n.reservedIndexCount,this._nextVertexStart=n.vertexStart+n.reservedVertexCount,l}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const i=this.geometry,n=i.getIndex()!==null,r=i.getIndex(),o=t.getIndex(),a=this._geometryInfo[e];if(n&&o.count>a.reservedIndexCount||t.attributes.position.count>a.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const l=a.vertexStart,c=a.reservedVertexCount;a.vertexCount=t.getAttribute("position").count;for(const h in i.attributes){const u=t.getAttribute(h),d=i.getAttribute(h);Bb(u,d,l);const f=u.itemSize;for(let p=u.count,v=c;p<v;p++){const m=l+p;for(let g=0;g<f;g++)d.setComponent(m,g,0)}d.needsUpdate=!0,d.addUpdateRange(l*f,c*f)}if(n){const h=a.indexStart,u=a.reservedIndexCount;a.indexCount=t.getIndex().count;for(let d=0;d<o.count;d++)r.setX(h+d,l+o.getX(d));for(let d=o.count,f=u;d<f;d++)r.setX(h+d,l);r.needsUpdate=!0,r.addUpdateRange(h,a.reservedIndexCount)}return a.start=n?a.indexStart:a.vertexStart,a.count=n?a.indexCount:a.vertexCount,a.boundingBox=null,t.boundingBox!==null&&(a.boundingBox=t.boundingBox.clone()),a.boundingSphere=null,t.boundingSphere!==null&&(a.boundingSphere=t.boundingSphere.clone()),this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._geometryInfo;if(e>=t.length||t[e].active===!1)return this;const i=this._instanceInfo;for(let n=0,r=i.length;n<r;n++)i[n].active&&i[n].geometryIndex===e&&this.deleteInstance(n);return t[e].active=!1,this._availableGeometryIds.push(e),this._visibilityChanged=!0,this}deleteInstance(e){return this.validateInstanceId(e),this._instanceInfo[e].active=!1,this._availableInstanceIds.push(e),this._visibilityChanged=!0,this}optimize(){let e=0,t=0;const i=this._geometryInfo,n=i.map((o,a)=>a).sort((o,a)=>i[o].vertexStart-i[a].vertexStart),r=this.geometry;for(let o=0,a=i.length;o<a;o++){const l=n[o],c=i[l];if(c.active!==!1){if(r.index!==null){if(c.indexStart!==t){const{indexStart:h,vertexStart:u,reservedIndexCount:d}=c,f=r.index,p=f.array,v=e-u;for(let m=h;m<h+d;m++)p[m]=p[m]+v;f.array.copyWithin(t,h,h+d),f.addUpdateRange(t,d),c.indexStart=t}t+=c.reservedIndexCount}if(c.vertexStart!==e){const{vertexStart:h,reservedVertexCount:u}=c,d=r.attributes;for(const f in d){const p=d[f],{array:v,itemSize:m}=p;v.copyWithin(e*m,h*m,(h+u)*m),p.addUpdateRange(e*m,u*m)}c.vertexStart=e}e+=c.reservedVertexCount,c.start=r.index?c.indexStart:c.vertexStart,this._nextIndexStart=r.index?c.indexStart+c.reservedIndexCount:0,this._nextVertexStart=c.vertexStart+c.reservedVertexCount}}return this}getBoundingBoxAt(e,t){if(e>=this._geometryCount)return null;const i=this.geometry,n=this._geometryInfo[e];if(n.boundingBox===null){const r=new Mn,o=i.index,a=i.attributes.position;for(let l=n.start,c=n.start+n.count;l<c;l++){let h=l;o&&(h=o.getX(h)),r.expandByPoint(pa.fromBufferAttribute(a,h))}n.boundingBox=r}return t.copy(n.boundingBox),t}getBoundingSphereAt(e,t){if(e>=this._geometryCount)return null;const i=this.geometry,n=this._geometryInfo[e];if(n.boundingSphere===null){const r=new Cn;this.getBoundingBoxAt(e,Zl),Zl.getCenter(r.center);const o=i.index,a=i.attributes.position;let l=0;for(let c=n.start,h=n.start+n.count;c<h;c++){let u=c;o&&(u=o.getX(u)),pa.fromBufferAttribute(a,u),l=Math.max(l,r.center.distanceToSquared(pa))}r.radius=Math.sqrt(l),n.boundingSphere=r}return t.copy(n.boundingSphere),t}setMatrixAt(e,t){this.validateInstanceId(e);const i=this._matricesTexture,n=this._matricesTexture.image.data;return t.toArray(n,e*16),i.needsUpdate=!0,this}getMatrixAt(e,t){return this.validateInstanceId(e),t.fromArray(this._matricesTexture.image.data,e*16)}setColorAt(e,t){return this.validateInstanceId(e),this._colorsTexture===null&&this._initColorsTexture(),t.toArray(this._colorsTexture.image.data,e*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(e,t){return this.validateInstanceId(e),t.fromArray(this._colorsTexture.image.data,e*4)}setVisibleAt(e,t){return this.validateInstanceId(e),this._instanceInfo[e].visible===t?this:(this._instanceInfo[e].visible=t,this._visibilityChanged=!0,this)}getVisibleAt(e){return this.validateInstanceId(e),this._instanceInfo[e].visible}setGeometryIdAt(e,t){return this.validateInstanceId(e),this.validateGeometryId(t),this._instanceInfo[e].geometryIndex=t,this}getGeometryIdAt(e){return this.validateInstanceId(e),this._instanceInfo[e].geometryIndex}getGeometryRangeAt(e,t={}){this.validateGeometryId(e);const i=this._geometryInfo[e];return t.vertexStart=i.vertexStart,t.vertexCount=i.vertexCount,t.reservedVertexCount=i.reservedVertexCount,t.indexStart=i.indexStart,t.indexCount=i.indexCount,t.reservedIndexCount=i.reservedIndexCount,t.start=i.start,t.count=i.count,t}setInstanceCount(e){const t=this._availableInstanceIds,i=this._instanceInfo;for(t.sort(Qu);t[t.length-1]===i.length;)i.pop(),t.pop();if(e<i.length)throw new Error(`BatchedMesh: Instance ids outside the range ${e} are being used. Cannot shrink instance count.`);const n=new Int32Array(e),r=new Int32Array(e);Ss(this._multiDrawCounts,n),Ss(this._multiDrawStarts,r),this._multiDrawCounts=n,this._multiDrawStarts=r,this._maxInstanceCount=e;const o=this._indirectTexture,a=this._matricesTexture,l=this._colorsTexture;o.dispose(),this._initIndirectTexture(),Ss(o.image.data,this._indirectTexture.image.data),a.dispose(),this._initMatricesTexture(),Ss(a.image.data,this._matricesTexture.image.data),l&&(l.dispose(),this._initColorsTexture(),Ss(l.image.data,this._colorsTexture.image.data))}setGeometrySize(e,t){const i=[...this._geometryInfo].filter(a=>a.active);if(Math.max(...i.map(a=>a.vertexStart+a.reservedVertexCount))>e)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${t}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...i.map(l=>l.indexStart+l.reservedIndexCount))>t)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${t}. Cannot shrink further.`);const r=this.geometry;r.dispose(),this._maxVertexCount=e,this._maxIndexCount=t,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new yt,this._initializeGeometry(r));const o=this.geometry;r.index&&Ss(r.index.array,o.index.array);for(const a in r.attributes)Ss(r.attributes[a].array,o.attributes[a].array)}raycast(e,t){const i=this._instanceInfo,n=this._geometryInfo,r=this.matrixWorld,o=this.geometry;Qn.material=this.material,Qn.geometry.index=o.index,Qn.geometry.attributes=o.attributes,Qn.geometry.boundingBox===null&&(Qn.geometry.boundingBox=new Mn),Qn.geometry.boundingSphere===null&&(Qn.geometry.boundingSphere=new Cn);for(let a=0,l=i.length;a<l;a++){if(!i[a].visible||!i[a].active)continue;const c=i[a].geometryIndex,h=n[c];Qn.geometry.setDrawRange(h.start,h.count),this.getMatrixAt(a,Qn.matrixWorld).premultiply(r),this.getBoundingBoxAt(c,Qn.geometry.boundingBox),this.getBoundingSphereAt(c,Qn.geometry.boundingSphere),Qn.raycast(e,Jl);for(let u=0,d=Jl.length;u<d;u++){const f=Jl[u];f.object=this,f.batchId=a,t.push(f)}Jl.length=0}Qn.material=null,Qn.geometry.index=null,Qn.geometry.attributes={},Qn.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._geometryInfo=e._geometryInfo.map(t=>({...t,boundingBox:t.boundingBox!==null?t.boundingBox.clone():null,boundingSphere:t.boundingSphere!==null?t.boundingSphere.clone():null})),this._instanceInfo=e._instanceInfo.map(t=>({...t})),this._maxInstanceCount=e._maxInstanceCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._geometryCount=e._geometryCount,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=e._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null)}onBeforeRender(e,t,i,n,r){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const o=n.getIndex(),a=o===null?1:o.array.BYTES_PER_ELEMENT,l=this._instanceInfo,c=this._multiDrawStarts,h=this._multiDrawCounts,u=this._geometryInfo,d=this.perObjectFrustumCulled,f=this._indirectTexture,p=f.image.data;d&&(pi.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse).multiply(this.matrixWorld),$u.setFromProjectionMatrix(pi,e.coordinateSystem));let v=0;if(this.sortObjects){pi.copy(this.matrixWorld).invert(),pa.setFromMatrixPosition(i.matrixWorld).applyMatrix4(pi),gm.set(0,0,-1).transformDirection(i.matrixWorld).transformDirection(pi);for(let y=0,x=l.length;y<x;y++)if(l[y].visible&&l[y].active){const _=l[y].geometryIndex;this.getMatrixAt(y,pi),this.getBoundingSphereAt(_,bs).applyMatrix4(pi);let E=!1;if(d&&(E=!$u.intersectsSphere(bs)),!E){const M=u[_],S=kb.subVectors(bs.center,pa).dot(gm);ed.push(M.start,M.count,S,y)}}const m=ed.list,g=this.customSort;g===null?m.sort(r.transparent?Nb:Ub):g.call(this,m,i);for(let y=0,x=m.length;y<x;y++){const _=m[y];c[v]=_.start*a,h[v]=_.count,p[v]=_.index,v++}ed.reset()}else for(let m=0,g=l.length;m<g;m++)if(l[m].visible&&l[m].active){const y=l[m].geometryIndex;let x=!1;if(d&&(this.getMatrixAt(m,pi),this.getBoundingSphereAt(y,bs).applyMatrix4(pi),x=!$u.intersectsSphere(bs)),!x){const _=u[y];c[v]=_.start*a,h[v]=_.count,p[v]=m,v++}}f.needsUpdate=!0,this._multiDrawCount=v,this._visibilityChanged=!1}onBeforeShadow(e,t,i,n,r,o){this.onBeforeRender(e,null,n,r,o)}}class wn extends kn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new ze(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Th=new L,Ah=new L,vm=new st,ma=new ls,Kl=new Cn,td=new L,_m=new L;class Yn extends Lt{constructor(e=new yt,t=new wn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[0];for(let n=1,r=t.count;n<r;n++)Th.fromBufferAttribute(t,n-1),Ah.fromBufferAttribute(t,n),i[n]=i[n-1],i[n]+=Th.distanceTo(Ah);e.setAttribute("lineDistance",new qe(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const i=this.geometry,n=this.matrixWorld,r=e.params.Line.threshold,o=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),Kl.copy(i.boundingSphere),Kl.applyMatrix4(n),Kl.radius+=r,e.ray.intersectsSphere(Kl)===!1)return;vm.copy(n).invert(),ma.copy(e.ray).applyMatrix4(vm);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=this.isLineSegments?2:1,h=i.index,d=i.attributes.position;if(h!==null){const f=Math.max(0,o.start),p=Math.min(h.count,o.start+o.count);for(let v=f,m=p-1;v<m;v+=c){const g=h.getX(v),y=h.getX(v+1),x=Ql(this,e,ma,l,g,y,v);x&&t.push(x)}if(this.isLineLoop){const v=h.getX(p-1),m=h.getX(f),g=Ql(this,e,ma,l,v,m,p-1);g&&t.push(g)}}else{const f=Math.max(0,o.start),p=Math.min(d.count,o.start+o.count);for(let v=f,m=p-1;v<m;v+=c){const g=Ql(this,e,ma,l,v,v+1,v);g&&t.push(g)}if(this.isLineLoop){const v=Ql(this,e,ma,l,p-1,f,p-1);v&&t.push(v)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=n.length;r<o;r++){const a=n[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}function Ql(s,e,t,i,n,r,o){const a=s.geometry.attributes.position;if(Th.fromBufferAttribute(a,n),Ah.fromBufferAttribute(a,r),t.distanceSqToSegment(Th,Ah,td,_m)>i)return;td.applyMatrix4(s.matrixWorld);const c=e.ray.origin.distanceTo(td);if(!(c<e.near||c>e.far))return{distance:c,point:_m.clone().applyMatrix4(s.matrixWorld),index:o,face:null,faceIndex:null,barycoord:null,object:s}}const ym=new L,xm=new L;class zi extends Yn{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[];for(let n=0,r=t.count;n<r;n+=2)ym.fromBufferAttribute(t,n),xm.fromBufferAttribute(t,n+1),i[n]=n===0?0:i[n-1],i[n+1]=i[n]+ym.distanceTo(xm);e.setAttribute("lineDistance",new qe(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Pv extends Yn{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class Xs extends kn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new ze(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const bm=new st,qd=new ls,$l=new Cn,ec=new L;class Na extends Lt{constructor(e=new yt,t=new Xs){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const i=this.geometry,n=this.matrixWorld,r=e.params.Points.threshold,o=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),$l.copy(i.boundingSphere),$l.applyMatrix4(n),$l.radius+=r,e.ray.intersectsSphere($l)===!1)return;bm.copy(n).invert(),qd.copy(e.ray).applyMatrix4(bm);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=i.index,u=i.attributes.position;if(c!==null){const d=Math.max(0,o.start),f=Math.min(c.count,o.start+o.count);for(let p=d,v=f;p<v;p++){const m=c.getX(p);ec.fromBufferAttribute(u,m),Sm(ec,m,l,n,e,t,this)}}else{const d=Math.max(0,o.start),f=Math.min(u.count,o.start+o.count);for(let p=d,v=f;p<v;p++)ec.fromBufferAttribute(u,p),Sm(ec,p,l,n,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=n.length;r<o;r++){const a=n[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}function Sm(s,e,t,i,n,r,o){const a=qd.distanceSqToPoint(s);if(a<t){const l=new L;qd.closestPointToPoint(s,l),l.applyMatrix4(i);const c=n.ray.origin.distanceTo(l);if(c<n.near||c>n.far)return;r.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,faceIndex:null,barycoord:null,object:o})}}class Iv extends pn{constructor(e,t,i,n,r=Sn,o=Sn,a,l,c){super(e,t,i,n,r,o,a,l,c),this.isVideoTexture=!0,this.generateMipmaps=!1;const h=this;function u(){h.needsUpdate=!0,e.requestVideoFrameCallback(u)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(u)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class zb extends Iv{constructor(e,t,i,n,r,o,a,l){super({},e,t,i,n,r,o,a,l),this.isVideoFrameTexture=!0}update(){}clone(){return new this.constructor().copy(this)}setFrame(e){this.image=e,this.needsUpdate=!0}}class Gb extends pn{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=jn,this.minFilter=jn,this.generateMipmaps=!1,this.needsUpdate=!0}}class Jh extends pn{constructor(e,t,i,n,r,o,a,l,c,h,u,d){super(null,o,a,l,c,h,n,r,u,d),this.isCompressedTexture=!0,this.image={width:t,height:i},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class Vb extends Jh{constructor(e,t,i,n,r,o){super(e,t,i,r,o),this.isCompressedArrayTexture=!0,this.image.depth=n,this.wrapR=Mi,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class Hb extends Jh{constructor(e,t,i){super(void 0,e[0].width,e[0].height,t,i,zr),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class Dv extends pn{constructor(e,t,i,n,r,o,a,l,c){super(e,t,i,n,r,o,a,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Bf extends pn{constructor(e,t,i=Gr,n,r,o,a=jn,l=jn,c,h=Vo){if(h!==Vo&&h!==Ho)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super(null,n,r,o,a,l,h,i,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new ss(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class sr{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(e,t){const i=this.getUtoTmapping(e);return this.getPoint(i,t)}getPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return t}getSpacedPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPointAt(i/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let i,n=this.getPoint(0),r=0;t.push(0);for(let o=1;o<=e;o++)i=this.getPoint(o/e),r+=i.distanceTo(n),t.push(r),n=i;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t=null){const i=this.getLengths();let n=0;const r=i.length;let o;t?o=t:o=e*i[r-1];let a=0,l=r-1,c;for(;a<=l;)if(n=Math.floor(a+(l-a)/2),c=i[n]-o,c<0)a=n+1;else if(c>0)l=n-1;else{l=n;break}if(n=l,i[n]===o)return n/(r-1);const h=i[n],d=i[n+1]-h,f=(o-h)/d;return(n+f)/(r-1)}getTangent(e,t){let n=e-1e-4,r=e+1e-4;n<0&&(n=0),r>1&&(r=1);const o=this.getPoint(n),a=this.getPoint(r),l=t||(o.isVector2?new xe:new L);return l.copy(a).sub(o).normalize(),l}getTangentAt(e,t){const i=this.getUtoTmapping(e);return this.getTangent(i,t)}computeFrenetFrames(e,t=!1){const i=new L,n=[],r=[],o=[],a=new L,l=new st;for(let f=0;f<=e;f++){const p=f/e;n[f]=this.getTangentAt(p,new L)}r[0]=new L,o[0]=new L;let c=Number.MAX_VALUE;const h=Math.abs(n[0].x),u=Math.abs(n[0].y),d=Math.abs(n[0].z);h<=c&&(c=h,i.set(1,0,0)),u<=c&&(c=u,i.set(0,1,0)),d<=c&&i.set(0,0,1),a.crossVectors(n[0],i).normalize(),r[0].crossVectors(n[0],a),o[0].crossVectors(n[0],r[0]);for(let f=1;f<=e;f++){if(r[f]=r[f-1].clone(),o[f]=o[f-1].clone(),a.crossVectors(n[f-1],n[f]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(Tt(n[f-1].dot(n[f]),-1,1));r[f].applyMatrix4(l.makeRotationAxis(a,p))}o[f].crossVectors(n[f],r[f])}if(t===!0){let f=Math.acos(Tt(r[0].dot(r[e]),-1,1));f/=e,n[0].dot(a.crossVectors(r[0],r[e]))>0&&(f=-f);for(let p=1;p<=e;p++)r[p].applyMatrix4(l.makeRotationAxis(n[p],f*p)),o[p].crossVectors(n[p],r[p])}return{tangents:n,normals:r,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Kh extends sr{constructor(e=0,t=0,i=1,n=1,r=0,o=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=n,this.aStartAngle=r,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(e,t=new xe){const i=t,n=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const o=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=n;for(;r>n;)r-=n;r<Number.EPSILON&&(o?r=0:r=n),this.aClockwise===!0&&!o&&(r===n?r=-n:r=r-n);const a=this.aStartAngle+e*r;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const h=Math.cos(this.aRotation),u=Math.sin(this.aRotation),d=l-this.aX,f=c-this.aY;l=d*h-f*u+this.aX,c=d*u+f*h+this.aY}return i.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class Lv extends Kh{constructor(e,t,i,n,r,o){super(e,t,i,i,n,r,o),this.isArcCurve=!0,this.type="ArcCurve"}}function zf(){let s=0,e=0,t=0,i=0;function n(r,o,a,l){s=r,e=a,t=-3*r+3*o-2*a-l,i=2*r-2*o+a+l}return{initCatmullRom:function(r,o,a,l,c){n(o,a,c*(a-r),c*(l-o))},initNonuniformCatmullRom:function(r,o,a,l,c,h,u){let d=(o-r)/c-(a-r)/(c+h)+(a-o)/h,f=(a-o)/h-(l-o)/(h+u)+(l-a)/u;d*=h,f*=h,n(o,a,d,f)},calc:function(r){const o=r*r,a=o*r;return s+e*r+t*o+i*a}}}const tc=new L,nd=new zf,id=new zf,rd=new zf;class Uv extends sr{constructor(e=[],t=!1,i="centripetal",n=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=i,this.tension=n}getPoint(e,t=new L){const i=t,n=this.points,r=n.length,o=(r-(this.closed?0:1))*e;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/r)+1)*r:l===0&&a===r-1&&(a=r-2,l=1);let c,h;this.closed||a>0?c=n[(a-1)%r]:(tc.subVectors(n[0],n[1]).add(n[0]),c=tc);const u=n[a%r],d=n[(a+1)%r];if(this.closed||a+2<r?h=n[(a+2)%r]:(tc.subVectors(n[r-1],n[r-2]).add(n[r-1]),h=tc),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let p=Math.pow(c.distanceToSquared(u),f),v=Math.pow(u.distanceToSquared(d),f),m=Math.pow(d.distanceToSquared(h),f);v<1e-4&&(v=1),p<1e-4&&(p=v),m<1e-4&&(m=v),nd.initNonuniformCatmullRom(c.x,u.x,d.x,h.x,p,v,m),id.initNonuniformCatmullRom(c.y,u.y,d.y,h.y,p,v,m),rd.initNonuniformCatmullRom(c.z,u.z,d.z,h.z,p,v,m)}else this.curveType==="catmullrom"&&(nd.initCatmullRom(c.x,u.x,d.x,h.x,this.tension),id.initCatmullRom(c.y,u.y,d.y,h.y,this.tension),rd.initCatmullRom(c.z,u.z,d.z,h.z,this.tension));return i.set(nd.calc(l),id.calc(l),rd.calc(l)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(n.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const n=this.points[t];e.points.push(n.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(new L().fromArray(n))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function Mm(s,e,t,i,n){const r=(i-e)*.5,o=(n-t)*.5,a=s*s,l=s*a;return(2*t-2*i+r+o)*l+(-3*t+3*i-2*r-o)*a+r*s+t}function Wb(s,e){const t=1-s;return t*t*e}function Xb(s,e){return 2*(1-s)*s*e}function Yb(s,e){return s*s*e}function Oa(s,e,t,i){return Wb(s,e)+Xb(s,t)+Yb(s,i)}function jb(s,e){const t=1-s;return t*t*t*e}function qb(s,e){const t=1-s;return 3*t*t*s*e}function Zb(s,e){return 3*(1-s)*s*s*e}function Jb(s,e){return s*s*s*e}function Fa(s,e,t,i,n){return jb(s,e)+qb(s,t)+Zb(s,i)+Jb(s,n)}class Gf extends sr{constructor(e=new xe,t=new xe,i=new xe,n=new xe){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new xe){const i=t,n=this.v0,r=this.v1,o=this.v2,a=this.v3;return i.set(Fa(e,n.x,r.x,o.x,a.x),Fa(e,n.y,r.y,o.y,a.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Nv extends sr{constructor(e=new L,t=new L,i=new L,n=new L){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new L){const i=t,n=this.v0,r=this.v1,o=this.v2,a=this.v3;return i.set(Fa(e,n.x,r.x,o.x,a.x),Fa(e,n.y,r.y,o.y,a.y),Fa(e,n.z,r.z,o.z,a.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Vf extends sr{constructor(e=new xe,t=new xe){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new xe){const i=t;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new xe){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Ov extends sr{constructor(e=new L,t=new L){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new L){const i=t;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new L){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Hf extends sr{constructor(e=new xe,t=new xe,i=new xe){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new xe){const i=t,n=this.v0,r=this.v1,o=this.v2;return i.set(Oa(e,n.x,r.x,o.x),Oa(e,n.y,r.y,o.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Wf extends sr{constructor(e=new L,t=new L,i=new L){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new L){const i=t,n=this.v0,r=this.v1,o=this.v2;return i.set(Oa(e,n.x,r.x,o.x),Oa(e,n.y,r.y,o.y),Oa(e,n.z,r.z,o.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Xf extends sr{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new xe){const i=t,n=this.points,r=(n.length-1)*e,o=Math.floor(r),a=r-o,l=n[o===0?o:o-1],c=n[o],h=n[o>n.length-2?n.length-1:o+1],u=n[o>n.length-3?n.length-1:o+2];return i.set(Mm(a,l.x,c.x,h.x,u.x),Mm(a,l.y,c.y,h.y,u.y)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(n.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const n=this.points[t];e.points.push(n.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(new xe().fromArray(n))}return this}}var Ch=Object.freeze({__proto__:null,ArcCurve:Lv,CatmullRomCurve3:Uv,CubicBezierCurve:Gf,CubicBezierCurve3:Nv,EllipseCurve:Kh,LineCurve:Vf,LineCurve3:Ov,QuadraticBezierCurve:Hf,QuadraticBezierCurve3:Wf,SplineCurve:Xf});class Fv extends sr{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const i=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Ch[i](t,e))}return this}getPoint(e,t){const i=e*this.getLength(),n=this.getCurveLengths();let r=0;for(;r<n.length;){if(n[r]>=i){const o=n[r]-i,a=this.curves[r],l=a.getLength(),c=l===0?0:1-o/l;return a.getPointAt(c,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let i=0,n=this.curves.length;i<n;i++)t+=this.curves[i].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let i;for(let n=0,r=this.curves;n<r.length;n++){const o=r[n],a=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,l=o.getPoints(a);for(let c=0;c<l.length;c++){const h=l[c];i&&i.equals(h)||(t.push(h),i=h)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const n=e.curves[t];this.curves.push(n.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,i=this.curves.length;t<i;t++){const n=this.curves[t];e.curves.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const n=e.curves[t];this.curves.push(new Ch[n.type]().fromJSON(n))}return this}}class Ja extends Fv{constructor(e){super(),this.type="Path",this.currentPoint=new xe,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const i=new Vf(this.currentPoint.clone(),new xe(e,t));return this.curves.push(i),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,i,n){const r=new Hf(this.currentPoint.clone(),new xe(e,t),new xe(i,n));return this.curves.push(r),this.currentPoint.set(i,n),this}bezierCurveTo(e,t,i,n,r,o){const a=new Gf(this.currentPoint.clone(),new xe(e,t),new xe(i,n),new xe(r,o));return this.curves.push(a),this.currentPoint.set(r,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),i=new Xf(t);return this.curves.push(i),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,i,n,r,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+a,t+l,i,n,r,o),this}absarc(e,t,i,n,r,o){return this.absellipse(e,t,i,i,n,r,o),this}ellipse(e,t,i,n,r,o,a,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+c,t+h,i,n,r,o,a,l),this}absellipse(e,t,i,n,r,o,a,l){const c=new Kh(e,t,i,n,r,o,a,l);if(this.curves.length>0){const u=c.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(c);const h=c.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class xl extends yt{constructor(e=[new xe(0,-.5),new xe(.5,0),new xe(0,.5)],t=12,i=0,n=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:i,phiLength:n},t=Math.floor(t),n=Tt(n,0,Math.PI*2);const r=[],o=[],a=[],l=[],c=[],h=1/t,u=new L,d=new xe,f=new L,p=new L,v=new L;let m=0,g=0;for(let y=0;y<=e.length-1;y++)switch(y){case 0:m=e[y+1].x-e[y].x,g=e[y+1].y-e[y].y,f.x=g*1,f.y=-m,f.z=g*0,v.copy(f),f.normalize(),l.push(f.x,f.y,f.z);break;case e.length-1:l.push(v.x,v.y,v.z);break;default:m=e[y+1].x-e[y].x,g=e[y+1].y-e[y].y,f.x=g*1,f.y=-m,f.z=g*0,p.copy(f),f.x+=v.x,f.y+=v.y,f.z+=v.z,f.normalize(),l.push(f.x,f.y,f.z),v.copy(p)}for(let y=0;y<=t;y++){const x=i+y*h*n,_=Math.sin(x),E=Math.cos(x);for(let M=0;M<=e.length-1;M++){u.x=e[M].x*_,u.y=e[M].y,u.z=e[M].x*E,o.push(u.x,u.y,u.z),d.x=y/t,d.y=M/(e.length-1),a.push(d.x,d.y);const S=l[3*M+0]*_,T=l[3*M+1],w=l[3*M+0]*E;c.push(S,T,w)}}for(let y=0;y<t;y++)for(let x=0;x<e.length-1;x++){const _=x+y*e.length,E=_,M=_+e.length,S=_+e.length+1,T=_+1;r.push(E,M,T),r.push(S,T,M)}this.setIndex(r),this.setAttribute("position",new qe(o,3)),this.setAttribute("uv",new qe(a,2)),this.setAttribute("normal",new qe(c,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new xl(e.points,e.segments,e.phiStart,e.phiLength)}}class Qh extends xl{constructor(e=1,t=1,i=4,n=8){const r=new Ja;r.absarc(0,-t/2,e,Math.PI*1.5,0),r.absarc(0,t/2,e,0,Math.PI*.5),super(r.getPoints(i),n),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:i,radialSegments:n}}static fromJSON(e){return new Qh(e.radius,e.length,e.capSegments,e.radialSegments)}}class $h extends yt{constructor(e=1,t=32,i=0,n=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:n},t=Math.max(3,t);const r=[],o=[],a=[],l=[],c=new L,h=new xe;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let u=0,d=3;u<=t;u++,d+=3){const f=i+u/t*n;c.x=e*Math.cos(f),c.y=e*Math.sin(f),o.push(c.x,c.y,c.z),a.push(0,0,1),h.x=(o[d]/e+1)/2,h.y=(o[d+1]/e+1)/2,l.push(h.x,h.y)}for(let u=1;u<=t;u++)r.push(u,u+1,0);this.setIndex(r),this.setAttribute("position",new qe(o,3)),this.setAttribute("normal",new qe(a,3)),this.setAttribute("uv",new qe(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new $h(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class An extends yt{constructor(e=1,t=1,i=1,n=32,r=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:n,heightSegments:r,openEnded:o,thetaStart:a,thetaLength:l};const c=this;n=Math.floor(n),r=Math.floor(r);const h=[],u=[],d=[],f=[];let p=0;const v=[],m=i/2;let g=0;y(),o===!1&&(e>0&&x(!0),t>0&&x(!1)),this.setIndex(h),this.setAttribute("position",new qe(u,3)),this.setAttribute("normal",new qe(d,3)),this.setAttribute("uv",new qe(f,2));function y(){const _=new L,E=new L;let M=0;const S=(t-e)/i;for(let T=0;T<=r;T++){const w=[],b=T/r,D=b*(t-e)+e;for(let I=0;I<=n;I++){const F=I/n,V=F*l+a,J=Math.sin(V),O=Math.cos(V);E.x=D*J,E.y=-b*i+m,E.z=D*O,u.push(E.x,E.y,E.z),_.set(J,S,O).normalize(),d.push(_.x,_.y,_.z),f.push(F,1-b),w.push(p++)}v.push(w)}for(let T=0;T<n;T++)for(let w=0;w<r;w++){const b=v[w][T],D=v[w+1][T],I=v[w+1][T+1],F=v[w][T+1];(e>0||w!==0)&&(h.push(b,D,F),M+=3),(t>0||w!==r-1)&&(h.push(D,I,F),M+=3)}c.addGroup(g,M,0),g+=M}function x(_){const E=p,M=new xe,S=new L;let T=0;const w=_===!0?e:t,b=_===!0?1:-1;for(let I=1;I<=n;I++)u.push(0,m*b,0),d.push(0,b,0),f.push(.5,.5),p++;const D=p;for(let I=0;I<=n;I++){const V=I/n*l+a,J=Math.cos(V),O=Math.sin(V);S.x=w*O,S.y=m*b,S.z=w*J,u.push(S.x,S.y,S.z),d.push(0,b,0),M.x=J*.5+.5,M.y=O*.5*b+.5,f.push(M.x,M.y),p++}for(let I=0;I<n;I++){const F=E+I,V=D+I;_===!0?h.push(V,V+1,F):h.push(V+1,V,F),T+=3}c.addGroup(g,T,_===!0?1:2),g+=T}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new An(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class eu extends An{constructor(e=1,t=1,i=32,n=1,r=!1,o=0,a=Math.PI*2){super(0,e,t,i,n,r,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:o,thetaLength:a}}static fromJSON(e){return new eu(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class cs extends yt{constructor(e=[],t=[],i=1,n=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:n};const r=[],o=[];a(n),c(i),h(),this.setAttribute("position",new qe(r,3)),this.setAttribute("normal",new qe(r.slice(),3)),this.setAttribute("uv",new qe(o,2)),n===0?this.computeVertexNormals():this.normalizeNormals();function a(y){const x=new L,_=new L,E=new L;for(let M=0;M<t.length;M+=3)f(t[M+0],x),f(t[M+1],_),f(t[M+2],E),l(x,_,E,y)}function l(y,x,_,E){const M=E+1,S=[];for(let T=0;T<=M;T++){S[T]=[];const w=y.clone().lerp(_,T/M),b=x.clone().lerp(_,T/M),D=M-T;for(let I=0;I<=D;I++)I===0&&T===M?S[T][I]=w:S[T][I]=w.clone().lerp(b,I/D)}for(let T=0;T<M;T++)for(let w=0;w<2*(M-T)-1;w++){const b=Math.floor(w/2);w%2===0?(d(S[T][b+1]),d(S[T+1][b]),d(S[T][b])):(d(S[T][b+1]),d(S[T+1][b+1]),d(S[T+1][b]))}}function c(y){const x=new L;for(let _=0;_<r.length;_+=3)x.x=r[_+0],x.y=r[_+1],x.z=r[_+2],x.normalize().multiplyScalar(y),r[_+0]=x.x,r[_+1]=x.y,r[_+2]=x.z}function h(){const y=new L;for(let x=0;x<r.length;x+=3){y.x=r[x+0],y.y=r[x+1],y.z=r[x+2];const _=m(y)/2/Math.PI+.5,E=g(y)/Math.PI+.5;o.push(_,1-E)}p(),u()}function u(){for(let y=0;y<o.length;y+=6){const x=o[y+0],_=o[y+2],E=o[y+4],M=Math.max(x,_,E),S=Math.min(x,_,E);M>.9&&S<.1&&(x<.2&&(o[y+0]+=1),_<.2&&(o[y+2]+=1),E<.2&&(o[y+4]+=1))}}function d(y){r.push(y.x,y.y,y.z)}function f(y,x){const _=y*3;x.x=e[_+0],x.y=e[_+1],x.z=e[_+2]}function p(){const y=new L,x=new L,_=new L,E=new L,M=new xe,S=new xe,T=new xe;for(let w=0,b=0;w<r.length;w+=9,b+=6){y.set(r[w+0],r[w+1],r[w+2]),x.set(r[w+3],r[w+4],r[w+5]),_.set(r[w+6],r[w+7],r[w+8]),M.set(o[b+0],o[b+1]),S.set(o[b+2],o[b+3]),T.set(o[b+4],o[b+5]),E.copy(y).add(x).add(_).divideScalar(3);const D=m(E);v(M,b+0,y,D),v(S,b+2,x,D),v(T,b+4,_,D)}}function v(y,x,_,E){E<0&&y.x===1&&(o[x]=y.x-1),_.x===0&&_.z===0&&(o[x]=E/2/Math.PI+.5)}function m(y){return Math.atan2(y.z,-y.x)}function g(y){return Math.atan2(-y.y,Math.sqrt(y.x*y.x+y.z*y.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new cs(e.vertices,e.indices,e.radius,e.details)}}class tu extends cs{constructor(e=1,t=0){const i=(1+Math.sqrt(5))/2,n=1/i,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-i,0,-n,i,0,n,-i,0,n,i,-n,-i,0,-n,i,0,n,-i,0,n,i,0,-i,0,-n,i,0,-n,-i,0,n,i,0,n],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,o,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new tu(e.radius,e.detail)}}const nc=new L,ic=new L,sd=new L,rc=new bi;class kv extends yt{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const n=Math.pow(10,4),r=Math.cos(Zs*t),o=e.getIndex(),a=e.getAttribute("position"),l=o?o.count:a.count,c=[0,0,0],h=["a","b","c"],u=new Array(3),d={},f=[];for(let p=0;p<l;p+=3){o?(c[0]=o.getX(p),c[1]=o.getX(p+1),c[2]=o.getX(p+2)):(c[0]=p,c[1]=p+1,c[2]=p+2);const{a:v,b:m,c:g}=rc;if(v.fromBufferAttribute(a,c[0]),m.fromBufferAttribute(a,c[1]),g.fromBufferAttribute(a,c[2]),rc.getNormal(sd),u[0]=`${Math.round(v.x*n)},${Math.round(v.y*n)},${Math.round(v.z*n)}`,u[1]=`${Math.round(m.x*n)},${Math.round(m.y*n)},${Math.round(m.z*n)}`,u[2]=`${Math.round(g.x*n)},${Math.round(g.y*n)},${Math.round(g.z*n)}`,!(u[0]===u[1]||u[1]===u[2]||u[2]===u[0]))for(let y=0;y<3;y++){const x=(y+1)%3,_=u[y],E=u[x],M=rc[h[y]],S=rc[h[x]],T=`${_}_${E}`,w=`${E}_${_}`;w in d&&d[w]?(sd.dot(d[w].normal)<=r&&(f.push(M.x,M.y,M.z),f.push(S.x,S.y,S.z)),d[w]=null):T in d||(d[T]={index0:c[y],index1:c[x],normal:sd.clone()})}}for(const p in d)if(d[p]){const{index0:v,index1:m}=d[p];nc.fromBufferAttribute(a,v),ic.fromBufferAttribute(a,m),f.push(nc.x,nc.y,nc.z),f.push(ic.x,ic.y,ic.z)}this.setAttribute("position",new qe(f,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Js extends Ja{constructor(e){super(e),this.uuid=Bi(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let i=0,n=this.holes.length;i<n;i++)t[i]=this.holes[i].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const n=e.holes[t];this.holes.push(n.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,i=this.holes.length;t<i;t++){const n=this.holes[t];e.holes.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const n=e.holes[t];this.holes.push(new Ja().fromJSON(n))}return this}}function Kb(s,e,t=2){const i=e&&e.length,n=i?e[0]*t:s.length;let r=Bv(s,0,n,t,!0);const o=[];if(!r||r.next===r.prev)return o;let a,l,c;if(i&&(r=n1(s,e,r,t)),s.length>80*t){a=1/0,l=1/0;let h=-1/0,u=-1/0;for(let d=t;d<n;d+=t){const f=s[d],p=s[d+1];f<a&&(a=f),p<l&&(l=p),f>h&&(h=f),p>u&&(u=p)}c=Math.max(h-a,u-l),c=c!==0?32767/c:0}return Ka(r,o,t,a,l,c,0),o}function Bv(s,e,t,i,n){let r;if(n===f1(s,e,t,i)>0)for(let o=e;o<t;o+=i)r=wm(o/i|0,s[o],s[o+1],r);else for(let o=t-i;o>=e;o-=i)r=wm(o/i|0,s[o],s[o+1],r);return r&&Yo(r,r.next)&&($a(r),r=r.next),r}function no(s,e){if(!s)return s;e||(e=s);let t=s,i;do if(i=!1,!t.steiner&&(Yo(t,t.next)||un(t.prev,t,t.next)===0)){if($a(t),t=e=t.prev,t===t.next)break;i=!0}else t=t.next;while(i||t!==e);return e}function Ka(s,e,t,i,n,r,o){if(!s)return;!o&&r&&a1(s,i,n,r);let a=s;for(;s.prev!==s.next;){const l=s.prev,c=s.next;if(r?$b(s,i,n,r):Qb(s)){e.push(l.i,s.i,c.i),$a(s),s=c.next,a=c.next;continue}if(s=c,s===a){o?o===1?(s=e1(no(s),e),Ka(s,e,t,i,n,r,2)):o===2&&t1(s,e,t,i,n,r):Ka(no(s),e,t,i,n,r,1);break}}}function Qb(s){const e=s.prev,t=s,i=s.next;if(un(e,t,i)>=0)return!1;const n=e.x,r=t.x,o=i.x,a=e.y,l=t.y,c=i.y,h=Math.min(n,r,o),u=Math.min(a,l,c),d=Math.max(n,r,o),f=Math.max(a,l,c);let p=i.next;for(;p!==e;){if(p.x>=h&&p.x<=d&&p.y>=u&&p.y<=f&&Sa(n,a,r,l,o,c,p.x,p.y)&&un(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function $b(s,e,t,i){const n=s.prev,r=s,o=s.next;if(un(n,r,o)>=0)return!1;const a=n.x,l=r.x,c=o.x,h=n.y,u=r.y,d=o.y,f=Math.min(a,l,c),p=Math.min(h,u,d),v=Math.max(a,l,c),m=Math.max(h,u,d),g=Zd(f,p,e,t,i),y=Zd(v,m,e,t,i);let x=s.prevZ,_=s.nextZ;for(;x&&x.z>=g&&_&&_.z<=y;){if(x.x>=f&&x.x<=v&&x.y>=p&&x.y<=m&&x!==n&&x!==o&&Sa(a,h,l,u,c,d,x.x,x.y)&&un(x.prev,x,x.next)>=0||(x=x.prevZ,_.x>=f&&_.x<=v&&_.y>=p&&_.y<=m&&_!==n&&_!==o&&Sa(a,h,l,u,c,d,_.x,_.y)&&un(_.prev,_,_.next)>=0))return!1;_=_.nextZ}for(;x&&x.z>=g;){if(x.x>=f&&x.x<=v&&x.y>=p&&x.y<=m&&x!==n&&x!==o&&Sa(a,h,l,u,c,d,x.x,x.y)&&un(x.prev,x,x.next)>=0)return!1;x=x.prevZ}for(;_&&_.z<=y;){if(_.x>=f&&_.x<=v&&_.y>=p&&_.y<=m&&_!==n&&_!==o&&Sa(a,h,l,u,c,d,_.x,_.y)&&un(_.prev,_,_.next)>=0)return!1;_=_.nextZ}return!0}function e1(s,e){let t=s;do{const i=t.prev,n=t.next.next;!Yo(i,n)&&Gv(i,t,t.next,n)&&Qa(i,n)&&Qa(n,i)&&(e.push(i.i,t.i,n.i),$a(t),$a(t.next),t=s=n),t=t.next}while(t!==s);return no(t)}function t1(s,e,t,i,n,r){let o=s;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&h1(o,a)){let l=Vv(o,a);o=no(o,o.next),l=no(l,l.next),Ka(o,e,t,i,n,r,0),Ka(l,e,t,i,n,r,0);return}a=a.next}o=o.next}while(o!==s)}function n1(s,e,t,i){const n=[];for(let r=0,o=e.length;r<o;r++){const a=e[r]*i,l=r<o-1?e[r+1]*i:s.length,c=Bv(s,a,l,i,!1);c===c.next&&(c.steiner=!0),n.push(c1(c))}n.sort(i1);for(let r=0;r<n.length;r++)t=r1(n[r],t);return t}function i1(s,e){let t=s.x-e.x;if(t===0&&(t=s.y-e.y,t===0)){const i=(s.next.y-s.y)/(s.next.x-s.x),n=(e.next.y-e.y)/(e.next.x-e.x);t=i-n}return t}function r1(s,e){const t=s1(s,e);if(!t)return e;const i=Vv(t,s);return no(i,i.next),no(t,t.next)}function s1(s,e){let t=e;const i=s.x,n=s.y;let r=-1/0,o;if(Yo(s,t))return t;do{if(Yo(s,t.next))return t.next;if(n<=t.y&&n>=t.next.y&&t.next.y!==t.y){const u=t.x+(n-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(u<=i&&u>r&&(r=u,o=t.x<t.next.x?t:t.next,u===i))return o}t=t.next}while(t!==e);if(!o)return null;const a=o,l=o.x,c=o.y;let h=1/0;t=o;do{if(i>=t.x&&t.x>=l&&i!==t.x&&zv(n<c?i:r,n,l,c,n<c?r:i,n,t.x,t.y)){const u=Math.abs(n-t.y)/(i-t.x);Qa(t,s)&&(u<h||u===h&&(t.x>o.x||t.x===o.x&&o1(o,t)))&&(o=t,h=u)}t=t.next}while(t!==a);return o}function o1(s,e){return un(s.prev,s,e.prev)<0&&un(e.next,s,s.next)<0}function a1(s,e,t,i){let n=s;do n.z===0&&(n.z=Zd(n.x,n.y,e,t,i)),n.prevZ=n.prev,n.nextZ=n.next,n=n.next;while(n!==s);n.prevZ.nextZ=null,n.prevZ=null,l1(n)}function l1(s){let e,t=1;do{let i=s,n;s=null;let r=null;for(e=0;i;){e++;let o=i,a=0;for(let c=0;c<t&&(a++,o=o.nextZ,!!o);c++);let l=t;for(;a>0||l>0&&o;)a!==0&&(l===0||!o||i.z<=o.z)?(n=i,i=i.nextZ,a--):(n=o,o=o.nextZ,l--),r?r.nextZ=n:s=n,n.prevZ=r,r=n;i=o}r.nextZ=null,t*=2}while(e>1);return s}function Zd(s,e,t,i,n){return s=(s-t)*n|0,e=(e-i)*n|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function c1(s){let e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function zv(s,e,t,i,n,r,o,a){return(n-o)*(e-a)>=(s-o)*(r-a)&&(s-o)*(i-a)>=(t-o)*(e-a)&&(t-o)*(r-a)>=(n-o)*(i-a)}function Sa(s,e,t,i,n,r,o,a){return!(s===o&&e===a)&&zv(s,e,t,i,n,r,o,a)}function h1(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!u1(s,e)&&(Qa(s,e)&&Qa(e,s)&&d1(s,e)&&(un(s.prev,s,e.prev)||un(s,e.prev,e))||Yo(s,e)&&un(s.prev,s,s.next)>0&&un(e.prev,e,e.next)>0)}function un(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function Yo(s,e){return s.x===e.x&&s.y===e.y}function Gv(s,e,t,i){const n=oc(un(s,e,t)),r=oc(un(s,e,i)),o=oc(un(t,i,s)),a=oc(un(t,i,e));return!!(n!==r&&o!==a||n===0&&sc(s,t,e)||r===0&&sc(s,i,e)||o===0&&sc(t,s,i)||a===0&&sc(t,e,i))}function sc(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function oc(s){return s>0?1:s<0?-1:0}function u1(s,e){let t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&Gv(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function Qa(s,e){return un(s.prev,s,s.next)<0?un(s,e,s.next)>=0&&un(s,s.prev,e)>=0:un(s,e,s.prev)<0||un(s,s.next,e)<0}function d1(s,e){let t=s,i=!1;const n=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&n<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(i=!i),t=t.next;while(t!==s);return i}function Vv(s,e){const t=Jd(s.i,s.x,s.y),i=Jd(e.i,e.x,e.y),n=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=n,n.prev=t,i.next=t,t.prev=i,r.next=i,i.prev=r,i}function wm(s,e,t,i){const n=Jd(s,e,t);return i?(n.next=i.next,n.prev=i,i.next.prev=n,i.next=n):(n.prev=n,n.next=n),n}function $a(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function Jd(s,e,t){return{i:s,x:e,y:t,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function f1(s,e,t,i){let n=0;for(let r=e,o=t-i;r<t;r+=i)n+=(s[o]-s[r])*(s[r+1]+s[o+1]),o=r;return n}class p1{static triangulate(e,t,i=2){return Kb(e,t,i)}}class gr{static area(e){const t=e.length;let i=0;for(let n=t-1,r=0;r<t;n=r++)i+=e[n].x*e[r].y-e[r].x*e[n].y;return i*.5}static isClockWise(e){return gr.area(e)<0}static triangulateShape(e,t){const i=[],n=[],r=[];Em(e),Tm(i,e);let o=e.length;t.forEach(Em);for(let l=0;l<t.length;l++)n.push(o),o+=t[l].length,Tm(i,t[l]);const a=p1.triangulate(i,n);for(let l=0;l<a.length;l+=3)r.push(a.slice(l,l+3));return r}}function Em(s){const e=s.length;e>2&&s[e-1].equals(s[0])&&s.pop()}function Tm(s,e){for(let t=0;t<e.length;t++)s.push(e[t].x),s.push(e[t].y)}class nu extends yt{constructor(e=new Js([new xe(.5,.5),new xe(-.5,.5),new xe(-.5,-.5),new xe(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const i=this,n=[],r=[];for(let a=0,l=e.length;a<l;a++){const c=e[a];o(c)}this.setAttribute("position",new qe(n,3)),this.setAttribute("uv",new qe(r,2)),this.computeVertexNormals();function o(a){const l=[],c=t.curveSegments!==void 0?t.curveSegments:12,h=t.steps!==void 0?t.steps:1,u=t.depth!==void 0?t.depth:1;let d=t.bevelEnabled!==void 0?t.bevelEnabled:!0,f=t.bevelThickness!==void 0?t.bevelThickness:.2,p=t.bevelSize!==void 0?t.bevelSize:f-.1,v=t.bevelOffset!==void 0?t.bevelOffset:0,m=t.bevelSegments!==void 0?t.bevelSegments:3;const g=t.extrudePath,y=t.UVGenerator!==void 0?t.UVGenerator:m1;let x,_=!1,E,M,S,T;g&&(x=g.getSpacedPoints(h),_=!0,d=!1,E=g.computeFrenetFrames(h,!1),M=new L,S=new L,T=new L),d||(m=0,f=0,p=0,v=0);const w=a.extractPoints(c);let b=w.shape;const D=w.holes;if(!gr.isClockWise(b)){b=b.reverse();for(let he=0,ue=D.length;he<ue;he++){const ie=D[he];gr.isClockWise(ie)&&(D[he]=ie.reverse())}}function F(he){const ie=10000000000000001e-36;let Me=he[0];for(let le=1;le<=he.length;le++){const P=le%he.length,A=he[P],Q=A.x-Me.x,ae=A.y-Me.y,se=Q*Q+ae*ae,de=Math.max(Math.abs(A.x),Math.abs(A.y),Math.abs(Me.x),Math.abs(Me.y)),Ee=ie*de*de;if(se<=Ee){he.splice(P,1),le--;continue}Me=A}}F(b),D.forEach(F);const V=D.length,J=b;for(let he=0;he<V;he++){const ue=D[he];b=b.concat(ue)}function O(he,ue,ie){return ue||console.error("THREE.ExtrudeGeometry: vec does not exist"),he.clone().addScaledVector(ue,ie)}const ee=b.length;function Y(he,ue,ie){let Me,le,P;const A=he.x-ue.x,Q=he.y-ue.y,ae=ie.x-he.x,se=ie.y-he.y,de=A*A+Q*Q,Ee=A*se-Q*ae;if(Math.abs(Ee)>Number.EPSILON){const be=Math.sqrt(de),Ae=Math.sqrt(ae*ae+se*se),Ze=ue.x-Q/be,Re=ue.y+A/be,Be=ie.x-se/Ae,Ge=ie.y+ae/Ae,Ve=((Be-Ze)*se-(Ge-Re)*ae)/(A*se-Q*ae);Me=Ze+A*Ve-he.x,le=Re+Q*Ve-he.y;const Te=Me*Me+le*le;if(Te<=2)return new xe(Me,le);P=Math.sqrt(Te/2)}else{let be=!1;A>Number.EPSILON?ae>Number.EPSILON&&(be=!0):A<-Number.EPSILON?ae<-Number.EPSILON&&(be=!0):Math.sign(Q)===Math.sign(se)&&(be=!0),be?(Me=-Q,le=A,P=Math.sqrt(de)):(Me=A,le=Q,P=Math.sqrt(de/2))}return new xe(Me/P,le/P)}const j=[];for(let he=0,ue=J.length,ie=ue-1,Me=he+1;he<ue;he++,ie++,Me++)ie===ue&&(ie=0),Me===ue&&(Me=0),j[he]=Y(J[he],J[ie],J[Me]);const $=[];let U,Z=j.concat();for(let he=0,ue=V;he<ue;he++){const ie=D[he];U=[];for(let Me=0,le=ie.length,P=le-1,A=Me+1;Me<le;Me++,P++,A++)P===le&&(P=0),A===le&&(A=0),U[Me]=Y(ie[Me],ie[P],ie[A]);$.push(U),Z=Z.concat(U)}const K=[],k=[];for(let he=0;he<m;he++){const ue=he/m,ie=f*Math.cos(ue*Math.PI/2),Me=p*Math.sin(ue*Math.PI/2)+v;for(let le=0,P=J.length;le<P;le++){const A=O(J[le],j[le],Me);Se(A.x,A.y,-ie),ue==0&&K.push(A)}for(let le=0,P=V;le<P;le++){const A=D[le];U=$[le];const Q=[];for(let ae=0,se=A.length;ae<se;ae++){const de=O(A[ae],U[ae],Me);Se(de.x,de.y,-ie),ue==0&&Q.push(de)}ue==0&&k.push(Q)}}const H=gr.triangulateShape(K,k),q=H.length,W=p+v;for(let he=0;he<ee;he++){const ue=d?O(b[he],Z[he],W):b[he];_?(S.copy(E.normals[0]).multiplyScalar(ue.x),M.copy(E.binormals[0]).multiplyScalar(ue.y),T.copy(x[0]).add(S).add(M),Se(T.x,T.y,T.z)):Se(ue.x,ue.y,0)}for(let he=1;he<=h;he++)for(let ue=0;ue<ee;ue++){const ie=d?O(b[ue],Z[ue],W):b[ue];_?(S.copy(E.normals[he]).multiplyScalar(ie.x),M.copy(E.binormals[he]).multiplyScalar(ie.y),T.copy(x[he]).add(S).add(M),Se(T.x,T.y,T.z)):Se(ie.x,ie.y,u/h*he)}for(let he=m-1;he>=0;he--){const ue=he/m,ie=f*Math.cos(ue*Math.PI/2),Me=p*Math.sin(ue*Math.PI/2)+v;for(let le=0,P=J.length;le<P;le++){const A=O(J[le],j[le],Me);Se(A.x,A.y,u+ie)}for(let le=0,P=D.length;le<P;le++){const A=D[le];U=$[le];for(let Q=0,ae=A.length;Q<ae;Q++){const se=O(A[Q],U[Q],Me);_?Se(se.x,se.y+x[h-1].y,x[h-1].x+ie):Se(se.x,se.y,u+ie)}}}ne(),ge();function ne(){const he=n.length/3;if(d){let ue=0,ie=ee*ue;for(let Me=0;Me<q;Me++){const le=H[Me];pe(le[2]+ie,le[1]+ie,le[0]+ie)}ue=h+m*2,ie=ee*ue;for(let Me=0;Me<q;Me++){const le=H[Me];pe(le[0]+ie,le[1]+ie,le[2]+ie)}}else{for(let ue=0;ue<q;ue++){const ie=H[ue];pe(ie[2],ie[1],ie[0])}for(let ue=0;ue<q;ue++){const ie=H[ue];pe(ie[0]+ee*h,ie[1]+ee*h,ie[2]+ee*h)}}i.addGroup(he,n.length/3-he,0)}function ge(){const he=n.length/3;let ue=0;ye(J,ue),ue+=J.length;for(let ie=0,Me=D.length;ie<Me;ie++){const le=D[ie];ye(le,ue),ue+=le.length}i.addGroup(he,n.length/3-he,1)}function ye(he,ue){let ie=he.length;for(;--ie>=0;){const Me=ie;let le=ie-1;le<0&&(le=he.length-1);for(let P=0,A=h+m*2;P<A;P++){const Q=ee*P,ae=ee*(P+1),se=ue+Me+Q,de=ue+le+Q,Ee=ue+le+ae,be=ue+Me+ae;Ie(se,de,Ee,be)}}}function Se(he,ue,ie){l.push(he),l.push(ue),l.push(ie)}function pe(he,ue,ie){X(he),X(ue),X(ie);const Me=n.length/3,le=y.generateTopUV(i,n,Me-3,Me-2,Me-1);Oe(le[0]),Oe(le[1]),Oe(le[2])}function Ie(he,ue,ie,Me){X(he),X(ue),X(Me),X(ue),X(ie),X(Me);const le=n.length/3,P=y.generateSideWallUV(i,n,le-6,le-3,le-2,le-1);Oe(P[0]),Oe(P[1]),Oe(P[3]),Oe(P[1]),Oe(P[2]),Oe(P[3])}function X(he){n.push(l[he*3+0]),n.push(l[he*3+1]),n.push(l[he*3+2])}function Oe(he){r.push(he.x),r.push(he.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,i=this.parameters.options;return g1(t,i,e)}static fromJSON(e,t){const i=[];for(let r=0,o=e.shapes.length;r<o;r++){const a=t[e.shapes[r]];i.push(a)}const n=e.options.extrudePath;return n!==void 0&&(e.options.extrudePath=new Ch[n.type]().fromJSON(n)),new nu(i,e.options)}}const m1={generateTopUV:function(s,e,t,i,n){const r=e[t*3],o=e[t*3+1],a=e[i*3],l=e[i*3+1],c=e[n*3],h=e[n*3+1];return[new xe(r,o),new xe(a,l),new xe(c,h)]},generateSideWallUV:function(s,e,t,i,n,r){const o=e[t*3],a=e[t*3+1],l=e[t*3+2],c=e[i*3],h=e[i*3+1],u=e[i*3+2],d=e[n*3],f=e[n*3+1],p=e[n*3+2],v=e[r*3],m=e[r*3+1],g=e[r*3+2];return Math.abs(a-h)<Math.abs(o-c)?[new xe(o,1-l),new xe(c,1-u),new xe(d,1-p),new xe(v,1-g)]:[new xe(a,1-l),new xe(h,1-u),new xe(f,1-p),new xe(m,1-g)]}};function g1(s,e,t){if(t.shapes=[],Array.isArray(s))for(let i=0,n=s.length;i<n;i++){const r=s[i];t.shapes.push(r.uuid)}else t.shapes.push(s.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class iu extends cs{constructor(e=1,t=0){const i=(1+Math.sqrt(5))/2,n=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(n,r,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new iu(e.radius,e.detail)}}class Ur extends cs{constructor(e=1,t=0){const i=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],n=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(i,n,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ur(e.radius,e.detail)}}class or extends yt{constructor(e=1,t=1,i=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:n};const r=e/2,o=t/2,a=Math.floor(i),l=Math.floor(n),c=a+1,h=l+1,u=e/a,d=t/l,f=[],p=[],v=[],m=[];for(let g=0;g<h;g++){const y=g*d-o;for(let x=0;x<c;x++){const _=x*u-r;p.push(_,-y,0),v.push(0,0,1),m.push(x/a),m.push(1-g/l)}}for(let g=0;g<l;g++)for(let y=0;y<a;y++){const x=y+c*g,_=y+c*(g+1),E=y+1+c*(g+1),M=y+1+c*g;f.push(x,_,M),f.push(_,E,M)}this.setIndex(f),this.setAttribute("position",new qe(p,3)),this.setAttribute("normal",new qe(v,3)),this.setAttribute("uv",new qe(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new or(e.width,e.height,e.widthSegments,e.heightSegments)}}class ru extends yt{constructor(e=.5,t=1,i=32,n=1,r=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:n,thetaStart:r,thetaLength:o},i=Math.max(3,i),n=Math.max(1,n);const a=[],l=[],c=[],h=[];let u=e;const d=(t-e)/n,f=new L,p=new xe;for(let v=0;v<=n;v++){for(let m=0;m<=i;m++){const g=r+m/i*o;f.x=u*Math.cos(g),f.y=u*Math.sin(g),l.push(f.x,f.y,f.z),c.push(0,0,1),p.x=(f.x/t+1)/2,p.y=(f.y/t+1)/2,h.push(p.x,p.y)}u+=d}for(let v=0;v<n;v++){const m=v*(i+1);for(let g=0;g<i;g++){const y=g+m,x=y,_=y+i+1,E=y+i+2,M=y+1;a.push(x,_,M),a.push(_,E,M)}}this.setIndex(a),this.setAttribute("position",new qe(l,3)),this.setAttribute("normal",new qe(c,3)),this.setAttribute("uv",new qe(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ru(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class su extends yt{constructor(e=new Js([new xe(0,.5),new xe(-.5,-.5),new xe(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const i=[],n=[],r=[],o=[];let a=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let h=0;h<e.length;h++)c(e[h]),this.addGroup(a,l,h),a+=l,l=0;this.setIndex(i),this.setAttribute("position",new qe(n,3)),this.setAttribute("normal",new qe(r,3)),this.setAttribute("uv",new qe(o,2));function c(h){const u=n.length/3,d=h.extractPoints(t);let f=d.shape;const p=d.holes;gr.isClockWise(f)===!1&&(f=f.reverse());for(let m=0,g=p.length;m<g;m++){const y=p[m];gr.isClockWise(y)===!0&&(p[m]=y.reverse())}const v=gr.triangulateShape(f,p);for(let m=0,g=p.length;m<g;m++){const y=p[m];f=f.concat(y)}for(let m=0,g=f.length;m<g;m++){const y=f[m];n.push(y.x,y.y,0),r.push(0,0,1),o.push(y.x,y.y)}for(let m=0,g=v.length;m<g;m++){const y=v[m],x=y[0]+u,_=y[1]+u,E=y[2]+u;i.push(x,_,E),l+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return v1(t,e)}static fromJSON(e,t){const i=[];for(let n=0,r=e.shapes.length;n<r;n++){const o=t[e.shapes[n]];i.push(o)}return new su(i,e.curveSegments)}}function v1(s,e){if(e.shapes=[],Array.isArray(s))for(let t=0,i=s.length;t<i;t++){const n=s[t];e.shapes.push(n.uuid)}else e.shapes.push(s.uuid);return e}class ao extends yt{constructor(e=1,t=32,i=16,n=0,r=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:n,phiLength:r,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));const l=Math.min(o+a,Math.PI);let c=0;const h=[],u=new L,d=new L,f=[],p=[],v=[],m=[];for(let g=0;g<=i;g++){const y=[],x=g/i;let _=0;g===0&&o===0?_=.5/t:g===i&&l===Math.PI&&(_=-.5/t);for(let E=0;E<=t;E++){const M=E/t;u.x=-e*Math.cos(n+M*r)*Math.sin(o+x*a),u.y=e*Math.cos(o+x*a),u.z=e*Math.sin(n+M*r)*Math.sin(o+x*a),p.push(u.x,u.y,u.z),d.copy(u).normalize(),v.push(d.x,d.y,d.z),m.push(M+_,1-x),y.push(c++)}h.push(y)}for(let g=0;g<i;g++)for(let y=0;y<t;y++){const x=h[g][y+1],_=h[g][y],E=h[g+1][y],M=h[g+1][y+1];(g!==0||o>0)&&f.push(x,_,M),(g!==i-1||l<Math.PI)&&f.push(_,E,M)}this.setIndex(f),this.setAttribute("position",new qe(p,3)),this.setAttribute("normal",new qe(v,3)),this.setAttribute("uv",new qe(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ao(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class ou extends cs{constructor(e=1,t=0){const i=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],n=[2,1,0,0,3,2,1,3,0,2,3,1];super(i,n,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new ou(e.radius,e.detail)}}class Ir extends yt{constructor(e=1,t=.4,i=12,n=48,r=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:n,arc:r},i=Math.floor(i),n=Math.floor(n);const o=[],a=[],l=[],c=[],h=new L,u=new L,d=new L;for(let f=0;f<=i;f++)for(let p=0;p<=n;p++){const v=p/n*r,m=f/i*Math.PI*2;u.x=(e+t*Math.cos(m))*Math.cos(v),u.y=(e+t*Math.cos(m))*Math.sin(v),u.z=t*Math.sin(m),a.push(u.x,u.y,u.z),h.x=e*Math.cos(v),h.y=e*Math.sin(v),d.subVectors(u,h).normalize(),l.push(d.x,d.y,d.z),c.push(p/n),c.push(f/i)}for(let f=1;f<=i;f++)for(let p=1;p<=n;p++){const v=(n+1)*f+p-1,m=(n+1)*(f-1)+p-1,g=(n+1)*(f-1)+p,y=(n+1)*f+p;o.push(v,m,y),o.push(m,g,y)}this.setIndex(o),this.setAttribute("position",new qe(a,3)),this.setAttribute("normal",new qe(l,3)),this.setAttribute("uv",new qe(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ir(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class au extends yt{constructor(e=1,t=.4,i=64,n=8,r=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:n,p:r,q:o},i=Math.floor(i),n=Math.floor(n);const a=[],l=[],c=[],h=[],u=new L,d=new L,f=new L,p=new L,v=new L,m=new L,g=new L;for(let x=0;x<=i;++x){const _=x/i*r*Math.PI*2;y(_,r,o,e,f),y(_+.01,r,o,e,p),m.subVectors(p,f),g.addVectors(p,f),v.crossVectors(m,g),g.crossVectors(v,m),v.normalize(),g.normalize();for(let E=0;E<=n;++E){const M=E/n*Math.PI*2,S=-t*Math.cos(M),T=t*Math.sin(M);u.x=f.x+(S*g.x+T*v.x),u.y=f.y+(S*g.y+T*v.y),u.z=f.z+(S*g.z+T*v.z),l.push(u.x,u.y,u.z),d.subVectors(u,f).normalize(),c.push(d.x,d.y,d.z),h.push(x/i),h.push(E/n)}}for(let x=1;x<=i;x++)for(let _=1;_<=n;_++){const E=(n+1)*(x-1)+(_-1),M=(n+1)*x+(_-1),S=(n+1)*x+_,T=(n+1)*(x-1)+_;a.push(E,M,T),a.push(M,S,T)}this.setIndex(a),this.setAttribute("position",new qe(l,3)),this.setAttribute("normal",new qe(c,3)),this.setAttribute("uv",new qe(h,2));function y(x,_,E,M,S){const T=Math.cos(x),w=Math.sin(x),b=E/_*x,D=Math.cos(b);S.x=M*(2+D)*.5*T,S.y=M*(2+D)*w*.5,S.z=M*Math.sin(b)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new au(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class lu extends yt{constructor(e=new Wf(new L(-1,-1,0),new L(-1,1,0),new L(1,1,0)),t=64,i=1,n=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:n,closed:r};const o=e.computeFrenetFrames(t,r);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new L,l=new L,c=new xe;let h=new L;const u=[],d=[],f=[],p=[];v(),this.setIndex(p),this.setAttribute("position",new qe(u,3)),this.setAttribute("normal",new qe(d,3)),this.setAttribute("uv",new qe(f,2));function v(){for(let x=0;x<t;x++)m(x);m(r===!1?t:0),y(),g()}function m(x){h=e.getPointAt(x/t,h);const _=o.normals[x],E=o.binormals[x];for(let M=0;M<=n;M++){const S=M/n*Math.PI*2,T=Math.sin(S),w=-Math.cos(S);l.x=w*_.x+T*E.x,l.y=w*_.y+T*E.y,l.z=w*_.z+T*E.z,l.normalize(),d.push(l.x,l.y,l.z),a.x=h.x+i*l.x,a.y=h.y+i*l.y,a.z=h.z+i*l.z,u.push(a.x,a.y,a.z)}}function g(){for(let x=1;x<=t;x++)for(let _=1;_<=n;_++){const E=(n+1)*(x-1)+(_-1),M=(n+1)*x+(_-1),S=(n+1)*x+_,T=(n+1)*(x-1)+_;p.push(E,M,T),p.push(M,S,T)}}function y(){for(let x=0;x<=t;x++)for(let _=0;_<=n;_++)c.x=x/t,c.y=_/n,f.push(c.x,c.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new lu(new Ch[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Yf extends yt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],i=new Set,n=new L,r=new L;if(e.index!==null){const o=e.attributes.position,a=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:a.count,materialIndex:0}]);for(let c=0,h=l.length;c<h;++c){const u=l[c],d=u.start,f=u.count;for(let p=d,v=d+f;p<v;p+=3)for(let m=0;m<3;m++){const g=a.getX(p+m),y=a.getX(p+(m+1)%3);n.fromBufferAttribute(o,g),r.fromBufferAttribute(o,y),Am(n,r,i)===!0&&(t.push(n.x,n.y,n.z),t.push(r.x,r.y,r.z))}}}else{const o=e.attributes.position;for(let a=0,l=o.count/3;a<l;a++)for(let c=0;c<3;c++){const h=3*a+c,u=3*a+(c+1)%3;n.fromBufferAttribute(o,h),r.fromBufferAttribute(o,u),Am(n,r,i)===!0&&(t.push(n.x,n.y,n.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new qe(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function Am(s,e,t){const i=`${s.x},${s.y},${s.z}-${e.x},${e.y},${e.z}`,n=`${e.x},${e.y},${e.z}-${s.x},${s.y},${s.z}`;return t.has(i)===!0||t.has(n)===!0?!1:(t.add(i),t.add(n),!0)}var Cm=Object.freeze({__proto__:null,BoxGeometry:vn,CapsuleGeometry:Qh,CircleGeometry:$h,ConeGeometry:eu,CylinderGeometry:An,DodecahedronGeometry:tu,EdgesGeometry:kv,ExtrudeGeometry:nu,IcosahedronGeometry:iu,LatheGeometry:xl,OctahedronGeometry:Ur,PlaneGeometry:or,PolyhedronGeometry:cs,RingGeometry:ru,ShapeGeometry:su,SphereGeometry:ao,TetrahedronGeometry:ou,TorusGeometry:Ir,TorusKnotGeometry:au,TubeGeometry:lu,WireframeGeometry:Yf});class Hv extends kn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new ze(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class Wv extends Ti{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class jf extends kn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new ze(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ze(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=as,this.normalScale=new xe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ei,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Xv extends jf{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new xe(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Tt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new ze(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new ze(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new ze(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class el extends kn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new ze(16777215),this.specular=new ze(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ze(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=as,this.normalScale=new xe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ei,this.combine=ul,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Yv extends kn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new ze(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ze(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=as,this.normalScale=new xe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class jv extends kn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=as,this.normalScale=new xe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class qf extends kn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new ze(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ze(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=as,this.normalScale=new xe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ei,this.combine=ul,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class bl extends kn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=hv,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class cu extends kn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class qv extends kn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new ze(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=as,this.normalScale=new xe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Zv extends wn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function Ys(s,e){return!s||s.constructor===e?s:typeof e.BYTES_PER_ELEMENT=="number"?new e(s):Array.prototype.slice.call(s)}function Jv(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}function Kv(s){function e(n,r){return s[n]-s[r]}const t=s.length,i=new Array(t);for(let n=0;n!==t;++n)i[n]=n;return i.sort(e),i}function Kd(s,e,t){const i=s.length,n=new s.constructor(i);for(let r=0,o=0;o!==i;++r){const a=t[r]*e;for(let l=0;l!==e;++l)n[o++]=s[a+l]}return n}function Zf(s,e,t,i){let n=1,r=s[0];for(;r!==void 0&&r[i]===void 0;)r=s[n++];if(r===void 0)return;let o=r[i];if(o!==void 0)if(Array.isArray(o))do o=r[i],o!==void 0&&(e.push(r.time),t.push(...o)),r=s[n++];while(r!==void 0);else if(o.toArray!==void 0)do o=r[i],o!==void 0&&(e.push(r.time),o.toArray(t,t.length)),r=s[n++];while(r!==void 0);else do o=r[i],o!==void 0&&(e.push(r.time),t.push(o)),r=s[n++];while(r!==void 0)}function _1(s,e,t,i,n=30){const r=s.clone();r.name=e;const o=[];for(let l=0;l<r.tracks.length;++l){const c=r.tracks[l],h=c.getValueSize(),u=[],d=[];for(let f=0;f<c.times.length;++f){const p=c.times[f]*n;if(!(p<t||p>=i)){u.push(c.times[f]);for(let v=0;v<h;++v)d.push(c.values[f*h+v])}}u.length!==0&&(c.times=Ys(u,c.times.constructor),c.values=Ys(d,c.values.constructor),o.push(c))}r.tracks=o;let a=1/0;for(let l=0;l<r.tracks.length;++l)a>r.tracks[l].times[0]&&(a=r.tracks[l].times[0]);for(let l=0;l<r.tracks.length;++l)r.tracks[l].shift(-1*a);return r.resetDuration(),r}function y1(s,e=0,t=s,i=30){i<=0&&(i=30);const n=t.tracks.length,r=e/i;for(let o=0;o<n;++o){const a=t.tracks[o],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const c=s.tracks.find(function(g){return g.name===a.name&&g.ValueTypeName===l});if(c===void 0)continue;let h=0;const u=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=u/3);let d=0;const f=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=f/3);const p=a.times.length-1;let v;if(r<=a.times[0]){const g=h,y=u-h;v=a.values.slice(g,y)}else if(r>=a.times[p]){const g=p*u+h,y=g+u-h;v=a.values.slice(g,y)}else{const g=a.createInterpolant(),y=h,x=u-h;g.evaluate(r),v=g.resultBuffer.slice(y,x)}l==="quaternion"&&new Ht().fromArray(v).normalize().conjugate().toArray(v);const m=c.times.length;for(let g=0;g<m;++g){const y=g*f+d;if(l==="quaternion")Ht.multiplyQuaternionsFlat(c.values,y,v,0,c.values,y);else{const x=f-d*2;for(let _=0;_<x;++_)c.values[y+_]-=v[_]}}}return s.blendMode=Df,s}class x1{static convertArray(e,t){return Ys(e,t)}static isTypedArray(e){return Jv(e)}static getKeyframeOrder(e){return Kv(e)}static sortedArray(e,t,i){return Kd(e,t,i)}static flattenJSON(e,t,i,n){Zf(e,t,i,n)}static subclip(e,t,i,n,r=30){return _1(e,t,i,n,r)}static makeClipAdditive(e,t=0,i=e,n=30){return y1(e,t,i,n)}}class Sl{constructor(e,t,i,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=n!==void 0?n:new t.constructor(i),this.sampleValues=t,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let i=this._cachedIndex,n=t[i],r=t[i-1];e:{t:{let o;n:{i:if(!(e<n)){for(let a=i+2;;){if(n===void 0){if(e<r)break i;return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===a)break;if(r=n,n=t[++i],e<n)break t}o=t.length;break n}if(!(e>=r)){const a=t[1];e<a&&(i=2,r=a);for(let l=i-2;;){if(r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===l)break;if(n=r,r=t[--i-1],e>=r)break t}o=i,i=0;break n}break e}for(;i<o;){const a=i+o>>>1;e<t[a]?o=a:i=a+1}if(n=t[i],r=t[i-1],r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===void 0)return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,r,n)}return this.interpolate_(i,r,e,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,i=this.sampleValues,n=this.valueSize,r=e*n;for(let o=0;o!==n;++o)t[o]=i[r+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Qv extends Sl{constructor(e,t,i,n){super(e,t,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Hs,endingEnd:Hs}}intervalChanged_(e,t,i){const n=this.parameterPositions;let r=e-2,o=e+1,a=n[r],l=n[o];if(a===void 0)switch(this.getSettings_().endingStart){case Ws:r=e,a=2*t-i;break;case Xa:r=n.length-2,a=t+n[r]-n[r+1];break;default:r=e,a=i}if(l===void 0)switch(this.getSettings_().endingEnd){case Ws:o=e,l=2*i-t;break;case Xa:o=1,l=i+n[1]-n[0];break;default:o=e-1,l=t}const c=(i-t)*.5,h=this.valueSize;this._weightPrev=c/(t-a),this._weightNext=c/(l-i),this._offsetPrev=r*h,this._offsetNext=o*h}interpolate_(e,t,i,n){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,h=this._offsetPrev,u=this._offsetNext,d=this._weightPrev,f=this._weightNext,p=(i-t)/(n-t),v=p*p,m=v*p,g=-d*m+2*d*v-d*p,y=(1+d)*m+(-1.5-2*d)*v+(-.5+d)*p+1,x=(-1-f)*m+(1.5+f)*v+.5*p,_=f*m-f*v;for(let E=0;E!==a;++E)r[E]=g*o[h+E]+y*o[c+E]+x*o[l+E]+_*o[u+E];return r}}class Jf extends Sl{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,h=(i-t)/(n-t),u=1-h;for(let d=0;d!==a;++d)r[d]=o[c+d]*u+o[l+d]*h;return r}}class $v extends Sl{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e){return this.copySampleValue_(e-1)}}class Zi{constructor(e,t,i,n){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Ys(t,this.TimeBufferType),this.values=Ys(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let i;if(t.toJSON!==this.toJSON)i=t.toJSON(e);else{i={name:e.name,times:Ys(e.times,Array),values:Ys(e.values,Array)};const n=e.getInterpolation();n!==e.DefaultInterpolation&&(i.interpolation=n)}return i.type=e.ValueTypeName,i}InterpolantFactoryMethodDiscrete(e){return new $v(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Jf(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Qv(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Wa:t=this.InterpolantFactoryMethodDiscrete;break;case Eh:t=this.InterpolantFactoryMethodLinear;break;case Lc:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(i);return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Wa;case this.InterpolantFactoryMethodLinear:return Eh;case this.InterpolantFactoryMethodSmooth:return Lc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]*=e}return this}trim(e,t){const i=this.times,n=i.length;let r=0,o=n-1;for(;r!==n&&i[r]<e;)++r;for(;o!==-1&&i[o]>t;)--o;if(++o,r!==0||o!==n){r>=o&&(o=Math.max(o,1),r=o-1);const a=this.getValueSize();this.times=i.slice(r,o),this.values=this.values.slice(r*a,o*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const i=this.times,n=this.values,r=i.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let a=0;a!==r;a++){const l=i[a];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),e=!1;break}if(o!==null&&o>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,o),e=!1;break}o=l}if(n!==void 0&&Jv(n))for(let a=0,l=n.length;a!==l;++a){const c=n[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),i=this.getValueSize(),n=this.getInterpolation()===Lc,r=e.length-1;let o=1;for(let a=1;a<r;++a){let l=!1;const c=e[a],h=e[a+1];if(c!==h&&(a!==1||c!==e[0]))if(n)l=!0;else{const u=a*i,d=u-i,f=u+i;for(let p=0;p!==i;++p){const v=t[u+p];if(v!==t[d+p]||v!==t[f+p]){l=!0;break}}}if(l){if(a!==o){e[o]=e[a];const u=a*i,d=o*i;for(let f=0;f!==i;++f)t[d+f]=t[u+f]}++o}}if(r>0){e[o]=e[r];for(let a=r*i,l=o*i,c=0;c!==i;++c)t[l+c]=t[a+c];++o}return o!==e.length?(this.times=e.slice(0,o),this.values=t.slice(0,o*i)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),i=this.constructor,n=new i(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}Zi.prototype.ValueTypeName="";Zi.prototype.TimeBufferType=Float32Array;Zi.prototype.ValueBufferType=Float32Array;Zi.prototype.DefaultInterpolation=Eh;class lo extends Zi{constructor(e,t,i){super(e,t,i)}}lo.prototype.ValueTypeName="bool";lo.prototype.ValueBufferType=Array;lo.prototype.DefaultInterpolation=Wa;lo.prototype.InterpolantFactoryMethodLinear=void 0;lo.prototype.InterpolantFactoryMethodSmooth=void 0;class Kf extends Zi{constructor(e,t,i,n){super(e,t,i,n)}}Kf.prototype.ValueTypeName="color";class tl extends Zi{constructor(e,t,i,n){super(e,t,i,n)}}tl.prototype.ValueTypeName="number";class e_ extends Sl{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=(i-t)/(n-t);let c=e*a;for(let h=c+a;c!==h;c+=4)Ht.slerpFlat(r,0,o,c-a,o,c,l);return r}}class Jo extends Zi{constructor(e,t,i,n){super(e,t,i,n)}InterpolantFactoryMethodLinear(e){return new e_(this.times,this.values,this.getValueSize(),e)}}Jo.prototype.ValueTypeName="quaternion";Jo.prototype.InterpolantFactoryMethodSmooth=void 0;class co extends Zi{constructor(e,t,i){super(e,t,i)}}co.prototype.ValueTypeName="string";co.prototype.ValueBufferType=Array;co.prototype.DefaultInterpolation=Wa;co.prototype.InterpolantFactoryMethodLinear=void 0;co.prototype.InterpolantFactoryMethodSmooth=void 0;class io extends Zi{constructor(e,t,i,n){super(e,t,i,n)}}io.prototype.ValueTypeName="vector";class ro{constructor(e="",t=-1,i=[],n=Gh){this.name=e,this.tracks=i,this.duration=t,this.blendMode=n,this.uuid=Bi(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],i=e.tracks,n=1/(e.fps||1);for(let o=0,a=i.length;o!==a;++o)t.push(S1(i[o]).scale(n));const r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r}static toJSON(e){const t=[],i=e.tracks,n={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,o=i.length;r!==o;++r)t.push(Zi.toJSON(i[r]));return n}static CreateFromMorphTargetSequence(e,t,i,n){const r=t.length,o=[];for(let a=0;a<r;a++){let l=[],c=[];l.push((a+r-1)%r,a,(a+1)%r),c.push(0,1,0);const h=Kv(l);l=Kd(l,1,h),c=Kd(c,1,h),!n&&l[0]===0&&(l.push(r),c.push(c[0])),o.push(new tl(".morphTargetInfluences["+t[a].name+"]",l,c).scale(1/i))}return new this(e,-1,o)}static findByName(e,t){let i=e;if(!Array.isArray(e)){const n=e;i=n.geometry&&n.geometry.animations||n.animations}for(let n=0;n<i.length;n++)if(i[n].name===t)return i[n];return null}static CreateClipsFromMorphTargetSequences(e,t,i){const n={},r=/^([\w-]*?)([\d]+)$/;for(let a=0,l=e.length;a<l;a++){const c=e[a],h=c.name.match(r);if(h&&h.length>1){const u=h[1];let d=n[u];d||(n[u]=d=[]),d.push(c)}}const o=[];for(const a in n)o.push(this.CreateFromMorphTargetSequence(a,n[a],t,i));return o}static parseAnimation(e,t){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const i=function(u,d,f,p,v){if(f.length!==0){const m=[],g=[];Zf(f,m,g,p),m.length!==0&&v.push(new u(d,m,g))}},n=[],r=e.name||"default",o=e.fps||30,a=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let u=0;u<c.length;u++){const d=c[u].keys;if(!(!d||d.length===0))if(d[0].morphTargets){const f={};let p;for(p=0;p<d.length;p++)if(d[p].morphTargets)for(let v=0;v<d[p].morphTargets.length;v++)f[d[p].morphTargets[v]]=-1;for(const v in f){const m=[],g=[];for(let y=0;y!==d[p].morphTargets.length;++y){const x=d[p];m.push(x.time),g.push(x.morphTarget===v?1:0)}n.push(new tl(".morphTargetInfluence["+v+"]",m,g))}l=f.length*o}else{const f=".bones["+t[u].name+"]";i(io,f+".position",d,"pos",n),i(Jo,f+".quaternion",d,"rot",n),i(io,f+".scale",d,"scl",n)}}return n.length===0?null:new this(r,l,n,a)}resetDuration(){const e=this.tracks;let t=0;for(let i=0,n=e.length;i!==n;++i){const r=this.tracks[i];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function b1(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return tl;case"vector":case"vector2":case"vector3":case"vector4":return io;case"color":return Kf;case"quaternion":return Jo;case"bool":case"boolean":return lo;case"string":return co}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function S1(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=b1(s.type);if(s.times===void 0){const t=[],i=[];Zf(s.keys,t,i,"value"),s.times=t,s.values=i}return e.parse!==void 0?e.parse(s):new e(s.name,s.times,s.values,s.interpolation)}const Nr={enabled:!1,files:{},add:function(s,e){this.enabled!==!1&&(this.files[s]=e)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class Qf{constructor(e,t,i){const n=this;let r=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(h){a++,r===!1&&n.onStart!==void 0&&n.onStart(h,o,a),r=!0},this.itemEnd=function(h){o++,n.onProgress!==void 0&&n.onProgress(h,o,a),o===a&&(r=!1,n.onLoad!==void 0&&n.onLoad())},this.itemError=function(h){n.onError!==void 0&&n.onError(h)},this.resolveURL=function(h){return l?l(h):h},this.setURLModifier=function(h){return l=h,this},this.addHandler=function(h,u){return c.push(h,u),this},this.removeHandler=function(h){const u=c.indexOf(h);return u!==-1&&c.splice(u,2),this},this.getHandler=function(h){for(let u=0,d=c.length;u<d;u+=2){const f=c[u],p=c[u+1];if(f.global&&(f.lastIndex=0),f.test(h))return p}return null}}}const ho=new Qf;class zn{constructor(e){this.manager=e!==void 0?e:ho,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const i=this;return new Promise(function(n,r){i.load(e,n,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}zn.DEFAULT_MATERIAL_NAME="__DEFAULT";const Cr={};class M1 extends Error{constructor(e,t){super(e),this.response=t}}class qi extends zn{constructor(e){super(e),this.mimeType="",this.responseType=""}load(e,t,i,n){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=Nr.get(e);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(Cr[e]!==void 0){Cr[e].push({onLoad:t,onProgress:i,onError:n});return}Cr[e]=[],Cr[e].push({onLoad:t,onProgress:i,onError:n});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,l=this.responseType;fetch(o).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const h=Cr[e],u=c.body.getReader(),d=c.headers.get("X-File-Size")||c.headers.get("Content-Length"),f=d?parseInt(d):0,p=f!==0;let v=0;const m=new ReadableStream({start(g){y();function y(){u.read().then(({done:x,value:_})=>{if(x)g.close();else{v+=_.byteLength;const E=new ProgressEvent("progress",{lengthComputable:p,loaded:v,total:f});for(let M=0,S=h.length;M<S;M++){const T=h[M];T.onProgress&&T.onProgress(E)}g.enqueue(_),y()}},x=>{g.error(x)})}}});return new Response(m)}else throw new M1(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(h=>new DOMParser().parseFromString(h,a));case"json":return c.json();default:if(a==="")return c.text();{const u=/charset="?([^;"\s]*)"?/i.exec(a),d=u&&u[1]?u[1].toLowerCase():void 0,f=new TextDecoder(d);return c.arrayBuffer().then(p=>f.decode(p))}}}).then(c=>{Nr.add(e,c);const h=Cr[e];delete Cr[e];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onLoad&&f.onLoad(c)}}).catch(c=>{const h=Cr[e];if(h===void 0)throw this.manager.itemError(e),c;delete Cr[e];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onError&&f.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class w1 extends zn{constructor(e){super(e)}load(e,t,i,n){const r=this,o=new qi(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(r.parse(JSON.parse(a)))}catch(l){n?n(l):console.error(l),r.manager.itemError(e)}},i,n)}parse(e){const t=[];for(let i=0;i<e.length;i++){const n=ro.parse(e[i]);t.push(n)}return t}}class E1 extends zn{constructor(e){super(e)}load(e,t,i,n){const r=this,o=[],a=new Jh,l=new qi(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(r.withCredentials);let c=0;function h(u){l.load(e[u],function(d){const f=r.parse(d,!0);o[u]={width:f.width,height:f.height,format:f.format,mipmaps:f.mipmaps},c+=1,c===6&&(f.mipmapCount===1&&(a.minFilter=Sn),a.image=o,a.format=f.format,a.needsUpdate=!0,t&&t(a))},i,n)}if(Array.isArray(e))for(let u=0,d=e.length;u<d;++u)h(u);else l.load(e,function(u){const d=r.parse(u,!0);if(d.isCubemap){const f=d.mipmaps.length/d.mipmapCount;for(let p=0;p<f;p++){o[p]={mipmaps:[]};for(let v=0;v<d.mipmapCount;v++)o[p].mipmaps.push(d.mipmaps[p*d.mipmapCount+v]),o[p].format=d.format,o[p].width=d.width,o[p].height=d.height}a.image=o}else a.image.width=d.width,a.image.height=d.height,a.mipmaps=d.mipmaps;d.mipmapCount===1&&(a.minFilter=Sn),a.format=d.format,a.needsUpdate=!0,t&&t(a)},i,n);return a}}class nl extends zn{constructor(e){super(e)}load(e,t,i,n){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=Nr.get(e);if(o!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o;const a=Za("img");function l(){h(),Nr.add(e,this),t&&t(this),r.manager.itemEnd(e)}function c(u){h(),n&&n(u),r.manager.itemError(e),r.manager.itemEnd(e)}function h(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(e),a.src=e,a}}class T1 extends zn{constructor(e){super(e)}load(e,t,i,n){const r=new ml;r.colorSpace=sn;const o=new nl(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function l(c){o.load(e[c],function(h){r.images[c]=h,a++,a===6&&(r.needsUpdate=!0,t&&t(r))},void 0,n)}for(let c=0;c<e.length;++c)l(c);return r}}class t_ extends zn{constructor(e){super(e)}load(e,t,i,n){const r=this,o=new mr,a=new qi(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(r.withCredentials),a.load(e,function(l){let c;try{c=r.parse(l)}catch(h){if(n!==void 0)n(h);else{console.error(h);return}}c.image!==void 0?o.image=c.image:c.data!==void 0&&(o.image.width=c.width,o.image.height=c.height,o.image.data=c.data),o.wrapS=c.wrapS!==void 0?c.wrapS:Mi,o.wrapT=c.wrapT!==void 0?c.wrapT:Mi,o.magFilter=c.magFilter!==void 0?c.magFilter:Sn,o.minFilter=c.minFilter!==void 0?c.minFilter:Sn,o.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.colorSpace!==void 0&&(o.colorSpace=c.colorSpace),c.flipY!==void 0&&(o.flipY=c.flipY),c.format!==void 0&&(o.format=c.format),c.type!==void 0&&(o.type=c.type),c.mipmaps!==void 0&&(o.mipmaps=c.mipmaps,o.minFilter=ir),c.mipmapCount===1&&(o.minFilter=Sn),c.generateMipmaps!==void 0&&(o.generateMipmaps=c.generateMipmaps),o.needsUpdate=!0,t&&t(o,c)},i,n),o}}class n_ extends zn{constructor(e){super(e)}load(e,t,i,n){const r=new pn,o=new nl(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){r.image=a,r.needsUpdate=!0,t!==void 0&&t(r)},i,n),r}}class hs extends Lt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new ze(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class i_ extends hs{constructor(e,t,i){super(e,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Lt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new ze(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const od=new st,Rm=new L,Pm=new L;class $f{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new xe(512,512),this.map=null,this.mapPass=null,this.matrix=new st,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new yl,this._frameExtents=new xe(1,1),this._viewportCount=1,this._viewports=[new Pt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,i=this.matrix;Rm.setFromMatrixPosition(e.matrixWorld),t.position.copy(Rm),Pm.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Pm),t.updateMatrixWorld(),od.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(od),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(od)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class A1 extends $f{constructor(){super(new bn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,i=Wo*2*e.angle*this.focus,n=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(i!==t.fov||n!==t.aspect||r!==t.far)&&(t.fov=i,t.aspect=n,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class ep extends hs{constructor(e,t,i=0,n=Math.PI/3,r=0,o=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Lt.DEFAULT_UP),this.updateMatrix(),this.target=new Lt,this.distance=i,this.angle=n,this.penumbra=r,this.decay=o,this.map=null,this.shadow=new A1}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const Im=new st,ga=new L,ad=new L;class C1 extends $f{constructor(){super(new bn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new xe(4,2),this._viewportCount=6,this._viewports=[new Pt(2,1,1,1),new Pt(0,1,1,1),new Pt(3,1,1,1),new Pt(1,1,1,1),new Pt(3,0,1,1),new Pt(1,0,1,1)],this._cubeDirections=[new L(1,0,0),new L(-1,0,0),new L(0,0,1),new L(0,0,-1),new L(0,1,0),new L(0,-1,0)],this._cubeUps=[new L(0,1,0),new L(0,1,0),new L(0,1,0),new L(0,1,0),new L(0,0,1),new L(0,0,-1)]}updateMatrices(e,t=0){const i=this.camera,n=this.matrix,r=e.distance||i.far;r!==i.far&&(i.far=r,i.updateProjectionMatrix()),ga.setFromMatrixPosition(e.matrixWorld),i.position.copy(ga),ad.copy(i.position),ad.add(this._cubeDirections[t]),i.up.copy(this._cubeUps[t]),i.lookAt(ad),i.updateMatrixWorld(),n.makeTranslation(-ga.x,-ga.y,-ga.z),Im.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Im)}}class tp extends hs{constructor(e,t,i=0,n=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=n,this.shadow=new C1}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class us extends Xh{constructor(e=-1,t=1,i=1,n=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=n,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,n,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let r=i-e,o=i+e,a=n+t,l=n-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,o=r+c*this.view.width,a-=h*this.view.offsetY,l=a-h*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class R1 extends $f{constructor(){super(new us(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class np extends hs{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Lt.DEFAULT_UP),this.updateMatrix(),this.target=new Lt,this.shadow=new R1}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class ip extends hs{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class r_ extends hs{constructor(e,t,i=10,n=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=i,this.height=n}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class s_{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new L)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const i=e.x,n=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*n),t.addScaledVector(o[2],.488603*r),t.addScaledVector(o[3],.488603*i),t.addScaledVector(o[4],1.092548*(i*n)),t.addScaledVector(o[5],1.092548*(n*r)),t.addScaledVector(o[6],.315392*(3*r*r-1)),t.addScaledVector(o[7],1.092548*(i*r)),t.addScaledVector(o[8],.546274*(i*i-n*n)),t}getIrradianceAt(e,t){const i=e.x,n=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*n),t.addScaledVector(o[2],2*.511664*r),t.addScaledVector(o[3],2*.511664*i),t.addScaledVector(o[4],2*.429043*i*n),t.addScaledVector(o[5],2*.429043*n*r),t.addScaledVector(o[6],.743125*r*r-.247708),t.addScaledVector(o[7],2*.429043*i*r),t.addScaledVector(o[8],.429043*(i*i-n*n)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].fromArray(e,t+n*3);return this}toArray(e=[],t=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].toArray(e,t+n*3);return e}static getBasisAt(e,t){const i=e.x,n=e.y,r=e.z;t[0]=.282095,t[1]=.488603*n,t[2]=.488603*r,t[3]=.488603*i,t[4]=1.092548*i*n,t[5]=1.092548*n*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*i*r,t[8]=.546274*(i*i-n*n)}}class o_ extends hs{constructor(e=new s_,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class hu extends zn{constructor(e){super(e),this.textures={}}load(e,t,i,n){const r=this,o=new qi(r.manager);o.setPath(r.path),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(e,function(a){try{t(r.parse(JSON.parse(a)))}catch(l){n?n(l):console.error(l),r.manager.itemError(e)}},i,n)}parse(e){const t=this.textures;function i(r){return t[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),t[r]}const n=this.createMaterialFromType(e.type);if(e.uuid!==void 0&&(n.uuid=e.uuid),e.name!==void 0&&(n.name=e.name),e.color!==void 0&&n.color!==void 0&&n.color.setHex(e.color),e.roughness!==void 0&&(n.roughness=e.roughness),e.metalness!==void 0&&(n.metalness=e.metalness),e.sheen!==void 0&&(n.sheen=e.sheen),e.sheenColor!==void 0&&(n.sheenColor=new ze().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(n.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&n.emissive!==void 0&&n.emissive.setHex(e.emissive),e.specular!==void 0&&n.specular!==void 0&&n.specular.setHex(e.specular),e.specularIntensity!==void 0&&(n.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&n.specularColor!==void 0&&n.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(n.shininess=e.shininess),e.clearcoat!==void 0&&(n.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=e.clearcoatRoughness),e.dispersion!==void 0&&(n.dispersion=e.dispersion),e.iridescence!==void 0&&(n.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(n.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(n.transmission=e.transmission),e.thickness!==void 0&&(n.thickness=e.thickness),e.attenuationDistance!==void 0&&(n.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&n.attenuationColor!==void 0&&n.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(n.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(n.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(n.fog=e.fog),e.flatShading!==void 0&&(n.flatShading=e.flatShading),e.blending!==void 0&&(n.blending=e.blending),e.combine!==void 0&&(n.combine=e.combine),e.side!==void 0&&(n.side=e.side),e.shadowSide!==void 0&&(n.shadowSide=e.shadowSide),e.opacity!==void 0&&(n.opacity=e.opacity),e.transparent!==void 0&&(n.transparent=e.transparent),e.alphaTest!==void 0&&(n.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(n.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(n.depthFunc=e.depthFunc),e.depthTest!==void 0&&(n.depthTest=e.depthTest),e.depthWrite!==void 0&&(n.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(n.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(n.blendSrc=e.blendSrc),e.blendDst!==void 0&&(n.blendDst=e.blendDst),e.blendEquation!==void 0&&(n.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(n.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(n.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(n.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&n.blendColor!==void 0&&n.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(n.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(n.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(n.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(n.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(n.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(n.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(n.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(n.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(n.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(n.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(n.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(n.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(n.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(n.rotation=e.rotation),e.linewidth!==void 0&&(n.linewidth=e.linewidth),e.dashSize!==void 0&&(n.dashSize=e.dashSize),e.gapSize!==void 0&&(n.gapSize=e.gapSize),e.scale!==void 0&&(n.scale=e.scale),e.polygonOffset!==void 0&&(n.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(n.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(n.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(n.dithering=e.dithering),e.alphaToCoverage!==void 0&&(n.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(n.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(n.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(n.visible=e.visible),e.toneMapped!==void 0&&(n.toneMapped=e.toneMapped),e.userData!==void 0&&(n.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?n.vertexColors=e.vertexColors>0:n.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const r in e.uniforms){const o=e.uniforms[r];switch(n.uniforms[r]={},o.type){case"t":n.uniforms[r].value=i(o.value);break;case"c":n.uniforms[r].value=new ze().setHex(o.value);break;case"v2":n.uniforms[r].value=new xe().fromArray(o.value);break;case"v3":n.uniforms[r].value=new L().fromArray(o.value);break;case"v4":n.uniforms[r].value=new Pt().fromArray(o.value);break;case"m3":n.uniforms[r].value=new Et().fromArray(o.value);break;case"m4":n.uniforms[r].value=new st().fromArray(o.value);break;default:n.uniforms[r].value=o.value}}if(e.defines!==void 0&&(n.defines=e.defines),e.vertexShader!==void 0&&(n.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(n.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(n.glslVersion=e.glslVersion),e.extensions!==void 0)for(const r in e.extensions)n.extensions[r]=e.extensions[r];if(e.lights!==void 0&&(n.lights=e.lights),e.clipping!==void 0&&(n.clipping=e.clipping),e.size!==void 0&&(n.size=e.size),e.sizeAttenuation!==void 0&&(n.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(n.map=i(e.map)),e.matcap!==void 0&&(n.matcap=i(e.matcap)),e.alphaMap!==void 0&&(n.alphaMap=i(e.alphaMap)),e.bumpMap!==void 0&&(n.bumpMap=i(e.bumpMap)),e.bumpScale!==void 0&&(n.bumpScale=e.bumpScale),e.normalMap!==void 0&&(n.normalMap=i(e.normalMap)),e.normalMapType!==void 0&&(n.normalMapType=e.normalMapType),e.normalScale!==void 0){let r=e.normalScale;Array.isArray(r)===!1&&(r=[r,r]),n.normalScale=new xe().fromArray(r)}return e.displacementMap!==void 0&&(n.displacementMap=i(e.displacementMap)),e.displacementScale!==void 0&&(n.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(n.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(n.roughnessMap=i(e.roughnessMap)),e.metalnessMap!==void 0&&(n.metalnessMap=i(e.metalnessMap)),e.emissiveMap!==void 0&&(n.emissiveMap=i(e.emissiveMap)),e.emissiveIntensity!==void 0&&(n.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(n.specularMap=i(e.specularMap)),e.specularIntensityMap!==void 0&&(n.specularIntensityMap=i(e.specularIntensityMap)),e.specularColorMap!==void 0&&(n.specularColorMap=i(e.specularColorMap)),e.envMap!==void 0&&(n.envMap=i(e.envMap)),e.envMapRotation!==void 0&&n.envMapRotation.fromArray(e.envMapRotation),e.envMapIntensity!==void 0&&(n.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(n.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(n.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(n.lightMap=i(e.lightMap)),e.lightMapIntensity!==void 0&&(n.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(n.aoMap=i(e.aoMap)),e.aoMapIntensity!==void 0&&(n.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(n.gradientMap=i(e.gradientMap)),e.clearcoatMap!==void 0&&(n.clearcoatMap=i(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(n.clearcoatRoughnessMap=i(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(n.clearcoatNormalMap=i(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(n.clearcoatNormalScale=new xe().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(n.iridescenceMap=i(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(n.iridescenceThicknessMap=i(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(n.transmissionMap=i(e.transmissionMap)),e.thicknessMap!==void 0&&(n.thicknessMap=i(e.thicknessMap)),e.anisotropyMap!==void 0&&(n.anisotropyMap=i(e.anisotropyMap)),e.sheenColorMap!==void 0&&(n.sheenColorMap=i(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(n.sheenRoughnessMap=i(e.sheenRoughnessMap)),n}setTextures(e){return this.textures=e,this}createMaterialFromType(e){return hu.createMaterialFromType(e)}static createMaterialFromType(e){const t={ShadowMaterial:Hv,SpriteMaterial:Zo,RawShaderMaterial:Wv,ShaderMaterial:Ti,PointsMaterial:Xs,MeshPhysicalMaterial:Xv,MeshStandardMaterial:jf,MeshPhongMaterial:el,MeshToonMaterial:Yv,MeshNormalMaterial:jv,MeshLambertMaterial:qf,MeshDepthMaterial:bl,MeshDistanceMaterial:cu,MeshBasicMaterial:Bn,MeshMatcapMaterial:qv,LineDashedMaterial:Zv,LineBasicMaterial:wn,Material:kn};return new t[e]}}class Rh{static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class uu extends yt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class a_ extends zn{constructor(e){super(e)}load(e,t,i,n){const r=this,o=new qi(r.manager);o.setPath(r.path),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(e,function(a){try{t(r.parse(JSON.parse(a)))}catch(l){n?n(l):console.error(l),r.manager.itemError(e)}},i,n)}parse(e){const t={},i={};function n(f,p){if(t[p]!==void 0)return t[p];const m=f.interleavedBuffers[p],g=r(f,m.buffer),y=Oo(m.type,g),x=new qh(y,m.stride);return x.uuid=m.uuid,t[p]=x,x}function r(f,p){if(i[p]!==void 0)return i[p];const m=f.arrayBuffers[p],g=new Uint32Array(m).buffer;return i[p]=g,g}const o=e.isInstancedBufferGeometry?new uu:new yt,a=e.data.index;if(a!==void 0){const f=Oo(a.type,a.array);o.setIndex(new Ct(f,1))}const l=e.data.attributes;for(const f in l){const p=l[f];let v;if(p.isInterleavedBufferAttribute){const m=n(e.data,p.data);v=new Fi(m,p.itemSize,p.offset,p.normalized)}else{const m=Oo(p.type,p.array),g=p.isInstancedBufferAttribute?to:Ct;v=new g(m,p.itemSize,p.normalized)}p.name!==void 0&&(v.name=p.name),p.usage!==void 0&&v.setUsage(p.usage),o.setAttribute(f,v)}const c=e.data.morphAttributes;if(c)for(const f in c){const p=c[f],v=[];for(let m=0,g=p.length;m<g;m++){const y=p[m];let x;if(y.isInterleavedBufferAttribute){const _=n(e.data,y.data);x=new Fi(_,y.itemSize,y.offset,y.normalized)}else{const _=Oo(y.type,y.array);x=new Ct(_,y.itemSize,y.normalized)}y.name!==void 0&&(x.name=y.name),v.push(x)}o.morphAttributes[f]=v}e.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const u=e.data.groups||e.data.drawcalls||e.data.offsets;if(u!==void 0)for(let f=0,p=u.length;f!==p;++f){const v=u[f];o.addGroup(v.start,v.count,v.materialIndex)}const d=e.data.boundingSphere;if(d!==void 0){const f=new L;d.center!==void 0&&f.fromArray(d.center),o.boundingSphere=new Cn(f,d.radius)}return e.name&&(o.name=e.name),e.userData&&(o.userData=e.userData),o}}class P1 extends zn{constructor(e){super(e)}load(e,t,i,n){const r=this,o=this.path===""?Rh.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const a=new qi(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){let c=null;try{c=JSON.parse(l)}catch(u){n!==void 0&&n(u),console.error("THREE:ObjectLoader: Can't parse "+e+".",u.message);return}const h=c.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry"){n!==void 0&&n(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(c,t)},i,n)}async loadAsync(e,t){const i=this,n=this.path===""?Rh.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||n;const r=new qi(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);const o=await r.loadAsync(e,t),a=JSON.parse(o),l=a.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await i.parseAsync(a)}parse(e,t){const i=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,n),o=this.parseImages(e.images,function(){t!==void 0&&t(c)}),a=this.parseTextures(e.textures,o),l=this.parseMaterials(e.materials,a),c=this.parseObject(e.object,r,l,a,i),h=this.parseSkeletons(e.skeletons,c);if(this.bindSkeletons(c,h),this.bindLightTargets(c),t!==void 0){let u=!1;for(const d in o)if(o[d].data instanceof HTMLImageElement){u=!0;break}u===!1&&t(c)}return c}async parseAsync(e){const t=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),n=this.parseGeometries(e.geometries,i),r=await this.parseImagesAsync(e.images),o=this.parseTextures(e.textures,r),a=this.parseMaterials(e.materials,o),l=this.parseObject(e.object,n,a,o,t),c=this.parseSkeletons(e.skeletons,l);return this.bindSkeletons(l,c),this.bindLightTargets(l),l}parseShapes(e){const t={};if(e!==void 0)for(let i=0,n=e.length;i<n;i++){const r=new Js().fromJSON(e[i]);t[r.uuid]=r}return t}parseSkeletons(e,t){const i={},n={};if(t.traverse(function(r){r.isBone&&(n[r.uuid]=r)}),e!==void 0)for(let r=0,o=e.length;r<o;r++){const a=new _l().fromJSON(e[r],n);i[a.uuid]=a}return i}parseGeometries(e,t){const i={};if(e!==void 0){const n=new a_;for(let r=0,o=e.length;r<o;r++){let a;const l=e[r];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":a=n.parse(l);break;default:l.type in Cm?a=Cm[l.type].fromJSON(l,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}a.uuid=l.uuid,l.name!==void 0&&(a.name=l.name),l.userData!==void 0&&(a.userData=l.userData),i[l.uuid]=a}}return i}parseMaterials(e,t){const i={},n={};if(e!==void 0){const r=new hu;r.setTextures(t);for(let o=0,a=e.length;o<a;o++){const l=e[o];i[l.uuid]===void 0&&(i[l.uuid]=r.parse(l)),n[l.uuid]=i[l.uuid]}}return n}parseAnimations(e){const t={};if(e!==void 0)for(let i=0;i<e.length;i++){const n=e[i],r=ro.parse(n);t[r.uuid]=r}return t}parseImages(e,t){const i=this,n={};let r;function o(l){return i.manager.itemStart(l),r.load(l,function(){i.manager.itemEnd(l)},void 0,function(){i.manager.itemError(l),i.manager.itemEnd(l)})}function a(l){if(typeof l=="string"){const c=l,h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:i.resourcePath+c;return o(h)}else return l.data?{data:Oo(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new Qf(t);r=new nl(l),r.setCrossOrigin(this.crossOrigin);for(let c=0,h=e.length;c<h;c++){const u=e[c],d=u.url;if(Array.isArray(d)){const f=[];for(let p=0,v=d.length;p<v;p++){const m=d[p],g=a(m);g!==null&&(g instanceof HTMLImageElement?f.push(g):f.push(new mr(g.data,g.width,g.height)))}n[u.uuid]=new ss(f)}else{const f=a(u.url);n[u.uuid]=new ss(f)}}}return n}async parseImagesAsync(e){const t=this,i={};let n;async function r(o){if(typeof o=="string"){const a=o,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)?a:t.resourcePath+a;return await n.loadAsync(l)}else return o.data?{data:Oo(o.type,o.data),width:o.width,height:o.height}:null}if(e!==void 0&&e.length>0){n=new nl(this.manager),n.setCrossOrigin(this.crossOrigin);for(let o=0,a=e.length;o<a;o++){const l=e[o],c=l.url;if(Array.isArray(c)){const h=[];for(let u=0,d=c.length;u<d;u++){const f=c[u],p=await r(f);p!==null&&(p instanceof HTMLImageElement?h.push(p):h.push(new mr(p.data,p.width,p.height)))}i[l.uuid]=new ss(h)}else{const h=await r(l.url);i[l.uuid]=new ss(h)}}}return i}parseTextures(e,t){function i(r,o){return typeof r=="number"?r:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",r),o[r])}const n={};if(e!==void 0)for(let r=0,o=e.length;r<o;r++){const a=e[r];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),t[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const l=t[a.image],c=l.data;let h;Array.isArray(c)?(h=new ml,c.length===6&&(h.needsUpdate=!0)):(c&&c.data?h=new mr:h=new pn,c&&(h.needsUpdate=!0)),h.source=l,h.uuid=a.uuid,a.name!==void 0&&(h.name=a.name),a.mapping!==void 0&&(h.mapping=i(a.mapping,I1)),a.channel!==void 0&&(h.channel=a.channel),a.offset!==void 0&&h.offset.fromArray(a.offset),a.repeat!==void 0&&h.repeat.fromArray(a.repeat),a.center!==void 0&&h.center.fromArray(a.center),a.rotation!==void 0&&(h.rotation=a.rotation),a.wrap!==void 0&&(h.wrapS=i(a.wrap[0],Dm),h.wrapT=i(a.wrap[1],Dm)),a.format!==void 0&&(h.format=a.format),a.internalFormat!==void 0&&(h.internalFormat=a.internalFormat),a.type!==void 0&&(h.type=a.type),a.colorSpace!==void 0&&(h.colorSpace=a.colorSpace),a.minFilter!==void 0&&(h.minFilter=i(a.minFilter,Lm)),a.magFilter!==void 0&&(h.magFilter=i(a.magFilter,Lm)),a.anisotropy!==void 0&&(h.anisotropy=a.anisotropy),a.flipY!==void 0&&(h.flipY=a.flipY),a.generateMipmaps!==void 0&&(h.generateMipmaps=a.generateMipmaps),a.premultiplyAlpha!==void 0&&(h.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(h.unpackAlignment=a.unpackAlignment),a.compareFunction!==void 0&&(h.compareFunction=a.compareFunction),a.userData!==void 0&&(h.userData=a.userData),n[a.uuid]=h}return n}parseObject(e,t,i,n,r){let o;function a(d){return t[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",d),t[d]}function l(d){if(d!==void 0){if(Array.isArray(d)){const f=[];for(let p=0,v=d.length;p<v;p++){const m=d[p];i[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),f.push(i[m])}return f}return i[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",d),i[d]}}function c(d){return n[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",d),n[d]}let h,u;switch(e.type){case"Scene":o=new gl,e.background!==void 0&&(Number.isInteger(e.background)?o.background=new ze(e.background):o.background=c(e.background)),e.environment!==void 0&&(o.environment=c(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?o.fog=new jh(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(o.fog=new Yh(e.fog.color,e.fog.density)),e.fog.name!==""&&(o.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(o.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(o.backgroundIntensity=e.backgroundIntensity),e.backgroundRotation!==void 0&&o.backgroundRotation.fromArray(e.backgroundRotation),e.environmentIntensity!==void 0&&(o.environmentIntensity=e.environmentIntensity),e.environmentRotation!==void 0&&o.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":o=new bn(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(o.focus=e.focus),e.zoom!==void 0&&(o.zoom=e.zoom),e.filmGauge!==void 0&&(o.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(o.filmOffset=e.filmOffset),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new us(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(o.zoom=e.zoom),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new ip(e.color,e.intensity);break;case"DirectionalLight":o=new np(e.color,e.intensity),o.target=e.target||"";break;case"PointLight":o=new tp(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new r_(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new ep(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay),o.target=e.target||"";break;case"HemisphereLight":o=new i_(e.color,e.groundColor,e.intensity);break;case"LightProbe":o=new o_().fromJSON(e);break;case"SkinnedMesh":h=a(e.geometry),u=l(e.material),o=new kf(h,u),e.bindMode!==void 0&&(o.bindMode=e.bindMode),e.bindMatrix!==void 0&&o.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(o.skeleton=e.skeleton);break;case"Mesh":h=a(e.geometry),u=l(e.material),o=new ke(h,u);break;case"InstancedMesh":h=a(e.geometry),u=l(e.material);const d=e.count,f=e.instanceMatrix,p=e.instanceColor;o=new Cv(h,u,d),o.instanceMatrix=new to(new Float32Array(f.array),16),p!==void 0&&(o.instanceColor=new to(new Float32Array(p.array),p.itemSize));break;case"BatchedMesh":h=a(e.geometry),u=l(e.material),o=new Rv(e.maxInstanceCount,e.maxVertexCount,e.maxIndexCount,u),o.geometry=h,o.perObjectFrustumCulled=e.perObjectFrustumCulled,o.sortObjects=e.sortObjects,o._drawRanges=e.drawRanges,o._reservedRanges=e.reservedRanges,o._visibility=e.visibility,o._active=e.active,o._bounds=e.bounds.map(v=>{const m=new Mn;m.min.fromArray(v.boxMin),m.max.fromArray(v.boxMax);const g=new Cn;return g.radius=v.sphereRadius,g.center.fromArray(v.sphereCenter),{boxInitialized:v.boxInitialized,box:m,sphereInitialized:v.sphereInitialized,sphere:g}}),o._maxInstanceCount=e.maxInstanceCount,o._maxVertexCount=e.maxVertexCount,o._maxIndexCount=e.maxIndexCount,o._geometryInitialized=e.geometryInitialized,o._geometryCount=e.geometryCount,o._matricesTexture=c(e.matricesTexture.uuid),e.colorsTexture!==void 0&&(o._colorsTexture=c(e.colorsTexture.uuid));break;case"LOD":o=new Av;break;case"Line":o=new Yn(a(e.geometry),l(e.material));break;case"LineLoop":o=new Pv(a(e.geometry),l(e.material));break;case"LineSegments":o=new zi(a(e.geometry),l(e.material));break;case"PointCloud":case"Points":o=new Na(a(e.geometry),l(e.material));break;case"Sprite":o=new vl(l(e.material));break;case"Group":o=new Oi;break;case"Bone":o=new Zh;break;default:o=new Lt}if(o.uuid=e.uuid,e.name!==void 0&&(o.name=e.name),e.matrix!==void 0?(o.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(e.position!==void 0&&o.position.fromArray(e.position),e.rotation!==void 0&&o.rotation.fromArray(e.rotation),e.quaternion!==void 0&&o.quaternion.fromArray(e.quaternion),e.scale!==void 0&&o.scale.fromArray(e.scale)),e.up!==void 0&&o.up.fromArray(e.up),e.castShadow!==void 0&&(o.castShadow=e.castShadow),e.receiveShadow!==void 0&&(o.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.intensity!==void 0&&(o.shadow.intensity=e.shadow.intensity),e.shadow.bias!==void 0&&(o.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(o.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(o.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(o.visible=e.visible),e.frustumCulled!==void 0&&(o.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(o.renderOrder=e.renderOrder),e.userData!==void 0&&(o.userData=e.userData),e.layers!==void 0&&(o.layers.mask=e.layers),e.children!==void 0){const d=e.children;for(let f=0;f<d.length;f++)o.add(this.parseObject(d[f],t,i,n,r))}if(e.animations!==void 0){const d=e.animations;for(let f=0;f<d.length;f++){const p=d[f];o.animations.push(r[p])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(o.autoUpdate=e.autoUpdate);const d=e.levels;for(let f=0;f<d.length;f++){const p=d[f],v=o.getObjectByProperty("uuid",p.object);v!==void 0&&o.addLevel(v,p.distance,p.hysteresis)}}return o}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(i){if(i.isSkinnedMesh===!0&&i.skeleton!==void 0){const n=t[i.skeleton];n===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",i.skeleton):i.bind(n,i.bindMatrix)}})}bindLightTargets(e){e.traverse(function(t){if(t.isDirectionalLight||t.isSpotLight){const i=t.target,n=e.getObjectByProperty("uuid",i);n!==void 0?t.target=n:t.target=new Lt}})}}const I1={UVMapping:Uh,CubeReflectionMapping:zr,CubeRefractionMapping:os,EquirectangularReflectionMapping:Ga,EquirectangularRefractionMapping:Va,CubeUVReflectionMapping:jo},Dm={RepeatWrapping:nr,ClampToEdgeWrapping:Mi,MirroredRepeatWrapping:Ha},Lm={NearestFilter:jn,NearestMipmapNearestFilter:Sf,NearestMipmapLinearFilter:No,LinearFilter:Sn,LinearMipmapNearestFilter:Ca,LinearMipmapLinearFilter:ir};class D1 extends zn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,i,n){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=Nr.get(e);if(o!==void 0){if(r.manager.itemStart(e),o.then){o.then(c=>{t&&t(c),r.manager.itemEnd(e)}).catch(c=>{n&&n(c)});return}return setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o}const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader;const l=fetch(e,a).then(function(c){return c.blob()}).then(function(c){return createImageBitmap(c,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(c){return Nr.add(e,c),t&&t(c),r.manager.itemEnd(e),c}).catch(function(c){n&&n(c),Nr.remove(e),r.manager.itemError(e),r.manager.itemEnd(e)});Nr.add(e,l),r.manager.itemStart(e)}}let ac;class rp{static getContext(){return ac===void 0&&(ac=new(window.AudioContext||window.webkitAudioContext)),ac}static setContext(e){ac=e}}class L1 extends zn{constructor(e){super(e)}load(e,t,i,n){const r=this,o=new qi(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(l){try{const c=l.slice(0);rp.getContext().decodeAudioData(c,function(u){t(u)}).catch(a)}catch(c){a(c)}},i,n);function a(l){n?n(l):console.error(l),r.manager.itemError(e)}}}const Um=new st,Nm=new st,Ms=new st;class U1{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new bn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new bn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Ms.copy(e.projectionMatrix);const n=t.eyeSep/2,r=n*t.near/t.focus,o=t.near*Math.tan(Zs*t.fov*.5)/t.zoom;let a,l;Nm.elements[12]=-n,Um.elements[12]=n,a=-o*t.aspect+r,l=o*t.aspect+r,Ms.elements[0]=2*t.near/(l-a),Ms.elements[8]=(l+a)/(l-a),this.cameraL.projectionMatrix.copy(Ms),a=-o*t.aspect-r,l=o*t.aspect-r,Ms.elements[0]=2*t.near/(l-a),Ms.elements[8]=(l+a)/(l-a),this.cameraR.projectionMatrix.copy(Ms)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Nm),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Um)}}class l_ extends bn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e,this.index=0}}class sp{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Om(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=Om();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function Om(){return performance.now()}const ws=new L,Fm=new Ht,N1=new L,Es=new L;class O1 extends Lt{constructor(){super(),this.type="AudioListener",this.context=rp.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new sp}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(ws,Fm,N1),Es.set(0,0,-1).applyQuaternion(Fm),t.positionX){const n=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(ws.x,n),t.positionY.linearRampToValueAtTime(ws.y,n),t.positionZ.linearRampToValueAtTime(ws.z,n),t.forwardX.linearRampToValueAtTime(Es.x,n),t.forwardY.linearRampToValueAtTime(Es.y,n),t.forwardZ.linearRampToValueAtTime(Es.z,n),t.upX.linearRampToValueAtTime(i.x,n),t.upY.linearRampToValueAtTime(i.y,n),t.upZ.linearRampToValueAtTime(i.z,n)}else t.setPosition(ws.x,ws.y,ws.z),t.setOrientation(Es.x,Es.y,Es.z,i.x,i.y,i.z)}}class c_ extends Lt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(e=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+e),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}copy(e,t){return super.copy(e,t),e.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=e.autoplay,this.buffer=e.buffer,this.detune=e.detune,this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this.offset=e.offset,this.duration=e.duration,this.playbackRate=e.playbackRate,this.hasPlaybackControl=e.hasPlaybackControl,this.sourceType=e.sourceType,this.filters=e.filters.slice(),this)}clone(e){return new this.constructor(this.listener).copy(this,e)}}const Ts=new L,km=new Ht,F1=new L,As=new L;class k1 extends c_{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){return super.connect(),this.panner.connect(this.gain),this}disconnect(){return super.disconnect(),this.panner.disconnect(this.gain),this}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,i){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=i,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Ts,km,F1),As.set(0,0,1).applyQuaternion(km);const t=this.panner;if(t.positionX){const i=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Ts.x,i),t.positionY.linearRampToValueAtTime(Ts.y,i),t.positionZ.linearRampToValueAtTime(Ts.z,i),t.orientationX.linearRampToValueAtTime(As.x,i),t.orientationY.linearRampToValueAtTime(As.y,i),t.orientationZ.linearRampToValueAtTime(As.z,i)}else t.setPosition(Ts.x,Ts.y,Ts.z),t.setOrientation(As.x,As.y,As.z)}}class B1{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let i=0;i<t.length;i++)e+=t[i];return e/t.length}}class h_{constructor(e,t,i){this.binding=e,this.valueSize=i;let n,r,o;switch(t){case"quaternion":n=this._slerp,r=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(i*6),this._workIndex=5;break;case"string":case"bool":n=this._select,r=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(i*5);break;default:n=this._lerp,r=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(i*5)}this._mixBufferRegion=n,this._mixBufferRegionAdditive=r,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const i=this.buffer,n=this.valueSize,r=e*n+n;let o=this.cumulativeWeight;if(o===0){for(let a=0;a!==n;++a)i[r+a]=i[a];o=t}else{o+=t;const a=t/o;this._mixBufferRegion(i,r,0,a,n)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,i=this.valueSize,n=i*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,n,0,e,i),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,i=this.buffer,n=e*t+t,r=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const l=t*this._origIndex;this._mixBufferRegion(i,n,l,1-r,t)}o>0&&this._mixBufferRegionAdditive(i,n,this._addIndex*t,1,t);for(let l=t,c=t+t;l!==c;++l)if(i[l]!==i[l+t]){a.setValue(i,n);break}}saveOriginalState(){const e=this.binding,t=this.buffer,i=this.valueSize,n=i*this._origIndex;e.getValue(t,n);for(let r=i,o=n;r!==o;++r)t[r]=t[n+r%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let i=e;i<t;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[t+i]=this.buffer[e+i]}_select(e,t,i,n,r){if(n>=.5)for(let o=0;o!==r;++o)e[t+o]=e[i+o]}_slerp(e,t,i,n){Ht.slerpFlat(e,t,e,t,e,i,n)}_slerpAdditive(e,t,i,n,r){const o=this._workIndex*r;Ht.multiplyQuaternionsFlat(e,o,e,t,e,i),Ht.slerpFlat(e,t,e,t,e,o,n)}_lerp(e,t,i,n,r){const o=1-n;for(let a=0;a!==r;++a){const l=t+a;e[l]=e[l]*o+e[i+a]*n}}_lerpAdditive(e,t,i,n,r){for(let o=0;o!==r;++o){const a=t+o;e[a]=e[a]+e[i+o]*n}}}const op="\\[\\]\\.:\\/",z1=new RegExp("["+op+"]","g"),ap="[^"+op+"]",G1="[^"+op.replace("\\.","")+"]",V1=/((?:WC+[\/:])*)/.source.replace("WC",ap),H1=/(WCOD+)?/.source.replace("WCOD",G1),W1=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",ap),X1=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",ap),Y1=new RegExp("^"+V1+H1+W1+X1+"$"),j1=["material","materials","bones","map"];class q1{constructor(e,t,i){const n=i||Gt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)}getValue(e,t){this.bind();const i=this._targetGroup.nCachedObjects_,n=this._bindings[i];n!==void 0&&n.getValue(e,t)}setValue(e,t){const i=this._bindings;for(let n=this._targetGroup.nCachedObjects_,r=i.length;n!==r;++n)i[n].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].unbind()}}class Gt{constructor(e,t,i){this.path=t,this.parsedPath=i||Gt.parseTrackName(t),this.node=Gt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,i){return e&&e.isAnimationObjectGroup?new Gt.Composite(e,t,i):new Gt(e,t,i)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(z1,"")}static parseTrackName(e){const t=Y1.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const i={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(n!==void 0&&n!==-1){const r=i.nodeName.substring(n+1);j1.indexOf(r)!==-1&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=r)}if(i.propertyName===null||i.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const i=e.skeleton.getBoneByName(t);if(i!==void 0)return i}if(e.children){const i=function(r){for(let o=0;o<r.length;o++){const a=r[o];if(a.name===t||a.uuid===t)return a;const l=i(a.children);if(l)return l}return null},n=i(e.children);if(n)return n}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)e[t++]=i[n]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,i=t.objectName,n=t.propertyName;let r=t.propertyIndex;if(e||(e=Gt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(i){let c=t.objectIndex;switch(i){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let h=0;h<e.length;h++)if(e[h].name===c){c=h;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[i]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[i]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const o=e[n];if(o===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+n+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.isMaterial===!0?a=this.Versioning.NeedsUpdate:e.isObject3D===!0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(r!==void 0){if(n==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}l=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else o.fromArray!==void 0&&o.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(l=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=n;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Gt.Composite=q1;Gt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Gt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Gt.prototype.GetterByBindingType=[Gt.prototype._getValue_direct,Gt.prototype._getValue_array,Gt.prototype._getValue_arrayElement,Gt.prototype._getValue_toArray];Gt.prototype.SetterByBindingTypeAndVersioning=[[Gt.prototype._setValue_direct,Gt.prototype._setValue_direct_setNeedsUpdate,Gt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Gt.prototype._setValue_array,Gt.prototype._setValue_array_setNeedsUpdate,Gt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Gt.prototype._setValue_arrayElement,Gt.prototype._setValue_arrayElement_setNeedsUpdate,Gt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Gt.prototype._setValue_fromArray,Gt.prototype._setValue_fromArray_setNeedsUpdate,Gt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Z1{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Bi(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let i=0,n=arguments.length;i!==n;++i)e[arguments[i].uuid]=i;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,i=this._paths,n=this._parsedPaths,r=this._bindings,o=r.length;let a,l=e.length,c=this.nCachedObjects_;for(let h=0,u=arguments.length;h!==u;++h){const d=arguments[h],f=d.uuid;let p=t[f];if(p===void 0){p=l++,t[f]=p,e.push(d);for(let v=0,m=o;v!==m;++v)r[v].push(new Gt(d,i[v],n[v]))}else if(p<c){a=e[p];const v=--c,m=e[v];t[m.uuid]=p,e[p]=m,t[f]=v,e[v]=d;for(let g=0,y=o;g!==y;++g){const x=r[g],_=x[v];let E=x[p];x[p]=_,E===void 0&&(E=new Gt(d,i[g],n[g])),x[v]=E}}else e[p]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c}remove(){const e=this._objects,t=this._indicesByUUID,i=this._bindings,n=i.length;let r=this.nCachedObjects_;for(let o=0,a=arguments.length;o!==a;++o){const l=arguments[o],c=l.uuid,h=t[c];if(h!==void 0&&h>=r){const u=r++,d=e[u];t[d.uuid]=h,e[h]=d,t[c]=u,e[u]=l;for(let f=0,p=n;f!==p;++f){const v=i[f],m=v[u],g=v[h];v[h]=m,v[u]=g}}}this.nCachedObjects_=r}uncache(){const e=this._objects,t=this._indicesByUUID,i=this._bindings,n=i.length;let r=this.nCachedObjects_,o=e.length;for(let a=0,l=arguments.length;a!==l;++a){const c=arguments[a],h=c.uuid,u=t[h];if(u!==void 0)if(delete t[h],u<r){const d=--r,f=e[d],p=--o,v=e[p];t[f.uuid]=u,e[u]=f,t[v.uuid]=d,e[d]=v,e.pop();for(let m=0,g=n;m!==g;++m){const y=i[m],x=y[d],_=y[p];y[u]=x,y[d]=_,y.pop()}}else{const d=--o,f=e[d];d>0&&(t[f.uuid]=u),e[u]=f,e.pop();for(let p=0,v=n;p!==v;++p){const m=i[p];m[u]=m[d],m.pop()}}}this.nCachedObjects_=r}subscribe_(e,t){const i=this._bindingsIndicesByPath;let n=i[e];const r=this._bindings;if(n!==void 0)return r[n];const o=this._paths,a=this._parsedPaths,l=this._objects,c=l.length,h=this.nCachedObjects_,u=new Array(c);n=r.length,i[e]=n,o.push(e),a.push(t),r.push(u);for(let d=h,f=l.length;d!==f;++d){const p=l[d];u[d]=new Gt(p,e,t)}return u}unsubscribe_(e){const t=this._bindingsIndicesByPath,i=t[e];if(i!==void 0){const n=this._paths,r=this._parsedPaths,o=this._bindings,a=o.length-1,l=o[a],c=e[a];t[c]=i,o[i]=l,o.pop(),r[i]=r[a],r.pop(),n[i]=n[a],n.pop()}}}class u_{constructor(e,t,i=null,n=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=i,this.blendMode=n;const r=t.tracks,o=r.length,a=new Array(o),l={endingStart:Hs,endingEnd:Hs};for(let c=0;c!==o;++c){const h=r[c].createInterpolant(null);a[c]=h,h.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=lv,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,i=!1){if(e.fadeOut(t),this.fadeIn(t),i===!0){const n=this._clip.duration,r=e._clip.duration,o=r/n,a=n/r;e.warp(1,o,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,i=!1){return e.crossFadeFrom(this,t,i)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,i){const n=this._mixer,r=n.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=n._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,c=a.sampleValues;return l[0]=r,l[1]=r+i,c[0]=e/o,c[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,i,n){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const l=(e-r)*i;l<0||i===0?t=0:(this._startTime=null,t=i*l)}t*=this._updateTimeScale(e);const o=this._updateTime(t),a=this._updateWeight(e);if(a>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case Df:for(let h=0,u=l.length;h!==u;++h)l[h].evaluate(o),c[h].accumulateAdditive(a);break;case Gh:default:for(let h=0,u=l.length;h!==u;++h)l[h].evaluate(o),c[h].accumulate(n,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const i=this._weightInterpolant;if(i!==null){const n=i.evaluate(e)[0];t*=n,e>i.parameterPositions[1]&&(this.stopFading(),n===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const i=this._timeScaleInterpolant;if(i!==null){const n=i.evaluate(e)[0];t*=n,e>i.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,i=this.loop;let n=this.time+e,r=this._loopCount;const o=i===cv;if(e===0)return r===-1?n:o&&(r&1)===1?t-n:n;if(i===av){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(n>=t)n=t;else if(n<0)n=0;else{this.time=n;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),n>=t||n<0){const a=Math.floor(n/t);n-=t*a,r+=Math.abs(a);const l=this.repetitions-r;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,n=e>0?t:0,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=r,this.time=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=n;if(o&&(r&1)===1)return t-n}return n}_setEndings(e,t,i){const n=this._interpolantSettings;i?(n.endingStart=Ws,n.endingEnd=Ws):(e?n.endingStart=this.zeroSlopeAtStart?Ws:Hs:n.endingStart=Xa,t?n.endingEnd=this.zeroSlopeAtEnd?Ws:Hs:n.endingEnd=Xa)}_scheduleFading(e,t,i){const n=this._mixer,r=n.time;let o=this._weightInterpolant;o===null&&(o=n._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=r,l[0]=t,a[1]=r+e,l[1]=i,this}}const J1=new Float32Array(1);class K1 extends br{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const i=e._localRoot||this._root,n=e._clip.tracks,r=n.length,o=e._propertyBindings,a=e._interpolants,l=i.uuid,c=this._bindingsByRootAndName;let h=c[l];h===void 0&&(h={},c[l]=h);for(let u=0;u!==r;++u){const d=n[u],f=d.name;let p=h[f];if(p!==void 0)++p.referenceCount,o[u]=p;else{if(p=o[u],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,l,f));continue}const v=t&&t._propertyBindings[u].binding.parsedPath;p=new h_(Gt.create(i,f,v),d.ValueTypeName,d.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,l,f),o[u]=p}a[u].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const i=(e._localRoot||this._root).uuid,n=e._clip.uuid,r=this._actionsByClip[n];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,n,i)}const t=e._propertyBindings;for(let i=0,n=t.length;i!==n;++i){const r=t[i];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let i=0,n=t.length;i!==n;++i){const r=t[i];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,i){const n=this._actions,r=this._actionsByClip;let o=r[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=o;else{const a=o.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=n.length,n.push(e),o.actionByRoot[i]=e}_removeInactiveAction(e){const t=this._actions,i=t[t.length-1],n=e._cacheIndex;i._cacheIndex=n,t[n]=i,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,o=this._actionsByClip,a=o[r],l=a.knownActions,c=l[l.length-1],h=e._byClipCacheIndex;c._byClipCacheIndex=h,l[h]=c,l.pop(),e._byClipCacheIndex=null;const u=a.actionByRoot,d=(e._localRoot||this._root).uuid;delete u[d],l.length===0&&delete o[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let i=0,n=t.length;i!==n;++i){const r=t[i];--r.referenceCount===0&&this._removeInactiveBinding(r)}}_lendAction(e){const t=this._actions,i=e._cacheIndex,n=this._nActiveActions++,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_takeBackAction(e){const t=this._actions,i=e._cacheIndex,n=--this._nActiveActions,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_addInactiveBinding(e,t,i){const n=this._bindingsByRootAndName,r=this._bindings;let o=n[t];o===void 0&&(o={},n[t]=o),o[i]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){const t=this._bindings,i=e.binding,n=i.rootNode.uuid,r=i.path,o=this._bindingsByRootAndName,a=o[n],l=t[t.length-1],c=e._cacheIndex;l._cacheIndex=c,t[c]=l,t.pop(),delete a[r],Object.keys(a).length===0&&delete o[n]}_lendBinding(e){const t=this._bindings,i=e._cacheIndex,n=this._nActiveBindings++,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_takeBackBinding(e){const t=this._bindings,i=e._cacheIndex,n=--this._nActiveBindings,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let i=e[t];return i===void 0&&(i=new Jf(new Float32Array(2),new Float32Array(2),1,J1),i.__cacheIndex=t,e[t]=i),i}_takeBackControlInterpolant(e){const t=this._controlInterpolants,i=e.__cacheIndex,n=--this._nActiveControlInterpolants,r=t[n];e.__cacheIndex=n,t[n]=e,r.__cacheIndex=i,t[i]=r}clipAction(e,t,i){const n=t||this._root,r=n.uuid;let o=typeof e=="string"?ro.findByName(n,e):e;const a=o!==null?o.uuid:e,l=this._actionsByClip[a];let c=null;if(i===void 0&&(o!==null?i=o.blendMode:i=Gh),l!==void 0){const u=l.actionByRoot[r];if(u!==void 0&&u.blendMode===i)return u;c=l.knownActions[0],o===null&&(o=c._clip)}if(o===null)return null;const h=new u_(this,o,t,i);return this._bindAction(h,c),this._addInactiveAction(h,a,r),h}existingAction(e,t){const i=t||this._root,n=i.uuid,r=typeof e=="string"?ro.findByName(i,e):e,o=r?r.uuid:e,a=this._actionsByClip[o];return a!==void 0&&a.actionByRoot[n]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let i=t-1;i>=0;--i)e[i].stop();return this}update(e){e*=this.timeScale;const t=this._actions,i=this._nActiveActions,n=this.time+=e,r=Math.sign(e),o=this._accuIndex^=1;for(let c=0;c!==i;++c)t[c]._update(n,e,r,o);const a=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)a[c].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,i=e.uuid,n=this._actionsByClip,r=n[i];if(r!==void 0){const o=r.knownActions;for(let a=0,l=o.length;a!==l;++a){const c=o[a];this._deactivateAction(c);const h=c._cacheIndex,u=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,u._cacheIndex=h,t[h]=u,t.pop(),this._removeInactiveBindingsForAction(c)}delete n[i]}}uncacheRoot(e){const t=e.uuid,i=this._actionsByClip;for(const o in i){const a=i[o].actionByRoot,l=a[t];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const n=this._bindingsByRootAndName,r=n[t];if(r!==void 0)for(const o in r){const a=r[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){const i=this.existingAction(e,t);i!==null&&(this._deactivateAction(i),this._removeInactiveAction(i))}}class Q1 extends Vh{constructor(e=1,t=1,i=1,n={}){super(e,t,n),this.isRenderTarget3D=!0,this.depth=i,this.texture=new Hh(null,e,t,i),this.texture.isRenderTargetTexture=!0}}class $1 extends Vh{constructor(e=1,t=1,i=1,n={}){super(e,t,n),this.isRenderTargetArray=!0,this.depth=i,this.texture=new fl(null,e,t,i),this.texture.isRenderTargetTexture=!0}}class lp{constructor(e){this.value=e}clone(){return new lp(this.value.clone===void 0?this.value:this.value.clone())}}let eS=0;class tS extends br{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:eS++}),this.name="",this.usage=ja,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){this.dispatchEvent({type:"dispose"})}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let i=0,n=t.length;i<n;i++){const r=Array.isArray(t[i])?t[i]:[t[i]];for(let o=0;o<r.length;o++)this.uniforms.push(r[o].clone())}return this}clone(){return new this.constructor().copy(this)}}class Ph extends qh{constructor(e,t,i=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class nS{constructor(e,t,i,n,r){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=i,this.elementSize=n,this.count=r,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const Bm=new st;class du{constructor(e,t,i=0,n=1/0){this.ray=new ls(e,t),this.near=i,this.far=n,this.camera=null,this.layers=new Wh,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return Bm.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(Bm),this}intersectObject(e,t=!0,i=[]){return Qd(e,this,i,t),i.sort(zm),i}intersectObjects(e,t=!0,i=[]){for(let n=0,r=e.length;n<r;n++)Qd(e[n],this,i,t);return i.sort(zm),i}}function zm(s,e){return s.distance-e.distance}function Qd(s,e,t,i){let n=!0;if(s.layers.test(e.layers)&&s.raycast(e,t)===!1&&(n=!1),n===!0&&i===!0){const r=s.children;for(let o=0,a=r.length;o<a;o++)Qd(r[o],e,t,!0)}}class Ih{constructor(e=1,t=0,i=0){this.radius=e,this.phi=t,this.theta=i}set(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Tt(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+t*t+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(Tt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class iS{constructor(e=1,t=0,i=0){this.radius=e,this.theta=t,this.y=i}set(e,t,i){return this.radius=e,this.theta=t,this.y=i,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+i*i),this.theta=Math.atan2(e,i),this.y=t,this}clone(){return new this.constructor().copy(this)}}class cp{constructor(e,t,i,n){cp.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,t,i,n)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let i=0;i<4;i++)this.elements[i]=e[i+t];return this}set(e,t,i,n){const r=this.elements;return r[0]=e,r[2]=t,r[1]=i,r[3]=n,this}}const Gm=new xe;class rS{constructor(e=new xe(1/0,1/0),t=new xe(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=Gm.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Gm).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Vm=new L,lc=new L;class d_{constructor(e=new L,t=new L){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Vm.subVectors(e,this.start),lc.subVectors(this.end,this.start);const i=lc.dot(lc);let r=lc.dot(Vm)/i;return t&&(r=Tt(r,0,1)),r}closestPointToPoint(e,t,i){const n=this.closestPointToPointParameter(e,t);return this.delta(i).multiplyScalar(n).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const Hm=new L;class sS extends Lt{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const i=new yt,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,l=32;o<l;o++,a++){const c=o/l*Math.PI*2,h=a/l*Math.PI*2;n.push(Math.cos(c),Math.sin(c),1,Math.cos(h),Math.sin(h),1)}i.setAttribute("position",new qe(n,3));const r=new wn({fog:!1,toneMapped:!1});this.cone=new zi(i,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),Hm.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Hm),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Kr=new L,cc=new st,ld=new st;class oS extends zi{constructor(e){const t=f_(e),i=new yt,n=[],r=[],o=new ze(0,0,1),a=new ze(0,1,0);for(let c=0;c<t.length;c++){const h=t[c];h.parent&&h.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),r.push(o.r,o.g,o.b),r.push(a.r,a.g,a.b))}i.setAttribute("position",new qe(n,3)),i.setAttribute("color",new qe(r,3));const l=new wn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,i=this.geometry,n=i.getAttribute("position");ld.copy(this.root.matrixWorld).invert();for(let r=0,o=0;r<t.length;r++){const a=t[r];a.parent&&a.parent.isBone&&(cc.multiplyMatrices(ld,a.matrixWorld),Kr.setFromMatrixPosition(cc),n.setXYZ(o,Kr.x,Kr.y,Kr.z),cc.multiplyMatrices(ld,a.parent.matrixWorld),Kr.setFromMatrixPosition(cc),n.setXYZ(o+1,Kr.x,Kr.y,Kr.z),o+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function f_(s){const e=[];s.isBone===!0&&e.push(s);for(let t=0;t<s.children.length;t++)e.push(...f_(s.children[t]));return e}class aS extends ke{constructor(e,t,i){const n=new ao(t,4,2),r=new Bn({wireframe:!0,fog:!1,toneMapped:!1});super(n,r),this.light=e,this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const lS=new L,Wm=new ze,Xm=new ze;class cS extends Lt{constructor(e,t,i){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,this.type="HemisphereLightHelper";const n=new Ur(t);n.rotateY(Math.PI*.5),this.material=new Bn({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const r=n.getAttribute("position"),o=new Float32Array(r.count*3);n.setAttribute("color",new Ct(o,3)),this.add(new ke(n,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");Wm.copy(this.light.color),Xm.copy(this.light.groundColor);for(let i=0,n=t.count;i<n;i++){const r=i<n/2?Wm:Xm;t.setXYZ(i,r.r,r.g,r.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(lS.setFromMatrixPosition(this.light.matrixWorld).negate())}}class hS extends zi{constructor(e=10,t=10,i=4473924,n=8947848){i=new ze(i),n=new ze(n);const r=t/2,o=e/t,a=e/2,l=[],c=[];for(let d=0,f=0,p=-a;d<=t;d++,p+=o){l.push(-a,0,p,a,0,p),l.push(p,0,-a,p,0,a);const v=d===r?i:n;v.toArray(c,f),f+=3,v.toArray(c,f),f+=3,v.toArray(c,f),f+=3,v.toArray(c,f),f+=3}const h=new yt;h.setAttribute("position",new qe(l,3)),h.setAttribute("color",new qe(c,3));const u=new wn({vertexColors:!0,toneMapped:!1});super(h,u),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class uS extends zi{constructor(e=10,t=16,i=8,n=64,r=4473924,o=8947848){r=new ze(r),o=new ze(o);const a=[],l=[];if(t>1)for(let u=0;u<t;u++){const d=u/t*(Math.PI*2),f=Math.sin(d)*e,p=Math.cos(d)*e;a.push(0,0,0),a.push(f,0,p);const v=u&1?r:o;l.push(v.r,v.g,v.b),l.push(v.r,v.g,v.b)}for(let u=0;u<i;u++){const d=u&1?r:o,f=e-e/i*u;for(let p=0;p<n;p++){let v=p/n*(Math.PI*2),m=Math.sin(v)*f,g=Math.cos(v)*f;a.push(m,0,g),l.push(d.r,d.g,d.b),v=(p+1)/n*(Math.PI*2),m=Math.sin(v)*f,g=Math.cos(v)*f,a.push(m,0,g),l.push(d.r,d.g,d.b)}}const c=new yt;c.setAttribute("position",new qe(a,3)),c.setAttribute("color",new qe(l,3));const h=new wn({vertexColors:!0,toneMapped:!1});super(c,h),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const Ym=new L,hc=new L,jm=new L;class dS extends Lt{constructor(e,t,i){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,this.type="DirectionalLightHelper",t===void 0&&(t=1);let n=new yt;n.setAttribute("position",new qe([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new wn({fog:!1,toneMapped:!1});this.lightPlane=new Yn(n,r),this.add(this.lightPlane),n=new yt,n.setAttribute("position",new qe([0,0,0,0,0,1],3)),this.targetLine=new Yn(n,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),Ym.setFromMatrixPosition(this.light.matrixWorld),hc.setFromMatrixPosition(this.light.target.matrixWorld),jm.subVectors(hc,Ym),this.lightPlane.lookAt(hc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(hc),this.targetLine.scale.z=jm.length()}}const uc=new L,gn=new Xh;class fS extends zi{constructor(e){const t=new yt,i=new wn({color:16777215,vertexColors:!0,toneMapped:!1}),n=[],r=[],o={};a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4");function a(p,v){l(p),l(v)}function l(p){n.push(0,0,0),r.push(0,0,0),o[p]===void 0&&(o[p]=[]),o[p].push(n.length/3-1)}t.setAttribute("position",new qe(n,3)),t.setAttribute("color",new qe(r,3)),super(t,i),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update();const c=new ze(16755200),h=new ze(16711680),u=new ze(43775),d=new ze(16777215),f=new ze(3355443);this.setColors(c,h,u,d,f)}setColors(e,t,i,n,r){const a=this.geometry.getAttribute("color");a.setXYZ(0,e.r,e.g,e.b),a.setXYZ(1,e.r,e.g,e.b),a.setXYZ(2,e.r,e.g,e.b),a.setXYZ(3,e.r,e.g,e.b),a.setXYZ(4,e.r,e.g,e.b),a.setXYZ(5,e.r,e.g,e.b),a.setXYZ(6,e.r,e.g,e.b),a.setXYZ(7,e.r,e.g,e.b),a.setXYZ(8,e.r,e.g,e.b),a.setXYZ(9,e.r,e.g,e.b),a.setXYZ(10,e.r,e.g,e.b),a.setXYZ(11,e.r,e.g,e.b),a.setXYZ(12,e.r,e.g,e.b),a.setXYZ(13,e.r,e.g,e.b),a.setXYZ(14,e.r,e.g,e.b),a.setXYZ(15,e.r,e.g,e.b),a.setXYZ(16,e.r,e.g,e.b),a.setXYZ(17,e.r,e.g,e.b),a.setXYZ(18,e.r,e.g,e.b),a.setXYZ(19,e.r,e.g,e.b),a.setXYZ(20,e.r,e.g,e.b),a.setXYZ(21,e.r,e.g,e.b),a.setXYZ(22,e.r,e.g,e.b),a.setXYZ(23,e.r,e.g,e.b),a.setXYZ(24,t.r,t.g,t.b),a.setXYZ(25,t.r,t.g,t.b),a.setXYZ(26,t.r,t.g,t.b),a.setXYZ(27,t.r,t.g,t.b),a.setXYZ(28,t.r,t.g,t.b),a.setXYZ(29,t.r,t.g,t.b),a.setXYZ(30,t.r,t.g,t.b),a.setXYZ(31,t.r,t.g,t.b),a.setXYZ(32,i.r,i.g,i.b),a.setXYZ(33,i.r,i.g,i.b),a.setXYZ(34,i.r,i.g,i.b),a.setXYZ(35,i.r,i.g,i.b),a.setXYZ(36,i.r,i.g,i.b),a.setXYZ(37,i.r,i.g,i.b),a.setXYZ(38,n.r,n.g,n.b),a.setXYZ(39,n.r,n.g,n.b),a.setXYZ(40,r.r,r.g,r.b),a.setXYZ(41,r.r,r.g,r.b),a.setXYZ(42,r.r,r.g,r.b),a.setXYZ(43,r.r,r.g,r.b),a.setXYZ(44,r.r,r.g,r.b),a.setXYZ(45,r.r,r.g,r.b),a.setXYZ(46,r.r,r.g,r.b),a.setXYZ(47,r.r,r.g,r.b),a.setXYZ(48,r.r,r.g,r.b),a.setXYZ(49,r.r,r.g,r.b),a.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,i=1,n=1;gn.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);const r=this.camera.coordinateSystem===rr?-1:0;xn("c",t,e,gn,0,0,r),xn("t",t,e,gn,0,0,1),xn("n1",t,e,gn,-1,-1,r),xn("n2",t,e,gn,i,-1,r),xn("n3",t,e,gn,-1,n,r),xn("n4",t,e,gn,i,n,r),xn("f1",t,e,gn,-1,-1,1),xn("f2",t,e,gn,i,-1,1),xn("f3",t,e,gn,-1,n,1),xn("f4",t,e,gn,i,n,1),xn("u1",t,e,gn,i*.7,n*1.1,r),xn("u2",t,e,gn,-1*.7,n*1.1,r),xn("u3",t,e,gn,0,n*2,r),xn("cf1",t,e,gn,-1,0,1),xn("cf2",t,e,gn,i,0,1),xn("cf3",t,e,gn,0,-1,1),xn("cf4",t,e,gn,0,n,1),xn("cn1",t,e,gn,-1,0,r),xn("cn2",t,e,gn,i,0,r),xn("cn3",t,e,gn,0,-1,r),xn("cn4",t,e,gn,0,n,r),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function xn(s,e,t,i,n,r,o){uc.set(n,r,o).unproject(i);const a=e[s];if(a!==void 0){const l=t.getAttribute("position");for(let c=0,h=a.length;c<h;c++)l.setXYZ(a[c],uc.x,uc.y,uc.z)}}const dc=new Mn;class pS extends zi{constructor(e,t=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(8*3),r=new yt;r.setIndex(new Ct(i,1)),r.setAttribute("position",new Ct(n,3)),super(r,new wn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(){if(this.object!==void 0&&dc.setFromObject(this.object),dc.isEmpty())return;const e=dc.min,t=dc.max,i=this.geometry.attributes.position,n=i.array;n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=e.x,n[4]=t.y,n[5]=t.z,n[6]=e.x,n[7]=e.y,n[8]=t.z,n[9]=t.x,n[10]=e.y,n[11]=t.z,n[12]=t.x,n[13]=t.y,n[14]=e.z,n[15]=e.x,n[16]=t.y,n[17]=e.z,n[18]=e.x,n[19]=e.y,n[20]=e.z,n[21]=t.x,n[22]=e.y,n[23]=e.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class mS extends zi{constructor(e,t=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],r=new yt;r.setIndex(new Ct(i,1)),r.setAttribute("position",new qe(n,3)),super(r,new wn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class gS extends Yn{constructor(e,t=1,i=16776960){const n=i,r=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],o=new yt;o.setAttribute("position",new qe(r,3)),o.computeBoundingSphere(),super(o,new wn({color:n,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const a=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],l=new yt;l.setAttribute("position",new qe(a,3)),l.computeBoundingSphere(),this.add(new ke(l,new Bn({color:n,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const qm=new L;let fc,cd;class vS extends Lt{constructor(e=new L(0,0,1),t=new L(0,0,0),i=1,n=16776960,r=i*.2,o=r*.2){super(),this.type="ArrowHelper",fc===void 0&&(fc=new yt,fc.setAttribute("position",new qe([0,0,0,0,1,0],3)),cd=new An(0,.5,1,5,1),cd.translate(0,-.5,0)),this.position.copy(t),this.line=new Yn(fc,new wn({color:n,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new ke(cd,new Bn({color:n,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(i,r,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{qm.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(qm,t)}}setLength(e,t=e*.2,i=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(i,t,i),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class _S extends zi{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],i=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],n=new yt;n.setAttribute("position",new qe(t,3)),n.setAttribute("color",new qe(i,3));const r=new wn({vertexColors:!0,toneMapped:!1});super(n,r),this.type="AxesHelper"}setColors(e,t,i){const n=new ze,r=this.geometry.attributes.color.array;return n.set(e),n.toArray(r,0),n.toArray(r,3),n.set(t),n.toArray(r,6),n.toArray(r,9),n.set(i),n.toArray(r,12),n.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class yS{constructor(){this.type="ShapePath",this.color=new ze,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Ja,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,i,n){return this.currentPath.quadraticCurveTo(e,t,i,n),this}bezierCurveTo(e,t,i,n,r,o){return this.currentPath.bezierCurveTo(e,t,i,n,r,o),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(g){const y=[];for(let x=0,_=g.length;x<_;x++){const E=g[x],M=new Js;M.curves=E.curves,y.push(M)}return y}function i(g,y){const x=y.length;let _=!1;for(let E=x-1,M=0;M<x;E=M++){let S=y[E],T=y[M],w=T.x-S.x,b=T.y-S.y;if(Math.abs(b)>Number.EPSILON){if(b<0&&(S=y[M],w=-w,T=y[E],b=-b),g.y<S.y||g.y>T.y)continue;if(g.y===S.y){if(g.x===S.x)return!0}else{const D=b*(g.x-S.x)-w*(g.y-S.y);if(D===0)return!0;if(D<0)continue;_=!_}}else{if(g.y!==S.y)continue;if(T.x<=g.x&&g.x<=S.x||S.x<=g.x&&g.x<=T.x)return!0}}return _}const n=gr.isClockWise,r=this.subPaths;if(r.length===0)return[];let o,a,l;const c=[];if(r.length===1)return a=r[0],l=new Js,l.curves=a.curves,c.push(l),c;let h=!n(r[0].getPoints());h=e?!h:h;const u=[],d=[];let f=[],p=0,v;d[p]=void 0,f[p]=[];for(let g=0,y=r.length;g<y;g++)a=r[g],v=a.getPoints(),o=n(v),o=e?!o:o,o?(!h&&d[p]&&p++,d[p]={s:new Js,p:v},d[p].s.curves=a.curves,h&&p++,f[p]=[]):f[p].push({h:a,p:v[0]});if(!d[0])return t(r);if(d.length>1){let g=!1,y=0;for(let x=0,_=d.length;x<_;x++)u[x]=[];for(let x=0,_=d.length;x<_;x++){const E=f[x];for(let M=0;M<E.length;M++){const S=E[M];let T=!0;for(let w=0;w<d.length;w++)i(S.p,d[w].p)&&(x!==w&&y++,T?(T=!1,u[w].push(S)):g=!0);T&&u[x].push(S)}}y>0&&g===!1&&(f=u)}let m;for(let g=0,y=d.length;g<y;g++){l=d[g].s,c.push(l),m=f[g];for(let x=0,_=m.length;x<_;x++)l.holes.push(m[x].h)}return c}}class fu extends br{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(e){if(e===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=e}disconnect(){}dispose(){}update(){}}function xS(s,e){const t=s.image&&s.image.width?s.image.width/s.image.height:1;return t>e?(s.repeat.x=1,s.repeat.y=t/e,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2):(s.repeat.x=e/t,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0),s}function bS(s,e){const t=s.image&&s.image.width?s.image.width/s.image.height:1;return t>e?(s.repeat.x=e/t,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0):(s.repeat.x=1,s.repeat.y=t/e,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2),s}function SS(s){return s.repeat.x=1,s.repeat.y=1,s.offset.x=0,s.offset.y=0,s}function $d(s,e,t,i){const n=MS(i);switch(t){case Tf:return s*e;case Cf:return s*e;case Rf:return s*e*2;case kh:return s*e/n.components*n.byteLength;case dl:return s*e/n.components*n.byteLength;case Pf:return s*e*2/n.components*n.byteLength;case Bh:return s*e*2/n.components*n.byteLength;case Af:return s*e*3/n.components*n.byteLength;case hi:return s*e*4/n.components*n.byteLength;case zh:return s*e*4/n.components*n.byteLength;case Ra:case Pa:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*8;case Ia:case Da:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case eh:case nh:return Math.max(s,16)*Math.max(e,8)/4;case $c:case th:return Math.max(s,8)*Math.max(e,8)/2;case ih:case rh:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*8;case sh:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case oh:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case ah:return Math.floor((s+4)/5)*Math.floor((e+3)/4)*16;case lh:return Math.floor((s+4)/5)*Math.floor((e+4)/5)*16;case ch:return Math.floor((s+5)/6)*Math.floor((e+4)/5)*16;case hh:return Math.floor((s+5)/6)*Math.floor((e+5)/6)*16;case uh:return Math.floor((s+7)/8)*Math.floor((e+4)/5)*16;case dh:return Math.floor((s+7)/8)*Math.floor((e+5)/6)*16;case fh:return Math.floor((s+7)/8)*Math.floor((e+7)/8)*16;case ph:return Math.floor((s+9)/10)*Math.floor((e+4)/5)*16;case mh:return Math.floor((s+9)/10)*Math.floor((e+5)/6)*16;case gh:return Math.floor((s+9)/10)*Math.floor((e+7)/8)*16;case vh:return Math.floor((s+9)/10)*Math.floor((e+9)/10)*16;case _h:return Math.floor((s+11)/12)*Math.floor((e+9)/10)*16;case yh:return Math.floor((s+11)/12)*Math.floor((e+11)/12)*16;case La:case xh:case bh:return Math.ceil(s/4)*Math.ceil(e/4)*16;case If:case Sh:return Math.ceil(s/4)*Math.ceil(e/4)*8;case Mh:case wh:return Math.ceil(s/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function MS(s){switch(s){case _r:case Mf:return{byteLength:1,components:1};case zo:case wf:case qo:return{byteLength:2,components:1};case Oh:case Fh:return{byteLength:2,components:4};case Gr:case Nh:case wi:return{byteLength:4,components:1};case Ef:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${s}.`)}class wS{static contain(e,t){return xS(e,t)}static cover(e,t){return bS(e,t)}static fill(e){return SS(e)}static getByteLength(e,t,i,n){return $d(e,t,i,n)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:hl}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=hl);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function p_(){let s=null,e=!1,t=null,i=null;function n(r,o){t(r,o),i=s.requestAnimationFrame(n)}return{start:function(){e!==!0&&t!==null&&(i=s.requestAnimationFrame(n),e=!0)},stop:function(){s.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){s=r}}}function ES(s){const e=new WeakMap;function t(a,l){const c=a.array,h=a.usage,u=c.byteLength,d=s.createBuffer();s.bindBuffer(l,d),s.bufferData(l,c,h),a.onUploadCallback();let f;if(c instanceof Float32Array)f=s.FLOAT;else if(c instanceof Uint16Array)a.isFloat16BufferAttribute?f=s.HALF_FLOAT:f=s.UNSIGNED_SHORT;else if(c instanceof Int16Array)f=s.SHORT;else if(c instanceof Uint32Array)f=s.UNSIGNED_INT;else if(c instanceof Int32Array)f=s.INT;else if(c instanceof Int8Array)f=s.BYTE;else if(c instanceof Uint8Array)f=s.UNSIGNED_BYTE;else if(c instanceof Uint8ClampedArray)f=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+c);return{buffer:d,type:f,bytesPerElement:c.BYTES_PER_ELEMENT,version:a.version,size:u}}function i(a,l,c){const h=l.array,u=l.updateRanges;if(s.bindBuffer(c,a),u.length===0)s.bufferSubData(c,0,h);else{u.sort((f,p)=>f.start-p.start);let d=0;for(let f=1;f<u.length;f++){const p=u[d],v=u[f];v.start<=p.start+p.count+1?p.count=Math.max(p.count,v.start+v.count-p.start):(++d,u[d]=v)}u.length=d+1;for(let f=0,p=u.length;f<p;f++){const v=u[f];s.bufferSubData(c,v.start*h.BYTES_PER_ELEMENT,h,v.start,v.count)}l.clearUpdateRanges()}l.onUploadCallback()}function n(a){return a.isInterleavedBufferAttribute&&(a=a.data),e.get(a)}function r(a){a.isInterleavedBufferAttribute&&(a=a.data);const l=e.get(a);l&&(s.deleteBuffer(l.buffer),e.delete(a))}function o(a,l){if(a.isInterleavedBufferAttribute&&(a=a.data),a.isGLBufferAttribute){const h=e.get(a);(!h||h.version<a.version)&&e.set(a,{buffer:a.buffer,type:a.type,bytesPerElement:a.elementSize,version:a.version});return}const c=e.get(a);if(c===void 0)e.set(a,t(a,l));else if(c.version<a.version){if(c.size!==a.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");i(c.buffer,a,l),c.version=a.version}}return{get:n,remove:r,update:o}}var TS=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,AS=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,CS=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,RS=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,PS=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,IS=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,DS=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,LS=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,US=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,NS=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,OS=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,FS=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,kS=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,BS=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,zS=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,GS=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,VS=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,HS=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,WS=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,XS=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,YS=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,jS=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,qS=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,ZS=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,JS=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,KS=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,QS=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,$S=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,eM=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,tM=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,nM="gl_FragColor = linearToOutputTexel( gl_FragColor );",iM=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,rM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,sM=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,oM=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,aM=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,lM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,cM=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,hM=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,uM=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,dM=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,fM=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,pM=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,mM=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,gM=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,vM=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,_M=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,yM=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,xM=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,bM=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,SM=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,MM=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,wM=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,EM=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,TM=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,AM=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,CM=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,RM=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,PM=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,IM=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,DM=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,LM=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,UM=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,NM=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,OM=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,FM=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,kM=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,BM=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,zM=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,GM=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,VM=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,HM=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,WM=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,XM=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,YM=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,jM=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,qM=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,ZM=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,JM=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,KM=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,QM=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,$M=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,ew=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,tw=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,nw=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,iw=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,rw=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,sw=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,ow=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,aw=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,lw=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,cw=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,hw=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,uw=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,dw=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,fw=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,pw=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,mw=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,gw=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,vw=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,_w=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,yw=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,xw=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,bw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Sw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Mw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,ww=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const Ew=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Tw=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Aw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Cw=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Rw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Pw=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Iw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Dw=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,Lw=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Uw=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Nw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Ow=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Fw=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,kw=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Bw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,zw=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Gw=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Vw=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Hw=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Ww=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Xw=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Yw=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,jw=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,qw=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Zw=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Jw=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Kw=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Qw=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,$w=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,eE=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,tE=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,nE=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,iE=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,rE=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,_t={alphahash_fragment:TS,alphahash_pars_fragment:AS,alphamap_fragment:CS,alphamap_pars_fragment:RS,alphatest_fragment:PS,alphatest_pars_fragment:IS,aomap_fragment:DS,aomap_pars_fragment:LS,batching_pars_vertex:US,batching_vertex:NS,begin_vertex:OS,beginnormal_vertex:FS,bsdfs:kS,iridescence_fragment:BS,bumpmap_pars_fragment:zS,clipping_planes_fragment:GS,clipping_planes_pars_fragment:VS,clipping_planes_pars_vertex:HS,clipping_planes_vertex:WS,color_fragment:XS,color_pars_fragment:YS,color_pars_vertex:jS,color_vertex:qS,common:ZS,cube_uv_reflection_fragment:JS,defaultnormal_vertex:KS,displacementmap_pars_vertex:QS,displacementmap_vertex:$S,emissivemap_fragment:eM,emissivemap_pars_fragment:tM,colorspace_fragment:nM,colorspace_pars_fragment:iM,envmap_fragment:rM,envmap_common_pars_fragment:sM,envmap_pars_fragment:oM,envmap_pars_vertex:aM,envmap_physical_pars_fragment:_M,envmap_vertex:lM,fog_vertex:cM,fog_pars_vertex:hM,fog_fragment:uM,fog_pars_fragment:dM,gradientmap_pars_fragment:fM,lightmap_pars_fragment:pM,lights_lambert_fragment:mM,lights_lambert_pars_fragment:gM,lights_pars_begin:vM,lights_toon_fragment:yM,lights_toon_pars_fragment:xM,lights_phong_fragment:bM,lights_phong_pars_fragment:SM,lights_physical_fragment:MM,lights_physical_pars_fragment:wM,lights_fragment_begin:EM,lights_fragment_maps:TM,lights_fragment_end:AM,logdepthbuf_fragment:CM,logdepthbuf_pars_fragment:RM,logdepthbuf_pars_vertex:PM,logdepthbuf_vertex:IM,map_fragment:DM,map_pars_fragment:LM,map_particle_fragment:UM,map_particle_pars_fragment:NM,metalnessmap_fragment:OM,metalnessmap_pars_fragment:FM,morphinstance_vertex:kM,morphcolor_vertex:BM,morphnormal_vertex:zM,morphtarget_pars_vertex:GM,morphtarget_vertex:VM,normal_fragment_begin:HM,normal_fragment_maps:WM,normal_pars_fragment:XM,normal_pars_vertex:YM,normal_vertex:jM,normalmap_pars_fragment:qM,clearcoat_normal_fragment_begin:ZM,clearcoat_normal_fragment_maps:JM,clearcoat_pars_fragment:KM,iridescence_pars_fragment:QM,opaque_fragment:$M,packing:ew,premultiplied_alpha_fragment:tw,project_vertex:nw,dithering_fragment:iw,dithering_pars_fragment:rw,roughnessmap_fragment:sw,roughnessmap_pars_fragment:ow,shadowmap_pars_fragment:aw,shadowmap_pars_vertex:lw,shadowmap_vertex:cw,shadowmask_pars_fragment:hw,skinbase_vertex:uw,skinning_pars_vertex:dw,skinning_vertex:fw,skinnormal_vertex:pw,specularmap_fragment:mw,specularmap_pars_fragment:gw,tonemapping_fragment:vw,tonemapping_pars_fragment:_w,transmission_fragment:yw,transmission_pars_fragment:xw,uv_pars_fragment:bw,uv_pars_vertex:Sw,uv_vertex:Mw,worldpos_vertex:ww,background_vert:Ew,background_frag:Tw,backgroundCube_vert:Aw,backgroundCube_frag:Cw,cube_vert:Rw,cube_frag:Pw,depth_vert:Iw,depth_frag:Dw,distanceRGBA_vert:Lw,distanceRGBA_frag:Uw,equirect_vert:Nw,equirect_frag:Ow,linedashed_vert:Fw,linedashed_frag:kw,meshbasic_vert:Bw,meshbasic_frag:zw,meshlambert_vert:Gw,meshlambert_frag:Vw,meshmatcap_vert:Hw,meshmatcap_frag:Ww,meshnormal_vert:Xw,meshnormal_frag:Yw,meshphong_vert:jw,meshphong_frag:qw,meshphysical_vert:Zw,meshphysical_frag:Jw,meshtoon_vert:Kw,meshtoon_frag:Qw,points_vert:$w,points_frag:eE,shadow_vert:tE,shadow_frag:nE,sprite_vert:iE,sprite_frag:rE},Je={common:{diffuse:{value:new ze(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Et},alphaMap:{value:null},alphaMapTransform:{value:new Et},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Et}},envmap:{envMap:{value:null},envMapRotation:{value:new Et},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Et}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Et}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Et},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Et},normalScale:{value:new xe(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Et},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Et}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Et}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Et}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ze(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ze(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Et},alphaTest:{value:0},uvTransform:{value:new Et}},sprite:{diffuse:{value:new ze(16777215)},opacity:{value:1},center:{value:new xe(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Et},alphaMap:{value:null},alphaMapTransform:{value:new Et},alphaTest:{value:0}}},li={basic:{uniforms:ai([Je.common,Je.specularmap,Je.envmap,Je.aomap,Je.lightmap,Je.fog]),vertexShader:_t.meshbasic_vert,fragmentShader:_t.meshbasic_frag},lambert:{uniforms:ai([Je.common,Je.specularmap,Je.envmap,Je.aomap,Je.lightmap,Je.emissivemap,Je.bumpmap,Je.normalmap,Je.displacementmap,Je.fog,Je.lights,{emissive:{value:new ze(0)}}]),vertexShader:_t.meshlambert_vert,fragmentShader:_t.meshlambert_frag},phong:{uniforms:ai([Je.common,Je.specularmap,Je.envmap,Je.aomap,Je.lightmap,Je.emissivemap,Je.bumpmap,Je.normalmap,Je.displacementmap,Je.fog,Je.lights,{emissive:{value:new ze(0)},specular:{value:new ze(1118481)},shininess:{value:30}}]),vertexShader:_t.meshphong_vert,fragmentShader:_t.meshphong_frag},standard:{uniforms:ai([Je.common,Je.envmap,Je.aomap,Je.lightmap,Je.emissivemap,Je.bumpmap,Je.normalmap,Je.displacementmap,Je.roughnessmap,Je.metalnessmap,Je.fog,Je.lights,{emissive:{value:new ze(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:_t.meshphysical_vert,fragmentShader:_t.meshphysical_frag},toon:{uniforms:ai([Je.common,Je.aomap,Je.lightmap,Je.emissivemap,Je.bumpmap,Je.normalmap,Je.displacementmap,Je.gradientmap,Je.fog,Je.lights,{emissive:{value:new ze(0)}}]),vertexShader:_t.meshtoon_vert,fragmentShader:_t.meshtoon_frag},matcap:{uniforms:ai([Je.common,Je.bumpmap,Je.normalmap,Je.displacementmap,Je.fog,{matcap:{value:null}}]),vertexShader:_t.meshmatcap_vert,fragmentShader:_t.meshmatcap_frag},points:{uniforms:ai([Je.points,Je.fog]),vertexShader:_t.points_vert,fragmentShader:_t.points_frag},dashed:{uniforms:ai([Je.common,Je.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:_t.linedashed_vert,fragmentShader:_t.linedashed_frag},depth:{uniforms:ai([Je.common,Je.displacementmap]),vertexShader:_t.depth_vert,fragmentShader:_t.depth_frag},normal:{uniforms:ai([Je.common,Je.bumpmap,Je.normalmap,Je.displacementmap,{opacity:{value:1}}]),vertexShader:_t.meshnormal_vert,fragmentShader:_t.meshnormal_frag},sprite:{uniforms:ai([Je.sprite,Je.fog]),vertexShader:_t.sprite_vert,fragmentShader:_t.sprite_frag},background:{uniforms:{uvTransform:{value:new Et},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:_t.background_vert,fragmentShader:_t.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Et}},vertexShader:_t.backgroundCube_vert,fragmentShader:_t.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:_t.cube_vert,fragmentShader:_t.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:_t.equirect_vert,fragmentShader:_t.equirect_frag},distanceRGBA:{uniforms:ai([Je.common,Je.displacementmap,{referencePosition:{value:new L},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:_t.distanceRGBA_vert,fragmentShader:_t.distanceRGBA_frag},shadow:{uniforms:ai([Je.lights,Je.fog,{color:{value:new ze(0)},opacity:{value:1}}]),vertexShader:_t.shadow_vert,fragmentShader:_t.shadow_frag}};li.physical={uniforms:ai([li.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Et},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Et},clearcoatNormalScale:{value:new xe(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Et},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Et},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Et},sheen:{value:0},sheenColor:{value:new ze(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Et},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Et},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Et},transmissionSamplerSize:{value:new xe},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Et},attenuationDistance:{value:0},attenuationColor:{value:new ze(0)},specularColor:{value:new ze(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Et},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Et},anisotropyVector:{value:new xe},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Et}}]),vertexShader:_t.meshphysical_vert,fragmentShader:_t.meshphysical_frag};const pc={r:0,b:0,g:0},Cs=new Ei,sE=new st;function oE(s,e,t,i,n,r,o){const a=new ze(0);let l=r===!0?0:1,c,h,u=null,d=0,f=null;function p(x){let _=x.isScene===!0?x.background:null;return _&&_.isTexture&&(_=(x.backgroundBlurriness>0?t:e).get(_)),_}function v(x){let _=!1;const E=p(x);E===null?g(a,l):E&&E.isColor&&(g(E,1),_=!0);const M=s.xr.getEnvironmentBlendMode();M==="additive"?i.buffers.color.setClear(0,0,0,1,o):M==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,o),(s.autoClear||_)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil))}function m(x,_){const E=p(_);E&&(E.isCubeTexture||E.mapping===jo)?(h===void 0&&(h=new ke(new vn(1,1,1),new Ti({name:"BackgroundCubeMaterial",uniforms:Xo(li.backgroundCube.uniforms),vertexShader:li.backgroundCube.vertexShader,fragmentShader:li.backgroundCube.fragmentShader,side:ni,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(M,S,T){this.matrixWorld.copyPosition(T.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(h)),Cs.copy(_.backgroundRotation),Cs.x*=-1,Cs.y*=-1,Cs.z*=-1,E.isCubeTexture&&E.isRenderTargetTexture===!1&&(Cs.y*=-1,Cs.z*=-1),h.material.uniforms.envMap.value=E,h.material.uniforms.flipEnvMap.value=E.isCubeTexture&&E.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=_.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(sE.makeRotationFromEuler(Cs)),h.material.toneMapped=Nt.getTransfer(E.colorSpace)!==Zt,(u!==E||d!==E.version||f!==s.toneMapping)&&(h.material.needsUpdate=!0,u=E,d=E.version,f=s.toneMapping),h.layers.enableAll(),x.unshift(h,h.geometry,h.material,0,0,null)):E&&E.isTexture&&(c===void 0&&(c=new ke(new or(2,2),new Ti({name:"BackgroundMaterial",uniforms:Xo(li.background.uniforms),vertexShader:li.background.vertexShader,fragmentShader:li.background.fragmentShader,side:vr,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(c)),c.material.uniforms.t2D.value=E,c.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,c.material.toneMapped=Nt.getTransfer(E.colorSpace)!==Zt,E.matrixAutoUpdate===!0&&E.updateMatrix(),c.material.uniforms.uvTransform.value.copy(E.matrix),(u!==E||d!==E.version||f!==s.toneMapping)&&(c.material.needsUpdate=!0,u=E,d=E.version,f=s.toneMapping),c.layers.enableAll(),x.unshift(c,c.geometry,c.material,0,0,null))}function g(x,_){x.getRGB(pc,Mv(s)),i.buffers.color.setClear(pc.r,pc.g,pc.b,_,o)}function y(){h!==void 0&&(h.geometry.dispose(),h.material.dispose(),h=void 0),c!==void 0&&(c.geometry.dispose(),c.material.dispose(),c=void 0)}return{getClearColor:function(){return a},setClearColor:function(x,_=1){a.set(x),l=_,g(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(x){l=x,g(a,l)},render:v,addToRenderList:m,dispose:y}}function aE(s,e){const t=s.getParameter(s.MAX_VERTEX_ATTRIBS),i={},n=d(null);let r=n,o=!1;function a(b,D,I,F,V){let J=!1;const O=u(F,I,D);r!==O&&(r=O,c(r.object)),J=f(b,F,I,V),J&&p(b,F,I,V),V!==null&&e.update(V,s.ELEMENT_ARRAY_BUFFER),(J||o)&&(o=!1,_(b,D,I,F),V!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,e.get(V).buffer))}function l(){return s.createVertexArray()}function c(b){return s.bindVertexArray(b)}function h(b){return s.deleteVertexArray(b)}function u(b,D,I){const F=I.wireframe===!0;let V=i[b.id];V===void 0&&(V={},i[b.id]=V);let J=V[D.id];J===void 0&&(J={},V[D.id]=J);let O=J[F];return O===void 0&&(O=d(l()),J[F]=O),O}function d(b){const D=[],I=[],F=[];for(let V=0;V<t;V++)D[V]=0,I[V]=0,F[V]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:D,enabledAttributes:I,attributeDivisors:F,object:b,attributes:{},index:null}}function f(b,D,I,F){const V=r.attributes,J=D.attributes;let O=0;const ee=I.getAttributes();for(const Y in ee)if(ee[Y].location>=0){const $=V[Y];let U=J[Y];if(U===void 0&&(Y==="instanceMatrix"&&b.instanceMatrix&&(U=b.instanceMatrix),Y==="instanceColor"&&b.instanceColor&&(U=b.instanceColor)),$===void 0||$.attribute!==U||U&&$.data!==U.data)return!0;O++}return r.attributesNum!==O||r.index!==F}function p(b,D,I,F){const V={},J=D.attributes;let O=0;const ee=I.getAttributes();for(const Y in ee)if(ee[Y].location>=0){let $=J[Y];$===void 0&&(Y==="instanceMatrix"&&b.instanceMatrix&&($=b.instanceMatrix),Y==="instanceColor"&&b.instanceColor&&($=b.instanceColor));const U={};U.attribute=$,$&&$.data&&(U.data=$.data),V[Y]=U,O++}r.attributes=V,r.attributesNum=O,r.index=F}function v(){const b=r.newAttributes;for(let D=0,I=b.length;D<I;D++)b[D]=0}function m(b){g(b,0)}function g(b,D){const I=r.newAttributes,F=r.enabledAttributes,V=r.attributeDivisors;I[b]=1,F[b]===0&&(s.enableVertexAttribArray(b),F[b]=1),V[b]!==D&&(s.vertexAttribDivisor(b,D),V[b]=D)}function y(){const b=r.newAttributes,D=r.enabledAttributes;for(let I=0,F=D.length;I<F;I++)D[I]!==b[I]&&(s.disableVertexAttribArray(I),D[I]=0)}function x(b,D,I,F,V,J,O){O===!0?s.vertexAttribIPointer(b,D,I,V,J):s.vertexAttribPointer(b,D,I,F,V,J)}function _(b,D,I,F){v();const V=F.attributes,J=I.getAttributes(),O=D.defaultAttributeValues;for(const ee in J){const Y=J[ee];if(Y.location>=0){let j=V[ee];if(j===void 0&&(ee==="instanceMatrix"&&b.instanceMatrix&&(j=b.instanceMatrix),ee==="instanceColor"&&b.instanceColor&&(j=b.instanceColor)),j!==void 0){const $=j.normalized,U=j.itemSize,Z=e.get(j);if(Z===void 0)continue;const K=Z.buffer,k=Z.type,H=Z.bytesPerElement,q=k===s.INT||k===s.UNSIGNED_INT||j.gpuType===Nh;if(j.isInterleavedBufferAttribute){const W=j.data,ne=W.stride,ge=j.offset;if(W.isInstancedInterleavedBuffer){for(let ye=0;ye<Y.locationSize;ye++)g(Y.location+ye,W.meshPerAttribute);b.isInstancedMesh!==!0&&F._maxInstanceCount===void 0&&(F._maxInstanceCount=W.meshPerAttribute*W.count)}else for(let ye=0;ye<Y.locationSize;ye++)m(Y.location+ye);s.bindBuffer(s.ARRAY_BUFFER,K);for(let ye=0;ye<Y.locationSize;ye++)x(Y.location+ye,U/Y.locationSize,k,$,ne*H,(ge+U/Y.locationSize*ye)*H,q)}else{if(j.isInstancedBufferAttribute){for(let W=0;W<Y.locationSize;W++)g(Y.location+W,j.meshPerAttribute);b.isInstancedMesh!==!0&&F._maxInstanceCount===void 0&&(F._maxInstanceCount=j.meshPerAttribute*j.count)}else for(let W=0;W<Y.locationSize;W++)m(Y.location+W);s.bindBuffer(s.ARRAY_BUFFER,K);for(let W=0;W<Y.locationSize;W++)x(Y.location+W,U/Y.locationSize,k,$,U*H,U/Y.locationSize*W*H,q)}}else if(O!==void 0){const $=O[ee];if($!==void 0)switch($.length){case 2:s.vertexAttrib2fv(Y.location,$);break;case 3:s.vertexAttrib3fv(Y.location,$);break;case 4:s.vertexAttrib4fv(Y.location,$);break;default:s.vertexAttrib1fv(Y.location,$)}}}}y()}function E(){T();for(const b in i){const D=i[b];for(const I in D){const F=D[I];for(const V in F)h(F[V].object),delete F[V];delete D[I]}delete i[b]}}function M(b){if(i[b.id]===void 0)return;const D=i[b.id];for(const I in D){const F=D[I];for(const V in F)h(F[V].object),delete F[V];delete D[I]}delete i[b.id]}function S(b){for(const D in i){const I=i[D];if(I[b.id]===void 0)continue;const F=I[b.id];for(const V in F)h(F[V].object),delete F[V];delete I[b.id]}}function T(){w(),o=!0,r!==n&&(r=n,c(r.object))}function w(){n.geometry=null,n.program=null,n.wireframe=!1}return{setup:a,reset:T,resetDefaultState:w,dispose:E,releaseStatesOfGeometry:M,releaseStatesOfProgram:S,initAttributes:v,enableAttribute:m,disableUnusedAttributes:y}}function lE(s,e,t){let i;function n(c){i=c}function r(c,h){s.drawArrays(i,c,h),t.update(h,i,1)}function o(c,h,u){u!==0&&(s.drawArraysInstanced(i,c,h,u),t.update(h,i,u))}function a(c,h,u){if(u===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(i,c,0,h,0,u);let f=0;for(let p=0;p<u;p++)f+=h[p];t.update(f,i,1)}function l(c,h,u,d){if(u===0)return;const f=e.get("WEBGL_multi_draw");if(f===null)for(let p=0;p<c.length;p++)o(c[p],h[p],d[p]);else{f.multiDrawArraysInstancedWEBGL(i,c,0,h,0,d,0,u);let p=0;for(let v=0;v<u;v++)p+=h[v]*d[v];t.update(p,i,1)}}this.setMode=n,this.render=r,this.renderInstances=o,this.renderMultiDraw=a,this.renderMultiDrawInstances=l}function cE(s,e,t,i){let n;function r(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const S=e.get("EXT_texture_filter_anisotropic");n=s.getParameter(S.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function o(S){return!(S!==hi&&i.convert(S)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_FORMAT))}function a(S){const T=S===qo&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(S!==_r&&i.convert(S)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_TYPE)&&S!==wi&&!T)}function l(S){if(S==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";S="mediump"}return S==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let c=t.precision!==void 0?t.precision:"highp";const h=l(c);h!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",h,"instead."),c=h);const u=t.logarithmicDepthBuffer===!0,d=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),f=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),p=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),v=s.getParameter(s.MAX_TEXTURE_SIZE),m=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),g=s.getParameter(s.MAX_VERTEX_ATTRIBS),y=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),x=s.getParameter(s.MAX_VARYING_VECTORS),_=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),E=p>0,M=s.getParameter(s.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:r,getMaxPrecision:l,textureFormatReadable:o,textureTypeReadable:a,precision:c,logarithmicDepthBuffer:u,reverseDepthBuffer:d,maxTextures:f,maxVertexTextures:p,maxTextureSize:v,maxCubemapSize:m,maxAttributes:g,maxVertexUniforms:y,maxVaryings:x,maxFragmentUniforms:_,vertexTextures:E,maxSamples:M}}function hE(s){const e=this;let t=null,i=0,n=!1,r=!1;const o=new ur,a=new Et,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(u,d){const f=u.length!==0||d||i!==0||n;return n=d,i=u.length,f},this.beginShadows=function(){r=!0,h(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(u,d){t=h(u,d,0)},this.setState=function(u,d,f){const p=u.clippingPlanes,v=u.clipIntersection,m=u.clipShadows,g=s.get(u);if(!n||p===null||p.length===0||r&&!m)r?h(null):c();else{const y=r?0:i,x=y*4;let _=g.clippingState||null;l.value=_,_=h(p,d,x,f);for(let E=0;E!==x;++E)_[E]=t[E];g.clippingState=_,this.numIntersection=v?this.numPlanes:0,this.numPlanes+=y}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function h(u,d,f,p){const v=u!==null?u.length:0;let m=null;if(v!==0){if(m=l.value,p!==!0||m===null){const g=f+v*4,y=d.matrixWorldInverse;a.getNormalMatrix(y),(m===null||m.length<g)&&(m=new Float32Array(g));for(let x=0,_=f;x!==v;++x,_+=4)o.copy(u[x]).applyMatrix4(y,a),o.normal.toArray(m,_),m[_+3]=o.constant}l.value=m,l.needsUpdate=!0}return e.numPlanes=v,e.numIntersection=0,m}}function uE(s){let e=new WeakMap;function t(o,a){return a===Ga?o.mapping=zr:a===Va&&(o.mapping=os),o}function i(o){if(o&&o.isTexture){const a=o.mapping;if(a===Ga||a===Va)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new Ev(l.height);return c.fromEquirectangularTexture(s,o),e.set(o,c),o.addEventListener("dispose",n),t(c.texture,o.mapping)}else return null}}return o}function n(o){const a=o.target;a.removeEventListener("dispose",n);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function r(){e=new WeakMap}return{get:i,dispose:r}}const Fo=4,Zm=[.125,.215,.35,.446,.526,.582],Gs=20,hd=new us,Jm=new ze;let ud=null,dd=0,fd=0,pd=!1;const Os=(1+Math.sqrt(5))/2,Io=1/Os,Km=[new L(-Os,Io,0),new L(Os,Io,0),new L(-Io,0,Os),new L(Io,0,Os),new L(0,Os,-Io),new L(0,Os,Io),new L(-1,1,-1),new L(1,1,-1),new L(-1,1,1),new L(1,1,1)],dE=new L;class ef{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,n=100,r={}){const{size:o=256,position:a=dE}=r;ud=this._renderer.getRenderTarget(),dd=this._renderer.getActiveCubeFace(),fd=this._renderer.getActiveMipmapLevel(),pd=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(o);const l=this._allocateTargets();return l.depthBuffer=!0,this._sceneToCubeUV(e,i,n,l,a),t>0&&this._blur(l,0,0,t),this._applyPMREM(l),this._cleanup(l),l}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=eg(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=$m(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(ud,dd,fd),this._renderer.xr.enabled=pd,e.scissorTest=!1,mc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===zr||e.mapping===os?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),ud=this._renderer.getRenderTarget(),dd=this._renderer.getActiveCubeFace(),fd=this._renderer.getActiveMipmapLevel(),pd=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:Sn,minFilter:Sn,generateMipmaps:!1,type:qo,format:hi,colorSpace:eo,depthBuffer:!1},n=Qm(e,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Qm(e,t,i);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=fE(r)),this._blurMaterial=pE(r,e,t)}return n}_compileMaterial(e){const t=new ke(this._lodPlanes[0],e);this._renderer.compile(t,hd)}_sceneToCubeUV(e,t,i,n,r){const l=new bn(90,1,t,i),c=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],u=this._renderer,d=u.autoClear,f=u.toneMapping;u.getClearColor(Jm),u.toneMapping=pr,u.autoClear=!1;const p=new Bn({name:"PMREM.Background",side:ni,depthWrite:!1,depthTest:!1}),v=new ke(new vn,p);let m=!1;const g=e.background;g?g.isColor&&(p.color.copy(g),e.background=null,m=!0):(p.color.copy(Jm),m=!0);for(let y=0;y<6;y++){const x=y%3;x===0?(l.up.set(0,c[y],0),l.position.set(r.x,r.y,r.z),l.lookAt(r.x+h[y],r.y,r.z)):x===1?(l.up.set(0,0,c[y]),l.position.set(r.x,r.y,r.z),l.lookAt(r.x,r.y+h[y],r.z)):(l.up.set(0,c[y],0),l.position.set(r.x,r.y,r.z),l.lookAt(r.x,r.y,r.z+h[y]));const _=this._cubeSize;mc(n,x*_,y>2?_:0,_,_),u.setRenderTarget(n),m&&u.render(v,l),u.render(e,l)}v.geometry.dispose(),v.material.dispose(),u.toneMapping=f,u.autoClear=d,e.background=g}_textureToCubeUV(e,t){const i=this._renderer,n=e.mapping===zr||e.mapping===os;n?(this._cubemapMaterial===null&&(this._cubemapMaterial=eg()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=$m());const r=n?this._cubemapMaterial:this._equirectMaterial,o=new ke(this._lodPlanes[0],r),a=r.uniforms;a.envMap.value=e;const l=this._cubeSize;mc(t,0,0,3*l,2*l),i.setRenderTarget(t),i.render(o,hd)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;const n=this._lodPlanes.length;for(let r=1;r<n;r++){const o=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),a=Km[(n-r-1)%Km.length];this._blur(e,r-1,r,o,a)}t.autoClear=i}_blur(e,t,i,n,r){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,i,n,"latitudinal",r),this._halfBlur(o,e,i,i,n,"longitudinal",r)}_halfBlur(e,t,i,n,r,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=new ke(this._lodPlanes[n],c),d=c.uniforms,f=this._sizeLods[i]-1,p=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*Gs-1),v=r/p,m=isFinite(r)?1+Math.floor(h*v):Gs;m>Gs&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${Gs}`);const g=[];let y=0;for(let S=0;S<Gs;++S){const T=S/v,w=Math.exp(-T*T/2);g.push(w),S===0?y+=w:S<m&&(y+=2*w)}for(let S=0;S<g.length;S++)g[S]=g[S]/y;d.envMap.value=e.texture,d.samples.value=m,d.weights.value=g,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:x}=this;d.dTheta.value=p,d.mipInt.value=x-i;const _=this._sizeLods[n],E=3*_*(n>x-Fo?n-x+Fo:0),M=4*(this._cubeSize-_);mc(t,E,M,3*_,2*_),l.setRenderTarget(t),l.render(u,hd)}}function fE(s){const e=[],t=[],i=[];let n=s;const r=s-Fo+1+Zm.length;for(let o=0;o<r;o++){const a=Math.pow(2,n);t.push(a);let l=1/a;o>s-Fo?l=Zm[o-s+Fo-1]:o===0&&(l=0),i.push(l);const c=1/(a-2),h=-c,u=1+c,d=[h,h,u,h,u,u,h,h,u,u,h,u],f=6,p=6,v=3,m=2,g=1,y=new Float32Array(v*p*f),x=new Float32Array(m*p*f),_=new Float32Array(g*p*f);for(let M=0;M<f;M++){const S=M%3*2/3-1,T=M>2?0:-1,w=[S,T,0,S+2/3,T,0,S+2/3,T+1,0,S,T,0,S+2/3,T+1,0,S,T+1,0];y.set(w,v*p*M),x.set(d,m*p*M);const b=[M,M,M,M,M,M];_.set(b,g*p*M)}const E=new yt;E.setAttribute("position",new Ct(y,v)),E.setAttribute("uv",new Ct(x,m)),E.setAttribute("faceIndex",new Ct(_,g)),e.push(E),n>Fo&&n--}return{lodPlanes:e,sizeLods:t,sigmas:i}}function Qm(s,e,t){const i=new ji(s,e,t);return i.texture.mapping=jo,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function mc(s,e,t,i,n){s.viewport.set(e,t,i,n),s.scissor.set(e,t,i,n)}function pE(s,e,t){const i=new Float32Array(Gs),n=new L(0,1,0);return new Ti({name:"SphericalGaussianBlur",defines:{n:Gs,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n}},vertexShader:hp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Or,depthTest:!1,depthWrite:!1})}function $m(){return new Ti({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:hp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Or,depthTest:!1,depthWrite:!1})}function eg(){return new Ti({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:hp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Or,depthTest:!1,depthWrite:!1})}function hp(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function mE(s){let e=new WeakMap,t=null;function i(a){if(a&&a.isTexture){const l=a.mapping,c=l===Ga||l===Va,h=l===zr||l===os;if(c||h){let u=e.get(a);const d=u!==void 0?u.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==d)return t===null&&(t=new ef(s)),u=c?t.fromEquirectangular(a,u):t.fromCubemap(a,u),u.texture.pmremVersion=a.pmremVersion,e.set(a,u),u.texture;if(u!==void 0)return u.texture;{const f=a.image;return c&&f&&f.height>0||h&&f&&n(f)?(t===null&&(t=new ef(s)),u=c?t.fromEquirectangular(a):t.fromCubemap(a),u.texture.pmremVersion=a.pmremVersion,e.set(a,u),a.addEventListener("dispose",r),u.texture):null}}}return a}function n(a){let l=0;const c=6;for(let h=0;h<c;h++)a[h]!==void 0&&l++;return l===c}function r(a){const l=a.target;l.removeEventListener("dispose",r);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:i,dispose:o}}function gE(s){const e={};function t(i){if(e[i]!==void 0)return e[i];let n;switch(i){case"WEBGL_depth_texture":n=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=s.getExtension(i)}return e[i]=n,n}return{has:function(i){return t(i)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(i){const n=t(i);return n===null&&Uc("THREE.WebGLRenderer: "+i+" extension not supported."),n}}}function vE(s,e,t,i){const n={},r=new WeakMap;function o(u){const d=u.target;d.index!==null&&e.remove(d.index);for(const p in d.attributes)e.remove(d.attributes[p]);d.removeEventListener("dispose",o),delete n[d.id];const f=r.get(d);f&&(e.remove(f),r.delete(d)),i.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function a(u,d){return n[d.id]===!0||(d.addEventListener("dispose",o),n[d.id]=!0,t.memory.geometries++),d}function l(u){const d=u.attributes;for(const f in d)e.update(d[f],s.ARRAY_BUFFER)}function c(u){const d=[],f=u.index,p=u.attributes.position;let v=0;if(f!==null){const y=f.array;v=f.version;for(let x=0,_=y.length;x<_;x+=3){const E=y[x+0],M=y[x+1],S=y[x+2];d.push(E,M,M,S,S,E)}}else if(p!==void 0){const y=p.array;v=p.version;for(let x=0,_=y.length/3-1;x<_;x+=3){const E=x+0,M=x+1,S=x+2;d.push(E,M,M,S,S,E)}}else return;const m=new(yv(d)?Ff:Of)(d,1);m.version=v;const g=r.get(u);g&&e.remove(g),r.set(u,m)}function h(u){const d=r.get(u);if(d){const f=u.index;f!==null&&d.version<f.version&&c(u)}else c(u);return r.get(u)}return{get:a,update:l,getWireframeAttribute:h}}function _E(s,e,t){let i;function n(d){i=d}let r,o;function a(d){r=d.type,o=d.bytesPerElement}function l(d,f){s.drawElements(i,f,r,d*o),t.update(f,i,1)}function c(d,f,p){p!==0&&(s.drawElementsInstanced(i,f,r,d*o,p),t.update(f,i,p))}function h(d,f,p){if(p===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(i,f,0,r,d,0,p);let m=0;for(let g=0;g<p;g++)m+=f[g];t.update(m,i,1)}function u(d,f,p,v){if(p===0)return;const m=e.get("WEBGL_multi_draw");if(m===null)for(let g=0;g<d.length;g++)c(d[g]/o,f[g],v[g]);else{m.multiDrawElementsInstancedWEBGL(i,f,0,r,d,0,v,0,p);let g=0;for(let y=0;y<p;y++)g+=f[y]*v[y];t.update(g,i,1)}}this.setMode=n,this.setIndex=a,this.render=l,this.renderInstances=c,this.renderMultiDraw=h,this.renderMultiDrawInstances=u}function yE(s){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function i(r,o,a){switch(t.calls++,o){case s.TRIANGLES:t.triangles+=a*(r/3);break;case s.LINES:t.lines+=a*(r/2);break;case s.LINE_STRIP:t.lines+=a*(r-1);break;case s.LINE_LOOP:t.lines+=a*r;break;case s.POINTS:t.points+=a*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function n(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:n,update:i}}function xE(s,e,t){const i=new WeakMap,n=new Pt;function r(o,a,l){const c=o.morphTargetInfluences,h=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,u=h!==void 0?h.length:0;let d=i.get(a);if(d===void 0||d.count!==u){let w=function(){S.dispose(),i.delete(a),a.removeEventListener("dispose",w)};d!==void 0&&d.texture.dispose();const f=a.morphAttributes.position!==void 0,p=a.morphAttributes.normal!==void 0,v=a.morphAttributes.color!==void 0,m=a.morphAttributes.position||[],g=a.morphAttributes.normal||[],y=a.morphAttributes.color||[];let x=0;f===!0&&(x=1),p===!0&&(x=2),v===!0&&(x=3);let _=a.attributes.position.count*x,E=1;_>e.maxTextureSize&&(E=Math.ceil(_/e.maxTextureSize),_=e.maxTextureSize);const M=new Float32Array(_*E*4*u),S=new fl(M,_,E,u);S.type=wi,S.needsUpdate=!0;const T=x*4;for(let b=0;b<u;b++){const D=m[b],I=g[b],F=y[b],V=_*E*4*b;for(let J=0;J<D.count;J++){const O=J*T;f===!0&&(n.fromBufferAttribute(D,J),M[V+O+0]=n.x,M[V+O+1]=n.y,M[V+O+2]=n.z,M[V+O+3]=0),p===!0&&(n.fromBufferAttribute(I,J),M[V+O+4]=n.x,M[V+O+5]=n.y,M[V+O+6]=n.z,M[V+O+7]=0),v===!0&&(n.fromBufferAttribute(F,J),M[V+O+8]=n.x,M[V+O+9]=n.y,M[V+O+10]=n.z,M[V+O+11]=F.itemSize===4?n.w:1)}}d={count:u,texture:S,size:new xe(_,E)},i.set(a,d),a.addEventListener("dispose",w)}if(o.isInstancedMesh===!0&&o.morphTexture!==null)l.getUniforms().setValue(s,"morphTexture",o.morphTexture,t);else{let f=0;for(let v=0;v<c.length;v++)f+=c[v];const p=a.morphTargetsRelative?1:1-f;l.getUniforms().setValue(s,"morphTargetBaseInfluence",p),l.getUniforms().setValue(s,"morphTargetInfluences",c)}l.getUniforms().setValue(s,"morphTargetsTexture",d.texture,t),l.getUniforms().setValue(s,"morphTargetsTextureSize",d.size)}return{update:r}}function bE(s,e,t,i){let n=new WeakMap;function r(l){const c=i.render.frame,h=l.geometry,u=e.get(l,h);if(n.get(u)!==c&&(e.update(u),n.set(u,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),n.get(l)!==c&&(t.update(l.instanceMatrix,s.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,s.ARRAY_BUFFER),n.set(l,c))),l.isSkinnedMesh){const d=l.skeleton;n.get(d)!==c&&(d.update(),n.set(d,c))}return u}function o(){n=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:r,dispose:o}}const m_=new pn,tg=new Bf(1,1),g_=new fl,v_=new Hh,__=new ml,ng=[],ig=[],rg=new Float32Array(16),sg=new Float32Array(9),og=new Float32Array(4);function Ko(s,e,t){const i=s[0];if(i<=0||i>0)return s;const n=e*t;let r=ng[n];if(r===void 0&&(r=new Float32Array(n),ng[n]=r),e!==0){i.toArray(r,0);for(let o=1,a=0;o!==e;++o)a+=t,s[o].toArray(r,a)}return r}function Pn(s,e){if(s.length!==e.length)return!1;for(let t=0,i=s.length;t<i;t++)if(s[t]!==e[t])return!1;return!0}function In(s,e){for(let t=0,i=e.length;t<i;t++)s[t]=e[t]}function pu(s,e){let t=ig[e];t===void 0&&(t=new Int32Array(e),ig[e]=t);for(let i=0;i!==e;++i)t[i]=s.allocateTextureUnit();return t}function SE(s,e){const t=this.cache;t[0]!==e&&(s.uniform1f(this.addr,e),t[0]=e)}function ME(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Pn(t,e))return;s.uniform2fv(this.addr,e),In(t,e)}}function wE(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Pn(t,e))return;s.uniform3fv(this.addr,e),In(t,e)}}function EE(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Pn(t,e))return;s.uniform4fv(this.addr,e),In(t,e)}}function TE(s,e){const t=this.cache,i=e.elements;if(i===void 0){if(Pn(t,e))return;s.uniformMatrix2fv(this.addr,!1,e),In(t,e)}else{if(Pn(t,i))return;og.set(i),s.uniformMatrix2fv(this.addr,!1,og),In(t,i)}}function AE(s,e){const t=this.cache,i=e.elements;if(i===void 0){if(Pn(t,e))return;s.uniformMatrix3fv(this.addr,!1,e),In(t,e)}else{if(Pn(t,i))return;sg.set(i),s.uniformMatrix3fv(this.addr,!1,sg),In(t,i)}}function CE(s,e){const t=this.cache,i=e.elements;if(i===void 0){if(Pn(t,e))return;s.uniformMatrix4fv(this.addr,!1,e),In(t,e)}else{if(Pn(t,i))return;rg.set(i),s.uniformMatrix4fv(this.addr,!1,rg),In(t,i)}}function RE(s,e){const t=this.cache;t[0]!==e&&(s.uniform1i(this.addr,e),t[0]=e)}function PE(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Pn(t,e))return;s.uniform2iv(this.addr,e),In(t,e)}}function IE(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Pn(t,e))return;s.uniform3iv(this.addr,e),In(t,e)}}function DE(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Pn(t,e))return;s.uniform4iv(this.addr,e),In(t,e)}}function LE(s,e){const t=this.cache;t[0]!==e&&(s.uniform1ui(this.addr,e),t[0]=e)}function UE(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Pn(t,e))return;s.uniform2uiv(this.addr,e),In(t,e)}}function NE(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Pn(t,e))return;s.uniform3uiv(this.addr,e),In(t,e)}}function OE(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Pn(t,e))return;s.uniform4uiv(this.addr,e),In(t,e)}}function FE(s,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(s.uniform1i(this.addr,n),i[0]=n);let r;this.type===s.SAMPLER_2D_SHADOW?(tg.compareFunction=Uf,r=tg):r=m_,t.setTexture2D(e||r,n)}function kE(s,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(s.uniform1i(this.addr,n),i[0]=n),t.setTexture3D(e||v_,n)}function BE(s,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(s.uniform1i(this.addr,n),i[0]=n),t.setTextureCube(e||__,n)}function zE(s,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(s.uniform1i(this.addr,n),i[0]=n),t.setTexture2DArray(e||g_,n)}function GE(s){switch(s){case 5126:return SE;case 35664:return ME;case 35665:return wE;case 35666:return EE;case 35674:return TE;case 35675:return AE;case 35676:return CE;case 5124:case 35670:return RE;case 35667:case 35671:return PE;case 35668:case 35672:return IE;case 35669:case 35673:return DE;case 5125:return LE;case 36294:return UE;case 36295:return NE;case 36296:return OE;case 35678:case 36198:case 36298:case 36306:case 35682:return FE;case 35679:case 36299:case 36307:return kE;case 35680:case 36300:case 36308:case 36293:return BE;case 36289:case 36303:case 36311:case 36292:return zE}}function VE(s,e){s.uniform1fv(this.addr,e)}function HE(s,e){const t=Ko(e,this.size,2);s.uniform2fv(this.addr,t)}function WE(s,e){const t=Ko(e,this.size,3);s.uniform3fv(this.addr,t)}function XE(s,e){const t=Ko(e,this.size,4);s.uniform4fv(this.addr,t)}function YE(s,e){const t=Ko(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,t)}function jE(s,e){const t=Ko(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,t)}function qE(s,e){const t=Ko(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,t)}function ZE(s,e){s.uniform1iv(this.addr,e)}function JE(s,e){s.uniform2iv(this.addr,e)}function KE(s,e){s.uniform3iv(this.addr,e)}function QE(s,e){s.uniform4iv(this.addr,e)}function $E(s,e){s.uniform1uiv(this.addr,e)}function eT(s,e){s.uniform2uiv(this.addr,e)}function tT(s,e){s.uniform3uiv(this.addr,e)}function nT(s,e){s.uniform4uiv(this.addr,e)}function iT(s,e,t){const i=this.cache,n=e.length,r=pu(t,n);Pn(i,r)||(s.uniform1iv(this.addr,r),In(i,r));for(let o=0;o!==n;++o)t.setTexture2D(e[o]||m_,r[o])}function rT(s,e,t){const i=this.cache,n=e.length,r=pu(t,n);Pn(i,r)||(s.uniform1iv(this.addr,r),In(i,r));for(let o=0;o!==n;++o)t.setTexture3D(e[o]||v_,r[o])}function sT(s,e,t){const i=this.cache,n=e.length,r=pu(t,n);Pn(i,r)||(s.uniform1iv(this.addr,r),In(i,r));for(let o=0;o!==n;++o)t.setTextureCube(e[o]||__,r[o])}function oT(s,e,t){const i=this.cache,n=e.length,r=pu(t,n);Pn(i,r)||(s.uniform1iv(this.addr,r),In(i,r));for(let o=0;o!==n;++o)t.setTexture2DArray(e[o]||g_,r[o])}function aT(s){switch(s){case 5126:return VE;case 35664:return HE;case 35665:return WE;case 35666:return XE;case 35674:return YE;case 35675:return jE;case 35676:return qE;case 5124:case 35670:return ZE;case 35667:case 35671:return JE;case 35668:case 35672:return KE;case 35669:case 35673:return QE;case 5125:return $E;case 36294:return eT;case 36295:return tT;case 36296:return nT;case 35678:case 36198:case 36298:case 36306:case 35682:return iT;case 35679:case 36299:case 36307:return rT;case 35680:case 36300:case 36308:case 36293:return sT;case 36289:case 36303:case 36311:case 36292:return oT}}class lT{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.setValue=GE(t.type)}}class cT{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=aT(t.type)}}class hT{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){const n=this.seq;for(let r=0,o=n.length;r!==o;++r){const a=n[r];a.setValue(e,t[a.id],i)}}}const md=/(\w+)(\])?(\[|\.)?/g;function ag(s,e){s.seq.push(e),s.map[e.id]=e}function uT(s,e,t){const i=s.name,n=i.length;for(md.lastIndex=0;;){const r=md.exec(i),o=md.lastIndex;let a=r[1];const l=r[2]==="]",c=r[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===n){ag(t,c===void 0?new lT(a,s,e):new cT(a,s,e));break}else{let u=t.map[a];u===void 0&&(u=new hT(a),ag(t,u)),t=u}}}class Oc{constructor(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let n=0;n<i;++n){const r=e.getActiveUniform(t,n),o=e.getUniformLocation(t,r.name);uT(r,o,this)}}setValue(e,t,i,n){const r=this.map[t];r!==void 0&&r.setValue(e,i,n)}setOptional(e,t,i){const n=t[i];n!==void 0&&this.setValue(e,i,n)}static upload(e,t,i,n){for(let r=0,o=t.length;r!==o;++r){const a=t[r],l=i[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,n)}}static seqWithValue(e,t){const i=[];for(let n=0,r=e.length;n!==r;++n){const o=e[n];o.id in t&&i.push(o)}return i}}function lg(s,e,t){const i=s.createShader(e);return s.shaderSource(i,t),s.compileShader(i),i}const dT=37297;let fT=0;function pT(s,e){const t=s.split(`
`),i=[],n=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let o=n;o<r;o++){const a=o+1;i.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return i.join(`
`)}const cg=new Et;function mT(s){Nt._getMatrix(cg,Nt.workingColorSpace,s);const e=`mat3( ${cg.elements.map(t=>t.toFixed(4))} )`;switch(Nt.getTransfer(s)){case Ya:return[e,"LinearTransferOETF"];case Zt:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",s),[e,"LinearTransferOETF"]}}function hg(s,e,t){const i=s.getShaderParameter(e,s.COMPILE_STATUS),n=s.getShaderInfoLog(e).trim();if(i&&n==="")return"";const r=/ERROR: 0:(\d+)/.exec(n);if(r){const o=parseInt(r[1]);return t.toUpperCase()+`

`+n+`

`+pT(s.getShaderSource(e),o)}else return n}function gT(s,e){const t=mT(e);return[`vec4 ${s}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function vT(s,e){let t;switch(e){case ev:t="Linear";break;case tv:t="Reinhard";break;case nv:t="Cineon";break;case iv:t="ACESFilmic";break;case Qc:t="AgX";break;case sv:t="Neutral";break;case rv:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+s+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const gc=new L;function _T(){Nt.getLuminanceCoefficients(gc);const s=gc.x.toFixed(4),e=gc.y.toFixed(4),t=gc.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${s}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function yT(s){return[s.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",s.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Ma).join(`
`)}function xT(s){const e=[];for(const t in s){const i=s[t];i!==!1&&e.push("#define "+t+" "+i)}return e.join(`
`)}function bT(s,e){const t={},i=s.getProgramParameter(e,s.ACTIVE_ATTRIBUTES);for(let n=0;n<i;n++){const r=s.getActiveAttrib(e,n),o=r.name;let a=1;r.type===s.FLOAT_MAT2&&(a=2),r.type===s.FLOAT_MAT3&&(a=3),r.type===s.FLOAT_MAT4&&(a=4),t[o]={type:r.type,location:s.getAttribLocation(e,o),locationSize:a}}return t}function Ma(s){return s!==""}function ug(s,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function dg(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const ST=/^[ \t]*#include +<([\w\d./]+)>/gm;function tf(s){return s.replace(ST,wT)}const MT=new Map;function wT(s,e){let t=_t[e];if(t===void 0){const i=MT.get(e);if(i!==void 0)t=_t[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,i);else throw new Error("Can not resolve #include <"+e+">")}return tf(t)}const ET=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function fg(s){return s.replace(ET,TT)}function TT(s,e,t,i){let n="";for(let r=parseInt(e);r<parseInt(t);r++)n+=i.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return n}function pg(s){let e=`precision ${s.precision} float;
	precision ${s.precision} int;
	precision ${s.precision} sampler2D;
	precision ${s.precision} samplerCube;
	precision ${s.precision} sampler3D;
	precision ${s.precision} sampler2DArray;
	precision ${s.precision} sampler2DShadow;
	precision ${s.precision} samplerCubeShadow;
	precision ${s.precision} sampler2DArrayShadow;
	precision ${s.precision} isampler2D;
	precision ${s.precision} isampler3D;
	precision ${s.precision} isamplerCube;
	precision ${s.precision} isampler2DArray;
	precision ${s.precision} usampler2D;
	precision ${s.precision} usampler3D;
	precision ${s.precision} usamplerCube;
	precision ${s.precision} usampler2DArray;
	`;return s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function AT(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===bf?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===Aa?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===hr&&(e="SHADOWMAP_TYPE_VSM"),e}function CT(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case zr:case os:e="ENVMAP_TYPE_CUBE";break;case jo:e="ENVMAP_TYPE_CUBE_UV";break}return e}function RT(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case os:e="ENVMAP_MODE_REFRACTION";break}return e}function PT(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case ul:e="ENVMAP_BLENDING_MULTIPLY";break;case Q0:e="ENVMAP_BLENDING_MIX";break;case $0:e="ENVMAP_BLENDING_ADD";break}return e}function IT(s){const e=s.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:i,maxMip:t}}function DT(s,e,t,i){const n=s.getContext(),r=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=AT(t),c=CT(t),h=RT(t),u=PT(t),d=IT(t),f=yT(t),p=xT(r),v=n.createProgram();let m,g,y=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(Ma).join(`
`),m.length>0&&(m+=`
`),g=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(Ma).join(`
`),g.length>0&&(g+=`
`)):(m=[pg(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Ma).join(`
`),g=[pg(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+h:"",t.envMap?"#define "+u:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==pr?"#define TONE_MAPPING":"",t.toneMapping!==pr?_t.tonemapping_pars_fragment:"",t.toneMapping!==pr?vT("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",_t.colorspace_pars_fragment,gT("linearToOutputTexel",t.outputColorSpace),_T(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Ma).join(`
`)),o=tf(o),o=ug(o,t),o=dg(o,t),a=tf(a),a=ug(a,t),a=dg(a,t),o=fg(o),a=fg(a),t.isRawShaderMaterial!==!0&&(y=`#version 300 es
`,m=[f,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,g=["#define varying in",t.glslVersion===jd?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===jd?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);const x=y+m+o,_=y+g+a,E=lg(n,n.VERTEX_SHADER,x),M=lg(n,n.FRAGMENT_SHADER,_);n.attachShader(v,E),n.attachShader(v,M),t.index0AttributeName!==void 0?n.bindAttribLocation(v,0,t.index0AttributeName):t.morphTargets===!0&&n.bindAttribLocation(v,0,"position"),n.linkProgram(v);function S(D){if(s.debug.checkShaderErrors){const I=n.getProgramInfoLog(v).trim(),F=n.getShaderInfoLog(E).trim(),V=n.getShaderInfoLog(M).trim();let J=!0,O=!0;if(n.getProgramParameter(v,n.LINK_STATUS)===!1)if(J=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(n,v,E,M);else{const ee=hg(n,E,"vertex"),Y=hg(n,M,"fragment");console.error("THREE.WebGLProgram: Shader Error "+n.getError()+" - VALIDATE_STATUS "+n.getProgramParameter(v,n.VALIDATE_STATUS)+`

Material Name: `+D.name+`
Material Type: `+D.type+`

Program Info Log: `+I+`
`+ee+`
`+Y)}else I!==""?console.warn("THREE.WebGLProgram: Program Info Log:",I):(F===""||V==="")&&(O=!1);O&&(D.diagnostics={runnable:J,programLog:I,vertexShader:{log:F,prefix:m},fragmentShader:{log:V,prefix:g}})}n.deleteShader(E),n.deleteShader(M),T=new Oc(n,v),w=bT(n,v)}let T;this.getUniforms=function(){return T===void 0&&S(this),T};let w;this.getAttributes=function(){return w===void 0&&S(this),w};let b=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return b===!1&&(b=n.getProgramParameter(v,dT)),b},this.destroy=function(){i.releaseStatesOfProgram(this),n.deleteProgram(v),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=fT++,this.cacheKey=e,this.usedTimes=1,this.program=v,this.vertexShader=E,this.fragmentShader=M,this}let LT=0;class UT{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,i=e.fragmentShader,n=this._getShaderStage(t),r=this._getShaderStage(i),o=this._getShaderCacheForMaterial(e);return o.has(n)===!1&&(o.add(n),n.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const i of t)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let i=t.get(e);return i===void 0&&(i=new Set,t.set(e,i)),i}_getShaderStage(e){const t=this.shaderCache;let i=t.get(e);return i===void 0&&(i=new NT(e),t.set(e,i)),i}}class NT{constructor(e){this.id=LT++,this.code=e,this.usedTimes=0}}function OT(s,e,t,i,n,r,o){const a=new Wh,l=new UT,c=new Set,h=[],u=n.logarithmicDepthBuffer,d=n.vertexTextures;let f=n.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function v(w){return c.add(w),w===0?"uv":`uv${w}`}function m(w,b,D,I,F){const V=I.fog,J=F.geometry,O=w.isMeshStandardMaterial?I.environment:null,ee=(w.isMeshStandardMaterial?t:e).get(w.envMap||O),Y=ee&&ee.mapping===jo?ee.image.height:null,j=p[w.type];w.precision!==null&&(f=n.getMaxPrecision(w.precision),f!==w.precision&&console.warn("THREE.WebGLProgram.getParameters:",w.precision,"not supported, using",f,"instead."));const $=J.morphAttributes.position||J.morphAttributes.normal||J.morphAttributes.color,U=$!==void 0?$.length:0;let Z=0;J.morphAttributes.position!==void 0&&(Z=1),J.morphAttributes.normal!==void 0&&(Z=2),J.morphAttributes.color!==void 0&&(Z=3);let K,k,H,q;if(j){const rt=li[j];K=rt.vertexShader,k=rt.fragmentShader}else K=w.vertexShader,k=w.fragmentShader,l.update(w),H=l.getVertexShaderID(w),q=l.getFragmentShaderID(w);const W=s.getRenderTarget(),ne=s.state.buffers.depth.getReversed(),ge=F.isInstancedMesh===!0,ye=F.isBatchedMesh===!0,Se=!!w.map,pe=!!w.matcap,Ie=!!ee,X=!!w.aoMap,Oe=!!w.lightMap,he=!!w.bumpMap,ue=!!w.normalMap,ie=!!w.displacementMap,Me=!!w.emissiveMap,le=!!w.metalnessMap,P=!!w.roughnessMap,A=w.anisotropy>0,Q=w.clearcoat>0,ae=w.dispersion>0,se=w.iridescence>0,de=w.sheen>0,Ee=w.transmission>0,be=A&&!!w.anisotropyMap,Ae=Q&&!!w.clearcoatMap,Ze=Q&&!!w.clearcoatNormalMap,Re=Q&&!!w.clearcoatRoughnessMap,Be=se&&!!w.iridescenceMap,Ge=se&&!!w.iridescenceThicknessMap,Ve=de&&!!w.sheenColorMap,Te=de&&!!w.sheenRoughnessMap,ut=!!w.specularMap,tt=!!w.specularColorMap,wt=!!w.specularIntensityMap,te=Ee&&!!w.transmissionMap,Ce=Ee&&!!w.thicknessMap,fe=!!w.gradientMap,Pe=!!w.alphaMap,Ne=w.alphaTest>0,De=!!w.alphaHash,ot=!!w.extensions;let St=pr;w.toneMapped&&(W===null||W.isXRRenderTarget===!0)&&(St=s.toneMapping);const ct={shaderID:j,shaderType:w.type,shaderName:w.name,vertexShader:K,fragmentShader:k,defines:w.defines,customVertexShaderID:H,customFragmentShaderID:q,isRawShaderMaterial:w.isRawShaderMaterial===!0,glslVersion:w.glslVersion,precision:f,batching:ye,batchingColor:ye&&F._colorsTexture!==null,instancing:ge,instancingColor:ge&&F.instanceColor!==null,instancingMorph:ge&&F.morphTexture!==null,supportsVertexTextures:d,outputColorSpace:W===null?s.outputColorSpace:W.isXRRenderTarget===!0?W.texture.colorSpace:eo,alphaToCoverage:!!w.alphaToCoverage,map:Se,matcap:pe,envMap:Ie,envMapMode:Ie&&ee.mapping,envMapCubeUVHeight:Y,aoMap:X,lightMap:Oe,bumpMap:he,normalMap:ue,displacementMap:d&&ie,emissiveMap:Me,normalMapObjectSpace:ue&&w.normalMapType===uv,normalMapTangentSpace:ue&&w.normalMapType===as,metalnessMap:le,roughnessMap:P,anisotropy:A,anisotropyMap:be,clearcoat:Q,clearcoatMap:Ae,clearcoatNormalMap:Ze,clearcoatRoughnessMap:Re,dispersion:ae,iridescence:se,iridescenceMap:Be,iridescenceThicknessMap:Ge,sheen:de,sheenColorMap:Ve,sheenRoughnessMap:Te,specularMap:ut,specularColorMap:tt,specularIntensityMap:wt,transmission:Ee,transmissionMap:te,thicknessMap:Ce,gradientMap:fe,opaque:w.transparent===!1&&w.blending===qs&&w.alphaToCoverage===!1,alphaMap:Pe,alphaTest:Ne,alphaHash:De,combine:w.combine,mapUv:Se&&v(w.map.channel),aoMapUv:X&&v(w.aoMap.channel),lightMapUv:Oe&&v(w.lightMap.channel),bumpMapUv:he&&v(w.bumpMap.channel),normalMapUv:ue&&v(w.normalMap.channel),displacementMapUv:ie&&v(w.displacementMap.channel),emissiveMapUv:Me&&v(w.emissiveMap.channel),metalnessMapUv:le&&v(w.metalnessMap.channel),roughnessMapUv:P&&v(w.roughnessMap.channel),anisotropyMapUv:be&&v(w.anisotropyMap.channel),clearcoatMapUv:Ae&&v(w.clearcoatMap.channel),clearcoatNormalMapUv:Ze&&v(w.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Re&&v(w.clearcoatRoughnessMap.channel),iridescenceMapUv:Be&&v(w.iridescenceMap.channel),iridescenceThicknessMapUv:Ge&&v(w.iridescenceThicknessMap.channel),sheenColorMapUv:Ve&&v(w.sheenColorMap.channel),sheenRoughnessMapUv:Te&&v(w.sheenRoughnessMap.channel),specularMapUv:ut&&v(w.specularMap.channel),specularColorMapUv:tt&&v(w.specularColorMap.channel),specularIntensityMapUv:wt&&v(w.specularIntensityMap.channel),transmissionMapUv:te&&v(w.transmissionMap.channel),thicknessMapUv:Ce&&v(w.thicknessMap.channel),alphaMapUv:Pe&&v(w.alphaMap.channel),vertexTangents:!!J.attributes.tangent&&(ue||A),vertexColors:w.vertexColors,vertexAlphas:w.vertexColors===!0&&!!J.attributes.color&&J.attributes.color.itemSize===4,pointsUvs:F.isPoints===!0&&!!J.attributes.uv&&(Se||Pe),fog:!!V,useFog:w.fog===!0,fogExp2:!!V&&V.isFogExp2,flatShading:w.flatShading===!0,sizeAttenuation:w.sizeAttenuation===!0,logarithmicDepthBuffer:u,reverseDepthBuffer:ne,skinning:F.isSkinnedMesh===!0,morphTargets:J.morphAttributes.position!==void 0,morphNormals:J.morphAttributes.normal!==void 0,morphColors:J.morphAttributes.color!==void 0,morphTargetsCount:U,morphTextureStride:Z,numDirLights:b.directional.length,numPointLights:b.point.length,numSpotLights:b.spot.length,numSpotLightMaps:b.spotLightMap.length,numRectAreaLights:b.rectArea.length,numHemiLights:b.hemi.length,numDirLightShadows:b.directionalShadowMap.length,numPointLightShadows:b.pointShadowMap.length,numSpotLightShadows:b.spotShadowMap.length,numSpotLightShadowsWithMaps:b.numSpotLightShadowsWithMaps,numLightProbes:b.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:w.dithering,shadowMapEnabled:s.shadowMap.enabled&&D.length>0,shadowMapType:s.shadowMap.type,toneMapping:St,decodeVideoTexture:Se&&w.map.isVideoTexture===!0&&Nt.getTransfer(w.map.colorSpace)===Zt,decodeVideoTextureEmissive:Me&&w.emissiveMap.isVideoTexture===!0&&Nt.getTransfer(w.emissiveMap.colorSpace)===Zt,premultipliedAlpha:w.premultipliedAlpha,doubleSided:w.side===xi,flipSided:w.side===ni,useDepthPacking:w.depthPacking>=0,depthPacking:w.depthPacking||0,index0AttributeName:w.index0AttributeName,extensionClipCullDistance:ot&&w.extensions.clipCullDistance===!0&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(ot&&w.extensions.multiDraw===!0||ye)&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:w.customProgramCacheKey()};return ct.vertexUv1s=c.has(1),ct.vertexUv2s=c.has(2),ct.vertexUv3s=c.has(3),c.clear(),ct}function g(w){const b=[];if(w.shaderID?b.push(w.shaderID):(b.push(w.customVertexShaderID),b.push(w.customFragmentShaderID)),w.defines!==void 0)for(const D in w.defines)b.push(D),b.push(w.defines[D]);return w.isRawShaderMaterial===!1&&(y(b,w),x(b,w),b.push(s.outputColorSpace)),b.push(w.customProgramCacheKey),b.join()}function y(w,b){w.push(b.precision),w.push(b.outputColorSpace),w.push(b.envMapMode),w.push(b.envMapCubeUVHeight),w.push(b.mapUv),w.push(b.alphaMapUv),w.push(b.lightMapUv),w.push(b.aoMapUv),w.push(b.bumpMapUv),w.push(b.normalMapUv),w.push(b.displacementMapUv),w.push(b.emissiveMapUv),w.push(b.metalnessMapUv),w.push(b.roughnessMapUv),w.push(b.anisotropyMapUv),w.push(b.clearcoatMapUv),w.push(b.clearcoatNormalMapUv),w.push(b.clearcoatRoughnessMapUv),w.push(b.iridescenceMapUv),w.push(b.iridescenceThicknessMapUv),w.push(b.sheenColorMapUv),w.push(b.sheenRoughnessMapUv),w.push(b.specularMapUv),w.push(b.specularColorMapUv),w.push(b.specularIntensityMapUv),w.push(b.transmissionMapUv),w.push(b.thicknessMapUv),w.push(b.combine),w.push(b.fogExp2),w.push(b.sizeAttenuation),w.push(b.morphTargetsCount),w.push(b.morphAttributeCount),w.push(b.numDirLights),w.push(b.numPointLights),w.push(b.numSpotLights),w.push(b.numSpotLightMaps),w.push(b.numHemiLights),w.push(b.numRectAreaLights),w.push(b.numDirLightShadows),w.push(b.numPointLightShadows),w.push(b.numSpotLightShadows),w.push(b.numSpotLightShadowsWithMaps),w.push(b.numLightProbes),w.push(b.shadowMapType),w.push(b.toneMapping),w.push(b.numClippingPlanes),w.push(b.numClipIntersection),w.push(b.depthPacking)}function x(w,b){a.disableAll(),b.supportsVertexTextures&&a.enable(0),b.instancing&&a.enable(1),b.instancingColor&&a.enable(2),b.instancingMorph&&a.enable(3),b.matcap&&a.enable(4),b.envMap&&a.enable(5),b.normalMapObjectSpace&&a.enable(6),b.normalMapTangentSpace&&a.enable(7),b.clearcoat&&a.enable(8),b.iridescence&&a.enable(9),b.alphaTest&&a.enable(10),b.vertexColors&&a.enable(11),b.vertexAlphas&&a.enable(12),b.vertexUv1s&&a.enable(13),b.vertexUv2s&&a.enable(14),b.vertexUv3s&&a.enable(15),b.vertexTangents&&a.enable(16),b.anisotropy&&a.enable(17),b.alphaHash&&a.enable(18),b.batching&&a.enable(19),b.dispersion&&a.enable(20),b.batchingColor&&a.enable(21),w.push(a.mask),a.disableAll(),b.fog&&a.enable(0),b.useFog&&a.enable(1),b.flatShading&&a.enable(2),b.logarithmicDepthBuffer&&a.enable(3),b.reverseDepthBuffer&&a.enable(4),b.skinning&&a.enable(5),b.morphTargets&&a.enable(6),b.morphNormals&&a.enable(7),b.morphColors&&a.enable(8),b.premultipliedAlpha&&a.enable(9),b.shadowMapEnabled&&a.enable(10),b.doubleSided&&a.enable(11),b.flipSided&&a.enable(12),b.useDepthPacking&&a.enable(13),b.dithering&&a.enable(14),b.transmission&&a.enable(15),b.sheen&&a.enable(16),b.opaque&&a.enable(17),b.pointsUvs&&a.enable(18),b.decodeVideoTexture&&a.enable(19),b.decodeVideoTextureEmissive&&a.enable(20),b.alphaToCoverage&&a.enable(21),w.push(a.mask)}function _(w){const b=p[w.type];let D;if(b){const I=li[b];D=pl.clone(I.uniforms)}else D=w.uniforms;return D}function E(w,b){let D;for(let I=0,F=h.length;I<F;I++){const V=h[I];if(V.cacheKey===b){D=V,++D.usedTimes;break}}return D===void 0&&(D=new DT(s,b,w,r),h.push(D)),D}function M(w){if(--w.usedTimes===0){const b=h.indexOf(w);h[b]=h[h.length-1],h.pop(),w.destroy()}}function S(w){l.remove(w)}function T(){l.dispose()}return{getParameters:m,getProgramCacheKey:g,getUniforms:_,acquireProgram:E,releaseProgram:M,releaseShaderCache:S,programs:h,dispose:T}}function FT(){let s=new WeakMap;function e(o){return s.has(o)}function t(o){let a=s.get(o);return a===void 0&&(a={},s.set(o,a)),a}function i(o){s.delete(o)}function n(o,a,l){s.get(o)[a]=l}function r(){s=new WeakMap}return{has:e,get:t,remove:i,update:n,dispose:r}}function kT(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}function mg(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function gg(){const s=[];let e=0;const t=[],i=[],n=[];function r(){e=0,t.length=0,i.length=0,n.length=0}function o(u,d,f,p,v,m){let g=s[e];return g===void 0?(g={id:u.id,object:u,geometry:d,material:f,groupOrder:p,renderOrder:u.renderOrder,z:v,group:m},s[e]=g):(g.id=u.id,g.object=u,g.geometry=d,g.material=f,g.groupOrder=p,g.renderOrder=u.renderOrder,g.z=v,g.group=m),e++,g}function a(u,d,f,p,v,m){const g=o(u,d,f,p,v,m);f.transmission>0?i.push(g):f.transparent===!0?n.push(g):t.push(g)}function l(u,d,f,p,v,m){const g=o(u,d,f,p,v,m);f.transmission>0?i.unshift(g):f.transparent===!0?n.unshift(g):t.unshift(g)}function c(u,d){t.length>1&&t.sort(u||kT),i.length>1&&i.sort(d||mg),n.length>1&&n.sort(d||mg)}function h(){for(let u=e,d=s.length;u<d;u++){const f=s[u];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:t,transmissive:i,transparent:n,init:r,push:a,unshift:l,finish:h,sort:c}}function BT(){let s=new WeakMap;function e(i,n){const r=s.get(i);let o;return r===void 0?(o=new gg,s.set(i,[o])):n>=r.length?(o=new gg,r.push(o)):o=r[n],o}function t(){s=new WeakMap}return{get:e,dispose:t}}function zT(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new L,color:new ze};break;case"SpotLight":t={position:new L,direction:new L,color:new ze,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new L,color:new ze,distance:0,decay:0};break;case"HemisphereLight":t={direction:new L,skyColor:new ze,groundColor:new ze};break;case"RectAreaLight":t={color:new ze,position:new L,halfWidth:new L,halfHeight:new L};break}return s[e.id]=t,t}}}function GT(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new xe};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new xe};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new xe,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=t,t}}}let VT=0;function HT(s,e){return(e.castShadow?2:0)-(s.castShadow?2:0)+(e.map?1:0)-(s.map?1:0)}function WT(s){const e=new zT,t=GT(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let c=0;c<9;c++)i.probe.push(new L);const n=new L,r=new st,o=new st;function a(c){let h=0,u=0,d=0;for(let w=0;w<9;w++)i.probe[w].set(0,0,0);let f=0,p=0,v=0,m=0,g=0,y=0,x=0,_=0,E=0,M=0,S=0;c.sort(HT);for(let w=0,b=c.length;w<b;w++){const D=c[w],I=D.color,F=D.intensity,V=D.distance,J=D.shadow&&D.shadow.map?D.shadow.map.texture:null;if(D.isAmbientLight)h+=I.r*F,u+=I.g*F,d+=I.b*F;else if(D.isLightProbe){for(let O=0;O<9;O++)i.probe[O].addScaledVector(D.sh.coefficients[O],F);S++}else if(D.isDirectionalLight){const O=e.get(D);if(O.color.copy(D.color).multiplyScalar(D.intensity),D.castShadow){const ee=D.shadow,Y=t.get(D);Y.shadowIntensity=ee.intensity,Y.shadowBias=ee.bias,Y.shadowNormalBias=ee.normalBias,Y.shadowRadius=ee.radius,Y.shadowMapSize=ee.mapSize,i.directionalShadow[f]=Y,i.directionalShadowMap[f]=J,i.directionalShadowMatrix[f]=D.shadow.matrix,y++}i.directional[f]=O,f++}else if(D.isSpotLight){const O=e.get(D);O.position.setFromMatrixPosition(D.matrixWorld),O.color.copy(I).multiplyScalar(F),O.distance=V,O.coneCos=Math.cos(D.angle),O.penumbraCos=Math.cos(D.angle*(1-D.penumbra)),O.decay=D.decay,i.spot[v]=O;const ee=D.shadow;if(D.map&&(i.spotLightMap[E]=D.map,E++,ee.updateMatrices(D),D.castShadow&&M++),i.spotLightMatrix[v]=ee.matrix,D.castShadow){const Y=t.get(D);Y.shadowIntensity=ee.intensity,Y.shadowBias=ee.bias,Y.shadowNormalBias=ee.normalBias,Y.shadowRadius=ee.radius,Y.shadowMapSize=ee.mapSize,i.spotShadow[v]=Y,i.spotShadowMap[v]=J,_++}v++}else if(D.isRectAreaLight){const O=e.get(D);O.color.copy(I).multiplyScalar(F),O.halfWidth.set(D.width*.5,0,0),O.halfHeight.set(0,D.height*.5,0),i.rectArea[m]=O,m++}else if(D.isPointLight){const O=e.get(D);if(O.color.copy(D.color).multiplyScalar(D.intensity),O.distance=D.distance,O.decay=D.decay,D.castShadow){const ee=D.shadow,Y=t.get(D);Y.shadowIntensity=ee.intensity,Y.shadowBias=ee.bias,Y.shadowNormalBias=ee.normalBias,Y.shadowRadius=ee.radius,Y.shadowMapSize=ee.mapSize,Y.shadowCameraNear=ee.camera.near,Y.shadowCameraFar=ee.camera.far,i.pointShadow[p]=Y,i.pointShadowMap[p]=J,i.pointShadowMatrix[p]=D.shadow.matrix,x++}i.point[p]=O,p++}else if(D.isHemisphereLight){const O=e.get(D);O.skyColor.copy(D.color).multiplyScalar(F),O.groundColor.copy(D.groundColor).multiplyScalar(F),i.hemi[g]=O,g++}}m>0&&(s.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Je.LTC_FLOAT_1,i.rectAreaLTC2=Je.LTC_FLOAT_2):(i.rectAreaLTC1=Je.LTC_HALF_1,i.rectAreaLTC2=Je.LTC_HALF_2)),i.ambient[0]=h,i.ambient[1]=u,i.ambient[2]=d;const T=i.hash;(T.directionalLength!==f||T.pointLength!==p||T.spotLength!==v||T.rectAreaLength!==m||T.hemiLength!==g||T.numDirectionalShadows!==y||T.numPointShadows!==x||T.numSpotShadows!==_||T.numSpotMaps!==E||T.numLightProbes!==S)&&(i.directional.length=f,i.spot.length=v,i.rectArea.length=m,i.point.length=p,i.hemi.length=g,i.directionalShadow.length=y,i.directionalShadowMap.length=y,i.pointShadow.length=x,i.pointShadowMap.length=x,i.spotShadow.length=_,i.spotShadowMap.length=_,i.directionalShadowMatrix.length=y,i.pointShadowMatrix.length=x,i.spotLightMatrix.length=_+E-M,i.spotLightMap.length=E,i.numSpotLightShadowsWithMaps=M,i.numLightProbes=S,T.directionalLength=f,T.pointLength=p,T.spotLength=v,T.rectAreaLength=m,T.hemiLength=g,T.numDirectionalShadows=y,T.numPointShadows=x,T.numSpotShadows=_,T.numSpotMaps=E,T.numLightProbes=S,i.version=VT++)}function l(c,h){let u=0,d=0,f=0,p=0,v=0;const m=h.matrixWorldInverse;for(let g=0,y=c.length;g<y;g++){const x=c[g];if(x.isDirectionalLight){const _=i.directional[u];_.direction.setFromMatrixPosition(x.matrixWorld),n.setFromMatrixPosition(x.target.matrixWorld),_.direction.sub(n),_.direction.transformDirection(m),u++}else if(x.isSpotLight){const _=i.spot[f];_.position.setFromMatrixPosition(x.matrixWorld),_.position.applyMatrix4(m),_.direction.setFromMatrixPosition(x.matrixWorld),n.setFromMatrixPosition(x.target.matrixWorld),_.direction.sub(n),_.direction.transformDirection(m),f++}else if(x.isRectAreaLight){const _=i.rectArea[p];_.position.setFromMatrixPosition(x.matrixWorld),_.position.applyMatrix4(m),o.identity(),r.copy(x.matrixWorld),r.premultiply(m),o.extractRotation(r),_.halfWidth.set(x.width*.5,0,0),_.halfHeight.set(0,x.height*.5,0),_.halfWidth.applyMatrix4(o),_.halfHeight.applyMatrix4(o),p++}else if(x.isPointLight){const _=i.point[d];_.position.setFromMatrixPosition(x.matrixWorld),_.position.applyMatrix4(m),d++}else if(x.isHemisphereLight){const _=i.hemi[v];_.direction.setFromMatrixPosition(x.matrixWorld),_.direction.transformDirection(m),v++}}}return{setup:a,setupView:l,state:i}}function vg(s){const e=new WT(s),t=[],i=[];function n(h){c.camera=h,t.length=0,i.length=0}function r(h){t.push(h)}function o(h){i.push(h)}function a(){e.setup(t)}function l(h){e.setupView(t,h)}const c={lightsArray:t,shadowsArray:i,camera:null,lights:e,transmissionRenderTarget:{}};return{init:n,state:c,setupLights:a,setupLightsView:l,pushLight:r,pushShadow:o}}function XT(s){let e=new WeakMap;function t(n,r=0){const o=e.get(n);let a;return o===void 0?(a=new vg(s),e.set(n,[a])):r>=o.length?(a=new vg(s),o.push(a)):a=o[r],a}function i(){e=new WeakMap}return{get:t,dispose:i}}const YT=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,jT=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function qT(s,e,t){let i=new yl;const n=new xe,r=new xe,o=new Pt,a=new bl({depthPacking:Lf}),l=new cu,c={},h=t.maxTextureSize,u={[vr]:ni,[ni]:vr,[xi]:xi},d=new Ti({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new xe},radius:{value:4}},vertexShader:YT,fragmentShader:jT}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const p=new yt;p.setAttribute("position",new Ct(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const v=new ke(p,d),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=bf;let g=this.type;this.render=function(M,S,T){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||M.length===0)return;const w=s.getRenderTarget(),b=s.getActiveCubeFace(),D=s.getActiveMipmapLevel(),I=s.state;I.setBlending(Or),I.buffers.color.setClear(1,1,1,1),I.buffers.depth.setTest(!0),I.setScissorTest(!1);const F=g!==hr&&this.type===hr,V=g===hr&&this.type!==hr;for(let J=0,O=M.length;J<O;J++){const ee=M[J],Y=ee.shadow;if(Y===void 0){console.warn("THREE.WebGLShadowMap:",ee,"has no shadow.");continue}if(Y.autoUpdate===!1&&Y.needsUpdate===!1)continue;n.copy(Y.mapSize);const j=Y.getFrameExtents();if(n.multiply(j),r.copy(Y.mapSize),(n.x>h||n.y>h)&&(n.x>h&&(r.x=Math.floor(h/j.x),n.x=r.x*j.x,Y.mapSize.x=r.x),n.y>h&&(r.y=Math.floor(h/j.y),n.y=r.y*j.y,Y.mapSize.y=r.y)),Y.map===null||F===!0||V===!0){const U=this.type!==hr?{minFilter:jn,magFilter:jn}:{};Y.map!==null&&Y.map.dispose(),Y.map=new ji(n.x,n.y,U),Y.map.texture.name=ee.name+".shadowMap",Y.camera.updateProjectionMatrix()}s.setRenderTarget(Y.map),s.clear();const $=Y.getViewportCount();for(let U=0;U<$;U++){const Z=Y.getViewport(U);o.set(r.x*Z.x,r.y*Z.y,r.x*Z.z,r.y*Z.w),I.viewport(o),Y.updateMatrices(ee,U),i=Y.getFrustum(),_(S,T,Y.camera,ee,this.type)}Y.isPointLightShadow!==!0&&this.type===hr&&y(Y,T),Y.needsUpdate=!1}g=this.type,m.needsUpdate=!1,s.setRenderTarget(w,b,D)};function y(M,S){const T=e.update(v);d.defines.VSM_SAMPLES!==M.blurSamples&&(d.defines.VSM_SAMPLES=M.blurSamples,f.defines.VSM_SAMPLES=M.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),M.mapPass===null&&(M.mapPass=new ji(n.x,n.y)),d.uniforms.shadow_pass.value=M.map.texture,d.uniforms.resolution.value=M.mapSize,d.uniforms.radius.value=M.radius,s.setRenderTarget(M.mapPass),s.clear(),s.renderBufferDirect(S,null,T,d,v,null),f.uniforms.shadow_pass.value=M.mapPass.texture,f.uniforms.resolution.value=M.mapSize,f.uniforms.radius.value=M.radius,s.setRenderTarget(M.map),s.clear(),s.renderBufferDirect(S,null,T,f,v,null)}function x(M,S,T,w){let b=null;const D=T.isPointLight===!0?M.customDistanceMaterial:M.customDepthMaterial;if(D!==void 0)b=D;else if(b=T.isPointLight===!0?l:a,s.localClippingEnabled&&S.clipShadows===!0&&Array.isArray(S.clippingPlanes)&&S.clippingPlanes.length!==0||S.displacementMap&&S.displacementScale!==0||S.alphaMap&&S.alphaTest>0||S.map&&S.alphaTest>0){const I=b.uuid,F=S.uuid;let V=c[I];V===void 0&&(V={},c[I]=V);let J=V[F];J===void 0&&(J=b.clone(),V[F]=J,S.addEventListener("dispose",E)),b=J}if(b.visible=S.visible,b.wireframe=S.wireframe,w===hr?b.side=S.shadowSide!==null?S.shadowSide:S.side:b.side=S.shadowSide!==null?S.shadowSide:u[S.side],b.alphaMap=S.alphaMap,b.alphaTest=S.alphaTest,b.map=S.map,b.clipShadows=S.clipShadows,b.clippingPlanes=S.clippingPlanes,b.clipIntersection=S.clipIntersection,b.displacementMap=S.displacementMap,b.displacementScale=S.displacementScale,b.displacementBias=S.displacementBias,b.wireframeLinewidth=S.wireframeLinewidth,b.linewidth=S.linewidth,T.isPointLight===!0&&b.isMeshDistanceMaterial===!0){const I=s.properties.get(b);I.light=T}return b}function _(M,S,T,w,b){if(M.visible===!1)return;if(M.layers.test(S.layers)&&(M.isMesh||M.isLine||M.isPoints)&&(M.castShadow||M.receiveShadow&&b===hr)&&(!M.frustumCulled||i.intersectsObject(M))){M.modelViewMatrix.multiplyMatrices(T.matrixWorldInverse,M.matrixWorld);const F=e.update(M),V=M.material;if(Array.isArray(V)){const J=F.groups;for(let O=0,ee=J.length;O<ee;O++){const Y=J[O],j=V[Y.materialIndex];if(j&&j.visible){const $=x(M,j,w,b);M.onBeforeShadow(s,M,S,T,F,$,Y),s.renderBufferDirect(T,null,F,$,M,Y),M.onAfterShadow(s,M,S,T,F,$,Y)}}}else if(V.visible){const J=x(M,V,w,b);M.onBeforeShadow(s,M,S,T,F,J,null),s.renderBufferDirect(T,null,F,J,M,null),M.onAfterShadow(s,M,S,T,F,J,null)}}const I=M.children;for(let F=0,V=I.length;F<V;F++)_(I[F],S,T,w,b)}function E(M){M.target.removeEventListener("dispose",E);for(const T in c){const w=c[T],b=M.target.uuid;b in w&&(w[b].dispose(),delete w[b])}}}const ZT={[Xc]:Yc,[jc]:Jc,[qc]:Kc,[$s]:Zc,[Yc]:Xc,[Jc]:jc,[Kc]:qc,[Zc]:$s};function JT(s,e){function t(){let te=!1;const Ce=new Pt;let fe=null;const Pe=new Pt(0,0,0,0);return{setMask:function(Ne){fe!==Ne&&!te&&(s.colorMask(Ne,Ne,Ne,Ne),fe=Ne)},setLocked:function(Ne){te=Ne},setClear:function(Ne,De,ot,St,ct){ct===!0&&(Ne*=St,De*=St,ot*=St),Ce.set(Ne,De,ot,St),Pe.equals(Ce)===!1&&(s.clearColor(Ne,De,ot,St),Pe.copy(Ce))},reset:function(){te=!1,fe=null,Pe.set(-1,0,0,0)}}}function i(){let te=!1,Ce=!1,fe=null,Pe=null,Ne=null;return{setReversed:function(De){if(Ce!==De){const ot=e.get("EXT_clip_control");De?ot.clipControlEXT(ot.LOWER_LEFT_EXT,ot.ZERO_TO_ONE_EXT):ot.clipControlEXT(ot.LOWER_LEFT_EXT,ot.NEGATIVE_ONE_TO_ONE_EXT),Ce=De;const St=Ne;Ne=null,this.setClear(St)}},getReversed:function(){return Ce},setTest:function(De){De?W(s.DEPTH_TEST):ne(s.DEPTH_TEST)},setMask:function(De){fe!==De&&!te&&(s.depthMask(De),fe=De)},setFunc:function(De){if(Ce&&(De=ZT[De]),Pe!==De){switch(De){case Xc:s.depthFunc(s.NEVER);break;case Yc:s.depthFunc(s.ALWAYS);break;case jc:s.depthFunc(s.LESS);break;case $s:s.depthFunc(s.LEQUAL);break;case qc:s.depthFunc(s.EQUAL);break;case Zc:s.depthFunc(s.GEQUAL);break;case Jc:s.depthFunc(s.GREATER);break;case Kc:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}Pe=De}},setLocked:function(De){te=De},setClear:function(De){Ne!==De&&(Ce&&(De=1-De),s.clearDepth(De),Ne=De)},reset:function(){te=!1,fe=null,Pe=null,Ne=null,Ce=!1}}}function n(){let te=!1,Ce=null,fe=null,Pe=null,Ne=null,De=null,ot=null,St=null,ct=null;return{setTest:function(rt){te||(rt?W(s.STENCIL_TEST):ne(s.STENCIL_TEST))},setMask:function(rt){Ce!==rt&&!te&&(s.stencilMask(rt),Ce=rt)},setFunc:function(rt,Xt,Kt){(fe!==rt||Pe!==Xt||Ne!==Kt)&&(s.stencilFunc(rt,Xt,Kt),fe=rt,Pe=Xt,Ne=Kt)},setOp:function(rt,Xt,Kt){(De!==rt||ot!==Xt||St!==Kt)&&(s.stencilOp(rt,Xt,Kt),De=rt,ot=Xt,St=Kt)},setLocked:function(rt){te=rt},setClear:function(rt){ct!==rt&&(s.clearStencil(rt),ct=rt)},reset:function(){te=!1,Ce=null,fe=null,Pe=null,Ne=null,De=null,ot=null,St=null,ct=null}}}const r=new t,o=new i,a=new n,l=new WeakMap,c=new WeakMap;let h={},u={},d=new WeakMap,f=[],p=null,v=!1,m=null,g=null,y=null,x=null,_=null,E=null,M=null,S=new ze(0,0,0),T=0,w=!1,b=null,D=null,I=null,F=null,V=null;const J=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let O=!1,ee=0;const Y=s.getParameter(s.VERSION);Y.indexOf("WebGL")!==-1?(ee=parseFloat(/^WebGL (\d)/.exec(Y)[1]),O=ee>=1):Y.indexOf("OpenGL ES")!==-1&&(ee=parseFloat(/^OpenGL ES (\d)/.exec(Y)[1]),O=ee>=2);let j=null,$={};const U=s.getParameter(s.SCISSOR_BOX),Z=s.getParameter(s.VIEWPORT),K=new Pt().fromArray(U),k=new Pt().fromArray(Z);function H(te,Ce,fe,Pe){const Ne=new Uint8Array(4),De=s.createTexture();s.bindTexture(te,De),s.texParameteri(te,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(te,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let ot=0;ot<fe;ot++)te===s.TEXTURE_3D||te===s.TEXTURE_2D_ARRAY?s.texImage3D(Ce,0,s.RGBA,1,1,Pe,0,s.RGBA,s.UNSIGNED_BYTE,Ne):s.texImage2D(Ce+ot,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,Ne);return De}const q={};q[s.TEXTURE_2D]=H(s.TEXTURE_2D,s.TEXTURE_2D,1),q[s.TEXTURE_CUBE_MAP]=H(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),q[s.TEXTURE_2D_ARRAY]=H(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),q[s.TEXTURE_3D]=H(s.TEXTURE_3D,s.TEXTURE_3D,1,1),r.setClear(0,0,0,1),o.setClear(1),a.setClear(0),W(s.DEPTH_TEST),o.setFunc($s),he(!1),ue(Gd),W(s.CULL_FACE),X(Or);function W(te){h[te]!==!0&&(s.enable(te),h[te]=!0)}function ne(te){h[te]!==!1&&(s.disable(te),h[te]=!1)}function ge(te,Ce){return u[te]!==Ce?(s.bindFramebuffer(te,Ce),u[te]=Ce,te===s.DRAW_FRAMEBUFFER&&(u[s.FRAMEBUFFER]=Ce),te===s.FRAMEBUFFER&&(u[s.DRAW_FRAMEBUFFER]=Ce),!0):!1}function ye(te,Ce){let fe=f,Pe=!1;if(te){fe=d.get(Ce),fe===void 0&&(fe=[],d.set(Ce,fe));const Ne=te.textures;if(fe.length!==Ne.length||fe[0]!==s.COLOR_ATTACHMENT0){for(let De=0,ot=Ne.length;De<ot;De++)fe[De]=s.COLOR_ATTACHMENT0+De;fe.length=Ne.length,Pe=!0}}else fe[0]!==s.BACK&&(fe[0]=s.BACK,Pe=!0);Pe&&s.drawBuffers(fe)}function Se(te){return p!==te?(s.useProgram(te),p=te,!0):!1}const pe={[is]:s.FUNC_ADD,[N0]:s.FUNC_SUBTRACT,[O0]:s.FUNC_REVERSE_SUBTRACT};pe[F0]=s.MIN,pe[k0]=s.MAX;const Ie={[B0]:s.ZERO,[z0]:s.ONE,[G0]:s.SRC_COLOR,[Hc]:s.SRC_ALPHA,[j0]:s.SRC_ALPHA_SATURATE,[X0]:s.DST_COLOR,[H0]:s.DST_ALPHA,[V0]:s.ONE_MINUS_SRC_COLOR,[Wc]:s.ONE_MINUS_SRC_ALPHA,[Y0]:s.ONE_MINUS_DST_COLOR,[W0]:s.ONE_MINUS_DST_ALPHA,[q0]:s.CONSTANT_COLOR,[Z0]:s.ONE_MINUS_CONSTANT_COLOR,[J0]:s.CONSTANT_ALPHA,[K0]:s.ONE_MINUS_CONSTANT_ALPHA};function X(te,Ce,fe,Pe,Ne,De,ot,St,ct,rt){if(te===Or){v===!0&&(ne(s.BLEND),v=!1);return}if(v===!1&&(W(s.BLEND),v=!0),te!==U0){if(te!==m||rt!==w){if((g!==is||_!==is)&&(s.blendEquation(s.FUNC_ADD),g=is,_=is),rt)switch(te){case qs:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case Vd:s.blendFunc(s.ONE,s.ONE);break;case Hd:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case Wd:s.blendFuncSeparate(s.ZERO,s.SRC_COLOR,s.ZERO,s.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",te);break}else switch(te){case qs:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case Vd:s.blendFunc(s.SRC_ALPHA,s.ONE);break;case Hd:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case Wd:s.blendFunc(s.ZERO,s.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",te);break}y=null,x=null,E=null,M=null,S.set(0,0,0),T=0,m=te,w=rt}return}Ne=Ne||Ce,De=De||fe,ot=ot||Pe,(Ce!==g||Ne!==_)&&(s.blendEquationSeparate(pe[Ce],pe[Ne]),g=Ce,_=Ne),(fe!==y||Pe!==x||De!==E||ot!==M)&&(s.blendFuncSeparate(Ie[fe],Ie[Pe],Ie[De],Ie[ot]),y=fe,x=Pe,E=De,M=ot),(St.equals(S)===!1||ct!==T)&&(s.blendColor(St.r,St.g,St.b,ct),S.copy(St),T=ct),m=te,w=!1}function Oe(te,Ce){te.side===xi?ne(s.CULL_FACE):W(s.CULL_FACE);let fe=te.side===ni;Ce&&(fe=!fe),he(fe),te.blending===qs&&te.transparent===!1?X(Or):X(te.blending,te.blendEquation,te.blendSrc,te.blendDst,te.blendEquationAlpha,te.blendSrcAlpha,te.blendDstAlpha,te.blendColor,te.blendAlpha,te.premultipliedAlpha),o.setFunc(te.depthFunc),o.setTest(te.depthTest),o.setMask(te.depthWrite),r.setMask(te.colorWrite);const Pe=te.stencilWrite;a.setTest(Pe),Pe&&(a.setMask(te.stencilWriteMask),a.setFunc(te.stencilFunc,te.stencilRef,te.stencilFuncMask),a.setOp(te.stencilFail,te.stencilZFail,te.stencilZPass)),Me(te.polygonOffset,te.polygonOffsetFactor,te.polygonOffsetUnits),te.alphaToCoverage===!0?W(s.SAMPLE_ALPHA_TO_COVERAGE):ne(s.SAMPLE_ALPHA_TO_COVERAGE)}function he(te){b!==te&&(te?s.frontFace(s.CW):s.frontFace(s.CCW),b=te)}function ue(te){te!==D0?(W(s.CULL_FACE),te!==D&&(te===Gd?s.cullFace(s.BACK):te===L0?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):ne(s.CULL_FACE),D=te}function ie(te){te!==I&&(O&&s.lineWidth(te),I=te)}function Me(te,Ce,fe){te?(W(s.POLYGON_OFFSET_FILL),(F!==Ce||V!==fe)&&(s.polygonOffset(Ce,fe),F=Ce,V=fe)):ne(s.POLYGON_OFFSET_FILL)}function le(te){te?W(s.SCISSOR_TEST):ne(s.SCISSOR_TEST)}function P(te){te===void 0&&(te=s.TEXTURE0+J-1),j!==te&&(s.activeTexture(te),j=te)}function A(te,Ce,fe){fe===void 0&&(j===null?fe=s.TEXTURE0+J-1:fe=j);let Pe=$[fe];Pe===void 0&&(Pe={type:void 0,texture:void 0},$[fe]=Pe),(Pe.type!==te||Pe.texture!==Ce)&&(j!==fe&&(s.activeTexture(fe),j=fe),s.bindTexture(te,Ce||q[te]),Pe.type=te,Pe.texture=Ce)}function Q(){const te=$[j];te!==void 0&&te.type!==void 0&&(s.bindTexture(te.type,null),te.type=void 0,te.texture=void 0)}function ae(){try{s.compressedTexImage2D(...arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function se(){try{s.compressedTexImage3D(...arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function de(){try{s.texSubImage2D(...arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function Ee(){try{s.texSubImage3D(...arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function be(){try{s.compressedTexSubImage2D(...arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function Ae(){try{s.compressedTexSubImage3D(...arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function Ze(){try{s.texStorage2D(...arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function Re(){try{s.texStorage3D(...arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function Be(){try{s.texImage2D(...arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function Ge(){try{s.texImage3D(...arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function Ve(te){K.equals(te)===!1&&(s.scissor(te.x,te.y,te.z,te.w),K.copy(te))}function Te(te){k.equals(te)===!1&&(s.viewport(te.x,te.y,te.z,te.w),k.copy(te))}function ut(te,Ce){let fe=c.get(Ce);fe===void 0&&(fe=new WeakMap,c.set(Ce,fe));let Pe=fe.get(te);Pe===void 0&&(Pe=s.getUniformBlockIndex(Ce,te.name),fe.set(te,Pe))}function tt(te,Ce){const Pe=c.get(Ce).get(te);l.get(Ce)!==Pe&&(s.uniformBlockBinding(Ce,Pe,te.__bindingPointIndex),l.set(Ce,Pe))}function wt(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.blendColor(0,0,0,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),o.setReversed(!1),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),h={},j=null,$={},u={},d=new WeakMap,f=[],p=null,v=!1,m=null,g=null,y=null,x=null,_=null,E=null,M=null,S=new ze(0,0,0),T=0,w=!1,b=null,D=null,I=null,F=null,V=null,K.set(0,0,s.canvas.width,s.canvas.height),k.set(0,0,s.canvas.width,s.canvas.height),r.reset(),o.reset(),a.reset()}return{buffers:{color:r,depth:o,stencil:a},enable:W,disable:ne,bindFramebuffer:ge,drawBuffers:ye,useProgram:Se,setBlending:X,setMaterial:Oe,setFlipSided:he,setCullFace:ue,setLineWidth:ie,setPolygonOffset:Me,setScissorTest:le,activeTexture:P,bindTexture:A,unbindTexture:Q,compressedTexImage2D:ae,compressedTexImage3D:se,texImage2D:Be,texImage3D:Ge,updateUBOMapping:ut,uniformBlockBinding:tt,texStorage2D:Ze,texStorage3D:Re,texSubImage2D:de,texSubImage3D:Ee,compressedTexSubImage2D:be,compressedTexSubImage3D:Ae,scissor:Ve,viewport:Te,reset:wt}}function KT(s,e,t,i,n,r,o){const a=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),c=new xe,h=new WeakMap;let u;const d=new WeakMap;let f=!1;try{f=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function p(P,A){return f?new OffscreenCanvas(P,A):Za("canvas")}function v(P,A,Q){let ae=1;const se=le(P);if((se.width>Q||se.height>Q)&&(ae=Q/Math.max(se.width,se.height)),ae<1)if(typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&P instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&P instanceof ImageBitmap||typeof VideoFrame<"u"&&P instanceof VideoFrame){const de=Math.floor(ae*se.width),Ee=Math.floor(ae*se.height);u===void 0&&(u=p(de,Ee));const be=A?p(de,Ee):u;return be.width=de,be.height=Ee,be.getContext("2d").drawImage(P,0,0,de,Ee),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+se.width+"x"+se.height+") to ("+de+"x"+Ee+")."),be}else return"data"in P&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+se.width+"x"+se.height+")."),P;return P}function m(P){return P.generateMipmaps}function g(P){s.generateMipmap(P)}function y(P){return P.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:P.isWebGL3DRenderTarget?s.TEXTURE_3D:P.isWebGLArrayRenderTarget||P.isCompressedArrayTexture?s.TEXTURE_2D_ARRAY:s.TEXTURE_2D}function x(P,A,Q,ae,se=!1){if(P!==null){if(s[P]!==void 0)return s[P];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+P+"'")}let de=A;if(A===s.RED&&(Q===s.FLOAT&&(de=s.R32F),Q===s.HALF_FLOAT&&(de=s.R16F),Q===s.UNSIGNED_BYTE&&(de=s.R8)),A===s.RED_INTEGER&&(Q===s.UNSIGNED_BYTE&&(de=s.R8UI),Q===s.UNSIGNED_SHORT&&(de=s.R16UI),Q===s.UNSIGNED_INT&&(de=s.R32UI),Q===s.BYTE&&(de=s.R8I),Q===s.SHORT&&(de=s.R16I),Q===s.INT&&(de=s.R32I)),A===s.RG&&(Q===s.FLOAT&&(de=s.RG32F),Q===s.HALF_FLOAT&&(de=s.RG16F),Q===s.UNSIGNED_BYTE&&(de=s.RG8)),A===s.RG_INTEGER&&(Q===s.UNSIGNED_BYTE&&(de=s.RG8UI),Q===s.UNSIGNED_SHORT&&(de=s.RG16UI),Q===s.UNSIGNED_INT&&(de=s.RG32UI),Q===s.BYTE&&(de=s.RG8I),Q===s.SHORT&&(de=s.RG16I),Q===s.INT&&(de=s.RG32I)),A===s.RGB_INTEGER&&(Q===s.UNSIGNED_BYTE&&(de=s.RGB8UI),Q===s.UNSIGNED_SHORT&&(de=s.RGB16UI),Q===s.UNSIGNED_INT&&(de=s.RGB32UI),Q===s.BYTE&&(de=s.RGB8I),Q===s.SHORT&&(de=s.RGB16I),Q===s.INT&&(de=s.RGB32I)),A===s.RGBA_INTEGER&&(Q===s.UNSIGNED_BYTE&&(de=s.RGBA8UI),Q===s.UNSIGNED_SHORT&&(de=s.RGBA16UI),Q===s.UNSIGNED_INT&&(de=s.RGBA32UI),Q===s.BYTE&&(de=s.RGBA8I),Q===s.SHORT&&(de=s.RGBA16I),Q===s.INT&&(de=s.RGBA32I)),A===s.RGB&&Q===s.UNSIGNED_INT_5_9_9_9_REV&&(de=s.RGB9_E5),A===s.RGBA){const Ee=se?Ya:Nt.getTransfer(ae);Q===s.FLOAT&&(de=s.RGBA32F),Q===s.HALF_FLOAT&&(de=s.RGBA16F),Q===s.UNSIGNED_BYTE&&(de=Ee===Zt?s.SRGB8_ALPHA8:s.RGBA8),Q===s.UNSIGNED_SHORT_4_4_4_4&&(de=s.RGBA4),Q===s.UNSIGNED_SHORT_5_5_5_1&&(de=s.RGB5_A1)}return(de===s.R16F||de===s.R32F||de===s.RG16F||de===s.RG32F||de===s.RGBA16F||de===s.RGBA32F)&&e.get("EXT_color_buffer_float"),de}function _(P,A){let Q;return P?A===null||A===Gr||A===Go?Q=s.DEPTH24_STENCIL8:A===wi?Q=s.DEPTH32F_STENCIL8:A===zo&&(Q=s.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):A===null||A===Gr||A===Go?Q=s.DEPTH_COMPONENT24:A===wi?Q=s.DEPTH_COMPONENT32F:A===zo&&(Q=s.DEPTH_COMPONENT16),Q}function E(P,A){return m(P)===!0||P.isFramebufferTexture&&P.minFilter!==jn&&P.minFilter!==Sn?Math.log2(Math.max(A.width,A.height))+1:P.mipmaps!==void 0&&P.mipmaps.length>0?P.mipmaps.length:P.isCompressedTexture&&Array.isArray(P.image)?A.mipmaps.length:1}function M(P){const A=P.target;A.removeEventListener("dispose",M),T(A),A.isVideoTexture&&h.delete(A)}function S(P){const A=P.target;A.removeEventListener("dispose",S),b(A)}function T(P){const A=i.get(P);if(A.__webglInit===void 0)return;const Q=P.source,ae=d.get(Q);if(ae){const se=ae[A.__cacheKey];se.usedTimes--,se.usedTimes===0&&w(P),Object.keys(ae).length===0&&d.delete(Q)}i.remove(P)}function w(P){const A=i.get(P);s.deleteTexture(A.__webglTexture);const Q=P.source,ae=d.get(Q);delete ae[A.__cacheKey],o.memory.textures--}function b(P){const A=i.get(P);if(P.depthTexture&&(P.depthTexture.dispose(),i.remove(P.depthTexture)),P.isWebGLCubeRenderTarget)for(let ae=0;ae<6;ae++){if(Array.isArray(A.__webglFramebuffer[ae]))for(let se=0;se<A.__webglFramebuffer[ae].length;se++)s.deleteFramebuffer(A.__webglFramebuffer[ae][se]);else s.deleteFramebuffer(A.__webglFramebuffer[ae]);A.__webglDepthbuffer&&s.deleteRenderbuffer(A.__webglDepthbuffer[ae])}else{if(Array.isArray(A.__webglFramebuffer))for(let ae=0;ae<A.__webglFramebuffer.length;ae++)s.deleteFramebuffer(A.__webglFramebuffer[ae]);else s.deleteFramebuffer(A.__webglFramebuffer);if(A.__webglDepthbuffer&&s.deleteRenderbuffer(A.__webglDepthbuffer),A.__webglMultisampledFramebuffer&&s.deleteFramebuffer(A.__webglMultisampledFramebuffer),A.__webglColorRenderbuffer)for(let ae=0;ae<A.__webglColorRenderbuffer.length;ae++)A.__webglColorRenderbuffer[ae]&&s.deleteRenderbuffer(A.__webglColorRenderbuffer[ae]);A.__webglDepthRenderbuffer&&s.deleteRenderbuffer(A.__webglDepthRenderbuffer)}const Q=P.textures;for(let ae=0,se=Q.length;ae<se;ae++){const de=i.get(Q[ae]);de.__webglTexture&&(s.deleteTexture(de.__webglTexture),o.memory.textures--),i.remove(Q[ae])}i.remove(P)}let D=0;function I(){D=0}function F(){const P=D;return P>=n.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+P+" texture units while this GPU supports only "+n.maxTextures),D+=1,P}function V(P){const A=[];return A.push(P.wrapS),A.push(P.wrapT),A.push(P.wrapR||0),A.push(P.magFilter),A.push(P.minFilter),A.push(P.anisotropy),A.push(P.internalFormat),A.push(P.format),A.push(P.type),A.push(P.generateMipmaps),A.push(P.premultiplyAlpha),A.push(P.flipY),A.push(P.unpackAlignment),A.push(P.colorSpace),A.join()}function J(P,A){const Q=i.get(P);if(P.isVideoTexture&&ie(P),P.isRenderTargetTexture===!1&&P.version>0&&Q.__version!==P.version){const ae=P.image;if(ae===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ae.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{k(Q,P,A);return}}t.bindTexture(s.TEXTURE_2D,Q.__webglTexture,s.TEXTURE0+A)}function O(P,A){const Q=i.get(P);if(P.version>0&&Q.__version!==P.version){k(Q,P,A);return}t.bindTexture(s.TEXTURE_2D_ARRAY,Q.__webglTexture,s.TEXTURE0+A)}function ee(P,A){const Q=i.get(P);if(P.version>0&&Q.__version!==P.version){k(Q,P,A);return}t.bindTexture(s.TEXTURE_3D,Q.__webglTexture,s.TEXTURE0+A)}function Y(P,A){const Q=i.get(P);if(P.version>0&&Q.__version!==P.version){H(Q,P,A);return}t.bindTexture(s.TEXTURE_CUBE_MAP,Q.__webglTexture,s.TEXTURE0+A)}const j={[nr]:s.REPEAT,[Mi]:s.CLAMP_TO_EDGE,[Ha]:s.MIRRORED_REPEAT},$={[jn]:s.NEAREST,[Sf]:s.NEAREST_MIPMAP_NEAREST,[No]:s.NEAREST_MIPMAP_LINEAR,[Sn]:s.LINEAR,[Ca]:s.LINEAR_MIPMAP_NEAREST,[ir]:s.LINEAR_MIPMAP_LINEAR},U={[dv]:s.NEVER,[_v]:s.ALWAYS,[fv]:s.LESS,[Uf]:s.LEQUAL,[pv]:s.EQUAL,[vv]:s.GEQUAL,[mv]:s.GREATER,[gv]:s.NOTEQUAL};function Z(P,A){if(A.type===wi&&e.has("OES_texture_float_linear")===!1&&(A.magFilter===Sn||A.magFilter===Ca||A.magFilter===No||A.magFilter===ir||A.minFilter===Sn||A.minFilter===Ca||A.minFilter===No||A.minFilter===ir)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),s.texParameteri(P,s.TEXTURE_WRAP_S,j[A.wrapS]),s.texParameteri(P,s.TEXTURE_WRAP_T,j[A.wrapT]),(P===s.TEXTURE_3D||P===s.TEXTURE_2D_ARRAY)&&s.texParameteri(P,s.TEXTURE_WRAP_R,j[A.wrapR]),s.texParameteri(P,s.TEXTURE_MAG_FILTER,$[A.magFilter]),s.texParameteri(P,s.TEXTURE_MIN_FILTER,$[A.minFilter]),A.compareFunction&&(s.texParameteri(P,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(P,s.TEXTURE_COMPARE_FUNC,U[A.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(A.magFilter===jn||A.minFilter!==No&&A.minFilter!==ir||A.type===wi&&e.has("OES_texture_float_linear")===!1)return;if(A.anisotropy>1||i.get(A).__currentAnisotropy){const Q=e.get("EXT_texture_filter_anisotropic");s.texParameterf(P,Q.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(A.anisotropy,n.getMaxAnisotropy())),i.get(A).__currentAnisotropy=A.anisotropy}}}function K(P,A){let Q=!1;P.__webglInit===void 0&&(P.__webglInit=!0,A.addEventListener("dispose",M));const ae=A.source;let se=d.get(ae);se===void 0&&(se={},d.set(ae,se));const de=V(A);if(de!==P.__cacheKey){se[de]===void 0&&(se[de]={texture:s.createTexture(),usedTimes:0},o.memory.textures++,Q=!0),se[de].usedTimes++;const Ee=se[P.__cacheKey];Ee!==void 0&&(se[P.__cacheKey].usedTimes--,Ee.usedTimes===0&&w(A)),P.__cacheKey=de,P.__webglTexture=se[de].texture}return Q}function k(P,A,Q){let ae=s.TEXTURE_2D;(A.isDataArrayTexture||A.isCompressedArrayTexture)&&(ae=s.TEXTURE_2D_ARRAY),A.isData3DTexture&&(ae=s.TEXTURE_3D);const se=K(P,A),de=A.source;t.bindTexture(ae,P.__webglTexture,s.TEXTURE0+Q);const Ee=i.get(de);if(de.version!==Ee.__version||se===!0){t.activeTexture(s.TEXTURE0+Q);const be=Nt.getPrimaries(Nt.workingColorSpace),Ae=A.colorSpace===Rr?null:Nt.getPrimaries(A.colorSpace),Ze=A.colorSpace===Rr||be===Ae?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,A.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,A.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,A.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ze);let Re=v(A.image,!1,n.maxTextureSize);Re=Me(A,Re);const Be=r.convert(A.format,A.colorSpace),Ge=r.convert(A.type);let Ve=x(A.internalFormat,Be,Ge,A.colorSpace,A.isVideoTexture);Z(ae,A);let Te;const ut=A.mipmaps,tt=A.isVideoTexture!==!0,wt=Ee.__version===void 0||se===!0,te=de.dataReady,Ce=E(A,Re);if(A.isDepthTexture)Ve=_(A.format===Ho,A.type),wt&&(tt?t.texStorage2D(s.TEXTURE_2D,1,Ve,Re.width,Re.height):t.texImage2D(s.TEXTURE_2D,0,Ve,Re.width,Re.height,0,Be,Ge,null));else if(A.isDataTexture)if(ut.length>0){tt&&wt&&t.texStorage2D(s.TEXTURE_2D,Ce,Ve,ut[0].width,ut[0].height);for(let fe=0,Pe=ut.length;fe<Pe;fe++)Te=ut[fe],tt?te&&t.texSubImage2D(s.TEXTURE_2D,fe,0,0,Te.width,Te.height,Be,Ge,Te.data):t.texImage2D(s.TEXTURE_2D,fe,Ve,Te.width,Te.height,0,Be,Ge,Te.data);A.generateMipmaps=!1}else tt?(wt&&t.texStorage2D(s.TEXTURE_2D,Ce,Ve,Re.width,Re.height),te&&t.texSubImage2D(s.TEXTURE_2D,0,0,0,Re.width,Re.height,Be,Ge,Re.data)):t.texImage2D(s.TEXTURE_2D,0,Ve,Re.width,Re.height,0,Be,Ge,Re.data);else if(A.isCompressedTexture)if(A.isCompressedArrayTexture){tt&&wt&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Ce,Ve,ut[0].width,ut[0].height,Re.depth);for(let fe=0,Pe=ut.length;fe<Pe;fe++)if(Te=ut[fe],A.format!==hi)if(Be!==null)if(tt){if(te)if(A.layerUpdates.size>0){const Ne=$d(Te.width,Te.height,A.format,A.type);for(const De of A.layerUpdates){const ot=Te.data.subarray(De*Ne/Te.data.BYTES_PER_ELEMENT,(De+1)*Ne/Te.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,fe,0,0,De,Te.width,Te.height,1,Be,ot)}A.clearLayerUpdates()}else t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,fe,0,0,0,Te.width,Te.height,Re.depth,Be,Te.data)}else t.compressedTexImage3D(s.TEXTURE_2D_ARRAY,fe,Ve,Te.width,Te.height,Re.depth,0,Te.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else tt?te&&t.texSubImage3D(s.TEXTURE_2D_ARRAY,fe,0,0,0,Te.width,Te.height,Re.depth,Be,Ge,Te.data):t.texImage3D(s.TEXTURE_2D_ARRAY,fe,Ve,Te.width,Te.height,Re.depth,0,Be,Ge,Te.data)}else{tt&&wt&&t.texStorage2D(s.TEXTURE_2D,Ce,Ve,ut[0].width,ut[0].height);for(let fe=0,Pe=ut.length;fe<Pe;fe++)Te=ut[fe],A.format!==hi?Be!==null?tt?te&&t.compressedTexSubImage2D(s.TEXTURE_2D,fe,0,0,Te.width,Te.height,Be,Te.data):t.compressedTexImage2D(s.TEXTURE_2D,fe,Ve,Te.width,Te.height,0,Te.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):tt?te&&t.texSubImage2D(s.TEXTURE_2D,fe,0,0,Te.width,Te.height,Be,Ge,Te.data):t.texImage2D(s.TEXTURE_2D,fe,Ve,Te.width,Te.height,0,Be,Ge,Te.data)}else if(A.isDataArrayTexture)if(tt){if(wt&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Ce,Ve,Re.width,Re.height,Re.depth),te)if(A.layerUpdates.size>0){const fe=$d(Re.width,Re.height,A.format,A.type);for(const Pe of A.layerUpdates){const Ne=Re.data.subarray(Pe*fe/Re.data.BYTES_PER_ELEMENT,(Pe+1)*fe/Re.data.BYTES_PER_ELEMENT);t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,Pe,Re.width,Re.height,1,Be,Ge,Ne)}A.clearLayerUpdates()}else t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,Re.width,Re.height,Re.depth,Be,Ge,Re.data)}else t.texImage3D(s.TEXTURE_2D_ARRAY,0,Ve,Re.width,Re.height,Re.depth,0,Be,Ge,Re.data);else if(A.isData3DTexture)tt?(wt&&t.texStorage3D(s.TEXTURE_3D,Ce,Ve,Re.width,Re.height,Re.depth),te&&t.texSubImage3D(s.TEXTURE_3D,0,0,0,0,Re.width,Re.height,Re.depth,Be,Ge,Re.data)):t.texImage3D(s.TEXTURE_3D,0,Ve,Re.width,Re.height,Re.depth,0,Be,Ge,Re.data);else if(A.isFramebufferTexture){if(wt)if(tt)t.texStorage2D(s.TEXTURE_2D,Ce,Ve,Re.width,Re.height);else{let fe=Re.width,Pe=Re.height;for(let Ne=0;Ne<Ce;Ne++)t.texImage2D(s.TEXTURE_2D,Ne,Ve,fe,Pe,0,Be,Ge,null),fe>>=1,Pe>>=1}}else if(ut.length>0){if(tt&&wt){const fe=le(ut[0]);t.texStorage2D(s.TEXTURE_2D,Ce,Ve,fe.width,fe.height)}for(let fe=0,Pe=ut.length;fe<Pe;fe++)Te=ut[fe],tt?te&&t.texSubImage2D(s.TEXTURE_2D,fe,0,0,Be,Ge,Te):t.texImage2D(s.TEXTURE_2D,fe,Ve,Be,Ge,Te);A.generateMipmaps=!1}else if(tt){if(wt){const fe=le(Re);t.texStorage2D(s.TEXTURE_2D,Ce,Ve,fe.width,fe.height)}te&&t.texSubImage2D(s.TEXTURE_2D,0,0,0,Be,Ge,Re)}else t.texImage2D(s.TEXTURE_2D,0,Ve,Be,Ge,Re);m(A)&&g(ae),Ee.__version=de.version,A.onUpdate&&A.onUpdate(A)}P.__version=A.version}function H(P,A,Q){if(A.image.length!==6)return;const ae=K(P,A),se=A.source;t.bindTexture(s.TEXTURE_CUBE_MAP,P.__webglTexture,s.TEXTURE0+Q);const de=i.get(se);if(se.version!==de.__version||ae===!0){t.activeTexture(s.TEXTURE0+Q);const Ee=Nt.getPrimaries(Nt.workingColorSpace),be=A.colorSpace===Rr?null:Nt.getPrimaries(A.colorSpace),Ae=A.colorSpace===Rr||Ee===be?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,A.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,A.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,A.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ae);const Ze=A.isCompressedTexture||A.image[0].isCompressedTexture,Re=A.image[0]&&A.image[0].isDataTexture,Be=[];for(let Pe=0;Pe<6;Pe++)!Ze&&!Re?Be[Pe]=v(A.image[Pe],!0,n.maxCubemapSize):Be[Pe]=Re?A.image[Pe].image:A.image[Pe],Be[Pe]=Me(A,Be[Pe]);const Ge=Be[0],Ve=r.convert(A.format,A.colorSpace),Te=r.convert(A.type),ut=x(A.internalFormat,Ve,Te,A.colorSpace),tt=A.isVideoTexture!==!0,wt=de.__version===void 0||ae===!0,te=se.dataReady;let Ce=E(A,Ge);Z(s.TEXTURE_CUBE_MAP,A);let fe;if(Ze){tt&&wt&&t.texStorage2D(s.TEXTURE_CUBE_MAP,Ce,ut,Ge.width,Ge.height);for(let Pe=0;Pe<6;Pe++){fe=Be[Pe].mipmaps;for(let Ne=0;Ne<fe.length;Ne++){const De=fe[Ne];A.format!==hi?Ve!==null?tt?te&&t.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,Ne,0,0,De.width,De.height,Ve,De.data):t.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,Ne,ut,De.width,De.height,0,De.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):tt?te&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,Ne,0,0,De.width,De.height,Ve,Te,De.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,Ne,ut,De.width,De.height,0,Ve,Te,De.data)}}}else{if(fe=A.mipmaps,tt&&wt){fe.length>0&&Ce++;const Pe=le(Be[0]);t.texStorage2D(s.TEXTURE_CUBE_MAP,Ce,ut,Pe.width,Pe.height)}for(let Pe=0;Pe<6;Pe++)if(Re){tt?te&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,0,0,0,Be[Pe].width,Be[Pe].height,Ve,Te,Be[Pe].data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,0,ut,Be[Pe].width,Be[Pe].height,0,Ve,Te,Be[Pe].data);for(let Ne=0;Ne<fe.length;Ne++){const ot=fe[Ne].image[Pe].image;tt?te&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,Ne+1,0,0,ot.width,ot.height,Ve,Te,ot.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,Ne+1,ut,ot.width,ot.height,0,Ve,Te,ot.data)}}else{tt?te&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,0,0,0,Ve,Te,Be[Pe]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,0,ut,Ve,Te,Be[Pe]);for(let Ne=0;Ne<fe.length;Ne++){const De=fe[Ne];tt?te&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,Ne+1,0,0,Ve,Te,De.image[Pe]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,Ne+1,ut,Ve,Te,De.image[Pe])}}}m(A)&&g(s.TEXTURE_CUBE_MAP),de.__version=se.version,A.onUpdate&&A.onUpdate(A)}P.__version=A.version}function q(P,A,Q,ae,se,de){const Ee=r.convert(Q.format,Q.colorSpace),be=r.convert(Q.type),Ae=x(Q.internalFormat,Ee,be,Q.colorSpace),Ze=i.get(A),Re=i.get(Q);if(Re.__renderTarget=A,!Ze.__hasExternalTextures){const Be=Math.max(1,A.width>>de),Ge=Math.max(1,A.height>>de);se===s.TEXTURE_3D||se===s.TEXTURE_2D_ARRAY?t.texImage3D(se,de,Ae,Be,Ge,A.depth,0,Ee,be,null):t.texImage2D(se,de,Ae,Be,Ge,0,Ee,be,null)}t.bindFramebuffer(s.FRAMEBUFFER,P),ue(A)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,ae,se,Re.__webglTexture,0,he(A)):(se===s.TEXTURE_2D||se>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&se<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,ae,se,Re.__webglTexture,de),t.bindFramebuffer(s.FRAMEBUFFER,null)}function W(P,A,Q){if(s.bindRenderbuffer(s.RENDERBUFFER,P),A.depthBuffer){const ae=A.depthTexture,se=ae&&ae.isDepthTexture?ae.type:null,de=_(A.stencilBuffer,se),Ee=A.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,be=he(A);ue(A)?a.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,be,de,A.width,A.height):Q?s.renderbufferStorageMultisample(s.RENDERBUFFER,be,de,A.width,A.height):s.renderbufferStorage(s.RENDERBUFFER,de,A.width,A.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,Ee,s.RENDERBUFFER,P)}else{const ae=A.textures;for(let se=0;se<ae.length;se++){const de=ae[se],Ee=r.convert(de.format,de.colorSpace),be=r.convert(de.type),Ae=x(de.internalFormat,Ee,be,de.colorSpace),Ze=he(A);Q&&ue(A)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,Ze,Ae,A.width,A.height):ue(A)?a.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Ze,Ae,A.width,A.height):s.renderbufferStorage(s.RENDERBUFFER,Ae,A.width,A.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function ne(P,A){if(A&&A.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(s.FRAMEBUFFER,P),!(A.depthTexture&&A.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const ae=i.get(A.depthTexture);ae.__renderTarget=A,(!ae.__webglTexture||A.depthTexture.image.width!==A.width||A.depthTexture.image.height!==A.height)&&(A.depthTexture.image.width=A.width,A.depthTexture.image.height=A.height,A.depthTexture.needsUpdate=!0),J(A.depthTexture,0);const se=ae.__webglTexture,de=he(A);if(A.depthTexture.format===Vo)ue(A)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,se,0,de):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,se,0);else if(A.depthTexture.format===Ho)ue(A)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,se,0,de):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,se,0);else throw new Error("Unknown depthTexture format")}function ge(P){const A=i.get(P),Q=P.isWebGLCubeRenderTarget===!0;if(A.__boundDepthTexture!==P.depthTexture){const ae=P.depthTexture;if(A.__depthDisposeCallback&&A.__depthDisposeCallback(),ae){const se=()=>{delete A.__boundDepthTexture,delete A.__depthDisposeCallback,ae.removeEventListener("dispose",se)};ae.addEventListener("dispose",se),A.__depthDisposeCallback=se}A.__boundDepthTexture=ae}if(P.depthTexture&&!A.__autoAllocateDepthBuffer){if(Q)throw new Error("target.depthTexture not supported in Cube render targets");ne(A.__webglFramebuffer,P)}else if(Q){A.__webglDepthbuffer=[];for(let ae=0;ae<6;ae++)if(t.bindFramebuffer(s.FRAMEBUFFER,A.__webglFramebuffer[ae]),A.__webglDepthbuffer[ae]===void 0)A.__webglDepthbuffer[ae]=s.createRenderbuffer(),W(A.__webglDepthbuffer[ae],P,!1);else{const se=P.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,de=A.__webglDepthbuffer[ae];s.bindRenderbuffer(s.RENDERBUFFER,de),s.framebufferRenderbuffer(s.FRAMEBUFFER,se,s.RENDERBUFFER,de)}}else if(t.bindFramebuffer(s.FRAMEBUFFER,A.__webglFramebuffer),A.__webglDepthbuffer===void 0)A.__webglDepthbuffer=s.createRenderbuffer(),W(A.__webglDepthbuffer,P,!1);else{const ae=P.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,se=A.__webglDepthbuffer;s.bindRenderbuffer(s.RENDERBUFFER,se),s.framebufferRenderbuffer(s.FRAMEBUFFER,ae,s.RENDERBUFFER,se)}t.bindFramebuffer(s.FRAMEBUFFER,null)}function ye(P,A,Q){const ae=i.get(P);A!==void 0&&q(ae.__webglFramebuffer,P,P.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,0),Q!==void 0&&ge(P)}function Se(P){const A=P.texture,Q=i.get(P),ae=i.get(A);P.addEventListener("dispose",S);const se=P.textures,de=P.isWebGLCubeRenderTarget===!0,Ee=se.length>1;if(Ee||(ae.__webglTexture===void 0&&(ae.__webglTexture=s.createTexture()),ae.__version=A.version,o.memory.textures++),de){Q.__webglFramebuffer=[];for(let be=0;be<6;be++)if(A.mipmaps&&A.mipmaps.length>0){Q.__webglFramebuffer[be]=[];for(let Ae=0;Ae<A.mipmaps.length;Ae++)Q.__webglFramebuffer[be][Ae]=s.createFramebuffer()}else Q.__webglFramebuffer[be]=s.createFramebuffer()}else{if(A.mipmaps&&A.mipmaps.length>0){Q.__webglFramebuffer=[];for(let be=0;be<A.mipmaps.length;be++)Q.__webglFramebuffer[be]=s.createFramebuffer()}else Q.__webglFramebuffer=s.createFramebuffer();if(Ee)for(let be=0,Ae=se.length;be<Ae;be++){const Ze=i.get(se[be]);Ze.__webglTexture===void 0&&(Ze.__webglTexture=s.createTexture(),o.memory.textures++)}if(P.samples>0&&ue(P)===!1){Q.__webglMultisampledFramebuffer=s.createFramebuffer(),Q.__webglColorRenderbuffer=[],t.bindFramebuffer(s.FRAMEBUFFER,Q.__webglMultisampledFramebuffer);for(let be=0;be<se.length;be++){const Ae=se[be];Q.__webglColorRenderbuffer[be]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,Q.__webglColorRenderbuffer[be]);const Ze=r.convert(Ae.format,Ae.colorSpace),Re=r.convert(Ae.type),Be=x(Ae.internalFormat,Ze,Re,Ae.colorSpace,P.isXRRenderTarget===!0),Ge=he(P);s.renderbufferStorageMultisample(s.RENDERBUFFER,Ge,Be,P.width,P.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+be,s.RENDERBUFFER,Q.__webglColorRenderbuffer[be])}s.bindRenderbuffer(s.RENDERBUFFER,null),P.depthBuffer&&(Q.__webglDepthRenderbuffer=s.createRenderbuffer(),W(Q.__webglDepthRenderbuffer,P,!0)),t.bindFramebuffer(s.FRAMEBUFFER,null)}}if(de){t.bindTexture(s.TEXTURE_CUBE_MAP,ae.__webglTexture),Z(s.TEXTURE_CUBE_MAP,A);for(let be=0;be<6;be++)if(A.mipmaps&&A.mipmaps.length>0)for(let Ae=0;Ae<A.mipmaps.length;Ae++)q(Q.__webglFramebuffer[be][Ae],P,A,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+be,Ae);else q(Q.__webglFramebuffer[be],P,A,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+be,0);m(A)&&g(s.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Ee){for(let be=0,Ae=se.length;be<Ae;be++){const Ze=se[be],Re=i.get(Ze);t.bindTexture(s.TEXTURE_2D,Re.__webglTexture),Z(s.TEXTURE_2D,Ze),q(Q.__webglFramebuffer,P,Ze,s.COLOR_ATTACHMENT0+be,s.TEXTURE_2D,0),m(Ze)&&g(s.TEXTURE_2D)}t.unbindTexture()}else{let be=s.TEXTURE_2D;if((P.isWebGL3DRenderTarget||P.isWebGLArrayRenderTarget)&&(be=P.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),t.bindTexture(be,ae.__webglTexture),Z(be,A),A.mipmaps&&A.mipmaps.length>0)for(let Ae=0;Ae<A.mipmaps.length;Ae++)q(Q.__webglFramebuffer[Ae],P,A,s.COLOR_ATTACHMENT0,be,Ae);else q(Q.__webglFramebuffer,P,A,s.COLOR_ATTACHMENT0,be,0);m(A)&&g(be),t.unbindTexture()}P.depthBuffer&&ge(P)}function pe(P){const A=P.textures;for(let Q=0,ae=A.length;Q<ae;Q++){const se=A[Q];if(m(se)){const de=y(P),Ee=i.get(se).__webglTexture;t.bindTexture(de,Ee),g(de),t.unbindTexture()}}}const Ie=[],X=[];function Oe(P){if(P.samples>0){if(ue(P)===!1){const A=P.textures,Q=P.width,ae=P.height;let se=s.COLOR_BUFFER_BIT;const de=P.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Ee=i.get(P),be=A.length>1;if(be)for(let Ae=0;Ae<A.length;Ae++)t.bindFramebuffer(s.FRAMEBUFFER,Ee.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ae,s.RENDERBUFFER,null),t.bindFramebuffer(s.FRAMEBUFFER,Ee.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ae,s.TEXTURE_2D,null,0);t.bindFramebuffer(s.READ_FRAMEBUFFER,Ee.__webglMultisampledFramebuffer),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,Ee.__webglFramebuffer);for(let Ae=0;Ae<A.length;Ae++){if(P.resolveDepthBuffer&&(P.depthBuffer&&(se|=s.DEPTH_BUFFER_BIT),P.stencilBuffer&&P.resolveStencilBuffer&&(se|=s.STENCIL_BUFFER_BIT)),be){s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,Ee.__webglColorRenderbuffer[Ae]);const Ze=i.get(A[Ae]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,Ze,0)}s.blitFramebuffer(0,0,Q,ae,0,0,Q,ae,se,s.NEAREST),l===!0&&(Ie.length=0,X.length=0,Ie.push(s.COLOR_ATTACHMENT0+Ae),P.depthBuffer&&P.resolveDepthBuffer===!1&&(Ie.push(de),X.push(de),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,X)),s.invalidateFramebuffer(s.READ_FRAMEBUFFER,Ie))}if(t.bindFramebuffer(s.READ_FRAMEBUFFER,null),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),be)for(let Ae=0;Ae<A.length;Ae++){t.bindFramebuffer(s.FRAMEBUFFER,Ee.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ae,s.RENDERBUFFER,Ee.__webglColorRenderbuffer[Ae]);const Ze=i.get(A[Ae]).__webglTexture;t.bindFramebuffer(s.FRAMEBUFFER,Ee.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ae,s.TEXTURE_2D,Ze,0)}t.bindFramebuffer(s.DRAW_FRAMEBUFFER,Ee.__webglMultisampledFramebuffer)}else if(P.depthBuffer&&P.resolveDepthBuffer===!1&&l){const A=P.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[A])}}}function he(P){return Math.min(n.maxSamples,P.samples)}function ue(P){const A=i.get(P);return P.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&A.__useRenderToTexture!==!1}function ie(P){const A=o.render.frame;h.get(P)!==A&&(h.set(P,A),P.update())}function Me(P,A){const Q=P.colorSpace,ae=P.format,se=P.type;return P.isCompressedTexture===!0||P.isVideoTexture===!0||Q!==eo&&Q!==Rr&&(Nt.getTransfer(Q)===Zt?(ae!==hi||se!==_r)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",Q)),A}function le(P){return typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement?(c.width=P.naturalWidth||P.width,c.height=P.naturalHeight||P.height):typeof VideoFrame<"u"&&P instanceof VideoFrame?(c.width=P.displayWidth,c.height=P.displayHeight):(c.width=P.width,c.height=P.height),c}this.allocateTextureUnit=F,this.resetTextureUnits=I,this.setTexture2D=J,this.setTexture2DArray=O,this.setTexture3D=ee,this.setTextureCube=Y,this.rebindTextures=ye,this.setupRenderTarget=Se,this.updateRenderTargetMipmap=pe,this.updateMultisampleRenderTarget=Oe,this.setupDepthRenderbuffer=ge,this.setupFrameBufferTexture=q,this.useMultisampledRTT=ue}function y_(s,e){function t(i,n=Rr){let r;const o=Nt.getTransfer(n);if(i===_r)return s.UNSIGNED_BYTE;if(i===Oh)return s.UNSIGNED_SHORT_4_4_4_4;if(i===Fh)return s.UNSIGNED_SHORT_5_5_5_1;if(i===Ef)return s.UNSIGNED_INT_5_9_9_9_REV;if(i===Mf)return s.BYTE;if(i===wf)return s.SHORT;if(i===zo)return s.UNSIGNED_SHORT;if(i===Nh)return s.INT;if(i===Gr)return s.UNSIGNED_INT;if(i===wi)return s.FLOAT;if(i===qo)return s.HALF_FLOAT;if(i===Tf)return s.ALPHA;if(i===Af)return s.RGB;if(i===hi)return s.RGBA;if(i===Cf)return s.LUMINANCE;if(i===Rf)return s.LUMINANCE_ALPHA;if(i===Vo)return s.DEPTH_COMPONENT;if(i===Ho)return s.DEPTH_STENCIL;if(i===kh)return s.RED;if(i===dl)return s.RED_INTEGER;if(i===Pf)return s.RG;if(i===Bh)return s.RG_INTEGER;if(i===zh)return s.RGBA_INTEGER;if(i===Ra||i===Pa||i===Ia||i===Da)if(o===Zt)if(r=e.get("WEBGL_compressed_texture_s3tc_srgb"),r!==null){if(i===Ra)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===Pa)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===Ia)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===Da)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(r=e.get("WEBGL_compressed_texture_s3tc"),r!==null){if(i===Ra)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===Pa)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===Ia)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===Da)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(i===$c||i===eh||i===th||i===nh)if(r=e.get("WEBGL_compressed_texture_pvrtc"),r!==null){if(i===$c)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===eh)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===th)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===nh)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(i===ih||i===rh||i===sh)if(r=e.get("WEBGL_compressed_texture_etc"),r!==null){if(i===ih||i===rh)return o===Zt?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(i===sh)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(i===oh||i===ah||i===lh||i===ch||i===hh||i===uh||i===dh||i===fh||i===ph||i===mh||i===gh||i===vh||i===_h||i===yh)if(r=e.get("WEBGL_compressed_texture_astc"),r!==null){if(i===oh)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===ah)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===lh)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===ch)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===hh)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===uh)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===dh)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===fh)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===ph)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===mh)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===gh)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===vh)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===_h)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===yh)return o===Zt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(i===La||i===xh||i===bh)if(r=e.get("EXT_texture_compression_bptc"),r!==null){if(i===La)return o===Zt?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(i===xh)return r.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(i===bh)return r.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(i===If||i===Sh||i===Mh||i===wh)if(r=e.get("EXT_texture_compression_rgtc"),r!==null){if(i===La)return r.COMPRESSED_RED_RGTC1_EXT;if(i===Sh)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===Mh)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===wh)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return i===Go?s.UNSIGNED_INT_24_8:s[i]!==void 0?s[i]:null}return{convert:t}}const QT=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,$T=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class eA{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,i){if(this.texture===null){const n=new pn,r=e.properties.get(n);r.__webglTexture=t.texture,(t.depthNear!==i.depthNear||t.depthFar!==i.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=n}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,i=new Ti({vertexShader:QT,fragmentShader:$T,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new ke(new or(20,20),i)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class tA extends br{constructor(e,t){super();const i=this;let n=null,r=1,o=null,a="local-floor",l=1,c=null,h=null,u=null,d=null,f=null,p=null;const v=new eA,m=t.getContextAttributes();let g=null,y=null;const x=[],_=[],E=new xe;let M=null;const S=new bn;S.viewport=new Pt;const T=new bn;T.viewport=new Pt;const w=[S,T],b=new l_;let D=null,I=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(k){let H=x[k];return H===void 0&&(H=new Nc,x[k]=H),H.getTargetRaySpace()},this.getControllerGrip=function(k){let H=x[k];return H===void 0&&(H=new Nc,x[k]=H),H.getGripSpace()},this.getHand=function(k){let H=x[k];return H===void 0&&(H=new Nc,x[k]=H),H.getHandSpace()};function F(k){const H=_.indexOf(k.inputSource);if(H===-1)return;const q=x[H];q!==void 0&&(q.update(k.inputSource,k.frame,c||o),q.dispatchEvent({type:k.type,data:k.inputSource}))}function V(){n.removeEventListener("select",F),n.removeEventListener("selectstart",F),n.removeEventListener("selectend",F),n.removeEventListener("squeeze",F),n.removeEventListener("squeezestart",F),n.removeEventListener("squeezeend",F),n.removeEventListener("end",V),n.removeEventListener("inputsourceschange",J);for(let k=0;k<x.length;k++){const H=_[k];H!==null&&(_[k]=null,x[k].disconnect(H))}D=null,I=null,v.reset(),e.setRenderTarget(g),f=null,d=null,u=null,n=null,y=null,K.stop(),i.isPresenting=!1,e.setPixelRatio(M),e.setSize(E.width,E.height,!1),i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(k){r=k,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(k){a=k,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||o},this.setReferenceSpace=function(k){c=k},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return u},this.getFrame=function(){return p},this.getSession=function(){return n},this.setSession=async function(k){if(n=k,n!==null){if(g=e.getRenderTarget(),n.addEventListener("select",F),n.addEventListener("selectstart",F),n.addEventListener("selectend",F),n.addEventListener("squeeze",F),n.addEventListener("squeezestart",F),n.addEventListener("squeezeend",F),n.addEventListener("end",V),n.addEventListener("inputsourceschange",J),m.xrCompatible!==!0&&await t.makeXRCompatible(),M=e.getPixelRatio(),e.getSize(E),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let q=null,W=null,ne=null;m.depth&&(ne=m.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,q=m.stencil?Ho:Vo,W=m.stencil?Go:Gr);const ge={colorFormat:t.RGBA8,depthFormat:ne,scaleFactor:r};u=new XRWebGLBinding(n,t),d=u.createProjectionLayer(ge),n.updateRenderState({layers:[d]}),e.setPixelRatio(1),e.setSize(d.textureWidth,d.textureHeight,!1),y=new ji(d.textureWidth,d.textureHeight,{format:hi,type:_r,depthTexture:new Bf(d.textureWidth,d.textureHeight,W,void 0,void 0,void 0,void 0,void 0,void 0,q),stencilBuffer:m.stencil,colorSpace:e.outputColorSpace,samples:m.antialias?4:0,resolveDepthBuffer:d.ignoreDepthValues===!1,resolveStencilBuffer:d.ignoreDepthValues===!1})}else{const q={antialias:m.antialias,alpha:!0,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:r};f=new XRWebGLLayer(n,t,q),n.updateRenderState({baseLayer:f}),e.setPixelRatio(1),e.setSize(f.framebufferWidth,f.framebufferHeight,!1),y=new ji(f.framebufferWidth,f.framebufferHeight,{format:hi,type:_r,colorSpace:e.outputColorSpace,stencilBuffer:m.stencil,resolveDepthBuffer:f.ignoreDepthValues===!1,resolveStencilBuffer:f.ignoreDepthValues===!1})}y.isXRRenderTarget=!0,this.setFoveation(l),c=null,o=await n.requestReferenceSpace(a),K.setContext(n),K.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(n!==null)return n.environmentBlendMode},this.getDepthTexture=function(){return v.getDepthTexture()};function J(k){for(let H=0;H<k.removed.length;H++){const q=k.removed[H],W=_.indexOf(q);W>=0&&(_[W]=null,x[W].disconnect(q))}for(let H=0;H<k.added.length;H++){const q=k.added[H];let W=_.indexOf(q);if(W===-1){for(let ge=0;ge<x.length;ge++)if(ge>=_.length){_.push(q),W=ge;break}else if(_[ge]===null){_[ge]=q,W=ge;break}if(W===-1)break}const ne=x[W];ne&&ne.connect(q)}}const O=new L,ee=new L;function Y(k,H,q){O.setFromMatrixPosition(H.matrixWorld),ee.setFromMatrixPosition(q.matrixWorld);const W=O.distanceTo(ee),ne=H.projectionMatrix.elements,ge=q.projectionMatrix.elements,ye=ne[14]/(ne[10]-1),Se=ne[14]/(ne[10]+1),pe=(ne[9]+1)/ne[5],Ie=(ne[9]-1)/ne[5],X=(ne[8]-1)/ne[0],Oe=(ge[8]+1)/ge[0],he=ye*X,ue=ye*Oe,ie=W/(-X+Oe),Me=ie*-X;if(H.matrixWorld.decompose(k.position,k.quaternion,k.scale),k.translateX(Me),k.translateZ(ie),k.matrixWorld.compose(k.position,k.quaternion,k.scale),k.matrixWorldInverse.copy(k.matrixWorld).invert(),ne[10]===-1)k.projectionMatrix.copy(H.projectionMatrix),k.projectionMatrixInverse.copy(H.projectionMatrixInverse);else{const le=ye+ie,P=Se+ie,A=he-Me,Q=ue+(W-Me),ae=pe*Se/P*le,se=Ie*Se/P*le;k.projectionMatrix.makePerspective(A,Q,ae,se,le,P),k.projectionMatrixInverse.copy(k.projectionMatrix).invert()}}function j(k,H){H===null?k.matrixWorld.copy(k.matrix):k.matrixWorld.multiplyMatrices(H.matrixWorld,k.matrix),k.matrixWorldInverse.copy(k.matrixWorld).invert()}this.updateCamera=function(k){if(n===null)return;let H=k.near,q=k.far;v.texture!==null&&(v.depthNear>0&&(H=v.depthNear),v.depthFar>0&&(q=v.depthFar)),b.near=T.near=S.near=H,b.far=T.far=S.far=q,(D!==b.near||I!==b.far)&&(n.updateRenderState({depthNear:b.near,depthFar:b.far}),D=b.near,I=b.far),S.layers.mask=k.layers.mask|2,T.layers.mask=k.layers.mask|4,b.layers.mask=S.layers.mask|T.layers.mask;const W=k.parent,ne=b.cameras;j(b,W);for(let ge=0;ge<ne.length;ge++)j(ne[ge],W);ne.length===2?Y(b,S,T):b.projectionMatrix.copy(S.projectionMatrix),$(k,b,W)};function $(k,H,q){q===null?k.matrix.copy(H.matrixWorld):(k.matrix.copy(q.matrixWorld),k.matrix.invert(),k.matrix.multiply(H.matrixWorld)),k.matrix.decompose(k.position,k.quaternion,k.scale),k.updateMatrixWorld(!0),k.projectionMatrix.copy(H.projectionMatrix),k.projectionMatrixInverse.copy(H.projectionMatrixInverse),k.isPerspectiveCamera&&(k.fov=Wo*2*Math.atan(1/k.projectionMatrix.elements[5]),k.zoom=1)}this.getCamera=function(){return b},this.getFoveation=function(){if(!(d===null&&f===null))return l},this.setFoveation=function(k){l=k,d!==null&&(d.fixedFoveation=k),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=k)},this.hasDepthSensing=function(){return v.texture!==null},this.getDepthSensingMesh=function(){return v.getMesh(b)};let U=null;function Z(k,H){if(h=H.getViewerPose(c||o),p=H,h!==null){const q=h.views;f!==null&&(e.setRenderTargetFramebuffer(y,f.framebuffer),e.setRenderTarget(y));let W=!1;q.length!==b.cameras.length&&(b.cameras.length=0,W=!0);for(let ye=0;ye<q.length;ye++){const Se=q[ye];let pe=null;if(f!==null)pe=f.getViewport(Se);else{const X=u.getViewSubImage(d,Se);pe=X.viewport,ye===0&&(e.setRenderTargetTextures(y,X.colorTexture,X.depthStencilTexture),e.setRenderTarget(y))}let Ie=w[ye];Ie===void 0&&(Ie=new bn,Ie.layers.enable(ye),Ie.viewport=new Pt,w[ye]=Ie),Ie.matrix.fromArray(Se.transform.matrix),Ie.matrix.decompose(Ie.position,Ie.quaternion,Ie.scale),Ie.projectionMatrix.fromArray(Se.projectionMatrix),Ie.projectionMatrixInverse.copy(Ie.projectionMatrix).invert(),Ie.viewport.set(pe.x,pe.y,pe.width,pe.height),ye===0&&(b.matrix.copy(Ie.matrix),b.matrix.decompose(b.position,b.quaternion,b.scale)),W===!0&&b.cameras.push(Ie)}const ne=n.enabledFeatures;if(ne&&ne.includes("depth-sensing")&&n.depthUsage=="gpu-optimized"&&u){const ye=u.getDepthInformation(q[0]);ye&&ye.isValid&&ye.texture&&v.init(e,ye,n.renderState)}}for(let q=0;q<x.length;q++){const W=_[q],ne=x[q];W!==null&&ne!==void 0&&ne.update(W,H,c||o)}U&&U(k,H),H.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:H}),p=null}const K=new p_;K.setAnimationLoop(Z),this.setAnimationLoop=function(k){U=k},this.dispose=function(){}}}const Rs=new Ei,nA=new st;function iA(s,e){function t(m,g){m.matrixAutoUpdate===!0&&m.updateMatrix(),g.value.copy(m.matrix)}function i(m,g){g.color.getRGB(m.fogColor.value,Mv(s)),g.isFog?(m.fogNear.value=g.near,m.fogFar.value=g.far):g.isFogExp2&&(m.fogDensity.value=g.density)}function n(m,g,y,x,_){g.isMeshBasicMaterial||g.isMeshLambertMaterial?r(m,g):g.isMeshToonMaterial?(r(m,g),u(m,g)):g.isMeshPhongMaterial?(r(m,g),h(m,g)):g.isMeshStandardMaterial?(r(m,g),d(m,g),g.isMeshPhysicalMaterial&&f(m,g,_)):g.isMeshMatcapMaterial?(r(m,g),p(m,g)):g.isMeshDepthMaterial?r(m,g):g.isMeshDistanceMaterial?(r(m,g),v(m,g)):g.isMeshNormalMaterial?r(m,g):g.isLineBasicMaterial?(o(m,g),g.isLineDashedMaterial&&a(m,g)):g.isPointsMaterial?l(m,g,y,x):g.isSpriteMaterial?c(m,g):g.isShadowMaterial?(m.color.value.copy(g.color),m.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function r(m,g){m.opacity.value=g.opacity,g.color&&m.diffuse.value.copy(g.color),g.emissive&&m.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(m.map.value=g.map,t(g.map,m.mapTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,t(g.alphaMap,m.alphaMapTransform)),g.bumpMap&&(m.bumpMap.value=g.bumpMap,t(g.bumpMap,m.bumpMapTransform),m.bumpScale.value=g.bumpScale,g.side===ni&&(m.bumpScale.value*=-1)),g.normalMap&&(m.normalMap.value=g.normalMap,t(g.normalMap,m.normalMapTransform),m.normalScale.value.copy(g.normalScale),g.side===ni&&m.normalScale.value.negate()),g.displacementMap&&(m.displacementMap.value=g.displacementMap,t(g.displacementMap,m.displacementMapTransform),m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias),g.emissiveMap&&(m.emissiveMap.value=g.emissiveMap,t(g.emissiveMap,m.emissiveMapTransform)),g.specularMap&&(m.specularMap.value=g.specularMap,t(g.specularMap,m.specularMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);const y=e.get(g),x=y.envMap,_=y.envMapRotation;x&&(m.envMap.value=x,Rs.copy(_),Rs.x*=-1,Rs.y*=-1,Rs.z*=-1,x.isCubeTexture&&x.isRenderTargetTexture===!1&&(Rs.y*=-1,Rs.z*=-1),m.envMapRotation.value.setFromMatrix4(nA.makeRotationFromEuler(Rs)),m.flipEnvMap.value=x.isCubeTexture&&x.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=g.reflectivity,m.ior.value=g.ior,m.refractionRatio.value=g.refractionRatio),g.lightMap&&(m.lightMap.value=g.lightMap,m.lightMapIntensity.value=g.lightMapIntensity,t(g.lightMap,m.lightMapTransform)),g.aoMap&&(m.aoMap.value=g.aoMap,m.aoMapIntensity.value=g.aoMapIntensity,t(g.aoMap,m.aoMapTransform))}function o(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,g.map&&(m.map.value=g.map,t(g.map,m.mapTransform))}function a(m,g){m.dashSize.value=g.dashSize,m.totalSize.value=g.dashSize+g.gapSize,m.scale.value=g.scale}function l(m,g,y,x){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.size.value=g.size*y,m.scale.value=x*.5,g.map&&(m.map.value=g.map,t(g.map,m.uvTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,t(g.alphaMap,m.alphaMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest)}function c(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.rotation.value=g.rotation,g.map&&(m.map.value=g.map,t(g.map,m.mapTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,t(g.alphaMap,m.alphaMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest)}function h(m,g){m.specular.value.copy(g.specular),m.shininess.value=Math.max(g.shininess,1e-4)}function u(m,g){g.gradientMap&&(m.gradientMap.value=g.gradientMap)}function d(m,g){m.metalness.value=g.metalness,g.metalnessMap&&(m.metalnessMap.value=g.metalnessMap,t(g.metalnessMap,m.metalnessMapTransform)),m.roughness.value=g.roughness,g.roughnessMap&&(m.roughnessMap.value=g.roughnessMap,t(g.roughnessMap,m.roughnessMapTransform)),g.envMap&&(m.envMapIntensity.value=g.envMapIntensity)}function f(m,g,y){m.ior.value=g.ior,g.sheen>0&&(m.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),m.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(m.sheenColorMap.value=g.sheenColorMap,t(g.sheenColorMap,m.sheenColorMapTransform)),g.sheenRoughnessMap&&(m.sheenRoughnessMap.value=g.sheenRoughnessMap,t(g.sheenRoughnessMap,m.sheenRoughnessMapTransform))),g.clearcoat>0&&(m.clearcoat.value=g.clearcoat,m.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(m.clearcoatMap.value=g.clearcoatMap,t(g.clearcoatMap,m.clearcoatMapTransform)),g.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap,t(g.clearcoatRoughnessMap,m.clearcoatRoughnessMapTransform)),g.clearcoatNormalMap&&(m.clearcoatNormalMap.value=g.clearcoatNormalMap,t(g.clearcoatNormalMap,m.clearcoatNormalMapTransform),m.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),g.side===ni&&m.clearcoatNormalScale.value.negate())),g.dispersion>0&&(m.dispersion.value=g.dispersion),g.iridescence>0&&(m.iridescence.value=g.iridescence,m.iridescenceIOR.value=g.iridescenceIOR,m.iridescenceThicknessMinimum.value=g.iridescenceThicknessRange[0],m.iridescenceThicknessMaximum.value=g.iridescenceThicknessRange[1],g.iridescenceMap&&(m.iridescenceMap.value=g.iridescenceMap,t(g.iridescenceMap,m.iridescenceMapTransform)),g.iridescenceThicknessMap&&(m.iridescenceThicknessMap.value=g.iridescenceThicknessMap,t(g.iridescenceThicknessMap,m.iridescenceThicknessMapTransform))),g.transmission>0&&(m.transmission.value=g.transmission,m.transmissionSamplerMap.value=y.texture,m.transmissionSamplerSize.value.set(y.width,y.height),g.transmissionMap&&(m.transmissionMap.value=g.transmissionMap,t(g.transmissionMap,m.transmissionMapTransform)),m.thickness.value=g.thickness,g.thicknessMap&&(m.thicknessMap.value=g.thicknessMap,t(g.thicknessMap,m.thicknessMapTransform)),m.attenuationDistance.value=g.attenuationDistance,m.attenuationColor.value.copy(g.attenuationColor)),g.anisotropy>0&&(m.anisotropyVector.value.set(g.anisotropy*Math.cos(g.anisotropyRotation),g.anisotropy*Math.sin(g.anisotropyRotation)),g.anisotropyMap&&(m.anisotropyMap.value=g.anisotropyMap,t(g.anisotropyMap,m.anisotropyMapTransform))),m.specularIntensity.value=g.specularIntensity,m.specularColor.value.copy(g.specularColor),g.specularColorMap&&(m.specularColorMap.value=g.specularColorMap,t(g.specularColorMap,m.specularColorMapTransform)),g.specularIntensityMap&&(m.specularIntensityMap.value=g.specularIntensityMap,t(g.specularIntensityMap,m.specularIntensityMapTransform))}function p(m,g){g.matcap&&(m.matcap.value=g.matcap)}function v(m,g){const y=e.get(g).light;m.referencePosition.value.setFromMatrixPosition(y.matrixWorld),m.nearDistance.value=y.shadow.camera.near,m.farDistance.value=y.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:n}}function rA(s,e,t,i){let n={},r={},o=[];const a=s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS);function l(y,x){const _=x.program;i.uniformBlockBinding(y,_)}function c(y,x){let _=n[y.id];_===void 0&&(p(y),_=h(y),n[y.id]=_,y.addEventListener("dispose",m));const E=x.program;i.updateUBOMapping(y,E);const M=e.render.frame;r[y.id]!==M&&(d(y),r[y.id]=M)}function h(y){const x=u();y.__bindingPointIndex=x;const _=s.createBuffer(),E=y.__size,M=y.usage;return s.bindBuffer(s.UNIFORM_BUFFER,_),s.bufferData(s.UNIFORM_BUFFER,E,M),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,x,_),_}function u(){for(let y=0;y<a;y++)if(o.indexOf(y)===-1)return o.push(y),y;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(y){const x=n[y.id],_=y.uniforms,E=y.__cache;s.bindBuffer(s.UNIFORM_BUFFER,x);for(let M=0,S=_.length;M<S;M++){const T=Array.isArray(_[M])?_[M]:[_[M]];for(let w=0,b=T.length;w<b;w++){const D=T[w];if(f(D,M,w,E)===!0){const I=D.__offset,F=Array.isArray(D.value)?D.value:[D.value];let V=0;for(let J=0;J<F.length;J++){const O=F[J],ee=v(O);typeof O=="number"||typeof O=="boolean"?(D.__data[0]=O,s.bufferSubData(s.UNIFORM_BUFFER,I+V,D.__data)):O.isMatrix3?(D.__data[0]=O.elements[0],D.__data[1]=O.elements[1],D.__data[2]=O.elements[2],D.__data[3]=0,D.__data[4]=O.elements[3],D.__data[5]=O.elements[4],D.__data[6]=O.elements[5],D.__data[7]=0,D.__data[8]=O.elements[6],D.__data[9]=O.elements[7],D.__data[10]=O.elements[8],D.__data[11]=0):(O.toArray(D.__data,V),V+=ee.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,I,D.__data)}}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function f(y,x,_,E){const M=y.value,S=x+"_"+_;if(E[S]===void 0)return typeof M=="number"||typeof M=="boolean"?E[S]=M:E[S]=M.clone(),!0;{const T=E[S];if(typeof M=="number"||typeof M=="boolean"){if(T!==M)return E[S]=M,!0}else if(T.equals(M)===!1)return T.copy(M),!0}return!1}function p(y){const x=y.uniforms;let _=0;const E=16;for(let S=0,T=x.length;S<T;S++){const w=Array.isArray(x[S])?x[S]:[x[S]];for(let b=0,D=w.length;b<D;b++){const I=w[b],F=Array.isArray(I.value)?I.value:[I.value];for(let V=0,J=F.length;V<J;V++){const O=F[V],ee=v(O),Y=_%E,j=Y%ee.boundary,$=Y+j;_+=j,$!==0&&E-$<ee.storage&&(_+=E-$),I.__data=new Float32Array(ee.storage/Float32Array.BYTES_PER_ELEMENT),I.__offset=_,_+=ee.storage}}}const M=_%E;return M>0&&(_+=E-M),y.__size=_,y.__cache={},this}function v(y){const x={boundary:0,storage:0};return typeof y=="number"||typeof y=="boolean"?(x.boundary=4,x.storage=4):y.isVector2?(x.boundary=8,x.storage=8):y.isVector3||y.isColor?(x.boundary=16,x.storage=12):y.isVector4?(x.boundary=16,x.storage=16):y.isMatrix3?(x.boundary=48,x.storage=48):y.isMatrix4?(x.boundary=64,x.storage=64):y.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",y),x}function m(y){const x=y.target;x.removeEventListener("dispose",m);const _=o.indexOf(x.__bindingPointIndex);o.splice(_,1),s.deleteBuffer(n[x.id]),delete n[x.id],delete r[x.id]}function g(){for(const y in n)s.deleteBuffer(n[y]);o=[],n={},r={}}return{bind:l,update:c,dispose:g}}class up{constructor(e={}){const{canvas:t=xv(),context:i=null,depth:n=!0,stencil:r=!1,alpha:o=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:u=!1,reverseDepthBuffer:d=!1}=e;this.isWebGLRenderer=!0;let f;if(i!==null){if(typeof WebGLRenderingContext<"u"&&i instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");f=i.getContextAttributes().alpha}else f=o;const p=new Uint32Array(4),v=new Int32Array(4);let m=null,g=null;const y=[],x=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=pr,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const _=this;let E=!1;this._outputColorSpace=sn;let M=0,S=0,T=null,w=-1,b=null;const D=new Pt,I=new Pt;let F=null;const V=new ze(0);let J=0,O=t.width,ee=t.height,Y=1,j=null,$=null;const U=new Pt(0,0,O,ee),Z=new Pt(0,0,O,ee);let K=!1;const k=new yl;let H=!1,q=!1;const W=new st,ne=new st,ge=new L,ye=new Pt,Se={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let pe=!1;function Ie(){return T===null?Y:1}let X=i;function Oe(B,oe){return t.getContext(B,oe)}try{const B={alpha:!0,depth:n,stencil:r,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:h,failIfMajorPerformanceCaveat:u};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${hl}`),t.addEventListener("webglcontextlost",Pe,!1),t.addEventListener("webglcontextrestored",Ne,!1),t.addEventListener("webglcontextcreationerror",De,!1),X===null){const oe="webgl2";if(X=Oe(oe,B),X===null)throw Oe(oe)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(B){throw console.error("THREE.WebGLRenderer: "+B.message),B}let he,ue,ie,Me,le,P,A,Q,ae,se,de,Ee,be,Ae,Ze,Re,Be,Ge,Ve,Te,ut,tt,wt,te;function Ce(){he=new gE(X),he.init(),tt=new y_(X,he),ue=new cE(X,he,e,tt),ie=new JT(X,he),ue.reverseDepthBuffer&&d&&ie.buffers.depth.setReversed(!0),Me=new yE(X),le=new FT,P=new KT(X,he,ie,le,ue,tt,Me),A=new uE(_),Q=new mE(_),ae=new ES(X),wt=new aE(X,ae),se=new vE(X,ae,Me,wt),de=new bE(X,se,ae,Me),Ve=new xE(X,ue,P),Re=new hE(le),Ee=new OT(_,A,Q,he,ue,wt,Re),be=new iA(_,le),Ae=new BT,Ze=new XT(he),Ge=new oE(_,A,Q,ie,de,f,l),Be=new qT(_,de,ue),te=new rA(X,Me,ue,ie),Te=new lE(X,he,Me),ut=new _E(X,he,Me),Me.programs=Ee.programs,_.capabilities=ue,_.extensions=he,_.properties=le,_.renderLists=Ae,_.shadowMap=Be,_.state=ie,_.info=Me}Ce();const fe=new tA(_,X);this.xr=fe,this.getContext=function(){return X},this.getContextAttributes=function(){return X.getContextAttributes()},this.forceContextLoss=function(){const B=he.get("WEBGL_lose_context");B&&B.loseContext()},this.forceContextRestore=function(){const B=he.get("WEBGL_lose_context");B&&B.restoreContext()},this.getPixelRatio=function(){return Y},this.setPixelRatio=function(B){B!==void 0&&(Y=B,this.setSize(O,ee,!1))},this.getSize=function(B){return B.set(O,ee)},this.setSize=function(B,oe,me=!0){if(fe.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}O=B,ee=oe,t.width=Math.floor(B*Y),t.height=Math.floor(oe*Y),me===!0&&(t.style.width=B+"px",t.style.height=oe+"px"),this.setViewport(0,0,B,oe)},this.getDrawingBufferSize=function(B){return B.set(O*Y,ee*Y).floor()},this.setDrawingBufferSize=function(B,oe,me){O=B,ee=oe,Y=me,t.width=Math.floor(B*me),t.height=Math.floor(oe*me),this.setViewport(0,0,B,oe)},this.getCurrentViewport=function(B){return B.copy(D)},this.getViewport=function(B){return B.copy(U)},this.setViewport=function(B,oe,me,re){B.isVector4?U.set(B.x,B.y,B.z,B.w):U.set(B,oe,me,re),ie.viewport(D.copy(U).multiplyScalar(Y).round())},this.getScissor=function(B){return B.copy(Z)},this.setScissor=function(B,oe,me,re){B.isVector4?Z.set(B.x,B.y,B.z,B.w):Z.set(B,oe,me,re),ie.scissor(I.copy(Z).multiplyScalar(Y).round())},this.getScissorTest=function(){return K},this.setScissorTest=function(B){ie.setScissorTest(K=B)},this.setOpaqueSort=function(B){j=B},this.setTransparentSort=function(B){$=B},this.getClearColor=function(B){return B.copy(Ge.getClearColor())},this.setClearColor=function(){Ge.setClearColor(...arguments)},this.getClearAlpha=function(){return Ge.getClearAlpha()},this.setClearAlpha=function(){Ge.setClearAlpha(...arguments)},this.clear=function(B=!0,oe=!0,me=!0){let re=0;if(B){let ce=!1;if(T!==null){const Fe=T.texture.format;ce=Fe===zh||Fe===Bh||Fe===dl}if(ce){const Fe=T.texture.type,Ye=Fe===_r||Fe===Gr||Fe===zo||Fe===Go||Fe===Oh||Fe===Fh,Qe=Ge.getClearColor(),et=Ge.getClearAlpha(),xt=Qe.r,mt=Qe.g,ht=Qe.b;Ye?(p[0]=xt,p[1]=mt,p[2]=ht,p[3]=et,X.clearBufferuiv(X.COLOR,0,p)):(v[0]=xt,v[1]=mt,v[2]=ht,v[3]=et,X.clearBufferiv(X.COLOR,0,v))}else re|=X.COLOR_BUFFER_BIT}oe&&(re|=X.DEPTH_BUFFER_BIT),me&&(re|=X.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),X.clear(re)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Pe,!1),t.removeEventListener("webglcontextrestored",Ne,!1),t.removeEventListener("webglcontextcreationerror",De,!1),Ge.dispose(),Ae.dispose(),Ze.dispose(),le.dispose(),A.dispose(),Q.dispose(),de.dispose(),wt.dispose(),te.dispose(),Ee.dispose(),fe.dispose(),fe.removeEventListener("sessionstart",on),fe.removeEventListener("sessionend",qn),Un.stop()};function Pe(B){B.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),E=!0}function Ne(){console.log("THREE.WebGLRenderer: Context Restored."),E=!1;const B=Me.autoReset,oe=Be.enabled,me=Be.autoUpdate,re=Be.needsUpdate,ce=Be.type;Ce(),Me.autoReset=B,Be.enabled=oe,Be.autoUpdate=me,Be.needsUpdate=re,Be.type=ce}function De(B){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",B.statusMessage)}function ot(B){const oe=B.target;oe.removeEventListener("dispose",ot),St(oe)}function St(B){ct(B),le.remove(B)}function ct(B){const oe=le.get(B).programs;oe!==void 0&&(oe.forEach(function(me){Ee.releaseProgram(me)}),B.isShaderMaterial&&Ee.releaseShaderCache(B))}this.renderBufferDirect=function(B,oe,me,re,ce,Fe){oe===null&&(oe=Se);const Ye=ce.isMesh&&ce.matrixWorld.determinant()<0,Qe=$o(B,oe,me,re,ce);ie.setMaterial(re,Ye);let et=me.index,xt=1;if(re.wireframe===!0){if(et=se.getWireframeAttribute(me),et===void 0)return;xt=2}const mt=me.drawRange,ht=me.attributes.position;let At=mt.start*xt,kt=(mt.start+mt.count)*xt;Fe!==null&&(At=Math.max(At,Fe.start*xt),kt=Math.min(kt,(Fe.start+Fe.count)*xt)),et!==null?(At=Math.max(At,0),kt=Math.min(kt,et.count)):ht!=null&&(At=Math.max(At,0),kt=Math.min(kt,ht.count));const rn=kt-At;if(rn<0||rn===1/0)return;wt.setup(ce,re,Qe,me,et);let Qt,Ft=Te;if(et!==null&&(Qt=ae.get(et),Ft=ut,Ft.setIndex(Qt)),ce.isMesh)re.wireframe===!0?(ie.setLineWidth(re.wireframeLinewidth*Ie()),Ft.setMode(X.LINES)):Ft.setMode(X.TRIANGLES);else if(ce.isLine){let dt=re.linewidth;dt===void 0&&(dt=1),ie.setLineWidth(dt*Ie()),ce.isLineSegments?Ft.setMode(X.LINES):ce.isLineLoop?Ft.setMode(X.LINE_LOOP):Ft.setMode(X.LINE_STRIP)}else ce.isPoints?Ft.setMode(X.POINTS):ce.isSprite&&Ft.setMode(X.TRIANGLES);if(ce.isBatchedMesh)if(ce._multiDrawInstances!==null)Uc("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),Ft.renderMultiDrawInstances(ce._multiDrawStarts,ce._multiDrawCounts,ce._multiDrawCount,ce._multiDrawInstances);else if(he.get("WEBGL_multi_draw"))Ft.renderMultiDraw(ce._multiDrawStarts,ce._multiDrawCounts,ce._multiDrawCount);else{const dt=ce._multiDrawStarts,cn=ce._multiDrawCounts,Ut=ce._multiDrawCount,Nn=et?ae.get(et).bytesPerElement:1,Yt=le.get(re).currentProgram.getUniforms();for(let yn=0;yn<Ut;yn++)Yt.setValue(X,"_gl_DrawID",yn),Ft.render(dt[yn]/Nn,cn[yn])}else if(ce.isInstancedMesh)Ft.renderInstances(At,rn,ce.count);else if(me.isInstancedBufferGeometry){const dt=me._maxInstanceCount!==void 0?me._maxInstanceCount:1/0,cn=Math.min(me.instanceCount,dt);Ft.renderInstances(At,rn,cn)}else Ft.render(At,rn)};function rt(B,oe,me){B.transparent===!0&&B.side===xi&&B.forceSinglePass===!1?(B.side=ni,B.needsUpdate=!0,ui(B,oe,me),B.side=vr,B.needsUpdate=!0,ui(B,oe,me),B.side=xi):ui(B,oe,me)}this.compile=function(B,oe,me=null){me===null&&(me=B),g=Ze.get(me),g.init(oe),x.push(g),me.traverseVisible(function(ce){ce.isLight&&ce.layers.test(oe.layers)&&(g.pushLight(ce),ce.castShadow&&g.pushShadow(ce))}),B!==me&&B.traverseVisible(function(ce){ce.isLight&&ce.layers.test(oe.layers)&&(g.pushLight(ce),ce.castShadow&&g.pushShadow(ce))}),g.setupLights();const re=new Set;return B.traverse(function(ce){if(!(ce.isMesh||ce.isPoints||ce.isLine||ce.isSprite))return;const Fe=ce.material;if(Fe)if(Array.isArray(Fe))for(let Ye=0;Ye<Fe.length;Ye++){const Qe=Fe[Ye];rt(Qe,me,ce),re.add(Qe)}else rt(Fe,me,ce),re.add(Fe)}),g=x.pop(),re},this.compileAsync=function(B,oe,me=null){const re=this.compile(B,oe,me);return new Promise(ce=>{function Fe(){if(re.forEach(function(Ye){le.get(Ye).currentProgram.isReady()&&re.delete(Ye)}),re.size===0){ce(B);return}setTimeout(Fe,10)}he.get("KHR_parallel_shader_compile")!==null?Fe():setTimeout(Fe,10)})};let Xt=null;function Kt(B){Xt&&Xt(B)}function on(){Un.stop()}function qn(){Un.start()}const Un=new p_;Un.setAnimationLoop(Kt),typeof self<"u"&&Un.setContext(self),this.setAnimationLoop=function(B){Xt=B,fe.setAnimationLoop(B),B===null?Un.stop():Un.start()},fe.addEventListener("sessionstart",on),fe.addEventListener("sessionend",qn),this.render=function(B,oe){if(oe!==void 0&&oe.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(E===!0)return;if(B.matrixWorldAutoUpdate===!0&&B.updateMatrixWorld(),oe.parent===null&&oe.matrixWorldAutoUpdate===!0&&oe.updateMatrixWorld(),fe.enabled===!0&&fe.isPresenting===!0&&(fe.cameraAutoUpdate===!0&&fe.updateCamera(oe),oe=fe.getCamera()),B.isScene===!0&&B.onBeforeRender(_,B,oe,T),g=Ze.get(B,x.length),g.init(oe),x.push(g),ne.multiplyMatrices(oe.projectionMatrix,oe.matrixWorldInverse),k.setFromProjectionMatrix(ne),q=this.localClippingEnabled,H=Re.init(this.clippingPlanes,q),m=Ae.get(B,y.length),m.init(),y.push(m),fe.enabled===!0&&fe.isPresenting===!0){const Fe=_.xr.getDepthSensingMesh();Fe!==null&&ri(Fe,oe,-1/0,_.sortObjects)}ri(B,oe,0,_.sortObjects),m.finish(),_.sortObjects===!0&&m.sort(j,$),pe=fe.enabled===!1||fe.isPresenting===!1||fe.hasDepthSensing()===!1,pe&&Ge.addToRenderList(m,B),this.info.render.frame++,H===!0&&Re.beginShadows();const me=g.state.shadowsArray;Be.render(me,B,oe),H===!0&&Re.endShadows(),this.info.autoReset===!0&&this.info.reset();const re=m.opaque,ce=m.transmissive;if(g.setupLights(),oe.isArrayCamera){const Fe=oe.cameras;if(ce.length>0)for(let Ye=0,Qe=Fe.length;Ye<Qe;Ye++){const et=Fe[Ye];Ri(re,ce,B,et)}pe&&Ge.render(B);for(let Ye=0,Qe=Fe.length;Ye<Qe;Ye++){const et=Fe[Ye];Ci(m,B,et,et.viewport)}}else ce.length>0&&Ri(re,ce,B,oe),pe&&Ge.render(B),Ci(m,B,oe);T!==null&&S===0&&(P.updateMultisampleRenderTarget(T),P.updateRenderTargetMipmap(T)),B.isScene===!0&&B.onAfterRender(_,B,oe),wt.resetDefaultState(),w=-1,b=null,x.pop(),x.length>0?(g=x[x.length-1],H===!0&&Re.setGlobalState(_.clippingPlanes,g.state.camera)):g=null,y.pop(),y.length>0?m=y[y.length-1]:m=null};function ri(B,oe,me,re){if(B.visible===!1)return;if(B.layers.test(oe.layers)){if(B.isGroup)me=B.renderOrder;else if(B.isLOD)B.autoUpdate===!0&&B.update(oe);else if(B.isLight)g.pushLight(B),B.castShadow&&g.pushShadow(B);else if(B.isSprite){if(!B.frustumCulled||k.intersectsSprite(B)){re&&ye.setFromMatrixPosition(B.matrixWorld).applyMatrix4(ne);const Ye=de.update(B),Qe=B.material;Qe.visible&&m.push(B,Ye,Qe,me,ye.z,null)}}else if((B.isMesh||B.isLine||B.isPoints)&&(!B.frustumCulled||k.intersectsObject(B))){const Ye=de.update(B),Qe=B.material;if(re&&(B.boundingSphere!==void 0?(B.boundingSphere===null&&B.computeBoundingSphere(),ye.copy(B.boundingSphere.center)):(Ye.boundingSphere===null&&Ye.computeBoundingSphere(),ye.copy(Ye.boundingSphere.center)),ye.applyMatrix4(B.matrixWorld).applyMatrix4(ne)),Array.isArray(Qe)){const et=Ye.groups;for(let xt=0,mt=et.length;xt<mt;xt++){const ht=et[xt],At=Qe[ht.materialIndex];At&&At.visible&&m.push(B,Ye,At,me,ye.z,ht)}}else Qe.visible&&m.push(B,Ye,Qe,me,ye.z,null)}}const Fe=B.children;for(let Ye=0,Qe=Fe.length;Ye<Qe;Ye++)ri(Fe[Ye],oe,me,re)}function Ci(B,oe,me,re){const ce=B.opaque,Fe=B.transmissive,Ye=B.transparent;g.setupLightsView(me),H===!0&&Re.setGlobalState(_.clippingPlanes,me),re&&ie.viewport(D.copy(re)),ce.length>0&&Zn(ce,oe,me),Fe.length>0&&Zn(Fe,oe,me),Ye.length>0&&Zn(Ye,oe,me),ie.buffers.depth.setTest(!0),ie.buffers.depth.setMask(!0),ie.buffers.color.setMask(!0),ie.setPolygonOffset(!1)}function Ri(B,oe,me,re){if((me.isScene===!0?me.overrideMaterial:null)!==null)return;g.state.transmissionRenderTarget[re.id]===void 0&&(g.state.transmissionRenderTarget[re.id]=new ji(1,1,{generateMipmaps:!0,type:he.has("EXT_color_buffer_half_float")||he.has("EXT_color_buffer_float")?qo:_r,minFilter:ir,samples:4,stencilBuffer:r,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Nt.workingColorSpace}));const Fe=g.state.transmissionRenderTarget[re.id],Ye=re.viewport||D;Fe.setSize(Ye.z*_.transmissionResolutionScale,Ye.w*_.transmissionResolutionScale);const Qe=_.getRenderTarget();_.setRenderTarget(Fe),_.getClearColor(V),J=_.getClearAlpha(),J<1&&_.setClearColor(16777215,.5),_.clear(),pe&&Ge.render(me);const et=_.toneMapping;_.toneMapping=pr;const xt=re.viewport;if(re.viewport!==void 0&&(re.viewport=void 0),g.setupLightsView(re),H===!0&&Re.setGlobalState(_.clippingPlanes,re),Zn(B,me,re),P.updateMultisampleRenderTarget(Fe),P.updateRenderTargetMipmap(Fe),he.has("WEBGL_multisampled_render_to_texture")===!1){let mt=!1;for(let ht=0,At=oe.length;ht<At;ht++){const kt=oe[ht],rn=kt.object,Qt=kt.geometry,Ft=kt.material,dt=kt.group;if(Ft.side===xi&&rn.layers.test(re.layers)){const cn=Ft.side;Ft.side=ni,Ft.needsUpdate=!0,_n(rn,me,re,Qt,Ft,dt),Ft.side=cn,Ft.needsUpdate=!0,mt=!0}}mt===!0&&(P.updateMultisampleRenderTarget(Fe),P.updateRenderTargetMipmap(Fe))}_.setRenderTarget(Qe),_.setClearColor(V,J),xt!==void 0&&(re.viewport=xt),_.toneMapping=et}function Zn(B,oe,me){const re=oe.isScene===!0?oe.overrideMaterial:null;for(let ce=0,Fe=B.length;ce<Fe;ce++){const Ye=B[ce],Qe=Ye.object,et=Ye.geometry,xt=Ye.group;let mt=Ye.material;mt.allowOverride===!0&&re!==null&&(mt=re),Qe.layers.test(me.layers)&&_n(Qe,oe,me,et,mt,xt)}}function _n(B,oe,me,re,ce,Fe){B.onBeforeRender(_,oe,me,re,ce,Fe),B.modelViewMatrix.multiplyMatrices(me.matrixWorldInverse,B.matrixWorld),B.normalMatrix.getNormalMatrix(B.modelViewMatrix),ce.onBeforeRender(_,oe,me,re,B,Fe),ce.transparent===!0&&ce.side===xi&&ce.forceSinglePass===!1?(ce.side=ni,ce.needsUpdate=!0,_.renderBufferDirect(me,oe,re,ce,B,Fe),ce.side=vr,ce.needsUpdate=!0,_.renderBufferDirect(me,oe,re,ce,B,Fe),ce.side=xi):_.renderBufferDirect(me,oe,re,ce,B,Fe),B.onAfterRender(_,oe,me,re,ce,Fe)}function ui(B,oe,me){oe.isScene!==!0&&(oe=Se);const re=le.get(B),ce=g.state.lights,Fe=g.state.shadowsArray,Ye=ce.state.version,Qe=Ee.getParameters(B,ce.state,Fe,oe,me),et=Ee.getProgramCacheKey(Qe);let xt=re.programs;re.environment=B.isMeshStandardMaterial?oe.environment:null,re.fog=oe.fog,re.envMap=(B.isMeshStandardMaterial?Q:A).get(B.envMap||re.environment),re.envMapRotation=re.environment!==null&&B.envMap===null?oe.environmentRotation:B.envMapRotation,xt===void 0&&(B.addEventListener("dispose",ot),xt=new Map,re.programs=xt);let mt=xt.get(et);if(mt!==void 0){if(re.currentProgram===mt&&re.lightsStateVersion===Ye)return Vr(B,Qe),mt}else Qe.uniforms=Ee.getUniforms(B),B.onBeforeCompile(Qe,_),mt=Ee.acquireProgram(Qe,et),xt.set(et,mt),re.uniforms=Qe.uniforms;const ht=re.uniforms;return(!B.isShaderMaterial&&!B.isRawShaderMaterial||B.clipping===!0)&&(ht.clippingPlanes=Re.uniform),Vr(B,Qe),re.needsLights=Hr(B),re.lightsStateVersion=Ye,re.needsLights&&(ht.ambientLightColor.value=ce.state.ambient,ht.lightProbe.value=ce.state.probe,ht.directionalLights.value=ce.state.directional,ht.directionalLightShadows.value=ce.state.directionalShadow,ht.spotLights.value=ce.state.spot,ht.spotLightShadows.value=ce.state.spotShadow,ht.rectAreaLights.value=ce.state.rectArea,ht.ltc_1.value=ce.state.rectAreaLTC1,ht.ltc_2.value=ce.state.rectAreaLTC2,ht.pointLights.value=ce.state.point,ht.pointLightShadows.value=ce.state.pointShadow,ht.hemisphereLights.value=ce.state.hemi,ht.directionalShadowMap.value=ce.state.directionalShadowMap,ht.directionalShadowMatrix.value=ce.state.directionalShadowMatrix,ht.spotShadowMap.value=ce.state.spotShadowMap,ht.spotLightMatrix.value=ce.state.spotLightMatrix,ht.spotLightMap.value=ce.state.spotLightMap,ht.pointShadowMap.value=ce.state.pointShadowMap,ht.pointShadowMatrix.value=ce.state.pointShadowMatrix),re.currentProgram=mt,re.uniformsList=null,mt}function ds(B){if(B.uniformsList===null){const oe=B.currentProgram.getUniforms();B.uniformsList=Oc.seqWithValue(oe.seq,B.uniforms)}return B.uniformsList}function Vr(B,oe){const me=le.get(B);me.outputColorSpace=oe.outputColorSpace,me.batching=oe.batching,me.batchingColor=oe.batchingColor,me.instancing=oe.instancing,me.instancingColor=oe.instancingColor,me.instancingMorph=oe.instancingMorph,me.skinning=oe.skinning,me.morphTargets=oe.morphTargets,me.morphNormals=oe.morphNormals,me.morphColors=oe.morphColors,me.morphTargetsCount=oe.morphTargetsCount,me.numClippingPlanes=oe.numClippingPlanes,me.numIntersection=oe.numClipIntersection,me.vertexAlphas=oe.vertexAlphas,me.vertexTangents=oe.vertexTangents,me.toneMapping=oe.toneMapping}function $o(B,oe,me,re,ce){oe.isScene!==!0&&(oe=Se),P.resetTextureUnits();const Fe=oe.fog,Ye=re.isMeshStandardMaterial?oe.environment:null,Qe=T===null?_.outputColorSpace:T.isXRRenderTarget===!0?T.texture.colorSpace:eo,et=(re.isMeshStandardMaterial?Q:A).get(re.envMap||Ye),xt=re.vertexColors===!0&&!!me.attributes.color&&me.attributes.color.itemSize===4,mt=!!me.attributes.tangent&&(!!re.normalMap||re.anisotropy>0),ht=!!me.morphAttributes.position,At=!!me.morphAttributes.normal,kt=!!me.morphAttributes.color;let rn=pr;re.toneMapped&&(T===null||T.isXRRenderTarget===!0)&&(rn=_.toneMapping);const Qt=me.morphAttributes.position||me.morphAttributes.normal||me.morphAttributes.color,Ft=Qt!==void 0?Qt.length:0,dt=le.get(re),cn=g.state.lights;if(H===!0&&(q===!0||B!==b)){const hn=B===b&&re.id===w;Re.setState(re,B,hn)}let Ut=!1;re.version===dt.__version?(dt.needsLights&&dt.lightsStateVersion!==cn.state.version||dt.outputColorSpace!==Qe||ce.isBatchedMesh&&dt.batching===!1||!ce.isBatchedMesh&&dt.batching===!0||ce.isBatchedMesh&&dt.batchingColor===!0&&ce.colorTexture===null||ce.isBatchedMesh&&dt.batchingColor===!1&&ce.colorTexture!==null||ce.isInstancedMesh&&dt.instancing===!1||!ce.isInstancedMesh&&dt.instancing===!0||ce.isSkinnedMesh&&dt.skinning===!1||!ce.isSkinnedMesh&&dt.skinning===!0||ce.isInstancedMesh&&dt.instancingColor===!0&&ce.instanceColor===null||ce.isInstancedMesh&&dt.instancingColor===!1&&ce.instanceColor!==null||ce.isInstancedMesh&&dt.instancingMorph===!0&&ce.morphTexture===null||ce.isInstancedMesh&&dt.instancingMorph===!1&&ce.morphTexture!==null||dt.envMap!==et||re.fog===!0&&dt.fog!==Fe||dt.numClippingPlanes!==void 0&&(dt.numClippingPlanes!==Re.numPlanes||dt.numIntersection!==Re.numIntersection)||dt.vertexAlphas!==xt||dt.vertexTangents!==mt||dt.morphTargets!==ht||dt.morphNormals!==At||dt.morphColors!==kt||dt.toneMapping!==rn||dt.morphTargetsCount!==Ft)&&(Ut=!0):(Ut=!0,dt.__version=re.version);let Nn=dt.currentProgram;Ut===!0&&(Nn=ui(re,oe,ce));let Yt=!1,yn=!1,On=!1;const qt=Nn.getUniforms(),En=dt.uniforms;if(ie.useProgram(Nn.program)&&(Yt=!0,yn=!0,On=!0),re.id!==w&&(w=re.id,yn=!0),Yt||b!==B){ie.buffers.depth.getReversed()?(W.copy(B.projectionMatrix),$x(W),eb(W),qt.setValue(X,"projectionMatrix",W)):qt.setValue(X,"projectionMatrix",B.projectionMatrix),qt.setValue(X,"viewMatrix",B.matrixWorldInverse);const an=qt.map.cameraPosition;an!==void 0&&an.setValue(X,ge.setFromMatrixPosition(B.matrixWorld)),ue.logarithmicDepthBuffer&&qt.setValue(X,"logDepthBufFC",2/(Math.log(B.far+1)/Math.LN2)),(re.isMeshPhongMaterial||re.isMeshToonMaterial||re.isMeshLambertMaterial||re.isMeshBasicMaterial||re.isMeshStandardMaterial||re.isShaderMaterial)&&qt.setValue(X,"isOrthographic",B.isOrthographicCamera===!0),b!==B&&(b=B,yn=!0,On=!0)}if(ce.isSkinnedMesh){qt.setOptional(X,ce,"bindMatrix"),qt.setOptional(X,ce,"bindMatrixInverse");const hn=ce.skeleton;hn&&(hn.boneTexture===null&&hn.computeBoneTexture(),qt.setValue(X,"boneTexture",hn.boneTexture,P))}ce.isBatchedMesh&&(qt.setOptional(X,ce,"batchingTexture"),qt.setValue(X,"batchingTexture",ce._matricesTexture,P),qt.setOptional(X,ce,"batchingIdTexture"),qt.setValue(X,"batchingIdTexture",ce._indirectTexture,P),qt.setOptional(X,ce,"batchingColorTexture"),ce._colorsTexture!==null&&qt.setValue(X,"batchingColorTexture",ce._colorsTexture,P));const mn=me.morphAttributes;if((mn.position!==void 0||mn.normal!==void 0||mn.color!==void 0)&&Ve.update(ce,me,Nn),(yn||dt.receiveShadow!==ce.receiveShadow)&&(dt.receiveShadow=ce.receiveShadow,qt.setValue(X,"receiveShadow",ce.receiveShadow)),re.isMeshGouraudMaterial&&re.envMap!==null&&(En.envMap.value=et,En.flipEnvMap.value=et.isCubeTexture&&et.isRenderTargetTexture===!1?-1:1),re.isMeshStandardMaterial&&re.envMap===null&&oe.environment!==null&&(En.envMapIntensity.value=oe.environmentIntensity),yn&&(qt.setValue(X,"toneMappingExposure",_.toneMappingExposure),dt.needsLights&&uo(En,On),Fe&&re.fog===!0&&be.refreshFogUniforms(En,Fe),be.refreshMaterialUniforms(En,re,Y,ee,g.state.transmissionRenderTarget[B.id]),Oc.upload(X,ds(dt),En,P)),re.isShaderMaterial&&re.uniformsNeedUpdate===!0&&(Oc.upload(X,ds(dt),En,P),re.uniformsNeedUpdate=!1),re.isSpriteMaterial&&qt.setValue(X,"center",ce.center),qt.setValue(X,"modelViewMatrix",ce.modelViewMatrix),qt.setValue(X,"normalMatrix",ce.normalMatrix),qt.setValue(X,"modelMatrix",ce.matrixWorld),re.isShaderMaterial||re.isRawShaderMaterial){const hn=re.uniformsGroups;for(let an=0,Ji=hn.length;an<Ji;an++){const Pi=hn[an];te.update(Pi,Nn),te.bind(Pi,Nn)}}return Nn}function uo(B,oe){B.ambientLightColor.needsUpdate=oe,B.lightProbe.needsUpdate=oe,B.directionalLights.needsUpdate=oe,B.directionalLightShadows.needsUpdate=oe,B.pointLights.needsUpdate=oe,B.pointLightShadows.needsUpdate=oe,B.spotLights.needsUpdate=oe,B.spotLightShadows.needsUpdate=oe,B.rectAreaLights.needsUpdate=oe,B.hemisphereLights.needsUpdate=oe}function Hr(B){return B.isMeshLambertMaterial||B.isMeshToonMaterial||B.isMeshPhongMaterial||B.isMeshStandardMaterial||B.isShadowMaterial||B.isShaderMaterial&&B.lights===!0}this.getActiveCubeFace=function(){return M},this.getActiveMipmapLevel=function(){return S},this.getRenderTarget=function(){return T},this.setRenderTargetTextures=function(B,oe,me){const re=le.get(B);re.__autoAllocateDepthBuffer=B.resolveDepthBuffer===!1,re.__autoAllocateDepthBuffer===!1&&(re.__useRenderToTexture=!1),le.get(B.texture).__webglTexture=oe,le.get(B.depthTexture).__webglTexture=re.__autoAllocateDepthBuffer?void 0:me,re.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(B,oe){const me=le.get(B);me.__webglFramebuffer=oe,me.__useDefaultFramebuffer=oe===void 0};const fs=X.createFramebuffer();this.setRenderTarget=function(B,oe=0,me=0){T=B,M=oe,S=me;let re=!0,ce=null,Fe=!1,Ye=!1;if(B){const et=le.get(B);if(et.__useDefaultFramebuffer!==void 0)ie.bindFramebuffer(X.FRAMEBUFFER,null),re=!1;else if(et.__webglFramebuffer===void 0)P.setupRenderTarget(B);else if(et.__hasExternalTextures)P.rebindTextures(B,le.get(B.texture).__webglTexture,le.get(B.depthTexture).__webglTexture);else if(B.depthBuffer){const ht=B.depthTexture;if(et.__boundDepthTexture!==ht){if(ht!==null&&le.has(ht)&&(B.width!==ht.image.width||B.height!==ht.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");P.setupDepthRenderbuffer(B)}}const xt=B.texture;(xt.isData3DTexture||xt.isDataArrayTexture||xt.isCompressedArrayTexture)&&(Ye=!0);const mt=le.get(B).__webglFramebuffer;B.isWebGLCubeRenderTarget?(Array.isArray(mt[oe])?ce=mt[oe][me]:ce=mt[oe],Fe=!0):B.samples>0&&P.useMultisampledRTT(B)===!1?ce=le.get(B).__webglMultisampledFramebuffer:Array.isArray(mt)?ce=mt[me]:ce=mt,D.copy(B.viewport),I.copy(B.scissor),F=B.scissorTest}else D.copy(U).multiplyScalar(Y).floor(),I.copy(Z).multiplyScalar(Y).floor(),F=K;if(me!==0&&(ce=fs),ie.bindFramebuffer(X.FRAMEBUFFER,ce)&&re&&ie.drawBuffers(B,ce),ie.viewport(D),ie.scissor(I),ie.setScissorTest(F),Fe){const et=le.get(B.texture);X.framebufferTexture2D(X.FRAMEBUFFER,X.COLOR_ATTACHMENT0,X.TEXTURE_CUBE_MAP_POSITIVE_X+oe,et.__webglTexture,me)}else if(Ye){const et=le.get(B.texture),xt=oe;X.framebufferTextureLayer(X.FRAMEBUFFER,X.COLOR_ATTACHMENT0,et.__webglTexture,me,xt)}else if(B!==null&&me!==0){const et=le.get(B.texture);X.framebufferTexture2D(X.FRAMEBUFFER,X.COLOR_ATTACHMENT0,X.TEXTURE_2D,et.__webglTexture,me)}w=-1},this.readRenderTargetPixels=function(B,oe,me,re,ce,Fe,Ye){if(!(B&&B.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Qe=le.get(B).__webglFramebuffer;if(B.isWebGLCubeRenderTarget&&Ye!==void 0&&(Qe=Qe[Ye]),Qe){ie.bindFramebuffer(X.FRAMEBUFFER,Qe);try{const et=B.texture,xt=et.format,mt=et.type;if(!ue.textureFormatReadable(xt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!ue.textureTypeReadable(mt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}oe>=0&&oe<=B.width-re&&me>=0&&me<=B.height-ce&&X.readPixels(oe,me,re,ce,tt.convert(xt),tt.convert(mt),Fe)}finally{const et=T!==null?le.get(T).__webglFramebuffer:null;ie.bindFramebuffer(X.FRAMEBUFFER,et)}}},this.readRenderTargetPixelsAsync=async function(B,oe,me,re,ce,Fe,Ye){if(!(B&&B.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Qe=le.get(B).__webglFramebuffer;if(B.isWebGLCubeRenderTarget&&Ye!==void 0&&(Qe=Qe[Ye]),Qe)if(oe>=0&&oe<=B.width-re&&me>=0&&me<=B.height-ce){ie.bindFramebuffer(X.FRAMEBUFFER,Qe);const et=B.texture,xt=et.format,mt=et.type;if(!ue.textureFormatReadable(xt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!ue.textureTypeReadable(mt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const ht=X.createBuffer();X.bindBuffer(X.PIXEL_PACK_BUFFER,ht),X.bufferData(X.PIXEL_PACK_BUFFER,Fe.byteLength,X.STREAM_READ),X.readPixels(oe,me,re,ce,tt.convert(xt),tt.convert(mt),0);const At=T!==null?le.get(T).__webglFramebuffer:null;ie.bindFramebuffer(X.FRAMEBUFFER,At);const kt=X.fenceSync(X.SYNC_GPU_COMMANDS_COMPLETE,0);return X.flush(),await Qx(X,kt,4),X.bindBuffer(X.PIXEL_PACK_BUFFER,ht),X.getBufferSubData(X.PIXEL_PACK_BUFFER,0,Fe),X.deleteBuffer(ht),X.deleteSync(kt),Fe}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(B,oe=null,me=0){const re=Math.pow(2,-me),ce=Math.floor(B.image.width*re),Fe=Math.floor(B.image.height*re),Ye=oe!==null?oe.x:0,Qe=oe!==null?oe.y:0;P.setTexture2D(B,0),X.copyTexSubImage2D(X.TEXTURE_2D,me,0,0,Ye,Qe,ce,Fe),ie.unbindTexture()};const ea=X.createFramebuffer(),fo=X.createFramebuffer();this.copyTextureToTexture=function(B,oe,me=null,re=null,ce=0,Fe=null){Fe===null&&(ce!==0?(Uc("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),Fe=ce,ce=0):Fe=0);let Ye,Qe,et,xt,mt,ht,At,kt,rn;const Qt=B.isCompressedTexture?B.mipmaps[Fe]:B.image;if(me!==null)Ye=me.max.x-me.min.x,Qe=me.max.y-me.min.y,et=me.isBox3?me.max.z-me.min.z:1,xt=me.min.x,mt=me.min.y,ht=me.isBox3?me.min.z:0;else{const mn=Math.pow(2,-ce);Ye=Math.floor(Qt.width*mn),Qe=Math.floor(Qt.height*mn),B.isDataArrayTexture?et=Qt.depth:B.isData3DTexture?et=Math.floor(Qt.depth*mn):et=1,xt=0,mt=0,ht=0}re!==null?(At=re.x,kt=re.y,rn=re.z):(At=0,kt=0,rn=0);const Ft=tt.convert(oe.format),dt=tt.convert(oe.type);let cn;oe.isData3DTexture?(P.setTexture3D(oe,0),cn=X.TEXTURE_3D):oe.isDataArrayTexture||oe.isCompressedArrayTexture?(P.setTexture2DArray(oe,0),cn=X.TEXTURE_2D_ARRAY):(P.setTexture2D(oe,0),cn=X.TEXTURE_2D),X.pixelStorei(X.UNPACK_FLIP_Y_WEBGL,oe.flipY),X.pixelStorei(X.UNPACK_PREMULTIPLY_ALPHA_WEBGL,oe.premultiplyAlpha),X.pixelStorei(X.UNPACK_ALIGNMENT,oe.unpackAlignment);const Ut=X.getParameter(X.UNPACK_ROW_LENGTH),Nn=X.getParameter(X.UNPACK_IMAGE_HEIGHT),Yt=X.getParameter(X.UNPACK_SKIP_PIXELS),yn=X.getParameter(X.UNPACK_SKIP_ROWS),On=X.getParameter(X.UNPACK_SKIP_IMAGES);X.pixelStorei(X.UNPACK_ROW_LENGTH,Qt.width),X.pixelStorei(X.UNPACK_IMAGE_HEIGHT,Qt.height),X.pixelStorei(X.UNPACK_SKIP_PIXELS,xt),X.pixelStorei(X.UNPACK_SKIP_ROWS,mt),X.pixelStorei(X.UNPACK_SKIP_IMAGES,ht);const qt=B.isDataArrayTexture||B.isData3DTexture,En=oe.isDataArrayTexture||oe.isData3DTexture;if(B.isDepthTexture){const mn=le.get(B),hn=le.get(oe),an=le.get(mn.__renderTarget),Ji=le.get(hn.__renderTarget);ie.bindFramebuffer(X.READ_FRAMEBUFFER,an.__webglFramebuffer),ie.bindFramebuffer(X.DRAW_FRAMEBUFFER,Ji.__webglFramebuffer);for(let Pi=0;Pi<et;Pi++)qt&&(X.framebufferTextureLayer(X.READ_FRAMEBUFFER,X.COLOR_ATTACHMENT0,le.get(B).__webglTexture,ce,ht+Pi),X.framebufferTextureLayer(X.DRAW_FRAMEBUFFER,X.COLOR_ATTACHMENT0,le.get(oe).__webglTexture,Fe,rn+Pi)),X.blitFramebuffer(xt,mt,Ye,Qe,At,kt,Ye,Qe,X.DEPTH_BUFFER_BIT,X.NEAREST);ie.bindFramebuffer(X.READ_FRAMEBUFFER,null),ie.bindFramebuffer(X.DRAW_FRAMEBUFFER,null)}else if(ce!==0||B.isRenderTargetTexture||le.has(B)){const mn=le.get(B),hn=le.get(oe);ie.bindFramebuffer(X.READ_FRAMEBUFFER,ea),ie.bindFramebuffer(X.DRAW_FRAMEBUFFER,fo);for(let an=0;an<et;an++)qt?X.framebufferTextureLayer(X.READ_FRAMEBUFFER,X.COLOR_ATTACHMENT0,mn.__webglTexture,ce,ht+an):X.framebufferTexture2D(X.READ_FRAMEBUFFER,X.COLOR_ATTACHMENT0,X.TEXTURE_2D,mn.__webglTexture,ce),En?X.framebufferTextureLayer(X.DRAW_FRAMEBUFFER,X.COLOR_ATTACHMENT0,hn.__webglTexture,Fe,rn+an):X.framebufferTexture2D(X.DRAW_FRAMEBUFFER,X.COLOR_ATTACHMENT0,X.TEXTURE_2D,hn.__webglTexture,Fe),ce!==0?X.blitFramebuffer(xt,mt,Ye,Qe,At,kt,Ye,Qe,X.COLOR_BUFFER_BIT,X.NEAREST):En?X.copyTexSubImage3D(cn,Fe,At,kt,rn+an,xt,mt,Ye,Qe):X.copyTexSubImage2D(cn,Fe,At,kt,xt,mt,Ye,Qe);ie.bindFramebuffer(X.READ_FRAMEBUFFER,null),ie.bindFramebuffer(X.DRAW_FRAMEBUFFER,null)}else En?B.isDataTexture||B.isData3DTexture?X.texSubImage3D(cn,Fe,At,kt,rn,Ye,Qe,et,Ft,dt,Qt.data):oe.isCompressedArrayTexture?X.compressedTexSubImage3D(cn,Fe,At,kt,rn,Ye,Qe,et,Ft,Qt.data):X.texSubImage3D(cn,Fe,At,kt,rn,Ye,Qe,et,Ft,dt,Qt):B.isDataTexture?X.texSubImage2D(X.TEXTURE_2D,Fe,At,kt,Ye,Qe,Ft,dt,Qt.data):B.isCompressedTexture?X.compressedTexSubImage2D(X.TEXTURE_2D,Fe,At,kt,Qt.width,Qt.height,Ft,Qt.data):X.texSubImage2D(X.TEXTURE_2D,Fe,At,kt,Ye,Qe,Ft,dt,Qt);X.pixelStorei(X.UNPACK_ROW_LENGTH,Ut),X.pixelStorei(X.UNPACK_IMAGE_HEIGHT,Nn),X.pixelStorei(X.UNPACK_SKIP_PIXELS,Yt),X.pixelStorei(X.UNPACK_SKIP_ROWS,yn),X.pixelStorei(X.UNPACK_SKIP_IMAGES,On),Fe===0&&oe.generateMipmaps&&X.generateMipmap(cn),ie.unbindTexture()},this.copyTextureToTexture3D=function(B,oe,me=null,re=null,ce=0){return Uc('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(B,oe,me,re,ce)},this.initRenderTarget=function(B){le.get(B).__webglFramebuffer===void 0&&P.setupRenderTarget(B)},this.initTexture=function(B){B.isCubeTexture?P.setTextureCube(B,0):B.isData3DTexture?P.setTexture3D(B,0):B.isDataArrayTexture||B.isCompressedArrayTexture?P.setTexture2DArray(B,0):P.setTexture2D(B,0),ie.unbindTexture()},this.resetState=function(){M=0,S=0,T=null,ie.reset(),wt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return rr}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=Nt._getDrawingBufferColorSpace(e),t.unpackColorSpace=Nt._getUnpackColorSpace()}}const sA=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:iv,AddEquation:is,AddOperation:$0,AdditiveAnimationBlendMode:Df,AdditiveBlending:Vd,AgXToneMapping:Qc,AlphaFormat:Tf,AlwaysCompare:_v,AlwaysDepth:Yc,AlwaysStencilFunc:Yd,AmbientLight:ip,AnimationAction:u_,AnimationClip:ro,AnimationLoader:w1,AnimationMixer:K1,AnimationObjectGroup:Z1,AnimationUtils:x1,ArcCurve:Lv,ArrayCamera:l_,ArrowHelper:vS,AttachedBindMode:Xd,Audio:c_,AudioAnalyser:B1,AudioContext:rp,AudioListener:O1,AudioLoader:L1,AxesHelper:_S,BackSide:ni,BasicDepthPacking:hv,BasicShadowMap:ex,BatchedMesh:Rv,Bone:Zh,BooleanKeyframeTrack:lo,Box2:rS,Box3:Mn,Box3Helper:mS,BoxGeometry:vn,BoxHelper:pS,BufferAttribute:Ct,BufferGeometry:yt,BufferGeometryLoader:a_,ByteType:Mf,Cache:Nr,Camera:Xh,CameraHelper:fS,CanvasTexture:Dv,CapsuleGeometry:Qh,CatmullRomCurve3:Uv,CineonToneMapping:nv,CircleGeometry:$h,ClampToEdgeWrapping:Mi,Clock:sp,Color:ze,ColorKeyframeTrack:Kf,ColorManagement:Nt,CompressedArrayTexture:Vb,CompressedCubeTexture:Hb,CompressedTexture:Jh,CompressedTextureLoader:E1,ConeGeometry:eu,ConstantAlphaFactor:J0,ConstantColorFactor:q0,Controls:fu,CubeCamera:wv,CubeReflectionMapping:zr,CubeRefractionMapping:os,CubeTexture:ml,CubeTextureLoader:T1,CubeUVReflectionMapping:jo,CubicBezierCurve:Gf,CubicBezierCurve3:Nv,CubicInterpolant:Qv,CullFaceBack:Gd,CullFaceFront:L0,CullFaceFrontBack:$y,CullFaceNone:D0,Curve:sr,CurvePath:Fv,CustomBlending:U0,CustomToneMapping:rv,CylinderGeometry:An,Cylindrical:iS,Data3DTexture:Hh,DataArrayTexture:fl,DataTexture:mr,DataTextureLoader:t_,DataUtils:mb,DecrementStencilOp:px,DecrementWrapStencilOp:gx,DefaultLoadingManager:ho,DepthFormat:Vo,DepthStencilFormat:Ho,DepthTexture:Bf,DetachedBindMode:ov,DirectionalLight:np,DirectionalLightHelper:dS,DiscreteInterpolant:$v,DodecahedronGeometry:tu,DoubleSide:xi,DstAlphaFactor:H0,DstColorFactor:X0,DynamicCopyUsage:Ix,DynamicDrawUsage:Ex,DynamicReadUsage:Cx,EdgesGeometry:kv,EllipseCurve:Kh,EqualCompare:pv,EqualDepth:qc,EqualStencilFunc:xx,EquirectangularReflectionMapping:Ga,EquirectangularRefractionMapping:Va,Euler:Ei,EventDispatcher:br,ExtrudeGeometry:nu,FileLoader:qi,Float16BufferAttribute:Sb,Float32BufferAttribute:qe,FloatType:wi,Fog:jh,FogExp2:Yh,FramebufferTexture:Gb,FrontSide:vr,Frustum:yl,GLBufferAttribute:nS,GLSL1:Lx,GLSL3:jd,GreaterCompare:mv,GreaterDepth:Jc,GreaterEqualCompare:vv,GreaterEqualDepth:Zc,GreaterEqualStencilFunc:wx,GreaterStencilFunc:Sx,GridHelper:hS,Group:Oi,HalfFloatType:qo,HemisphereLight:i_,HemisphereLightHelper:cS,IcosahedronGeometry:iu,ImageBitmapLoader:D1,ImageLoader:nl,ImageUtils:bv,IncrementStencilOp:fx,IncrementWrapStencilOp:mx,InstancedBufferAttribute:to,InstancedBufferGeometry:uu,InstancedInterleavedBuffer:Ph,InstancedMesh:Cv,Int16BufferAttribute:xb,Int32BufferAttribute:bb,Int8BufferAttribute:vb,IntType:Nh,InterleavedBuffer:qh,InterleavedBufferAttribute:Fi,Interpolant:Sl,InterpolateDiscrete:Wa,InterpolateLinear:Eh,InterpolateSmooth:Lc,InvertStencilOp:vx,KeepStencilOp:Ns,KeyframeTrack:Zi,LOD:Av,LatheGeometry:xl,Layers:Wh,LessCompare:fv,LessDepth:jc,LessEqualCompare:Uf,LessEqualDepth:$s,LessEqualStencilFunc:bx,LessStencilFunc:yx,Light:hs,LightProbe:o_,Line:Yn,Line3:d_,LineBasicMaterial:wn,LineCurve:Vf,LineCurve3:Ov,LineDashedMaterial:Zv,LineLoop:Pv,LineSegments:zi,LinearFilter:Sn,LinearInterpolant:Jf,LinearMipMapLinearFilter:rx,LinearMipMapNearestFilter:ix,LinearMipmapLinearFilter:ir,LinearMipmapNearestFilter:Ca,LinearSRGBColorSpace:eo,LinearToneMapping:ev,LinearTransfer:Ya,Loader:zn,LoaderUtils:Rh,LoadingManager:Qf,LoopOnce:av,LoopPingPong:cv,LoopRepeat:lv,LuminanceAlphaFormat:Rf,LuminanceFormat:Cf,MOUSE:ki,Material:kn,MaterialLoader:hu,MathUtils:dr,Matrix2:cp,Matrix3:Et,Matrix4:st,MaxEquation:k0,Mesh:ke,MeshBasicMaterial:Bn,MeshDepthMaterial:bl,MeshDistanceMaterial:cu,MeshLambertMaterial:qf,MeshMatcapMaterial:qv,MeshNormalMaterial:jv,MeshPhongMaterial:el,MeshPhysicalMaterial:Xv,MeshStandardMaterial:jf,MeshToonMaterial:Yv,MinEquation:F0,MirroredRepeatWrapping:Ha,MixOperation:Q0,MultiplyBlending:Wd,MultiplyOperation:ul,NearestFilter:jn,NearestMipMapLinearFilter:nx,NearestMipMapNearestFilter:tx,NearestMipmapLinearFilter:No,NearestMipmapNearestFilter:Sf,NeutralToneMapping:sv,NeverCompare:dv,NeverDepth:Xc,NeverStencilFunc:_x,NoBlending:Or,NoColorSpace:Rr,NoToneMapping:pr,NormalAnimationBlendMode:Gh,NormalBlending:qs,NotEqualCompare:gv,NotEqualDepth:Kc,NotEqualStencilFunc:Mx,NumberKeyframeTrack:tl,Object3D:Lt,ObjectLoader:P1,ObjectSpaceNormalMap:uv,OctahedronGeometry:Ur,OneFactor:z0,OneMinusConstantAlphaFactor:K0,OneMinusConstantColorFactor:Z0,OneMinusDstAlphaFactor:W0,OneMinusDstColorFactor:Y0,OneMinusSrcAlphaFactor:Wc,OneMinusSrcColorFactor:V0,OrthographicCamera:us,PCFShadowMap:bf,PCFSoftShadowMap:Aa,PMREMGenerator:ef,Path:Ja,PerspectiveCamera:bn,Plane:ur,PlaneGeometry:or,PlaneHelper:gS,PointLight:tp,PointLightHelper:aS,Points:Na,PointsMaterial:Xs,PolarGridHelper:uS,PolyhedronGeometry:cs,PositionalAudio:k1,PropertyBinding:Gt,PropertyMixer:h_,QuadraticBezierCurve:Hf,QuadraticBezierCurve3:Wf,Quaternion:Ht,QuaternionKeyframeTrack:Jo,QuaternionLinearInterpolant:e_,RED_GREEN_RGTC2_Format:Mh,RED_RGTC1_Format:If,REVISION:hl,RGBADepthPacking:Lf,RGBAFormat:hi,RGBAIntegerFormat:zh,RGBA_ASTC_10x10_Format:vh,RGBA_ASTC_10x5_Format:ph,RGBA_ASTC_10x6_Format:mh,RGBA_ASTC_10x8_Format:gh,RGBA_ASTC_12x10_Format:_h,RGBA_ASTC_12x12_Format:yh,RGBA_ASTC_4x4_Format:oh,RGBA_ASTC_5x4_Format:ah,RGBA_ASTC_5x5_Format:lh,RGBA_ASTC_6x5_Format:ch,RGBA_ASTC_6x6_Format:hh,RGBA_ASTC_8x5_Format:uh,RGBA_ASTC_8x6_Format:dh,RGBA_ASTC_8x8_Format:fh,RGBA_BPTC_Format:La,RGBA_ETC2_EAC_Format:sh,RGBA_PVRTC_2BPPV1_Format:nh,RGBA_PVRTC_4BPPV1_Format:th,RGBA_S3TC_DXT1_Format:Pa,RGBA_S3TC_DXT3_Format:Ia,RGBA_S3TC_DXT5_Format:Da,RGBDepthPacking:cx,RGBFormat:Af,RGBIntegerFormat:sx,RGB_BPTC_SIGNED_Format:xh,RGB_BPTC_UNSIGNED_Format:bh,RGB_ETC1_Format:ih,RGB_ETC2_Format:rh,RGB_PVRTC_2BPPV1_Format:eh,RGB_PVRTC_4BPPV1_Format:$c,RGB_S3TC_DXT1_Format:Ra,RGDepthPacking:hx,RGFormat:Pf,RGIntegerFormat:Bh,RawShaderMaterial:Wv,Ray:ls,Raycaster:du,RectAreaLight:r_,RedFormat:kh,RedIntegerFormat:dl,ReinhardToneMapping:tv,RenderTarget:Vh,RenderTarget3D:Q1,RenderTargetArray:$1,RepeatWrapping:nr,ReplaceStencilOp:dx,ReverseSubtractEquation:O0,RingGeometry:ru,SIGNED_RED_GREEN_RGTC2_Format:wh,SIGNED_RED_RGTC1_Format:Sh,SRGBColorSpace:sn,SRGBTransfer:Zt,Scene:gl,ShaderChunk:_t,ShaderLib:li,ShaderMaterial:Ti,ShadowMaterial:Hv,Shape:Js,ShapeGeometry:su,ShapePath:yS,ShapeUtils:gr,ShortType:wf,Skeleton:_l,SkeletonHelper:oS,SkinnedMesh:kf,Source:ss,Sphere:Cn,SphereGeometry:ao,Spherical:Ih,SphericalHarmonics3:s_,SplineCurve:Xf,SpotLight:ep,SpotLightHelper:sS,Sprite:vl,SpriteMaterial:Zo,SrcAlphaFactor:Hc,SrcAlphaSaturateFactor:j0,SrcColorFactor:G0,StaticCopyUsage:Px,StaticDrawUsage:ja,StaticReadUsage:Ax,StereoCamera:U1,StreamCopyUsage:Dx,StreamDrawUsage:Tx,StreamReadUsage:Rx,StringKeyframeTrack:co,SubtractEquation:N0,SubtractiveBlending:Hd,TOUCH:Vs,TangentSpaceNormalMap:as,TetrahedronGeometry:ou,Texture:pn,TextureLoader:n_,TextureUtils:wS,TimestampQuery:Ux,TorusGeometry:Ir,TorusKnotGeometry:au,Triangle:bi,TriangleFanDrawMode:lx,TriangleStripDrawMode:ax,TrianglesDrawMode:ox,TubeGeometry:lu,UVMapping:Uh,Uint16BufferAttribute:Of,Uint32BufferAttribute:Ff,Uint8BufferAttribute:_b,Uint8ClampedBufferAttribute:yb,Uniform:lp,UniformsGroup:tS,UniformsLib:Je,UniformsUtils:pl,UnsignedByteType:_r,UnsignedInt248Type:Go,UnsignedInt5999Type:Ef,UnsignedIntType:Gr,UnsignedShort4444Type:Oh,UnsignedShort5551Type:Fh,UnsignedShortType:zo,VSMShadowMap:hr,Vector2:xe,Vector3:L,Vector4:Pt,VectorKeyframeTrack:io,VideoFrameTexture:zb,VideoTexture:Iv,WebGL3DRenderTarget:sb,WebGLArrayRenderTarget:rb,WebGLCoordinateSystem:rr,WebGLCubeRenderTarget:Ev,WebGLRenderTarget:ji,WebGLRenderer:up,WebGLUtils:y_,WebGPUCoordinateSystem:qa,WebXRController:Nc,WireframeGeometry:Yf,WrapAroundEnding:Xa,ZeroCurvatureEnding:Hs,ZeroFactor:B0,ZeroSlopeEnding:Ws,ZeroStencilOp:ux,createCanvasElement:xv},Symbol.toStringTag,{value:"Module"})),_g=(s,e)=>{if(s===e)return!0;if(!s||!e)return!1;const t=s.length;if(e.length!==t)return!1;for(let i=0;i<t;i++)if(s[i]!==e[i])return!1;return!0},oA=()=>{const s=[],i={items:s,remember:(n,r)=>{for(let a=0;a<s.length;a++){const l=s[a];if(_g(r,l.keys)&&l.promise)return l.promise}const o={promise:n(),keys:r};return s.push(o),o.promise},clear:n=>{for(let r=0;r<s.length;r++){const o=s[r];if(_g(n,o.keys)){s.splice(r,1);return}}}};return Ai("threlte-cache",i),i},aA=()=>{const s=ii("threlte-cache");if(!s)throw new Error("No cache found. The cache can only be used in a child component to <Canvas>.");return s},yg=Symbol(),lA=s=>typeof(s==null?void 0:s.subscribe)=="function",x_=(s,e,t)=>{const i=s().map(o=>lA(o)?Qy(o):yg),n=Mt(()=>s().map((o,a)=>i[a]===yg?o:i[a].current)),r=()=>{_e(n);let o;return Lh(()=>{o=e(_e(n))}),o};t?It(r):_i(r)},cA=(s,e)=>x_(s,e,!1),hA=(s,e)=>x_(s,e,!0),b_=Object.assign(cA,{pre:hA}),Ui=(s,e)=>(s==null?void 0:s[`is${e}`])===!0,gd=s=>{const e=ti(void 0),t=ti(void 0);return s.then(i=>{e.set(i)}).catch(i=>{console.error("Error in asyncWritable:",i.message),t.set(i)}),Object.assign(Object.assign(s,e),{error:t,promise:s})},uA=typeof window<"u",ei=(s,e)=>{const t=ll(s,r=>r);let i;const n=t.subscribe(async r=>{i&&i();const o=await e(r);o&&(i=o)});xr(()=>{n(),i&&i()})},dn=s=>{const e=ti(s),t={set:i=>{t.current=i,e.set(i)},subscribe:e.subscribe,update:i=>{const n=i(t.current);t.current=n,e.set(n)},current:s};return t},dA=s=>({subscribe:s.subscribe,get current(){return s.current}}),S_=(s,e)=>{if(e.includes(".")){const t=e.split("."),i=t.pop();for(let n=0;n<t.length;n+=1)s=s[t[n]];return{target:s,key:i}}else return{target:s,key:e}},fA=s=>{const{dom:e,canvas:t}=s,i=dn({width:e.offsetWidth,height:e.offsetHeight});yf(()=>{const r=new ResizeObserver(()=>{const{offsetWidth:o,offsetHeight:a}=e;(i.current.width!==o||i.current.height!==a)&&i.set({width:o,height:a})});return r.observe(e),()=>{r.disconnect()}});const n={dom:e,canvas:t,size:dA(i)};return Ai("threlte-dom-context",n),n},mu=()=>{const s=ii("threlte-dom-context");if(!s)throw new Error("useDOM can only be used in a child component to <Canvas>.");return s};function pA(s){return{all:s=s||new Map,on:function(e,t){var i=s.get(e);i?i.push(t):s.set(e,[t])},off:function(e,t){var i=s.get(e);i&&(t?i.splice(i.indexOf(t)>>>0,1):s.set(e,[]))},emit:function(e,t){var i=s.get(e);i&&i.slice().map(function(n){n(t)}),(i=s.get("*"))&&i.slice().map(function(n){n(e,t)})}}}class ns{constructor(){tn(this,"allVertices",{});tn(this,"isolatedVertices",{});tn(this,"connectedVertices",{});tn(this,"sortedConnectedValues",[]);tn(this,"needsSort",!1);tn(this,"emitter",pA());tn(this,"emit",this.emitter.emit.bind(this.emitter));tn(this,"on",this.emitter.on.bind(this.emitter));tn(this,"off",this.emitter.off.bind(this.emitter));tn(this,"getKey",e=>typeof e=="object"?e.key:e)}get sortedVertices(){return this.mapNodes(e=>e)}moveToIsolated(e){const t=this.connectedVertices[e];t&&(this.isolatedVertices[e]=t,delete this.connectedVertices[e])}moveToConnected(e){const t=this.isolatedVertices[e];t&&(this.connectedVertices[e]=t,delete this.isolatedVertices[e])}add(e,t,i){if(this.allVertices[e]&&this.allVertices[e].value!==void 0)throw new Error(`A node with the key ${e.toString()} already exists`);let n=this.allVertices[e];n?n.value===void 0&&(n.value=t):(n={value:t,previous:new Set,next:new Set},this.allVertices[e]=n);const r=n.next.size>0||n.previous.size>0;if(!(i!=null&&i.after)&&!(i!=null&&i.before)&&!r){this.isolatedVertices[e]=n,this.emit("node:added",{key:e,type:"isolated",value:t});return}else this.connectedVertices[e]=n;if(i!=null&&i.after){const o=Array.isArray(i.after)?i.after:[i.after];o.forEach(a=>{n.previous.add(this.getKey(a))}),o.forEach(a=>{const l=this.getKey(a),c=this.allVertices[l];c?(c.next.add(e),this.moveToConnected(l)):(this.allVertices[l]={value:void 0,previous:new Set,next:new Set([e])},this.connectedVertices[l]=this.allVertices[l])})}if(i!=null&&i.before){const o=Array.isArray(i.before)?i.before:[i.before];o.forEach(a=>{n.next.add(this.getKey(a))}),o.forEach(a=>{const l=this.getKey(a),c=this.allVertices[l];c?(c.previous.add(e),this.moveToConnected(l)):(this.allVertices[l]={value:void 0,previous:new Set([e]),next:new Set},this.connectedVertices[l]=this.allVertices[l])})}this.emit("node:added",{key:e,type:"connected",value:t}),this.needsSort=!0}remove(e){const t=this.getKey(e);if(this.isolatedVertices[t]){delete this.isolatedVertices[t],delete this.allVertices[t],this.emit("node:removed",{key:t,type:"isolated"});return}const n=this.connectedVertices[t];n&&(n.next.forEach(r=>{const o=this.connectedVertices[r];o&&(o.previous.delete(t),o.previous.size===0&&o.next.size===0&&this.moveToIsolated(r))}),n.previous.forEach(r=>{const o=this.connectedVertices[r];o&&(o.next.delete(t),o.previous.size===0&&o.next.size===0&&this.moveToIsolated(r))}),delete this.connectedVertices[t],delete this.allVertices[t],this.emit("node:removed",{key:t,type:"connected"}),this.needsSort=!0)}mapNodes(e){this.needsSort&&this.sort();const t=[];return this.forEachNode((i,n)=>{t.push(e(i,n))}),t}forEachNode(e){this.needsSort&&this.sort();let t=0;for(;t<this.sortedConnectedValues.length;t++)e(this.sortedConnectedValues[t],t);Reflect.ownKeys(this.isolatedVertices).forEach(i=>{const n=this.isolatedVertices[i];n.value!==void 0&&e(n.value,t++)})}getValueByKey(e){var t;return(t=this.allVertices[e])==null?void 0:t.value}getKeyByValue(e){return Reflect.ownKeys(this.connectedVertices).find(t=>this.connectedVertices[t].value===e)??Reflect.ownKeys(this.isolatedVertices).find(t=>this.isolatedVertices[t].value===e)}sort(){var o;const e=new Map,t=[],i=[],n=Reflect.ownKeys(this.connectedVertices).filter(a=>this.connectedVertices[a].value!==void 0);for(n.forEach(a=>{e.set(a,0)}),n.forEach(a=>{this.connectedVertices[a].next.forEach(c=>{this.connectedVertices[c]&&e.set(c,(e.get(c)||0)+1)})}),e.forEach((a,l)=>{a===0&&t.push(l)});t.length>0;){const a=t.shift();i.push(a);const l=n.find(c=>c===a);l&&((o=this.connectedVertices[l])==null||o.next.forEach(c=>{const h=(e.get(c)||0)-1;e.set(c,h),h===0&&t.push(c)}))}if(i.length!==n.length)throw new Error("The graph contains a cycle, and thus can not be sorted topologically.");const r=a=>a!==void 0;this.sortedConnectedValues=i.map(a=>this.connectedVertices[a].value).filter(r),this.needsSort=!1}clear(){this.allVertices={},this.isolatedVertices={},this.connectedVertices={},this.sortedConnectedValues=[],this.needsSort=!1}static isKey(e){return typeof e=="string"||typeof e=="symbol"}static isValue(e){return typeof e=="object"&&"key"in e}}class mA{constructor(e,t,i){tn(this,"key");tn(this,"stage");tn(this,"callback");tn(this,"runTask",!0);this.stage=e,this.key=t,this.callback=i}stop(){this.runTask=!1}start(){this.runTask=!0}run(e){this.runTask&&this.callback(e)}}class gA extends ns{constructor(t,i,n){super();tn(this,"key");tn(this,"scheduler");tn(this,"runTask",!0);tn(this,"callback",(t,i)=>i());tn(this,"removeTask",this.remove.bind(this));this.scheduler=t,this.key=i,this.start=this.start.bind(this),this.stop=this.stop.bind(this),n&&(this.callback=n.bind(this))}stop(){this.runTask=!1}start(){this.runTask=!0}get tasks(){return this.sortedVertices}createTask(t,i,n){const r=new mA(this,t,i);return this.add(t,r,n),r}getTask(t){return this.getValueByKey(t)}run(t){this.runTask&&this.callback(t,i=>{this.forEachNode(n=>{n.run(i??t)})})}runWithTiming(t){if(!this.runTask)return{};const i={};return this.callback(t,n=>{this.forEachNode(r=>{const o=performance.now();r.run(n??t);const a=performance.now()-o;i[r.key]=a})}),i}getSchedule(){return this.mapNodes(t=>t.key.toString())}}class vA extends ns{constructor(t){super();tn(this,"lastTime",performance.now());tn(this,"clampDeltaTo",.1);tn(this,"removeStage",this.remove.bind(this));t!=null&&t.clampDeltaTo&&(this.clampDeltaTo=t.clampDeltaTo),this.run=this.run.bind(this)}get stages(){return this.sortedVertices}createStage(t,i){const n=new gA(this,t,i==null?void 0:i.callback);return this.add(t,n,{after:i==null?void 0:i.after,before:i==null?void 0:i.before}),n}getStage(t){return this.getValueByKey(t)}run(t){const i=t-this.lastTime;this.forEachNode(n=>{n.run(Math.min(i/1e3,this.clampDeltaTo))}),this.lastTime=t}runWithTiming(t){const i=t-this.lastTime,n={},r=performance.now();return this.forEachNode(o=>{const a=performance.now(),l=o.runWithTiming(Math.min(i/1e3,this.clampDeltaTo)),c=performance.now()-a;n[o.key.toString()]={duration:c,tasks:l}}),{total:performance.now()-r,stages:n}}getSchedule(t={tasks:!0}){return{stages:this.mapNodes(i=>{if(i===void 0)throw new Error("Stage not found");return{key:i.key.toString(),tasks:t.tasks?i.getSchedule():void 0}})}}dispose(){this.clear()}}const _A=s=>{const e=new vA,t=e.createStage(Symbol("threlte-main-stage")),i={scheduler:e,frameInvalidated:!0,autoInvalidations:new Set,shouldAdvance:!1,advance:()=>{i.shouldAdvance=!0},autoRender:dn(s.autoRender??!0),renderMode:dn(s.renderMode??"on-demand"),invalidate(){i.frameInvalidated=!0},mainStage:t,shouldRender:()=>i.renderMode.current==="always"||i.renderMode.current==="on-demand"&&(i.frameInvalidated||i.autoInvalidations.size>0)||i.renderMode.current==="manual"&&i.shouldAdvance,renderStage:e.createStage(Symbol("threlte-render-stage"),{after:t,callback(n,r){i.shouldRender()&&r()}}),resetFrameInvalidation(){i.frameInvalidated=!1,i.shouldAdvance=!1}};return _i(()=>{i.autoRender.set(s.autoRender??!0)}),_i(()=>{i.renderMode.set(s.renderMode??"on-demand")}),xr(()=>{i.scheduler.dispose()}),Ai("threlte-scheduler-context",i),i},gu=()=>{const s=ii("threlte-scheduler-context");if(!s)throw new Error("useScheduler can only be used in a child component to <Canvas>.");return s},yA=()=>{const{size:s}=mu(),{invalidate:e}=gu(),t=new bn(75,0,.1,1e3);t.position.z=5,t.lookAt(0,0,0);const i=dn(t);ei(s,r=>{if(i.current===t){const o=i.current;o.aspect=r.width/r.height,o.updateProjectionMatrix(),e()}});const n={camera:i};return Ai("threlte-camera-context",n),n},M_=()=>{const s=ii("threlte-camera-context");if(!s)throw new Error("useCamera can only be used in a child component to <Canvas>.");return s},xA=()=>{const s={removeObjectFromDisposal:e=>{s.disposableObjects.delete(e)},disposableObjectMounted:e=>{const t=s.disposableObjects.get(e);t?s.disposableObjects.set(e,t+1):s.disposableObjects.set(e,1)},disposableObjectUnmounted:e=>{const t=s.disposableObjects.get(e);t&&t>0&&(s.disposableObjects.set(e,t-1),t-1<=0&&(s.shouldDispose=!0))},disposableObjects:new Map,shouldDispose:!1,dispose:async(e=!1)=>{await _f(),!(!s.shouldDispose&&!e)&&(s.disposableObjects.forEach((t,i)=>{var n;(t===0||e)&&((n=i==null?void 0:i.dispose)==null||n.call(i),s.disposableObjects.delete(i))}),s.shouldDispose=!1)}};return xr(()=>{s.dispose(!0)}),Ai("threlte-disposal-context",s),s},w_=()=>{const s=ii("threlte-disposal-context");if(!s)throw new Error("useDisposal can only be used in a child component to <Canvas>.");return s},E_=Symbol("threlte-parent-context"),T_=s=>{const e=dn(s);return Ai(E_,e),e},dp=()=>ii(E_),Dh=Symbol("threlte-parent-object3d-context"),bA=s=>{const e=xf(s);return Ai(Dh,e),e},SA=s=>{const e=ii(Dh),t=ti(s),i=ll([t,e],([n,r])=>n??r);return Ai(Dh,i),t},MA=()=>ii(Dh);function so(s,e,t){if(!uA)return{task:void 0,start:()=>{},stop:()=>{},started:xf(!1)};let i,n,r;ns.isKey(s)?(i=s,n=e,r=t):(i=Symbol("useTask"),n=s,r=e);const o=gu();let a=o.mainStage;if(r){if(r.stage)if(ns.isValue(r.stage))a=r.stage;else{const d=o.scheduler.getStage(r.stage);if(!d)throw new Error(`No stage found with key ${r.stage.toString()}`);a=d}else if(r.after)if(Array.isArray(r.after))for(let d=0;d<r.after.length;d++){const f=r.after[d];if(ns.isValue(f)){a=f.stage;break}}else ns.isValue(r.after)&&(a=r.after.stage);else if(r.before)if(Array.isArray(r.before))for(let d=0;d<r.before.length;d++){const f=r.before[d];if(ns.isValue(f)){a=f.stage;break}}else ns.isValue(r.before)&&(a=r.before.stage)}const l=ti(!1),c=a.createTask(i,n,r),h=()=>{l.set(!0),((r==null?void 0:r.autoInvalidate)??!0)&&o.autoInvalidations.add(n),c.start()},u=()=>{l.set(!1),((r==null?void 0:r.autoInvalidate)??!0)&&o.autoInvalidations.delete(n),c.stop()};return(r==null?void 0:r.autoStart)??!0?h():u(),xr(()=>{u(),a.removeTask(i)}),{task:c,start:h,stop:u,started:{subscribe:l.subscribe}}}const wA=s=>{const e={scene:new gl};return Ai("threlte-scene-context",e),e},A_=()=>{const s=ii("threlte-scene-context");if(!s)throw new Error("useScene can only be used in a child component to <Canvas>.");return s},EA=s=>{const{dispose:e}=w_(),{camera:t}=M_(),{scene:i}=A_(),{invalidate:n,renderStage:r,autoRender:o,scheduler:a,resetFrameInvalidation:l}=gu(),{size:c,canvas:h}=mu(),u=s.createRenderer?s.createRenderer(h):new up({canvas:h,powerPreference:"high-performance",antialias:!0,alpha:!0}),d=r.createTask(Symbol("threlte-auto-render-task"),()=>{u.render(i,t.current)}),f={renderer:u,colorManagementEnabled:dn(s.colorManagementEnabled??!0),colorSpace:dn(s.colorSpace??"srgb"),dpr:dn(s.dpr??window.devicePixelRatio),shadows:dn(s.shadows??Aa),toneMapping:dn(s.toneMapping??Qc),autoRenderTask:d};Ai("threlte-renderer-context",f),ei([f.colorManagementEnabled],([m])=>{Nt.enabled=m}),ei([f.colorSpace],([m])=>{"outputColorSpace"in u&&(u.outputColorSpace=m)}),ei([f.dpr],([m])=>{"setPixelRatio"in u&&u.setPixelRatio(m)});const{start:p,stop:v}=so(()=>{var m;!("xr"in u)||(m=u.xr)!=null&&m.isPresenting||(u.setSize(c.current.width,c.current.height),n(),v())},{before:d,autoStart:!1,autoInvalidate:!1});return ei([c],()=>{p()}),ei([f.shadows],([m])=>{"shadowMap"in u&&(u.shadowMap.enabled=!!m,m&&m!==!0?u.shadowMap.type=m:m===!0&&(u.shadowMap.type=Aa))}),ei([f.toneMapping],([m])=>{"toneMapping"in u&&(u.toneMapping=m)}),ei([o],([m])=>(m?f.autoRenderTask.start():f.autoRenderTask.stop(),()=>{f.autoRenderTask.stop()})),"setAnimationLoop"in f.renderer&&f.renderer.setAnimationLoop(g=>{e(),a.run(g),l()}),xr(()=>{if("dispose"in f.renderer){const m=f.renderer.dispose;m()}}),_i(()=>{f.colorManagementEnabled.set(s.colorManagementEnabled??!0)}),_i(()=>{f.colorSpace.set(s.colorSpace??"srgb")}),_i(()=>{f.toneMapping.set(s.toneMapping??Qc)}),_i(()=>{f.shadows.set(s.shadows??Aa)}),_i(()=>{f.dpr.set(s.dpr??window.devicePixelRatio)}),f},TA=()=>{const s=ii("threlte-renderer-context");if(!s)throw new Error("useRenderer can only be used in a child component to <Canvas>.");return s},AA=()=>{const s=dn({});return Ai("threlte-user-context",s),s},CA=()=>{const s=ii("threlte-user-context");if(!s)throw new Error("useUserContext can only be used in a child component to <Canvas>.");return s},RA=s=>{const{scene:e}=wA();return{scene:e,...fA(s),...oA(),...T_(e),...bA(e),...xA(),..._A(s),...yA(),...EA(s),...AA()}};function PA(s,e){Dn(e,!0);let t=yr(e,["$$slots","$$events","$$legacy","children"]);RA(t);var i=pt(),n=je(i);Yi(n,()=>e.children),Xe(s,i),Ln()}var IA=Jt('<div class="svelte-1osucwe"><canvas class="svelte-1osucwe"><!></canvas></div>');function DA(s,e){let t=yr(e,["$$slots","$$events","$$legacy","children"]),i=Ni(void 0),n=Ni(void 0);var r=IA(),o=Bs(r),a=Bs(o);{var l=c=>{PA(c,Br({get dom(){return _e(n)},get canvas(){return _e(i)}},()=>t,{children:(h,u)=>{var d=pt(),f=je(d);Yi(f,()=>e.children??kr),Xe(h,d)},$$slots:{default:!0}}))};Ot(a,c=>{_e(i)&&_e(n)&&c(l)})}zs(o),Np(o,c=>Si(i,c),()=>_e(i)),zs(r),Np(r,c=>Si(n,c),()=>_e(n)),Xe(s,r)}const Gi=()=>{const s=gu(),e=TA(),t=M_(),i=A_(),n=mu();return{advance:s.advance,autoRender:s.autoRender,autoRenderTask:e.autoRenderTask,camera:t.camera,colorManagementEnabled:e.colorManagementEnabled,colorSpace:e.colorSpace,dpr:e.dpr,invalidate:s.invalidate,mainStage:s.mainStage,renderer:e.renderer,renderMode:s.renderMode,renderStage:s.renderStage,scheduler:s.scheduler,shadows:e.shadows,shouldRender:s.shouldRender,dom:n.dom,canvas:n.canvas,size:n.size,toneMapping:e.toneMapping,get scene(){return i.scene},set scene(o){i.scene=o}}},LA=s=>typeof s=="object"&&s!==null,UA=()=>{const{invalidate:s}=Gi();let e;const t=ti(),i=dp(),n=MA(),r=T_(),o=SA();ei([t,r,i,n],([c,h,u,d])=>{if(e==null||e(),e=void 0,!h){s();return}if(c!==void 0){if(c){if(typeof c=="function")e=c({ref:h,parent:u,parentObject3D:d});else if(Ui(c,"Object3D")&&Ui(h,"Object3D"))e=()=>c==null?void 0:c.remove(h),c==null||c.add(h);else if(typeof c=="string"){const{target:f,key:p}=S_(u,c),v=f[p];e=()=>f[p]=v,f[p]=h}}}else Ui(h,"Object3D")?(e=()=>d==null?void 0:d.remove(h),d==null||d.add(h)):LA(u)&&(Ui(h,"Material")?u.material=h:Ui(h,"BufferGeometry")&&(u.geometry=h));s()});const a=c=>{t.set(c)},l=c=>{r.set(c),Ui(c,"Object3D")&&o.set(c)};return xr(()=>{e==null||e(),s()}),{updateRef:l,updateAttach:a}},NA=s=>Ui(s,"PerspectiveCamera")||Ui(s,"OrthographicCamera"),OA=()=>{const{invalidate:s,size:e,camera:t}=Gi(),i=ti(),n=ti(!0),r=ti(!1);return ei([i,r],([c,h])=>{!c||!h||(t.set(c),s())}),ei([i,n,e],([c,h,u])=>{!c||h||(Ui(c,"OrthographicCamera")?(c.left=u.width/-2,c.right=u.width/2,c.top=u.height/2,c.bottom=u.height/-2,c.updateProjectionMatrix(),c.updateMatrixWorld(),s()):Ui(c,"PerspectiveCamera")&&(c.aspect=u.width/u.height,c.updateProjectionMatrix(),c.updateMatrixWorld(),s()))}),{updateRef:c=>{NA(c)&&i.set(c)},updateManual:c=>{n.set(c)},updateMakeDefault:c=>{r.set(c)}}},FA=s=>{let e,t,i=!1;const n=()=>{e==null||e(),e=s==null?void 0:s(t)},r=o=>{t=o,i&&n()};return yf(()=>{n(),i=!0}),xr(()=>e==null?void 0:e()),{updateRef:r}},xg=Symbol("threlte-disposable-object-context"),kA=s=>typeof(s==null?void 0:s.dispose)=="function"&&!Ui(s,"Scene"),BA=s=>{let e;const t=ti(void 0),i=ti(s),{disposableObjectMounted:n,disposableObjectUnmounted:r,removeObjectFromDisposal:o}=w_(),a=ii(xg),l=ll([i,a??ti(!0)],([u,d])=>u??d??!0);return Ai(xg,l),ei([t,l],([u,d])=>{u===e?d?e&&n(e):e&&o(e):d&&(e&&r(e),u&&n(u)),e=u}),xr(()=>{if(!zd(l))return;const u=zd(t);u&&r(u)}),{updateRef:u=>{kA(u)&&t.set(u)},updateDispose:u=>{i.set(u)}}},zA=s=>s!==null&&typeof s=="object"&&"addEventListener"in s&&"removeEventListener"in s,GA=(s={})=>{const e=n=>{var r;n!=null&&n.type&&((r=s[`on${n.type}`])==null||r.call(s,n))},t=(n,r)=>{const o=[];for(const a of Object.keys(r))a.startsWith("on")&&(n.addEventListener(a.slice(2),e),o.push(a));return()=>{for(let a=0;a<o.length;a++)n.removeEventListener(o[a],e)}};return{updateRef:n=>{if(zA(n))return t(n,s)}}};let nf;const VA=s=>{nf=s},HA=()=>{const s=nf;return nf=void 0,s},WA=s=>{const t=ii("threlte-plugin-context");if(!t)return;const i=[],n=Object.values(t);if(n.length){const r=s();for(let o=0;o<n.length;o++){const a=n[o],l=a(r);l&&l.pluginProps&&i.push(...l.pluginProps)}}return{pluginsProps:i}},XA=new Set(["$$scope","$$slots","type","args","attach","instance"]),YA=new Set(["fov","aspect","near","far","left","right","top","bottom","zoom"]),jA=s=>typeof s=="string"||typeof s=="number"||typeof s=="boolean"||typeof s>"u"||s===null,bg=(s,e,t)=>{var i,n,r;return!Array.isArray(t)&&typeof t=="number"&&typeof((i=s[e])==null?void 0:i.setScalar)=="function"&&!((n=s[e])!=null&&n.isColor)?(o,a,l)=>{o[a].setScalar(l)}:typeof((r=s[e])==null?void 0:r.set)=="function"?Array.isArray(t)?(o,a,l)=>{o[a].set(...l)}:(o,a,l)=>{o[a].set(l)}:(o,a,l)=>{o[a]=l}},qA=()=>{const{invalidate:s}=Gi(),e=new Map,t=new Map,i=(r,o,a,l)=>{if(jA(a)){const u=e.get(o);if(u&&u.instance===r&&u.value===a)return;e.set(o,{instance:r,value:a})}const{key:c,target:h}=S_(r,o);if(a!=null){const u=t.get(o);if(u)u(h,c,a);else{const d=bg(h,c,a);t.set(o,d),d(h,c,a)}}else bg(h,c,a)(h,c,a);l.manualCamera||YA.has(c)&&(h.isPerspectiveCamera||h.isOrthographicCamera)&&h.updateProjectionMatrix()};return{updateProp:(r,o,a,l)=>{var c;!XA.has(o)&&!((c=l.pluginsProps)!=null&&c.includes(o))&&i(r,o,a,l),s()}}},ZA=/^\s*class\s+/,JA=s=>typeof s!="function"?!1:ZA.test(s.toString()),KA=s=>Array.isArray(s),QA=(s,e)=>JA(s)?KA(e)?new s(...e):new s:s;function vd(s,e){Dn(e,!0);let t=He(e,"is",19,HA),i=He(e,"manual",3,!1),n=He(e,"makeDefault",3,!1),r=He(e,"ref",15),o=yr(e,["$$slots","$$events","$$legacy","is","args","attach","manual","makeDefault","dispose","ref","oncreate","children"]),a=Mt(()=>QA(t(),e.args));const l=FA(e.oncreate);It(()=>{r()!==_e(a)&&(r(_e(a)),l.updateRef(_e(a)))});const c=WA(()=>({get ref(){return _e(a)},get args(){return e.args},get attach(){return e.attach},get manual(){return i()},get makeDefault(){return n()},get dispose(){return e.dispose},get props(){return o}})),{updateProp:h}=qA();Object.keys(o).forEach(g=>{It(()=>{h(_e(a),g,o[g],{manualCamera:i(),pluginsProps:c==null?void 0:c.pluginsProps})})});const u=UA();It(()=>u.updateAttach(e.attach)),It(()=>u.updateRef(_e(a)));const d=OA();It(()=>d.updateRef(_e(a))),It(()=>d.updateManual(i())),It(()=>d.updateMakeDefault(n()));const f=BA(e.dispose);It(()=>f.updateRef(_e(a))),It(()=>f.updateDispose(e.dispose));const p=GA(o);It(()=>p.updateRef(_e(a)));var v=pt(),m=je(v);Yi(m,()=>e.children??kr,()=>({ref:_e(a)})),Xe(s,v),Ln()}const $A={},bt=new Proxy(function(){},{apply(s,e,t){return vd(...t)},get(s,e){if(typeof e!="string")return vd;const t=$A[e]||sA[e];if(t===void 0)throw new Error(`No Three.js module found for ${e}. Did you forget to extend the catalogue?`);return VA(t),vd}});function e2(s,e){const t="threlte-plugin-context";e&&Ai(t,{...ii(t),[s]:e})}function t2(s,e){const{scheduler:t}=Gi();return t.getStage(s)??t.createStage(s,e)}function n2(s,e,t){const i=CA();if(!i)throw new Error("No user context store found, did you invoke this function outside of your main <Canvas> component?");return e?(i.update(n=>{if(s in n)return n;const r=typeof e=="function"?e():e;return n[s]=r,n}),i.current[s]):ll(i,n=>n[s])}function C_(s,e){const{remember:t,clear:i}=aA();let n;const r=()=>new s;return{load:(l,c)=>{const h=async u=>{var d;if(n||(n=r()),"loadAsync"in n){const f=await n.loadAsync(u,c==null?void 0:c.onProgress);return((d=c==null?void 0:c.transform)==null?void 0:d.call(c,f))??f}else return new Promise((f,p)=>{n.load(u,v=>{var m;return f(((m=c==null?void 0:c.transform)==null?void 0:m.call(c,v))??v)},v=>{var m;return(m=c==null?void 0:c.onProgress)==null?void 0:m.call(c,v)},p)})};if(Array.isArray(l)){const u=l.map(f=>t(()=>h(f),[s,f]));return gd(Promise.all(u))}else if(typeof l=="string"){const u=t(()=>h(l),[s,l]);return gd(u)}else{const u=Object.values(l).map(f=>t(()=>h(f),[s,f]));return gd(Promise.all(u).then(f=>Object.fromEntries(Object.entries(l).map(([p],v)=>[p,f[v]]))))}},clear:l=>{Array.isArray(l)?l.forEach(c=>{i([s,c])}):typeof l=="string"?i([s,l]):Object.entries(l).forEach(([c,h])=>{i([s,c,h])})},loader:n}}const Ps=s=>({subscribe:s.subscribe,get current(){return s.current}});let ka=0;const fp=dn(!1),vu=dn(!1),pp=dn(void 0),mp=dn(0),gp=dn(0),R_=dn([]),vp=dn(0),{onStart:_d,onLoad:yd,onError:xd}=ho;ho.onStart=(s,e,t)=>{_d==null||_d(s,e,t),vu.set(!0),pp.set(s),mp.set(e),gp.set(t);const i=(e-ka)/(t-ka);vp.set(i),i===1&&fp.set(!0)};ho.onLoad=()=>{yd==null||yd(),vu.set(!1)};ho.onError=s=>{xd==null||xd(s),R_.update(e=>[...e,s])};ho.onProgress=(s,e,t)=>{e===t&&(ka=t),vu.set(!0),pp.set(s),mp.set(e),gp.set(t);const i=(e-ka)/(t-ka)||1;vp.set(i),i===1&&fp.set(!0)};Ps(vu),Ps(pp),Ps(mp),Ps(gp),Ps(R_),Ps(vp),Ps(fp);new L;new L;new L;new Cn;new st;new ls;new L;const i2=Symbol("THRELTE_SUSPENSE_CONTEXT_IDENTIFIER"),r2=()=>{const s=ii(i2),e=new Set,t=n=>(s&&(s.suspend(n),e.add(n)),n),i={suspended:ll((s==null?void 0:s.suspended)??xf(!1),n=>n)};return xr(()=>{if(s){for(const n of e)s.onComponentDestroy(n);e.clear()}}),Object.assign(t,i)};new L;new L;new L;new xe;var s2=Object.defineProperty,o2=(s,e,t)=>e in s?s2(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,jt=(s,e,t)=>o2(s,typeof e!="symbol"?e+"":e,t);const P_=(s,e)=>{const[t,i]=e.split("-");return Object.assign(s.style,{left:i==="left"?"0":i==="center"?"50%":"",right:i==="right"?"0":"",top:t==="top"?"0":t==="bottom"?"":"50%",bottom:t==="bottom"?"0":"",transform:`${i==="center"?"translateX(-50%)":""} ${t==="center"?"translateY(-50%)":""}`}),e},a2=({placement:s,size:e,offset:t,id:i,className:n})=>{const r=document.createElement("div"),{top:o,left:a,right:l,bottom:c}=t;return Object.assign(r.style,{id:i,position:"absolute",zIndex:"1000",height:`${e}px`,width:`${e}px`,margin:`${o}px ${l}px ${c}px ${a}px`,borderRadius:"100%"}),P_(r,s),i&&(r.id=i),n&&(r.className=n),r},l2=s=>{const e=typeof s=="string"?document.querySelector(s):s;if(!e)throw Error("Invalid DOM element");return e};function rf(s,e,t){return Math.max(e,Math.min(t,s))}const c2=[["x",0,3],["y",1,4],["z",2,5]],Sg=new L;function Mg({isSphere:s},e,t){s&&(Sg.set(0,0,1).applyQuaternion(t.quaternion),c2.forEach(([i,n,r])=>{const o=Sg[i];let a=e[n],l=a.userData.opacity;a.material.opacity=rf(o>=0?l:l/2,0,1),a=e[r],l=a.userData.opacity,a.material.opacity=rf(o>=0?l/2:l,0,1)}))}const h2=(s,e,t=10)=>Math.abs(s.clientX-e.x)<t&&Math.abs(s.clientY-e.y)<t,wg=new du,Eg=new xe,Tg=(s,e,t,i)=>{Eg.set((s.clientX-e.left)/e.width*2-1,-((s.clientY-e.top)/e.height)*2+1),wg.setFromCamera(Eg,t);const n=wg.intersectObjects(i,!1),r=n.length?n[0]:null;return!r||!r.object.visible?null:r},bd=1e-6,u2=2*Math.PI,I_=["x","y","z"],il=[...I_,"nx","ny","nz"],d2=["x","z","y","nx","nz","ny"],f2=["z","x","y","nz","nx","ny"],sf="Right",Fc="Top",of="Front",af="Left",kc="Bottom",lf="Back",p2=[sf,Fc,of,af,kc,lf].map(s=>s.toLocaleLowerCase()),D_=1.3,Ag=(s,e=!0)=>{const{material:t,userData:i}=s,{color:n,opacity:r}=e?i.hover:i;t.color.set(n),t.opacity=r},Is=s=>JSON.parse(JSON.stringify(s)),m2=s=>{const e=s.type||"sphere",t=e==="sphere",i=s.resolution||t?64:128,n=Lt.DEFAULT_UP,r=n.z===1,o=n.x===1,{container:a}=s;s.container=void 0,s=JSON.parse(JSON.stringify(s)),s.container=a;const l=r?d2:o?f2:il;p2.forEach((d,f)=>{s[d]&&(s[l[f]]=s[d])});const c={enabled:!0,color:16777215,opacity:1,scale:.7,labelColor:2236962,line:!1,border:{size:0,color:14540253},hover:{color:t?16777215:9688043,labelColor:2236962,opacity:1,scale:.7,border:{size:0,color:14540253}}},h={line:!1,scale:t?.45:.7,hover:{scale:t?.5:.7}},u={type:e,container:document.body,size:128,placement:"top-right",resolution:i,lineWidth:4,radius:t?1:.2,smoothness:18,animated:!0,speed:1,background:{enabled:!0,color:t?16777215:14739180,opacity:t?0:1,hover:{color:t?16777215:14739180,opacity:t?.2:1}},font:{family:"sans-serif",weight:900},offset:{top:10,left:10,bottom:10,right:10},corners:{enabled:!t,color:t?15915362:16777215,opacity:1,scale:t?.15:.2,radius:1,smoothness:18,hover:{color:t?16777215:9688043,opacity:1,scale:t?.2:.225}},edges:{enabled:!t,color:t?15915362:16777215,opacity:t?1:0,radius:t?1:.125,smoothness:18,scale:t?.15:1,hover:{color:t?16777215:9688043,opacity:1,scale:t?.2:1}},x:{...Is(c),...t?{label:"X",color:16725587,line:!0}:{label:o?Fc:sf}},y:{...Is(c),...t?{label:"Y",color:9100032,line:!0}:{label:r||o?of:Fc}},z:{...Is(c),...t?{label:"Z",color:2920447,line:!0}:{label:r?Fc:o?sf:of}},nx:{...Is(h),label:t?"":o?kc:af},ny:{...Is(h),label:t?"":r||o?lf:kc},nz:{...Is(h),label:t?"":r?kc:o?af:lf}};return cf(s,u),I_.forEach(d=>cf(s[`n${d}`],Is(s[d]))),{...s,isSphere:t}};function cf(s,...e){if(s instanceof HTMLElement||typeof s!="object"||s===null)return s;for(const t of e)for(const i in t)i!=="container"&&i in t&&(s[i]===void 0?s[i]=t[i]:typeof t[i]=="object"&&!Array.isArray(t[i])&&(s[i]=cf(s[i]||{},t[i])));return s}const g2=(s,e=2)=>{const t=new ze,i=e*2,{isSphere:n,resolution:r,radius:o,font:a,corners:l,edges:c}=s,h=il.map(S=>({...s[S],radius:o}));n&&l.enabled&&h.push(l),n&&c.enabled&&h.push(c);const u=document.createElement("canvas"),d=u.getContext("2d");u.width=r*2+i*2,u.height=r*h.length+i*h.length;const[f,p]=E(h,r,a);h.forEach(({radius:S,label:T,color:w,labelColor:b,border:D,hover:{color:I,labelColor:F,border:V}},J)=>{const O=r*J+J*i+e;_(e,O,e,r,S,T,D,w,b),_(r+e*3,O,e,r,S,T,V??D,I??w,F??b)});const v=h.length,m=e/(r*2),g=e/(r*6),y=1/v,x=new Dv(u);return x.repeat.set(.5-2*m,y-2*g),x.offset.set(m,1-g),Object.assign(x,{colorSpace:sn,wrapS:nr,wrapT:nr,userData:{offsetX:m,offsetY:g,cellHeight:y}}),x;function _(S,T,w,b,D,I,F,V,J){if(D=D*(b/2),V!=null&&V!==""&&(O(),d.fillStyle=t.set(V).getStyle(),d.fill()),F&&F.size){const ee=F.size*b/2;S+=ee,T+=ee,b-=F.size*b,D=Math.max(0,D-ee),O(),d.strokeStyle=t.set(F.color).getStyle(),d.lineWidth=F.size*b,d.stroke()}I&&M(d,S+b/2,T+(b+w)/2,I,t.set(J).getStyle());function O(){d.beginPath(),d.moveTo(S+D,T),d.lineTo(S+b-D,T),d.arcTo(S+b,T,S+b,T+D,D),d.lineTo(S+b,T+b-D),d.arcTo(S+b,T+b,S+b-D,T+b,D),d.lineTo(S+D,T+b),d.arcTo(S,T+b,S,T+b-D,D),d.lineTo(S,T+D),d.arcTo(S,T,S+D,T,D),d.closePath()}}function E(S,T,w){const b=[...S].sort(($,U)=>{var Z,K;return(((Z=$.label)==null?void 0:Z.length)||0)-(((K=U.label)==null?void 0:K.length)||0)}).pop().label,{family:D,weight:I}=w,F=n?Math.sqrt(Math.pow(T*.7,2)/2):T;let V=F,J=0,O=0;do{d.font=`${I} ${V}px ${D}`;const $=d.measureText(b);J=$.width,O=$.fontBoundingBoxDescent,V--}while(J>F&&V>0);const ee=F/O,Y=Math.min(F/J,ee),j=Math.floor(V*Y);return[`${I} ${j}px ${D}`,ee]}function M(S,T,w,b,D){S.font=f,S.textAlign="center",S.textBaseline="middle",S.fillStyle=D,S.fillText(b,T,w+(n?p:0))}},v2=(s,e)=>s.offset.x=(e?.5:0)+s.userData.offsetX,_p=(s,e)=>{const{offset:t,userData:{offsetY:i,cellHeight:n}}=s;t.y=1-(e+1)*n+i};function yp(s,e,t=2,i=2){const n=t/2-s,r=i/2-s,o=s/t,a=(t-s)/t,l=s/i,c=(i-s)/i,h=[n,r,0,-n,r,0,-n,-r,0,n,-r,0],u=[a,c,o,c,o,l,a,l],d=[3*(e+1)+3,3*(e+1)+4,e+4,e+5,2*(e+1)+4,2,1,2*(e+1)+3,3,4*(e+1)+3,4,0],f=[0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11].map(M=>d[M]);let p,v,m,g,y,x,_,E;for(let M=0;M<4;M++){g=M<1||M>2?n:-n,y=M<2?r:-r,x=M<1||M>2?a:o,_=M<2?c:l;for(let S=0;S<=e;S++)p=Math.PI/2*(M+S/e),v=Math.cos(p),m=Math.sin(p),h.push(g+s*v,y+s*m,0),u.push(x+o*v,_+l*m),S<e&&(E=(e+1)*M+S+4,f.push(M,E,E+1))}return new yt().setIndex(new Ct(new Uint32Array(f),1)).setAttribute("position",new Ct(new Float32Array(h),3)).setAttribute("uv",new Ct(new Float32Array(u),2))}const _2=(s,e)=>{const t=new L,{isSphere:i,radius:n,smoothness:r}=s,o=yp(n,r);return il.map((a,l)=>{const c=l<3,h=il[l],u=l?e.clone():e;_p(u,l);const{enabled:d,scale:f,opacity:p,hover:v}=s[h],m={map:u,opacity:p,transparent:!0},g=i?new vl(new Zo(m)):new ke(o,new Bn(m)),y=c?h:h[1];return g.position[y]=(c?1:-1)*(i?D_:1),i||g.lookAt(t.copy(g.position).multiplyScalar(1.7)),g.scale.setScalar(f),g.renderOrder=1,g.visible=d,g.userData={scale:f,opacity:p,hover:v},g})},y2=(s,e)=>{const{isSphere:t,corners:i}=s;if(!i.enabled)return[];const{color:n,opacity:r,scale:o,radius:a,smoothness:l,hover:c}=i,h=t?null:yp(a,l),u={transparent:!0,opacity:r},d=[1,1,1,-1,1,1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,-1,-1,-1,-1,-1].map(p=>p*.85),f=new L;return Array(d.length/3).fill(0).map((p,v)=>{if(t){const y=e.clone();_p(y,6),u.map=y}else u.color=n;const m=t?new vl(new Zo(u)):new ke(h,new Bn(u)),g=v*3;return m.position.set(d[g],d[g+1],d[g+2]),t&&m.position.normalize().multiplyScalar(1.7),m.scale.setScalar(o),m.lookAt(f.copy(m.position).multiplyScalar(2)),m.renderOrder=1,m.userData={color:n,opacity:r,scale:o,hover:c},m})},x2=(s,e,t)=>{const{isSphere:i,edges:n}=s;if(!n.enabled)return[];const{color:r,opacity:o,scale:a,hover:l,radius:c,smoothness:h}=n,u=i?null:yp(c,h,1.2,.25),d={transparent:!0,opacity:o},f=[0,1,1,0,-1,1,1,0,1,-1,0,1,0,1,-1,0,-1,-1,1,0,-1,-1,0,-1,1,1,0,1,-1,0,-1,1,0,-1,-1,0].map(m=>m*.925),p=new L,v=new L(0,1,0);return Array(f.length/3).fill(0).map((m,g)=>{if(i){const _=e.clone();_p(_,t),d.map=_}else d.color=r;const y=i?new vl(new Zo(d)):new ke(u,new Bn(d)),x=g*3;return y.position.set(f[x],f[x+1],f[x+2]),i&&y.position.normalize().multiplyScalar(1.7),y.scale.setScalar(a),y.up.copy(v),y.lookAt(p.copy(y.position).multiplyScalar(2)),!i&&!y.position.y&&(y.rotation.z=Math.PI/2),y.renderOrder=1,y.userData={color:r,opacity:o,scale:a,hover:l},y})};function b2(s,e=!1){const t=s[0].index!==null,i=new Set(Object.keys(s[0].attributes)),n=new Set(Object.keys(s[0].morphAttributes)),r={},o={},a=s[0].morphTargetsRelative,l=new yt;let c=0;for(let h=0;h<s.length;++h){const u=s[h];let d=0;if(t!==(u.index!==null))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(const f in u.attributes){if(!i.has(f))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+'. All geometries must have compatible attributes; make sure "'+f+'" attribute exists among all geometries, or in none of them.'),null;r[f]===void 0&&(r[f]=[]),r[f].push(u.attributes[f]),d++}if(d!==i.size)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". Make sure all geometries have the same number of attributes."),null;if(a!==u.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(const f in u.morphAttributes){if(!n.has(f))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+".  .morphAttributes must be consistent throughout all geometries."),null;o[f]===void 0&&(o[f]=[]),o[f].push(u.morphAttributes[f])}if(e){let f;if(t)f=u.index.count;else if(u.attributes.position!==void 0)f=u.attributes.position.count;else return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". The geometry must have either an index or a position attribute"),null;l.addGroup(c,f,h),c+=f}}if(t){let h=0;const u=[];for(let d=0;d<s.length;++d){const f=s[d].index;for(let p=0;p<f.count;++p)u.push(f.getX(p)+h);h+=s[d].attributes.position.count}l.setIndex(u)}for(const h in r){const u=Cg(r[h]);if(!u)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+h+" attribute."),null;l.setAttribute(h,u)}for(const h in o){const u=o[h][0].length;if(u===0)break;l.morphAttributes=l.morphAttributes||{},l.morphAttributes[h]=[];for(let d=0;d<u;++d){const f=[];for(let v=0;v<o[h].length;++v)f.push(o[h][v][d]);const p=Cg(f);if(!p)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+h+" morphAttribute."),null;l.morphAttributes[h].push(p)}}return l}function Cg(s){let e,t,i,n=-1,r=0;for(let c=0;c<s.length;++c){const h=s[c];if(e===void 0&&(e=h.array.constructor),e!==h.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(t===void 0&&(t=h.itemSize),t!==h.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(i===void 0&&(i=h.normalized),i!==h.normalized)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;if(n===-1&&(n=h.gpuType),n!==h.gpuType)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes."),null;r+=h.count*t}const o=new e(r),a=new Ct(o,t,i);let l=0;for(let c=0;c<s.length;++c){const h=s[c];if(h.isInterleavedBufferAttribute){const u=l/t;for(let d=0,f=h.count;d<f;d++)for(let p=0;p<t;p++){const v=h.getComponent(d,p);a.setComponent(d+u,p,v)}}else o.set(h.array,l);l+=h.count*t}return n!==void 0&&(a.gpuType=n),a}const S2=(s,e)=>{const{isSphere:t,background:{enabled:i,color:n,opacity:r,hover:o}}=e;let a;const l=new Bn({color:n,side:ni,opacity:r,transparent:!0,depthWrite:!1});if(!i)return null;if(t)a=new ke(new ao(1.8,64,64),l);else{let c;s.forEach(h=>{const u=h.scale.x;h.scale.setScalar(.9),h.updateMatrix();const d=h.geometry.clone();d.applyMatrix4(h.matrix),c=c?b2([c,d]):d,h.scale.setScalar(u)}),a=new ke(c,l)}return a.userData={color:n,opacity:r,hover:o},a},Rg=new Mn,vc=new L;let L_=class extends uu{constructor(){super(),this.isLineSegmentsGeometry=!0,this.type="LineSegmentsGeometry";const e=[-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],t=[-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],i=[0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5];this.setIndex(i),this.setAttribute("position",new qe(e,3)),this.setAttribute("uv",new qe(t,2))}applyMatrix4(e){const t=this.attributes.instanceStart,i=this.attributes.instanceEnd;return t!==void 0&&(t.applyMatrix4(e),i.applyMatrix4(e),t.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}setPositions(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const i=new Ph(t,6,1);return this.setAttribute("instanceStart",new Fi(i,3,0)),this.setAttribute("instanceEnd",new Fi(i,3,3)),this.instanceCount=this.attributes.instanceStart.count,this.computeBoundingBox(),this.computeBoundingSphere(),this}setColors(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const i=new Ph(t,6,1);return this.setAttribute("instanceColorStart",new Fi(i,3,0)),this.setAttribute("instanceColorEnd",new Fi(i,3,3)),this}fromWireframeGeometry(e){return this.setPositions(e.attributes.position.array),this}fromEdgesGeometry(e){return this.setPositions(e.attributes.position.array),this}fromMesh(e){return this.fromWireframeGeometry(new Yf(e.geometry)),this}fromLineSegments(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Mn);const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;e!==void 0&&t!==void 0&&(this.boundingBox.setFromBufferAttribute(e),Rg.setFromBufferAttribute(t),this.boundingBox.union(Rg))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Cn),this.boundingBox===null&&this.computeBoundingBox();const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;if(e!==void 0&&t!==void 0){const i=this.boundingSphere.center;this.boundingBox.getCenter(i);let n=0;for(let r=0,o=e.count;r<o;r++)vc.fromBufferAttribute(e,r),n=Math.max(n,i.distanceToSquared(vc)),vc.fromBufferAttribute(t,r),n=Math.max(n,i.distanceToSquared(vc));this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}toJSON(){}applyMatrix(e){return console.warn("THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4()."),this.applyMatrix4(e)}};Je.line={worldUnits:{value:1},linewidth:{value:1},resolution:{value:new xe(1,1)},dashOffset:{value:0},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}};li.line={uniforms:pl.merge([Je.common,Je.fog,Je.line]),vertexShader:`
		#include <common>
		#include <color_pars_vertex>
		#include <fog_pars_vertex>
		#include <logdepthbuf_pars_vertex>
		#include <clipping_planes_pars_vertex>

		uniform float linewidth;
		uniform vec2 resolution;

		attribute vec3 instanceStart;
		attribute vec3 instanceEnd;

		attribute vec3 instanceColorStart;
		attribute vec3 instanceColorEnd;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#ifdef USE_DASH

			uniform float dashScale;
			attribute float instanceDistanceStart;
			attribute float instanceDistanceEnd;
			varying float vLineDistance;

		#endif

		void trimSegment( const in vec4 start, inout vec4 end ) {

			// trim end segment so it terminates between the camera plane and the near plane

			// conservative estimate of the near plane
			float a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column
			float b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column
			float nearEstimate = - 0.5 * b / a;

			float alpha = ( nearEstimate - start.z ) / ( end.z - start.z );

			end.xyz = mix( start.xyz, end.xyz, alpha );

		}

		void main() {

			#ifdef USE_COLOR

				vColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;

			#endif

			#ifdef USE_DASH

				vLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;
				vUv = uv;

			#endif

			float aspect = resolution.x / resolution.y;

			// camera space
			vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );
			vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );

			#ifdef WORLD_UNITS

				worldStart = start.xyz;
				worldEnd = end.xyz;

			#else

				vUv = uv;

			#endif

			// special case for perspective projection, and segments that terminate either in, or behind, the camera plane
			// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space
			// but we need to perform ndc-space calculations in the shader, so we must address this issue directly
			// perhaps there is a more elegant solution -- WestLangley

			bool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column

			if ( perspective ) {

				if ( start.z < 0.0 && end.z >= 0.0 ) {

					trimSegment( start, end );

				} else if ( end.z < 0.0 && start.z >= 0.0 ) {

					trimSegment( end, start );

				}

			}

			// clip space
			vec4 clipStart = projectionMatrix * start;
			vec4 clipEnd = projectionMatrix * end;

			// ndc space
			vec3 ndcStart = clipStart.xyz / clipStart.w;
			vec3 ndcEnd = clipEnd.xyz / clipEnd.w;

			// direction
			vec2 dir = ndcEnd.xy - ndcStart.xy;

			// account for clip-space aspect ratio
			dir.x *= aspect;
			dir = normalize( dir );

			#ifdef WORLD_UNITS

				vec3 worldDir = normalize( end.xyz - start.xyz );
				vec3 tmpFwd = normalize( mix( start.xyz, end.xyz, 0.5 ) );
				vec3 worldUp = normalize( cross( worldDir, tmpFwd ) );
				vec3 worldFwd = cross( worldDir, worldUp );
				worldPos = position.y < 0.5 ? start: end;

				// height offset
				float hw = linewidth * 0.5;
				worldPos.xyz += position.x < 0.0 ? hw * worldUp : - hw * worldUp;

				// don't extend the line if we're rendering dashes because we
				// won't be rendering the endcaps
				#ifndef USE_DASH

					// cap extension
					worldPos.xyz += position.y < 0.5 ? - hw * worldDir : hw * worldDir;

					// add width to the box
					worldPos.xyz += worldFwd * hw;

					// endcaps
					if ( position.y > 1.0 || position.y < 0.0 ) {

						worldPos.xyz -= worldFwd * 2.0 * hw;

					}

				#endif

				// project the worldpos
				vec4 clip = projectionMatrix * worldPos;

				// shift the depth of the projected points so the line
				// segments overlap neatly
				vec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;
				clip.z = clipPose.z * clip.w;

			#else

				vec2 offset = vec2( dir.y, - dir.x );
				// undo aspect ratio adjustment
				dir.x /= aspect;
				offset.x /= aspect;

				// sign flip
				if ( position.x < 0.0 ) offset *= - 1.0;

				// endcaps
				if ( position.y < 0.0 ) {

					offset += - dir;

				} else if ( position.y > 1.0 ) {

					offset += dir;

				}

				// adjust for linewidth
				offset *= linewidth;

				// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...
				offset /= resolution.y;

				// select end
				vec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;

				// back to clip space
				offset *= clip.w;

				clip.xy += offset;

			#endif

			gl_Position = clip;

			vec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation

			#include <logdepthbuf_vertex>
			#include <clipping_planes_vertex>
			#include <fog_vertex>

		}
		`,fragmentShader:`
		uniform vec3 diffuse;
		uniform float opacity;
		uniform float linewidth;

		#ifdef USE_DASH

			uniform float dashOffset;
			uniform float dashSize;
			uniform float gapSize;

		#endif

		varying float vLineDistance;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#include <common>
		#include <color_pars_fragment>
		#include <fog_pars_fragment>
		#include <logdepthbuf_pars_fragment>
		#include <clipping_planes_pars_fragment>

		vec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {

			float mua;
			float mub;

			vec3 p13 = p1 - p3;
			vec3 p43 = p4 - p3;

			vec3 p21 = p2 - p1;

			float d1343 = dot( p13, p43 );
			float d4321 = dot( p43, p21 );
			float d1321 = dot( p13, p21 );
			float d4343 = dot( p43, p43 );
			float d2121 = dot( p21, p21 );

			float denom = d2121 * d4343 - d4321 * d4321;

			float numer = d1343 * d4321 - d1321 * d4343;

			mua = numer / denom;
			mua = clamp( mua, 0.0, 1.0 );
			mub = ( d1343 + d4321 * ( mua ) ) / d4343;
			mub = clamp( mub, 0.0, 1.0 );

			return vec2( mua, mub );

		}

		void main() {

			#include <clipping_planes_fragment>

			#ifdef USE_DASH

				if ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps

				if ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX

			#endif

			float alpha = opacity;

			#ifdef WORLD_UNITS

				// Find the closest points on the view ray and the line segment
				vec3 rayEnd = normalize( worldPos.xyz ) * 1e5;
				vec3 lineDir = worldEnd - worldStart;
				vec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );

				vec3 p1 = worldStart + lineDir * params.x;
				vec3 p2 = rayEnd * params.y;
				vec3 delta = p1 - p2;
				float len = length( delta );
				float norm = len / linewidth;

				#ifndef USE_DASH

					#ifdef USE_ALPHA_TO_COVERAGE

						float dnorm = fwidth( norm );
						alpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );

					#else

						if ( norm > 0.5 ) {

							discard;

						}

					#endif

				#endif

			#else

				#ifdef USE_ALPHA_TO_COVERAGE

					// artifacts appear on some hardware if a derivative is taken within a conditional
					float a = vUv.x;
					float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
					float len2 = a * a + b * b;
					float dlen = fwidth( len2 );

					if ( abs( vUv.y ) > 1.0 ) {

						alpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );

					}

				#else

					if ( abs( vUv.y ) > 1.0 ) {

						float a = vUv.x;
						float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
						float len2 = a * a + b * b;

						if ( len2 > 1.0 ) discard;

					}

				#endif

			#endif

			vec4 diffuseColor = vec4( diffuse, alpha );

			#include <logdepthbuf_fragment>
			#include <color_fragment>

			gl_FragColor = vec4( diffuseColor.rgb, alpha );

			#include <tonemapping_fragment>
			#include <colorspace_fragment>
			#include <fog_fragment>
			#include <premultiplied_alpha_fragment>

		}
		`};let xp=class extends Ti{constructor(e){super({type:"LineMaterial",uniforms:pl.clone(li.line.uniforms),vertexShader:li.line.vertexShader,fragmentShader:li.line.fragmentShader,clipping:!0}),this.isLineMaterial=!0,this.setValues(e)}get color(){return this.uniforms.diffuse.value}set color(e){this.uniforms.diffuse.value=e}get worldUnits(){return"WORLD_UNITS"in this.defines}set worldUnits(e){e===!0?this.defines.WORLD_UNITS="":delete this.defines.WORLD_UNITS}get linewidth(){return this.uniforms.linewidth.value}set linewidth(e){this.uniforms.linewidth&&(this.uniforms.linewidth.value=e)}get dashed(){return"USE_DASH"in this.defines}set dashed(e){e===!0!==this.dashed&&(this.needsUpdate=!0),e===!0?this.defines.USE_DASH="":delete this.defines.USE_DASH}get dashScale(){return this.uniforms.dashScale.value}set dashScale(e){this.uniforms.dashScale.value=e}get dashSize(){return this.uniforms.dashSize.value}set dashSize(e){this.uniforms.dashSize.value=e}get dashOffset(){return this.uniforms.dashOffset.value}set dashOffset(e){this.uniforms.dashOffset.value=e}get gapSize(){return this.uniforms.gapSize.value}set gapSize(e){this.uniforms.gapSize.value=e}get opacity(){return this.uniforms.opacity.value}set opacity(e){this.uniforms&&(this.uniforms.opacity.value=e)}get resolution(){return this.uniforms.resolution.value}set resolution(e){this.uniforms.resolution.value.copy(e)}get alphaToCoverage(){return"USE_ALPHA_TO_COVERAGE"in this.defines}set alphaToCoverage(e){this.defines&&(e===!0!==this.alphaToCoverage&&(this.needsUpdate=!0),e===!0?this.defines.USE_ALPHA_TO_COVERAGE="":delete this.defines.USE_ALPHA_TO_COVERAGE)}};const Sd=new Pt,Pg=new L,Ig=new L,Vn=new Pt,Hn=new Pt,ar=new Pt,Md=new L,wd=new st,Xn=new d_,Dg=new L,_c=new Mn,yc=new Cn,lr=new Pt;let fr,Ks;function Lg(s,e,t){return lr.set(0,0,-e,1).applyMatrix4(s.projectionMatrix),lr.multiplyScalar(1/lr.w),lr.x=Ks/t.width,lr.y=Ks/t.height,lr.applyMatrix4(s.projectionMatrixInverse),lr.multiplyScalar(1/lr.w),Math.abs(Math.max(lr.x,lr.y))}function M2(s,e){const t=s.matrixWorld,i=s.geometry,n=i.attributes.instanceStart,r=i.attributes.instanceEnd,o=Math.min(i.instanceCount,n.count);for(let a=0,l=o;a<l;a++){Xn.start.fromBufferAttribute(n,a),Xn.end.fromBufferAttribute(r,a),Xn.applyMatrix4(t);const c=new L,h=new L;fr.distanceSqToSegment(Xn.start,Xn.end,h,c),h.distanceTo(c)<Ks*.5&&e.push({point:h,pointOnLine:c,distance:fr.origin.distanceTo(h),object:s,face:null,faceIndex:a,uv:null,uv1:null})}}function w2(s,e,t){const i=e.projectionMatrix,n=s.material.resolution,r=s.matrixWorld,o=s.geometry,a=o.attributes.instanceStart,l=o.attributes.instanceEnd,c=Math.min(o.instanceCount,a.count),h=-e.near;fr.at(1,ar),ar.w=1,ar.applyMatrix4(e.matrixWorldInverse),ar.applyMatrix4(i),ar.multiplyScalar(1/ar.w),ar.x*=n.x/2,ar.y*=n.y/2,ar.z=0,Md.copy(ar),wd.multiplyMatrices(e.matrixWorldInverse,r);for(let u=0,d=c;u<d;u++){if(Vn.fromBufferAttribute(a,u),Hn.fromBufferAttribute(l,u),Vn.w=1,Hn.w=1,Vn.applyMatrix4(wd),Hn.applyMatrix4(wd),Vn.z>h&&Hn.z>h)continue;if(Vn.z>h){const g=Vn.z-Hn.z,y=(Vn.z-h)/g;Vn.lerp(Hn,y)}else if(Hn.z>h){const g=Hn.z-Vn.z,y=(Hn.z-h)/g;Hn.lerp(Vn,y)}Vn.applyMatrix4(i),Hn.applyMatrix4(i),Vn.multiplyScalar(1/Vn.w),Hn.multiplyScalar(1/Hn.w),Vn.x*=n.x/2,Vn.y*=n.y/2,Hn.x*=n.x/2,Hn.y*=n.y/2,Xn.start.copy(Vn),Xn.start.z=0,Xn.end.copy(Hn),Xn.end.z=0;const f=Xn.closestPointToPointParameter(Md,!0);Xn.at(f,Dg);const p=dr.lerp(Vn.z,Hn.z,f),v=p>=-1&&p<=1,m=Md.distanceTo(Dg)<Ks*.5;if(v&&m){Xn.start.fromBufferAttribute(a,u),Xn.end.fromBufferAttribute(l,u),Xn.start.applyMatrix4(r),Xn.end.applyMatrix4(r);const g=new L,y=new L;fr.distanceSqToSegment(Xn.start,Xn.end,y,g),t.push({point:y,pointOnLine:g,distance:fr.origin.distanceTo(y),object:s,face:null,faceIndex:u,uv:null,uv1:null})}}}class E2 extends ke{constructor(e=new L_,t=new xp({color:Math.random()*16777215})){super(e,t),this.isLineSegments2=!0,this.type="LineSegments2"}computeLineDistances(){const e=this.geometry,t=e.attributes.instanceStart,i=e.attributes.instanceEnd,n=new Float32Array(2*t.count);for(let o=0,a=0,l=t.count;o<l;o++,a+=2)Pg.fromBufferAttribute(t,o),Ig.fromBufferAttribute(i,o),n[a]=a===0?0:n[a-1],n[a+1]=n[a]+Pg.distanceTo(Ig);const r=new Ph(n,2,1);return e.setAttribute("instanceDistanceStart",new Fi(r,1,0)),e.setAttribute("instanceDistanceEnd",new Fi(r,1,1)),this}raycast(e,t){const i=this.material.worldUnits,n=e.camera;n===null&&!i&&console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.');const r=e.params.Line2!==void 0&&e.params.Line2.threshold||0;fr=e.ray;const o=this.matrixWorld,a=this.geometry,l=this.material;Ks=l.linewidth+r,a.boundingSphere===null&&a.computeBoundingSphere(),yc.copy(a.boundingSphere).applyMatrix4(o);let c;if(i)c=Ks*.5;else{const u=Math.max(n.near,yc.distanceToPoint(fr.origin));c=Lg(n,u,l.resolution)}if(yc.radius+=c,fr.intersectsSphere(yc)===!1)return;a.boundingBox===null&&a.computeBoundingBox(),_c.copy(a.boundingBox).applyMatrix4(o);let h;if(i)h=Ks*.5;else{const u=Math.max(n.near,_c.distanceToPoint(fr.origin));h=Lg(n,u,l.resolution)}_c.expandByScalar(h),fr.intersectsBox(_c)!==!1&&(i?M2(this,t):w2(this,n,t))}onBeforeRender(e){const t=this.material.uniforms;t&&t.resolution&&(e.getViewport(Sd),this.material.uniforms.resolution.value.set(Sd.z,Sd.w))}}class U_ extends L_{constructor(){super(),this.isLineGeometry=!0,this.type="LineGeometry"}setPositions(e){const t=e.length-3,i=new Float32Array(2*t);for(let n=0;n<t;n+=3)i[2*n]=e[n],i[2*n+1]=e[n+1],i[2*n+2]=e[n+2],i[2*n+3]=e[n+3],i[2*n+4]=e[n+4],i[2*n+5]=e[n+5];return super.setPositions(i),this}setColors(e){const t=e.length-3,i=new Float32Array(2*t);for(let n=0;n<t;n+=3)i[2*n]=e[n],i[2*n+1]=e[n+1],i[2*n+2]=e[n+2],i[2*n+3]=e[n+3],i[2*n+4]=e[n+4],i[2*n+5]=e[n+5];return super.setColors(i),this}setFromPoints(e){const t=e.length-1,i=new Float32Array(6*t);for(let n=0;n<t;n++)i[6*n]=e[n].x,i[6*n+1]=e[n].y,i[6*n+2]=e[n].z||0,i[6*n+3]=e[n+1].x,i[6*n+4]=e[n+1].y,i[6*n+5]=e[n+1].z||0;return super.setPositions(i),this}fromLine(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}}class T2 extends E2{constructor(e=new U_,t=new xp({color:Math.random()*16777215})){super(e,t),this.isLine2=!0,this.type="Line2"}}const A2=s=>{const e=new ze,t=[],i=[],{isSphere:n}=s;if(il.forEach((a,l)=>{const{enabled:c,line:h,scale:u,color:d}=s[a];if(!c||!h)return;const f=l<3?1:-1,p=(n?D_-u/2:.975)*f;t.push(a.includes("x")?p:0,a.includes("y")?p:0,a.includes("z")?p:0,0,0,0);const v=e.set(d).toArray();i.push(...v,...v)}),!t.length)return null;const r=new U_().setPositions(t).setColors(i),o=new xp({linewidth:s.lineWidth,vertexColors:!0,resolution:new xe(window.innerWidth,window.innerHeight)});return new T2(r,o).computeLineDistances()},C2=s=>{const{corners:e,edges:t}=s,i=[],n=g2(s),r=_2(s,n);i.push(...r),e.enabled&&i.push(...y2(s,n)),t.enabled&&i.push(...x2(s,n,e.enabled?7:6));const o=S2(r,s),a=A2(s);return[i,o,a]},va=(s,e=!0)=>{const{material:t,userData:i}=s,{opacity:n,color:r,scale:o}=e?i.hover:i;s.scale.setScalar(o),t.opacity=n,t.map?v2(t.map,e):t.color.set(r)},Do=new st,Ug=new Ih,R2=new xe,Ds=new L,Ng=new Pt;class Og extends Lt{constructor(e,t,i={}){super(),jt(this,"enabled",!0),jt(this,"camera"),jt(this,"renderer"),jt(this,"options"),jt(this,"target",new L),jt(this,"animated",!0),jt(this,"speed",1),jt(this,"animating",!1),jt(this,"_options"),jt(this,"_intersections"),jt(this,"_background",null),jt(this,"_viewport",[0,0,0,0]),jt(this,"_originalViewport",[0,0,0,0]),jt(this,"_originalScissor",[0,0,0,0]),jt(this,"_scene"),jt(this,"_camera"),jt(this,"_container"),jt(this,"_domElement"),jt(this,"_domRect"),jt(this,"_dragging",!1),jt(this,"_distance",0),jt(this,"_clock",new sp),jt(this,"_targetQuaternion",new Ht),jt(this,"_quaternionStart",new Ht),jt(this,"_quaternionEnd",new Ht),jt(this,"_pointerStart",new xe),jt(this,"_focus",null),jt(this,"_placement"),jt(this,"_controls"),jt(this,"_controlsListeners"),this.camera=e,this.renderer=t,this._scene=new gl().add(this),this.set(i)}get placement(){return this._placement}set placement(e){this._placement=P_(this._domElement,e),this.domUpdate()}set(e={}){this.dispose(),this.options=e,this._options=m2(e),this._camera=this._options.isSphere?new us(-1.8,1.8,1.8,-1.8,5,10):new bn(26,1,5,10),this._camera.position.set(0,0,7);const[t,i,n]=C2(this._options);i&&this.add(i),n&&this.add(n),this.add(...t),this._background=i,this._intersections=t;const{container:r,animated:o,speed:a}=this._options;return this.animated=o,this.speed=a,this._container=r?l2(r):document.body,this._domElement=a2(this._options),this._domElement.onpointerdown=l=>this._onPointerDown(l),this._domElement.onpointermove=l=>this._onPointerMove(l),this._domElement.onpointerleave=()=>this._onPointerLeave(),this._container.appendChild(this._domElement),this._controls&&this.attachControls(this._controls),this.update(),this._updateOrientation(!0),this}render(){this.animating&&this._animate();const{renderer:e,_viewport:t}=this,i=e.getScissorTest(),n=e.autoClear;return e.autoClear=!1,e.setViewport(...t),i&&e.setScissor(...t),e.clear(!1,!0,!1),e.render(this._scene,this._camera),e.setViewport(...this._originalViewport),i&&e.setScissor(...this._originalScissor),e.autoClear=n,this}domUpdate(){this._domRect=this._domElement.getBoundingClientRect();const e=this.renderer,t=this._domRect,i=e.domElement.getBoundingClientRect();return this._viewport.splice(0,4,t.left-i.left,e.domElement.clientHeight-(t.top-i.top+t.height),t.width,t.height),e.getViewport(Ng).toArray(this._originalViewport),e.getScissorTest()&&e.getScissor(Ng).toArray(this._originalScissor),this}cameraUpdate(){return this._updateOrientation(),this}update(e=!0){return e&&this._controls&&this._controls.update(),this.domUpdate().cameraUpdate()}attachControls(e){return this.detachControls(),this.target=e.target,this._controlsListeners={start:()=>e.enabled=!1,end:()=>e.enabled=!0,change:()=>this.update(!1)},this.addEventListener("start",this._controlsListeners.start),this.addEventListener("end",this._controlsListeners.end),e.addEventListener("change",this._controlsListeners.change),this._controls=e,this}detachControls(){if(!(!this._controlsListeners||!this._controls))return this.target=new L().copy(this._controls.target),this.removeEventListener("start",this._controlsListeners.start),this.removeEventListener("end",this._controlsListeners.end),this._controls.removeEventListener("change",this._controlsListeners.change),this._controlsListeners=void 0,this._controls=void 0,this}dispose(){var e;this.detachControls(),this.children.forEach(t=>{var i,n,r,o;this.remove(t);const a=t;(i=a.material)==null||i.dispose(),(r=(n=a.material)==null?void 0:n.map)==null||r.dispose(),(o=a.geometry)==null||o.dispose()}),(e=this._domElement)==null||e.remove()}_updateOrientation(e=!0){e&&(this.quaternion.copy(this.camera.quaternion).invert(),this.updateMatrixWorld()),Mg(this._options,this._intersections,this.camera)}_animate(){const{position:e,quaternion:t}=this.camera;if(e.set(0,0,1),!this.animated){e.applyQuaternion(this._quaternionEnd).multiplyScalar(this._distance).add(this.target),t.copy(this._targetQuaternion),this._updateOrientation(),this.animating=!1,this.dispatchEvent({type:"change"}),this.dispatchEvent({type:"end"});return}this._controls&&(this._controls.enabled=!1);const i=this._clock.getDelta()*u2*this.speed;this._quaternionStart.rotateTowards(this._quaternionEnd,i),e.applyQuaternion(this._quaternionStart).multiplyScalar(this._distance).add(this.target),t.rotateTowards(this._targetQuaternion,i),this._updateOrientation(),requestAnimationFrame(()=>this.dispatchEvent({type:"change"})),this._quaternionStart.angleTo(this._quaternionEnd)<bd&&(this._controls&&(this._controls.enabled=!0),this.animating=!1,this.dispatchEvent({type:"end"}))}_setOrientation(e){const t=this.camera,i=this.target;Ds.copy(e).multiplyScalar(this._distance),Do.setPosition(Ds).lookAt(Ds,this.position,this.up),this._targetQuaternion.setFromRotationMatrix(Do),Ds.add(i),Do.lookAt(Ds,i,this.up),this._quaternionEnd.setFromRotationMatrix(Do),Do.setPosition(t.position).lookAt(t.position,i,this.up),this._quaternionStart.setFromRotationMatrix(Do),this.animating=!0,this._clock.start(),this.dispatchEvent({type:"start"})}_onPointerDown(e){if(!this.enabled)return;const t=l=>{if(!this._dragging){if(h2(l,this._pointerStart))return;this._dragging=!0}const c=R2.set(l.clientX,l.clientY).sub(this._pointerStart).multiplyScalar(1/this._domRect.width*Math.PI),h=this.coordinateConversion(Ds.subVectors(this.camera.position,this.target)),u=Ug.setFromVector3(h);u.theta=o-c.x,u.phi=rf(a-c.y,bd,Math.PI-bd),this.coordinateConversion(this.camera.position.setFromSpherical(u),!0).add(this.target),this.camera.lookAt(this.target),this.quaternion.copy(this.camera.quaternion).invert(),this._updateOrientation(!1),this.dispatchEvent({type:"change"})},i=()=>{if(document.removeEventListener("pointermove",t,!1),document.removeEventListener("pointerup",i,!1),!this._dragging)return this._handleClick(e);this._focus&&(va(this._focus,!1),this._focus=null),this._dragging=!1,this.dispatchEvent({type:"end"})};if(this.animating)return;e.preventDefault(),this._pointerStart.set(e.clientX,e.clientY);const n=this.coordinateConversion(Ds.subVectors(this.camera.position,this.target)),r=Ug.setFromVector3(n),o=r.theta,a=r.phi;this._distance=r.radius,document.addEventListener("pointermove",t,!1),document.addEventListener("pointerup",i,!1),this.dispatchEvent({type:"start"})}coordinateConversion(e,t=!1){const{x:i,y:n,z:r}=e,o=Lt.DEFAULT_UP;return o.x===1?t?e.set(n,r,i):e.set(r,i,n):o.z===1?t?e.set(r,i,n):e.set(n,r,i):e}_onPointerMove(e){!this.enabled||this._dragging||(this._background&&Ag(this._background,!0),this._handleHover(e))}_onPointerLeave(){!this.enabled||this._dragging||(this._background&&Ag(this._background,!1),this._focus&&va(this._focus,!1),this._domElement.style.cursor="")}_handleClick(e){const t=Tg(e,this._domRect,this._camera,this._intersections);this._focus&&(va(this._focus,!1),this._focus=null),t&&(this._setOrientation(t.object.position),this.dispatchEvent({type:"change"}))}_handleHover(e){const t=Tg(e,this._domRect,this._camera,this._intersections),i=(t==null?void 0:t.object)||null;this._focus!==i&&(this._domElement.style.cursor=i?"pointer":"",this._focus&&va(this._focus,!1),(this._focus=i)?va(i,!0):Mg(this._options,this._intersections,this.camera))}}const Fg={type:"change"},bp={type:"start"},N_={type:"end"},xc=new ls,kg=new ur,P2=Math.cos(70*dr.DEG2RAD),Rn=new L,mi=2*Math.PI,$t={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},Ed=1e-6;let O_=class extends fu{constructor(e,t=null){super(e,t),this.state=$t.NONE,this.target=new L,this.cursor=new L,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.keyRotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:ki.ROTATE,MIDDLE:ki.DOLLY,RIGHT:ki.PAN},this.touches={ONE:Vs.ROTATE,TWO:Vs.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new L,this._lastQuaternion=new Ht,this._lastTargetPosition=new L,this._quat=new Ht().setFromUnitVectors(e.up,new L(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new Ih,this._sphericalDelta=new Ih,this._scale=1,this._panOffset=new L,this._rotateStart=new xe,this._rotateEnd=new xe,this._rotateDelta=new xe,this._panStart=new xe,this._panEnd=new xe,this._panDelta=new xe,this._dollyStart=new xe,this._dollyEnd=new xe,this._dollyDelta=new xe,this._dollyDirection=new L,this._mouse=new xe,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=D2.bind(this),this._onPointerDown=I2.bind(this),this._onPointerUp=L2.bind(this),this._onContextMenu=z2.bind(this),this._onMouseWheel=O2.bind(this),this._onKeyDown=F2.bind(this),this._onTouchStart=k2.bind(this),this._onTouchMove=B2.bind(this),this._onMouseDown=U2.bind(this),this._onMouseMove=N2.bind(this),this._interceptControlDown=G2.bind(this),this._interceptControlUp=V2.bind(this),this.domElement!==null&&this.connect(this.domElement),this.update()}connect(e){super.connect(e),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(e){e.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=e}stopListenToKeyEvents(){this._domElementKeyEvents!==null&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(Fg),this.update(),this.state=$t.NONE}update(e=null){const t=this.object.position;Rn.copy(t).sub(this.target),Rn.applyQuaternion(this._quat),this._spherical.setFromVector3(Rn),this.autoRotate&&this.state===$t.NONE&&this._rotateLeft(this._getAutoRotationAngle(e)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let i=this.minAzimuthAngle,n=this.maxAzimuthAngle;isFinite(i)&&isFinite(n)&&(i<-Math.PI?i+=mi:i>Math.PI&&(i-=mi),n<-Math.PI?n+=mi:n>Math.PI&&(n-=mi),i<=n?this._spherical.theta=Math.max(i,Math.min(n,this._spherical.theta)):this._spherical.theta=this._spherical.theta>(i+n)/2?Math.max(i,this._spherical.theta):Math.min(n,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),this.enableDamping===!0?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let r=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const o=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),r=o!=this._spherical.radius}if(Rn.setFromSpherical(this._spherical),Rn.applyQuaternion(this._quatInverse),t.copy(this.target).add(Rn),this.object.lookAt(this.target),this.enableDamping===!0?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let o=null;if(this.object.isPerspectiveCamera){const a=Rn.length();o=this._clampDistance(a*this._scale);const l=a-o;this.object.position.addScaledVector(this._dollyDirection,l),this.object.updateMatrixWorld(),r=!!l}else if(this.object.isOrthographicCamera){const a=new L(this._mouse.x,this._mouse.y,0);a.unproject(this.object);const l=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),r=l!==this.object.zoom;const c=new L(this._mouse.x,this._mouse.y,0);c.unproject(this.object),this.object.position.sub(c).add(a),this.object.updateMatrixWorld(),o=Rn.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;o!==null&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(o).add(this.object.position):(xc.origin.copy(this.object.position),xc.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(xc.direction))<P2?this.object.lookAt(this.target):(kg.setFromNormalAndCoplanarPoint(this.object.up,this.target),xc.intersectPlane(kg,this.target))))}else if(this.object.isOrthographicCamera){const o=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),o!==this.object.zoom&&(this.object.updateProjectionMatrix(),r=!0)}return this._scale=1,this._performCursorZoom=!1,r||this._lastPosition.distanceToSquared(this.object.position)>Ed||8*(1-this._lastQuaternion.dot(this.object.quaternion))>Ed||this._lastTargetPosition.distanceToSquared(this.target)>Ed?(this.dispatchEvent(Fg),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0):!1}_getAutoRotationAngle(e){return e!==null?mi/60*this.autoRotateSpeed*e:mi/60/60*this.autoRotateSpeed}_getZoomScale(e){const t=Math.abs(e*.01);return Math.pow(.95,this.zoomSpeed*t)}_rotateLeft(e){this._sphericalDelta.theta-=e}_rotateUp(e){this._sphericalDelta.phi-=e}_panLeft(e,t){Rn.setFromMatrixColumn(t,0),Rn.multiplyScalar(-e),this._panOffset.add(Rn)}_panUp(e,t){this.screenSpacePanning===!0?Rn.setFromMatrixColumn(t,1):(Rn.setFromMatrixColumn(t,0),Rn.crossVectors(this.object.up,Rn)),Rn.multiplyScalar(e),this._panOffset.add(Rn)}_pan(e,t){const i=this.domElement;if(this.object.isPerspectiveCamera){const n=this.object.position;Rn.copy(n).sub(this.target);let r=Rn.length();r*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*e*r/i.clientHeight,this.object.matrix),this._panUp(2*t*r/i.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(e*(this.object.right-this.object.left)/this.object.zoom/i.clientWidth,this.object.matrix),this._panUp(t*(this.object.top-this.object.bottom)/this.object.zoom/i.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(e,t){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const i=this.domElement.getBoundingClientRect(),n=e-i.left,r=t-i.top,o=i.width,a=i.height;this._mouse.x=n/o*2-1,this._mouse.y=-(r/a)*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(e){return Math.max(this.minDistance,Math.min(this.maxDistance,e))}_handleMouseDownRotate(e){this._rotateStart.set(e.clientX,e.clientY)}_handleMouseDownDolly(e){this._updateZoomParameters(e.clientX,e.clientX),this._dollyStart.set(e.clientX,e.clientY)}_handleMouseDownPan(e){this._panStart.set(e.clientX,e.clientY)}_handleMouseMoveRotate(e){this._rotateEnd.set(e.clientX,e.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(mi*this._rotateDelta.x/t.clientHeight),this._rotateUp(mi*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(e){this._dollyEnd.set(e.clientX,e.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(e){this._panEnd.set(e.clientX,e.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(e){this._updateZoomParameters(e.clientX,e.clientY),e.deltaY<0?this._dollyIn(this._getZoomScale(e.deltaY)):e.deltaY>0&&this._dollyOut(this._getZoomScale(e.deltaY)),this.update()}_handleKeyDown(e){let t=!1;switch(e.code){case this.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(mi*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),t=!0;break;case this.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(-mi*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),t=!0;break;case this.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(mi*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),t=!0;break;case this.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(-mi*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),t=!0;break}t&&(e.preventDefault(),this.update())}_handleTouchStartRotate(e){if(this._pointers.length===1)this._rotateStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),i=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);this._rotateStart.set(i,n)}}_handleTouchStartPan(e){if(this._pointers.length===1)this._panStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),i=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);this._panStart.set(i,n)}}_handleTouchStartDolly(e){const t=this._getSecondPointerPosition(e),i=e.pageX-t.x,n=e.pageY-t.y,r=Math.sqrt(i*i+n*n);this._dollyStart.set(0,r)}_handleTouchStartDollyPan(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enablePan&&this._handleTouchStartPan(e)}_handleTouchStartDollyRotate(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enableRotate&&this._handleTouchStartRotate(e)}_handleTouchMoveRotate(e){if(this._pointers.length==1)this._rotateEnd.set(e.pageX,e.pageY);else{const i=this._getSecondPointerPosition(e),n=.5*(e.pageX+i.x),r=.5*(e.pageY+i.y);this._rotateEnd.set(n,r)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(mi*this._rotateDelta.x/t.clientHeight),this._rotateUp(mi*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(e){if(this._pointers.length===1)this._panEnd.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),i=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);this._panEnd.set(i,n)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(e){const t=this._getSecondPointerPosition(e),i=e.pageX-t.x,n=e.pageY-t.y,r=Math.sqrt(i*i+n*n);this._dollyEnd.set(0,r),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const o=(e.pageX+t.x)*.5,a=(e.pageY+t.y)*.5;this._updateZoomParameters(o,a)}_handleTouchMoveDollyPan(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enablePan&&this._handleTouchMovePan(e)}_handleTouchMoveDollyRotate(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enableRotate&&this._handleTouchMoveRotate(e)}_addPointer(e){this._pointers.push(e.pointerId)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId){this._pointers.splice(t,1);return}}_isTrackingPointer(e){for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId)return!0;return!1}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new xe,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[t]}_customWheelEvent(e){const t=e.deltaMode,i={clientX:e.clientX,clientY:e.clientY,deltaY:e.deltaY};switch(t){case 1:i.deltaY*=16;break;case 2:i.deltaY*=100;break}return e.ctrlKey&&!this._controlActive&&(i.deltaY*=10),i}};function I2(s){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(s.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),!this._isTrackingPointer(s)&&(this._addPointer(s),s.pointerType==="touch"?this._onTouchStart(s):this._onMouseDown(s)))}function D2(s){this.enabled!==!1&&(s.pointerType==="touch"?this._onTouchMove(s):this._onMouseMove(s))}function L2(s){switch(this._removePointer(s),this._pointers.length){case 0:this.domElement.releasePointerCapture(s.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(N_),this.state=$t.NONE;break;case 1:const e=this._pointers[0],t=this._pointerPositions[e];this._onTouchStart({pointerId:e,pageX:t.x,pageY:t.y});break}}function U2(s){let e;switch(s.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case ki.DOLLY:if(this.enableZoom===!1)return;this._handleMouseDownDolly(s),this.state=$t.DOLLY;break;case ki.ROTATE:if(s.ctrlKey||s.metaKey||s.shiftKey){if(this.enablePan===!1)return;this._handleMouseDownPan(s),this.state=$t.PAN}else{if(this.enableRotate===!1)return;this._handleMouseDownRotate(s),this.state=$t.ROTATE}break;case ki.PAN:if(s.ctrlKey||s.metaKey||s.shiftKey){if(this.enableRotate===!1)return;this._handleMouseDownRotate(s),this.state=$t.ROTATE}else{if(this.enablePan===!1)return;this._handleMouseDownPan(s),this.state=$t.PAN}break;default:this.state=$t.NONE}this.state!==$t.NONE&&this.dispatchEvent(bp)}function N2(s){switch(this.state){case $t.ROTATE:if(this.enableRotate===!1)return;this._handleMouseMoveRotate(s);break;case $t.DOLLY:if(this.enableZoom===!1)return;this._handleMouseMoveDolly(s);break;case $t.PAN:if(this.enablePan===!1)return;this._handleMouseMovePan(s);break}}function O2(s){this.enabled===!1||this.enableZoom===!1||this.state!==$t.NONE||(s.preventDefault(),this.dispatchEvent(bp),this._handleMouseWheel(this._customWheelEvent(s)),this.dispatchEvent(N_))}function F2(s){this.enabled!==!1&&this._handleKeyDown(s)}function k2(s){switch(this._trackPointer(s),this._pointers.length){case 1:switch(this.touches.ONE){case Vs.ROTATE:if(this.enableRotate===!1)return;this._handleTouchStartRotate(s),this.state=$t.TOUCH_ROTATE;break;case Vs.PAN:if(this.enablePan===!1)return;this._handleTouchStartPan(s),this.state=$t.TOUCH_PAN;break;default:this.state=$t.NONE}break;case 2:switch(this.touches.TWO){case Vs.DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchStartDollyPan(s),this.state=$t.TOUCH_DOLLY_PAN;break;case Vs.DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchStartDollyRotate(s),this.state=$t.TOUCH_DOLLY_ROTATE;break;default:this.state=$t.NONE}break;default:this.state=$t.NONE}this.state!==$t.NONE&&this.dispatchEvent(bp)}function B2(s){switch(this._trackPointer(s),this.state){case $t.TOUCH_ROTATE:if(this.enableRotate===!1)return;this._handleTouchMoveRotate(s),this.update();break;case $t.TOUCH_PAN:if(this.enablePan===!1)return;this._handleTouchMovePan(s),this.update();break;case $t.TOUCH_DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchMoveDollyPan(s),this.update();break;case $t.TOUCH_DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchMoveDollyRotate(s),this.update();break;default:this.state=$t.NONE}}function z2(s){this.enabled!==!1&&s.preventDefault()}function G2(s){s.key==="Control"&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function V2(s){s.key==="Control"&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}const Td={type:"change"},Sp={type:"start"},Mp={type:"end"},Bg=1e-6,Wt={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM_PAN:4},bc=new xe,Qr=new xe,H2=new L,Sc=new L,Ad=new L,Lo=new Ht,zg=new L,Mc=new L,Cd=new L,wc=new L;class W2 extends fu{constructor(e,t=null){super(e,t),this.screen={left:0,top:0,width:0,height:0},this.rotateSpeed=1,this.zoomSpeed=1.2,this.panSpeed=.3,this.noRotate=!1,this.noZoom=!1,this.noPan=!1,this.staticMoving=!1,this.dynamicDampingFactor=.2,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.keys=["KeyA","KeyS","KeyD"],this.mouseButtons={LEFT:ki.ROTATE,MIDDLE:ki.DOLLY,RIGHT:ki.PAN},this.target=new L,this.state=Wt.NONE,this.keyState=Wt.NONE,this._lastPosition=new L,this._lastZoom=1,this._touchZoomDistanceStart=0,this._touchZoomDistanceEnd=0,this._lastAngle=0,this._eye=new L,this._movePrev=new xe,this._moveCurr=new xe,this._lastAxis=new L,this._zoomStart=new xe,this._zoomEnd=new xe,this._panStart=new xe,this._panEnd=new xe,this._pointers=[],this._pointerPositions={},this._onPointerMove=Y2.bind(this),this._onPointerDown=X2.bind(this),this._onPointerUp=j2.bind(this),this._onPointerCancel=q2.bind(this),this._onContextMenu=tC.bind(this),this._onMouseWheel=eC.bind(this),this._onKeyDown=J2.bind(this),this._onKeyUp=Z2.bind(this),this._onTouchStart=nC.bind(this),this._onTouchMove=iC.bind(this),this._onTouchEnd=rC.bind(this),this._onMouseDown=K2.bind(this),this._onMouseMove=Q2.bind(this),this._onMouseUp=$2.bind(this),this._target0=this.target.clone(),this._position0=this.object.position.clone(),this._up0=this.object.up.clone(),this._zoom0=this.object.zoom,t!==null&&(this.connect(t),this.handleResize()),this.update()}connect(e){super.connect(e),window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerCancel),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="none"}disconnect(){window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("keyup",this._onKeyUp),this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerCancel),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}handleResize(){const e=this.domElement.getBoundingClientRect(),t=this.domElement.ownerDocument.documentElement;this.screen.left=e.left+window.pageXOffset-t.clientLeft,this.screen.top=e.top+window.pageYOffset-t.clientTop,this.screen.width=e.width,this.screen.height=e.height}update(){this._eye.subVectors(this.object.position,this.target),this.noRotate||this._rotateCamera(),this.noZoom||this._zoomCamera(),this.noPan||this._panCamera(),this.object.position.addVectors(this.target,this._eye),this.object.isPerspectiveCamera?(this._checkDistances(),this.object.lookAt(this.target),this._lastPosition.distanceToSquared(this.object.position)>Bg&&(this.dispatchEvent(Td),this._lastPosition.copy(this.object.position))):this.object.isOrthographicCamera?(this.object.lookAt(this.target),(this._lastPosition.distanceToSquared(this.object.position)>Bg||this._lastZoom!==this.object.zoom)&&(this.dispatchEvent(Td),this._lastPosition.copy(this.object.position),this._lastZoom=this.object.zoom)):console.warn("THREE.TrackballControls: Unsupported camera type.")}reset(){this.state=Wt.NONE,this.keyState=Wt.NONE,this.target.copy(this._target0),this.object.position.copy(this._position0),this.object.up.copy(this._up0),this.object.zoom=this._zoom0,this.object.updateProjectionMatrix(),this._eye.subVectors(this.object.position,this.target),this.object.lookAt(this.target),this.dispatchEvent(Td),this._lastPosition.copy(this.object.position),this._lastZoom=this.object.zoom}_panCamera(){if(Qr.copy(this._panEnd).sub(this._panStart),Qr.lengthSq()){if(this.object.isOrthographicCamera){const e=(this.object.right-this.object.left)/this.object.zoom/this.domElement.clientWidth,t=(this.object.top-this.object.bottom)/this.object.zoom/this.domElement.clientWidth;Qr.x*=e,Qr.y*=t}Qr.multiplyScalar(this._eye.length()*this.panSpeed),Sc.copy(this._eye).cross(this.object.up).setLength(Qr.x),Sc.add(H2.copy(this.object.up).setLength(Qr.y)),this.object.position.add(Sc),this.target.add(Sc),this.staticMoving?this._panStart.copy(this._panEnd):this._panStart.add(Qr.subVectors(this._panEnd,this._panStart).multiplyScalar(this.dynamicDampingFactor))}}_rotateCamera(){wc.set(this._moveCurr.x-this._movePrev.x,this._moveCurr.y-this._movePrev.y,0);let e=wc.length();e?(this._eye.copy(this.object.position).sub(this.target),zg.copy(this._eye).normalize(),Mc.copy(this.object.up).normalize(),Cd.crossVectors(Mc,zg).normalize(),Mc.setLength(this._moveCurr.y-this._movePrev.y),Cd.setLength(this._moveCurr.x-this._movePrev.x),wc.copy(Mc.add(Cd)),Ad.crossVectors(wc,this._eye).normalize(),e*=this.rotateSpeed,Lo.setFromAxisAngle(Ad,e),this._eye.applyQuaternion(Lo),this.object.up.applyQuaternion(Lo),this._lastAxis.copy(Ad),this._lastAngle=e):!this.staticMoving&&this._lastAngle&&(this._lastAngle*=Math.sqrt(1-this.dynamicDampingFactor),this._eye.copy(this.object.position).sub(this.target),Lo.setFromAxisAngle(this._lastAxis,this._lastAngle),this._eye.applyQuaternion(Lo),this.object.up.applyQuaternion(Lo)),this._movePrev.copy(this._moveCurr)}_zoomCamera(){let e;this.state===Wt.TOUCH_ZOOM_PAN?(e=this._touchZoomDistanceStart/this._touchZoomDistanceEnd,this._touchZoomDistanceStart=this._touchZoomDistanceEnd,this.object.isPerspectiveCamera?this._eye.multiplyScalar(e):this.object.isOrthographicCamera?(this.object.zoom=dr.clamp(this.object.zoom/e,this.minZoom,this.maxZoom),this._lastZoom!==this.object.zoom&&this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")):(e=1+(this._zoomEnd.y-this._zoomStart.y)*this.zoomSpeed,e!==1&&e>0&&(this.object.isPerspectiveCamera?this._eye.multiplyScalar(e):this.object.isOrthographicCamera?(this.object.zoom=dr.clamp(this.object.zoom/e,this.minZoom,this.maxZoom),this._lastZoom!==this.object.zoom&&this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")),this.staticMoving?this._zoomStart.copy(this._zoomEnd):this._zoomStart.y+=(this._zoomEnd.y-this._zoomStart.y)*this.dynamicDampingFactor)}_getMouseOnScreen(e,t){return bc.set((e-this.screen.left)/this.screen.width,(t-this.screen.top)/this.screen.height),bc}_getMouseOnCircle(e,t){return bc.set((e-this.screen.width*.5-this.screen.left)/(this.screen.width*.5),(this.screen.height+2*(this.screen.top-t))/this.screen.width),bc}_addPointer(e){this._pointers.push(e)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t].pointerId==e.pointerId){this._pointers.splice(t,1);return}}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new xe,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0].pointerId?this._pointers[1]:this._pointers[0];return this._pointerPositions[t.pointerId]}_checkDistances(){(!this.noZoom||!this.noPan)&&(this._eye.lengthSq()>this.maxDistance*this.maxDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.maxDistance)),this._zoomStart.copy(this._zoomEnd)),this._eye.lengthSq()<this.minDistance*this.minDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.minDistance)),this._zoomStart.copy(this._zoomEnd)))}}function X2(s){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(s.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),this._addPointer(s),s.pointerType==="touch"?this._onTouchStart(s):this._onMouseDown(s))}function Y2(s){this.enabled!==!1&&(s.pointerType==="touch"?this._onTouchMove(s):this._onMouseMove(s))}function j2(s){this.enabled!==!1&&(s.pointerType==="touch"?this._onTouchEnd(s):this._onMouseUp(),this._removePointer(s),this._pointers.length===0&&(this.domElement.releasePointerCapture(s.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp)))}function q2(s){this._removePointer(s)}function Z2(){this.enabled!==!1&&(this.keyState=Wt.NONE,window.addEventListener("keydown",this._onKeyDown))}function J2(s){this.enabled!==!1&&(window.removeEventListener("keydown",this._onKeyDown),this.keyState===Wt.NONE&&(s.code===this.keys[Wt.ROTATE]&&!this.noRotate?this.keyState=Wt.ROTATE:s.code===this.keys[Wt.ZOOM]&&!this.noZoom?this.keyState=Wt.ZOOM:s.code===this.keys[Wt.PAN]&&!this.noPan&&(this.keyState=Wt.PAN)))}function K2(s){let e;switch(s.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case ki.DOLLY:this.state=Wt.ZOOM;break;case ki.ROTATE:this.state=Wt.ROTATE;break;case ki.PAN:this.state=Wt.PAN;break;default:this.state=Wt.NONE}const t=this.keyState!==Wt.NONE?this.keyState:this.state;t===Wt.ROTATE&&!this.noRotate?(this._moveCurr.copy(this._getMouseOnCircle(s.pageX,s.pageY)),this._movePrev.copy(this._moveCurr)):t===Wt.ZOOM&&!this.noZoom?(this._zoomStart.copy(this._getMouseOnScreen(s.pageX,s.pageY)),this._zoomEnd.copy(this._zoomStart)):t===Wt.PAN&&!this.noPan&&(this._panStart.copy(this._getMouseOnScreen(s.pageX,s.pageY)),this._panEnd.copy(this._panStart)),this.dispatchEvent(Sp)}function Q2(s){const e=this.keyState!==Wt.NONE?this.keyState:this.state;e===Wt.ROTATE&&!this.noRotate?(this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this._getMouseOnCircle(s.pageX,s.pageY))):e===Wt.ZOOM&&!this.noZoom?this._zoomEnd.copy(this._getMouseOnScreen(s.pageX,s.pageY)):e===Wt.PAN&&!this.noPan&&this._panEnd.copy(this._getMouseOnScreen(s.pageX,s.pageY))}function $2(){this.state=Wt.NONE,this.dispatchEvent(Mp)}function eC(s){if(this.enabled!==!1&&this.noZoom!==!0){switch(s.preventDefault(),s.deltaMode){case 2:this._zoomStart.y-=s.deltaY*.025;break;case 1:this._zoomStart.y-=s.deltaY*.01;break;default:this._zoomStart.y-=s.deltaY*25e-5;break}this.dispatchEvent(Sp),this.dispatchEvent(Mp)}}function tC(s){this.enabled!==!1&&s.preventDefault()}function nC(s){switch(this._trackPointer(s),this._pointers.length){case 1:this.state=Wt.TOUCH_ROTATE,this._moveCurr.copy(this._getMouseOnCircle(this._pointers[0].pageX,this._pointers[0].pageY)),this._movePrev.copy(this._moveCurr);break;default:this.state=Wt.TOUCH_ZOOM_PAN;const e=this._pointers[0].pageX-this._pointers[1].pageX,t=this._pointers[0].pageY-this._pointers[1].pageY;this._touchZoomDistanceEnd=this._touchZoomDistanceStart=Math.sqrt(e*e+t*t);const i=(this._pointers[0].pageX+this._pointers[1].pageX)/2,n=(this._pointers[0].pageY+this._pointers[1].pageY)/2;this._panStart.copy(this._getMouseOnScreen(i,n)),this._panEnd.copy(this._panStart);break}this.dispatchEvent(Sp)}function iC(s){switch(this._trackPointer(s),this._pointers.length){case 1:this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this._getMouseOnCircle(s.pageX,s.pageY));break;default:const e=this._getSecondPointerPosition(s),t=s.pageX-e.x,i=s.pageY-e.y;this._touchZoomDistanceEnd=Math.sqrt(t*t+i*i);const n=(s.pageX+e.x)/2,r=(s.pageY+e.y)/2;this._panEnd.copy(this._getMouseOnScreen(n,r));break}}function rC(s){switch(this._pointers.length){case 0:this.state=Wt.NONE;break;case 1:this.state=Wt.TOUCH_ROTATE,this._moveCurr.copy(this._getMouseOnCircle(s.pageX,s.pageY)),this._movePrev.copy(this._moveCurr);break;case 2:this.state=Wt.TOUCH_ZOOM_PAN;for(let e=0;e<this._pointers.length;e++)if(this._pointers[e].pointerId!==s.pointerId){const t=this._pointerPositions[this._pointers[e].pointerId];this._moveCurr.copy(this._getMouseOnCircle(t.x,t.y)),this._movePrev.copy(this._moveCurr);break}break}this.dispatchEvent(Mp)}function sC(s,e){var x;Dn(e,!0);const[t,i]=al(),n=()=>js(c,"$parent",t),r=()=>js(h,"$camera",t),o=()=>js(v,"$size",t);let a=He(e,"ref",15),l=yr(e,["$$slots","$$events","$$legacy","controls","renderTask","ref","onstart","onchange","onend"]);const c=dp(),{camera:h,renderer:u,dom:d,autoRenderTask:f,shouldRender:p,size:v,invalidate:m}=Gi();a(new Og(h.current,u));const g=new Pt,y=Mt(()=>e.controls??n());so(((x=e.renderTask)==null?void 0:x.key)??Symbol("threlte-extras-gizmo-render"),()=>{if(p()){const _=u.toneMapping;u.getViewport(g),u.toneMapping=pr,a().render(),u.setViewport(g),u.toneMapping=_}},{autoInvalidate:!1,...e.renderTask??{after:f}}),It(()=>{a(a().camera=r(),!0)}),_i(()=>{if(_e(y))if(_e(y)instanceof O_||_e(y)instanceof W2){a(a().target=_e(y).target,!0);const _=()=>{a().update(!1)};return _e(y).addEventListener("change",_),()=>_e(y).removeEventListener("change",_)}else{const _=()=>{"getTarget"in _e(y)&&typeof _e(y).getTarget=="function"&&(_e(y).getTarget(a().target),a().update())},E=()=>{_e(y).setPosition(...h.current.position.toArray())};return a().addEventListener("change",E),_e(y).addEventListener("update",_),()=>{a().removeEventListener("change",E),_e(y).removeEventListener("update",_)}}}),_i(()=>{const _=E=>{var M;_e(y).enabled=!1,(M=e.onstart)==null||M.call(e,E)};return a().addEventListener("start",_),()=>a().removeEventListener("start",_)}),_i(()=>{const _=E=>{var M;m(),(M=e.onchange)==null||M.call(e,E)};return a().addEventListener("change",_),()=>a().removeEventListener("change",_)}),_i(()=>{const _=E=>{var M;_e(y).enabled=!0,(M=e.onend)==null||M.call(e,E)};return a().addEventListener("end",_),()=>a().removeEventListener("end",_)}),It(()=>{d&&(a().dispose(),a(new Og(h.current,u,{container:d,placement:"bottom-left",size:86,...l})),m())}),_i(()=>{o(),a().update(),m()}),_i(()=>()=>a().dispose()),Ln(),i()}const oC={name:"HorizontalBlurShader",uniforms:{tDiffuse:{value:null},h:{value:1/512}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform sampler2D tDiffuse;
		uniform float h;

		varying vec2 vUv;

		void main() {

			vec4 sum = vec4( 0.0 );

			sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;
			sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;
			sum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;

			gl_FragColor = sum;

		}`},aC={name:"VerticalBlurShader",uniforms:{tDiffuse:{value:null},v:{value:1/512}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform sampler2D tDiffuse;
		uniform float v;

		varying vec2 vUv;

		void main() {

			vec4 sum = vec4( 0.0 );

			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;

			gl_FragColor = sum;

		}`};var lC=Jt("<!> <!> <!>",1);function cC(s,e){Dn(e,!0);let t=He(e,"opacity",3,1),i=He(e,"width",3,1),n=He(e,"height",3,1),r=He(e,"blur",3,1),o=He(e,"far",3,10),a=He(e,"smooth",3,!0),l=He(e,"resolution",3,512),c=He(e,"frames",3,1/0),h=He(e,"scale",3,10),u=He(e,"color",3,"#000000"),d=He(e,"depthWrite",3,!1),f=He(e,"ref",15),p=yr(e,["$$slots","$$events","$$legacy","opacity","width","height","blur","far","smooth","resolution","frames","scale","color","depthWrite","ref","children"]);const{scene:v,renderer:m}=Gi(),g=new Oi,y=Mt(()=>i()*(Array.isArray(h())?h()[0]:h()||1)),x=Mt(()=>n()*(Array.isArray(h())?h()[1]:h()||1)),_=Mt(()=>{const j=new ji(l(),l());return j.texture.generateMipmaps=!1,j.texture.colorSpace=m.outputColorSpace,j}),E=Mt(()=>{const j=new ji(l(),l());return j.texture.generateMipmaps=!1,j}),M=Mt(()=>new or(_e(y),_e(x)).rotateX(Math.PI/2)),S=Mt(()=>new ke(_e(M))),T=Mt(()=>{const j=new bl({depthTest:!1,depthWrite:!1});return j.onBeforeCompile=$=>{$.uniforms={...$.uniforms,uColor:{value:new ze(u()).convertSRGBToLinear()}},$.fragmentShader=`uniform vec3 uColor;
${$.fragmentShader}`,$.fragmentShader=$.fragmentShader.replace("vec4( vec3( 1.0 - fragCoordZ ), opacity );","vec4( uColor, ( 1.0 - fragCoordZ ) * 1.0 );"),$.fragmentShader=$.fragmentShader.replace("vec4(vec3(1.0-fragCoordZ),opacity);","vec4(uColor,(1.0-fragCoordZ)*1.0);")},j}),w=new Ti({...oC,depthTest:!1}),b=new Ti({...aC,depthTest:!1}),D=Mt(()=>new us(-_e(y)/2,_e(y)/2,_e(x)/2,-_e(x)/2,0,o()));It(()=>_e(D).updateProjectionMatrix());const I=Mt(()=>new Bn({map:_e(_).texture,transparent:!0,opacity:t(),depthWrite:d()})),F=j=>{_e(S).visible=!0,_e(S).material=w,w.uniforms.tDiffuse.value=_e(_).texture,w.uniforms.h.value=j*1/256,m.setRenderTarget(_e(E)),m.render(_e(S),_e(D)),_e(S).material=b,b.uniforms.tDiffuse.value=_e(E).texture,b.uniforms.v.value=j*1/256,m.setRenderTarget(_e(_)),m.render(_e(S),_e(D)),_e(S).visible=!1},V=()=>{const j=v.background;v.background=null;const $=v.overrideMaterial;v.overrideMaterial=_e(T);const U=m.getClearAlpha();m.setClearAlpha(0),m.setRenderTarget(_e(_)),m.render(v,_e(D)),v.overrideMaterial=$,F(r()),a()&&F(r()*.4),m.setRenderTarget(null),v.background=j,m.setClearAlpha(U)},J=()=>{V()},O=so(()=>{V()},{autoStart:!1});let ee=0;const Y=so(()=>{V(),ee+=1,ee>=c()&&Y.stop()},{autoStart:!1});return It(()=>{c()===Number.POSITIVE_INFINITY?O.start():ee<c()&&Y.start()}),xr(()=>{_e(_).dispose(),_e(E).dispose(),_e(M).dispose(),_e(T).dispose(),w.dispose(),b.dispose(),_e(I).dispose()}),bt(s,Br({is:g},()=>p,{get ref(){return f()},set ref(j){f(j)},children:(j,$)=>{var U=pt(),Z=je(U);Dt(Z,()=>bt.Group,(K,k)=>{k(K,{"rotation.x":Math.PI/2,children:(H,q)=>{var W=lC(),ne=je(W);Dt(ne,()=>bt.Mesh,(Se,pe)=>{pe(Se,{"scale.y":-1,"rotation.x":-Math.PI/2,get material(){return _e(I)},get geometry(){return _e(M)}})});var ge=gt(ne,2);bt(ge,{get is(){return _e(D)},manual:!0});var ye=gt(ge,2);Yi(ye,()=>e.children??kr,()=>({ref:g})),Xe(H,W)},$$slots:{default:!0}})}),Xe(j,U)},$$slots:{default:!0}})),Ln({refresh:J})}const hC=Number.parseInt(hl.replace("dev","")),uC=`
  varying vec3 localPosition;
  varying vec4 worldPosition;

  uniform vec3 worldCamProjPosition;
	uniform vec3 worldPlanePosition;
	uniform float fadeDistance;
	uniform bool infiniteGrid;
	uniform bool followCamera;

	uniform int coord0;
	uniform int coord1;
	uniform int coord2;

	void main() {
		localPosition = vec3(
		  position[coord0],
			position[coord1],
			position[coord2]
		);

		if (infiniteGrid) {
		  localPosition *= 1.0 + fadeDistance;
		}

		worldPosition = modelMatrix * vec4(localPosition, 1.0);
		if (followCamera) {
		  worldPosition.xyz += (worldCamProjPosition - worldPlanePosition);
      localPosition = (inverse(modelMatrix) * worldPosition).xyz;
		}

		gl_Position = projectionMatrix * viewMatrix * worldPosition;
	}
`,dC=`
  #define PI 3.141592653589793

	varying vec3 localPosition;
	varying vec4 worldPosition;

	uniform vec3 worldCamProjPosition;
	uniform float cellSize;
	uniform float sectionSize;
	uniform vec3 cellColor;
	uniform vec3 sectionColor;
	uniform float fadeDistance;
	uniform float fadeStrength;
	uniform vec3 fadeOrigin;
	uniform float cellThickness;
	uniform float sectionThickness;
	uniform vec3 backgroundColor;
	uniform float backgroundOpacity;

	uniform bool infiniteGrid;

	uniform int coord0;
	uniform int coord1;
	uniform int coord2;

	// 0 - default; 1 - lines; 2 - circles; 3 - polar
	uniform int gridType;

  // lineGrid coord for lines
	uniform int lineGridCoord;

	// circlegrid max radius
	uniform float circleGridMaxRadius;

	// polar grid dividers
	uniform float polarCellDividers;
	uniform float polarSectionDividers;

	float getSquareGrid(float size, float thickness, vec3 localPos) {
		vec2 coord = localPos.xy / size;

		vec2 grid = abs(fract(coord - 0.5) - 0.5) / fwidth(coord);
		float line = min(grid.x, grid.y) + 1.0 - thickness;

		return 1.0 - min(line, 1.0);
	}

	float getLinesGrid(float size, float thickness, vec3 localPos) {
		float coord = localPos[lineGridCoord] / size;
		float line = abs(fract(coord - 0.5) - 0.5) / fwidth(coord) - thickness * 0.2;

		return 1.0 - min(line, 1.0);
	}

	float getCirclesGrid(float size, float thickness, vec3 localPos) {
		float coord = length(localPos.xy) / size;
		float line = abs(fract(coord - 0.5) - 0.5) / fwidth(coord) - thickness * 0.2;

		if (!infiniteGrid && circleGridMaxRadius > 0. && coord > circleGridMaxRadius + thickness * 0.05) {
		  discard;
		}

		return 1.0 - min(line, 1.0);
	}

	float getPolarGrid(float size, float thickness, float polarDividers, vec3 localPos) {
		float rad = length(localPos.xy) / size;
		vec2 coord = vec2(rad, atan(localPos.x, localPos.y) * polarDividers / PI) ;

		vec2 wrapped = vec2(coord.x, fract(coord.y / (2.0 * polarDividers)) * (2.0 * polarDividers));
		vec2 coordWidth = fwidth(coord);
		vec2 wrappedWidth = fwidth(wrapped);
		vec2 width = (coord.y < -polarDividers * 0.5 || coord.y > polarDividers * 0.5 ? wrappedWidth : coordWidth) * (1.+thickness*0.25);

		// Compute anti-aliased world-space grid lines
		vec2 grid = abs(fract(coord - 0.5) - 0.5) / width;
		float line = min(grid.x, grid.y);

if (!infiniteGrid && circleGridMaxRadius > 0.0 && rad > circleGridMaxRadius + thickness * 0.05) {
		  discard;
		}

		return 1.0 - min(line, 1.0);
	}

	void main() {
		float g1 = 0.0;
		float g2 = 0.0;

		vec3 localPos = vec3(localPosition[coord0], localPosition[coord1], localPosition[coord2]);

		if (gridType == 0) {
			g1 = getSquareGrid(cellSize, cellThickness, localPos);
			g2 = getSquareGrid(sectionSize, sectionThickness, localPos);

		} else if (gridType == 1) {
			g1 = getLinesGrid(cellSize, cellThickness, localPos);
			g2 = getLinesGrid(sectionSize, sectionThickness, localPos);

		} else if (gridType == 2) {
			g1 = getCirclesGrid(cellSize, cellThickness, localPos);
			g2 = getCirclesGrid(sectionSize, sectionThickness, localPos);

		} else if (gridType == 3) {
			g1 = getPolarGrid(cellSize, cellThickness, polarCellDividers, localPos);
			g2 = getPolarGrid(sectionSize, sectionThickness, polarSectionDividers, localPos);
		}

		float dist = distance(fadeOrigin, worldPosition.xyz);
		float d = 1.0 - min(dist / fadeDistance, 1.0);
		float fadeFactor = pow(d, fadeStrength) * 0.95;

		vec3 color = mix(cellColor, sectionColor, min(1.0, sectionThickness * g2));

		if (backgroundOpacity > 0.0) {
			float linesAlpha = clamp((g1 + g2) * fadeFactor, 0.0,1.0);
			vec3 finalColor = mix(backgroundColor, color, linesAlpha);
			float blendedAlpha = max(linesAlpha, backgroundOpacity * fadeFactor);
			gl_FragColor = vec4(finalColor, blendedAlpha);

		} else {
			gl_FragColor = vec4(color, (g1 + g2) * pow(d, fadeStrength));
			gl_FragColor.a = mix(0.75 * gl_FragColor.a, gl_FragColor.a, g2);
		}

		if (gl_FragColor.a <= 0.0) {
		  discard;
		}

		#include <tonemapping_fragment>
		#include <${hC<154?"encodings_fragment":"colorspace_fragment"}>
	}
`;var fC=Jt("<!> <!>",1);function pC(s,e){Dn(e,!0);let t=He(e,"cellColor",3,"#000000"),i=He(e,"sectionColor",3,"#0000ee"),n=He(e,"cellSize",3,1),r=He(e,"backgroundColor",3,"#dadada"),o=He(e,"backgroundOpacity",3,0),a=He(e,"sectionSize",3,10),l=He(e,"plane",3,"xz"),c=He(e,"gridSize",19,()=>[20,20]),h=He(e,"followCamera",3,!1),u=He(e,"infiniteGrid",3,!1),d=He(e,"fadeDistance",3,100),f=He(e,"fadeStrength",3,1),p=He(e,"fadeOrigin",3,void 0),v=He(e,"cellThickness",3,1),m=He(e,"sectionThickness",3,2),g=He(e,"side",3,xi),y=He(e,"type",3,"grid"),x=He(e,"axis",3,"x"),_=He(e,"maxRadius",3,0),E=He(e,"cellDividers",3,6),M=He(e,"sectionDividers",3,2),S=He(e,"ref",15),T=yr(e,["$$slots","$$events","$$legacy","cellColor","sectionColor","cellSize","backgroundColor","backgroundOpacity","sectionSize","plane","gridSize","followCamera","infiniteGrid","fadeDistance","fadeStrength","fadeOrigin","cellThickness","sectionThickness","side","type","axis","maxRadius","cellDividers","sectionDividers","ref","children"]);const w=new ke,{invalidate:b,camera:D}=Gi(),I=new ur,F=new L(0,1,0),V=new L(0,0,0),J={x:0,y:1,z:2},O={xz:"xzy",xy:"xyz",zy:"zyx"},ee={grid:0,lines:1,circular:2,polar:3},Y={cellSize:{value:n()},sectionSize:{value:a()},cellColor:{value:new ze(t())},sectionColor:{value:new ze(i())},backgroundColor:{value:new ze(r())},backgroundOpacity:{value:o()},fadeDistance:{value:d()},fadeStrength:{value:f()},fadeOrigin:{value:new L},cellThickness:{value:v()},sectionThickness:{value:m()},infiniteGrid:{value:u()},followCamera:{value:h()},coord0:{value:0},coord1:{value:2},coord2:{value:1},gridType:{value:ee.grid},lineGridCoord:{value:J[x()]},circleGridMaxRadius:{value:_()},polarCellDividers:{value:E()},polarSectionDividers:{value:M()},worldCamProjPosition:{value:new L},worldPlanePosition:{value:new L}};It(()=>{const j=O[l()],$=j.charAt(0),U=j.charAt(1),Z=j.charAt(2);Y.coord0.value=J[$],Y.coord1.value=J[U],Y.coord2.value=J[Z],b()}),It(()=>{Y.cellSize.value=n(),b()}),It(()=>{Y.sectionSize.value=a(),b()}),It(()=>{Y.cellColor.value.set(t()),b()}),It(()=>{Y.sectionColor.value.set(i()),b()}),It(()=>{Y.backgroundColor.value.set(r()),b()}),It(()=>{Y.backgroundOpacity.value=o(),b()}),It(()=>{Y.fadeDistance.value=d(),b()}),It(()=>{Y.fadeStrength.value=f(),b()}),It(()=>{p()&&(Y.fadeOrigin.value=p(),b())}),It(()=>{Y.cellThickness.value=v(),b()}),It(()=>{Y.sectionThickness.value=m(),b()}),It(()=>{Y.followCamera.value=h(),b()}),It(()=>{Y.infiniteGrid.value=u(),b()}),It(()=>{switch(y()){case"grid":{Y.gridType.value=ee.grid;break}case"lines":{Y.gridType.value=ee.lines,Y.lineGridCoord.value=J[x()];break}case"circular":{Y.gridType.value=ee.circular,Y.circleGridMaxRadius.value=_();break}case"polar":{Y.gridType.value=ee.polar,Y.circleGridMaxRadius.value=_(),Y.polarCellDividers.value=E(),Y.polarSectionDividers.value=M();break}}b()}),so(()=>{I.setFromNormalAndCoplanarPoint(F,V).applyMatrix4(w.matrixWorld);const j=w.material,$=j.uniforms.worldCamProjPosition,U=j.uniforms.worldPlanePosition,Z=j.uniforms.fadeOrigin,K=I.projectPoint(D.current.position,$.value);p()||(Z.value=K),U.value.set(0,0,0).applyMatrix4(w.matrixWorld)},{autoInvalidate:!1}),bt(s,Br({is:w,frustumCulled:!1},()=>T,{get ref(){return S()},set ref(j){S(j)},children:(j,$)=>{var U=fC(),Z=je(U);Dt(Z,()=>bt.ShaderMaterial,(q,W)=>{W(q,{fragmentShader:dC,vertexShader:uC,uniforms:Y,transparent:!0,get side(){return g()}})});var K=gt(Z,2);{var k=q=>{var W=pt(),ne=je(W);Yi(ne,()=>e.children,()=>({ref:w})),Xe(q,W)},H=q=>{var W=pt(),ne=je(W);const ge=Mt(()=>typeof c()=="number"?[c(),c()]:c());Dt(ne,()=>bt.PlaneGeometry,(ye,Se)=>{Se(ye,{get args(){return _e(ge)}})}),Xe(q,W)};Ot(K,q=>{e.children?q(k):q(H,!1)})}Xe(j,U)},$$slots:{default:!0}})),Ln()}const Ls=new du,$n=new L,$r=new L,ln=new Ht,Gg={X:new L(1,0,0),Y:new L(0,1,0),Z:new L(0,0,1)},Rd={type:"change"},Vg={type:"mouseDown",mode:null},Hg={type:"mouseUp",mode:null},Wg={type:"objectChange"};class mC extends fu{constructor(e,t=null){super(void 0,t);const i=new bC(this);this._root=i;const n=new SC;this._gizmo=n,i.add(n);const r=new MC;this._plane=r,i.add(r);const o=this;function a(x,_){let E=_;Object.defineProperty(o,x,{get:function(){return E!==void 0?E:_},set:function(M){E!==M&&(E=M,r[x]=M,n[x]=M,o.dispatchEvent({type:x+"-changed",value:M}),o.dispatchEvent(Rd))}}),o[x]=_,r[x]=_,n[x]=_}a("camera",e),a("object",void 0),a("enabled",!0),a("axis",null),a("mode","translate"),a("translationSnap",null),a("rotationSnap",null),a("scaleSnap",null),a("space","world"),a("size",1),a("dragging",!1),a("showX",!0),a("showY",!0),a("showZ",!0),a("minX",-1/0),a("maxX",1/0),a("minY",-1/0),a("maxY",1/0),a("minZ",-1/0),a("maxZ",1/0);const l=new L,c=new L,h=new Ht,u=new Ht,d=new L,f=new Ht,p=new L,v=new L,m=new L,g=0,y=new L;a("worldPosition",l),a("worldPositionStart",c),a("worldQuaternion",h),a("worldQuaternionStart",u),a("cameraPosition",d),a("cameraQuaternion",f),a("pointStart",p),a("pointEnd",v),a("rotationAxis",m),a("rotationAngle",g),a("eye",y),this._offset=new L,this._startNorm=new L,this._endNorm=new L,this._cameraScale=new L,this._parentPosition=new L,this._parentQuaternion=new Ht,this._parentQuaternionInv=new Ht,this._parentScale=new L,this._worldScaleStart=new L,this._worldQuaternionInv=new Ht,this._worldScale=new L,this._positionStart=new L,this._quaternionStart=new Ht,this._scaleStart=new L,this._getPointer=gC.bind(this),this._onPointerDown=_C.bind(this),this._onPointerHover=vC.bind(this),this._onPointerMove=yC.bind(this),this._onPointerUp=xC.bind(this),t!==null&&this.connect(t)}connect(e){super.connect(e),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointermove",this._onPointerHover),this.domElement.addEventListener("pointerup",this._onPointerUp),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerHover),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.style.touchAction="auto"}getHelper(){return this._root}pointerHover(e){if(this.object===void 0||this.dragging===!0)return;e!==null&&Ls.setFromCamera(e,this.camera);const t=Pd(this._gizmo.picker[this.mode],Ls);t?this.axis=t.object.name:this.axis=null}pointerDown(e){if(!(this.object===void 0||this.dragging===!0||e!=null&&e.button!==0)&&this.axis!==null){e!==null&&Ls.setFromCamera(e,this.camera);const t=Pd(this._plane,Ls,!0);t&&(this.object.updateMatrixWorld(),this.object.parent.updateMatrixWorld(),this._positionStart.copy(this.object.position),this._quaternionStart.copy(this.object.quaternion),this._scaleStart.copy(this.object.scale),this.object.matrixWorld.decompose(this.worldPositionStart,this.worldQuaternionStart,this._worldScaleStart),this.pointStart.copy(t.point).sub(this.worldPositionStart)),this.dragging=!0,Vg.mode=this.mode,this.dispatchEvent(Vg)}}pointerMove(e){const t=this.axis,i=this.mode,n=this.object;let r=this.space;if(i==="scale"?r="local":(t==="E"||t==="XYZE"||t==="XYZ")&&(r="world"),n===void 0||t===null||this.dragging===!1||e!==null&&e.button!==-1)return;e!==null&&Ls.setFromCamera(e,this.camera);const o=Pd(this._plane,Ls,!0);if(o){if(this.pointEnd.copy(o.point).sub(this.worldPositionStart),i==="translate")this._offset.copy(this.pointEnd).sub(this.pointStart),r==="local"&&t!=="XYZ"&&this._offset.applyQuaternion(this._worldQuaternionInv),t.indexOf("X")===-1&&(this._offset.x=0),t.indexOf("Y")===-1&&(this._offset.y=0),t.indexOf("Z")===-1&&(this._offset.z=0),r==="local"&&t!=="XYZ"?this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale):this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale),n.position.copy(this._offset).add(this._positionStart),this.translationSnap&&(r==="local"&&(n.position.applyQuaternion(ln.copy(this._quaternionStart).invert()),t.search("X")!==-1&&(n.position.x=Math.round(n.position.x/this.translationSnap)*this.translationSnap),t.search("Y")!==-1&&(n.position.y=Math.round(n.position.y/this.translationSnap)*this.translationSnap),t.search("Z")!==-1&&(n.position.z=Math.round(n.position.z/this.translationSnap)*this.translationSnap),n.position.applyQuaternion(this._quaternionStart)),r==="world"&&(n.parent&&n.position.add($n.setFromMatrixPosition(n.parent.matrixWorld)),t.search("X")!==-1&&(n.position.x=Math.round(n.position.x/this.translationSnap)*this.translationSnap),t.search("Y")!==-1&&(n.position.y=Math.round(n.position.y/this.translationSnap)*this.translationSnap),t.search("Z")!==-1&&(n.position.z=Math.round(n.position.z/this.translationSnap)*this.translationSnap),n.parent&&n.position.sub($n.setFromMatrixPosition(n.parent.matrixWorld)))),n.position.x=Math.max(this.minX,Math.min(this.maxX,n.position.x)),n.position.y=Math.max(this.minY,Math.min(this.maxY,n.position.y)),n.position.z=Math.max(this.minZ,Math.min(this.maxZ,n.position.z));else if(i==="scale"){if(t.search("XYZ")!==-1){let a=this.pointEnd.length()/this.pointStart.length();this.pointEnd.dot(this.pointStart)<0&&(a*=-1),$r.set(a,a,a)}else $n.copy(this.pointStart),$r.copy(this.pointEnd),$n.applyQuaternion(this._worldQuaternionInv),$r.applyQuaternion(this._worldQuaternionInv),$r.divide($n),t.search("X")===-1&&($r.x=1),t.search("Y")===-1&&($r.y=1),t.search("Z")===-1&&($r.z=1);n.scale.copy(this._scaleStart).multiply($r),this.scaleSnap&&(t.search("X")!==-1&&(n.scale.x=Math.round(n.scale.x/this.scaleSnap)*this.scaleSnap||this.scaleSnap),t.search("Y")!==-1&&(n.scale.y=Math.round(n.scale.y/this.scaleSnap)*this.scaleSnap||this.scaleSnap),t.search("Z")!==-1&&(n.scale.z=Math.round(n.scale.z/this.scaleSnap)*this.scaleSnap||this.scaleSnap))}else if(i==="rotate"){this._offset.copy(this.pointEnd).sub(this.pointStart);const a=20/this.worldPosition.distanceTo($n.setFromMatrixPosition(this.camera.matrixWorld));let l=!1;t==="XYZE"?(this.rotationAxis.copy(this._offset).cross(this.eye).normalize(),this.rotationAngle=this._offset.dot($n.copy(this.rotationAxis).cross(this.eye))*a):(t==="X"||t==="Y"||t==="Z")&&(this.rotationAxis.copy(Gg[t]),$n.copy(Gg[t]),r==="local"&&$n.applyQuaternion(this.worldQuaternion),$n.cross(this.eye),$n.length()===0?l=!0:this.rotationAngle=this._offset.dot($n.normalize())*a),(t==="E"||l)&&(this.rotationAxis.copy(this.eye),this.rotationAngle=this.pointEnd.angleTo(this.pointStart),this._startNorm.copy(this.pointStart).normalize(),this._endNorm.copy(this.pointEnd).normalize(),this.rotationAngle*=this._endNorm.cross(this._startNorm).dot(this.eye)<0?1:-1),this.rotationSnap&&(this.rotationAngle=Math.round(this.rotationAngle/this.rotationSnap)*this.rotationSnap),r==="local"&&t!=="E"&&t!=="XYZE"?(n.quaternion.copy(this._quaternionStart),n.quaternion.multiply(ln.setFromAxisAngle(this.rotationAxis,this.rotationAngle)).normalize()):(this.rotationAxis.applyQuaternion(this._parentQuaternionInv),n.quaternion.copy(ln.setFromAxisAngle(this.rotationAxis,this.rotationAngle)),n.quaternion.multiply(this._quaternionStart).normalize())}this.dispatchEvent(Rd),this.dispatchEvent(Wg)}}pointerUp(e){e!==null&&e.button!==0||(this.dragging&&this.axis!==null&&(Hg.mode=this.mode,this.dispatchEvent(Hg)),this.dragging=!1,this.axis=null)}dispose(){this.disconnect(),this._root.dispose()}attach(e){return this.object=e,this._root.visible=!0,this}detach(){return this.object=void 0,this.axis=null,this._root.visible=!1,this}reset(){this.enabled&&this.dragging&&(this.object.position.copy(this._positionStart),this.object.quaternion.copy(this._quaternionStart),this.object.scale.copy(this._scaleStart),this.dispatchEvent(Rd),this.dispatchEvent(Wg),this.pointStart.copy(this.pointEnd))}getRaycaster(){return Ls}getMode(){return this.mode}setMode(e){this.mode=e}setTranslationSnap(e){this.translationSnap=e}setRotationSnap(e){this.rotationSnap=e}setScaleSnap(e){this.scaleSnap=e}setSize(e){this.size=e}setSpace(e){this.space=e}}function gC(s){if(this.domElement.ownerDocument.pointerLockElement)return{x:0,y:0,button:s.button};{const e=this.domElement.getBoundingClientRect();return{x:(s.clientX-e.left)/e.width*2-1,y:-(s.clientY-e.top)/e.height*2+1,button:s.button}}}function vC(s){if(this.enabled)switch(s.pointerType){case"mouse":case"pen":this.pointerHover(this._getPointer(s));break}}function _C(s){this.enabled&&(document.pointerLockElement||this.domElement.setPointerCapture(s.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.pointerHover(this._getPointer(s)),this.pointerDown(this._getPointer(s)))}function yC(s){this.enabled&&this.pointerMove(this._getPointer(s))}function xC(s){this.enabled&&(this.domElement.releasePointerCapture(s.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.pointerUp(this._getPointer(s)))}function Pd(s,e,t){const i=e.intersectObject(s,!0);for(let n=0;n<i.length;n++)if(i[n].object.visible||t)return i[n];return!1}const Ec=new Ei,nn=new L(0,1,0),Xg=new L(0,0,0),Yg=new st,Tc=new Ht,Bc=new Ht,cr=new L,jg=new st,wa=new L(1,0,0),Fs=new L(0,1,0),Ea=new L(0,0,1),Ac=new L,_a=new L,ya=new L;class bC extends Lt{constructor(e){super(),this.isTransformControlsRoot=!0,this.controls=e,this.visible=!1}updateMatrixWorld(e){const t=this.controls;t.object!==void 0&&(t.object.updateMatrixWorld(),t.object.parent===null?console.error("TransformControls: The attached 3D object must be a part of the scene graph."):t.object.parent.matrixWorld.decompose(t._parentPosition,t._parentQuaternion,t._parentScale),t.object.matrixWorld.decompose(t.worldPosition,t.worldQuaternion,t._worldScale),t._parentQuaternionInv.copy(t._parentQuaternion).invert(),t._worldQuaternionInv.copy(t.worldQuaternion).invert()),t.camera.updateMatrixWorld(),t.camera.matrixWorld.decompose(t.cameraPosition,t.cameraQuaternion,t._cameraScale),t.camera.isOrthographicCamera?t.camera.getWorldDirection(t.eye).negate():t.eye.copy(t.cameraPosition).sub(t.worldPosition).normalize(),super.updateMatrixWorld(e)}dispose(){this.traverse(function(e){e.geometry&&e.geometry.dispose(),e.material&&e.material.dispose()})}}class SC extends Lt{constructor(){super(),this.isTransformControlsGizmo=!0,this.type="TransformControlsGizmo";const e=new Bn({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),t=new wn({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),i=e.clone();i.opacity=.15;const n=t.clone();n.opacity=.5;const r=e.clone();r.color.setHex(16711680);const o=e.clone();o.color.setHex(65280);const a=e.clone();a.color.setHex(255);const l=e.clone();l.color.setHex(16711680),l.opacity=.5;const c=e.clone();c.color.setHex(65280),c.opacity=.5;const h=e.clone();h.color.setHex(255),h.opacity=.5;const u=e.clone();u.opacity=.25;const d=e.clone();d.color.setHex(16776960),d.opacity=.25,e.clone().color.setHex(16776960);const p=e.clone();p.color.setHex(7895160);const v=new An(0,.04,.1,12);v.translate(0,.05,0);const m=new vn(.08,.08,.08);m.translate(0,.04,0);const g=new yt;g.setAttribute("position",new qe([0,0,0,1,0,0],3));const y=new An(.0075,.0075,.5,3);y.translate(0,.25,0);function x(J,O){const ee=new Ir(J,.0075,3,64,O*Math.PI*2);return ee.rotateY(Math.PI/2),ee.rotateX(Math.PI/2),ee}function _(){const J=new yt;return J.setAttribute("position",new qe([0,0,0,1,1,1],3)),J}const E={X:[[new ke(v,r),[.5,0,0],[0,0,-Math.PI/2]],[new ke(v,r),[-.5,0,0],[0,0,Math.PI/2]],[new ke(y,r),[0,0,0],[0,0,-Math.PI/2]]],Y:[[new ke(v,o),[0,.5,0]],[new ke(v,o),[0,-.5,0],[Math.PI,0,0]],[new ke(y,o)]],Z:[[new ke(v,a),[0,0,.5],[Math.PI/2,0,0]],[new ke(v,a),[0,0,-.5],[-Math.PI/2,0,0]],[new ke(y,a),null,[Math.PI/2,0,0]]],XYZ:[[new ke(new Ur(.1,0),u.clone()),[0,0,0]]],XY:[[new ke(new vn(.15,.15,.01),h.clone()),[.15,.15,0]]],YZ:[[new ke(new vn(.15,.15,.01),l.clone()),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new ke(new vn(.15,.15,.01),c.clone()),[.15,0,.15],[-Math.PI/2,0,0]]]},M={X:[[new ke(new An(.2,0,.6,4),i),[.3,0,0],[0,0,-Math.PI/2]],[new ke(new An(.2,0,.6,4),i),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new ke(new An(.2,0,.6,4),i),[0,.3,0]],[new ke(new An(.2,0,.6,4),i),[0,-.3,0],[0,0,Math.PI]]],Z:[[new ke(new An(.2,0,.6,4),i),[0,0,.3],[Math.PI/2,0,0]],[new ke(new An(.2,0,.6,4),i),[0,0,-.3],[-Math.PI/2,0,0]]],XYZ:[[new ke(new Ur(.2,0),i)]],XY:[[new ke(new vn(.2,.2,.01),i),[.15,.15,0]]],YZ:[[new ke(new vn(.2,.2,.01),i),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new ke(new vn(.2,.2,.01),i),[.15,0,.15],[-Math.PI/2,0,0]]]},S={START:[[new ke(new Ur(.01,2),n),null,null,null,"helper"]],END:[[new ke(new Ur(.01,2),n),null,null,null,"helper"]],DELTA:[[new Yn(_(),n),null,null,null,"helper"]],X:[[new Yn(g,n.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new Yn(g,n.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new Yn(g,n.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]},T={XYZE:[[new ke(x(.5,1),p),null,[0,Math.PI/2,0]]],X:[[new ke(x(.5,.5),r)]],Y:[[new ke(x(.5,.5),o),null,[0,0,-Math.PI/2]]],Z:[[new ke(x(.5,.5),a),null,[0,Math.PI/2,0]]],E:[[new ke(x(.75,1),d),null,[0,Math.PI/2,0]]]},w={AXIS:[[new Yn(g,n.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]]},b={XYZE:[[new ke(new ao(.25,10,8),i)]],X:[[new ke(new Ir(.5,.1,4,24),i),[0,0,0],[0,-Math.PI/2,-Math.PI/2]]],Y:[[new ke(new Ir(.5,.1,4,24),i),[0,0,0],[Math.PI/2,0,0]]],Z:[[new ke(new Ir(.5,.1,4,24),i),[0,0,0],[0,0,-Math.PI/2]]],E:[[new ke(new Ir(.75,.1,2,24),i)]]},D={X:[[new ke(m,r),[.5,0,0],[0,0,-Math.PI/2]],[new ke(y,r),[0,0,0],[0,0,-Math.PI/2]],[new ke(m,r),[-.5,0,0],[0,0,Math.PI/2]]],Y:[[new ke(m,o),[0,.5,0]],[new ke(y,o)],[new ke(m,o),[0,-.5,0],[0,0,Math.PI]]],Z:[[new ke(m,a),[0,0,.5],[Math.PI/2,0,0]],[new ke(y,a),[0,0,0],[Math.PI/2,0,0]],[new ke(m,a),[0,0,-.5],[-Math.PI/2,0,0]]],XY:[[new ke(new vn(.15,.15,.01),h),[.15,.15,0]]],YZ:[[new ke(new vn(.15,.15,.01),l),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new ke(new vn(.15,.15,.01),c),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new ke(new vn(.1,.1,.1),u.clone())]]},I={X:[[new ke(new An(.2,0,.6,4),i),[.3,0,0],[0,0,-Math.PI/2]],[new ke(new An(.2,0,.6,4),i),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new ke(new An(.2,0,.6,4),i),[0,.3,0]],[new ke(new An(.2,0,.6,4),i),[0,-.3,0],[0,0,Math.PI]]],Z:[[new ke(new An(.2,0,.6,4),i),[0,0,.3],[Math.PI/2,0,0]],[new ke(new An(.2,0,.6,4),i),[0,0,-.3],[-Math.PI/2,0,0]]],XY:[[new ke(new vn(.2,.2,.01),i),[.15,.15,0]]],YZ:[[new ke(new vn(.2,.2,.01),i),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new ke(new vn(.2,.2,.01),i),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new ke(new vn(.2,.2,.2),i),[0,0,0]]]},F={X:[[new Yn(g,n.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new Yn(g,n.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new Yn(g,n.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]};function V(J){const O=new Lt;for(const ee in J)for(let Y=J[ee].length;Y--;){const j=J[ee][Y][0].clone(),$=J[ee][Y][1],U=J[ee][Y][2],Z=J[ee][Y][3],K=J[ee][Y][4];j.name=ee,j.tag=K,$&&j.position.set($[0],$[1],$[2]),U&&j.rotation.set(U[0],U[1],U[2]),Z&&j.scale.set(Z[0],Z[1],Z[2]),j.updateMatrix();const k=j.geometry.clone();k.applyMatrix4(j.matrix),j.geometry=k,j.renderOrder=1/0,j.position.set(0,0,0),j.rotation.set(0,0,0),j.scale.set(1,1,1),O.add(j)}return O}this.gizmo={},this.picker={},this.helper={},this.add(this.gizmo.translate=V(E)),this.add(this.gizmo.rotate=V(T)),this.add(this.gizmo.scale=V(D)),this.add(this.picker.translate=V(M)),this.add(this.picker.rotate=V(b)),this.add(this.picker.scale=V(I)),this.add(this.helper.translate=V(S)),this.add(this.helper.rotate=V(w)),this.add(this.helper.scale=V(F)),this.picker.translate.visible=!1,this.picker.rotate.visible=!1,this.picker.scale.visible=!1}updateMatrixWorld(e){const i=(this.mode==="scale"?"local":this.space)==="local"?this.worldQuaternion:Bc;this.gizmo.translate.visible=this.mode==="translate",this.gizmo.rotate.visible=this.mode==="rotate",this.gizmo.scale.visible=this.mode==="scale",this.helper.translate.visible=this.mode==="translate",this.helper.rotate.visible=this.mode==="rotate",this.helper.scale.visible=this.mode==="scale";let n=[];n=n.concat(this.picker[this.mode].children),n=n.concat(this.gizmo[this.mode].children),n=n.concat(this.helper[this.mode].children);for(let r=0;r<n.length;r++){const o=n[r];o.visible=!0,o.rotation.set(0,0,0),o.position.copy(this.worldPosition);let a;if(this.camera.isOrthographicCamera?a=(this.camera.top-this.camera.bottom)/this.camera.zoom:a=this.worldPosition.distanceTo(this.cameraPosition)*Math.min(1.9*Math.tan(Math.PI*this.camera.fov/360)/this.camera.zoom,7),o.scale.set(1,1,1).multiplyScalar(a*this.size/4),o.tag==="helper"){o.visible=!1,o.name==="AXIS"?(o.visible=!!this.axis,this.axis==="X"&&(ln.setFromEuler(Ec.set(0,0,0)),o.quaternion.copy(i).multiply(ln),Math.abs(nn.copy(wa).applyQuaternion(i).dot(this.eye))>.9&&(o.visible=!1)),this.axis==="Y"&&(ln.setFromEuler(Ec.set(0,0,Math.PI/2)),o.quaternion.copy(i).multiply(ln),Math.abs(nn.copy(Fs).applyQuaternion(i).dot(this.eye))>.9&&(o.visible=!1)),this.axis==="Z"&&(ln.setFromEuler(Ec.set(0,Math.PI/2,0)),o.quaternion.copy(i).multiply(ln),Math.abs(nn.copy(Ea).applyQuaternion(i).dot(this.eye))>.9&&(o.visible=!1)),this.axis==="XYZE"&&(ln.setFromEuler(Ec.set(0,Math.PI/2,0)),nn.copy(this.rotationAxis),o.quaternion.setFromRotationMatrix(Yg.lookAt(Xg,nn,Fs)),o.quaternion.multiply(ln),o.visible=this.dragging),this.axis==="E"&&(o.visible=!1)):o.name==="START"?(o.position.copy(this.worldPositionStart),o.visible=this.dragging):o.name==="END"?(o.position.copy(this.worldPosition),o.visible=this.dragging):o.name==="DELTA"?(o.position.copy(this.worldPositionStart),o.quaternion.copy(this.worldQuaternionStart),$n.set(1e-10,1e-10,1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1),$n.applyQuaternion(this.worldQuaternionStart.clone().invert()),o.scale.copy($n),o.visible=this.dragging):(o.quaternion.copy(i),this.dragging?o.position.copy(this.worldPositionStart):o.position.copy(this.worldPosition),this.axis&&(o.visible=this.axis.search(o.name)!==-1));continue}o.quaternion.copy(i),this.mode==="translate"||this.mode==="scale"?(o.name==="X"&&Math.abs(nn.copy(wa).applyQuaternion(i).dot(this.eye))>.99&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="Y"&&Math.abs(nn.copy(Fs).applyQuaternion(i).dot(this.eye))>.99&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="Z"&&Math.abs(nn.copy(Ea).applyQuaternion(i).dot(this.eye))>.99&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="XY"&&Math.abs(nn.copy(Ea).applyQuaternion(i).dot(this.eye))<.2&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="YZ"&&Math.abs(nn.copy(wa).applyQuaternion(i).dot(this.eye))<.2&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="XZ"&&Math.abs(nn.copy(Fs).applyQuaternion(i).dot(this.eye))<.2&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1)):this.mode==="rotate"&&(Tc.copy(i),nn.copy(this.eye).applyQuaternion(ln.copy(i).invert()),o.name.search("E")!==-1&&o.quaternion.setFromRotationMatrix(Yg.lookAt(this.eye,Xg,Fs)),o.name==="X"&&(ln.setFromAxisAngle(wa,Math.atan2(-nn.y,nn.z)),ln.multiplyQuaternions(Tc,ln),o.quaternion.copy(ln)),o.name==="Y"&&(ln.setFromAxisAngle(Fs,Math.atan2(nn.x,nn.z)),ln.multiplyQuaternions(Tc,ln),o.quaternion.copy(ln)),o.name==="Z"&&(ln.setFromAxisAngle(Ea,Math.atan2(nn.y,nn.x)),ln.multiplyQuaternions(Tc,ln),o.quaternion.copy(ln))),o.visible=o.visible&&(o.name.indexOf("X")===-1||this.showX),o.visible=o.visible&&(o.name.indexOf("Y")===-1||this.showY),o.visible=o.visible&&(o.name.indexOf("Z")===-1||this.showZ),o.visible=o.visible&&(o.name.indexOf("E")===-1||this.showX&&this.showY&&this.showZ),o.material._color=o.material._color||o.material.color.clone(),o.material._opacity=o.material._opacity||o.material.opacity,o.material.color.copy(o.material._color),o.material.opacity=o.material._opacity,this.enabled&&this.axis&&(o.name===this.axis||this.axis.split("").some(function(l){return o.name===l}))&&(o.material.color.setHex(16776960),o.material.opacity=1)}super.updateMatrixWorld(e)}}class MC extends ke{constructor(){super(new or(1e5,1e5,2,2),new Bn({visible:!1,wireframe:!0,side:xi,transparent:!0,opacity:.1,toneMapped:!1})),this.isTransformControlsPlane=!0,this.type="TransformControlsPlane"}updateMatrixWorld(e){let t=this.space;switch(this.position.copy(this.worldPosition),this.mode==="scale"&&(t="local"),Ac.copy(wa).applyQuaternion(t==="local"?this.worldQuaternion:Bc),_a.copy(Fs).applyQuaternion(t==="local"?this.worldQuaternion:Bc),ya.copy(Ea).applyQuaternion(t==="local"?this.worldQuaternion:Bc),nn.copy(_a),this.mode){case"translate":case"scale":switch(this.axis){case"X":nn.copy(this.eye).cross(Ac),cr.copy(Ac).cross(nn);break;case"Y":nn.copy(this.eye).cross(_a),cr.copy(_a).cross(nn);break;case"Z":nn.copy(this.eye).cross(ya),cr.copy(ya).cross(nn);break;case"XY":cr.copy(ya);break;case"YZ":cr.copy(Ac);break;case"XZ":nn.copy(ya),cr.copy(_a);break;case"XYZ":case"E":cr.set(0,0,0);break}break;case"rotate":default:cr.set(0,0,0)}cr.length()===0?this.quaternion.copy(this.cameraQuaternion):(jg.lookAt($n.set(0,0,0),cr,nn),this.quaternion.setFromRotationMatrix(jg)),super.updateMatrixWorld(e)}}const F_=()=>n2("threlte-controls",{orbitControls:ti(void 0),trackballControls:ti(void 0)});var wC=Jt("<!> <!>",1);function EC(s,e){Dn(e,!0);const[t,i]=al(),n=()=>js(h,"$camera",t);let r=He(e,"autoPauseOrbitControls",3,!0),o=He(e,"autoPauseTrackballControls",3,!0),a=He(e,"controls",15),l=He(e,"group",15),c=yr(e,["$$slots","$$events","$$legacy","autoPauseOrbitControls","autoPauseTrackballControls","object","controls","group","children"]);const{camera:h,dom:u,invalidate:d,scene:f}=Gi(),{orbitControls:p,trackballControls:v}=F_(),m=dn(!1),g=ti(r()??!0);It(()=>g.set(r()??!0));const y=ti(o()??!0);It(()=>y.set(o()??!0)),ei([p,m,g],([I,F,V])=>{if(!(!I||!I.enabled&&F))return I.enabled=!(F&&V),()=>{I.enabled=!0}}),ei([v,m,y],([I,F,V])=>{if(!(!I||!I.enabled&&F))return I.enabled=!(F&&V),()=>{I.enabled=!0}});const x=new Oi;let _=Mt(()=>new mC(n(),u));It(()=>{var I;return(I=_e(_))==null||I.attach(e.object??x),()=>{var F;return(F=_e(_))==null?void 0:F.detach()}});const E=["enabled","axis","mode","translationSnap","rotationSnap","scaleSnap","space","size","showX","showY","showZ","visible","onmouseDown","onmouseUp","onobjectChange"];let M=Ni(rs({})),S=Ni(rs({}));It(()=>{Si(M,{},!0),Si(S,{},!0),Object.keys(c).forEach(I=>{It(()=>{E.includes(I)?_e(M)[I]=c[I]:_e(S)[I]=c[I]})})});const T=I=>{var F;d(),_e(_).dragging&&!m.current?m.set(!0):!_e(_).dragging&&m.current&&m.set(!1),(F=e.onchange)==null||F.call(e,I)};var w=wC(),b=je(w);bt(b,Br({get is(){return _e(_)},onchange:T},()=>_e(M),{attach:({ref:I})=>{const F=I.getHelper();return f.add(F),()=>{f.remove(F)}},dispose:!1,oncreate:I=>()=>I.dispose(),get ref(){return a()},set ref(I){a(I)}}));var D=gt(b,2);bt(D,Br({is:x},()=>_e(S),{get ref(){return l()},set ref(I){l(I)},children:(I,F)=>{var V=pt(),J=je(V);{var O=ee=>{var Y=pt(),j=je(Y);Yi(j,()=>e.children,()=>({ref:x})),Xe(ee,Y)};Ot(J,ee=>{e.children&&ee(O)})}Xe(I,V)},$$slots:{default:!0}})),Xe(s,w),Ln(),i()}function TC(s,e){Dn(e,!0);const[t,i]=al(),n=()=>js(a,"$parent",t);let r=He(e,"ref",15),o=yr(e,["$$slots","$$events","$$legacy","ref","children"]);const a=dp(),{dom:l,invalidate:c}=Gi();if(!Ui(n(),"Camera"))throw new Error("Parent missing: <OrbitControls> need to be a child of a <Camera>");const h=new O_(n(),l),{orbitControls:u}=F_(),{start:d,stop:f}=so(()=>{h.update()},{autoStart:!1,autoInvalidate:!1});It(()=>{e.autoRotate||e.enableDamping?d():f()}),It(()=>{const p=v=>{var m;c(),(m=e.onchange)==null||m.call(e,v)};return u.set(h),h.addEventListener("change",p),()=>{u.set(void 0),h.removeEventListener("change",p)}}),bt(s,Br({is:h},()=>o,{get ref(){return r()},set ref(p){r(p)},children:(p,v)=>{var m=pt(),g=je(m);Yi(g,()=>e.children??kr,()=>({ref:h})),Xe(p,m)},$$slots:{default:!0}})),Ln(),i()}new st;new st;new ke;function qg(s,e){Dn(e,!0);let t=He(e,"points",19,()=>[]),i=He(e,"shape",3,"none"),n=He(e,"shapeFunction",7,()=>1),r=He(e,"ref",15),o=t().length;const{invalidate:a}=Gi(),l=new Ct(new Float32Array(o*6),3),c=new Ct(new Float32Array(o*6),3),h=new Ct(new Float32Array(o*6),3),u=new Ct(new Float32Array(o*2),1),d=new Ct(new Float32Array(o*2),1),f=new Ct(new Float32Array(o*2),1),p=new Ct(new Float32Array(o*4),2),v=new Ct(new Uint16Array(o*6),1);i()==="taper"&&n(y=>1*Math.pow(4*y*(1-y),1));for(let y=0,x=0,_=0,E=0;y<o;y+=1,x+=2,_+=4,E+=6){u.setX(x,y/t().length),u.setX(x+1,y/t().length),d.setX(x,1),d.setX(x+1,-1);const M=i()==="none"?1:n()(y/(o-1));if(f.setX(x,M),f.setX(x+1,M),p.setXYZW(x,y/(o-1),0,y/(o-1),1),y<o-1){const S=y*2;v.setX(E+0,S+0),v.setX(E+1,S+1),v.setX(E+2,S+2),v.setX(E+3,S+2),v.setX(E+4,S+1),v.setX(E+5,S+3)}}const m=new yt;m.setAttribute("position",l),m.setAttribute("previous",c),m.setAttribute("next",h),m.setAttribute("counters",u),m.setAttribute("side",d),m.setAttribute("width",f),m.setAttribute("uv",p),m.setIndex(v);const g=y=>{if(y.length===0||y.length!==o)return;let x=0,_=0,E=0;const M=y[0];c.setXYZ(_,M.x,M.y,M.z),_+=1,c.setXYZ(_,M.x,M.y,M.z),_+=1;for(let T=0;T<o;T++){const w=y[T];l.setXYZ(x,w.x,w.y,w.z),x+=1,l.setXYZ(x,w.x,w.y,w.z),x+=1,T<o-1&&(c.setXYZ(_,w.x,w.y,w.z),_+=1,c.setXYZ(_,w.x,w.y,w.z),_+=1),T>0&&T+1<=o&&(h.setXYZ(E,w.x,w.y,w.z),E+=1,h.setXYZ(E,w.x,w.y,w.z),E+=1)}const S=y[o-1];h.setXYZ(E,S.x,S.y,S.z),E+=1,h.setXYZ(E,S.x,S.y,S.z),E+=1,l.needsUpdate=!0,c.needsUpdate=!0,h.needsUpdate=!0,m.computeBoundingSphere(),a()};It(()=>g(t())),bt(s,Br({is:m},()=>e.props,{get ref(){return r()},set ref(y){r(y)},children:(y,x)=>{var _=pt(),E=je(_);Yi(E,()=>e.children??kr,()=>({ref:m})),Xe(y,_)},$$slots:{default:!0}})),Ln()}`${_t.logdepthbuf_pars_vertex}${_t.fog_pars_vertex}${_t.logdepthbuf_vertex}${_t.fog_vertex}`;function k_(s,e){Dn(e,!0);const[t,i]=al(),n=()=>js(h,"$camera",t);let r=He(e,"follow",3,!0),o=He(e,"ref",15),a=yr(e,["$$slots","$$events","$$legacy","follow","ref","children"]);const l=new Oi,c=new Oi,{camera:h,renderStage:u}=Gi(),d=new Ht;let f=Mt(()=>r()===!0?n():r()===!1?void 0:r());const p=t2("<Billboard>",{before:u}),{start:v,stop:m}=so(()=>{var g;c.updateMatrix(),c.updateWorldMatrix(!1,!1),c.getWorldQuaternion(d),(g=_e(f))==null||g.getWorldQuaternion(l.quaternion).premultiply(d.invert())},{autoStart:!1,stage:p});It(()=>{r()?v():m()}),bt(s,Br({is:c},()=>a,{get ref(){return o()},set ref(g){o(g)},children:(g,y)=>{bt(g,{is:l,children:(x,_)=>{var E=pt(),M=je(E);Yi(M,()=>e.children??kr,()=>({ref:c})),Xe(x,E)},$$slots:{default:!0}})},$$slots:{default:!0}})),Ln(),i()}`${_t.tonemapping_fragment}${_t.colorspace_fragment}`;`${_t.tonemapping_fragment}${_t.colorspace_fragment}`;const AC=`

// A stack of uint32 indices can can store the indices for
// a perfectly balanced tree with a depth up to 31. Lower stack
// depth gets higher performance.
//
// However not all trees are balanced. Best value to set this to
// is the trees max depth.
#ifndef BVH_STACK_DEPTH
#define BVH_STACK_DEPTH 60
#endif

#ifndef INFINITY
#define INFINITY 1e20
#endif

// Utilities
uvec4 uTexelFetch1D( usampler2D tex, uint index ) {

	uint width = uint( textureSize( tex, 0 ).x );
	uvec2 uv;
	uv.x = index % width;
	uv.y = index / width;

	return texelFetch( tex, ivec2( uv ), 0 );

}

ivec4 iTexelFetch1D( isampler2D tex, uint index ) {

	uint width = uint( textureSize( tex, 0 ).x );
	uvec2 uv;
	uv.x = index % width;
	uv.y = index / width;

	return texelFetch( tex, ivec2( uv ), 0 );

}

vec4 texelFetch1D( sampler2D tex, uint index ) {

	uint width = uint( textureSize( tex, 0 ).x );
	uvec2 uv;
	uv.x = index % width;
	uv.y = index / width;

	return texelFetch( tex, ivec2( uv ), 0 );

}

vec4 textureSampleBarycoord( sampler2D tex, vec3 barycoord, uvec3 faceIndices ) {

	return
		barycoord.x * texelFetch1D( tex, faceIndices.x ) +
		barycoord.y * texelFetch1D( tex, faceIndices.y ) +
		barycoord.z * texelFetch1D( tex, faceIndices.z );

}

void ndcToCameraRay(
	vec2 coord, mat4 cameraWorld, mat4 invProjectionMatrix,
	out vec3 rayOrigin, out vec3 rayDirection
) {

	// get camera look direction and near plane for camera clipping
	vec4 lookDirection = cameraWorld * vec4( 0.0, 0.0, - 1.0, 0.0 );
	vec4 nearVector = invProjectionMatrix * vec4( 0.0, 0.0, - 1.0, 1.0 );
	float near = abs( nearVector.z / nearVector.w );

	// get the camera direction and position from camera matrices
	vec4 origin = cameraWorld * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec4 direction = invProjectionMatrix * vec4( coord, 0.5, 1.0 );
	direction /= direction.w;
	direction = cameraWorld * direction - origin;

	// slide the origin along the ray until it sits at the near clip plane position
	origin.xyz += direction.xyz * near / dot( direction, lookDirection );

	rayOrigin = origin.xyz;
	rayDirection = direction.xyz;

}
`,CC=`

#ifndef TRI_INTERSECT_EPSILON
#define TRI_INTERSECT_EPSILON 1e-5
#endif

// Raycasting
bool intersectsBounds( vec3 rayOrigin, vec3 rayDirection, vec3 boundsMin, vec3 boundsMax, out float dist ) {

	// https://www.reddit.com/r/opengl/comments/8ntzz5/fast_glsl_ray_box_intersection/
	// https://tavianator.com/2011/ray_box.html
	vec3 invDir = 1.0 / rayDirection;

	// find intersection distances for each plane
	vec3 tMinPlane = invDir * ( boundsMin - rayOrigin );
	vec3 tMaxPlane = invDir * ( boundsMax - rayOrigin );

	// get the min and max distances from each intersection
	vec3 tMinHit = min( tMaxPlane, tMinPlane );
	vec3 tMaxHit = max( tMaxPlane, tMinPlane );

	// get the furthest hit distance
	vec2 t = max( tMinHit.xx, tMinHit.yz );
	float t0 = max( t.x, t.y );

	// get the minimum hit distance
	t = min( tMaxHit.xx, tMaxHit.yz );
	float t1 = min( t.x, t.y );

	// set distance to 0.0 if the ray starts inside the box
	dist = max( t0, 0.0 );

	return t1 >= dist;

}

bool intersectsTriangle(
	vec3 rayOrigin, vec3 rayDirection, vec3 a, vec3 b, vec3 c,
	out vec3 barycoord, out vec3 norm, out float dist, out float side
) {

	// https://stackoverflow.com/questions/42740765/intersection-between-line-and-triangle-in-3d
	vec3 edge1 = b - a;
	vec3 edge2 = c - a;
	norm = cross( edge1, edge2 );

	float det = - dot( rayDirection, norm );
	float invdet = 1.0 / det;

	vec3 AO = rayOrigin - a;
	vec3 DAO = cross( AO, rayDirection );

	vec4 uvt;
	uvt.x = dot( edge2, DAO ) * invdet;
	uvt.y = - dot( edge1, DAO ) * invdet;
	uvt.z = dot( AO, norm ) * invdet;
	uvt.w = 1.0 - uvt.x - uvt.y;

	// set the hit information
	barycoord = uvt.wxy; // arranged in A, B, C order
	dist = uvt.z;
	side = sign( det );
	norm = side * normalize( norm );

	// add an epsilon to avoid misses between triangles
	uvt += vec4( TRI_INTERSECT_EPSILON );

	return all( greaterThanEqual( uvt, vec4( 0.0 ) ) );

}

bool intersectTriangles(
	// geometry info and triangle range
	sampler2D positionAttr, usampler2D indexAttr, uint offset, uint count,

	// ray
	vec3 rayOrigin, vec3 rayDirection,

	// outputs
	inout float minDistance, inout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord,
	inout float side, inout float dist
) {

	bool found = false;
	vec3 localBarycoord, localNormal;
	float localDist, localSide;
	for ( uint i = offset, l = offset + count; i < l; i ++ ) {

		uvec3 indices = uTexelFetch1D( indexAttr, i ).xyz;
		vec3 a = texelFetch1D( positionAttr, indices.x ).rgb;
		vec3 b = texelFetch1D( positionAttr, indices.y ).rgb;
		vec3 c = texelFetch1D( positionAttr, indices.z ).rgb;

		if (
			intersectsTriangle( rayOrigin, rayDirection, a, b, c, localBarycoord, localNormal, localDist, localSide )
			&& localDist < minDistance
		) {

			found = true;
			minDistance = localDist;

			faceIndices = uvec4( indices.xyz, i );
			faceNormal = localNormal;

			side = localSide;
			barycoord = localBarycoord;
			dist = localDist;

		}

	}

	return found;

}

bool intersectsBVHNodeBounds( vec3 rayOrigin, vec3 rayDirection, sampler2D bvhBounds, uint currNodeIndex, out float dist ) {

	uint cni2 = currNodeIndex * 2u;
	vec3 boundsMin = texelFetch1D( bvhBounds, cni2 ).xyz;
	vec3 boundsMax = texelFetch1D( bvhBounds, cni2 + 1u ).xyz;
	return intersectsBounds( rayOrigin, rayDirection, boundsMin, boundsMax, dist );

}

// use a macro to hide the fact that we need to expand the struct into separate fields
#define	bvhIntersectFirstHit(		bvh,		rayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist	)	_bvhIntersectFirstHit(		bvh.position, bvh.index, bvh.bvhBounds, bvh.bvhContents,		rayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist	)

bool _bvhIntersectFirstHit(
	// bvh info
	sampler2D bvh_position, usampler2D bvh_index, sampler2D bvh_bvhBounds, usampler2D bvh_bvhContents,

	// ray
	vec3 rayOrigin, vec3 rayDirection,

	// output variables split into separate variables due to output precision
	inout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord,
	inout float side, inout float dist
) {

	// stack needs to be twice as long as the deepest tree we expect because
	// we push both the left and right child onto the stack every traversal
	int ptr = 0;
	uint stack[ BVH_STACK_DEPTH ];
	stack[ 0 ] = 0u;

	float triangleDistance = INFINITY;
	bool found = false;
	while ( ptr > - 1 && ptr < BVH_STACK_DEPTH ) {

		uint currNodeIndex = stack[ ptr ];
		ptr --;

		// check if we intersect the current bounds
		float boundsHitDistance;
		if (
			! intersectsBVHNodeBounds( rayOrigin, rayDirection, bvh_bvhBounds, currNodeIndex, boundsHitDistance )
			|| boundsHitDistance > triangleDistance
		) {

			continue;

		}

		uvec2 boundsInfo = uTexelFetch1D( bvh_bvhContents, currNodeIndex ).xy;
		bool isLeaf = bool( boundsInfo.x & 0xffff0000u );

		if ( isLeaf ) {

			uint count = boundsInfo.x & 0x0000ffffu;
			uint offset = boundsInfo.y;

			found = intersectTriangles(
				bvh_position, bvh_index, offset, count,
				rayOrigin, rayDirection, triangleDistance,
				faceIndices, faceNormal, barycoord, side, dist
			) || found;

		} else {

			uint leftIndex = currNodeIndex + 1u;
			uint splitAxis = boundsInfo.x & 0x0000ffffu;
			uint rightIndex = boundsInfo.y;

			bool leftToRight = rayDirection[ splitAxis ] >= 0.0;
			uint c1 = leftToRight ? leftIndex : rightIndex;
			uint c2 = leftToRight ? rightIndex : leftIndex;

			// set c2 in the stack so we traverse it later. We need to keep track of a pointer in
			// the stack while we traverse. The second pointer added is the one that will be
			// traversed first
			ptr ++;
			stack[ ptr ] = c2;

			ptr ++;
			stack[ ptr ] = c1;

		}

	}

	return found;

}
`,RC=`
struct BVH {

	usampler2D index;
	sampler2D position;

	sampler2D bvhBounds;
	usampler2D bvhContents;

};
`,PC=RC,IC=`
	${AC}
	${CC}
`;`${PC}${IC}${_t.tonemapping_fragment}${_t.colorspace_fragment}`;function DC(){var s=Object.create(null);function e(n,r){var o=n.id,a=n.name,l=n.dependencies;l===void 0&&(l=[]);var c=n.init;c===void 0&&(c=function(){});var h=n.getTransferables;if(h===void 0&&(h=null),!s[o])try{l=l.map(function(d){return d&&d.isWorkerModule&&(e(d,function(f){if(f instanceof Error)throw f}),d=s[d.id].value),d}),c=i("<"+a+">.init",c),h&&(h=i("<"+a+">.getTransferables",h));var u=null;typeof c=="function"?u=c.apply(void 0,l):console.error("worker module init function failed to rehydrate"),s[o]={id:o,value:u,getTransferables:h},r(u)}catch(d){d&&d.noLog||console.error(d),r(d)}}function t(n,r){var o,a=n.id,l=n.args;(!s[a]||typeof s[a].value!="function")&&r(new Error("Worker module "+a+": not found or its 'init' did not return a function"));try{var c=(o=s[a]).value.apply(o,l);c&&typeof c.then=="function"?c.then(h,function(u){return r(u instanceof Error?u:new Error(""+u))}):h(c)}catch(u){r(u)}function h(u){try{var d=s[a].getTransferables&&s[a].getTransferables(u);(!d||!Array.isArray(d)||!d.length)&&(d=void 0),r(u,d)}catch(f){console.error(f),r(f)}}}function i(n,r){var o=void 0;self.troikaDefine=function(l){return o=l};var a=URL.createObjectURL(new Blob(["/** "+n.replace(/\*/g,"")+` **/

troikaDefine(
`+r+`
)`],{type:"application/javascript"}));try{importScripts(a)}catch(l){console.error(l)}return URL.revokeObjectURL(a),delete self.troikaDefine,o}self.addEventListener("message",function(n){var r=n.data,o=r.messageId,a=r.action,l=r.data;try{a==="registerModule"&&e(l,function(c){c instanceof Error?postMessage({messageId:o,success:!1,error:c.message}):postMessage({messageId:o,success:!0,result:{isCallable:typeof c=="function"}})}),a==="callModule"&&t(l,function(c,h){c instanceof Error?postMessage({messageId:o,success:!1,error:c.message}):postMessage({messageId:o,success:!0,result:c},h||void 0)})}catch(c){postMessage({messageId:o,success:!1,error:c.stack})}})}function LC(s){var e=function(){for(var t=[],i=arguments.length;i--;)t[i]=arguments[i];return e._getInitResult().then(function(n){if(typeof n=="function")return n.apply(void 0,t);throw new Error("Worker module function was called but `init` did not return a callable function")})};return e._getInitResult=function(){var t=s.dependencies,i=s.init;t=Array.isArray(t)?t.map(function(r){return r&&(r=r.onMainThread||r,r._getInitResult&&(r=r._getInitResult())),r}):[];var n=Promise.all(t).then(function(r){return i.apply(null,r)});return e._getInitResult=function(){return n},n},e}var B_=function(){var s=!1;if(typeof window<"u"&&typeof window.document<"u")try{var e=new Worker(URL.createObjectURL(new Blob([""],{type:"application/javascript"})));e.terminate(),s=!0}catch(t){console.log("Troika createWorkerModule: web workers not allowed; falling back to main thread execution. Cause: ["+t.message+"]")}return B_=function(){return s},s},UC=0,NC=0,Id=!1,Ba=Object.create(null),za=Object.create(null),hf=Object.create(null);function Qo(s){if((!s||typeof s.init!="function")&&!Id)throw new Error("requires `options.init` function");var e=s.dependencies,t=s.init,i=s.getTransferables,n=s.workerId,r=LC(s);n==null&&(n="#default");var o="workerModule"+ ++UC,a=s.name||o,l=null;e=e&&e.map(function(h){return typeof h=="function"&&!h.workerModuleData&&(Id=!0,h=Qo({workerId:n,name:"<"+a+"> function dependency: "+h.name,init:`function(){return (
`+zc(h)+`
)}`}),Id=!1),h&&h.workerModuleData&&(h=h.workerModuleData),h});function c(){for(var h=[],u=arguments.length;u--;)h[u]=arguments[u];if(!B_())return r.apply(void 0,h);if(!l){l=Zg(n,"registerModule",c.workerModuleData);var d=function(){l=null,za[n].delete(d)};(za[n]||(za[n]=new Set)).add(d)}return l.then(function(f){var p=f.isCallable;if(p)return Zg(n,"callModule",{id:o,args:h});throw new Error("Worker module function was called but `init` did not return a callable function")})}return c.workerModuleData={isWorkerModule:!0,id:o,name:a,dependencies:e,init:zc(t),getTransferables:i&&zc(i)},c.onMainThread=r,c}function OC(s){za[s]&&za[s].forEach(function(e){e()}),Ba[s]&&(Ba[s].terminate(),delete Ba[s])}function zc(s){var e=s.toString();return!/^function/.test(e)&&/^\w+\s*\(/.test(e)&&(e="function "+e),e}function FC(s){var e=Ba[s];if(!e){var t=zc(DC);e=Ba[s]=new Worker(URL.createObjectURL(new Blob(["/** Worker Module Bootstrap: "+s.replace(/\*/g,"")+` **/

;(`+t+")()"],{type:"application/javascript"}))),e.onmessage=function(i){var n=i.data,r=n.messageId,o=hf[r];if(!o)throw new Error("WorkerModule response with empty or unknown messageId");delete hf[r],o(n)}}return e}function Zg(s,e,t){return new Promise(function(i,n){var r=++NC;hf[r]=function(o){o.success?i(o.result):n(new Error("Error in worker "+e+" call: "+o.error))},FC(s).postMessage({messageId:r,action:e,data:t})})}function z_(){var s=function(e){function t(j,$,U,Z,K,k,H,q){var W=1-H;q.x=W*W*j+2*W*H*U+H*H*K,q.y=W*W*$+2*W*H*Z+H*H*k}function i(j,$,U,Z,K,k,H,q,W,ne){var ge=1-W;ne.x=ge*ge*ge*j+3*ge*ge*W*U+3*ge*W*W*K+W*W*W*H,ne.y=ge*ge*ge*$+3*ge*ge*W*Z+3*ge*W*W*k+W*W*W*q}function n(j,$){for(var U=/([MLQCZ])([^MLQCZ]*)/g,Z,K,k,H,q;Z=U.exec(j);){var W=Z[2].replace(/^\s*|\s*$/g,"").split(/[,\s]+/).map(function(ne){return parseFloat(ne)});switch(Z[1]){case"M":H=K=W[0],q=k=W[1];break;case"L":(W[0]!==H||W[1]!==q)&&$("L",H,q,H=W[0],q=W[1]);break;case"Q":{$("Q",H,q,H=W[2],q=W[3],W[0],W[1]);break}case"C":{$("C",H,q,H=W[4],q=W[5],W[0],W[1],W[2],W[3]);break}case"Z":(H!==K||q!==k)&&$("L",H,q,K,k);break}}}function r(j,$,U){U===void 0&&(U=16);var Z={x:0,y:0};n(j,function(K,k,H,q,W,ne,ge,ye,Se){switch(K){case"L":$(k,H,q,W);break;case"Q":{for(var pe=k,Ie=H,X=1;X<U;X++)t(k,H,ne,ge,q,W,X/(U-1),Z),$(pe,Ie,Z.x,Z.y),pe=Z.x,Ie=Z.y;break}case"C":{for(var Oe=k,he=H,ue=1;ue<U;ue++)i(k,H,ne,ge,ye,Se,q,W,ue/(U-1),Z),$(Oe,he,Z.x,Z.y),Oe=Z.x,he=Z.y;break}}})}var o="precision highp float;attribute vec2 aUV;varying vec2 vUV;void main(){vUV=aUV;gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}",a="precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){gl_FragColor=texture2D(tex,vUV);}",l=new WeakMap,c={premultipliedAlpha:!1,preserveDrawingBuffer:!0,antialias:!1,depth:!1};function h(j,$){var U=j.getContext?j.getContext("webgl",c):j,Z=l.get(U);if(!Z){let ge=function(Oe){var he=k[Oe];if(!he&&(he=k[Oe]=U.getExtension(Oe),!he))throw new Error(Oe+" not supported");return he},ye=function(Oe,he){var ue=U.createShader(he);return U.shaderSource(ue,Oe),U.compileShader(ue),ue},Se=function(Oe,he,ue,ie){if(!H[Oe]){var Me={},le={},P=U.createProgram();U.attachShader(P,ye(he,U.VERTEX_SHADER)),U.attachShader(P,ye(ue,U.FRAGMENT_SHADER)),U.linkProgram(P),H[Oe]={program:P,transaction:function(Q){U.useProgram(P),Q({setUniform:function(se,de){for(var Ee=[],be=arguments.length-2;be-- >0;)Ee[be]=arguments[be+2];var Ae=le[de]||(le[de]=U.getUniformLocation(P,de));U["uniform"+se].apply(U,[Ae].concat(Ee))},setAttribute:function(se,de,Ee,be,Ae){var Ze=Me[se];Ze||(Ze=Me[se]={buf:U.createBuffer(),loc:U.getAttribLocation(P,se),data:null}),U.bindBuffer(U.ARRAY_BUFFER,Ze.buf),U.vertexAttribPointer(Ze.loc,de,U.FLOAT,!1,0,0),U.enableVertexAttribArray(Ze.loc),K?U.vertexAttribDivisor(Ze.loc,be):ge("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(Ze.loc,be),Ae!==Ze.data&&(U.bufferData(U.ARRAY_BUFFER,Ae,Ee),Ze.data=Ae)}})}}}H[Oe].transaction(ie)},pe=function(Oe,he){W++;try{U.activeTexture(U.TEXTURE0+W);var ue=q[Oe];ue||(ue=q[Oe]=U.createTexture(),U.bindTexture(U.TEXTURE_2D,ue),U.texParameteri(U.TEXTURE_2D,U.TEXTURE_MIN_FILTER,U.NEAREST),U.texParameteri(U.TEXTURE_2D,U.TEXTURE_MAG_FILTER,U.NEAREST)),U.bindTexture(U.TEXTURE_2D,ue),he(ue,W)}finally{W--}},Ie=function(Oe,he,ue){var ie=U.createFramebuffer();ne.push(ie),U.bindFramebuffer(U.FRAMEBUFFER,ie),U.activeTexture(U.TEXTURE0+he),U.bindTexture(U.TEXTURE_2D,Oe),U.framebufferTexture2D(U.FRAMEBUFFER,U.COLOR_ATTACHMENT0,U.TEXTURE_2D,Oe,0);try{ue(ie)}finally{U.deleteFramebuffer(ie),U.bindFramebuffer(U.FRAMEBUFFER,ne[--ne.length-1]||null)}},X=function(){k={},H={},q={},W=-1,ne.length=0};var K=typeof WebGL2RenderingContext<"u"&&U instanceof WebGL2RenderingContext,k={},H={},q={},W=-1,ne=[];U.canvas.addEventListener("webglcontextlost",function(Oe){X(),Oe.preventDefault()},!1),l.set(U,Z={gl:U,isWebGL2:K,getExtension:ge,withProgram:Se,withTexture:pe,withTextureFramebuffer:Ie,handleContextLoss:X})}$(Z)}function u(j,$,U,Z,K,k,H,q){H===void 0&&(H=15),q===void 0&&(q=null),h(j,function(W){var ne=W.gl,ge=W.withProgram,ye=W.withTexture;ye("copy",function(Se,pe){ne.texImage2D(ne.TEXTURE_2D,0,ne.RGBA,K,k,0,ne.RGBA,ne.UNSIGNED_BYTE,$),ge("copy",o,a,function(Ie){var X=Ie.setUniform,Oe=Ie.setAttribute;Oe("aUV",2,ne.STATIC_DRAW,0,new Float32Array([0,0,2,0,0,2])),X("1i","image",pe),ne.bindFramebuffer(ne.FRAMEBUFFER,q||null),ne.disable(ne.BLEND),ne.colorMask(H&8,H&4,H&2,H&1),ne.viewport(U,Z,K,k),ne.scissor(U,Z,K,k),ne.drawArrays(ne.TRIANGLES,0,3)})})})}function d(j,$,U){var Z=j.width,K=j.height;h(j,function(k){var H=k.gl,q=new Uint8Array(Z*K*4);H.readPixels(0,0,Z,K,H.RGBA,H.UNSIGNED_BYTE,q),j.width=$,j.height=U,u(H,q,0,0,Z,K)})}var f=Object.freeze({__proto__:null,withWebGLContext:h,renderImageData:u,resizeWebGLCanvasWithoutClearing:d});function p(j,$,U,Z,K,k){k===void 0&&(k=1);var H=new Uint8Array(j*$),q=Z[2]-Z[0],W=Z[3]-Z[1],ne=[];r(U,function(Oe,he,ue,ie){ne.push({x1:Oe,y1:he,x2:ue,y2:ie,minX:Math.min(Oe,ue),minY:Math.min(he,ie),maxX:Math.max(Oe,ue),maxY:Math.max(he,ie)})}),ne.sort(function(Oe,he){return Oe.maxX-he.maxX});for(var ge=0;ge<j;ge++)for(var ye=0;ye<$;ye++){var Se=Ie(Z[0]+q*(ge+.5)/j,Z[1]+W*(ye+.5)/$),pe=Math.pow(1-Math.abs(Se)/K,k)/2;Se<0&&(pe=1-pe),pe=Math.max(0,Math.min(255,Math.round(pe*255))),H[ye*j+ge]=pe}return H;function Ie(Oe,he){for(var ue=1/0,ie=1/0,Me=ne.length;Me--;){var le=ne[Me];if(le.maxX+ie<=Oe)break;if(Oe+ie>le.minX&&he-ie<le.maxY&&he+ie>le.minY){var P=g(Oe,he,le.x1,le.y1,le.x2,le.y2);P<ue&&(ue=P,ie=Math.sqrt(ue))}}return X(Oe,he)&&(ie=-ie),ie}function X(Oe,he){for(var ue=0,ie=ne.length;ie--;){var Me=ne[ie];if(Me.maxX<=Oe)break;var le=Me.y1>he!=Me.y2>he&&Oe<(Me.x2-Me.x1)*(he-Me.y1)/(Me.y2-Me.y1)+Me.x1;le&&(ue+=Me.y1<Me.y2?1:-1)}return ue!==0}}function v(j,$,U,Z,K,k,H,q,W,ne){k===void 0&&(k=1),q===void 0&&(q=0),W===void 0&&(W=0),ne===void 0&&(ne=0),m(j,$,U,Z,K,k,H,null,q,W,ne)}function m(j,$,U,Z,K,k,H,q,W,ne,ge){k===void 0&&(k=1),W===void 0&&(W=0),ne===void 0&&(ne=0),ge===void 0&&(ge=0);for(var ye=p(j,$,U,Z,K,k),Se=new Uint8Array(ye.length*4),pe=0;pe<ye.length;pe++)Se[pe*4+ge]=ye[pe];u(H,Se,W,ne,j,$,1<<3-ge,q)}function g(j,$,U,Z,K,k){var H=K-U,q=k-Z,W=H*H+q*q,ne=W?Math.max(0,Math.min(1,((j-U)*H+($-Z)*q)/W)):0,ge=j-(U+ne*H),ye=$-(Z+ne*q);return ge*ge+ye*ye}var y=Object.freeze({__proto__:null,generate:p,generateIntoCanvas:v,generateIntoFramebuffer:m}),x="precision highp float;uniform vec4 uGlyphBounds;attribute vec2 aUV;attribute vec4 aLineSegment;varying vec4 vLineSegment;varying vec2 vGlyphXY;void main(){vLineSegment=aLineSegment;vGlyphXY=mix(uGlyphBounds.xy,uGlyphBounds.zw,aUV);gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}",_="precision highp float;uniform vec4 uGlyphBounds;uniform float uMaxDistance;uniform float uExponent;varying vec4 vLineSegment;varying vec2 vGlyphXY;float absDistToSegment(vec2 point,vec2 lineA,vec2 lineB){vec2 lineDir=lineB-lineA;float lenSq=dot(lineDir,lineDir);float t=lenSq==0.0 ? 0.0 : clamp(dot(point-lineA,lineDir)/lenSq,0.0,1.0);vec2 linePt=lineA+t*lineDir;return distance(point,linePt);}void main(){vec4 seg=vLineSegment;vec2 p=vGlyphXY;float dist=absDistToSegment(p,seg.xy,seg.zw);float val=pow(1.0-clamp(dist/uMaxDistance,0.0,1.0),uExponent)*0.5;bool crossing=(seg.y>p.y!=seg.w>p.y)&&(p.x<(seg.z-seg.x)*(p.y-seg.y)/(seg.w-seg.y)+seg.x);bool crossingUp=crossing&&vLineSegment.y<vLineSegment.w;gl_FragColor=vec4(crossingUp ? 1.0/255.0 : 0.0,crossing&&!crossingUp ? 1.0/255.0 : 0.0,0.0,val);}",E="precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){vec4 color=texture2D(tex,vUV);bool inside=color.r!=color.g;float val=inside ? 1.0-color.a : color.a;gl_FragColor=vec4(val);}",M=new Float32Array([0,0,2,0,0,2]),S=null,T=!1,w={},b=new WeakMap;function D(j){if(!T&&!J(j))throw new Error("WebGL generation not supported")}function I(j,$,U,Z,K,k,H){if(k===void 0&&(k=1),H===void 0&&(H=null),!H&&(H=S,!H)){var q=typeof OffscreenCanvas=="function"?new OffscreenCanvas(1,1):typeof document<"u"?document.createElement("canvas"):null;if(!q)throw new Error("OffscreenCanvas or DOM canvas not supported");H=S=q.getContext("webgl",{depth:!1})}D(H);var W=new Uint8Array(j*$*4);h(H,function(Se){var pe=Se.gl,Ie=Se.withTexture,X=Se.withTextureFramebuffer;Ie("readable",function(Oe,he){pe.texImage2D(pe.TEXTURE_2D,0,pe.RGBA,j,$,0,pe.RGBA,pe.UNSIGNED_BYTE,null),X(Oe,he,function(ue){V(j,$,U,Z,K,k,pe,ue,0,0,0),pe.readPixels(0,0,j,$,pe.RGBA,pe.UNSIGNED_BYTE,W)})})});for(var ne=new Uint8Array(j*$),ge=0,ye=0;ge<W.length;ge+=4)ne[ye++]=W[ge];return ne}function F(j,$,U,Z,K,k,H,q,W,ne){k===void 0&&(k=1),q===void 0&&(q=0),W===void 0&&(W=0),ne===void 0&&(ne=0),V(j,$,U,Z,K,k,H,null,q,W,ne)}function V(j,$,U,Z,K,k,H,q,W,ne,ge){k===void 0&&(k=1),W===void 0&&(W=0),ne===void 0&&(ne=0),ge===void 0&&(ge=0),D(H);var ye=[];r(U,function(Se,pe,Ie,X){ye.push(Se,pe,Ie,X)}),ye=new Float32Array(ye),h(H,function(Se){var pe=Se.gl,Ie=Se.isWebGL2,X=Se.getExtension,Oe=Se.withProgram,he=Se.withTexture,ue=Se.withTextureFramebuffer,ie=Se.handleContextLoss;if(he("rawDistances",function(Me,le){(j!==Me._lastWidth||$!==Me._lastHeight)&&pe.texImage2D(pe.TEXTURE_2D,0,pe.RGBA,Me._lastWidth=j,Me._lastHeight=$,0,pe.RGBA,pe.UNSIGNED_BYTE,null),Oe("main",x,_,function(P){var A=P.setAttribute,Q=P.setUniform,ae=!Ie&&X("ANGLE_instanced_arrays"),se=!Ie&&X("EXT_blend_minmax");A("aUV",2,pe.STATIC_DRAW,0,M),A("aLineSegment",4,pe.DYNAMIC_DRAW,1,ye),Q.apply(void 0,["4f","uGlyphBounds"].concat(Z)),Q("1f","uMaxDistance",K),Q("1f","uExponent",k),ue(Me,le,function(de){pe.enable(pe.BLEND),pe.colorMask(!0,!0,!0,!0),pe.viewport(0,0,j,$),pe.scissor(0,0,j,$),pe.blendFunc(pe.ONE,pe.ONE),pe.blendEquationSeparate(pe.FUNC_ADD,Ie?pe.MAX:se.MAX_EXT),pe.clear(pe.COLOR_BUFFER_BIT),Ie?pe.drawArraysInstanced(pe.TRIANGLES,0,3,ye.length/4):ae.drawArraysInstancedANGLE(pe.TRIANGLES,0,3,ye.length/4)})}),Oe("post",o,E,function(P){P.setAttribute("aUV",2,pe.STATIC_DRAW,0,M),P.setUniform("1i","tex",le),pe.bindFramebuffer(pe.FRAMEBUFFER,q),pe.disable(pe.BLEND),pe.colorMask(ge===0,ge===1,ge===2,ge===3),pe.viewport(W,ne,j,$),pe.scissor(W,ne,j,$),pe.drawArrays(pe.TRIANGLES,0,3)})}),pe.isContextLost())throw ie(),new Error("webgl context lost")})}function J(j){var $=!j||j===S?w:j.canvas||j,U=b.get($);if(U===void 0){T=!0;var Z=null;try{var K=[97,106,97,61,99,137,118,80,80,118,137,99,61,97,106,97],k=I(4,4,"M8,8L16,8L24,24L16,24Z",[0,0,32,32],24,1,j);U=k&&K.length===k.length&&k.every(function(H,q){return H===K[q]}),U||(Z="bad trial run results",console.info(K,k))}catch(H){U=!1,Z=H.message}Z&&console.warn("WebGL SDF generation not supported:",Z),T=!1,b.set($,U)}return U}var O=Object.freeze({__proto__:null,generate:I,generateIntoCanvas:F,generateIntoFramebuffer:V,isSupported:J});function ee(j,$,U,Z,K,k){K===void 0&&(K=Math.max(Z[2]-Z[0],Z[3]-Z[1])/2),k===void 0&&(k=1);try{return I.apply(O,arguments)}catch(H){return console.info("WebGL SDF generation failed, falling back to JS",H),p.apply(y,arguments)}}function Y(j,$,U,Z,K,k,H,q,W,ne){K===void 0&&(K=Math.max(Z[2]-Z[0],Z[3]-Z[1])/2),k===void 0&&(k=1),q===void 0&&(q=0),W===void 0&&(W=0),ne===void 0&&(ne=0);try{return F.apply(O,arguments)}catch(ge){return console.info("WebGL SDF generation failed, falling back to JS",ge),v.apply(y,arguments)}}return e.forEachPathCommand=n,e.generate=ee,e.generateIntoCanvas=Y,e.javascript=y,e.pathToLineSegments=r,e.webgl=O,e.webglUtils=f,Object.defineProperty(e,"__esModule",{value:!0}),e}({});return s}function kC(){var s=function(e){var t={R:"13k,1a,2,3,3,2+1j,ch+16,a+1,5+2,2+n,5,a,4,6+16,4+3,h+1b,4mo,179q,2+9,2+11,2i9+7y,2+68,4,3+4,5+13,4+3,2+4k,3+29,8+cf,1t+7z,w+17,3+3m,1t+3z,16o1+5r,8+30,8+mc,29+1r,29+4v,75+73",EN:"1c+9,3d+1,6,187+9,513,4+5,7+9,sf+j,175h+9,qw+q,161f+1d,4xt+a,25i+9",ES:"17,2,6dp+1,f+1,av,16vr,mx+1,4o,2",ET:"z+2,3h+3,b+1,ym,3e+1,2o,p4+1,8,6u,7c,g6,1wc,1n9+4,30+1b,2n,6d,qhx+1,h0m,a+1,49+2,63+1,4+1,6bb+3,12jj",AN:"16o+5,2j+9,2+1,35,ed,1ff2+9,87+u",CS:"18,2+1,b,2u,12k,55v,l,17v0,2,3,53,2+1,b",B:"a,3,f+2,2v,690",S:"9,2,k",WS:"c,k,4f4,1vk+a,u,1j,335",ON:"x+1,4+4,h+5,r+5,r+3,z,5+3,2+1,2+1,5,2+2,3+4,o,w,ci+1,8+d,3+d,6+8,2+g,39+1,9,6+1,2,33,b8,3+1,3c+1,7+1,5r,b,7h+3,sa+5,2,3i+6,jg+3,ur+9,2v,ij+1,9g+9,7+a,8m,4+1,49+x,14u,2+2,c+2,e+2,e+2,e+1,i+n,e+e,2+p,u+2,e+2,36+1,2+3,2+1,b,2+2,6+5,2,2,2,h+1,5+4,6+3,3+f,16+2,5+3l,3+81,1y+p,2+40,q+a,m+13,2r+ch,2+9e,75+hf,3+v,2+2w,6e+5,f+6,75+2a,1a+p,2+2g,d+5x,r+b,6+3,4+o,g,6+1,6+2,2k+1,4,2j,5h+z,1m+1,1e+f,t+2,1f+e,d+3,4o+3,2s+1,w,535+1r,h3l+1i,93+2,2s,b+1,3l+x,2v,4g+3,21+3,kz+1,g5v+1,5a,j+9,n+v,2,3,2+8,2+1,3+2,2,3,46+1,4+4,h+5,r+5,r+a,3h+2,4+6,b+4,78,1r+24,4+c,4,1hb,ey+6,103+j,16j+c,1ux+7,5+g,fsh,jdq+1t,4,57+2e,p1,1m,1m,1m,1m,4kt+1,7j+17,5+2r,d+e,3+e,2+e,2+10,m+4,w,1n+5,1q,4z+5,4b+rb,9+c,4+c,4+37,d+2g,8+b,l+b,5+1j,9+9,7+13,9+t,3+1,27+3c,2+29,2+3q,d+d,3+4,4+2,6+6,a+o,8+6,a+2,e+6,16+42,2+1i",BN:"0+8,6+d,2s+5,2+p,e,4m9,1kt+2,2b+5,5+5,17q9+v,7k,6p+8,6+1,119d+3,440+7,96s+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+75,6p+2rz,1ben+1,1ekf+1,1ekf+1",NSM:"lc+33,7o+6,7c+18,2,2+1,2+1,2,21+a,1d+k,h,2u+6,3+5,3+1,2+3,10,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,g+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+g,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,k1+w,2db+2,3y,2p+v,ff+3,30+1,n9x+3,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,r2,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+5,3+1,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2d+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,f0c+4,1o+6,t5,1s+3,2a,f5l+1,43t+2,i+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,gzhy+6n",AL:"16w,3,2,e+1b,z+2,2+2s,g+1,8+1,b+m,2+t,s+2i,c+e,4h+f,1d+1e,1bwe+dp,3+3z,x+c,2+1,35+3y,2rm+z,5+7,b+5,dt+l,c+u,17nl+27,1t+27,4x+6n,3+d",LRO:"6ct",RLO:"6cu",LRE:"6cq",RLE:"6cr",PDF:"6cs",LRI:"6ee",RLI:"6ef",FSI:"6eg",PDI:"6eh"},i={},n={};i.L=1,n[1]="L",Object.keys(t).forEach(function(ie,Me){i[ie]=1<<Me+1,n[i[ie]]=ie}),Object.freeze(i);var r=i.LRI|i.RLI|i.FSI,o=i.L|i.R|i.AL,a=i.B|i.S|i.WS|i.ON|i.FSI|i.LRI|i.RLI|i.PDI,l=i.BN|i.RLE|i.LRE|i.RLO|i.LRO|i.PDF,c=i.S|i.WS|i.B|r|i.PDI|l,h=null;function u(){if(!h){h=new Map;var ie=function(le){if(t.hasOwnProperty(le)){var P=0;t[le].split(",").forEach(function(A){var Q=A.split("+"),ae=Q[0],se=Q[1];ae=parseInt(ae,36),se=se?parseInt(se,36):0,h.set(P+=ae,i[le]);for(var de=0;de<se;de++)h.set(++P,i[le])})}};for(var Me in t)ie(Me)}}function d(ie){return u(),h.get(ie.codePointAt(0))||i.L}function f(ie){return n[d(ie)]}var p={pairs:"14>1,1e>2,u>2,2wt>1,1>1,1ge>1,1wp>1,1j>1,f>1,hm>1,1>1,u>1,u6>1,1>1,+5,28>1,w>1,1>1,+3,b8>1,1>1,+3,1>3,-1>-1,3>1,1>1,+2,1s>1,1>1,x>1,th>1,1>1,+2,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,4q>1,1e>2,u>2,2>1,+1",canonical:"6f1>-6dx,6dy>-6dx,6ec>-6ed,6ee>-6ed,6ww>2jj,-2ji>2jj,14r4>-1e7l,1e7m>-1e7l,1e7m>-1e5c,1e5d>-1e5b,1e5c>-14qx,14qy>-14qx,14vn>-1ecg,1ech>-1ecg,1edu>-1ecg,1eci>-1ecg,1eda>-1ecg,1eci>-1ecg,1eci>-168q,168r>-168q,168s>-14ye,14yf>-14ye"};function v(ie,Me){var le=36,P=0,A=new Map,Q=Me&&new Map,ae;return ie.split(",").forEach(function se(de){if(de.indexOf("+")!==-1)for(var Ee=+de;Ee--;)se(ae);else{ae=de;var be=de.split(">"),Ae=be[0],Ze=be[1];Ae=String.fromCodePoint(P+=parseInt(Ae,le)),Ze=String.fromCodePoint(P+=parseInt(Ze,le)),A.set(Ae,Ze),Me&&Q.set(Ze,Ae)}}),{map:A,reverseMap:Q}}var m,g,y;function x(){if(!m){var ie=v(p.pairs,!0),Me=ie.map,le=ie.reverseMap;m=Me,g=le,y=v(p.canonical,!1).map}}function _(ie){return x(),m.get(ie)||null}function E(ie){return x(),g.get(ie)||null}function M(ie){return x(),y.get(ie)||null}var S=i.L,T=i.R,w=i.EN,b=i.ES,D=i.ET,I=i.AN,F=i.CS,V=i.B,J=i.S,O=i.ON,ee=i.BN,Y=i.NSM,j=i.AL,$=i.LRO,U=i.RLO,Z=i.LRE,K=i.RLE,k=i.PDF,H=i.LRI,q=i.RLI,W=i.FSI,ne=i.PDI;function ge(ie,Me){for(var le=125,P=new Uint32Array(ie.length),A=0;A<ie.length;A++)P[A]=d(ie[A]);var Q=new Map;function ae(di,Qi){var fi=P[di];P[di]=Qi,Q.set(fi,Q.get(fi)-1),fi&a&&Q.set(a,Q.get(a)-1),Q.set(Qi,(Q.get(Qi)||0)+1),Qi&a&&Q.set(a,(Q.get(a)||0)+1)}for(var se=new Uint8Array(ie.length),de=new Map,Ee=[],be=null,Ae=0;Ae<ie.length;Ae++)be||Ee.push(be={start:Ae,end:ie.length-1,level:Me==="rtl"?1:Me==="ltr"?0:Rp(Ae,!1)}),P[Ae]&V&&(be.end=Ae,be=null);for(var Ze=K|Z|U|$|r|ne|k|V,Re=function(di){return di+(di&1?1:2)},Be=function(di){return di+(di&1?2:1)},Ge=0;Ge<Ee.length;Ge++){be=Ee[Ge];var Ve=[{_level:be.level,_override:0,_isolate:0}],Te=void 0,ut=0,tt=0,wt=0;Q.clear();for(var te=be.start;te<=be.end;te++){var Ce=P[te];if(Te=Ve[Ve.length-1],Q.set(Ce,(Q.get(Ce)||0)+1),Ce&a&&Q.set(a,(Q.get(a)||0)+1),Ce&Ze)if(Ce&(K|Z)){se[te]=Te._level;var fe=(Ce===K?Be:Re)(Te._level);fe<=le&&!ut&&!tt?Ve.push({_level:fe,_override:0,_isolate:0}):ut||tt++}else if(Ce&(U|$)){se[te]=Te._level;var Pe=(Ce===U?Be:Re)(Te._level);Pe<=le&&!ut&&!tt?Ve.push({_level:Pe,_override:Ce&U?T:S,_isolate:0}):ut||tt++}else if(Ce&r){Ce&W&&(Ce=Rp(te+1,!0)===1?q:H),se[te]=Te._level,Te._override&&ae(te,Te._override);var Ne=(Ce===q?Be:Re)(Te._level);Ne<=le&&ut===0&&tt===0?(wt++,Ve.push({_level:Ne,_override:0,_isolate:1,_isolInitIndex:te})):ut++}else if(Ce&ne){if(ut>0)ut--;else if(wt>0){for(tt=0;!Ve[Ve.length-1]._isolate;)Ve.pop();var De=Ve[Ve.length-1]._isolInitIndex;De!=null&&(de.set(De,te),de.set(te,De)),Ve.pop(),wt--}Te=Ve[Ve.length-1],se[te]=Te._level,Te._override&&ae(te,Te._override)}else Ce&k?(ut===0&&(tt>0?tt--:!Te._isolate&&Ve.length>1&&(Ve.pop(),Te=Ve[Ve.length-1])),se[te]=Te._level):Ce&V&&(se[te]=be.level);else se[te]=Te._level,Te._override&&Ce!==ee&&ae(te,Te._override)}for(var ot=[],St=null,ct=be.start;ct<=be.end;ct++){var rt=P[ct];if(!(rt&l)){var Xt=se[ct],Kt=rt&r,on=rt===ne;St&&Xt===St._level?(St._end=ct,St._endsWithIsolInit=Kt):ot.push(St={_start:ct,_end:ct,_level:Xt,_startsWithPDI:on,_endsWithIsolInit:Kt})}}for(var qn=[],Un=0;Un<ot.length;Un++){var ri=ot[Un];if(!ri._startsWithPDI||ri._startsWithPDI&&!de.has(ri._start)){for(var Ci=[St=ri],Ri=void 0;St&&St._endsWithIsolInit&&(Ri=de.get(St._end))!=null;)for(var Zn=Un+1;Zn<ot.length;Zn++)if(ot[Zn]._start===Ri){Ci.push(St=ot[Zn]);break}for(var _n=[],ui=0;ui<Ci.length;ui++)for(var ds=Ci[ui],Vr=ds._start;Vr<=ds._end;Vr++)_n.push(Vr);for(var $o=se[_n[0]],uo=be.level,Hr=_n[0]-1;Hr>=0;Hr--)if(!(P[Hr]&l)){uo=se[Hr];break}var fs=_n[_n.length-1],ea=se[fs],fo=be.level;if(!(P[fs]&r)){for(var B=fs+1;B<=be.end;B++)if(!(P[B]&l)){fo=se[B];break}}qn.push({_seqIndices:_n,_sosType:Math.max(uo,$o)%2?T:S,_eosType:Math.max(fo,ea)%2?T:S})}}for(var oe=0;oe<qn.length;oe++){var me=qn[oe],re=me._seqIndices,ce=me._sosType,Fe=me._eosType,Ye=se[re[0]]&1?T:S;if(Q.get(Y))for(var Qe=0;Qe<re.length;Qe++){var et=re[Qe];if(P[et]&Y){for(var xt=ce,mt=Qe-1;mt>=0;mt--)if(!(P[re[mt]]&l)){xt=P[re[mt]];break}ae(et,xt&(r|ne)?O:xt)}}if(Q.get(w))for(var ht=0;ht<re.length;ht++){var At=re[ht];if(P[At]&w)for(var kt=ht-1;kt>=-1;kt--){var rn=kt===-1?ce:P[re[kt]];if(rn&o){rn===j&&ae(At,I);break}}}if(Q.get(j))for(var Qt=0;Qt<re.length;Qt++){var Ft=re[Qt];P[Ft]&j&&ae(Ft,T)}if(Q.get(b)||Q.get(F))for(var dt=1;dt<re.length-1;dt++){var cn=re[dt];if(P[cn]&(b|F)){for(var Ut=0,Nn=0,Yt=dt-1;Yt>=0&&(Ut=P[re[Yt]],!!(Ut&l));Yt--);for(var yn=dt+1;yn<re.length&&(Nn=P[re[yn]],!!(Nn&l));yn++);Ut===Nn&&(P[cn]===b?Ut===w:Ut&(w|I))&&ae(cn,Ut)}}if(Q.get(w))for(var On=0;On<re.length;On++){var qt=re[On];if(P[qt]&w){for(var En=On-1;En>=0&&P[re[En]]&(D|l);En--)ae(re[En],w);for(On++;On<re.length&&P[re[On]]&(D|l|w);On++)P[re[On]]!==w&&ae(re[On],w)}}if(Q.get(D)||Q.get(b)||Q.get(F))for(var mn=0;mn<re.length;mn++){var hn=re[mn];if(P[hn]&(D|b|F)){ae(hn,O);for(var an=mn-1;an>=0&&P[re[an]]&l;an--)ae(re[an],O);for(var Ji=mn+1;Ji<re.length&&P[re[Ji]]&l;Ji++)ae(re[Ji],O)}}if(Q.get(w))for(var Pi=0,vt=ce;Pi<re.length;Pi++){var ps=re[Pi],R=P[ps];R&w?vt===S&&ae(ps,S):R&o&&(vt=R)}if(Q.get(a)){var C=T|w|I,z=C|S,N=[];{for(var G=[],ve=0;ve<re.length;ve++)if(P[re[ve]]&a){var we=ie[re[ve]],$e=void 0;if(_(we)!==null)if(G.length<63)G.push({char:we,seqIndex:ve});else break;else if(($e=E(we))!==null)for(var We=G.length-1;We>=0;We--){var Ke=G[We].char;if(Ke===$e||Ke===E(M(we))||_(M(Ke))===we){N.push([G[We].seqIndex,ve]),G.length=We;break}}}N.sort(function(di,Qi){return di[0]-Qi[0]})}for(var lt=0;lt<N.length;lt++){for(var Ue=N[lt],at=Ue[0],nt=Ue[1],ft=!1,it=0,en=at+1;en<nt;en++){var Vt=re[en];if(P[Vt]&z){ft=!0;var zt=P[Vt]&C?T:S;if(zt===Ye){it=zt;break}}}if(ft&&!it){it=ce;for(var Bt=at-1;Bt>=0;Bt--){var Vi=re[Bt];if(P[Vi]&z){var Gn=P[Vi]&C?T:S;Gn!==Ye?it=Gn:it=Ye;break}}}if(it){if(P[re[at]]=P[re[nt]]=it,it!==Ye){for(var Hi=at+1;Hi<re.length;Hi++)if(!(P[re[Hi]]&l)){d(ie[re[Hi]])&Y&&(P[re[Hi]]=it);break}}if(it!==Ye){for(var ms=nt+1;ms<re.length;ms++)if(!(P[re[ms]]&l)){d(ie[re[ms]])&Y&&(P[re[ms]]=it);break}}}}for(var Ki=0;Ki<re.length;Ki++)if(P[re[Ki]]&a){for(var Ap=Ki,bu=Ki,Su=ce,ta=Ki-1;ta>=0;ta--)if(P[re[ta]]&l)Ap=ta;else{Su=P[re[ta]]&C?T:S;break}for(var Cp=Fe,na=Ki+1;na<re.length;na++)if(P[re[na]]&(a|l))bu=na;else{Cp=P[re[na]]&C?T:S;break}for(var Mu=Ap;Mu<=bu;Mu++)P[re[Mu]]=Su===Cp?Su:Ye;Ki=bu}}}for(var Ii=be.start;Ii<=be.end;Ii++){var ay=se[Ii],Ml=P[Ii];if(ay&1?Ml&(S|w|I)&&se[Ii]++:Ml&T?se[Ii]++:Ml&(I|w)&&(se[Ii]+=2),Ml&l&&(se[Ii]=Ii===0?be.level:se[Ii-1]),Ii===be.end||d(ie[Ii])&(J|V))for(var wl=Ii;wl>=0&&d(ie[wl])&c;wl--)se[wl]=be.level}}return{levels:se,paragraphs:Ee};function Rp(di,Qi){for(var fi=di;fi<ie.length;fi++){var Wr=P[fi];if(Wr&(T|j))return 1;if(Wr&(V|S)||Qi&&Wr===ne)return 0;if(Wr&r){var Pp=ly(fi);fi=Pp===-1?ie.length:Pp}}return 0}function ly(di){for(var Qi=1,fi=di+1;fi<ie.length;fi++){var Wr=P[fi];if(Wr&V)break;if(Wr&ne){if(--Qi===0)return fi}else Wr&r&&Qi++}return-1}}var ye="14>1,j>2,t>2,u>2,1a>g,2v3>1,1>1,1ge>1,1wd>1,b>1,1j>1,f>1,ai>3,-2>3,+1,8>1k0,-1jq>1y7,-1y6>1hf,-1he>1h6,-1h5>1ha,-1h8>1qi,-1pu>1,6>3u,-3s>7,6>1,1>1,f>1,1>1,+2,3>1,1>1,+13,4>1,1>1,6>1eo,-1ee>1,3>1mg,-1me>1mk,-1mj>1mi,-1mg>1mi,-1md>1,1>1,+2,1>10k,-103>1,1>1,4>1,5>1,1>1,+10,3>1,1>8,-7>8,+1,-6>7,+1,a>1,1>1,u>1,u6>1,1>1,+5,26>1,1>1,2>1,2>2,8>1,7>1,4>1,1>1,+5,b8>1,1>1,+3,1>3,-2>1,2>1,1>1,+2,c>1,3>1,1>1,+2,h>1,3>1,a>1,1>1,2>1,3>1,1>1,d>1,f>1,3>1,1a>1,1>1,6>1,7>1,13>1,k>1,1>1,+19,4>1,1>1,+2,2>1,1>1,+18,m>1,a>1,1>1,lk>1,1>1,4>1,2>1,f>1,3>1,1>1,+3,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,6>1,4j>1,j>2,t>2,u>2,2>1,+1",Se;function pe(){if(!Se){var ie=v(ye,!0),Me=ie.map,le=ie.reverseMap;le.forEach(function(P,A){Me.set(A,P)}),Se=Me}}function Ie(ie){return pe(),Se.get(ie)||null}function X(ie,Me,le,P){var A=ie.length;le=Math.max(0,le==null?0:+le),P=Math.min(A-1,P==null?A-1:+P);for(var Q=new Map,ae=le;ae<=P;ae++)if(Me[ae]&1){var se=Ie(ie[ae]);se!==null&&Q.set(ae,se)}return Q}function Oe(ie,Me,le,P){var A=ie.length;le=Math.max(0,le==null?0:+le),P=Math.min(A-1,P==null?A-1:+P);var Q=[];return Me.paragraphs.forEach(function(ae){var se=Math.max(le,ae.start),de=Math.min(P,ae.end);if(se<de){for(var Ee=Me.levels.slice(se,de+1),be=de;be>=se&&d(ie[be])&c;be--)Ee[be]=ae.level;for(var Ae=ae.level,Ze=1/0,Re=0;Re<Ee.length;Re++){var Be=Ee[Re];Be>Ae&&(Ae=Be),Be<Ze&&(Ze=Be|1)}for(var Ge=Ae;Ge>=Ze;Ge--)for(var Ve=0;Ve<Ee.length;Ve++)if(Ee[Ve]>=Ge){for(var Te=Ve;Ve+1<Ee.length&&Ee[Ve+1]>=Ge;)Ve++;Ve>Te&&Q.push([Te+se,Ve+se])}}}),Q}function he(ie,Me,le,P){var A=ue(ie,Me,le,P),Q=[].concat(ie);return A.forEach(function(ae,se){Q[se]=(Me.levels[ae]&1?Ie(ie[ae]):null)||ie[ae]}),Q.join("")}function ue(ie,Me,le,P){for(var A=Oe(ie,Me,le,P),Q=[],ae=0;ae<ie.length;ae++)Q[ae]=ae;return A.forEach(function(se){for(var de=se[0],Ee=se[1],be=Q.slice(de,Ee+1),Ae=be.length;Ae--;)Q[Ee-Ae]=be[Ae]}),Q}return e.closingToOpeningBracket=E,e.getBidiCharType=d,e.getBidiCharTypeName=f,e.getCanonicalBracket=M,e.getEmbeddingLevels=ge,e.getMirroredCharacter=Ie,e.getMirroredCharactersMap=X,e.getReorderSegments=Oe,e.getReorderedIndices=ue,e.getReorderedString=he,e.openingToClosingBracket=_,Object.defineProperty(e,"__esModule",{value:!0}),e}({});return s}const G_=/\bvoid\s+main\s*\(\s*\)\s*{/g;function uf(s){const e=/^[ \t]*#include +<([\w\d./]+)>/gm;function t(i,n){let r=_t[n];return r?uf(r):i}return s.replace(e,t)}const Wn=[];for(let s=0;s<256;s++)Wn[s]=(s<16?"0":"")+s.toString(16);function BC(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(Wn[s&255]+Wn[s>>8&255]+Wn[s>>16&255]+Wn[s>>24&255]+"-"+Wn[e&255]+Wn[e>>8&255]+"-"+Wn[e>>16&15|64]+Wn[e>>24&255]+"-"+Wn[t&63|128]+Wn[t>>8&255]+"-"+Wn[t>>16&255]+Wn[t>>24&255]+Wn[i&255]+Wn[i>>8&255]+Wn[i>>16&255]+Wn[i>>24&255]).toUpperCase()}const Us=Object.assign||function(){let s=arguments[0];for(let e=1,t=arguments.length;e<t;e++){let i=arguments[e];if(i)for(let n in i)Object.prototype.hasOwnProperty.call(i,n)&&(s[n]=i[n])}return s},zC=Date.now(),Jg=new WeakMap,Kg=new Map;let GC=1e10;function df(s,e){const t=XC(e);let i=Jg.get(s);if(i||Jg.set(s,i=Object.create(null)),i[t])return new i[t];const n=`_onBeforeCompile${t}`,r=function(c,h){s.onBeforeCompile.call(this,c,h);const u=this.customProgramCacheKey()+"|"+c.vertexShader+"|"+c.fragmentShader;let d=Kg[u];if(!d){const f=VC(this,c,e,t);d=Kg[u]=f}c.vertexShader=d.vertexShader,c.fragmentShader=d.fragmentShader,Us(c.uniforms,this.uniforms),e.timeUniform&&(c.uniforms[e.timeUniform]={get value(){return Date.now()-zC}}),this[n]&&this[n](c)},o=function(){return a(e.chained?s:s.clone())},a=function(c){const h=Object.create(c,l);return Object.defineProperty(h,"baseMaterial",{value:s}),Object.defineProperty(h,"id",{value:GC++}),h.uuid=BC(),h.uniforms=Us({},c.uniforms,e.uniforms),h.defines=Us({},c.defines,e.defines),h.defines[`TROIKA_DERIVED_MATERIAL_${t}`]="",h.extensions=Us({},c.extensions,e.extensions),h._listeners=void 0,h},l={constructor:{value:o},isDerivedMaterial:{value:!0},type:{get:()=>s.type,set:c=>{s.type=c}},isDerivedFrom:{writable:!0,configurable:!0,value:function(c){const h=this.baseMaterial;return c===h||h.isDerivedMaterial&&h.isDerivedFrom(c)||!1}},customProgramCacheKey:{writable:!0,configurable:!0,value:function(){return s.customProgramCacheKey()+"|"+t}},onBeforeCompile:{get(){return r},set(c){this[n]=c}},copy:{writable:!0,configurable:!0,value:function(c){return s.copy.call(this,c),!s.isShaderMaterial&&!s.isDerivedMaterial&&(Us(this.extensions,c.extensions),Us(this.defines,c.defines),Us(this.uniforms,pl.clone(c.uniforms))),this}},clone:{writable:!0,configurable:!0,value:function(){const c=new s.constructor;return a(c).copy(this)}},getDepthMaterial:{writable:!0,configurable:!0,value:function(){let c=this._depthMaterial;return c||(c=this._depthMaterial=df(s.isDerivedMaterial?s.getDepthMaterial():new bl({depthPacking:Lf}),e),c.defines.IS_DEPTH_MATERIAL="",c.uniforms=this.uniforms),c}},getDistanceMaterial:{writable:!0,configurable:!0,value:function(){let c=this._distanceMaterial;return c||(c=this._distanceMaterial=df(s.isDerivedMaterial?s.getDistanceMaterial():new cu,e),c.defines.IS_DISTANCE_MATERIAL="",c.uniforms=this.uniforms),c}},dispose:{writable:!0,configurable:!0,value(){const{_depthMaterial:c,_distanceMaterial:h}=this;c&&c.dispose(),h&&h.dispose(),s.dispose.call(this)}}};return i[t]=o,new o}function VC(s,{vertexShader:e,fragmentShader:t},i,n){let{vertexDefs:r,vertexMainIntro:o,vertexMainOutro:a,vertexTransform:l,fragmentDefs:c,fragmentMainIntro:h,fragmentMainOutro:u,fragmentColorTransform:d,customRewriter:f,timeUniform:p}=i;if(r=r||"",o=o||"",a=a||"",c=c||"",h=h||"",u=u||"",(l||f)&&(e=uf(e)),(d||f)&&(t=t.replace(/^[ \t]*#include <((?:tonemapping|encodings|colorspace|fog|premultiplied_alpha|dithering)_fragment)>/gm,`
//!BEGIN_POST_CHUNK $1
$&
//!END_POST_CHUNK
`),t=uf(t)),f){let v=f({vertexShader:e,fragmentShader:t});e=v.vertexShader,t=v.fragmentShader}if(d){let v=[];t=t.replace(/^\/\/!BEGIN_POST_CHUNK[^]+?^\/\/!END_POST_CHUNK/gm,m=>(v.push(m),"")),u=`${d}
${v.join(`
`)}
${u}`}if(p){const v=`
uniform float ${p};
`;r=v+r,c=v+c}return l&&(e=`vec3 troika_position_${n};
vec3 troika_normal_${n};
vec2 troika_uv_${n};
${e}
`,r=`${r}
void troikaVertexTransform${n}(inout vec3 position, inout vec3 normal, inout vec2 uv) {
  ${l}
}
`,o=`
troika_position_${n} = vec3(position);
troika_normal_${n} = vec3(normal);
troika_uv_${n} = vec2(uv);
troikaVertexTransform${n}(troika_position_${n}, troika_normal_${n}, troika_uv_${n});
${o}
`,e=e.replace(/\b(position|normal|uv)\b/g,(v,m,g,y)=>/\battribute\s+vec[23]\s+$/.test(y.substr(0,g))?m:`troika_${m}_${n}`),s.map&&s.map.channel>0||(e=e.replace(/\bMAP_UV\b/g,`troika_uv_${n}`))),e=Qg(e,n,r,o,a),t=Qg(t,n,c,h,u),{vertexShader:e,fragmentShader:t}}function Qg(s,e,t,i,n){return(i||n||t)&&(s=s.replace(G_,`
${t}
void troikaOrigMain${e}() {`),s+=`
void main() {
  ${i}
  troikaOrigMain${e}();
  ${n}
}`),s}function HC(s,e){return s==="uniforms"?void 0:typeof e=="function"?e.toString():e}let WC=0;const $g=new Map;function XC(s){const e=JSON.stringify(s,HC);let t=$g.get(e);return t==null&&$g.set(e,t=++WC),t}/*!
Custom build of Typr.ts (https://github.com/fredli74/Typr.ts) for use in Troika text rendering.
Original MIT license applies: https://github.com/fredli74/Typr.ts/blob/master/LICENSE
*/function YC(){return typeof window>"u"&&(self.window=self),function(s){var e={parse:function(n){var r=e._bin,o=new Uint8Array(n);if(r.readASCII(o,0,4)=="ttcf"){var a=4;r.readUshort(o,a),a+=2,r.readUshort(o,a),a+=2;var l=r.readUint(o,a);a+=4;for(var c=[],h=0;h<l;h++){var u=r.readUint(o,a);a+=4,c.push(e._readFont(o,u))}return c}return[e._readFont(o,0)]},_readFont:function(n,r){var o=e._bin,a=r;o.readFixed(n,r),r+=4;var l=o.readUshort(n,r);r+=2,o.readUshort(n,r),r+=2,o.readUshort(n,r),r+=2,o.readUshort(n,r),r+=2;for(var c=["cmap","head","hhea","maxp","hmtx","name","OS/2","post","loca","glyf","kern","CFF ","GDEF","GPOS","GSUB","SVG "],h={_data:n,_offset:a},u={},d=0;d<l;d++){var f=o.readASCII(n,r,4);r+=4,o.readUint(n,r),r+=4;var p=o.readUint(n,r);r+=4;var v=o.readUint(n,r);r+=4,u[f]={offset:p,length:v}}for(d=0;d<c.length;d++){var m=c[d];u[m]&&(h[m.trim()]=e[m.trim()].parse(n,u[m].offset,u[m].length,h))}return h},_tabOffset:function(n,r,o){for(var a=e._bin,l=a.readUshort(n,o+4),c=o+12,h=0;h<l;h++){var u=a.readASCII(n,c,4);c+=4,a.readUint(n,c),c+=4;var d=a.readUint(n,c);if(c+=4,a.readUint(n,c),c+=4,u==r)return d}return 0}};e._bin={readFixed:function(n,r){return(n[r]<<8|n[r+1])+(n[r+2]<<8|n[r+3])/65540},readF2dot14:function(n,r){return e._bin.readShort(n,r)/16384},readInt:function(n,r){return e._bin._view(n).getInt32(r)},readInt8:function(n,r){return e._bin._view(n).getInt8(r)},readShort:function(n,r){return e._bin._view(n).getInt16(r)},readUshort:function(n,r){return e._bin._view(n).getUint16(r)},readUshorts:function(n,r,o){for(var a=[],l=0;l<o;l++)a.push(e._bin.readUshort(n,r+2*l));return a},readUint:function(n,r){return e._bin._view(n).getUint32(r)},readUint64:function(n,r){return 4294967296*e._bin.readUint(n,r)+e._bin.readUint(n,r+4)},readASCII:function(n,r,o){for(var a="",l=0;l<o;l++)a+=String.fromCharCode(n[r+l]);return a},readUnicode:function(n,r,o){for(var a="",l=0;l<o;l++){var c=n[r++]<<8|n[r++];a+=String.fromCharCode(c)}return a},_tdec:typeof window<"u"&&window.TextDecoder?new window.TextDecoder:null,readUTF8:function(n,r,o){var a=e._bin._tdec;return a&&r==0&&o==n.length?a.decode(n):e._bin.readASCII(n,r,o)},readBytes:function(n,r,o){for(var a=[],l=0;l<o;l++)a.push(n[r+l]);return a},readASCIIArray:function(n,r,o){for(var a=[],l=0;l<o;l++)a.push(String.fromCharCode(n[r+l]));return a},_view:function(n){return n._dataView||(n._dataView=n.buffer?new DataView(n.buffer,n.byteOffset,n.byteLength):new DataView(new Uint8Array(n).buffer))}},e._lctf={},e._lctf.parse=function(n,r,o,a,l){var c=e._bin,h={},u=r;c.readFixed(n,r),r+=4;var d=c.readUshort(n,r);r+=2;var f=c.readUshort(n,r);r+=2;var p=c.readUshort(n,r);return r+=2,h.scriptList=e._lctf.readScriptList(n,u+d),h.featureList=e._lctf.readFeatureList(n,u+f),h.lookupList=e._lctf.readLookupList(n,u+p,l),h},e._lctf.readLookupList=function(n,r,o){var a=e._bin,l=r,c=[],h=a.readUshort(n,r);r+=2;for(var u=0;u<h;u++){var d=a.readUshort(n,r);r+=2;var f=e._lctf.readLookupTable(n,l+d,o);c.push(f)}return c},e._lctf.readLookupTable=function(n,r,o){var a=e._bin,l=r,c={tabs:[]};c.ltype=a.readUshort(n,r),r+=2,c.flag=a.readUshort(n,r),r+=2;var h=a.readUshort(n,r);r+=2;for(var u=c.ltype,d=0;d<h;d++){var f=a.readUshort(n,r);r+=2;var p=o(n,u,l+f,c);c.tabs.push(p)}return c},e._lctf.numOfOnes=function(n){for(var r=0,o=0;o<32;o++)(n>>>o&1)!=0&&r++;return r},e._lctf.readClassDef=function(n,r){var o=e._bin,a=[],l=o.readUshort(n,r);if(r+=2,l==1){var c=o.readUshort(n,r);r+=2;var h=o.readUshort(n,r);r+=2;for(var u=0;u<h;u++)a.push(c+u),a.push(c+u),a.push(o.readUshort(n,r)),r+=2}if(l==2){var d=o.readUshort(n,r);for(r+=2,u=0;u<d;u++)a.push(o.readUshort(n,r)),r+=2,a.push(o.readUshort(n,r)),r+=2,a.push(o.readUshort(n,r)),r+=2}return a},e._lctf.getInterval=function(n,r){for(var o=0;o<n.length;o+=3){var a=n[o],l=n[o+1];if(n[o+2],a<=r&&r<=l)return o}return-1},e._lctf.readCoverage=function(n,r){var o=e._bin,a={};a.fmt=o.readUshort(n,r),r+=2;var l=o.readUshort(n,r);return r+=2,a.fmt==1&&(a.tab=o.readUshorts(n,r,l)),a.fmt==2&&(a.tab=o.readUshorts(n,r,3*l)),a},e._lctf.coverageIndex=function(n,r){var o=n.tab;if(n.fmt==1)return o.indexOf(r);if(n.fmt==2){var a=e._lctf.getInterval(o,r);if(a!=-1)return o[a+2]+(r-o[a])}return-1},e._lctf.readFeatureList=function(n,r){var o=e._bin,a=r,l=[],c=o.readUshort(n,r);r+=2;for(var h=0;h<c;h++){var u=o.readASCII(n,r,4);r+=4;var d=o.readUshort(n,r);r+=2;var f=e._lctf.readFeatureTable(n,a+d);f.tag=u.trim(),l.push(f)}return l},e._lctf.readFeatureTable=function(n,r){var o=e._bin,a=r,l={},c=o.readUshort(n,r);r+=2,c>0&&(l.featureParams=a+c);var h=o.readUshort(n,r);r+=2,l.tab=[];for(var u=0;u<h;u++)l.tab.push(o.readUshort(n,r+2*u));return l},e._lctf.readScriptList=function(n,r){var o=e._bin,a=r,l={},c=o.readUshort(n,r);r+=2;for(var h=0;h<c;h++){var u=o.readASCII(n,r,4);r+=4;var d=o.readUshort(n,r);r+=2,l[u.trim()]=e._lctf.readScriptTable(n,a+d)}return l},e._lctf.readScriptTable=function(n,r){var o=e._bin,a=r,l={},c=o.readUshort(n,r);r+=2,c>0&&(l.default=e._lctf.readLangSysTable(n,a+c));var h=o.readUshort(n,r);r+=2;for(var u=0;u<h;u++){var d=o.readASCII(n,r,4);r+=4;var f=o.readUshort(n,r);r+=2,l[d.trim()]=e._lctf.readLangSysTable(n,a+f)}return l},e._lctf.readLangSysTable=function(n,r){var o=e._bin,a={};o.readUshort(n,r),r+=2,a.reqFeature=o.readUshort(n,r),r+=2;var l=o.readUshort(n,r);return r+=2,a.features=o.readUshorts(n,r,l),a},e.CFF={},e.CFF.parse=function(n,r,o){var a=e._bin;(n=new Uint8Array(n.buffer,r,o))[r=0],n[++r],n[++r],n[++r],r++;var l=[];r=e.CFF.readIndex(n,r,l);for(var c=[],h=0;h<l.length-1;h++)c.push(a.readASCII(n,r+l[h],l[h+1]-l[h]));r+=l[l.length-1];var u=[];r=e.CFF.readIndex(n,r,u);var d=[];for(h=0;h<u.length-1;h++)d.push(e.CFF.readDict(n,r+u[h],r+u[h+1]));r+=u[u.length-1];var f=d[0],p=[];r=e.CFF.readIndex(n,r,p);var v=[];for(h=0;h<p.length-1;h++)v.push(a.readASCII(n,r+p[h],p[h+1]-p[h]));if(r+=p[p.length-1],e.CFF.readSubrs(n,r,f),f.CharStrings){r=f.CharStrings,p=[],r=e.CFF.readIndex(n,r,p);var m=[];for(h=0;h<p.length-1;h++)m.push(a.readBytes(n,r+p[h],p[h+1]-p[h]));f.CharStrings=m}if(f.ROS){r=f.FDArray;var g=[];for(r=e.CFF.readIndex(n,r,g),f.FDArray=[],h=0;h<g.length-1;h++){var y=e.CFF.readDict(n,r+g[h],r+g[h+1]);e.CFF._readFDict(n,y,v),f.FDArray.push(y)}r+=g[g.length-1],r=f.FDSelect,f.FDSelect=[];var x=n[r];if(r++,x!=3)throw x;var _=a.readUshort(n,r);for(r+=2,h=0;h<_+1;h++)f.FDSelect.push(a.readUshort(n,r),n[r+2]),r+=3}return f.Encoding&&(f.Encoding=e.CFF.readEncoding(n,f.Encoding,f.CharStrings.length)),f.charset&&(f.charset=e.CFF.readCharset(n,f.charset,f.CharStrings.length)),e.CFF._readFDict(n,f,v),f},e.CFF._readFDict=function(n,r,o){var a;for(var l in r.Private&&(a=r.Private[1],r.Private=e.CFF.readDict(n,a,a+r.Private[0]),r.Private.Subrs&&e.CFF.readSubrs(n,a+r.Private.Subrs,r.Private)),r)["FamilyName","FontName","FullName","Notice","version","Copyright"].indexOf(l)!=-1&&(r[l]=o[r[l]-426+35])},e.CFF.readSubrs=function(n,r,o){var a=e._bin,l=[];r=e.CFF.readIndex(n,r,l);var c,h=l.length;c=h<1240?107:h<33900?1131:32768,o.Bias=c,o.Subrs=[];for(var u=0;u<l.length-1;u++)o.Subrs.push(a.readBytes(n,r+l[u],l[u+1]-l[u]))},e.CFF.tableSE=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,0,111,112,113,114,0,115,116,117,118,119,120,121,122,0,123,0,124,125,126,127,128,129,130,131,0,132,133,0,134,135,136,137,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,138,0,139,0,0,0,0,140,141,142,143,0,0,0,0,0,144,0,0,0,145,0,0,146,147,148,149,0,0,0,0],e.CFF.glyphByUnicode=function(n,r){for(var o=0;o<n.charset.length;o++)if(n.charset[o]==r)return o;return-1},e.CFF.glyphBySE=function(n,r){return r<0||r>255?-1:e.CFF.glyphByUnicode(n,e.CFF.tableSE[r])},e.CFF.readEncoding=function(n,r,o){e._bin;var a=[".notdef"],l=n[r];if(r++,l!=0)throw"error: unknown encoding format: "+l;var c=n[r];r++;for(var h=0;h<c;h++)a.push(n[r+h]);return a},e.CFF.readCharset=function(n,r,o){var a=e._bin,l=[".notdef"],c=n[r];if(r++,c==0)for(var h=0;h<o;h++){var u=a.readUshort(n,r);r+=2,l.push(u)}else{if(c!=1&&c!=2)throw"error: format: "+c;for(;l.length<o;){u=a.readUshort(n,r),r+=2;var d=0;for(c==1?(d=n[r],r++):(d=a.readUshort(n,r),r+=2),h=0;h<=d;h++)l.push(u),u++}}return l},e.CFF.readIndex=function(n,r,o){var a=e._bin,l=a.readUshort(n,r)+1,c=n[r+=2];if(r++,c==1)for(var h=0;h<l;h++)o.push(n[r+h]);else if(c==2)for(h=0;h<l;h++)o.push(a.readUshort(n,r+2*h));else if(c==3)for(h=0;h<l;h++)o.push(16777215&a.readUint(n,r+3*h-1));else if(l!=1)throw"unsupported offset size: "+c+", count: "+l;return(r+=l*c)-1},e.CFF.getCharString=function(n,r,o){var a=e._bin,l=n[r],c=n[r+1];n[r+2],n[r+3],n[r+4];var h=1,u=null,d=null;l<=20&&(u=l,h=1),l==12&&(u=100*l+c,h=2),21<=l&&l<=27&&(u=l,h=1),l==28&&(d=a.readShort(n,r+1),h=3),29<=l&&l<=31&&(u=l,h=1),32<=l&&l<=246&&(d=l-139,h=1),247<=l&&l<=250&&(d=256*(l-247)+c+108,h=2),251<=l&&l<=254&&(d=256*-(l-251)-c-108,h=2),l==255&&(d=a.readInt(n,r+1)/65535,h=5),o.val=d??"o"+u,o.size=h},e.CFF.readCharString=function(n,r,o){for(var a=r+o,l=e._bin,c=[];r<a;){var h=n[r],u=n[r+1];n[r+2],n[r+3],n[r+4];var d=1,f=null,p=null;h<=20&&(f=h,d=1),h==12&&(f=100*h+u,d=2),h!=19&&h!=20||(f=h,d=2),21<=h&&h<=27&&(f=h,d=1),h==28&&(p=l.readShort(n,r+1),d=3),29<=h&&h<=31&&(f=h,d=1),32<=h&&h<=246&&(p=h-139,d=1),247<=h&&h<=250&&(p=256*(h-247)+u+108,d=2),251<=h&&h<=254&&(p=256*-(h-251)-u-108,d=2),h==255&&(p=l.readInt(n,r+1)/65535,d=5),c.push(p??"o"+f),r+=d}return c},e.CFF.readDict=function(n,r,o){for(var a=e._bin,l={},c=[];r<o;){var h=n[r],u=n[r+1];n[r+2],n[r+3],n[r+4];var d=1,f=null,p=null;if(h==28&&(p=a.readShort(n,r+1),d=3),h==29&&(p=a.readInt(n,r+1),d=5),32<=h&&h<=246&&(p=h-139,d=1),247<=h&&h<=250&&(p=256*(h-247)+u+108,d=2),251<=h&&h<=254&&(p=256*-(h-251)-u-108,d=2),h==255)throw p=a.readInt(n,r+1)/65535,d=5,"unknown number";if(h==30){var v=[];for(d=1;;){var m=n[r+d];d++;var g=m>>4,y=15&m;if(g!=15&&v.push(g),y!=15&&v.push(y),y==15)break}for(var x="",_=[0,1,2,3,4,5,6,7,8,9,".","e","e-","reserved","-","endOfNumber"],E=0;E<v.length;E++)x+=_[v[E]];p=parseFloat(x)}h<=21&&(f=["version","Notice","FullName","FamilyName","Weight","FontBBox","BlueValues","OtherBlues","FamilyBlues","FamilyOtherBlues","StdHW","StdVW","escape","UniqueID","XUID","charset","Encoding","CharStrings","Private","Subrs","defaultWidthX","nominalWidthX"][h],d=1,h==12&&(f=["Copyright","isFixedPitch","ItalicAngle","UnderlinePosition","UnderlineThickness","PaintType","CharstringType","FontMatrix","StrokeWidth","BlueScale","BlueShift","BlueFuzz","StemSnapH","StemSnapV","ForceBold",0,0,"LanguageGroup","ExpansionFactor","initialRandomSeed","SyntheticBase","PostScript","BaseFontName","BaseFontBlend",0,0,0,0,0,0,"ROS","CIDFontVersion","CIDFontRevision","CIDFontType","CIDCount","UIDBase","FDArray","FDSelect","FontName"][u],d=2)),f!=null?(l[f]=c.length==1?c[0]:c,c=[]):c.push(p),r+=d}return l},e.cmap={},e.cmap.parse=function(n,r,o){n=new Uint8Array(n.buffer,r,o),r=0;var a=e._bin,l={};a.readUshort(n,r),r+=2;var c=a.readUshort(n,r);r+=2;var h=[];l.tables=[];for(var u=0;u<c;u++){var d=a.readUshort(n,r);r+=2;var f=a.readUshort(n,r);r+=2;var p=a.readUint(n,r);r+=4;var v="p"+d+"e"+f,m=h.indexOf(p);if(m==-1){var g;m=l.tables.length,h.push(p);var y=a.readUshort(n,p);y==0?g=e.cmap.parse0(n,p):y==4?g=e.cmap.parse4(n,p):y==6?g=e.cmap.parse6(n,p):y==12?g=e.cmap.parse12(n,p):console.debug("unknown format: "+y,d,f,p),l.tables.push(g)}if(l[v]!=null)throw"multiple tables for one platform+encoding";l[v]=m}return l},e.cmap.parse0=function(n,r){var o=e._bin,a={};a.format=o.readUshort(n,r),r+=2;var l=o.readUshort(n,r);r+=2,o.readUshort(n,r),r+=2,a.map=[];for(var c=0;c<l-6;c++)a.map.push(n[r+c]);return a},e.cmap.parse4=function(n,r){var o=e._bin,a=r,l={};l.format=o.readUshort(n,r),r+=2;var c=o.readUshort(n,r);r+=2,o.readUshort(n,r),r+=2;var h=o.readUshort(n,r);r+=2;var u=h/2;l.searchRange=o.readUshort(n,r),r+=2,l.entrySelector=o.readUshort(n,r),r+=2,l.rangeShift=o.readUshort(n,r),r+=2,l.endCount=o.readUshorts(n,r,u),r+=2*u,r+=2,l.startCount=o.readUshorts(n,r,u),r+=2*u,l.idDelta=[];for(var d=0;d<u;d++)l.idDelta.push(o.readShort(n,r)),r+=2;for(l.idRangeOffset=o.readUshorts(n,r,u),r+=2*u,l.glyphIdArray=[];r<a+c;)l.glyphIdArray.push(o.readUshort(n,r)),r+=2;return l},e.cmap.parse6=function(n,r){var o=e._bin,a={};a.format=o.readUshort(n,r),r+=2,o.readUshort(n,r),r+=2,o.readUshort(n,r),r+=2,a.firstCode=o.readUshort(n,r),r+=2;var l=o.readUshort(n,r);r+=2,a.glyphIdArray=[];for(var c=0;c<l;c++)a.glyphIdArray.push(o.readUshort(n,r)),r+=2;return a},e.cmap.parse12=function(n,r){var o=e._bin,a={};a.format=o.readUshort(n,r),r+=2,r+=2,o.readUint(n,r),r+=4,o.readUint(n,r),r+=4;var l=o.readUint(n,r);r+=4,a.groups=[];for(var c=0;c<l;c++){var h=r+12*c,u=o.readUint(n,h+0),d=o.readUint(n,h+4),f=o.readUint(n,h+8);a.groups.push([u,d,f])}return a},e.glyf={},e.glyf.parse=function(n,r,o,a){for(var l=[],c=0;c<a.maxp.numGlyphs;c++)l.push(null);return l},e.glyf._parseGlyf=function(n,r){var o=e._bin,a=n._data,l=e._tabOffset(a,"glyf",n._offset)+n.loca[r];if(n.loca[r]==n.loca[r+1])return null;var c={};if(c.noc=o.readShort(a,l),l+=2,c.xMin=o.readShort(a,l),l+=2,c.yMin=o.readShort(a,l),l+=2,c.xMax=o.readShort(a,l),l+=2,c.yMax=o.readShort(a,l),l+=2,c.xMin>=c.xMax||c.yMin>=c.yMax)return null;if(c.noc>0){c.endPts=[];for(var h=0;h<c.noc;h++)c.endPts.push(o.readUshort(a,l)),l+=2;var u=o.readUshort(a,l);if(l+=2,a.length-l<u)return null;c.instructions=o.readBytes(a,l,u),l+=u;var d=c.endPts[c.noc-1]+1;for(c.flags=[],h=0;h<d;h++){var f=a[l];if(l++,c.flags.push(f),(8&f)!=0){var p=a[l];l++;for(var v=0;v<p;v++)c.flags.push(f),h++}}for(c.xs=[],h=0;h<d;h++){var m=(2&c.flags[h])!=0,g=(16&c.flags[h])!=0;m?(c.xs.push(g?a[l]:-a[l]),l++):g?c.xs.push(0):(c.xs.push(o.readShort(a,l)),l+=2)}for(c.ys=[],h=0;h<d;h++)m=(4&c.flags[h])!=0,g=(32&c.flags[h])!=0,m?(c.ys.push(g?a[l]:-a[l]),l++):g?c.ys.push(0):(c.ys.push(o.readShort(a,l)),l+=2);var y=0,x=0;for(h=0;h<d;h++)y+=c.xs[h],x+=c.ys[h],c.xs[h]=y,c.ys[h]=x}else{var _;c.parts=[];do{_=o.readUshort(a,l),l+=2;var E={m:{a:1,b:0,c:0,d:1,tx:0,ty:0},p1:-1,p2:-1};if(c.parts.push(E),E.glyphIndex=o.readUshort(a,l),l+=2,1&_){var M=o.readShort(a,l);l+=2;var S=o.readShort(a,l);l+=2}else M=o.readInt8(a,l),l++,S=o.readInt8(a,l),l++;2&_?(E.m.tx=M,E.m.ty=S):(E.p1=M,E.p2=S),8&_?(E.m.a=E.m.d=o.readF2dot14(a,l),l+=2):64&_?(E.m.a=o.readF2dot14(a,l),l+=2,E.m.d=o.readF2dot14(a,l),l+=2):128&_&&(E.m.a=o.readF2dot14(a,l),l+=2,E.m.b=o.readF2dot14(a,l),l+=2,E.m.c=o.readF2dot14(a,l),l+=2,E.m.d=o.readF2dot14(a,l),l+=2)}while(32&_);if(256&_){var T=o.readUshort(a,l);for(l+=2,c.instr=[],h=0;h<T;h++)c.instr.push(a[l]),l++}}return c},e.GDEF={},e.GDEF.parse=function(n,r,o,a){var l=r;r+=4;var c=e._bin.readUshort(n,r);return{glyphClassDef:c===0?null:e._lctf.readClassDef(n,l+c)}},e.GPOS={},e.GPOS.parse=function(n,r,o,a){return e._lctf.parse(n,r,o,a,e.GPOS.subt)},e.GPOS.subt=function(n,r,o,a){var l=e._bin,c=o,h={};if(h.fmt=l.readUshort(n,o),o+=2,r==1||r==2||r==3||r==7||r==8&&h.fmt<=2){var u=l.readUshort(n,o);o+=2,h.coverage=e._lctf.readCoverage(n,u+c)}if(r==1&&h.fmt==1){var d=l.readUshort(n,o);o+=2,d!=0&&(h.pos=e.GPOS.readValueRecord(n,o,d))}else if(r==2&&h.fmt>=1&&h.fmt<=2){d=l.readUshort(n,o),o+=2;var f=l.readUshort(n,o);o+=2;var p=e._lctf.numOfOnes(d),v=e._lctf.numOfOnes(f);if(h.fmt==1){h.pairsets=[];var m=l.readUshort(n,o);o+=2;for(var g=0;g<m;g++){var y=c+l.readUshort(n,o);o+=2;var x=l.readUshort(n,y);y+=2;for(var _=[],E=0;E<x;E++){var M=l.readUshort(n,y);y+=2,d!=0&&(I=e.GPOS.readValueRecord(n,y,d),y+=2*p),f!=0&&(F=e.GPOS.readValueRecord(n,y,f),y+=2*v),_.push({gid2:M,val1:I,val2:F})}h.pairsets.push(_)}}if(h.fmt==2){var S=l.readUshort(n,o);o+=2;var T=l.readUshort(n,o);o+=2;var w=l.readUshort(n,o);o+=2;var b=l.readUshort(n,o);for(o+=2,h.classDef1=e._lctf.readClassDef(n,c+S),h.classDef2=e._lctf.readClassDef(n,c+T),h.matrix=[],g=0;g<w;g++){var D=[];for(E=0;E<b;E++){var I=null,F=null;d!=0&&(I=e.GPOS.readValueRecord(n,o,d),o+=2*p),f!=0&&(F=e.GPOS.readValueRecord(n,o,f),o+=2*v),D.push({val1:I,val2:F})}h.matrix.push(D)}}}else if(r==4&&h.fmt==1)h.markCoverage=e._lctf.readCoverage(n,l.readUshort(n,o)+c),h.baseCoverage=e._lctf.readCoverage(n,l.readUshort(n,o+2)+c),h.markClassCount=l.readUshort(n,o+4),h.markArray=e.GPOS.readMarkArray(n,l.readUshort(n,o+6)+c),h.baseArray=e.GPOS.readBaseArray(n,l.readUshort(n,o+8)+c,h.markClassCount);else if(r==6&&h.fmt==1)h.mark1Coverage=e._lctf.readCoverage(n,l.readUshort(n,o)+c),h.mark2Coverage=e._lctf.readCoverage(n,l.readUshort(n,o+2)+c),h.markClassCount=l.readUshort(n,o+4),h.mark1Array=e.GPOS.readMarkArray(n,l.readUshort(n,o+6)+c),h.mark2Array=e.GPOS.readBaseArray(n,l.readUshort(n,o+8)+c,h.markClassCount);else{if(r==9&&h.fmt==1){var V=l.readUshort(n,o);o+=2;var J=l.readUint(n,o);if(o+=4,a.ltype==9)a.ltype=V;else if(a.ltype!=V)throw"invalid extension substitution";return e.GPOS.subt(n,a.ltype,c+J)}console.debug("unsupported GPOS table LookupType",r,"format",h.fmt)}return h},e.GPOS.readValueRecord=function(n,r,o){var a=e._bin,l=[];return l.push(1&o?a.readShort(n,r):0),r+=1&o?2:0,l.push(2&o?a.readShort(n,r):0),r+=2&o?2:0,l.push(4&o?a.readShort(n,r):0),r+=4&o?2:0,l.push(8&o?a.readShort(n,r):0),r+=8&o?2:0,l},e.GPOS.readBaseArray=function(n,r,o){var a=e._bin,l=[],c=r,h=a.readUshort(n,r);r+=2;for(var u=0;u<h;u++){for(var d=[],f=0;f<o;f++)d.push(e.GPOS.readAnchorRecord(n,c+a.readUshort(n,r))),r+=2;l.push(d)}return l},e.GPOS.readMarkArray=function(n,r){var o=e._bin,a=[],l=r,c=o.readUshort(n,r);r+=2;for(var h=0;h<c;h++){var u=e.GPOS.readAnchorRecord(n,o.readUshort(n,r+2)+l);u.markClass=o.readUshort(n,r),a.push(u),r+=4}return a},e.GPOS.readAnchorRecord=function(n,r){var o=e._bin,a={};return a.fmt=o.readUshort(n,r),a.x=o.readShort(n,r+2),a.y=o.readShort(n,r+4),a},e.GSUB={},e.GSUB.parse=function(n,r,o,a){return e._lctf.parse(n,r,o,a,e.GSUB.subt)},e.GSUB.subt=function(n,r,o,a){var l=e._bin,c=o,h={};if(h.fmt=l.readUshort(n,o),o+=2,r!=1&&r!=2&&r!=4&&r!=5&&r!=6)return null;if(r==1||r==2||r==4||r==5&&h.fmt<=2||r==6&&h.fmt<=2){var u=l.readUshort(n,o);o+=2,h.coverage=e._lctf.readCoverage(n,c+u)}if(r==1&&h.fmt>=1&&h.fmt<=2){if(h.fmt==1)h.delta=l.readShort(n,o),o+=2;else if(h.fmt==2){var d=l.readUshort(n,o);o+=2,h.newg=l.readUshorts(n,o,d),o+=2*h.newg.length}}else if(r==2&&h.fmt==1){d=l.readUshort(n,o),o+=2,h.seqs=[];for(var f=0;f<d;f++){var p=l.readUshort(n,o)+c;o+=2;var v=l.readUshort(n,p);h.seqs.push(l.readUshorts(n,p+2,v))}}else if(r==4)for(h.vals=[],d=l.readUshort(n,o),o+=2,f=0;f<d;f++){var m=l.readUshort(n,o);o+=2,h.vals.push(e.GSUB.readLigatureSet(n,c+m))}else if(r==5&&h.fmt==2){if(h.fmt==2){var g=l.readUshort(n,o);o+=2,h.cDef=e._lctf.readClassDef(n,c+g),h.scset=[];var y=l.readUshort(n,o);for(o+=2,f=0;f<y;f++){var x=l.readUshort(n,o);o+=2,h.scset.push(x==0?null:e.GSUB.readSubClassSet(n,c+x))}}}else if(r==6&&h.fmt==3){if(h.fmt==3){for(f=0;f<3;f++){d=l.readUshort(n,o),o+=2;for(var _=[],E=0;E<d;E++)_.push(e._lctf.readCoverage(n,c+l.readUshort(n,o+2*E)));o+=2*d,f==0&&(h.backCvg=_),f==1&&(h.inptCvg=_),f==2&&(h.ahedCvg=_)}d=l.readUshort(n,o),o+=2,h.lookupRec=e.GSUB.readSubstLookupRecords(n,o,d)}}else{if(r==7&&h.fmt==1){var M=l.readUshort(n,o);o+=2;var S=l.readUint(n,o);if(o+=4,a.ltype==9)a.ltype=M;else if(a.ltype!=M)throw"invalid extension substitution";return e.GSUB.subt(n,a.ltype,c+S)}console.debug("unsupported GSUB table LookupType",r,"format",h.fmt)}return h},e.GSUB.readSubClassSet=function(n,r){var o=e._bin.readUshort,a=r,l=[],c=o(n,r);r+=2;for(var h=0;h<c;h++){var u=o(n,r);r+=2,l.push(e.GSUB.readSubClassRule(n,a+u))}return l},e.GSUB.readSubClassRule=function(n,r){var o=e._bin.readUshort,a={},l=o(n,r),c=o(n,r+=2);r+=2,a.input=[];for(var h=0;h<l-1;h++)a.input.push(o(n,r)),r+=2;return a.substLookupRecords=e.GSUB.readSubstLookupRecords(n,r,c),a},e.GSUB.readSubstLookupRecords=function(n,r,o){for(var a=e._bin.readUshort,l=[],c=0;c<o;c++)l.push(a(n,r),a(n,r+2)),r+=4;return l},e.GSUB.readChainSubClassSet=function(n,r){var o=e._bin,a=r,l=[],c=o.readUshort(n,r);r+=2;for(var h=0;h<c;h++){var u=o.readUshort(n,r);r+=2,l.push(e.GSUB.readChainSubClassRule(n,a+u))}return l},e.GSUB.readChainSubClassRule=function(n,r){for(var o=e._bin,a={},l=["backtrack","input","lookahead"],c=0;c<l.length;c++){var h=o.readUshort(n,r);r+=2,c==1&&h--,a[l[c]]=o.readUshorts(n,r,h),r+=2*a[l[c]].length}return h=o.readUshort(n,r),r+=2,a.subst=o.readUshorts(n,r,2*h),r+=2*a.subst.length,a},e.GSUB.readLigatureSet=function(n,r){var o=e._bin,a=r,l=[],c=o.readUshort(n,r);r+=2;for(var h=0;h<c;h++){var u=o.readUshort(n,r);r+=2,l.push(e.GSUB.readLigature(n,a+u))}return l},e.GSUB.readLigature=function(n,r){var o=e._bin,a={chain:[]};a.nglyph=o.readUshort(n,r),r+=2;var l=o.readUshort(n,r);r+=2;for(var c=0;c<l-1;c++)a.chain.push(o.readUshort(n,r)),r+=2;return a},e.head={},e.head.parse=function(n,r,o){var a=e._bin,l={};return a.readFixed(n,r),r+=4,l.fontRevision=a.readFixed(n,r),r+=4,a.readUint(n,r),r+=4,a.readUint(n,r),r+=4,l.flags=a.readUshort(n,r),r+=2,l.unitsPerEm=a.readUshort(n,r),r+=2,l.created=a.readUint64(n,r),r+=8,l.modified=a.readUint64(n,r),r+=8,l.xMin=a.readShort(n,r),r+=2,l.yMin=a.readShort(n,r),r+=2,l.xMax=a.readShort(n,r),r+=2,l.yMax=a.readShort(n,r),r+=2,l.macStyle=a.readUshort(n,r),r+=2,l.lowestRecPPEM=a.readUshort(n,r),r+=2,l.fontDirectionHint=a.readShort(n,r),r+=2,l.indexToLocFormat=a.readShort(n,r),r+=2,l.glyphDataFormat=a.readShort(n,r),r+=2,l},e.hhea={},e.hhea.parse=function(n,r,o){var a=e._bin,l={};return a.readFixed(n,r),r+=4,l.ascender=a.readShort(n,r),r+=2,l.descender=a.readShort(n,r),r+=2,l.lineGap=a.readShort(n,r),r+=2,l.advanceWidthMax=a.readUshort(n,r),r+=2,l.minLeftSideBearing=a.readShort(n,r),r+=2,l.minRightSideBearing=a.readShort(n,r),r+=2,l.xMaxExtent=a.readShort(n,r),r+=2,l.caretSlopeRise=a.readShort(n,r),r+=2,l.caretSlopeRun=a.readShort(n,r),r+=2,l.caretOffset=a.readShort(n,r),r+=2,r+=8,l.metricDataFormat=a.readShort(n,r),r+=2,l.numberOfHMetrics=a.readUshort(n,r),r+=2,l},e.hmtx={},e.hmtx.parse=function(n,r,o,a){for(var l=e._bin,c={aWidth:[],lsBearing:[]},h=0,u=0,d=0;d<a.maxp.numGlyphs;d++)d<a.hhea.numberOfHMetrics&&(h=l.readUshort(n,r),r+=2,u=l.readShort(n,r),r+=2),c.aWidth.push(h),c.lsBearing.push(u);return c},e.kern={},e.kern.parse=function(n,r,o,a){var l=e._bin,c=l.readUshort(n,r);if(r+=2,c==1)return e.kern.parseV1(n,r-2,o,a);var h=l.readUshort(n,r);r+=2;for(var u={glyph1:[],rval:[]},d=0;d<h;d++){r+=2,o=l.readUshort(n,r),r+=2;var f=l.readUshort(n,r);r+=2;var p=f>>>8;if((p&=15)!=0)throw"unknown kern table format: "+p;r=e.kern.readFormat0(n,r,u)}return u},e.kern.parseV1=function(n,r,o,a){var l=e._bin;l.readFixed(n,r),r+=4;var c=l.readUint(n,r);r+=4;for(var h={glyph1:[],rval:[]},u=0;u<c;u++){l.readUint(n,r),r+=4;var d=l.readUshort(n,r);r+=2,l.readUshort(n,r),r+=2;var f=d>>>8;if((f&=15)!=0)throw"unknown kern table format: "+f;r=e.kern.readFormat0(n,r,h)}return h},e.kern.readFormat0=function(n,r,o){var a=e._bin,l=-1,c=a.readUshort(n,r);r+=2,a.readUshort(n,r),r+=2,a.readUshort(n,r),r+=2,a.readUshort(n,r),r+=2;for(var h=0;h<c;h++){var u=a.readUshort(n,r);r+=2;var d=a.readUshort(n,r);r+=2;var f=a.readShort(n,r);r+=2,u!=l&&(o.glyph1.push(u),o.rval.push({glyph2:[],vals:[]}));var p=o.rval[o.rval.length-1];p.glyph2.push(d),p.vals.push(f),l=u}return r},e.loca={},e.loca.parse=function(n,r,o,a){var l=e._bin,c=[],h=a.head.indexToLocFormat,u=a.maxp.numGlyphs+1;if(h==0)for(var d=0;d<u;d++)c.push(l.readUshort(n,r+(d<<1))<<1);if(h==1)for(d=0;d<u;d++)c.push(l.readUint(n,r+(d<<2)));return c},e.maxp={},e.maxp.parse=function(n,r,o){var a=e._bin,l={},c=a.readUint(n,r);return r+=4,l.numGlyphs=a.readUshort(n,r),r+=2,c==65536&&(l.maxPoints=a.readUshort(n,r),r+=2,l.maxContours=a.readUshort(n,r),r+=2,l.maxCompositePoints=a.readUshort(n,r),r+=2,l.maxCompositeContours=a.readUshort(n,r),r+=2,l.maxZones=a.readUshort(n,r),r+=2,l.maxTwilightPoints=a.readUshort(n,r),r+=2,l.maxStorage=a.readUshort(n,r),r+=2,l.maxFunctionDefs=a.readUshort(n,r),r+=2,l.maxInstructionDefs=a.readUshort(n,r),r+=2,l.maxStackElements=a.readUshort(n,r),r+=2,l.maxSizeOfInstructions=a.readUshort(n,r),r+=2,l.maxComponentElements=a.readUshort(n,r),r+=2,l.maxComponentDepth=a.readUshort(n,r),r+=2),l},e.name={},e.name.parse=function(n,r,o){var a=e._bin,l={};a.readUshort(n,r),r+=2;var c=a.readUshort(n,r);r+=2,a.readUshort(n,r);for(var h,u=["copyright","fontFamily","fontSubfamily","ID","fullName","version","postScriptName","trademark","manufacturer","designer","description","urlVendor","urlDesigner","licence","licenceURL","---","typoFamilyName","typoSubfamilyName","compatibleFull","sampleText","postScriptCID","wwsFamilyName","wwsSubfamilyName","lightPalette","darkPalette"],d=r+=2,f=0;f<c;f++){var p=a.readUshort(n,r);r+=2;var v=a.readUshort(n,r);r+=2;var m=a.readUshort(n,r);r+=2;var g=a.readUshort(n,r);r+=2;var y=a.readUshort(n,r);r+=2;var x=a.readUshort(n,r);r+=2;var _,E=u[g],M=d+12*c+x;if(p==0)_=a.readUnicode(n,M,y/2);else if(p==3&&v==0)_=a.readUnicode(n,M,y/2);else if(v==0)_=a.readASCII(n,M,y);else if(v==1)_=a.readUnicode(n,M,y/2);else if(v==3)_=a.readUnicode(n,M,y/2);else{if(p!=1)throw"unknown encoding "+v+", platformID: "+p;_=a.readASCII(n,M,y),console.debug("reading unknown MAC encoding "+v+" as ASCII")}var S="p"+p+","+m.toString(16);l[S]==null&&(l[S]={}),l[S][E!==void 0?E:g]=_,l[S]._lang=m}for(var T in l)if(l[T].postScriptName!=null&&l[T]._lang==1033)return l[T];for(var T in l)if(l[T].postScriptName!=null&&l[T]._lang==0)return l[T];for(var T in l)if(l[T].postScriptName!=null&&l[T]._lang==3084)return l[T];for(var T in l)if(l[T].postScriptName!=null)return l[T];for(var T in l){h=T;break}return console.debug("returning name table with languageID "+l[h]._lang),l[h]},e["OS/2"]={},e["OS/2"].parse=function(n,r,o){var a=e._bin.readUshort(n,r);r+=2;var l={};if(a==0)e["OS/2"].version0(n,r,l);else if(a==1)e["OS/2"].version1(n,r,l);else if(a==2||a==3||a==4)e["OS/2"].version2(n,r,l);else{if(a!=5)throw"unknown OS/2 table version: "+a;e["OS/2"].version5(n,r,l)}return l},e["OS/2"].version0=function(n,r,o){var a=e._bin;return o.xAvgCharWidth=a.readShort(n,r),r+=2,o.usWeightClass=a.readUshort(n,r),r+=2,o.usWidthClass=a.readUshort(n,r),r+=2,o.fsType=a.readUshort(n,r),r+=2,o.ySubscriptXSize=a.readShort(n,r),r+=2,o.ySubscriptYSize=a.readShort(n,r),r+=2,o.ySubscriptXOffset=a.readShort(n,r),r+=2,o.ySubscriptYOffset=a.readShort(n,r),r+=2,o.ySuperscriptXSize=a.readShort(n,r),r+=2,o.ySuperscriptYSize=a.readShort(n,r),r+=2,o.ySuperscriptXOffset=a.readShort(n,r),r+=2,o.ySuperscriptYOffset=a.readShort(n,r),r+=2,o.yStrikeoutSize=a.readShort(n,r),r+=2,o.yStrikeoutPosition=a.readShort(n,r),r+=2,o.sFamilyClass=a.readShort(n,r),r+=2,o.panose=a.readBytes(n,r,10),r+=10,o.ulUnicodeRange1=a.readUint(n,r),r+=4,o.ulUnicodeRange2=a.readUint(n,r),r+=4,o.ulUnicodeRange3=a.readUint(n,r),r+=4,o.ulUnicodeRange4=a.readUint(n,r),r+=4,o.achVendID=[a.readInt8(n,r),a.readInt8(n,r+1),a.readInt8(n,r+2),a.readInt8(n,r+3)],r+=4,o.fsSelection=a.readUshort(n,r),r+=2,o.usFirstCharIndex=a.readUshort(n,r),r+=2,o.usLastCharIndex=a.readUshort(n,r),r+=2,o.sTypoAscender=a.readShort(n,r),r+=2,o.sTypoDescender=a.readShort(n,r),r+=2,o.sTypoLineGap=a.readShort(n,r),r+=2,o.usWinAscent=a.readUshort(n,r),r+=2,o.usWinDescent=a.readUshort(n,r),r+=2},e["OS/2"].version1=function(n,r,o){var a=e._bin;return r=e["OS/2"].version0(n,r,o),o.ulCodePageRange1=a.readUint(n,r),r+=4,o.ulCodePageRange2=a.readUint(n,r),r+=4},e["OS/2"].version2=function(n,r,o){var a=e._bin;return r=e["OS/2"].version1(n,r,o),o.sxHeight=a.readShort(n,r),r+=2,o.sCapHeight=a.readShort(n,r),r+=2,o.usDefault=a.readUshort(n,r),r+=2,o.usBreak=a.readUshort(n,r),r+=2,o.usMaxContext=a.readUshort(n,r),r+=2},e["OS/2"].version5=function(n,r,o){var a=e._bin;return r=e["OS/2"].version2(n,r,o),o.usLowerOpticalPointSize=a.readUshort(n,r),r+=2,o.usUpperOpticalPointSize=a.readUshort(n,r),r+=2},e.post={},e.post.parse=function(n,r,o){var a=e._bin,l={};return l.version=a.readFixed(n,r),r+=4,l.italicAngle=a.readFixed(n,r),r+=4,l.underlinePosition=a.readShort(n,r),r+=2,l.underlineThickness=a.readShort(n,r),r+=2,l},e==null&&(e={}),e.U==null&&(e.U={}),e.U.codeToGlyph=function(n,r){var o=n.cmap,a=-1;if(o.p0e4!=null?a=o.p0e4:o.p3e1!=null?a=o.p3e1:o.p1e0!=null?a=o.p1e0:o.p0e3!=null&&(a=o.p0e3),a==-1)throw"no familiar platform and encoding!";var l=o.tables[a];if(l.format==0)return r>=l.map.length?0:l.map[r];if(l.format==4){for(var c=-1,h=0;h<l.endCount.length;h++)if(r<=l.endCount[h]){c=h;break}return c==-1||l.startCount[c]>r?0:65535&(l.idRangeOffset[c]!=0?l.glyphIdArray[r-l.startCount[c]+(l.idRangeOffset[c]>>1)-(l.idRangeOffset.length-c)]:r+l.idDelta[c])}if(l.format==12){if(r>l.groups[l.groups.length-1][1])return 0;for(h=0;h<l.groups.length;h++){var u=l.groups[h];if(u[0]<=r&&r<=u[1])return u[2]+(r-u[0])}return 0}throw"unknown cmap table format "+l.format},e.U.glyphToPath=function(n,r){var o={cmds:[],crds:[]};if(n.SVG&&n.SVG.entries[r]){var a=n.SVG.entries[r];return a==null?o:(typeof a=="string"&&(a=e.SVG.toPath(a),n.SVG.entries[r]=a),a)}if(n.CFF){var l={x:0,y:0,stack:[],nStems:0,haveWidth:!1,width:n.CFF.Private?n.CFF.Private.defaultWidthX:0,open:!1},c=n.CFF,h=n.CFF.Private;if(c.ROS){for(var u=0;c.FDSelect[u+2]<=r;)u+=2;h=c.FDArray[c.FDSelect[u+1]].Private}e.U._drawCFF(n.CFF.CharStrings[r],l,c,h,o)}else n.glyf&&e.U._drawGlyf(r,n,o);return o},e.U._drawGlyf=function(n,r,o){var a=r.glyf[n];a==null&&(a=r.glyf[n]=e.glyf._parseGlyf(r,n)),a!=null&&(a.noc>-1?e.U._simpleGlyph(a,o):e.U._compoGlyph(a,r,o))},e.U._simpleGlyph=function(n,r){for(var o=0;o<n.noc;o++){for(var a=o==0?0:n.endPts[o-1]+1,l=n.endPts[o],c=a;c<=l;c++){var h=c==a?l:c-1,u=c==l?a:c+1,d=1&n.flags[c],f=1&n.flags[h],p=1&n.flags[u],v=n.xs[c],m=n.ys[c];if(c==a)if(d){if(!f){e.U.P.moveTo(r,v,m);continue}e.U.P.moveTo(r,n.xs[h],n.ys[h])}else f?e.U.P.moveTo(r,n.xs[h],n.ys[h]):e.U.P.moveTo(r,(n.xs[h]+v)/2,(n.ys[h]+m)/2);d?f&&e.U.P.lineTo(r,v,m):p?e.U.P.qcurveTo(r,v,m,n.xs[u],n.ys[u]):e.U.P.qcurveTo(r,v,m,(v+n.xs[u])/2,(m+n.ys[u])/2)}e.U.P.closePath(r)}},e.U._compoGlyph=function(n,r,o){for(var a=0;a<n.parts.length;a++){var l={cmds:[],crds:[]},c=n.parts[a];e.U._drawGlyf(c.glyphIndex,r,l);for(var h=c.m,u=0;u<l.crds.length;u+=2){var d=l.crds[u],f=l.crds[u+1];o.crds.push(d*h.a+f*h.b+h.tx),o.crds.push(d*h.c+f*h.d+h.ty)}for(u=0;u<l.cmds.length;u++)o.cmds.push(l.cmds[u])}},e.U._getGlyphClass=function(n,r){var o=e._lctf.getInterval(r,n);return o==-1?0:r[o+2]},e.U._applySubs=function(n,r,o,a){for(var l=n.length-r-1,c=0;c<o.tabs.length;c++)if(o.tabs[c]!=null){var h,u=o.tabs[c];if(!u.coverage||(h=e._lctf.coverageIndex(u.coverage,n[r]))!=-1){if(o.ltype==1)n[r],u.fmt==1?n[r]=n[r]+u.delta:n[r]=u.newg[h];else if(o.ltype==4)for(var d=u.vals[h],f=0;f<d.length;f++){var p=d[f],v=p.chain.length;if(!(v>l)){for(var m=!0,g=0,y=0;y<v;y++){for(;n[r+g+(1+y)]==-1;)g++;p.chain[y]!=n[r+g+(1+y)]&&(m=!1)}if(m){for(n[r]=p.nglyph,y=0;y<v+g;y++)n[r+y+1]=-1;break}}}else if(o.ltype==5&&u.fmt==2)for(var x=e._lctf.getInterval(u.cDef,n[r]),_=u.cDef[x+2],E=u.scset[_],M=0;M<E.length;M++){var S=E[M],T=S.input;if(!(T.length>l)){for(m=!0,y=0;y<T.length;y++){var w=e._lctf.getInterval(u.cDef,n[r+1+y]);if(x==-1&&u.cDef[w+2]!=T[y]){m=!1;break}}if(m){var b=S.substLookupRecords;for(f=0;f<b.length;f+=2)b[f],b[f+1]}}}else if(o.ltype==6&&u.fmt==3){if(!e.U._glsCovered(n,u.backCvg,r-u.backCvg.length)||!e.U._glsCovered(n,u.inptCvg,r)||!e.U._glsCovered(n,u.ahedCvg,r+u.inptCvg.length))continue;var D=u.lookupRec;for(M=0;M<D.length;M+=2){x=D[M];var I=a[D[M+1]];e.U._applySubs(n,r+x,I,a)}}}}},e.U._glsCovered=function(n,r,o){for(var a=0;a<r.length;a++)if(e._lctf.coverageIndex(r[a],n[o+a])==-1)return!1;return!0},e.U.glyphsToPath=function(n,r,o){for(var a={cmds:[],crds:[]},l=0,c=0;c<r.length;c++){var h=r[c];if(h!=-1){for(var u=c<r.length-1&&r[c+1]!=-1?r[c+1]:0,d=e.U.glyphToPath(n,h),f=0;f<d.crds.length;f+=2)a.crds.push(d.crds[f]+l),a.crds.push(d.crds[f+1]);for(o&&a.cmds.push(o),f=0;f<d.cmds.length;f++)a.cmds.push(d.cmds[f]);o&&a.cmds.push("X"),l+=n.hmtx.aWidth[h],c<r.length-1&&(l+=e.U.getPairAdjustment(n,h,u))}}return a},e.U.P={},e.U.P.moveTo=function(n,r,o){n.cmds.push("M"),n.crds.push(r,o)},e.U.P.lineTo=function(n,r,o){n.cmds.push("L"),n.crds.push(r,o)},e.U.P.curveTo=function(n,r,o,a,l,c,h){n.cmds.push("C"),n.crds.push(r,o,a,l,c,h)},e.U.P.qcurveTo=function(n,r,o,a,l){n.cmds.push("Q"),n.crds.push(r,o,a,l)},e.U.P.closePath=function(n){n.cmds.push("Z")},e.U._drawCFF=function(n,r,o,a,l){for(var c=r.stack,h=r.nStems,u=r.haveWidth,d=r.width,f=r.open,p=0,v=r.x,m=r.y,g=0,y=0,x=0,_=0,E=0,M=0,S=0,T=0,w=0,b=0,D={val:0,size:0};p<n.length;){e.CFF.getCharString(n,p,D);var I=D.val;if(p+=D.size,I=="o1"||I=="o18")c.length%2!=0&&!u&&(d=c.shift()+a.nominalWidthX),h+=c.length>>1,c.length=0,u=!0;else if(I=="o3"||I=="o23")c.length%2!=0&&!u&&(d=c.shift()+a.nominalWidthX),h+=c.length>>1,c.length=0,u=!0;else if(I=="o4")c.length>1&&!u&&(d=c.shift()+a.nominalWidthX,u=!0),f&&e.U.P.closePath(l),m+=c.pop(),e.U.P.moveTo(l,v,m),f=!0;else if(I=="o5")for(;c.length>0;)v+=c.shift(),m+=c.shift(),e.U.P.lineTo(l,v,m);else if(I=="o6"||I=="o7")for(var F=c.length,V=I=="o6",J=0;J<F;J++){var O=c.shift();V?v+=O:m+=O,V=!V,e.U.P.lineTo(l,v,m)}else if(I=="o8"||I=="o24"){F=c.length;for(var ee=0;ee+6<=F;)g=v+c.shift(),y=m+c.shift(),x=g+c.shift(),_=y+c.shift(),v=x+c.shift(),m=_+c.shift(),e.U.P.curveTo(l,g,y,x,_,v,m),ee+=6;I=="o24"&&(v+=c.shift(),m+=c.shift(),e.U.P.lineTo(l,v,m))}else{if(I=="o11")break;if(I=="o1234"||I=="o1235"||I=="o1236"||I=="o1237")I=="o1234"&&(y=m,x=(g=v+c.shift())+c.shift(),b=_=y+c.shift(),M=_,T=m,v=(S=(E=(w=x+c.shift())+c.shift())+c.shift())+c.shift(),e.U.P.curveTo(l,g,y,x,_,w,b),e.U.P.curveTo(l,E,M,S,T,v,m)),I=="o1235"&&(g=v+c.shift(),y=m+c.shift(),x=g+c.shift(),_=y+c.shift(),w=x+c.shift(),b=_+c.shift(),E=w+c.shift(),M=b+c.shift(),S=E+c.shift(),T=M+c.shift(),v=S+c.shift(),m=T+c.shift(),c.shift(),e.U.P.curveTo(l,g,y,x,_,w,b),e.U.P.curveTo(l,E,M,S,T,v,m)),I=="o1236"&&(g=v+c.shift(),y=m+c.shift(),x=g+c.shift(),b=_=y+c.shift(),M=_,S=(E=(w=x+c.shift())+c.shift())+c.shift(),T=M+c.shift(),v=S+c.shift(),e.U.P.curveTo(l,g,y,x,_,w,b),e.U.P.curveTo(l,E,M,S,T,v,m)),I=="o1237"&&(g=v+c.shift(),y=m+c.shift(),x=g+c.shift(),_=y+c.shift(),w=x+c.shift(),b=_+c.shift(),E=w+c.shift(),M=b+c.shift(),S=E+c.shift(),T=M+c.shift(),Math.abs(S-v)>Math.abs(T-m)?v=S+c.shift():m=T+c.shift(),e.U.P.curveTo(l,g,y,x,_,w,b),e.U.P.curveTo(l,E,M,S,T,v,m));else if(I=="o14"){if(c.length>0&&!u&&(d=c.shift()+o.nominalWidthX,u=!0),c.length==4){var Y=c.shift(),j=c.shift(),$=c.shift(),U=c.shift(),Z=e.CFF.glyphBySE(o,$),K=e.CFF.glyphBySE(o,U);e.U._drawCFF(o.CharStrings[Z],r,o,a,l),r.x=Y,r.y=j,e.U._drawCFF(o.CharStrings[K],r,o,a,l)}f&&(e.U.P.closePath(l),f=!1)}else if(I=="o19"||I=="o20")c.length%2!=0&&!u&&(d=c.shift()+a.nominalWidthX),h+=c.length>>1,c.length=0,u=!0,p+=h+7>>3;else if(I=="o21")c.length>2&&!u&&(d=c.shift()+a.nominalWidthX,u=!0),m+=c.pop(),v+=c.pop(),f&&e.U.P.closePath(l),e.U.P.moveTo(l,v,m),f=!0;else if(I=="o22")c.length>1&&!u&&(d=c.shift()+a.nominalWidthX,u=!0),v+=c.pop(),f&&e.U.P.closePath(l),e.U.P.moveTo(l,v,m),f=!0;else if(I=="o25"){for(;c.length>6;)v+=c.shift(),m+=c.shift(),e.U.P.lineTo(l,v,m);g=v+c.shift(),y=m+c.shift(),x=g+c.shift(),_=y+c.shift(),v=x+c.shift(),m=_+c.shift(),e.U.P.curveTo(l,g,y,x,_,v,m)}else if(I=="o26")for(c.length%2&&(v+=c.shift());c.length>0;)g=v,y=m+c.shift(),v=x=g+c.shift(),m=(_=y+c.shift())+c.shift(),e.U.P.curveTo(l,g,y,x,_,v,m);else if(I=="o27")for(c.length%2&&(m+=c.shift());c.length>0;)y=m,x=(g=v+c.shift())+c.shift(),_=y+c.shift(),v=x+c.shift(),m=_,e.U.P.curveTo(l,g,y,x,_,v,m);else if(I=="o10"||I=="o29"){var k=I=="o10"?a:o;if(c.length==0)console.debug("error: empty stack");else{var H=c.pop(),q=k.Subrs[H+k.Bias];r.x=v,r.y=m,r.nStems=h,r.haveWidth=u,r.width=d,r.open=f,e.U._drawCFF(q,r,o,a,l),v=r.x,m=r.y,h=r.nStems,u=r.haveWidth,d=r.width,f=r.open}}else if(I=="o30"||I=="o31"){var W=c.length,ne=(ee=0,I=="o31");for(ee+=W-(F=-3&W);ee<F;)ne?(y=m,x=(g=v+c.shift())+c.shift(),m=(_=y+c.shift())+c.shift(),F-ee==5?(v=x+c.shift(),ee++):v=x,ne=!1):(g=v,y=m+c.shift(),x=g+c.shift(),_=y+c.shift(),v=x+c.shift(),F-ee==5?(m=_+c.shift(),ee++):m=_,ne=!0),e.U.P.curveTo(l,g,y,x,_,v,m),ee+=4}else{if((I+"").charAt(0)=="o")throw console.debug("Unknown operation: "+I,n),I;c.push(I)}}}r.x=v,r.y=m,r.nStems=h,r.haveWidth=u,r.width=d,r.open=f};var t=e,i={Typr:t};return s.Typr=t,s.default=i,Object.defineProperty(s,"__esModule",{value:!0}),s}({}).Typr}/*!
Custom bundle of woff2otf (https://github.com/arty-name/woff2otf) with fflate
(https://github.com/101arrowz/fflate) for use in Troika text rendering. 
Original licenses apply: 
- fflate: https://github.com/101arrowz/fflate/blob/master/LICENSE (MIT)
- woff2otf.js: https://github.com/arty-name/woff2otf/blob/master/woff2otf.js (Apache2)
*/function jC(){return function(s){var e=Uint8Array,t=Uint16Array,i=Uint32Array,n=new e([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),r=new e([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),o=new e([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),a=function(I,F){for(var V=new t(31),J=0;J<31;++J)V[J]=F+=1<<I[J-1];var O=new i(V[30]);for(J=1;J<30;++J)for(var ee=V[J];ee<V[J+1];++ee)O[ee]=ee-V[J]<<5|J;return[V,O]},l=a(n,2),c=l[0],h=l[1];c[28]=258,h[258]=28;for(var u=a(r,0)[0],d=new t(32768),f=0;f<32768;++f){var p=(43690&f)>>>1|(21845&f)<<1;p=(61680&(p=(52428&p)>>>2|(13107&p)<<2))>>>4|(3855&p)<<4,d[f]=((65280&p)>>>8|(255&p)<<8)>>>1}var v=function(I,F,V){for(var J=I.length,O=0,ee=new t(F);O<J;++O)++ee[I[O]-1];var Y,j=new t(F);for(O=0;O<F;++O)j[O]=j[O-1]+ee[O-1]<<1;{Y=new t(1<<F);var $=15-F;for(O=0;O<J;++O)if(I[O])for(var U=O<<4|I[O],Z=F-I[O],K=j[I[O]-1]++<<Z,k=K|(1<<Z)-1;K<=k;++K)Y[d[K]>>>$]=U}return Y},m=new e(288);for(f=0;f<144;++f)m[f]=8;for(f=144;f<256;++f)m[f]=9;for(f=256;f<280;++f)m[f]=7;for(f=280;f<288;++f)m[f]=8;var g=new e(32);for(f=0;f<32;++f)g[f]=5;var y=v(m,9),x=v(g,5),_=function(I){for(var F=I[0],V=1;V<I.length;++V)I[V]>F&&(F=I[V]);return F},E=function(I,F,V){var J=F/8|0;return(I[J]|I[J+1]<<8)>>(7&F)&V},M=function(I,F){var V=F/8|0;return(I[V]|I[V+1]<<8|I[V+2]<<16)>>(7&F)},S=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],T=function(I,F,V){var J=new Error(F||S[I]);if(J.code=I,Error.captureStackTrace&&Error.captureStackTrace(J,T),!V)throw J;return J},w=function(I,F,V){var J=I.length;if(!J||V&&!V.l&&J<5)return F||new e(0);var O=!F||V,ee=!V||V.i;V||(V={}),F||(F=new e(3*J));var Y,j=function(Te){var ut=F.length;if(Te>ut){var tt=new e(Math.max(2*ut,Te));tt.set(F),F=tt}},$=V.f||0,U=V.p||0,Z=V.b||0,K=V.l,k=V.d,H=V.m,q=V.n,W=8*J;do{if(!K){V.f=$=E(I,U,1);var ne=E(I,U+1,3);if(U+=3,!ne){var ge=I[(le=((Y=U)/8|0)+(7&Y&&1)+4)-4]|I[le-3]<<8,ye=le+ge;if(ye>J){ee&&T(0);break}O&&j(Z+ge),F.set(I.subarray(le,ye),Z),V.b=Z+=ge,V.p=U=8*ye;continue}if(ne==1)K=y,k=x,H=9,q=5;else if(ne==2){var Se=E(I,U,31)+257,pe=E(I,U+10,15)+4,Ie=Se+E(I,U+5,31)+1;U+=14;for(var X=new e(Ie),Oe=new e(19),he=0;he<pe;++he)Oe[o[he]]=E(I,U+3*he,7);U+=3*pe;var ue=_(Oe),ie=(1<<ue)-1,Me=v(Oe,ue);for(he=0;he<Ie;){var le,P=Me[E(I,U,ie)];if(U+=15&P,(le=P>>>4)<16)X[he++]=le;else{var A=0,Q=0;for(le==16?(Q=3+E(I,U,3),U+=2,A=X[he-1]):le==17?(Q=3+E(I,U,7),U+=3):le==18&&(Q=11+E(I,U,127),U+=7);Q--;)X[he++]=A}}var ae=X.subarray(0,Se),se=X.subarray(Se);H=_(ae),q=_(se),K=v(ae,H),k=v(se,q)}else T(1);if(U>W){ee&&T(0);break}}O&&j(Z+131072);for(var de=(1<<H)-1,Ee=(1<<q)-1,be=U;;be=U){var Ae=(A=K[M(I,U)&de])>>>4;if((U+=15&A)>W){ee&&T(0);break}if(A||T(2),Ae<256)F[Z++]=Ae;else{if(Ae==256){be=U,K=null;break}var Ze=Ae-254;if(Ae>264){var Re=n[he=Ae-257];Ze=E(I,U,(1<<Re)-1)+c[he],U+=Re}var Be=k[M(I,U)&Ee],Ge=Be>>>4;if(Be||T(3),U+=15&Be,se=u[Ge],Ge>3&&(Re=r[Ge],se+=M(I,U)&(1<<Re)-1,U+=Re),U>W){ee&&T(0);break}O&&j(Z+131072);for(var Ve=Z+Ze;Z<Ve;Z+=4)F[Z]=F[Z-se],F[Z+1]=F[Z+1-se],F[Z+2]=F[Z+2-se],F[Z+3]=F[Z+3-se];Z=Ve}}V.l=K,V.p=be,V.b=Z,K&&($=1,V.m=H,V.d=k,V.n=q)}while(!$);return Z==F.length?F:function(Te,ut,tt){(tt==null||tt>Te.length)&&(tt=Te.length);var wt=new(Te instanceof t?t:Te instanceof i?i:e)(tt-ut);return wt.set(Te.subarray(ut,tt)),wt}(F,0,Z)},b=new e(0),D=typeof TextDecoder<"u"&&new TextDecoder;try{D.decode(b,{stream:!0})}catch{}return s.convert_streams=function(I){var F=new DataView(I),V=0;function J(){var Se=F.getUint16(V);return V+=2,Se}function O(){var Se=F.getUint32(V);return V+=4,Se}function ee(Se){ge.setUint16(ye,Se),ye+=2}function Y(Se){ge.setUint32(ye,Se),ye+=4}for(var j={signature:O(),flavor:O(),length:O(),numTables:J(),reserved:J(),totalSfntSize:O(),majorVersion:J(),minorVersion:J(),metaOffset:O(),metaLength:O(),metaOrigLength:O(),privOffset:O(),privLength:O()},$=0;Math.pow(2,$)<=j.numTables;)$++;$--;for(var U=16*Math.pow(2,$),Z=16*j.numTables-U,K=12,k=[],H=0;H<j.numTables;H++)k.push({tag:O(),offset:O(),compLength:O(),origLength:O(),origChecksum:O()}),K+=16;var q,W=new Uint8Array(12+16*k.length+k.reduce(function(Se,pe){return Se+pe.origLength+4},0)),ne=W.buffer,ge=new DataView(ne),ye=0;return Y(j.flavor),ee(j.numTables),ee(U),ee($),ee(Z),k.forEach(function(Se){Y(Se.tag),Y(Se.origChecksum),Y(K),Y(Se.origLength),Se.outOffset=K,(K+=Se.origLength)%4!=0&&(K+=4-K%4)}),k.forEach(function(Se){var pe,Ie=I.slice(Se.offset,Se.offset+Se.compLength);if(Se.compLength!=Se.origLength){var X=new Uint8Array(Se.origLength);pe=new Uint8Array(Ie,2),w(pe,X)}else X=new Uint8Array(Ie);W.set(X,Se.outOffset);var Oe=0;(K=Se.outOffset+Se.origLength)%4!=0&&(Oe=4-K%4),W.set(new Uint8Array(Oe).buffer,Se.outOffset+Se.origLength),q=K+Oe}),ne.slice(0,q)},Object.defineProperty(s,"__esModule",{value:!0}),s}({}).convert_streams}function qC(s,e){const t={M:2,L:2,Q:4,C:6,Z:0},i={C:"18g,ca,368,1kz",D:"17k,6,2,2+4,5+c,2+6,2+1,10+1,9+f,j+11,2+1,a,2,2+1,15+2,3,j+2,6+3,2+8,2,2,2+1,w+a,4+e,3+3,2,3+2,3+5,23+w,2f+4,3,2+9,2,b,2+3,3,1k+9,6+1,3+1,2+2,2+d,30g,p+y,1,1+1g,f+x,2,sd2+1d,jf3+4,f+3,2+4,2+2,b+3,42,2,4+2,2+1,2,3,t+1,9f+w,2,el+2,2+g,d+2,2l,2+1,5,3+1,2+1,2,3,6,16wm+1v",R:"17m+3,2,2,6+3,m,15+2,2+2,h+h,13,3+8,2,2,3+1,2,p+1,x,5+4,5,a,2,2,3,u,c+2,g+1,5,2+1,4+1,5j,6+1,2,b,2+2,f,2+1,1s+2,2,3+1,7,1ez0,2,2+1,4+4,b,4,3,b,42,2+2,4,3,2+1,2,o+3,ae,ep,x,2o+2,3+1,3,5+1,6",L:"x9u,jff,a,fd,jv",T:"4t,gj+33,7o+4,1+1,7c+18,2,2+1,2+1,2,21+a,2,1b+k,h,2u+6,3+5,3+1,2+3,y,2,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,3,7,6+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+d,1,1+1,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,ek,3+1,r+4,1e+4,6+5,2p+c,1+3,1,1+2,1+b,2db+2,3y,2p+v,ff+3,30+1,n9x,1+2,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,5s,6y+2,ea,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+9,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2,2b+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,470+8,at4+4,1o+6,t5,1s+3,2a,f5l+1,2+3,43o+2,a+7,1+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,1,gzau,v+2n,3l+6n"},n=1,r=2,o=4,a=8,l=16,c=32;let h;function u(S){if(!h){const T={R:r,L:n,D:o,C:l,U:c,T:a};h=new Map;for(let w in i){let b=0;i[w].split(",").forEach(D=>{let[I,F]=D.split("+");I=parseInt(I,36),F=F?parseInt(F,36):0,h.set(b+=I,T[w]);for(let V=F;V--;)h.set(++b,T[w])})}}return h.get(S)||c}const d=1,f=2,p=3,v=4,m=[null,"isol","init","fina","medi"];function g(S){const T=new Uint8Array(S.length);let w=c,b=d,D=-1;for(let I=0;I<S.length;I++){const F=S.codePointAt(I);let V=u(F)|0,J=d;V&a||(w&(n|o|l)?V&(r|o|l)?(J=p,(b===d||b===p)&&T[D]++):V&(n|c)&&(b===f||b===v)&&T[D]--:w&(r|c)&&(b===f||b===v)&&T[D]--,b=T[I]=J,w=V,D=I,F>65535&&I++)}return T}function y(S,T){const w=[];for(let D=0;D<T.length;D++){const I=T.codePointAt(D);I>65535&&D++,w.push(s.U.codeToGlyph(S,I))}const b=S.GSUB;if(b){const{lookupList:D,featureList:I}=b;let F;const V=/^(rlig|liga|mset|isol|init|fina|medi|half|pres|blws|ccmp)$/,J=[];I.forEach(O=>{if(V.test(O.tag))for(let ee=0;ee<O.tab.length;ee++){if(J[O.tab[ee]])continue;J[O.tab[ee]]=!0;const Y=D[O.tab[ee]],j=/^(isol|init|fina|medi)$/.test(O.tag);j&&!F&&(F=g(T));for(let $=0;$<w.length;$++)(!F||!j||m[F[$]]===O.tag)&&s.U._applySubs(w,$,Y,D)}})}return w}function x(S,T){const w=new Int16Array(T.length*3);let b=0;for(;b<T.length;b++){const V=T[b];if(V===-1)continue;w[b*3+2]=S.hmtx.aWidth[V];const J=S.GPOS;if(J){const O=J.lookupList;for(let ee=0;ee<O.length;ee++){const Y=O[ee];for(let j=0;j<Y.tabs.length;j++){const $=Y.tabs[j];if(Y.ltype===1){if(s._lctf.coverageIndex($.coverage,V)!==-1&&$.pos){F($.pos,b);break}}else if(Y.ltype===2){let U=null,Z=D();if(Z!==-1){const K=s._lctf.coverageIndex($.coverage,T[Z]);if(K!==-1){if($.fmt===1){const k=$.pairsets[K];for(let H=0;H<k.length;H++)k[H].gid2===V&&(U=k[H])}else if($.fmt===2){const k=s.U._getGlyphClass(T[Z],$.classDef1),H=s.U._getGlyphClass(V,$.classDef2);U=$.matrix[k][H]}if(U){U.val1&&F(U.val1,Z),U.val2&&F(U.val2,b);break}}}}else if(Y.ltype===4){const U=s._lctf.coverageIndex($.markCoverage,V);if(U!==-1){const Z=D(I),K=Z===-1?-1:s._lctf.coverageIndex($.baseCoverage,T[Z]);if(K!==-1){const k=$.markArray[U],H=$.baseArray[K][k.markClass];w[b*3]=H.x-k.x+w[Z*3]-w[Z*3+2],w[b*3+1]=H.y-k.y+w[Z*3+1];break}}}else if(Y.ltype===6){const U=s._lctf.coverageIndex($.mark1Coverage,V);if(U!==-1){const Z=D();if(Z!==-1){const K=T[Z];if(_(S,K)===3){const k=s._lctf.coverageIndex($.mark2Coverage,K);if(k!==-1){const H=$.mark1Array[U],q=$.mark2Array[k][H.markClass];w[b*3]=q.x-H.x+w[Z*3]-w[Z*3+2],w[b*3+1]=q.y-H.y+w[Z*3+1];break}}}}}}}}else if(S.kern&&!S.cff){const O=D();if(O!==-1){const ee=S.kern.glyph1.indexOf(T[O]);if(ee!==-1){const Y=S.kern.rval[ee].glyph2.indexOf(V);Y!==-1&&(w[O*3+2]+=S.kern.rval[ee].vals[Y])}}}}return w;function D(V){for(let J=b-1;J>=0;J--)if(T[J]!==-1&&(!V||V(T[J])))return J;return-1}function I(V){return _(S,V)===1}function F(V,J){for(let O=0;O<3;O++)w[J*3+O]+=V[O]||0}}function _(S,T){const w=S.GDEF&&S.GDEF.glyphClassDef;return w?s.U._getGlyphClass(T,w):0}function E(...S){for(let T=0;T<S.length;T++)if(typeof S[T]=="number")return S[T]}function M(S){const T=Object.create(null),w=S["OS/2"],b=S.hhea,D=S.head.unitsPerEm,I=E(w&&w.sTypoAscender,b&&b.ascender,D),F={unitsPerEm:D,ascender:I,descender:E(w&&w.sTypoDescender,b&&b.descender,0),capHeight:E(w&&w.sCapHeight,I),xHeight:E(w&&w.sxHeight,I),lineGap:E(w&&w.sTypoLineGap,b&&b.lineGap),supportsCodePoint(V){return s.U.codeToGlyph(S,V)>0},forEachGlyph(V,J,O,ee){let Y=0;const j=1/F.unitsPerEm*J,$=y(S,V);let U=0;const Z=x(S,$);return $.forEach((K,k)=>{if(K!==-1){let H=T[K];if(!H){const{cmds:q,crds:W}=s.U.glyphToPath(S,K);let ne="",ge=0;for(let X=0,Oe=q.length;X<Oe;X++){const he=t[q[X]];ne+=q[X];for(let ue=1;ue<=he;ue++)ne+=(ue>1?",":"")+W[ge++]}let ye,Se,pe,Ie;if(W.length){ye=Se=1/0,pe=Ie=-1/0;for(let X=0,Oe=W.length;X<Oe;X+=2){let he=W[X],ue=W[X+1];he<ye&&(ye=he),ue<Se&&(Se=ue),he>pe&&(pe=he),ue>Ie&&(Ie=ue)}}else ye=pe=Se=Ie=0;H=T[K]={index:K,advanceWidth:S.hmtx.aWidth[K],xMin:ye,yMin:Se,xMax:pe,yMax:Ie,path:ne}}ee.call(null,H,Y+Z[k*3]*j,Z[k*3+1]*j,U),Y+=Z[k*3+2]*j,O&&(Y+=O*J)}U+=V.codePointAt(U)>65535?2:1}),Y}};return F}return function(T){const w=new Uint8Array(T,0,4),b=s._bin.readASCII(w,0,4);if(b==="wOFF")T=e(T);else if(b==="wOF2")throw new Error("woff2 fonts not supported");return M(s.parse(T)[0])}}const ZC=Qo({name:"Typr Font Parser",dependencies:[YC,jC,qC],init(s,e,t){const i=s(),n=e();return t(i,n)}});/*!
Custom bundle of @unicode-font-resolver/client v1.0.2 (https://github.com/lojjic/unicode-font-resolver)
for use in Troika text rendering. 
Original MIT license applies
*/function JC(){return function(s){var e=function(){this.buckets=new Map};e.prototype.add=function(x){var _=x>>5;this.buckets.set(_,(this.buckets.get(_)||0)|1<<(31&x))},e.prototype.has=function(x){var _=this.buckets.get(x>>5);return _!==void 0&&(_&1<<(31&x))!=0},e.prototype.serialize=function(){var x=[];return this.buckets.forEach(function(_,E){x.push((+E).toString(36)+":"+_.toString(36))}),x.join(",")},e.prototype.deserialize=function(x){var _=this;this.buckets.clear(),x.split(",").forEach(function(E){var M=E.split(":");_.buckets.set(parseInt(M[0],36),parseInt(M[1],36))})};var t=Math.pow(2,8),i=t-1,n=~i;function r(x){var _=function(M){return M&n}(x).toString(16),E=function(M){return(M&n)+t-1}(x).toString(16);return"codepoint-index/plane"+(x>>16)+"/"+_+"-"+E+".json"}function o(x,_){var E=x&i,M=_.codePointAt(E/6|0);return((M=(M||48)-48)&1<<E%6)!=0}function a(x,_){var E;(E=x,E.replace(/U\+/gi,"").replace(/^,+|,+$/g,"").split(/,+/).map(function(M){return M.split("-").map(function(S){return parseInt(S.trim(),16)})})).forEach(function(M){var S=M[0],T=M[1];T===void 0&&(T=S),_(S,T)})}function l(x,_){a(x,function(E,M){for(var S=E;S<=M;S++)_(S)})}var c={},h={},u=new WeakMap,d="https://cdn.jsdelivr.net/gh/lojjic/unicode-font-resolver@v1.0.1/packages/data";function f(x){var _=u.get(x);return _||(_=new e,l(x.ranges,function(E){return _.add(E)}),u.set(x,_)),_}var p,v=new Map;function m(x,_,E){return x[_]?_:x[E]?E:function(M){for(var S in M)return S}(x)}function g(x,_){var E=_;if(!x.includes(E)){E=1/0;for(var M=0;M<x.length;M++)Math.abs(x[M]-_)<Math.abs(E-_)&&(E=x[M])}return E}function y(x){return p||(p=new Set,l("9-D,20,85,A0,1680,2000-200A,2028-202F,205F,3000",function(_){p.add(_)})),p.has(x)}return s.CodePointSet=e,s.clearCache=function(){c={},h={}},s.getFontsForString=function(x,_){_===void 0&&(_={});var E,M=_.lang;M===void 0&&(M=new RegExp("\\p{Script=Hangul}","u").test(E=x)?"ko":new RegExp("\\p{Script=Hiragana}|\\p{Script=Katakana}","u").test(E)?"ja":"en");var S=_.category;S===void 0&&(S="sans-serif");var T=_.style;T===void 0&&(T="normal");var w=_.weight;w===void 0&&(w=400);var b=(_.dataUrl||d).replace(/\/$/g,""),D=new Map,I=new Uint8Array(x.length),F={},V={},J=new Array(x.length),O=new Map,ee=!1;function Y(U){var Z=v.get(U);return Z||(Z=fetch(b+"/"+U).then(function(K){if(!K.ok)throw new Error(K.statusText);return K.json().then(function(k){if(!Array.isArray(k)||k[0]!==1)throw new Error("Incorrect schema version; need 1, got "+k[0]);return k[1]})}).catch(function(K){if(b!==d)return ee||(console.error('unicode-font-resolver: Failed loading from dataUrl "'+b+'", trying default CDN. '+K.message),ee=!0),b=d,v.delete(U),Y(U);throw K}),v.set(U,Z)),Z}for(var j=function(U){var Z=x.codePointAt(U),K=r(Z);J[U]=K,c[K]||O.has(K)||O.set(K,Y(K).then(function(k){c[K]=k})),Z>65535&&(U++,$=U)},$=0;$<x.length;$++)j($);return Promise.all(O.values()).then(function(){O.clear();for(var U=function(K){var k=x.codePointAt(K),H=null,q=c[J[K]],W=void 0;for(var ne in q){var ge=V[ne];if(ge===void 0&&(ge=V[ne]=new RegExp(ne).test(M||"en")),ge){for(var ye in W=ne,q[ne])if(o(k,q[ne][ye])){H=ye;break}break}}if(!H){e:for(var Se in q)if(Se!==W){for(var pe in q[Se])if(o(k,q[Se][pe])){H=pe;break e}}}H||(console.debug("No font coverage for U+"+k.toString(16)),H="latin"),J[K]=H,h[H]||O.has(H)||O.set(H,Y("font-meta/"+H+".json").then(function(Ie){h[H]=Ie})),k>65535&&(K++,Z=K)},Z=0;Z<x.length;Z++)U(Z);return Promise.all(O.values())}).then(function(){for(var U,Z=null,K=0;K<x.length;K++){var k=x.codePointAt(K);if(Z&&(y(k)||f(Z).has(k)))I[K]=I[K-1];else{Z=h[J[K]];var H=F[Z.id];if(!H){var q=Z.typeforms,W=m(q,S,"sans-serif"),ne=m(q[W],T,"normal"),ge=g((U=q[W])===null||U===void 0?void 0:U[ne],w);H=F[Z.id]=b+"/font-files/"+Z.id+"/"+W+"."+ne+"."+ge+".woff"}var ye=D.get(H);ye==null&&(ye=D.size,D.set(H,ye)),I[K]=ye}k>65535&&(K++,I[K]=I[K-1])}return{fontUrls:Array.from(D.keys()),chars:I}})},Object.defineProperty(s,"__esModule",{value:!0}),s}({})}function KC(s,e){const t=Object.create(null),i=Object.create(null);function n(o,a){const l=c=>{console.error(`Failure loading font ${o}`,c)};try{const c=new XMLHttpRequest;c.open("get",o,!0),c.responseType="arraybuffer",c.onload=function(){if(c.status>=400)l(new Error(c.statusText));else if(c.status>0)try{const h=s(c.response);h.src=o,a(h)}catch(h){l(h)}},c.onerror=l,c.send()}catch(c){l(c)}}function r(o,a){let l=t[o];l?a(l):i[o]?i[o].push(a):(i[o]=[a],n(o,c=>{c.src=o,t[o]=c,i[o].forEach(h=>h(c)),delete i[o]}))}return function(o,a,{lang:l,fonts:c=[],style:h="normal",weight:u="normal",unicodeFontsURL:d}={}){const f=new Uint8Array(o.length),p=[];o.length||y();const v=new Map,m=[];if(h!=="italic"&&(h="normal"),typeof u!="number"&&(u=u==="bold"?700:400),c&&!Array.isArray(c)&&(c=[c]),c=c.slice().filter(_=>!_.lang||_.lang.test(l)).reverse(),c.length){let S=0;(function T(w=0){for(let b=w,D=o.length;b<D;b++){const I=o.codePointAt(b);if(S===1&&p[f[b-1]].supportsCodePoint(I)||b>0&&/\s/.test(o[b]))f[b]=f[b-1],S===2&&(m[m.length-1][1]=b);else for(let F=f[b],V=c.length;F<=V;F++)if(F===V){const J=S===2?m[m.length-1]:m[m.length]=[b,b];J[1]=b,S=2}else{f[b]=F;const{src:J,unicodeRange:O}=c[F];if(!O||x(I,O)){const ee=t[J];if(!ee){r(J,()=>{T(b)});return}if(ee.supportsCodePoint(I)){let Y=v.get(ee);typeof Y!="number"&&(Y=p.length,p.push(ee),v.set(ee,Y)),f[b]=Y,S=1;break}}}I>65535&&b+1<D&&(f[b+1]=f[b],b++,S===2&&(m[m.length-1][1]=b))}g()})()}else m.push([0,o.length-1]),g();function g(){if(m.length){const _=m.map(E=>o.substring(E[0],E[1]+1)).join(`
`);e.getFontsForString(_,{lang:l||void 0,style:h,weight:u,dataUrl:d}).then(({fontUrls:E,chars:M})=>{const S=p.length;let T=0;m.forEach(b=>{for(let D=0,I=b[1]-b[0];D<=I;D++)f[b[0]+D]=M[T++]+S;T++});let w=0;E.forEach((b,D)=>{r(b,I=>{p[D+S]=I,++w===E.length&&y()})})})}else y()}function y(){a({chars:f,fonts:p})}function x(_,E){for(let M=0;M<E.length;M++){const[S,T=S]=E[M];if(S<=_&&_<=T)return!0}return!1}}}const QC=Qo({name:"FontResolver",dependencies:[KC,ZC,JC],init(s,e,t){return s(e,t())}});function $C(s,e){const i=/[\u00AD\u034F\u061C\u115F-\u1160\u17B4-\u17B5\u180B-\u180E\u200B-\u200F\u202A-\u202E\u2060-\u206F\u3164\uFE00-\uFE0F\uFEFF\uFFA0\uFFF0-\uFFF8]/,n="[^\\S\\u00A0]",r=new RegExp(`${n}|[\\-\\u007C\\u00AD\\u2010\\u2012-\\u2014\\u2027\\u2056\\u2E17\\u2E40]`);function o({text:p,lang:v,fonts:m,style:g,weight:y,preResolvedFonts:x,unicodeFontsURL:_},E){const M=({chars:S,fonts:T})=>{let w,b;const D=[];for(let I=0;I<S.length;I++)S[I]!==b?(b=S[I],D.push(w={start:I,end:I,fontObj:T[S[I]]})):w.end=I;E(D)};x?M(x):s(p,M,{lang:v,fonts:m,style:g,weight:y,unicodeFontsURL:_})}function a({text:p="",font:v,lang:m,sdfGlyphSize:g=64,fontSize:y=400,fontWeight:x=1,fontStyle:_="normal",letterSpacing:E=0,lineHeight:M="normal",maxWidth:S=1/0,direction:T,textAlign:w="left",textIndent:b=0,whiteSpace:D="normal",overflowWrap:I="normal",anchorX:F=0,anchorY:V=0,metricsOnly:J=!1,unicodeFontsURL:O,preResolvedFonts:ee=null,includeCaretPositions:Y=!1,chunkedBoundsSize:j=8192,colorRanges:$=null},U){const Z=u(),K={fontLoad:0,typesetting:0};p.indexOf("\r")>-1&&(console.info("Typesetter: got text with \\r chars; normalizing to \\n"),p=p.replace(/\r\n/g,`
`).replace(/\r/g,`
`)),y=+y,E=+E,S=+S,M=M||"normal",b=+b,o({text:p,lang:m,style:_,weight:x,fonts:typeof v=="string"?[{src:v}]:v,unicodeFontsURL:O,preResolvedFonts:ee},k=>{K.fontLoad=u()-Z;const H=isFinite(S);let q=null,W=null,ne=null,ge=null,ye=null,Se=null,pe=null,Ie=null,X=0,Oe=0,he=D!=="nowrap";const ue=new Map,ie=u();let Me=b,le=0,P=new d;const A=[P];k.forEach(Ee=>{const{fontObj:be}=Ee,{ascender:Ae,descender:Ze,unitsPerEm:Re,lineGap:Be,capHeight:Ge,xHeight:Ve}=be;let Te=ue.get(be);if(!Te){const Ce=y/Re,fe=M==="normal"?(Ae-Ze+Be)*Ce:M*y,Pe=(fe-(Ae-Ze)*Ce)/2,Ne=Math.min(fe,(Ae-Ze)*Ce),De=(Ae+Ze)/2*Ce+Ne/2;Te={index:ue.size,src:be.src,fontObj:be,fontSizeMult:Ce,unitsPerEm:Re,ascender:Ae*Ce,descender:Ze*Ce,capHeight:Ge*Ce,xHeight:Ve*Ce,lineHeight:fe,baseline:-Pe-Ae*Ce,caretTop:De,caretBottom:De-Ne},ue.set(be,Te)}const{fontSizeMult:ut}=Te,tt=p.slice(Ee.start,Ee.end+1);let wt,te;be.forEachGlyph(tt,y,E,(Ce,fe,Pe,Ne)=>{fe+=le,Ne+=Ee.start,wt=fe,te=Ce;const De=p.charAt(Ne),ot=Ce.advanceWidth*ut,St=P.count;let ct;if("isEmpty"in Ce||(Ce.isWhitespace=!!De&&new RegExp(n).test(De),Ce.canBreakAfter=!!De&&r.test(De),Ce.isEmpty=Ce.xMin===Ce.xMax||Ce.yMin===Ce.yMax||i.test(De)),!Ce.isWhitespace&&!Ce.isEmpty&&Oe++,he&&H&&!Ce.isWhitespace&&fe+ot+Me>S&&St){if(P.glyphAt(St-1).glyphObj.canBreakAfter)ct=new d,Me=-fe;else for(let Xt=St;Xt--;)if(Xt===0&&I==="break-word"){ct=new d,Me=-fe;break}else if(P.glyphAt(Xt).glyphObj.canBreakAfter){ct=P.splitAt(Xt+1);const Kt=ct.glyphAt(0).x;Me-=Kt;for(let on=ct.count;on--;)ct.glyphAt(on).x-=Kt;break}ct&&(P.isSoftWrapped=!0,P=ct,A.push(P),X=S)}let rt=P.glyphAt(P.count);rt.glyphObj=Ce,rt.x=fe+Me,rt.y=Pe,rt.width=ot,rt.charIndex=Ne,rt.fontData=Te,De===`
`&&(P=new d,A.push(P),Me=-(fe+ot+E*y)+b)}),le=wt+te.advanceWidth*ut+E*y});let Q=0;A.forEach(Ee=>{let be=!0;for(let Ae=Ee.count;Ae--;){const Ze=Ee.glyphAt(Ae);be&&!Ze.glyphObj.isWhitespace&&(Ee.width=Ze.x+Ze.width,Ee.width>X&&(X=Ee.width),be=!1);let{lineHeight:Re,capHeight:Be,xHeight:Ge,baseline:Ve}=Ze.fontData;Re>Ee.lineHeight&&(Ee.lineHeight=Re);const Te=Ve-Ee.baseline;Te<0&&(Ee.baseline+=Te,Ee.cap+=Te,Ee.ex+=Te),Ee.cap=Math.max(Ee.cap,Ee.baseline+Be),Ee.ex=Math.max(Ee.ex,Ee.baseline+Ge)}Ee.baseline-=Q,Ee.cap-=Q,Ee.ex-=Q,Q+=Ee.lineHeight});let ae=0,se=0;if(F&&(typeof F=="number"?ae=-F:typeof F=="string"&&(ae=-X*(F==="left"?0:F==="center"?.5:F==="right"?1:c(F)))),V&&(typeof V=="number"?se=-V:typeof V=="string"&&(se=V==="top"?0:V==="top-baseline"?-A[0].baseline:V==="top-cap"?-A[0].cap:V==="top-ex"?-A[0].ex:V==="middle"?Q/2:V==="bottom"?Q:V==="bottom-baseline"?-A[A.length-1].baseline:c(V)*Q)),!J){const Ee=e.getEmbeddingLevels(p,T);q=new Uint16Array(Oe),W=new Uint8Array(Oe),ne=new Float32Array(Oe*2),ge={},pe=[1/0,1/0,-1/0,-1/0],Ie=[],Y&&(Se=new Float32Array(p.length*4)),$&&(ye=new Uint8Array(Oe*3));let be=0,Ae=-1,Ze=-1,Re,Be;if(A.forEach((Ge,Ve)=>{let{count:Te,width:ut}=Ge;if(Te>0){let tt=0;for(let Ne=Te;Ne--&&Ge.glyphAt(Ne).glyphObj.isWhitespace;)tt++;let wt=0,te=0;if(w==="center")wt=(X-ut)/2;else if(w==="right")wt=X-ut;else if(w==="justify"&&Ge.isSoftWrapped){let Ne=0;for(let De=Te-tt;De--;)Ge.glyphAt(De).glyphObj.isWhitespace&&Ne++;te=(X-ut)/Ne}if(te||wt){let Ne=0;for(let De=0;De<Te;De++){let ot=Ge.glyphAt(De);const St=ot.glyphObj;ot.x+=wt+Ne,te!==0&&St.isWhitespace&&De<Te-tt&&(Ne+=te,ot.width+=te)}}const Ce=e.getReorderSegments(p,Ee,Ge.glyphAt(0).charIndex,Ge.glyphAt(Ge.count-1).charIndex);for(let Ne=0;Ne<Ce.length;Ne++){const[De,ot]=Ce[Ne];let St=1/0,ct=-1/0;for(let rt=0;rt<Te;rt++)if(Ge.glyphAt(rt).charIndex>=De){let Xt=rt,Kt=rt;for(;Kt<Te;Kt++){let on=Ge.glyphAt(Kt);if(on.charIndex>ot)break;Kt<Te-tt&&(St=Math.min(St,on.x),ct=Math.max(ct,on.x+on.width))}for(let on=Xt;on<Kt;on++){const qn=Ge.glyphAt(on);qn.x=ct-(qn.x+qn.width-St)}break}}let fe;const Pe=Ne=>fe=Ne;for(let Ne=0;Ne<Te;Ne++){const De=Ge.glyphAt(Ne);fe=De.glyphObj;const ot=fe.index,St=Ee.levels[De.charIndex]&1;if(St){const ct=e.getMirroredCharacter(p[De.charIndex]);ct&&De.fontData.fontObj.forEachGlyph(ct,0,0,Pe)}if(Y){const{charIndex:ct,fontData:rt}=De,Xt=De.x+ae,Kt=De.x+De.width+ae;Se[ct*4]=St?Kt:Xt,Se[ct*4+1]=St?Xt:Kt,Se[ct*4+2]=Ge.baseline+rt.caretBottom+se,Se[ct*4+3]=Ge.baseline+rt.caretTop+se;const on=ct-Ae;on>1&&h(Se,Ae,on),Ae=ct}if($){const{charIndex:ct}=De;for(;ct>Ze;)Ze++,$.hasOwnProperty(Ze)&&(Be=$[Ze])}if(!fe.isWhitespace&&!fe.isEmpty){const ct=be++,{fontSizeMult:rt,src:Xt,index:Kt}=De.fontData,on=ge[Xt]||(ge[Xt]={});on[ot]||(on[ot]={path:fe.path,pathBounds:[fe.xMin,fe.yMin,fe.xMax,fe.yMax]});const qn=De.x+ae,Un=De.y+Ge.baseline+se;ne[ct*2]=qn,ne[ct*2+1]=Un;const ri=qn+fe.xMin*rt,Ci=Un+fe.yMin*rt,Ri=qn+fe.xMax*rt,Zn=Un+fe.yMax*rt;ri<pe[0]&&(pe[0]=ri),Ci<pe[1]&&(pe[1]=Ci),Ri>pe[2]&&(pe[2]=Ri),Zn>pe[3]&&(pe[3]=Zn),ct%j===0&&(Re={start:ct,end:ct,rect:[1/0,1/0,-1/0,-1/0]},Ie.push(Re)),Re.end++;const _n=Re.rect;if(ri<_n[0]&&(_n[0]=ri),Ci<_n[1]&&(_n[1]=Ci),Ri>_n[2]&&(_n[2]=Ri),Zn>_n[3]&&(_n[3]=Zn),q[ct]=ot,W[ct]=Kt,$){const ui=ct*3;ye[ui]=Be>>16&255,ye[ui+1]=Be>>8&255,ye[ui+2]=Be&255}}}}}),Se){const Ge=p.length-Ae;Ge>1&&h(Se,Ae,Ge)}}const de=[];ue.forEach(({index:Ee,src:be,unitsPerEm:Ae,ascender:Ze,descender:Re,lineHeight:Be,capHeight:Ge,xHeight:Ve})=>{de[Ee]={src:be,unitsPerEm:Ae,ascender:Ze,descender:Re,lineHeight:Be,capHeight:Ge,xHeight:Ve}}),K.typesetting=u()-ie,U({glyphIds:q,glyphFontIndices:W,glyphPositions:ne,glyphData:ge,fontData:de,caretPositions:Se,glyphColors:ye,chunkedBounds:Ie,fontSize:y,topBaseline:se+A[0].baseline,blockBounds:[ae,se-Q,ae+X,se],visibleBounds:pe,timings:K})})}function l(p,v){a({...p,metricsOnly:!0},m=>{const[g,y,x,_]=m.blockBounds;v({width:x-g,height:_-y})})}function c(p){let v=p.match(/^([\d.]+)%$/),m=v?parseFloat(v[1]):NaN;return isNaN(m)?0:m/100}function h(p,v,m){const g=p[v*4],y=p[v*4+1],x=p[v*4+2],_=p[v*4+3],E=(y-g)/m;for(let M=0;M<m;M++){const S=(v+M)*4;p[S]=g+E*M,p[S+1]=g+E*(M+1),p[S+2]=x,p[S+3]=_}}function u(){return(self.performance||Date).now()}function d(){this.data=[]}const f=["glyphObj","x","y","width","charIndex","fontData"];return d.prototype={width:0,lineHeight:0,baseline:0,cap:0,ex:0,isSoftWrapped:!1,get count(){return Math.ceil(this.data.length/f.length)},glyphAt(p){let v=d.flyweight;return v.data=this.data,v.index=p,v},splitAt(p){let v=new d;return v.data=this.data.splice(p*f.length),v}},d.flyweight=f.reduce((p,v,m,g)=>(Object.defineProperty(p,v,{get(){return this.data[this.index*f.length+m]},set(y){this.data[this.index*f.length+m]=y}}),p),{data:null,index:0}),{typeset:a,measure:l}}const Qs=()=>(self.performance||Date).now(),_u=z_();let e0;function eR(s,e,t,i,n,r,o,a,l,c,h=!0){return h?nR(s,e,t,i,n,r,o,a,l,c).then(null,u=>(e0||(console.warn("WebGL SDF generation failed, falling back to JS",u),e0=!0),n0(s,e,t,i,n,r,o,a,l,c))):n0(s,e,t,i,n,r,o,a,l,c)}const Gc=[],tR=5;let ff=0;function V_(){const s=Qs();for(;Gc.length&&Qs()-s<tR;)Gc.shift()();ff=Gc.length?setTimeout(V_,0):0}const nR=(...s)=>new Promise((e,t)=>{Gc.push(()=>{const i=Qs();try{_u.webgl.generateIntoCanvas(...s),e({timing:Qs()-i})}catch(n){t(n)}}),ff||(ff=setTimeout(V_,0))}),iR=4,rR=2e3,t0={};let sR=0;function n0(s,e,t,i,n,r,o,a,l,c){const h="TroikaTextSDFGenerator_JS_"+sR++%iR;let u=t0[h];return u||(u=t0[h]={workerModule:Qo({name:h,workerId:h,dependencies:[z_,Qs],init(d,f){const p=d().javascript.generate;return function(...v){const m=f();return{textureData:p(...v),timing:f()-m}}},getTransferables(d){return[d.textureData.buffer]}}),requests:0,idleTimer:null}),u.requests++,clearTimeout(u.idleTimer),u.workerModule(s,e,t,i,n,r).then(({textureData:d,timing:f})=>{const p=Qs(),v=new Uint8Array(d.length*4);for(let m=0;m<d.length;m++)v[m*4+c]=d[m];return _u.webglUtils.renderImageData(o,v,a,l,s,e,1<<3-c),f+=Qs()-p,--u.requests===0&&(u.idleTimer=setTimeout(()=>{OC(h)},rR)),{timing:f}})}function oR(s){s._warm||(_u.webgl.isSupported(s),s._warm=!0)}const aR=_u.webglUtils.resizeWebGLCanvasWithoutClearing,Ta={unicodeFontsURL:null,sdfGlyphSize:64,sdfMargin:1/16,sdfExponent:9,textureWidth:2048},lR=new ze;function Uo(){return(self.performance||Date).now()}const i0=Object.create(null);function H_(s,e){s=uR({},s);const t=Uo(),i=[];if(s.font&&i.push({label:"user",src:dR(s.font)}),s.font=i,s.text=""+s.text,s.sdfGlyphSize=s.sdfGlyphSize||Ta.sdfGlyphSize,s.unicodeFontsURL=s.unicodeFontsURL||Ta.unicodeFontsURL,s.colorRanges!=null){let d={};for(let f in s.colorRanges)if(s.colorRanges.hasOwnProperty(f)){let p=s.colorRanges[f];typeof p!="number"&&(p=lR.set(p).getHex()),d[f]=p}s.colorRanges=d}Object.freeze(s);const{textureWidth:n,sdfExponent:r}=Ta,{sdfGlyphSize:o}=s,a=n/o*4;let l=i0[o];if(!l){const d=document.createElement("canvas");d.width=n,d.height=o*256/a,l=i0[o]={glyphCount:0,sdfGlyphSize:o,sdfCanvas:d,sdfTexture:new pn(d,void 0,void 0,void 0,Sn,Sn),contextLost:!1,glyphsByFont:new Map},l.sdfTexture.generateMipmaps=!1,cR(l)}const{sdfTexture:c,sdfCanvas:h}=l;Y_(s).then(d=>{const{glyphIds:f,glyphFontIndices:p,fontData:v,glyphPositions:m,fontSize:g,timings:y}=d,x=[],_=new Float32Array(f.length*4);let E=0,M=0;const S=Uo(),T=v.map(F=>{let V=l.glyphsByFont.get(F.src);return V||l.glyphsByFont.set(F.src,V=new Map),V});f.forEach((F,V)=>{const J=p[V],{src:O,unitsPerEm:ee}=v[J];let Y=T[J].get(F);if(!Y){const{path:K,pathBounds:k}=d.glyphData[O][F],H=Math.max(k[2]-k[0],k[3]-k[1])/o*(Ta.sdfMargin*o+.5),q=l.glyphCount++,W=[k[0]-H,k[1]-H,k[2]+H,k[3]+H];T[J].set(F,Y={path:K,atlasIndex:q,sdfViewBox:W}),x.push(Y)}const{sdfViewBox:j}=Y,$=m[M++],U=m[M++],Z=g/ee;_[E++]=$+j[0]*Z,_[E++]=U+j[1]*Z,_[E++]=$+j[2]*Z,_[E++]=U+j[3]*Z,f[V]=Y.atlasIndex}),y.quads=(y.quads||0)+(Uo()-S);const w=Uo();y.sdf={};const b=h.height,D=Math.ceil(l.glyphCount/a),I=Math.pow(2,Math.ceil(Math.log2(D*o)));I>b&&(console.info(`Increasing SDF texture size ${b}->${I}`),aR(h,n,I),c.dispose()),Promise.all(x.map(F=>W_(F,l,s.gpuAccelerateSDF).then(({timing:V})=>{y.sdf[F.atlasIndex]=V}))).then(()=>{x.length&&!l.contextLost&&(X_(l),c.needsUpdate=!0),y.sdfTotal=Uo()-w,y.total=Uo()-t,e(Object.freeze({parameters:s,sdfTexture:c,sdfGlyphSize:o,sdfExponent:r,glyphBounds:_,glyphAtlasIndices:f,glyphColors:d.glyphColors,caretPositions:d.caretPositions,chunkedBounds:d.chunkedBounds,ascender:d.ascender,descender:d.descender,lineHeight:d.lineHeight,capHeight:d.capHeight,xHeight:d.xHeight,topBaseline:d.topBaseline,blockBounds:d.blockBounds,visibleBounds:d.visibleBounds,timings:d.timings}))})}),Promise.resolve().then(()=>{l.contextLost||oR(h)})}function W_({path:s,atlasIndex:e,sdfViewBox:t},{sdfGlyphSize:i,sdfCanvas:n,contextLost:r},o){if(r)return Promise.resolve({timing:-1});const{textureWidth:a,sdfExponent:l}=Ta,c=Math.max(t[2]-t[0],t[3]-t[1]),h=Math.floor(e/4),u=h%(a/i)*i,d=Math.floor(h/(a/i))*i,f=e%4;return eR(i,i,s,t,c,l,n,u,d,f,o)}function cR(s){const e=s.sdfCanvas;e.addEventListener("webglcontextlost",t=>{console.log("Context Lost",t),t.preventDefault(),s.contextLost=!0}),e.addEventListener("webglcontextrestored",t=>{console.log("Context Restored",t),s.contextLost=!1;const i=[];s.glyphsByFont.forEach(n=>{n.forEach(r=>{i.push(W_(r,s,!0))})}),Promise.all(i).then(()=>{X_(s),s.sdfTexture.needsUpdate=!0})})}function hR({font:s,characters:e,sdfGlyphSize:t},i){let n=Array.isArray(e)?e.join(`
`):""+e;H_({font:s,sdfGlyphSize:t,text:n},i)}function uR(s,e){for(let t in e)e.hasOwnProperty(t)&&(s[t]=e[t]);return s}let Cc;function dR(s){return Cc||(Cc=typeof document>"u"?{}:document.createElement("a")),Cc.href=s,Cc.href}function X_(s){if(typeof createImageBitmap!="function"){console.info("Safari<15: applying SDF canvas workaround");const{sdfCanvas:e,sdfTexture:t}=s,{width:i,height:n}=e,r=s.sdfCanvas.getContext("webgl");let o=t.image.data;(!o||o.length!==i*n*4)&&(o=new Uint8Array(i*n*4),t.image={width:i,height:n,data:o},t.flipY=!1,t.isDataTexture=!0),r.readPixels(0,0,i,n,r.RGBA,r.UNSIGNED_BYTE,o)}}const fR=Qo({name:"Typesetter",dependencies:[$C,QC,kC],init(s,e,t){return s(e,t())}}),Y_=Qo({name:"Typesetter",dependencies:[fR],init(s){return function(e){return new Promise(t=>{s.typeset(e,t)})}},getTransferables(s){const e=[];for(let t in s)s[t]&&s[t].buffer&&e.push(s[t].buffer);return e}});Y_.onMainThread;const r0={};function pR(s){let e=r0[s];return e||(e=r0[s]=new or(1,1,s,s).translate(.5,.5,0)),e}const mR="aTroikaGlyphBounds",s0="aTroikaGlyphIndex",gR="aTroikaGlyphColor";class vR extends uu{constructor(){super(),this.detail=1,this.curveRadius=0,this.groups=[{start:0,count:1/0,materialIndex:0},{start:0,count:1/0,materialIndex:1}],this.boundingSphere=new Cn,this.boundingBox=new Mn}computeBoundingSphere(){}computeBoundingBox(){}set detail(e){if(e!==this._detail){this._detail=e,(typeof e!="number"||e<1)&&(e=1);let t=pR(e);["position","normal","uv"].forEach(i=>{this.attributes[i]=t.attributes[i].clone()}),this.setIndex(t.getIndex().clone())}}get detail(){return this._detail}set curveRadius(e){e!==this._curveRadius&&(this._curveRadius=e,this._updateBounds())}get curveRadius(){return this._curveRadius}updateGlyphs(e,t,i,n,r){this.updateAttributeData(mR,e,4),this.updateAttributeData(s0,t,1),this.updateAttributeData(gR,r,3),this._blockBounds=i,this._chunkedBounds=n,this.instanceCount=t.length,this._updateBounds()}_updateBounds(){const e=this._blockBounds;if(e){const{curveRadius:t,boundingBox:i}=this;if(t){const{PI:n,floor:r,min:o,max:a,sin:l,cos:c}=Math,h=n/2,u=n*2,d=Math.abs(t),f=e[0]/d,p=e[2]/d,v=r((f+h)/u)!==r((p+h)/u)?-d:o(l(f)*d,l(p)*d),m=r((f-h)/u)!==r((p-h)/u)?d:a(l(f)*d,l(p)*d),g=r((f+n)/u)!==r((p+n)/u)?d*2:a(d-c(f)*d,d-c(p)*d);i.min.set(v,e[1],t<0?-g:0),i.max.set(m,e[3],t<0?0:g)}else i.min.set(e[0],e[1],0),i.max.set(e[2],e[3],0);i.getBoundingSphere(this.boundingSphere)}}applyClipRect(e){let t=this.getAttribute(s0).count,i=this._chunkedBounds;if(i)for(let n=i.length;n--;){t=i[n].end;let r=i[n].rect;if(r[1]<e.w&&r[3]>e.y&&r[0]<e.z&&r[2]>e.x)break}this.instanceCount=t}updateAttributeData(e,t,i){const n=this.getAttribute(e);t?n&&n.array.length===t.length?(n.array.set(t),n.needsUpdate=!0):(this.setAttribute(e,new to(t,i)),delete this._maxInstanceCount,this.dispose()):n&&this.deleteAttribute(e)}}const _R=`
uniform vec2 uTroikaSDFTextureSize;
uniform float uTroikaSDFGlyphSize;
uniform vec4 uTroikaTotalBounds;
uniform vec4 uTroikaClipRect;
uniform mat3 uTroikaOrient;
uniform bool uTroikaUseGlyphColors;
uniform float uTroikaEdgeOffset;
uniform float uTroikaBlurRadius;
uniform vec2 uTroikaPositionOffset;
uniform float uTroikaCurveRadius;
attribute vec4 aTroikaGlyphBounds;
attribute float aTroikaGlyphIndex;
attribute vec3 aTroikaGlyphColor;
varying vec2 vTroikaGlyphUV;
varying vec4 vTroikaTextureUVBounds;
varying float vTroikaTextureChannel;
varying vec3 vTroikaGlyphColor;
varying vec2 vTroikaGlyphDimensions;
`,yR=`
vec4 bounds = aTroikaGlyphBounds;
bounds.xz += uTroikaPositionOffset.x;
bounds.yw -= uTroikaPositionOffset.y;

vec4 outlineBounds = vec4(
  bounds.xy - uTroikaEdgeOffset - uTroikaBlurRadius,
  bounds.zw + uTroikaEdgeOffset + uTroikaBlurRadius
);
vec4 clippedBounds = vec4(
  clamp(outlineBounds.xy, uTroikaClipRect.xy, uTroikaClipRect.zw),
  clamp(outlineBounds.zw, uTroikaClipRect.xy, uTroikaClipRect.zw)
);

vec2 clippedXY = (mix(clippedBounds.xy, clippedBounds.zw, position.xy) - bounds.xy) / (bounds.zw - bounds.xy);

position.xy = mix(bounds.xy, bounds.zw, clippedXY);

uv = (position.xy - uTroikaTotalBounds.xy) / (uTroikaTotalBounds.zw - uTroikaTotalBounds.xy);

float rad = uTroikaCurveRadius;
if (rad != 0.0) {
  float angle = position.x / rad;
  position.xz = vec2(sin(angle) * rad, rad - cos(angle) * rad);
  normal.xz = vec2(sin(angle), cos(angle));
}
  
position = uTroikaOrient * position;
normal = uTroikaOrient * normal;

vTroikaGlyphUV = clippedXY.xy;
vTroikaGlyphDimensions = vec2(bounds[2] - bounds[0], bounds[3] - bounds[1]);


float txCols = uTroikaSDFTextureSize.x / uTroikaSDFGlyphSize;
vec2 txUvPerSquare = uTroikaSDFGlyphSize / uTroikaSDFTextureSize;
vec2 txStartUV = txUvPerSquare * vec2(
  mod(floor(aTroikaGlyphIndex / 4.0), txCols),
  floor(floor(aTroikaGlyphIndex / 4.0) / txCols)
);
vTroikaTextureUVBounds = vec4(txStartUV, vec2(txStartUV) + txUvPerSquare);
vTroikaTextureChannel = mod(aTroikaGlyphIndex, 4.0);
`,xR=`
uniform sampler2D uTroikaSDFTexture;
uniform vec2 uTroikaSDFTextureSize;
uniform float uTroikaSDFGlyphSize;
uniform float uTroikaSDFExponent;
uniform float uTroikaEdgeOffset;
uniform float uTroikaFillOpacity;
uniform float uTroikaBlurRadius;
uniform vec3 uTroikaStrokeColor;
uniform float uTroikaStrokeWidth;
uniform float uTroikaStrokeOpacity;
uniform bool uTroikaSDFDebug;
varying vec2 vTroikaGlyphUV;
varying vec4 vTroikaTextureUVBounds;
varying float vTroikaTextureChannel;
varying vec2 vTroikaGlyphDimensions;

float troikaSdfValueToSignedDistance(float alpha) {
  // Inverse of exponential encoding in webgl-sdf-generator
  
  float maxDimension = max(vTroikaGlyphDimensions.x, vTroikaGlyphDimensions.y);
  float absDist = (1.0 - pow(2.0 * (alpha > 0.5 ? 1.0 - alpha : alpha), 1.0 / uTroikaSDFExponent)) * maxDimension;
  float signedDist = absDist * (alpha > 0.5 ? -1.0 : 1.0);
  return signedDist;
}

float troikaGlyphUvToSdfValue(vec2 glyphUV) {
  vec2 textureUV = mix(vTroikaTextureUVBounds.xy, vTroikaTextureUVBounds.zw, glyphUV);
  vec4 rgba = texture2D(uTroikaSDFTexture, textureUV);
  float ch = floor(vTroikaTextureChannel + 0.5); //NOTE: can't use round() in WebGL1
  return ch == 0.0 ? rgba.r : ch == 1.0 ? rgba.g : ch == 2.0 ? rgba.b : rgba.a;
}

float troikaGlyphUvToDistance(vec2 uv) {
  return troikaSdfValueToSignedDistance(troikaGlyphUvToSdfValue(uv));
}

float troikaGetAADist() {
  
  #if defined(GL_OES_standard_derivatives) || __VERSION__ >= 300
  return length(fwidth(vTroikaGlyphUV * vTroikaGlyphDimensions)) * 0.5;
  #else
  return vTroikaGlyphDimensions.x / 64.0;
  #endif
}

float troikaGetFragDistValue() {
  vec2 clampedGlyphUV = clamp(vTroikaGlyphUV, 0.5 / uTroikaSDFGlyphSize, 1.0 - 0.5 / uTroikaSDFGlyphSize);
  float distance = troikaGlyphUvToDistance(clampedGlyphUV);
 
  // Extrapolate distance when outside bounds:
  distance += clampedGlyphUV == vTroikaGlyphUV ? 0.0 : 
    length((vTroikaGlyphUV - clampedGlyphUV) * vTroikaGlyphDimensions);

  

  return distance;
}

float troikaGetEdgeAlpha(float distance, float distanceOffset, float aaDist) {
  #if defined(IS_DEPTH_MATERIAL) || defined(IS_DISTANCE_MATERIAL)
  float alpha = step(-distanceOffset, -distance);
  #else

  float alpha = smoothstep(
    distanceOffset + aaDist,
    distanceOffset - aaDist,
    distance
  );
  #endif

  return alpha;
}
`,bR=`
float aaDist = troikaGetAADist();
float fragDistance = troikaGetFragDistValue();
float edgeAlpha = uTroikaSDFDebug ?
  troikaGlyphUvToSdfValue(vTroikaGlyphUV) :
  troikaGetEdgeAlpha(fragDistance, uTroikaEdgeOffset, max(aaDist, uTroikaBlurRadius));

#if !defined(IS_DEPTH_MATERIAL) && !defined(IS_DISTANCE_MATERIAL)
vec4 fillRGBA = gl_FragColor;
fillRGBA.a *= uTroikaFillOpacity;
vec4 strokeRGBA = uTroikaStrokeWidth == 0.0 ? fillRGBA : vec4(uTroikaStrokeColor, uTroikaStrokeOpacity);
if (fillRGBA.a == 0.0) fillRGBA.rgb = strokeRGBA.rgb;
gl_FragColor = mix(fillRGBA, strokeRGBA, smoothstep(
  -uTroikaStrokeWidth - aaDist,
  -uTroikaStrokeWidth + aaDist,
  fragDistance
));
gl_FragColor.a *= edgeAlpha;
#endif

if (edgeAlpha == 0.0) {
  discard;
}
`;function SR(s){const e=df(s,{chained:!0,extensions:{derivatives:!0},uniforms:{uTroikaSDFTexture:{value:null},uTroikaSDFTextureSize:{value:new xe},uTroikaSDFGlyphSize:{value:0},uTroikaSDFExponent:{value:0},uTroikaTotalBounds:{value:new Pt(0,0,0,0)},uTroikaClipRect:{value:new Pt(0,0,0,0)},uTroikaEdgeOffset:{value:0},uTroikaFillOpacity:{value:1},uTroikaPositionOffset:{value:new xe},uTroikaCurveRadius:{value:0},uTroikaBlurRadius:{value:0},uTroikaStrokeWidth:{value:0},uTroikaStrokeColor:{value:new ze},uTroikaStrokeOpacity:{value:1},uTroikaOrient:{value:new Et},uTroikaUseGlyphColors:{value:!0},uTroikaSDFDebug:{value:!1}},vertexDefs:_R,vertexTransform:yR,fragmentDefs:xR,fragmentColorTransform:bR,customRewriter({vertexShader:t,fragmentShader:i}){let n=/\buniform\s+vec3\s+diffuse\b/;return n.test(i)&&(i=i.replace(n,"varying vec3 vTroikaGlyphColor").replace(/\bdiffuse\b/g,"vTroikaGlyphColor"),n.test(t)||(t=t.replace(G_,`uniform vec3 diffuse;
$&
vTroikaGlyphColor = uTroikaUseGlyphColors ? aTroikaGlyphColor / 255.0 : diffuse;
`))),{vertexShader:t,fragmentShader:i}}});return e.transparent=!0,e.forceSinglePass=!0,Object.defineProperties(e,{isTroikaTextMaterial:{value:!0},shadowSide:{get(){return this.side},set(){}}}),e}const wp=new Bn({color:16777215,side:xi,transparent:!0}),o0=8421504,a0=new st,Rc=new L,Dd=new L,xa=[],MR=new L,Ld="+x+y";function l0(s){return Array.isArray(s)?s[0]:s}let j_=()=>{const s=new ke(new or(1,1),wp);return j_=()=>s,s},q_=()=>{const s=new ke(new or(1,1,32,1),wp);return q_=()=>s,s};const wR={type:"syncstart"},ER={type:"synccomplete"},Z_=["font","fontSize","fontStyle","fontWeight","lang","letterSpacing","lineHeight","maxWidth","overflowWrap","text","direction","textAlign","textIndent","whiteSpace","anchorX","anchorY","colorRanges","sdfGlyphSize"],TR=Z_.concat("material","color","depthOffset","clipRect","curveRadius","orientation","glyphGeometryDetail");let J_=class extends ke{constructor(){const e=new vR;super(e,null),this.text="",this.anchorX=0,this.anchorY=0,this.curveRadius=0,this.direction="auto",this.font=null,this.unicodeFontsURL=null,this.fontSize=.1,this.fontWeight="normal",this.fontStyle="normal",this.lang=null,this.letterSpacing=0,this.lineHeight="normal",this.maxWidth=1/0,this.overflowWrap="normal",this.textAlign="left",this.textIndent=0,this.whiteSpace="normal",this.material=null,this.color=null,this.colorRanges=null,this.outlineWidth=0,this.outlineColor=0,this.outlineOpacity=1,this.outlineBlur=0,this.outlineOffsetX=0,this.outlineOffsetY=0,this.strokeWidth=0,this.strokeColor=o0,this.strokeOpacity=1,this.fillOpacity=1,this.depthOffset=0,this.clipRect=null,this.orientation=Ld,this.glyphGeometryDetail=1,this.sdfGlyphSize=null,this.gpuAccelerateSDF=!0,this.debugSDF=!1}sync(e){this._needsSync&&(this._needsSync=!1,this._isSyncing?(this._queuedSyncs||(this._queuedSyncs=[])).push(e):(this._isSyncing=!0,this.dispatchEvent(wR),H_({text:this.text,font:this.font,lang:this.lang,fontSize:this.fontSize||.1,fontWeight:this.fontWeight||"normal",fontStyle:this.fontStyle||"normal",letterSpacing:this.letterSpacing||0,lineHeight:this.lineHeight||"normal",maxWidth:this.maxWidth,direction:this.direction||"auto",textAlign:this.textAlign,textIndent:this.textIndent,whiteSpace:this.whiteSpace,overflowWrap:this.overflowWrap,anchorX:this.anchorX,anchorY:this.anchorY,colorRanges:this.colorRanges,includeCaretPositions:!0,sdfGlyphSize:this.sdfGlyphSize,gpuAccelerateSDF:this.gpuAccelerateSDF,unicodeFontsURL:this.unicodeFontsURL},t=>{this._isSyncing=!1,this._textRenderInfo=t,this.geometry.updateGlyphs(t.glyphBounds,t.glyphAtlasIndices,t.blockBounds,t.chunkedBounds,t.glyphColors);const i=this._queuedSyncs;i&&(this._queuedSyncs=null,this._needsSync=!0,this.sync(()=>{i.forEach(n=>n&&n())})),this.dispatchEvent(ER),e&&e()})))}onBeforeRender(e,t,i,n,r,o){this.sync(),r.isTroikaTextMaterial&&this._prepareForRender(r)}dispose(){this.geometry.dispose()}get textRenderInfo(){return this._textRenderInfo||null}createDerivedMaterial(e){return SR(e)}get material(){let e=this._derivedMaterial;const t=this._baseMaterial||this._defaultMaterial||(this._defaultMaterial=wp.clone());if((!e||!e.isDerivedFrom(t))&&(e=this._derivedMaterial=this.createDerivedMaterial(t),t.addEventListener("dispose",function i(){t.removeEventListener("dispose",i),e.dispose()})),this.hasOutline()){let i=e._outlineMtl;return i||(i=e._outlineMtl=Object.create(e,{id:{value:e.id+.1}}),i.isTextOutlineMaterial=!0,i.depthWrite=!1,i.map=null,e.addEventListener("dispose",function n(){e.removeEventListener("dispose",n),i.dispose()})),[i,e]}else return e}set material(e){e&&e.isTroikaTextMaterial?(this._derivedMaterial=e,this._baseMaterial=e.baseMaterial):this._baseMaterial=e}hasOutline(){return!!(this.outlineWidth||this.outlineBlur||this.outlineOffsetX||this.outlineOffsetY)}get glyphGeometryDetail(){return this.geometry.detail}set glyphGeometryDetail(e){this.geometry.detail=e}get curveRadius(){return this.geometry.curveRadius}set curveRadius(e){this.geometry.curveRadius=e}get customDepthMaterial(){return l0(this.material).getDepthMaterial()}set customDepthMaterial(e){}get customDistanceMaterial(){return l0(this.material).getDistanceMaterial()}set customDistanceMaterial(e){}_prepareForRender(e){const t=e.isTextOutlineMaterial,i=e.uniforms,n=this.textRenderInfo;if(n){const{sdfTexture:a,blockBounds:l}=n;i.uTroikaSDFTexture.value=a,i.uTroikaSDFTextureSize.value.set(a.image.width,a.image.height),i.uTroikaSDFGlyphSize.value=n.sdfGlyphSize,i.uTroikaSDFExponent.value=n.sdfExponent,i.uTroikaTotalBounds.value.fromArray(l),i.uTroikaUseGlyphColors.value=!t&&!!n.glyphColors;let c=0,h=0,u=0,d,f,p,v=0,m=0;if(t){let{outlineWidth:y,outlineOffsetX:x,outlineOffsetY:_,outlineBlur:E,outlineOpacity:M}=this;c=this._parsePercent(y)||0,h=Math.max(0,this._parsePercent(E)||0),d=M,v=this._parsePercent(x)||0,m=this._parsePercent(_)||0}else u=Math.max(0,this._parsePercent(this.strokeWidth)||0),u&&(p=this.strokeColor,i.uTroikaStrokeColor.value.set(p??o0),f=this.strokeOpacity,f==null&&(f=1)),d=this.fillOpacity;i.uTroikaEdgeOffset.value=c,i.uTroikaPositionOffset.value.set(v,m),i.uTroikaBlurRadius.value=h,i.uTroikaStrokeWidth.value=u,i.uTroikaStrokeOpacity.value=f,i.uTroikaFillOpacity.value=d??1,i.uTroikaCurveRadius.value=this.curveRadius||0;let g=this.clipRect;if(g&&Array.isArray(g)&&g.length===4)i.uTroikaClipRect.value.fromArray(g);else{const y=(this.fontSize||.1)*100;i.uTroikaClipRect.value.set(l[0]-y,l[1]-y,l[2]+y,l[3]+y)}this.geometry.applyClipRect(i.uTroikaClipRect.value)}i.uTroikaSDFDebug.value=!!this.debugSDF,e.polygonOffset=!!this.depthOffset,e.polygonOffsetFactor=e.polygonOffsetUnits=this.depthOffset||0;const r=t?this.outlineColor||0:this.color;if(r==null)delete e.color;else{const a=e.hasOwnProperty("color")?e.color:e.color=new ze;(r!==a._input||typeof r=="object")&&a.set(a._input=r)}let o=this.orientation||Ld;if(o!==e._orientation){let a=i.uTroikaOrient.value;o=o.replace(/[^-+xyz]/g,"");let l=o!==Ld&&o.match(/^([-+])([xyz])([-+])([xyz])$/);if(l){let[,c,h,u,d]=l;Rc.set(0,0,0)[h]=c==="-"?1:-1,Dd.set(0,0,0)[d]=u==="-"?-1:1,a0.lookAt(MR,Rc.cross(Dd),Dd),a.setFromMatrix4(a0)}else a.identity();e._orientation=o}}_parsePercent(e){if(typeof e=="string"){let t=e.match(/^(-?[\d.]+)%$/),i=t?parseFloat(t[1]):NaN;e=(isNaN(i)?0:i/100)*this.fontSize}return e}localPositionToTextCoords(e,t=new xe){t.copy(e);const i=this.curveRadius;return i&&(t.x=Math.atan2(e.x,Math.abs(i)-Math.abs(e.z))*Math.abs(i)),t}worldPositionToTextCoords(e,t=new xe){return Rc.copy(e),this.localPositionToTextCoords(this.worldToLocal(Rc),t)}raycast(e,t){const{textRenderInfo:i,curveRadius:n}=this;if(i){const r=i.blockBounds,o=n?q_():j_(),a=o.geometry,{position:l,uv:c}=a.attributes;for(let h=0;h<c.count;h++){let u=r[0]+c.getX(h)*(r[2]-r[0]);const d=r[1]+c.getY(h)*(r[3]-r[1]);let f=0;n&&(f=n-Math.cos(u/n)*n,u=Math.sin(u/n)*n),l.setXYZ(h,u,d,f)}a.boundingSphere=this.geometry.boundingSphere,a.boundingBox=this.geometry.boundingBox,o.matrixWorld=this.matrixWorld,o.material.side=this.material.side,xa.length=0,o.raycast(e,xa);for(let h=0;h<xa.length;h++)xa[h].object=this,t.push(xa[h])}}copy(e){const t=this.geometry;return super.copy(e),this.geometry=t,TR.forEach(i=>{this[i]=e[i]}),this}clone(){return new this.constructor().copy(this)}};Z_.forEach(s=>{const e="_private_"+s;Object.defineProperty(J_.prototype,s,{get(){return this[e]},set(t){t!==this[e]&&(this[e]=t,this._needsSync=!0)}})});new Mn;new ze;new Mn;new ze;typeof window<"u"&&document.createElement("div");function K_(s,e){Dn(e,!0);let t=He(e,"ref",15),i=yr(e,["$$slots","$$events","$$legacy","font","characters","sdfGlyphSize","ref","onsync","children"]);const n=new J_,{invalidate:r}=Gi(),o=async()=>{await _f(),n.sync(()=>{var c;r(),(c=e.onsync)==null||c.call(e)})},a=["text","anchorX","anchorY","curveRadius","direction","font","fontSize","letterSpacing","lineHeight","maxWidth","overflowWrap","textAlign","textIndent","whiteSpace","material","color","depthOffset","clipRect","glyphGeometryDetail","sdfGlyphSize","outlineWidth","outlineColor","outlineOpacity","outlineBlur","outlineOffsetX","outlineOffsetY","strokeWidth","strokeColor","strokeOpacity","fillOpacity","characters","colorRanges"];b_(()=>a.map(c=>i[c]),()=>{o()});const l=r2();It(()=>{l(new Promise(c=>hR({font:e.font,characters:e.characters,sdfGlyphSize:e.sdfGlyphSize},c)))}),bt(s,Br({is:n},()=>i,{get font(){return e.font},get characters(){return e.characters},get sdfGlyphSize(){return e.sdfGlyphSize},get ref(){return t()},set ref(c){t(c)},children:(c,h)=>{var u=pt(),d=je(u);Yi(d,()=>e.children??kr,()=>({ref:n})),Xe(c,u)},$$slots:{default:!0}})),Ln()}const AR=s=>{const{camera:e}=Gi();let t=s.current.clientWidth,i=s.current.clientHeight;const n=new ResizeObserver(([r])=>{t=r.contentRect.width,i=r.contentRect.height});return ei(s,r=>(r&&n.observe(r),()=>{r&&n.unobserve(r)})),(r,o)=>{o.pointer.update(a=>(a.set(r.offsetX/t*2-1,-(r.offsetY/i)*2+1),a)),o.raycaster.setFromCamera(o.pointer.current,e.current)}},Q_=Symbol("interactivity-context"),CR=()=>ii(Q_),RR=s=>{const e=dn(mu().dom),t={enabled:dn(!0),pointer:dn(new xe),pointerOverTarget:dn(!1),lastEvent:void 0,raycaster:new du,initialClick:[0,0],initialHits:[],hovered:new Map,interactiveObjects:[],target:e,handlers:new WeakMap,compute:AR(e),filter:s==null?void 0:s.filter,addInteractiveObject:(i,n)=>{t.interactiveObjects.indexOf(i)>-1||(t.handlers.set(i,n),t.interactiveObjects.push(i))},removeInteractiveObject:i=>{const n=t.interactiveObjects.indexOf(i);t.interactiveObjects.splice(n,1),t.handlers.delete(i)}};return Ai(Q_,t),t},$_=()=>{const s=CR();if(!s)throw new Error("No interactivity context found. Did you forget to implement interactivity()?");return s},c0=["onclick","oncontextmenu","ondblclick","onwheel","onpointerup","onpointerdown","onpointerover","onpointerout","onpointerenter","onpointerleave","onpointermove","onpointermissed"],PR=()=>{e2("interactivity",s=>{if(!Ui(s.ref,"Object3D")||!Object.entries(s.props).some(([n,r])=>r!==void 0&&c0.includes(n)))return;const{addInteractiveObject:t,removeInteractiveObject:i}=$_();return b_.pre(()=>[s.ref],([n])=>(t(n,s.props),()=>{i(n)})),{pluginProps:c0}})};function h0(s){return`${(s.eventObject||s.object).uuid}/${s.index}${s.instanceId}`}const u0=[["click",!1],["contextmenu",!1],["dblclick",!1],["wheel",!1],["pointerdown",!0],["pointerup",!0],["pointerleave",!0],["pointerenter",!0],["pointermove",!0],["pointercancel",!0]],IR=s=>{const{handlers:e}=$_(),t=c=>{const h=c.offsetX-s.initialClick[0],u=c.offsetY-s.initialClick[1];return Math.round(Math.hypot(h,u))},i=c=>{var h,u;for(const d of s.hovered.values())if(c.length===0||!c.some(f=>f.object===d.object&&f.index===d.index&&f.instanceId===d.instanceId)){const{eventObject:f}=d;s.hovered.delete(h0(d));const p=e.get(f);if(p){const v={...d,intersections:c};(h=p.onpointerout)==null||h.call(p,v),(u=p.onpointerleave)==null||u.call(p,v)}}},n=()=>{if(!s.enabled.current)return[];const c=[],h=s.raycaster.intersectObjects(s.interactiveObjects,!0),u=s.filter===void 0?h:s.filter(h,s);for(const d of u){let f=d.object;for(;f;)e.has(f)&&c.push({...d,eventObject:f}),f=f.parent}return c},r=(c,h)=>{var u,d;for(const f of h)(d=(u=e.get(f))==null?void 0:u.onpointermissed)==null||d.call(u,c)},o=c=>c==="pointerleave"||c==="pointercancel"?()=>{s.pointerOverTarget.set(!1),i([])}:c==="pointerenter"?()=>{s.pointerOverTarget.set(!0)}:h=>{var m,g,y,x;const u=c==="pointermove",d=c==="click"||c==="contextmenu"||c==="dblclick";s.compute(h,s);const f=n(),p=d?t(h):0;c==="pointerdown"&&(s.initialClick=[h.offsetX,h.offsetY],s.initialHits=f.map(_=>_.eventObject)),d&&f.length===0&&p<=2&&r(h,s.interactiveObjects),u&&i(f);let v=!1;e:for(const _ of f){const E={stopped:v,..._,intersections:f,stopPropagation(){if(v=!0,E.stopped=!0,s.hovered.size>0&&Array.from(s.hovered.values()).some(S=>S.eventObject===_.eventObject)){const S=f.slice(0,f.indexOf(_));i([...S,_])}},camera:s.raycaster.camera,delta:p,nativeEvent:h,pointer:s.pointer.current,ray:s.raycaster.ray},M=e.get(_.eventObject);if(!M)return;if(u){if(M.onpointerover||M.onpointerenter||M.onpointerout||M.onpointerleave){const S=h0(E),T=s.hovered.get(S);T?T.stopped&&E.stopPropagation():(s.hovered.set(S,E),(m=M.onpointerover)==null||m.call(M,E),(g=M.onpointerenter)==null||g.call(M,E))}(y=M.onpointermove)==null||y.call(M,E)}else M[`on${c}`]?(!d||s.initialHits.includes(_.eventObject))&&(r(h,s.interactiveObjects.filter(S=>!s.initialHits.includes(S))),(x=M[`on${c}`])==null||x.call(M,E)):d&&s.initialHits.includes(_.eventObject)&&r(h,s.interactiveObjects.filter(S=>!s.initialHits.includes(S)));if(v)break e}},a=c=>{u0.forEach(([h])=>{c.removeEventListener(h,o(h))})},l=c=>{u0.forEach(([h,u])=>{c.addEventListener(h,o(h),{passive:u})})};ei(s.target,c=>(c&&l(c),()=>{c&&a(c)}))},Ep=s=>{const e=RR(s);return PR(),IR(e),e};for(let s=0;s<256;s++)(s<16?"0":"")+s.toString(16);new us(-1,1,1,-1,0,1);class DR extends yt{constructor(){super(),this.setAttribute("position",new qe([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new qe([0,2,0,0,2,0],2))}}new DR;var ey={exports:{}};ey.exports=yu;ey.exports.default=yu;function yu(s,e,t){t=t||2;var i=e&&e.length,n=i?e[0]*t:s.length,r=ty(s,0,n,t,!0),o=[];if(!r||r.next===r.prev)return o;var a,l,c,h,u,d,f;if(i&&(r=FR(s,e,r,t)),s.length>80*t){a=c=s[0],l=h=s[1];for(var p=t;p<n;p+=t)u=s[p],d=s[p+1],u<a&&(a=u),d<l&&(l=d),u>c&&(c=u),d>h&&(h=d);f=Math.max(c-a,h-l),f=f!==0?32767/f:0}return rl(r,o,t,a,l,f,0),o}function ty(s,e,t,i,n){var r,o;if(n===gf(s,e,t,i)>0)for(r=e;r<t;r+=i)o=d0(r,s[r],s[r+1],o);else for(r=t-i;r>=e;r-=i)o=d0(r,s[r],s[r+1],o);return o&&xu(o,o.next)&&(ol(o),o=o.next),o}function oo(s,e){if(!s)return s;e||(e=s);var t=s,i;do if(i=!1,!t.steiner&&(xu(t,t.next)||fn(t.prev,t,t.next)===0)){if(ol(t),t=e=t.prev,t===t.next)break;i=!0}else t=t.next;while(i||t!==e);return e}function rl(s,e,t,i,n,r,o){if(s){!o&&r&&VR(s,i,n,r);for(var a=s,l,c;s.prev!==s.next;){if(l=s.prev,c=s.next,r?UR(s,i,n,r):LR(s)){e.push(l.i/t|0),e.push(s.i/t|0),e.push(c.i/t|0),ol(s),s=c.next,a=c.next;continue}if(s=c,s===a){o?o===1?(s=NR(oo(s),e,t),rl(s,e,t,i,n,r,2)):o===2&&OR(s,e,t,i,n,r):rl(oo(s),e,t,i,n,r,1);break}}}}function LR(s){var e=s.prev,t=s,i=s.next;if(fn(e,t,i)>=0)return!1;for(var n=e.x,r=t.x,o=i.x,a=e.y,l=t.y,c=i.y,h=n<r?n<o?n:o:r<o?r:o,u=a<l?a<c?a:c:l<c?l:c,d=n>r?n>o?n:o:r>o?r:o,f=a>l?a>c?a:c:l>c?l:c,p=i.next;p!==e;){if(p.x>=h&&p.x<=d&&p.y>=u&&p.y<=f&&ko(n,a,r,l,o,c,p.x,p.y)&&fn(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function UR(s,e,t,i){var n=s.prev,r=s,o=s.next;if(fn(n,r,o)>=0)return!1;for(var a=n.x,l=r.x,c=o.x,h=n.y,u=r.y,d=o.y,f=a<l?a<c?a:c:l<c?l:c,p=h<u?h<d?h:d:u<d?u:d,v=a>l?a>c?a:c:l>c?l:c,m=h>u?h>d?h:d:u>d?u:d,g=pf(f,p,e,t,i),y=pf(v,m,e,t,i),x=s.prevZ,_=s.nextZ;x&&x.z>=g&&_&&_.z<=y;){if(x.x>=f&&x.x<=v&&x.y>=p&&x.y<=m&&x!==n&&x!==o&&ko(a,h,l,u,c,d,x.x,x.y)&&fn(x.prev,x,x.next)>=0||(x=x.prevZ,_.x>=f&&_.x<=v&&_.y>=p&&_.y<=m&&_!==n&&_!==o&&ko(a,h,l,u,c,d,_.x,_.y)&&fn(_.prev,_,_.next)>=0))return!1;_=_.nextZ}for(;x&&x.z>=g;){if(x.x>=f&&x.x<=v&&x.y>=p&&x.y<=m&&x!==n&&x!==o&&ko(a,h,l,u,c,d,x.x,x.y)&&fn(x.prev,x,x.next)>=0)return!1;x=x.prevZ}for(;_&&_.z<=y;){if(_.x>=f&&_.x<=v&&_.y>=p&&_.y<=m&&_!==n&&_!==o&&ko(a,h,l,u,c,d,_.x,_.y)&&fn(_.prev,_,_.next)>=0)return!1;_=_.nextZ}return!0}function NR(s,e,t){var i=s;do{var n=i.prev,r=i.next.next;!xu(n,r)&&ny(n,i,i.next,r)&&sl(n,r)&&sl(r,n)&&(e.push(n.i/t|0),e.push(i.i/t|0),e.push(r.i/t|0),ol(i),ol(i.next),i=s=r),i=i.next}while(i!==s);return oo(i)}function OR(s,e,t,i,n,r){var o=s;do{for(var a=o.next.next;a!==o.prev;){if(o.i!==a.i&&XR(o,a)){var l=iy(o,a);o=oo(o,o.next),l=oo(l,l.next),rl(o,e,t,i,n,r,0),rl(l,e,t,i,n,r,0);return}a=a.next}o=o.next}while(o!==s)}function FR(s,e,t,i){var n=[],r,o,a,l,c;for(r=0,o=e.length;r<o;r++)a=e[r]*i,l=r<o-1?e[r+1]*i:s.length,c=ty(s,a,l,i,!1),c===c.next&&(c.steiner=!0),n.push(WR(c));for(n.sort(kR),r=0;r<n.length;r++)t=BR(n[r],t);return t}function kR(s,e){return s.x-e.x}function BR(s,e){var t=zR(s,e);if(!t)return e;var i=iy(t,s);return oo(i,i.next),oo(t,t.next)}function zR(s,e){var t=e,i=s.x,n=s.y,r=-1/0,o;do{if(n<=t.y&&n>=t.next.y&&t.next.y!==t.y){var a=t.x+(n-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(a<=i&&a>r&&(r=a,o=t.x<t.next.x?t:t.next,a===i))return o}t=t.next}while(t!==e);if(!o)return null;var l=o,c=o.x,h=o.y,u=1/0,d;t=o;do i>=t.x&&t.x>=c&&i!==t.x&&ko(n<h?i:r,n,c,h,n<h?r:i,n,t.x,t.y)&&(d=Math.abs(n-t.y)/(i-t.x),sl(t,s)&&(d<u||d===u&&(t.x>o.x||t.x===o.x&&GR(o,t)))&&(o=t,u=d)),t=t.next;while(t!==l);return o}function GR(s,e){return fn(s.prev,s,e.prev)<0&&fn(e.next,s,s.next)<0}function VR(s,e,t,i){var n=s;do n.z===0&&(n.z=pf(n.x,n.y,e,t,i)),n.prevZ=n.prev,n.nextZ=n.next,n=n.next;while(n!==s);n.prevZ.nextZ=null,n.prevZ=null,HR(n)}function HR(s){var e,t,i,n,r,o,a,l,c=1;do{for(t=s,s=null,r=null,o=0;t;){for(o++,i=t,a=0,e=0;e<c&&(a++,i=i.nextZ,!!i);e++);for(l=c;a>0||l>0&&i;)a!==0&&(l===0||!i||t.z<=i.z)?(n=t,t=t.nextZ,a--):(n=i,i=i.nextZ,l--),r?r.nextZ=n:s=n,n.prevZ=r,r=n;t=i}r.nextZ=null,c*=2}while(o>1);return s}function pf(s,e,t,i,n){return s=(s-t)*n|0,e=(e-i)*n|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function WR(s){var e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function ko(s,e,t,i,n,r,o,a){return(n-o)*(e-a)>=(s-o)*(r-a)&&(s-o)*(i-a)>=(t-o)*(e-a)&&(t-o)*(r-a)>=(n-o)*(i-a)}function XR(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!YR(s,e)&&(sl(s,e)&&sl(e,s)&&jR(s,e)&&(fn(s.prev,s,e.prev)||fn(s,e.prev,e))||xu(s,e)&&fn(s.prev,s,s.next)>0&&fn(e.prev,e,e.next)>0)}function fn(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function xu(s,e){return s.x===e.x&&s.y===e.y}function ny(s,e,t,i){var n=Ic(fn(s,e,t)),r=Ic(fn(s,e,i)),o=Ic(fn(t,i,s)),a=Ic(fn(t,i,e));return!!(n!==r&&o!==a||n===0&&Pc(s,t,e)||r===0&&Pc(s,i,e)||o===0&&Pc(t,s,i)||a===0&&Pc(t,e,i))}function Pc(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function Ic(s){return s>0?1:s<0?-1:0}function YR(s,e){var t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&ny(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function sl(s,e){return fn(s.prev,s,s.next)<0?fn(s,e,s.next)>=0&&fn(s,s.prev,e)>=0:fn(s,e,s.prev)<0||fn(s,s.next,e)<0}function jR(s,e){var t=s,i=!1,n=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&n<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(i=!i),t=t.next;while(t!==s);return i}function iy(s,e){var t=new mf(s.i,s.x,s.y),i=new mf(e.i,e.x,e.y),n=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=n,n.prev=t,i.next=t,t.prev=i,r.next=i,i.prev=r,i}function d0(s,e,t,i){var n=new mf(s,e,t);return i?(n.next=i.next,n.prev=i,i.next.prev=n,i.next=n):(n.prev=n,n.next=n),n}function ol(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function mf(s,e,t){this.i=s,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}yu.deviation=function(s,e,t,i){var n=e&&e.length,r=n?e[0]*t:s.length,o=Math.abs(gf(s,0,r,t));if(n)for(var a=0,l=e.length;a<l;a++){var c=e[a]*t,h=a<l-1?e[a+1]*t:s.length;o-=Math.abs(gf(s,c,h,t))}var u=0;for(a=0;a<i.length;a+=3){var d=i[a]*t,f=i[a+1]*t,p=i[a+2]*t;u+=Math.abs((s[d]-s[p])*(s[f+1]-s[d+1])-(s[d]-s[f])*(s[p+1]-s[d+1]))}return o===0&&u===0?0:Math.abs((u-o)/o)};function gf(s,e,t,i){for(var n=0,r=e,o=t-i;r<t;r+=i)n+=(s[o]-s[r])*(s[r+1]+s[o+1]),o=r;return n}yu.flatten=function(s){for(var e=s[0][0].length,t={vertices:[],holes:[],dimensions:e},i=0,n=0;n<s.length;n++){for(var r=0;r<s[n].length;r++)for(var o=0;o<e;o++)t.vertices.push(s[n][r][o]);n>0&&(i+=s[n-1].length,t.holes.push(i))}return t};new xe;new xe;var f0;(s=>{function e(n){let r=n.slice();return r.sort(s.POINT_COMPARATOR),s.makeHullPresorted(r)}s.makeHull=e;function t(n){if(n.length<=1)return n.slice();let r=[];for(let a=0;a<n.length;a++){const l=n[a];for(;r.length>=2;){const c=r[r.length-1],h=r[r.length-2];if((c.x-h.x)*(l.y-h.y)>=(c.y-h.y)*(l.x-h.x))r.pop();else break}r.push(l)}r.pop();let o=[];for(let a=n.length-1;a>=0;a--){const l=n[a];for(;o.length>=2;){const c=o[o.length-1],h=o[o.length-2];if((c.x-h.x)*(l.y-h.y)>=(c.y-h.y)*(l.x-h.x))o.pop();else break}o.push(l)}return o.pop(),r.length==1&&o.length==1&&r[0].x==o[0].x&&r[0].y==o[0].y?r:r.concat(o)}s.makeHullPresorted=t;function i(n,r){return n.x<r.x?-1:n.x>r.x?1:n.y<r.y?-1:n.y>r.y?1:0}s.POINT_COMPARATOR=i})(f0||(f0={}));const Le=rs({edit:!1,tool:"translate",selectedLink:void 0,selectedJoint:void 0,robot:void 0,continuousJoints:{},revoluteJoints:{},visual:!0,collision:!1,collisionColor:"#813d9c",joints:!0,jointNames:!0,jointColor:"#62a0ea",linkNames:!0,linkColor:"#57e389",jointIndicatorColor:"#f66151",linkOpacity:1,highlightColor:"#ffa348",visualOpacity:1,collisionOpacity:.7,backgroundColor:"#241f31",translationSnap:.001,scaleSnap:.001,rotationSnap:1,initialZoom:1.3,zoom:1.3,nameHeight:.12});function Ud(s){const e=Tp(s,"xyz");if(!(!e||e.length!=3))return e}function p0(s){const e=Tp(s,"rpy");if(!(!e||e.length!=3))return e}function m0(s){const e=Tp(s,"rgba");if(!(!e||e.length!=4))return e}function Tp(s,e="xyz"){var t;if(s.hasAttribute(e)){const i=(t=s.getAttribute(e))==null?void 0:t.split(" ");if(i){const n=[];for(const r of i)n.push(parseFloat(r));return n}}}function Nd(s){return s*180/Math.PI}function qR(s){return s?new ze(s[0],s[1],s[2]):new ze("white")}function ry(s){return Math.max(Le.zoom/Le.initialZoom*s,s)}function ZR(s){const e=[],t=s.joints;for(const i of Object.values(s.links)){let n=!0;for(const r of t)if(r.child.name==i.name){n=!1;break}n&&e.push(i)}return e}function JR(s,e){const t=[],i=s.joints;if(!i)return[];for(const n of i)n.parent.name==e.name&&t.push(n);return t}function KR(s){const e=s.elem.getElementsByTagName("origin")[0];e.setAttribute("xyz",s.origin_xyz.join(" ")),e.setAttribute("rpy",s.origin_rpy.join(" "))}class QR{constructor(e,t=""){tn(this,"filename");tn(this,"colors",{});tn(this,"robot",{name:"",links:{},joints:[]});tn(this,"prefix","");this.filename=e,this.prefix=t}async load(){return fetch(this.filename).then(e=>e.text())}reset(){this.robot={name:"",links:{},joints:[]}}fromString(e){this.reset();let t=new window.DOMParser().parseFromString(e,"text/xml");return this.robot.elem=t.documentElement,this.parseRobotXMLNode(t.documentElement)}parseRobotXMLNode(e){const t=e.nodeName;if(t!=="robot")throw new Error(`Invalid URDF: no root node ${t}`);return this.robot.name=e.getAttribute("name"),this.parseColorsFromRobot(e),this.parseLinks(e),this.parseJoints(e),this.robot}parseColorsFromRobot(e){const t=e.getElementsByTagName("material");for(let i=0;i<t.length;i++){const n=t[i],r=this.colorFromMaterial(n);r&&(this.colors[r.name]=r.rgba)}}colorFromMaterial(e){if(!e.hasAttribute("name")){console.warn("Found material-tag with name without name inside robot tag!");return}const t=e.getAttribute("name"),i=e.getElementsByTagName("color");if(i.length===0)return;const n=i[0];if(!n.hasAttribute("rgba")){console.warn(`Color tag ${t} does not have expected "rgba" attribute!`);return}return{name:t,rgba:m0(n)||[0,0,0,1]}}getLinkByName(e){if(!this.robot.elem)return;const t=this.robot.elem.getElementsByTagName("link");for(let i=0;i<t.length;i++){const n=t[i];if(n.hasAttribute("name")){const r=n.getAttribute("name");if(e==r)return n}}}parseLinks(e){const t=e.getElementsByTagName("link");for(let i=0;i<t.length;i++){const n=t[i],r={visual:[],collision:[],name:"",elem:n};n.hasAttribute("name")?(r.name=n.getAttribute("name"),this.robot.links[r.name]=r):console.error("No name in xml link node: ",n);const o=n.getElementsByTagName("visual");for(let l=0;l<o.length;l++)r.visual.push(this.parseVisual(o[l]));const a=n.getElementsByTagName("collision");for(let l=0;l<a.length;l++)r.collision.push(this.parseVisual(a[l]))}}parseVisual(e){let t,i,n,r="pink";const o={elem:e};for(let a=0;a<e.childNodes.length;a++){const l=e.childNodes[a];switch(l.nodeName){case"geometry":this.parseGeometry(l,o);break;case"origin":t=Ud(l),t&&(o.origin_xyz=t),i=p0(l),i&&(o.origin_rpy=i);break;case"material":n=l.getElementsByTagName("color"),n.length>0&&n[0].hasAttribute("rgba")?o.color_rgba=m0(n[0]):l.hasAttribute("name")&&(r=l.getAttribute("name"),o.color_rgba=this.colors[r])}}return o}parseGeometry(e,t){for(let i=0;i<e.childNodes.length;i++){const n=e.childNodes[i];switch(n.nodeName){case"mesh":let r=[1,1,1],o=n.getAttribute("scale");if(o){const u=o.split(" ");for(const d in u)r[d]=parseFloat(u[d])}let a=n.getAttribute("filename");a=a.replace("package:/",this.prefix);let l="stl";switch(a.substring(a.length-3).toLocaleLowerCase()){case"fbx":l="fbx";break;case"obj":l="obj";break;case"stl":l="stl";break;case"dae":l="dae";break;default:throw new Error("Unknown type "+a)}t.geometry={filename:a,type:l,scale:r},t.type="mesh";return;case"cylinder":const c={};n.hasAttribute("length")&&(c.length=parseFloat(n.getAttribute("length"))),n.hasAttribute("radius")&&(c.radius=parseFloat(n.getAttribute("radius"))),t.geometry=c,t.type="cylinder";return;case"box":const h={size:[1,1,1]};if(n.hasAttribute("size")){const d=n.getAttribute("size").split(" ");for(const f in d)h.size[f]=parseFloat(d[f])}t.geometry=h,t.type="box";return}}}parseJoints(e){const t=this.robot.links,i=[];this.robot.joints=i;const n=e.getElementsByTagName("joint");for(let r=0;r<n.length;r++){const o=n[r],a=o.getElementsByTagName("origin");let l=[0,0,0],c=[0,0,0];if(a.length===1){let y=Ud(a[0]);y&&(c=y);let x=p0(a[0]);x&&(l=x)}let h;const u=o.getElementsByTagName("parent");if(u.length===1){const y=u[0].getAttribute("link");if(!y)throw Error("Name not set for link");const x=this.getLinkByName(y);if(!x)throw Error(`Link with name ${y} not found!`);y&&t[y]?h=t[y]:h={name:y,visual:[],collision:[],elem:x}}let d;const f=o.getElementsByTagName("child");if(f.length===1){const y=f[0].getAttribute("link");if(y&&t[y])d=t[y];else if(y){const x=this.getLinkByName(y);d={name:y,visual:[],collision:[],elem:x}}}let p,v=[0,0,1];const m=o.getElementsByTagName("axis");m.length===1&&(v=Ud(m[0])||v);const g=o.getElementsByTagName("limit");if(g.length===1){p={lower:0,upper:0,effort:0,velocity:0};const y=g[0].getAttribute("lower");y&&(p.lower=parseInt(y));const x=g[0].getAttribute("upper");x&&(p.upper=parseInt(x));const _=g[0].getAttribute("effort");_&&(p.effort=parseInt(_));const E=g[0].getAttribute("velocity");E&&(p.velocity=parseInt(E))}d&&h&&i.push({name:o.getAttribute("name")||void 0,type:o.getAttribute("type")||void 0,origin_rpy:l,origin_xyz:c,rotation:[0,0,0],axis_xyz:v,parent:h,child:d,limit:p,elem:o})}}getURDFXML(){return this.robot.elem?`<?xml version="1.0" ?>
`+this.robot.elem.outerHTML:""}}class g0 extends t_{constructor(e){super(e)}parse(e){function t(O){switch(O.image_type){case d:case v:if(O.colormap_length>256||O.colormap_size!==24||O.colormap_type!==1)throw new Error("THREE.TGALoader: Invalid type colormap data for indexed type.");break;case f:case p:case m:case g:if(O.colormap_type)throw new Error("THREE.TGALoader: Invalid type colormap data for colormap type.");break;case u:throw new Error("THREE.TGALoader: No data.");default:throw new Error("THREE.TGALoader: Invalid type "+O.image_type)}if(O.width<=0||O.height<=0)throw new Error("THREE.TGALoader: Invalid image size.");if(O.pixel_size!==8&&O.pixel_size!==16&&O.pixel_size!==24&&O.pixel_size!==32)throw new Error("THREE.TGALoader: Invalid pixel size "+O.pixel_size)}function i(O,ee,Y,j,$){let U,Z;const K=Y.pixel_size>>3,k=Y.width*Y.height*K;if(ee&&(Z=$.subarray(j,j+=Y.colormap_length*(Y.colormap_size>>3))),O){U=new Uint8Array(k);let H,q,W,ne=0;const ge=new Uint8Array(K);for(;ne<k;)if(H=$[j++],q=(H&127)+1,H&128){for(W=0;W<K;++W)ge[W]=$[j++];for(W=0;W<q;++W)U.set(ge,ne+W*K);ne+=K*q}else{for(q*=K,W=0;W<q;++W)U[ne+W]=$[j++];ne+=q}}else U=$.subarray(j,j+=ee?Y.width*Y.height:k);return{pixel_data:U,palettes:Z}}function n(O,ee,Y,j,$,U,Z,K,k){const H=k;let q,W=0,ne,ge;const ye=b.width;for(ge=ee;ge!==j;ge+=Y)for(ne=$;ne!==Z;ne+=U,W++)q=K[W],O[(ne+ye*ge)*4+3]=255,O[(ne+ye*ge)*4+2]=H[q*3+0],O[(ne+ye*ge)*4+1]=H[q*3+1],O[(ne+ye*ge)*4+0]=H[q*3+2];return O}function r(O,ee,Y,j,$,U,Z,K){let k,H=0,q,W;const ne=b.width;for(W=ee;W!==j;W+=Y)for(q=$;q!==Z;q+=U,H+=2)k=K[H+0]+(K[H+1]<<8),O[(q+ne*W)*4+0]=(k&31744)>>7,O[(q+ne*W)*4+1]=(k&992)>>2,O[(q+ne*W)*4+2]=(k&31)<<3,O[(q+ne*W)*4+3]=k&32768?0:255;return O}function o(O,ee,Y,j,$,U,Z,K){let k=0,H,q;const W=b.width;for(q=ee;q!==j;q+=Y)for(H=$;H!==Z;H+=U,k+=3)O[(H+W*q)*4+3]=255,O[(H+W*q)*4+2]=K[k+0],O[(H+W*q)*4+1]=K[k+1],O[(H+W*q)*4+0]=K[k+2];return O}function a(O,ee,Y,j,$,U,Z,K){let k=0,H,q;const W=b.width;for(q=ee;q!==j;q+=Y)for(H=$;H!==Z;H+=U,k+=4)O[(H+W*q)*4+2]=K[k+0],O[(H+W*q)*4+1]=K[k+1],O[(H+W*q)*4+0]=K[k+2],O[(H+W*q)*4+3]=K[k+3];return O}function l(O,ee,Y,j,$,U,Z,K){let k,H=0,q,W;const ne=b.width;for(W=ee;W!==j;W+=Y)for(q=$;q!==Z;q+=U,H++)k=K[H],O[(q+ne*W)*4+0]=k,O[(q+ne*W)*4+1]=k,O[(q+ne*W)*4+2]=k,O[(q+ne*W)*4+3]=255;return O}function c(O,ee,Y,j,$,U,Z,K){let k=0,H,q;const W=b.width;for(q=ee;q!==j;q+=Y)for(H=$;H!==Z;H+=U,k+=2)O[(H+W*q)*4+0]=K[k+0],O[(H+W*q)*4+1]=K[k+0],O[(H+W*q)*4+2]=K[k+0],O[(H+W*q)*4+3]=K[k+1];return O}function h(O,ee,Y,j,$){let U,Z,K,k,H,q;switch((b.flags&y)>>x){default:case M:U=0,K=1,H=ee,Z=0,k=1,q=Y;break;case _:U=0,K=1,H=ee,Z=Y-1,k=-1,q=-1;break;case S:U=ee-1,K=-1,H=-1,Z=0,k=1,q=Y;break;case E:U=ee-1,K=-1,H=-1,Z=Y-1,k=-1,q=-1;break}if(F)switch(b.pixel_size){case 8:l(O,Z,k,q,U,K,H,j);break;case 16:c(O,Z,k,q,U,K,H,j);break;default:throw new Error("THREE.TGALoader: Format not supported.")}else switch(b.pixel_size){case 8:n(O,Z,k,q,U,K,H,j,$);break;case 16:r(O,Z,k,q,U,K,H,j);break;case 24:o(O,Z,k,q,U,K,H,j);break;case 32:a(O,Z,k,q,U,K,H,j);break;default:throw new Error("THREE.TGALoader: Format not supported.")}return O}const u=0,d=1,f=2,p=3,v=9,m=10,g=11,y=48,x=4,_=0,E=1,M=2,S=3;if(e.length<19)throw new Error("THREE.TGALoader: Not enough data to contain header.");let T=0;const w=new Uint8Array(e),b={id_length:w[T++],colormap_type:w[T++],image_type:w[T++],colormap_index:w[T++]|w[T++]<<8,colormap_length:w[T++]|w[T++]<<8,colormap_size:w[T++],origin:[w[T++]|w[T++]<<8,w[T++]|w[T++]<<8],width:w[T++]|w[T++]<<8,height:w[T++]|w[T++]<<8,pixel_size:w[T++],flags:w[T++]};if(t(b),b.id_length+T>e.length)throw new Error("THREE.TGALoader: No data.");T+=b.id_length;let D=!1,I=!1,F=!1;switch(b.image_type){case v:D=!0,I=!0;break;case d:I=!0;break;case m:D=!0;break;case f:break;case g:D=!0,F=!0;break;case p:F=!0;break}const V=new Uint8Array(b.width*b.height*4),J=i(D,I,b,T,w);return h(V,b.width,b.height,J.pixel_data,J.palettes),{data:V,width:b.width,height:b.height,flipY:!0,generateMipmaps:!0,minFilter:ir}}}class $R extends zn{load(e,t,i,n){const r=this,o=r.path===""?Rh.extractUrlBase(e):r.path,a=new qi(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(l){try{t(r.parse(l,o))}catch(c){n?n(c):console.error(c),r.manager.itemError(e)}},i,n)}parse(e,t){function i(R,C){const z=[],N=R.childNodes;for(let G=0,ve=N.length;G<ve;G++){const we=N[G];we.nodeName===C&&z.push(we)}return z}function n(R){if(R.length===0)return[];const C=R.trim().split(/\s+/),z=new Array(C.length);for(let N=0,G=C.length;N<G;N++)z[N]=C[N];return z}function r(R){if(R.length===0)return[];const C=R.trim().split(/\s+/),z=new Array(C.length);for(let N=0,G=C.length;N<G;N++)z[N]=parseFloat(C[N]);return z}function o(R){if(R.length===0)return[];const C=R.trim().split(/\s+/),z=new Array(C.length);for(let N=0,G=C.length;N<G;N++)z[N]=parseInt(C[N]);return z}function a(R){return R.substring(1)}function l(){return"three_default_"+Pi++}function c(R){return Object.keys(R).length===0}function h(R){return{unit:u(i(R,"unit")[0]),upAxis:d(i(R,"up_axis")[0])}}function u(R){return R!==void 0&&R.hasAttribute("meter")===!0?parseFloat(R.getAttribute("meter")):1}function d(R){return R!==void 0?R.textContent:"Y_UP"}function f(R,C,z,N){const G=i(R,C)[0];if(G!==void 0){const ve=i(G,z);for(let we=0;we<ve.length;we++)N(ve[we])}}function p(R,C){for(const z in R){const N=R[z];N.build=C(R[z])}}function v(R,C){return R.build!==void 0||(R.build=C(R)),R.build}function m(R){const C={sources:{},samplers:{},channels:{}};let z=!1;for(let N=0,G=R.childNodes.length;N<G;N++){const ve=R.childNodes[N];if(ve.nodeType!==1)continue;let we;switch(ve.nodeName){case"source":we=ve.getAttribute("id"),C.sources[we]=fe(ve);break;case"sampler":we=ve.getAttribute("id"),C.samplers[we]=g(ve);break;case"channel":we=ve.getAttribute("target"),C.channels[we]=y(ve);break;case"animation":m(ve),z=!0;break;default:console.log(ve)}}z===!1&&(vt.animations[R.getAttribute("id")||dr.generateUUID()]=C)}function g(R){const C={inputs:{}};for(let z=0,N=R.childNodes.length;z<N;z++){const G=R.childNodes[z];if(G.nodeType===1)switch(G.nodeName){case"input":const ve=a(G.getAttribute("source")),we=G.getAttribute("semantic");C.inputs[we]=ve;break}}return C}function y(R){const C={};let N=R.getAttribute("target").split("/");const G=N.shift();let ve=N.shift();const we=ve.indexOf("(")!==-1,$e=ve.indexOf(".")!==-1;if($e)N=ve.split("."),ve=N.shift(),C.member=N.shift();else if(we){const We=ve.split("(");ve=We.shift();for(let Ke=0;Ke<We.length;Ke++)We[Ke]=parseInt(We[Ke].replace(/\)/,""));C.indices=We}return C.id=G,C.sid=ve,C.arraySyntax=we,C.memberSyntax=$e,C.sampler=a(R.getAttribute("source")),C}function x(R){const C=[],z=R.channels,N=R.samplers,G=R.sources;for(const ve in z)if(z.hasOwnProperty(ve)){const we=z[ve],$e=N[we.sampler],We=$e.inputs.INPUT,Ke=$e.inputs.OUTPUT,lt=G[We],Ue=G[Ke],at=E(we,lt,Ue);b(at,C)}return C}function _(R){return v(vt.animations[R],x)}function E(R,C,z){const N=vt.nodes[R.id],G=At(N.id),ve=N.transforms[R.sid],we=N.matrix.clone().transpose();let $e,We,Ke,lt,Ue,at;const nt={};switch(ve){case"matrix":for(Ke=0,lt=C.array.length;Ke<lt;Ke++)if($e=C.array[Ke],We=Ke*z.stride,nt[$e]===void 0&&(nt[$e]={}),R.arraySyntax===!0){const en=z.array[We],Vt=R.indices[0]+4*R.indices[1];nt[$e][Vt]=en}else for(Ue=0,at=z.stride;Ue<at;Ue++)nt[$e][Ue]=z.array[We+Ue];break;case"translate":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',ve);break;case"rotate":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',ve);break;case"scale":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',ve);break}const ft=M(nt,we);return{name:G.uuid,keyframes:ft}}function M(R,C){const z=[];for(const G in R)z.push({time:parseFloat(G),value:R[G]});z.sort(N);for(let G=0;G<16;G++)D(z,G,C.elements[G]);return z;function N(G,ve){return G.time-ve.time}}const S=new L,T=new L,w=new Ht;function b(R,C){const z=R.keyframes,N=R.name,G=[],ve=[],we=[],$e=[];for(let We=0,Ke=z.length;We<Ke;We++){const lt=z[We],Ue=lt.time,at=lt.value;oe.fromArray(at).transpose(),oe.decompose(S,w,T),G.push(Ue),ve.push(S.x,S.y,S.z),we.push(w.x,w.y,w.z,w.w),$e.push(T.x,T.y,T.z)}return ve.length>0&&C.push(new io(N+".position",G,ve)),we.length>0&&C.push(new Jo(N+".quaternion",G,we)),$e.length>0&&C.push(new io(N+".scale",G,$e)),C}function D(R,C,z){let N,G=!0,ve,we;for(ve=0,we=R.length;ve<we;ve++)N=R[ve],N.value[C]===void 0?N.value[C]=null:G=!1;if(G===!0)for(ve=0,we=R.length;ve<we;ve++)N=R[ve],N.value[C]=z;else I(R,C)}function I(R,C){let z,N;for(let G=0,ve=R.length;G<ve;G++){const we=R[G];if(we.value[C]===null){if(z=F(R,G,C),N=V(R,G,C),z===null){we.value[C]=N.value[C];continue}if(N===null){we.value[C]=z.value[C];continue}J(we,z,N,C)}}}function F(R,C,z){for(;C>=0;){const N=R[C];if(N.value[z]!==null)return N;C--}return null}function V(R,C,z){for(;C<R.length;){const N=R[C];if(N.value[z]!==null)return N;C++}return null}function J(R,C,z,N){if(z.time-C.time===0){R.value[N]=C.value[N];return}R.value[N]=(R.time-C.time)*(z.value[N]-C.value[N])/(z.time-C.time)+C.value[N]}function O(R){const C={name:R.getAttribute("id")||"default",start:parseFloat(R.getAttribute("start")||0),end:parseFloat(R.getAttribute("end")||0),animations:[]};for(let z=0,N=R.childNodes.length;z<N;z++){const G=R.childNodes[z];if(G.nodeType===1)switch(G.nodeName){case"instance_animation":C.animations.push(a(G.getAttribute("url")));break}}vt.clips[R.getAttribute("id")]=C}function ee(R){const C=[],z=R.name,N=R.end-R.start||-1,G=R.animations;for(let ve=0,we=G.length;ve<we;ve++){const $e=_(G[ve]);for(let We=0,Ke=$e.length;We<Ke;We++)C.push($e[We])}return new ro(z,N,C)}function Y(R){return v(vt.clips[R],ee)}function j(R){const C={};for(let z=0,N=R.childNodes.length;z<N;z++){const G=R.childNodes[z];if(G.nodeType===1)switch(G.nodeName){case"skin":C.id=a(G.getAttribute("source")),C.skin=$(G);break;case"morph":C.id=a(G.getAttribute("source")),console.warn("THREE.ColladaLoader: Morph target animation not supported yet.");break}}vt.controllers[R.getAttribute("id")]=C}function $(R){const C={sources:{}};for(let z=0,N=R.childNodes.length;z<N;z++){const G=R.childNodes[z];if(G.nodeType===1)switch(G.nodeName){case"bind_shape_matrix":C.bindShapeMatrix=r(G.textContent);break;case"source":const ve=G.getAttribute("id");C.sources[ve]=fe(G);break;case"joints":C.joints=U(G);break;case"vertex_weights":C.vertexWeights=Z(G);break}}return C}function U(R){const C={inputs:{}};for(let z=0,N=R.childNodes.length;z<N;z++){const G=R.childNodes[z];if(G.nodeType===1)switch(G.nodeName){case"input":const ve=G.getAttribute("semantic"),we=a(G.getAttribute("source"));C.inputs[ve]=we;break}}return C}function Z(R){const C={inputs:{}};for(let z=0,N=R.childNodes.length;z<N;z++){const G=R.childNodes[z];if(G.nodeType===1)switch(G.nodeName){case"input":const ve=G.getAttribute("semantic"),we=a(G.getAttribute("source")),$e=parseInt(G.getAttribute("offset"));C.inputs[ve]={id:we,offset:$e};break;case"vcount":C.vcount=o(G.textContent);break;case"v":C.v=o(G.textContent);break}}return C}function K(R){const C={id:R.id},z=vt.geometries[C.id];return R.skin!==void 0&&(C.skin=k(R.skin),z.sources.skinIndices=C.skin.indices,z.sources.skinWeights=C.skin.weights),C}function k(R){const z={joints:[],indices:{array:[],stride:4},weights:{array:[],stride:4}},N=R.sources,G=R.vertexWeights,ve=G.vcount,we=G.v,$e=G.inputs.JOINT.offset,We=G.inputs.WEIGHT.offset,Ke=R.sources[R.joints.inputs.JOINT],lt=R.sources[R.joints.inputs.INV_BIND_MATRIX],Ue=N[G.inputs.WEIGHT.id].array;let at=0,nt,ft,it;for(nt=0,it=ve.length;nt<it;nt++){const Vt=ve[nt],zt=[];for(ft=0;ft<Vt;ft++){const Bt=we[at+$e],Vi=we[at+We],Gn=Ue[Vi];zt.push({index:Bt,weight:Gn}),at+=2}for(zt.sort(en),ft=0;ft<4;ft++){const Bt=zt[ft];Bt!==void 0?(z.indices.array.push(Bt.index),z.weights.array.push(Bt.weight)):(z.indices.array.push(0),z.weights.array.push(0))}}for(R.bindShapeMatrix?z.bindMatrix=new st().fromArray(R.bindShapeMatrix).transpose():z.bindMatrix=new st().identity(),nt=0,it=Ke.array.length;nt<it;nt++){const Vt=Ke.array[nt],zt=new st().fromArray(lt.array,nt*lt.stride).transpose();z.joints.push({name:Vt,boneInverse:zt})}return z;function en(Vt,zt){return zt.weight-Vt.weight}}function H(R){return v(vt.controllers[R],K)}function q(R){const C={init_from:i(R,"init_from")[0].textContent};vt.images[R.getAttribute("id")]=C}function W(R){return R.build!==void 0?R.build:R.init_from}function ne(R){const C=vt.images[R];return C!==void 0?v(C,W):(console.warn("THREE.ColladaLoader: Couldn't find image with ID:",R),null)}function ge(R){const C={};for(let z=0,N=R.childNodes.length;z<N;z++){const G=R.childNodes[z];if(G.nodeType===1)switch(G.nodeName){case"profile_COMMON":C.profile=ye(G);break}}vt.effects[R.getAttribute("id")]=C}function ye(R){const C={surfaces:{},samplers:{}};for(let z=0,N=R.childNodes.length;z<N;z++){const G=R.childNodes[z];if(G.nodeType===1)switch(G.nodeName){case"newparam":Se(G,C);break;case"technique":C.technique=X(G);break;case"extra":C.extra=le(G);break}}return C}function Se(R,C){const z=R.getAttribute("sid");for(let N=0,G=R.childNodes.length;N<G;N++){const ve=R.childNodes[N];if(ve.nodeType===1)switch(ve.nodeName){case"surface":C.surfaces[z]=pe(ve);break;case"sampler2D":C.samplers[z]=Ie(ve);break}}}function pe(R){const C={};for(let z=0,N=R.childNodes.length;z<N;z++){const G=R.childNodes[z];if(G.nodeType===1)switch(G.nodeName){case"init_from":C.init_from=G.textContent;break}}return C}function Ie(R){const C={};for(let z=0,N=R.childNodes.length;z<N;z++){const G=R.childNodes[z];if(G.nodeType===1)switch(G.nodeName){case"source":C.source=G.textContent;break}}return C}function X(R){const C={};for(let z=0,N=R.childNodes.length;z<N;z++){const G=R.childNodes[z];if(G.nodeType===1)switch(G.nodeName){case"constant":case"lambert":case"blinn":case"phong":C.type=G.nodeName,C.parameters=Oe(G);break;case"extra":C.extra=le(G);break}}return C}function Oe(R){const C={};for(let z=0,N=R.childNodes.length;z<N;z++){const G=R.childNodes[z];if(G.nodeType===1)switch(G.nodeName){case"emission":case"diffuse":case"specular":case"bump":case"ambient":case"shininess":case"transparency":C[G.nodeName]=he(G);break;case"transparent":C[G.nodeName]={opaque:G.hasAttribute("opaque")?G.getAttribute("opaque"):"A_ONE",data:he(G)};break}}return C}function he(R){const C={};for(let z=0,N=R.childNodes.length;z<N;z++){const G=R.childNodes[z];if(G.nodeType===1)switch(G.nodeName){case"color":C[G.nodeName]=r(G.textContent);break;case"float":C[G.nodeName]=parseFloat(G.textContent);break;case"texture":C[G.nodeName]={id:G.getAttribute("texture"),extra:ue(G)};break}}return C}function ue(R){const C={technique:{}};for(let z=0,N=R.childNodes.length;z<N;z++){const G=R.childNodes[z];if(G.nodeType===1)switch(G.nodeName){case"extra":ie(G,C);break}}return C}function ie(R,C){for(let z=0,N=R.childNodes.length;z<N;z++){const G=R.childNodes[z];if(G.nodeType===1)switch(G.nodeName){case"technique":Me(G,C);break}}}function Me(R,C){for(let z=0,N=R.childNodes.length;z<N;z++){const G=R.childNodes[z];if(G.nodeType===1)switch(G.nodeName){case"repeatU":case"repeatV":case"offsetU":case"offsetV":C.technique[G.nodeName]=parseFloat(G.textContent);break;case"wrapU":case"wrapV":G.textContent.toUpperCase()==="TRUE"?C.technique[G.nodeName]=1:G.textContent.toUpperCase()==="FALSE"?C.technique[G.nodeName]=0:C.technique[G.nodeName]=parseInt(G.textContent);break;case"bump":C[G.nodeName]=A(G);break}}}function le(R){const C={};for(let z=0,N=R.childNodes.length;z<N;z++){const G=R.childNodes[z];if(G.nodeType===1)switch(G.nodeName){case"technique":C.technique=P(G);break}}return C}function P(R){const C={};for(let z=0,N=R.childNodes.length;z<N;z++){const G=R.childNodes[z];if(G.nodeType===1)switch(G.nodeName){case"double_sided":C[G.nodeName]=parseInt(G.textContent);break;case"bump":C[G.nodeName]=A(G);break}}return C}function A(R){const C={};for(let z=0,N=R.childNodes.length;z<N;z++){const G=R.childNodes[z];if(G.nodeType===1)switch(G.nodeName){case"texture":C[G.nodeName]={id:G.getAttribute("texture"),texcoord:G.getAttribute("texcoord"),extra:ue(G)};break}}return C}function Q(R){return R}function ae(R){return v(vt.effects[R],Q)}function se(R){const C={name:R.getAttribute("name")};for(let z=0,N=R.childNodes.length;z<N;z++){const G=R.childNodes[z];if(G.nodeType===1)switch(G.nodeName){case"instance_effect":C.url=a(G.getAttribute("url"));break}}vt.materials[R.getAttribute("id")]=C}function de(R){let C,z=R.slice((R.lastIndexOf(".")-1>>>0)+2);switch(z=z.toLowerCase(),z){case"tga":C=mn;break;default:C=En}return C}function Ee(R){const C=ae(R.url),z=C.profile.technique;let N;switch(z.type){case"phong":case"blinn":N=new el;break;case"lambert":N=new qf;break;default:N=new Bn;break}N.name=R.name||"";function G(We,Ke=null){const lt=C.profile.samplers[We.id];let Ue=null;if(lt!==void 0){const at=C.profile.surfaces[lt.source];Ue=ne(at.init_from)}else console.warn("THREE.ColladaLoader: Undefined sampler. Access image directly (see #12530)."),Ue=ne(We.id);if(Ue!==null){const at=de(Ue);if(at!==void 0){const nt=at.load(Ue),ft=We.extra;if(ft!==void 0&&ft.technique!==void 0&&c(ft.technique)===!1){const it=ft.technique;nt.wrapS=it.wrapU?nr:Mi,nt.wrapT=it.wrapV?nr:Mi,nt.offset.set(it.offsetU||0,it.offsetV||0),nt.repeat.set(it.repeatU||1,it.repeatV||1)}else nt.wrapS=nr,nt.wrapT=nr;return Ke!==null&&(nt.colorSpace=Ke),nt}else return console.warn("THREE.ColladaLoader: Loader for texture %s not found.",Ue),null}else return console.warn("THREE.ColladaLoader: Couldn't create texture with ID:",We.id),null}const ve=z.parameters;for(const We in ve){const Ke=ve[We];switch(We){case"diffuse":Ke.color&&N.color.fromArray(Ke.color),Ke.texture&&(N.map=G(Ke.texture,sn));break;case"specular":Ke.color&&N.specular&&N.specular.fromArray(Ke.color),Ke.texture&&(N.specularMap=G(Ke.texture));break;case"bump":Ke.texture&&(N.normalMap=G(Ke.texture));break;case"ambient":Ke.texture&&(N.lightMap=G(Ke.texture,sn));break;case"shininess":Ke.float&&N.shininess&&(N.shininess=Ke.float);break;case"emission":Ke.color&&N.emissive&&N.emissive.fromArray(Ke.color),Ke.texture&&(N.emissiveMap=G(Ke.texture,sn));break}}Nt.toWorkingColorSpace(N.color,sn),N.specular&&Nt.toWorkingColorSpace(N.specular,sn),N.emissive&&Nt.toWorkingColorSpace(N.emissive,sn);let we=ve.transparent,$e=ve.transparency;if($e===void 0&&we&&($e={float:1}),we===void 0&&$e&&(we={opaque:"A_ONE",data:{color:[1,1,1,1]}}),we&&$e)if(we.data.texture)N.transparent=!0;else{const We=we.data.color;switch(we.opaque){case"A_ONE":N.opacity=We[3]*$e.float;break;case"RGB_ZERO":N.opacity=1-We[0]*$e.float;break;case"A_ZERO":N.opacity=1-We[3]*$e.float;break;case"RGB_ONE":N.opacity=We[0]*$e.float;break;default:console.warn('THREE.ColladaLoader: Invalid opaque type "%s" of transparent tag.',we.opaque)}N.opacity<1&&(N.transparent=!0)}if(z.extra!==void 0&&z.extra.technique!==void 0){const We=z.extra.technique;for(const Ke in We){const lt=We[Ke];switch(Ke){case"double_sided":N.side=lt===1?xi:vr;break;case"bump":N.normalMap=G(lt.texture),N.normalScale=new xe(1,1);break}}}return N}function be(R){return v(vt.materials[R],Ee)}function Ae(R){const C={name:R.getAttribute("name")};for(let z=0,N=R.childNodes.length;z<N;z++){const G=R.childNodes[z];if(G.nodeType===1)switch(G.nodeName){case"optics":C.optics=Ze(G);break}}vt.cameras[R.getAttribute("id")]=C}function Ze(R){for(let C=0;C<R.childNodes.length;C++){const z=R.childNodes[C];switch(z.nodeName){case"technique_common":return Re(z)}}return{}}function Re(R){const C={};for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];switch(N.nodeName){case"perspective":case"orthographic":C.technique=N.nodeName,C.parameters=Be(N);break}}return C}function Be(R){const C={};for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];switch(N.nodeName){case"xfov":case"yfov":case"xmag":case"ymag":case"znear":case"zfar":case"aspect_ratio":C[N.nodeName]=parseFloat(N.textContent);break}}return C}function Ge(R){let C;switch(R.optics.technique){case"perspective":C=new bn(R.optics.parameters.yfov,R.optics.parameters.aspect_ratio,R.optics.parameters.znear,R.optics.parameters.zfar);break;case"orthographic":let z=R.optics.parameters.ymag,N=R.optics.parameters.xmag;const G=R.optics.parameters.aspect_ratio;N=N===void 0?z*G:N,z=z===void 0?N/G:z,N*=.5,z*=.5,C=new us(-N,N,z,-z,R.optics.parameters.znear,R.optics.parameters.zfar);break;default:C=new bn;break}return C.name=R.name||"",C}function Ve(R){const C=vt.cameras[R];return C!==void 0?v(C,Ge):(console.warn("THREE.ColladaLoader: Couldn't find camera with ID:",R),null)}function Te(R){let C={};for(let z=0,N=R.childNodes.length;z<N;z++){const G=R.childNodes[z];if(G.nodeType===1)switch(G.nodeName){case"technique_common":C=ut(G);break}}vt.lights[R.getAttribute("id")]=C}function ut(R){const C={};for(let z=0,N=R.childNodes.length;z<N;z++){const G=R.childNodes[z];if(G.nodeType===1)switch(G.nodeName){case"directional":case"point":case"spot":case"ambient":C.technique=G.nodeName,C.parameters=tt(G)}}return C}function tt(R){const C={};for(let z=0,N=R.childNodes.length;z<N;z++){const G=R.childNodes[z];if(G.nodeType===1)switch(G.nodeName){case"color":const ve=r(G.textContent);C.color=new ze().fromArray(ve),Nt.toWorkingColorSpace(C.color,sn);break;case"falloff_angle":C.falloffAngle=parseFloat(G.textContent);break;case"quadratic_attenuation":const we=parseFloat(G.textContent);C.distance=we?Math.sqrt(1/we):0;break}}return C}function wt(R){let C;switch(R.technique){case"directional":C=new np;break;case"point":C=new tp;break;case"spot":C=new ep;break;case"ambient":C=new ip;break}return R.parameters.color&&C.color.copy(R.parameters.color),R.parameters.distance&&(C.distance=R.parameters.distance),C}function te(R){const C=vt.lights[R];return C!==void 0?v(C,wt):(console.warn("THREE.ColladaLoader: Couldn't find light with ID:",R),null)}function Ce(R){const C={name:R.getAttribute("name"),sources:{},vertices:{},primitives:[]},z=i(R,"mesh")[0];if(z!==void 0){for(let N=0;N<z.childNodes.length;N++){const G=z.childNodes[N];if(G.nodeType!==1)continue;const ve=G.getAttribute("id");switch(G.nodeName){case"source":C.sources[ve]=fe(G);break;case"vertices":C.vertices=Pe(G);break;case"polygons":console.warn("THREE.ColladaLoader: Unsupported primitive type: ",G.nodeName);break;case"lines":case"linestrips":case"polylist":case"triangles":C.primitives.push(Ne(G));break;default:console.log(G)}}vt.geometries[R.getAttribute("id")]=C}}function fe(R){const C={array:[],stride:3};for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];if(N.nodeType===1)switch(N.nodeName){case"float_array":C.array=r(N.textContent);break;case"Name_array":C.array=n(N.textContent);break;case"technique_common":const G=i(N,"accessor")[0];G!==void 0&&(C.stride=parseInt(G.getAttribute("stride")));break}}return C}function Pe(R){const C={};for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];N.nodeType===1&&(C[N.getAttribute("semantic")]=a(N.getAttribute("source")))}return C}function Ne(R){const C={type:R.nodeName,material:R.getAttribute("material"),count:parseInt(R.getAttribute("count")),inputs:{},stride:0,hasUV:!1};for(let z=0,N=R.childNodes.length;z<N;z++){const G=R.childNodes[z];if(G.nodeType===1)switch(G.nodeName){case"input":const ve=a(G.getAttribute("source")),we=G.getAttribute("semantic"),$e=parseInt(G.getAttribute("offset")),We=parseInt(G.getAttribute("set")),Ke=We>0?we+We:we;C.inputs[Ke]={id:ve,offset:$e},C.stride=Math.max(C.stride,$e+1),we==="TEXCOORD"&&(C.hasUV=!0);break;case"vcount":C.vcount=o(G.textContent);break;case"p":C.p=o(G.textContent);break}}return C}function De(R){const C={};for(let z=0;z<R.length;z++){const N=R[z];C[N.type]===void 0&&(C[N.type]=[]),C[N.type].push(N)}return C}function ot(R){let C=0;for(let z=0,N=R.length;z<N;z++)R[z].hasUV===!0&&C++;C>0&&C<R.length&&(R.uvsNeedsFix=!0)}function St(R){const C={},z=R.sources,N=R.vertices,G=R.primitives;if(G.length===0)return{};const ve=De(G);for(const we in ve){const $e=ve[we];ot($e),C[we]=ct($e,z,N)}return C}function ct(R,C,z){const N={},G={array:[],stride:0},ve={array:[],stride:0},we={array:[],stride:0},$e={array:[],stride:0},We={array:[],stride:0},Ke={array:[],stride:4},lt={array:[],stride:4},Ue=new yt,at=[];let nt=0;for(let ft=0;ft<R.length;ft++){const it=R[ft],en=it.inputs;let Vt=0;switch(it.type){case"lines":case"linestrips":Vt=it.count*2;break;case"triangles":Vt=it.count*3;break;case"polylist":for(let zt=0;zt<it.count;zt++){const Bt=it.vcount[zt];switch(Bt){case 3:Vt+=3;break;case 4:Vt+=6;break;default:Vt+=(Bt-2)*3;break}}break;default:console.warn("THREE.ColladaLoader: Unknown primitive type:",it.type)}Ue.addGroup(nt,Vt,ft),nt+=Vt,it.material&&at.push(it.material);for(const zt in en){const Bt=en[zt];switch(zt){case"VERTEX":for(const Vi in z){const Gn=z[Vi];switch(Vi){case"POSITION":const Hi=G.array.length;if(rt(it,C[Gn],Bt.offset,G.array),G.stride=C[Gn].stride,C.skinWeights&&C.skinIndices&&(rt(it,C.skinIndices,Bt.offset,Ke.array),rt(it,C.skinWeights,Bt.offset,lt.array)),it.hasUV===!1&&R.uvsNeedsFix===!0){const ms=(G.array.length-Hi)/G.stride;for(let Ki=0;Ki<ms;Ki++)we.array.push(0,0)}break;case"NORMAL":rt(it,C[Gn],Bt.offset,ve.array),ve.stride=C[Gn].stride;break;case"COLOR":rt(it,C[Gn],Bt.offset,We.array),We.stride=C[Gn].stride;break;case"TEXCOORD":rt(it,C[Gn],Bt.offset,we.array),we.stride=C[Gn].stride;break;case"TEXCOORD1":rt(it,C[Gn],Bt.offset,$e.array),we.stride=C[Gn].stride;break;default:console.warn('THREE.ColladaLoader: Semantic "%s" not handled in geometry build process.',Vi)}}break;case"NORMAL":rt(it,C[Bt.id],Bt.offset,ve.array),ve.stride=C[Bt.id].stride;break;case"COLOR":rt(it,C[Bt.id],Bt.offset,We.array,!0),We.stride=C[Bt.id].stride;break;case"TEXCOORD":rt(it,C[Bt.id],Bt.offset,we.array),we.stride=C[Bt.id].stride;break;case"TEXCOORD1":rt(it,C[Bt.id],Bt.offset,$e.array),$e.stride=C[Bt.id].stride;break}}}return G.array.length>0&&Ue.setAttribute("position",new qe(G.array,G.stride)),ve.array.length>0&&Ue.setAttribute("normal",new qe(ve.array,ve.stride)),We.array.length>0&&Ue.setAttribute("color",new qe(We.array,We.stride)),we.array.length>0&&Ue.setAttribute("uv",new qe(we.array,we.stride)),$e.array.length>0&&Ue.setAttribute("uv1",new qe($e.array,$e.stride)),Ke.array.length>0&&Ue.setAttribute("skinIndex",new qe(Ke.array,Ke.stride)),lt.array.length>0&&Ue.setAttribute("skinWeight",new qe(lt.array,lt.stride)),N.data=Ue,N.type=R[0].type,N.materialKeys=at,N}function rt(R,C,z,N,G=!1){const ve=R.p,we=R.stride,$e=R.vcount;function We(Ue){let at=ve[Ue+z]*lt;const nt=at+lt;for(;at<nt;at++)N.push(Ke[at]);if(G){const ft=N.length-lt-1;hn.setRGB(N[ft+0],N[ft+1],N[ft+2],sn),N[ft+0]=hn.r,N[ft+1]=hn.g,N[ft+2]=hn.b}}const Ke=C.array,lt=C.stride;if(R.vcount!==void 0){let Ue=0;for(let at=0,nt=$e.length;at<nt;at++){const ft=$e[at];if(ft===4){const it=Ue+we*0,en=Ue+we*1,Vt=Ue+we*2,zt=Ue+we*3;We(it),We(en),We(zt),We(en),We(Vt),We(zt)}else if(ft===3){const it=Ue+we*0,en=Ue+we*1,Vt=Ue+we*2;We(it),We(en),We(Vt)}else if(ft>4)for(let it=1,en=ft-2;it<=en;it++){const Vt=Ue+we*0,zt=Ue+we*it,Bt=Ue+we*(it+1);We(Vt),We(zt),We(Bt)}Ue+=we*ft}}else for(let Ue=0,at=ve.length;Ue<at;Ue+=we)We(Ue)}function Xt(R){return v(vt.geometries[R],St)}function Kt(R){const C={name:R.getAttribute("name")||"",joints:{},links:[]};for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];if(N.nodeType===1)switch(N.nodeName){case"technique_common":Un(N,C);break}}vt.kinematicsModels[R.getAttribute("id")]=C}function on(R){return R.build!==void 0?R.build:R}function qn(R){return v(vt.kinematicsModels[R],on)}function Un(R,C){for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];if(N.nodeType===1)switch(N.nodeName){case"joint":C.joints[N.getAttribute("sid")]=ri(N);break;case"link":C.links.push(Ri(N));break}}}function ri(R){let C;for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];if(N.nodeType===1)switch(N.nodeName){case"prismatic":case"revolute":C=Ci(N);break}}return C}function Ci(R){const C={sid:R.getAttribute("sid"),name:R.getAttribute("name")||"",axis:new L,limits:{min:0,max:0},type:R.nodeName,static:!1,zeroPosition:0,middlePosition:0};for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];if(N.nodeType===1)switch(N.nodeName){case"axis":const G=r(N.textContent);C.axis.fromArray(G);break;case"limits":const ve=N.getElementsByTagName("max")[0],we=N.getElementsByTagName("min")[0];C.limits.max=parseFloat(ve.textContent),C.limits.min=parseFloat(we.textContent);break}}return C.limits.min>=C.limits.max&&(C.static=!0),C.middlePosition=(C.limits.min+C.limits.max)/2,C}function Ri(R){const C={sid:R.getAttribute("sid"),name:R.getAttribute("name")||"",attachments:[],transforms:[]};for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];if(N.nodeType===1)switch(N.nodeName){case"attachment_full":C.attachments.push(Zn(N));break;case"matrix":case"translate":case"rotate":C.transforms.push(_n(N));break}}return C}function Zn(R){const C={joint:R.getAttribute("joint").split("/").pop(),transforms:[],links:[]};for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];if(N.nodeType===1)switch(N.nodeName){case"link":C.links.push(Ri(N));break;case"matrix":case"translate":case"rotate":C.transforms.push(_n(N));break}}return C}function _n(R){const C={type:R.nodeName},z=r(R.textContent);switch(C.type){case"matrix":C.obj=new st,C.obj.fromArray(z).transpose();break;case"translate":C.obj=new L,C.obj.fromArray(z);break;case"rotate":C.obj=new L,C.obj.fromArray(z),C.angle=dr.degToRad(z[3]);break}return C}function ui(R){const C={name:R.getAttribute("name")||"",rigidBodies:{}};for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];if(N.nodeType===1)switch(N.nodeName){case"rigid_body":C.rigidBodies[N.getAttribute("name")]={},ds(N,C.rigidBodies[N.getAttribute("name")]);break}}vt.physicsModels[R.getAttribute("id")]=C}function ds(R,C){for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];if(N.nodeType===1)switch(N.nodeName){case"technique_common":Vr(N,C);break}}}function Vr(R,C){for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];if(N.nodeType===1)switch(N.nodeName){case"inertia":C.inertia=r(N.textContent);break;case"mass":C.mass=r(N.textContent)[0];break}}}function $o(R){const C={bindJointAxis:[]};for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];if(N.nodeType===1)switch(N.nodeName){case"bind_joint_axis":C.bindJointAxis.push(uo(N));break}}vt.kinematicsScenes[a(R.getAttribute("url"))]=C}function uo(R){const C={target:R.getAttribute("target").split("/").pop()};for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];if(N.nodeType===1)switch(N.nodeName){case"axis":const G=N.getElementsByTagName("param")[0];C.axis=G.textContent;const ve=C.axis.split("inst_").pop().split("axis")[0];C.jointIndex=ve.substring(0,ve.length-1);break}}return C}function Hr(R){return R.build!==void 0?R.build:R}function fs(R){return v(vt.kinematicsScenes[R],Hr)}function ea(){const R=Object.keys(vt.kinematicsModels)[0],C=Object.keys(vt.kinematicsScenes)[0],z=Object.keys(vt.visualScenes)[0];if(R===void 0||C===void 0)return;const N=qn(R),G=fs(C),ve=Ft(z),we=G.bindJointAxis,$e={};for(let lt=0,Ue=we.length;lt<Ue;lt++){const at=we[lt],nt=Yt.querySelector('[sid="'+at.target+'"]');if(nt){const ft=nt.parentElement;We(at.jointIndex,ft)}}function We(lt,Ue){const at=Ue.getAttribute("name"),nt=N.joints[lt];ve.traverse(function(ft){ft.name===at&&($e[lt]={object:ft,transforms:fo(Ue),joint:nt,position:nt.zeroPosition})})}const Ke=new st;Ji={joints:N&&N.joints,getJointValue:function(lt){const Ue=$e[lt];if(Ue)return Ue.position;console.warn("THREE.ColladaLoader: Joint "+lt+" doesn't exist.")},setJointValue:function(lt,Ue){const at=$e[lt];if(at){const nt=at.joint;if(Ue>nt.limits.max||Ue<nt.limits.min)console.warn("THREE.ColladaLoader: Joint "+lt+" value "+Ue+" outside of limits (min: "+nt.limits.min+", max: "+nt.limits.max+").");else if(nt.static)console.warn("THREE.ColladaLoader: Joint "+lt+" is static.");else{const ft=at.object,it=nt.axis,en=at.transforms;oe.identity();for(let Vt=0;Vt<en.length;Vt++){const zt=en[Vt];if(zt.sid&&zt.sid.indexOf(lt)!==-1)switch(nt.type){case"revolute":oe.multiply(Ke.makeRotationAxis(it,dr.degToRad(Ue)));break;case"prismatic":oe.multiply(Ke.makeTranslation(it.x*Ue,it.y*Ue,it.z*Ue));break;default:console.warn("THREE.ColladaLoader: Unknown joint type: "+nt.type);break}else switch(zt.type){case"matrix":oe.multiply(zt.obj);break;case"translate":oe.multiply(Ke.makeTranslation(zt.obj.x,zt.obj.y,zt.obj.z));break;case"scale":oe.scale(zt.obj);break;case"rotate":oe.multiply(Ke.makeRotationAxis(zt.obj,zt.angle));break}}ft.matrix.copy(oe),ft.matrix.decompose(ft.position,ft.quaternion,ft.scale),$e[lt].position=Ue}}else console.log("THREE.ColladaLoader: "+lt+" does not exist.")}}}function fo(R){const C=[],z=Yt.querySelector('[id="'+R.id+'"]');for(let N=0;N<z.childNodes.length;N++){const G=z.childNodes[N];if(G.nodeType!==1)continue;let ve,we;switch(G.nodeName){case"matrix":ve=r(G.textContent);const $e=new st().fromArray(ve).transpose();C.push({sid:G.getAttribute("sid"),type:G.nodeName,obj:$e});break;case"translate":case"scale":ve=r(G.textContent),we=new L().fromArray(ve),C.push({sid:G.getAttribute("sid"),type:G.nodeName,obj:we});break;case"rotate":ve=r(G.textContent),we=new L().fromArray(ve);const We=dr.degToRad(ve[3]);C.push({sid:G.getAttribute("sid"),type:G.nodeName,obj:we,angle:We});break}}return C}function B(R){const C=R.getElementsByTagName("node");for(let z=0;z<C.length;z++){const N=C[z];N.hasAttribute("id")===!1&&N.setAttribute("id",l())}}const oe=new st,me=new L;function re(R){const C={name:R.getAttribute("name")||"",type:R.getAttribute("type"),id:R.getAttribute("id"),sid:R.getAttribute("sid"),matrix:new st,nodes:[],instanceCameras:[],instanceControllers:[],instanceLights:[],instanceGeometries:[],instanceNodes:[],transforms:{}};for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];if(N.nodeType!==1)continue;let G;switch(N.nodeName){case"node":C.nodes.push(N.getAttribute("id")),re(N);break;case"instance_camera":C.instanceCameras.push(a(N.getAttribute("url")));break;case"instance_controller":C.instanceControllers.push(ce(N));break;case"instance_light":C.instanceLights.push(a(N.getAttribute("url")));break;case"instance_geometry":C.instanceGeometries.push(ce(N));break;case"instance_node":C.instanceNodes.push(a(N.getAttribute("url")));break;case"matrix":G=r(N.textContent),C.matrix.multiply(oe.fromArray(G).transpose()),C.transforms[N.getAttribute("sid")]=N.nodeName;break;case"translate":G=r(N.textContent),me.fromArray(G),C.matrix.multiply(oe.makeTranslation(me.x,me.y,me.z)),C.transforms[N.getAttribute("sid")]=N.nodeName;break;case"rotate":G=r(N.textContent);const ve=dr.degToRad(G[3]);C.matrix.multiply(oe.makeRotationAxis(me.fromArray(G),ve)),C.transforms[N.getAttribute("sid")]=N.nodeName;break;case"scale":G=r(N.textContent),C.matrix.scale(me.fromArray(G)),C.transforms[N.getAttribute("sid")]=N.nodeName;break;case"extra":break;default:console.log(N)}}return ht(C.id)?console.warn("THREE.ColladaLoader: There is already a node with ID %s. Exclude current node from further processing.",C.id):vt.nodes[C.id]=C,C}function ce(R){const C={id:a(R.getAttribute("url")),materials:{},skeletons:[]};for(let z=0;z<R.childNodes.length;z++){const N=R.childNodes[z];switch(N.nodeName){case"bind_material":const G=N.getElementsByTagName("instance_material");for(let ve=0;ve<G.length;ve++){const we=G[ve],$e=we.getAttribute("symbol"),We=we.getAttribute("target");C.materials[$e]=a(We)}break;case"skeleton":C.skeletons.push(a(N.textContent));break}}return C}function Fe(R,C){const z=[],N=[];let G,ve,we;for(G=0;G<R.length;G++){const Ke=R[G];let lt;if(ht(Ke))lt=At(Ke),Ye(lt,C,z);else if(Qt(Ke)){const at=vt.visualScenes[Ke].children;for(let nt=0;nt<at.length;nt++){const ft=at[nt];if(ft.type==="JOINT"){const it=At(ft.id);Ye(it,C,z)}}}else console.error("THREE.ColladaLoader: Unable to find root bone of skeleton with ID:",Ke)}for(G=0;G<C.length;G++)for(ve=0;ve<z.length;ve++)if(we=z[ve],we.bone.name===C[G].name){N[G]=we,we.processed=!0;break}for(G=0;G<z.length;G++)we=z[G],we.processed===!1&&(N.push(we),we.processed=!0);const $e=[],We=[];for(G=0;G<N.length;G++)we=N[G],$e.push(we.bone),We.push(we.boneInverse);return new _l($e,We)}function Ye(R,C,z){R.traverse(function(N){if(N.isBone===!0){let G;for(let ve=0;ve<C.length;ve++){const we=C[ve];if(we.name===N.name){G=we.boneInverse;break}}G===void 0&&(G=new st),z.push({bone:N,boneInverse:G,processed:!1})}})}function Qe(R){const C=[],z=R.matrix,N=R.nodes,G=R.type,ve=R.instanceCameras,we=R.instanceControllers,$e=R.instanceLights,We=R.instanceGeometries,Ke=R.instanceNodes;for(let Ue=0,at=N.length;Ue<at;Ue++)C.push(At(N[Ue]));for(let Ue=0,at=ve.length;Ue<at;Ue++){const nt=Ve(ve[Ue]);nt!==null&&C.push(nt.clone())}for(let Ue=0,at=we.length;Ue<at;Ue++){const nt=we[Ue],ft=H(nt.id),it=Xt(ft.id),en=mt(it,nt.materials),Vt=nt.skeletons,zt=ft.skin.joints,Bt=Fe(Vt,zt);for(let Vi=0,Gn=en.length;Vi<Gn;Vi++){const Hi=en[Vi];Hi.isSkinnedMesh&&(Hi.bind(Bt,ft.skin.bindMatrix),Hi.normalizeSkinWeights()),C.push(Hi)}}for(let Ue=0,at=$e.length;Ue<at;Ue++){const nt=te($e[Ue]);nt!==null&&C.push(nt.clone())}for(let Ue=0,at=We.length;Ue<at;Ue++){const nt=We[Ue],ft=Xt(nt.id),it=mt(ft,nt.materials);for(let en=0,Vt=it.length;en<Vt;en++)C.push(it[en])}for(let Ue=0,at=Ke.length;Ue<at;Ue++)C.push(At(Ke[Ue]).clone());let lt;if(N.length===0&&C.length===1)lt=C[0];else{lt=G==="JOINT"?new Zh:new Oi;for(let Ue=0;Ue<C.length;Ue++)lt.add(C[Ue])}return lt.name=G==="JOINT"?R.sid:R.name,lt.matrix.copy(z),lt.matrix.decompose(lt.position,lt.quaternion,lt.scale),lt}const et=new Bn({name:zn.DEFAULT_MATERIAL_NAME,color:16711935});function xt(R,C){const z=[];for(let N=0,G=R.length;N<G;N++){const ve=C[R[N]];ve===void 0?(console.warn("THREE.ColladaLoader: Material with key %s not found. Apply fallback material.",R[N]),z.push(et)):z.push(be(ve))}return z}function mt(R,C){const z=[];for(const N in R){const G=R[N],ve=xt(G.materialKeys,C);if(ve.length===0&&(N==="lines"||N==="linestrips"?ve.push(new wn):ve.push(new el)),N==="lines"||N==="linestrips")for(let Ke=0,lt=ve.length;Ke<lt;Ke++){const Ue=ve[Ke];if(Ue.isMeshPhongMaterial===!0||Ue.isMeshLambertMaterial===!0){const at=new wn;at.color.copy(Ue.color),at.opacity=Ue.opacity,at.transparent=Ue.transparent,ve[Ke]=at}}const we=G.data.attributes.skinIndex!==void 0,$e=ve.length===1?ve[0]:ve;let We;switch(N){case"lines":We=new zi(G.data,$e);break;case"linestrips":We=new Yn(G.data,$e);break;case"triangles":case"polylist":we?We=new kf(G.data,$e):We=new ke(G.data,$e);break}z.push(We)}return z}function ht(R){return vt.nodes[R]!==void 0}function At(R){return v(vt.nodes[R],Qe)}function kt(R){const C={name:R.getAttribute("name"),children:[]};B(R);const z=i(R,"node");for(let N=0;N<z.length;N++)C.children.push(re(z[N]));vt.visualScenes[R.getAttribute("id")]=C}function rn(R){const C=new Oi;C.name=R.name;const z=R.children;for(let N=0;N<z.length;N++){const G=z[N];C.add(At(G.id))}return C}function Qt(R){return vt.visualScenes[R]!==void 0}function Ft(R){return v(vt.visualScenes[R],rn)}function dt(R){const C=i(R,"instance_visual_scene")[0];return Ft(a(C.getAttribute("url")))}function cn(){const R=vt.clips;if(c(R)===!0){if(c(vt.animations)===!1){const C=[];for(const z in vt.animations){const N=_(z);for(let G=0,ve=N.length;G<ve;G++)C.push(N[G])}an.push(new ro("default",-1,C))}}else for(const C in R)an.push(Y(C))}function Ut(R){let C="";const z=[R];for(;z.length;){const N=z.shift();N.nodeType===Node.TEXT_NODE?C+=N.textContent:(C+=`
`,z.push(...N.childNodes))}return C.trim()}if(e.length===0)return{scene:new gl};const Nn=new DOMParser().parseFromString(e,"application/xml"),Yt=i(Nn,"COLLADA")[0],yn=Nn.getElementsByTagName("parsererror")[0];if(yn!==void 0){const R=i(yn,"div")[0];let C;return R?C=R.textContent:C=Ut(yn),console.error(`THREE.ColladaLoader: Failed to parse collada file.
`,C),null}const On=Yt.getAttribute("version");console.debug("THREE.ColladaLoader: File version",On);const qt=h(i(Yt,"asset")[0]),En=new n_(this.manager);En.setPath(this.resourcePath||t).setCrossOrigin(this.crossOrigin);let mn;g0&&(mn=new g0(this.manager),mn.setPath(this.resourcePath||t));const hn=new ze,an=[];let Ji={},Pi=0;const vt={animations:{},clips:{},controllers:{},images:{},effects:{},materials:{},cameras:{},lights:{},geometries:{},nodes:{},visualScenes:{},kinematicsModels:{},physicsModels:{},kinematicsScenes:{}};f(Yt,"library_animations","animation",m),f(Yt,"library_animation_clips","animation_clip",O),f(Yt,"library_controllers","controller",j),f(Yt,"library_images","image",q),f(Yt,"library_effects","effect",ge),f(Yt,"library_materials","material",se),f(Yt,"library_cameras","camera",Ae),f(Yt,"library_lights","light",Te),f(Yt,"library_geometries","geometry",Ce),f(Yt,"library_nodes","node",re),f(Yt,"library_visual_scenes","visual_scene",kt),f(Yt,"library_kinematics_models","kinematics_model",Kt),f(Yt,"library_physics_models","physics_model",ui),f(Yt,"scene","instance_kinematics_scene",$o),p(vt.animations,x),p(vt.clips,ee),p(vt.controllers,K),p(vt.images,W),p(vt.effects,Q),p(vt.materials,Ee),p(vt.cameras,Ge),p(vt.lights,wt),p(vt.geometries,St),p(vt.visualScenes,rn),cn(),ea();const ps=dt(i(Yt,"scene")[0]);return ps.animations=an,qt.upAxis==="Z_UP"&&(console.warn("THREE.ColladaLoader: You are loading an asset with a Z-UP coordinate system. The loader just rotates the asset to transform it into Y-UP. The vertex data are not converted, see #24289."),ps.rotation.set(-Math.PI/2,0,0)),ps.scale.multiplyScalar(qt.unit),{get animations(){return console.warn("THREE.ColladaLoader: Please access animations over scene.animations now."),an},kinematics:Ji,library:vt,scene:ps}}}var eP=Jt("<!> <!>",1);function tP(s,e){Dn(e,!0);let t=He(e,"color",19,()=>new ze("pink")),i=He(e,"scale",19,()=>[1,1,1]),n=He(e,"rotation",19,()=>[0,0,0]),r=He(e,"position",19,()=>[0,0,0]),o=He(e,"onclick",3,()=>{}),a=He(e,"opacity",3,1),l=Ni(rs([1,1,1])),c=Ni(rs([0,0,0])),h=Ni(rs([0,0,0])),u=Ni(rs([]));const d=[Math.PI/2,-Math.PI/2,-Math.PI/2];C_($R).load(e.filename).subscribe(y=>{if(!y)return;let x=y.scene;Si(l,x.scale.toArray(),!0),Si(c,x.position.toArray(),!0),Si(h,x.rotation?x.rotation.toArray():_e(h),!0);let _=[];y.scene.traverse(E=>{E.type==="Mesh"&&_.push(E)}),Si(u,_,!0)});var v=pt(),m=je(v);{var g=y=>{var x=eP(),_=je(x);cl(_,()=>`<!-- include dae: ${e.filename} ${i()} -->`);var E=gt(_,2);Dt(E,()=>bt.Group,(M,S)=>{S(M,{get scale(){return i()},get position(){return r()},get rotation(){return n()},children:(T,w)=>{var b=pt(),D=je(b);Dt(D,()=>bt.Group,(I,F)=>{F(I,{rotation:d,children:(V,J)=>{var O=pt(),ee=je(O);Dt(ee,()=>bt.Group,(Y,j)=>{j(Y,{get scale(){return _e(l)},get position(){return _e(c)},get rotation(){return _e(h)},children:($,U)=>{var Z=pt(),K=je(Z);Lr(K,17,()=>_e(u),Dr,(k,H)=>{var q=pt(),W=je(q);const ne=Mt(()=>_e(H).scale?_e(H).scale.toArray():[1,1,1]),ge=Mt(()=>_e(H).position?_e(H).position.toArray():[0,0,0]);Dt(W,()=>bt.Mesh,(ye,Se)=>{Se(ye,{castShadow:!0,receiveShadow:!0,get geometry(){return _e(H).geometry},get scale(){return _e(ne)},get position(){return _e(ge)},get material(){return _e(H).material},get onclick(){return o()},children:(pe,Ie)=>{var X=pt(),Oe=je(X);{var he=ue=>{var ie=pt(),Me=je(ie);{var le=A=>{var Q=pt(),ae=je(Q);Dt(ae,()=>bt.MeshLambertMaterial,(se,de)=>{de(se,{get color(){return t()},get opacity(){return a()},transparent:!0})}),Xe(A,Q)},P=A=>{var Q=pt(),ae=je(Q);Dt(ae,()=>bt.MeshLambertMaterial,(se,de)=>{de(se,{get color(){return t()}})}),Xe(A,Q)};Ot(Me,A=>{a()<1?A(le):A(P,!1)})}Xe(ue,ie)};Ot(Oe,ue=>{t()&&ue(he)})}Xe(pe,X)},$$slots:{default:!0}})}),Xe(k,q)}),Xe($,Z)},$$slots:{default:!0}})}),Xe(V,O)},$$slots:{default:!0}})}),Xe(T,b)},$$slots:{default:!0}})}),Xe(y,x)};Ot(m,y=>{_e(u).length>0&&y(g)})}Xe(s,v),Ln()}const nP=/^[og]\s*(.+)?/,iP=/^mtllib /,rP=/^usemtl /,sP=/^usemap /,v0=/\s+/,_0=new L,Od=new L,y0=new L,x0=new L,Xi=new L,Dc=new ze;function oP(){const s={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(e,t){if(this.object&&this.object.fromDeclaration===!1){this.object.name=e,this.object.fromDeclaration=t!==!1;return}const i=this.object&&typeof this.object.currentMaterial=="function"?this.object.currentMaterial():void 0;if(this.object&&typeof this.object._finalize=="function"&&this.object._finalize(!0),this.object={name:e||"",fromDeclaration:t!==!1,geometry:{vertices:[],normals:[],colors:[],uvs:[],hasUVIndices:!1},materials:[],smooth:!0,startMaterial:function(n,r){const o=this._finalize(!1);o&&(o.inherited||o.groupCount<=0)&&this.materials.splice(o.index,1);const a={index:this.materials.length,name:n||"",mtllib:Array.isArray(r)&&r.length>0?r[r.length-1]:"",smooth:o!==void 0?o.smooth:this.smooth,groupStart:o!==void 0?o.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(l){const c={index:typeof l=="number"?l:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return c.clone=this.clone.bind(c),c}};return this.materials.push(a),a},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(n){const r=this.currentMaterial();if(r&&r.groupEnd===-1&&(r.groupEnd=this.geometry.vertices.length/3,r.groupCount=r.groupEnd-r.groupStart,r.inherited=!1),n&&this.materials.length>1)for(let o=this.materials.length-1;o>=0;o--)this.materials[o].groupCount<=0&&this.materials.splice(o,1);return n&&this.materials.length===0&&this.materials.push({name:"",smooth:this.smooth}),r}},i&&i.name&&typeof i.clone=="function"){const n=i.clone(0);n.inherited=!0,this.object.materials.push(n)}this.objects.push(this.object)},finalize:function(){this.object&&typeof this.object._finalize=="function"&&this.object._finalize(!0)},parseVertexIndex:function(e,t){const i=parseInt(e,10);return(i>=0?i-1:i+t/3)*3},parseNormalIndex:function(e,t){const i=parseInt(e,10);return(i>=0?i-1:i+t/3)*3},parseUVIndex:function(e,t){const i=parseInt(e,10);return(i>=0?i-1:i+t/2)*2},addVertex:function(e,t,i){const n=this.vertices,r=this.object.geometry.vertices;r.push(n[e+0],n[e+1],n[e+2]),r.push(n[t+0],n[t+1],n[t+2]),r.push(n[i+0],n[i+1],n[i+2])},addVertexPoint:function(e){const t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addVertexLine:function(e){const t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addNormal:function(e,t,i){const n=this.normals,r=this.object.geometry.normals;r.push(n[e+0],n[e+1],n[e+2]),r.push(n[t+0],n[t+1],n[t+2]),r.push(n[i+0],n[i+1],n[i+2])},addFaceNormal:function(e,t,i){const n=this.vertices,r=this.object.geometry.normals;_0.fromArray(n,e),Od.fromArray(n,t),y0.fromArray(n,i),Xi.subVectors(y0,Od),x0.subVectors(_0,Od),Xi.cross(x0),Xi.normalize(),r.push(Xi.x,Xi.y,Xi.z),r.push(Xi.x,Xi.y,Xi.z),r.push(Xi.x,Xi.y,Xi.z)},addColor:function(e,t,i){const n=this.colors,r=this.object.geometry.colors;n[e]!==void 0&&r.push(n[e+0],n[e+1],n[e+2]),n[t]!==void 0&&r.push(n[t+0],n[t+1],n[t+2]),n[i]!==void 0&&r.push(n[i+0],n[i+1],n[i+2])},addUV:function(e,t,i){const n=this.uvs,r=this.object.geometry.uvs;r.push(n[e+0],n[e+1]),r.push(n[t+0],n[t+1]),r.push(n[i+0],n[i+1])},addDefaultUV:function(){const e=this.object.geometry.uvs;e.push(0,0),e.push(0,0),e.push(0,0)},addUVLine:function(e){const t=this.uvs;this.object.geometry.uvs.push(t[e+0],t[e+1])},addFace:function(e,t,i,n,r,o,a,l,c){const h=this.vertices.length;let u=this.parseVertexIndex(e,h),d=this.parseVertexIndex(t,h),f=this.parseVertexIndex(i,h);if(this.addVertex(u,d,f),this.addColor(u,d,f),a!==void 0&&a!==""){const p=this.normals.length;u=this.parseNormalIndex(a,p),d=this.parseNormalIndex(l,p),f=this.parseNormalIndex(c,p),this.addNormal(u,d,f)}else this.addFaceNormal(u,d,f);if(n!==void 0&&n!==""){const p=this.uvs.length;u=this.parseUVIndex(n,p),d=this.parseUVIndex(r,p),f=this.parseUVIndex(o,p),this.addUV(u,d,f),this.object.geometry.hasUVIndices=!0}else this.addDefaultUV()},addPointGeometry:function(e){this.object.geometry.type="Points";const t=this.vertices.length;for(let i=0,n=e.length;i<n;i++){const r=this.parseVertexIndex(e[i],t);this.addVertexPoint(r),this.addColor(r)}},addLineGeometry:function(e,t){this.object.geometry.type="Line";const i=this.vertices.length,n=this.uvs.length;for(let r=0,o=e.length;r<o;r++)this.addVertexLine(this.parseVertexIndex(e[r],i));for(let r=0,o=t.length;r<o;r++)this.addUVLine(this.parseUVIndex(t[r],n))}};return s.startObject("",!1),s}class aP extends zn{constructor(e){super(e),this.materials=null}load(e,t,i,n){const r=this,o=new qi(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(r.parse(a))}catch(l){n?n(l):console.error(l),r.manager.itemError(e)}},i,n)}setMaterials(e){return this.materials=e,this}parse(e){const t=new oP;e.indexOf(`\r
`)!==-1&&(e=e.replace(/\r\n/g,`
`)),e.indexOf(`\\
`)!==-1&&(e=e.replace(/\\\n/g,""));const i=e.split(`
`);let n=[];for(let a=0,l=i.length;a<l;a++){const c=i[a].trimStart();if(c.length===0)continue;const h=c.charAt(0);if(h!=="#")if(h==="v"){const u=c.split(v0);switch(u[0]){case"v":t.vertices.push(parseFloat(u[1]),parseFloat(u[2]),parseFloat(u[3])),u.length>=7?(Dc.setRGB(parseFloat(u[4]),parseFloat(u[5]),parseFloat(u[6]),sn),t.colors.push(Dc.r,Dc.g,Dc.b)):t.colors.push(void 0,void 0,void 0);break;case"vn":t.normals.push(parseFloat(u[1]),parseFloat(u[2]),parseFloat(u[3]));break;case"vt":t.uvs.push(parseFloat(u[1]),parseFloat(u[2]));break}}else if(h==="f"){const d=c.slice(1).trim().split(v0),f=[];for(let v=0,m=d.length;v<m;v++){const g=d[v];if(g.length>0){const y=g.split("/");f.push(y)}}const p=f[0];for(let v=1,m=f.length-1;v<m;v++){const g=f[v],y=f[v+1];t.addFace(p[0],g[0],y[0],p[1],g[1],y[1],p[2],g[2],y[2])}}else if(h==="l"){const u=c.substring(1).trim().split(" ");let d=[];const f=[];if(c.indexOf("/")===-1)d=u;else for(let p=0,v=u.length;p<v;p++){const m=u[p].split("/");m[0]!==""&&d.push(m[0]),m[1]!==""&&f.push(m[1])}t.addLineGeometry(d,f)}else if(h==="p"){const d=c.slice(1).trim().split(" ");t.addPointGeometry(d)}else if((n=nP.exec(c))!==null){const u=(" "+n[0].slice(1).trim()).slice(1);t.startObject(u)}else if(rP.test(c))t.object.startMaterial(c.substring(7).trim(),t.materialLibraries);else if(iP.test(c))t.materialLibraries.push(c.substring(7).trim());else if(sP.test(c))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if(h==="s"){if(n=c.split(" "),n.length>1){const d=n[1].trim().toLowerCase();t.object.smooth=d!=="0"&&d!=="off"}else t.object.smooth=!0;const u=t.object.currentMaterial();u&&(u.smooth=t.object.smooth)}else{if(c==="\0")continue;console.warn('THREE.OBJLoader: Unexpected line: "'+c+'"')}}t.finalize();const r=new Oi;if(r.materialLibraries=[].concat(t.materialLibraries),!(t.objects.length===1&&t.objects[0].geometry.vertices.length===0)===!0)for(let a=0,l=t.objects.length;a<l;a++){const c=t.objects[a],h=c.geometry,u=c.materials,d=h.type==="Line",f=h.type==="Points";let p=!1;if(h.vertices.length===0)continue;const v=new yt;v.setAttribute("position",new qe(h.vertices,3)),h.normals.length>0&&v.setAttribute("normal",new qe(h.normals,3)),h.colors.length>0&&(p=!0,v.setAttribute("color",new qe(h.colors,3))),h.hasUVIndices===!0&&v.setAttribute("uv",new qe(h.uvs,2));const m=[];for(let y=0,x=u.length;y<x;y++){const _=u[y],E=_.name+"_"+_.smooth+"_"+p;let M=t.materials[E];if(this.materials!==null){if(M=this.materials.create(_.name),d&&M&&!(M instanceof wn)){const S=new wn;kn.prototype.copy.call(S,M),S.color.copy(M.color),M=S}else if(f&&M&&!(M instanceof Xs)){const S=new Xs({size:10,sizeAttenuation:!1});kn.prototype.copy.call(S,M),S.color.copy(M.color),S.map=M.map,M=S}}M===void 0&&(d?M=new wn:f?M=new Xs({size:1,sizeAttenuation:!1}):M=new el,M.name=_.name,M.flatShading=!_.smooth,M.vertexColors=p,t.materials[E]=M),m.push(M)}let g;if(m.length>1){for(let y=0,x=u.length;y<x;y++){const _=u[y];v.addGroup(_.groupStart,_.groupCount,y)}d?g=new zi(v,m):f?g=new Na(v,m):g=new ke(v,m)}else d?g=new zi(v,m[0]):f?g=new Na(v,m[0]):g=new ke(v,m[0]);g.name=c.name,r.add(g)}else if(t.vertices.length>0){const a=new Xs({size:1,sizeAttenuation:!1}),l=new yt;l.setAttribute("position",new qe(t.vertices,3)),t.colors.length>0&&t.colors[0]!==void 0&&(l.setAttribute("color",new qe(t.colors,3)),a.vertexColors=!0);const c=new Na(l,a);r.add(c)}return r}}var lP=Jt("<!> <!>",1);function cP(s,e){Dn(e,!0);let t=He(e,"color",19,()=>new ze("pink")),i=He(e,"scale",19,()=>[1,1,1]),n=He(e,"rotation",19,()=>[0,0,0]),r=He(e,"position",19,()=>[0,0,0]),o=He(e,"onclick",3,()=>{}),a=He(e,"opacity",3,1),l=Ni(void 0);new aP().load(e.filename,f=>{Si(l,f,!0)});var h=pt(),u=je(h);{var d=f=>{var p=lP(),v=je(p);cl(v,()=>`<!-- include obj: ${e.filename} ${i()} -->`);var m=gt(v,2);bt(m,{get is(){return _e(l)},get onclick(){return o()},get position(){return r()},get rotation(){return n()},get scale(){return i()},children:(g,y)=>{var x=pt(),_=je(x);{var E=S=>{var T=pt(),w=je(T);Dt(w,()=>bt.MeshLambertMaterial,(b,D)=>{D(b,{get color(){return t()},get opacity(){return a()},transparent:!0})}),Xe(S,T)},M=S=>{var T=pt(),w=je(T);Dt(w,()=>bt.MeshLambertMaterial,(b,D)=>{D(b,{get color(){return t()}})}),Xe(S,T)};Ot(_,S=>{a()<1?S(E):S(M,!1)})}Xe(g,x)},$$slots:{default:!0}}),Xe(f,p)};Ot(u,f=>{_e(l)&&f(d)})}Xe(s,h),Ln()}class hP extends zn{constructor(e){super(e)}load(e,t,i,n){const r=this,o=new qi(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(r.parse(a))}catch(l){n?n(l):console.error(l),r.manager.itemError(e)}},i,n)}parse(e){function t(c){const h=new DataView(c),u=32/8*3+32/8*3*3+16/8,d=h.getUint32(80,!0);if(80+32/8+d*u===h.byteLength)return!0;const p=[115,111,108,105,100];for(let v=0;v<5;v++)if(i(p,h,v))return!1;return!0}function i(c,h,u){for(let d=0,f=c.length;d<f;d++)if(c[d]!==h.getUint8(u+d))return!1;return!0}function n(c){const h=new DataView(c),u=h.getUint32(80,!0);let d,f,p,v=!1,m,g,y,x,_;for(let D=0;D<70;D++)h.getUint32(D,!1)==1129270351&&h.getUint8(D+4)==82&&h.getUint8(D+5)==61&&(v=!0,m=new Float32Array(u*3*3),g=h.getUint8(D+6)/255,y=h.getUint8(D+7)/255,x=h.getUint8(D+8)/255,_=h.getUint8(D+9)/255);const E=84,M=12*4+2,S=new yt,T=new Float32Array(u*3*3),w=new Float32Array(u*3*3),b=new ze;for(let D=0;D<u;D++){const I=E+D*M,F=h.getFloat32(I,!0),V=h.getFloat32(I+4,!0),J=h.getFloat32(I+8,!0);if(v){const O=h.getUint16(I+48,!0);(O&32768)===0?(d=(O&31)/31,f=(O>>5&31)/31,p=(O>>10&31)/31):(d=g,f=y,p=x)}for(let O=1;O<=3;O++){const ee=I+O*12,Y=D*3*3+(O-1)*3;T[Y]=h.getFloat32(ee,!0),T[Y+1]=h.getFloat32(ee+4,!0),T[Y+2]=h.getFloat32(ee+8,!0),w[Y]=F,w[Y+1]=V,w[Y+2]=J,v&&(b.setRGB(d,f,p,sn),m[Y]=b.r,m[Y+1]=b.g,m[Y+2]=b.b)}}return S.setAttribute("position",new Ct(T,3)),S.setAttribute("normal",new Ct(w,3)),v&&(S.setAttribute("color",new Ct(m,3)),S.hasColors=!0,S.alpha=_),S}function r(c){const h=new yt,u=/solid([\s\S]*?)endsolid/g,d=/facet([\s\S]*?)endfacet/g,f=/solid\s(.+)/;let p=0;const v=/[\s]+([+-]?(?:\d*)(?:\.\d*)?(?:[eE][+-]?\d+)?)/.source,m=new RegExp("vertex"+v+v+v,"g"),g=new RegExp("normal"+v+v+v,"g"),y=[],x=[],_=[],E=new L;let M,S=0,T=0,w=0;for(;(M=u.exec(c))!==null;){T=w;const b=M[0],D=(M=f.exec(b))!==null?M[1]:"";for(_.push(D);(M=d.exec(b))!==null;){let V=0,J=0;const O=M[0];for(;(M=g.exec(O))!==null;)E.x=parseFloat(M[1]),E.y=parseFloat(M[2]),E.z=parseFloat(M[3]),J++;for(;(M=m.exec(O))!==null;)y.push(parseFloat(M[1]),parseFloat(M[2]),parseFloat(M[3])),x.push(E.x,E.y,E.z),V++,w++;J!==1&&console.error("THREE.STLLoader: Something isn't right with the normal of face number "+p),V!==3&&console.error("THREE.STLLoader: Something isn't right with the vertices of face number "+p),p++}const I=T,F=w-T;h.userData.groupNames=_,h.addGroup(I,F,S),S++}return h.setAttribute("position",new qe(y,3)),h.setAttribute("normal",new qe(x,3)),h}function o(c){return typeof c!="string"?new TextDecoder().decode(c):c}function a(c){if(typeof c=="string"){const h=new Uint8Array(c.length);for(let u=0;u<c.length;u++)h[u]=c.charCodeAt(u)&255;return h.buffer||h}else return c}const l=a(e);return t(l)?n(l):r(o(e))}}var uP=Jt("<!> <!>",1);function dP(s,e){Dn(e,!0);const[t,i]=al(),n=()=>js(_e(d),"$stl",t);let r=He(e,"color",19,()=>new ze("pink")),o=He(e,"scale",19,()=>[1,1,1]),a=He(e,"rotation",19,()=>[0,0,0]),l=He(e,"position",19,()=>[0,0,0]),c=He(e,"onclick",3,()=>{}),h=He(e,"opacity",3,1);const u=C_(hP);let d=Mt(()=>u.load(e.filename));var f=pt(),p=je(f);{var v=m=>{var g=uP(),y=je(g);cl(y,()=>`<!-- include stl: ${e.filename} ${o()} -->`);var x=gt(y,2);Dt(x,()=>bt.Mesh,(_,E)=>{E(_,{castShadow:!0,receiveShadow:!0,get geometry(){return n()},get scale(){return o()},get onclick(){return c()},get position(){return l()},get rotation(){return a()},children:(M,S)=>{var T=pt(),w=je(T);{var b=I=>{var F=pt(),V=je(F);Dt(V,()=>bt.MeshLambertMaterial,(J,O)=>{O(J,{get color(){return r()},get opacity(){return h()},transparent:!0})}),Xe(I,F)},D=I=>{var F=pt(),V=je(F);Dt(V,()=>bt.MeshLambertMaterial,(J,O)=>{O(J,{get color(){return r()}})}),Xe(I,F)};Ot(w,I=>{h()<1?I(b):I(D,!1)})}Xe(M,T)},$$slots:{default:!0}})}),Xe(m,g)};Ot(p,m=>{n()&&m(v)})}Xe(s,f),Ln(),i()}function sy(s,e){Dn(e,!0);let t=He(e,"origin",7),i=He(e,"selected",3,!1);const n=h=>{t().origin_xyz=h.position.toArray(),t().origin_rpy=[h.rotation.x,h.rotation.y,h.rotation.z],KR(t())},r=h=>{if(!h.target)return;const u=h.target.object;n(u),e.ondatachange&&e.ondatachange(h)};Ep();var o=pt(),a=je(o);{var l=h=>{const u=Mt(()=>Math.PI/Le.rotationSnap);EC(h,{get translationSnap(){return Le.translationSnap},get scaleSnap(){return Le.scaleSnap},get rotationSnap(){return _e(u)},get position(){return t().origin_xyz},get rotation(){return t().origin_rpy},get mode(){return Le.tool},onobjectChange:r,children:(d,f)=>{var p=pt(),v=je(p);Yi(v,()=>e.children??kr),Xe(d,p)},$$slots:{default:!0}})},c=h=>{var u=pt(),d=je(u);Dt(d,()=>bt.Group,(f,p)=>{p(f,{get position(){return t().origin_xyz},get rotation(){return t().origin_rpy},children:(v,m)=>{var g=pt(),y=je(g);Yi(y,()=>e.children??kr),Xe(v,g)},$$slots:{default:!0}})}),Xe(h,u)};Ot(a,h=>{i()&&Le.edit?h(l):h(c,!1)})}Xe(s,o),Ln()}var fP=Jt("<!> <!>",1),pP=Jt("<!> <!>",1);function b0(s,e){Dn(e,!0);let t=He(e,"opacity",3,1),i=He(e,"color",3,void 0),n=He(e,"ondatachange",3,void 0);function r(){var h;return Le.selectedLink==e.link?new ze(Le.highlightColor):(h=e.visual)!=null&&h.color_rgba?qR(e.visual.color_rgba):new ze(i()||"gray")}const o=h=>{h.stopPropagation(),Le.selectedLink=e.link,Le.selectedJoint=void 0};Ep();var a=pt(),l=je(a);{var c=h=>{const u=Mt(()=>Le.selectedLink==e.link);sy(h,{get origin(){return e.visual},get ondatachange(){return n()},get selected(){return _e(u)},children:(d,f)=>{var p=pt(),v=je(p);{var m=y=>{var x=pt(),_=je(x);{var E=S=>{const T=Mt(r),w=Mt(()=>e.visual.geometry.scale||[1,1,1]);dP(S,{onclick:o,get filename(){return e.visual.geometry.filename},get color(){return _e(T)},get opacity(){return t()},get scale(){return _e(w)}})},M=(S,T)=>{{var w=D=>{const I=Mt(r),F=Mt(()=>e.visual.geometry.scale||[1,1,1]);cP(D,{onclick:o,get filename(){return e.visual.geometry.filename},get color(){return _e(I)},get opacity(){return t()},get scale(){return _e(F)}})},b=(D,I)=>{{var F=V=>{const J=Mt(r),O=Mt(()=>e.visual.geometry.scale||[1,1,1]);tP(V,{onclick:o,get filename(){return e.visual.geometry.filename},get color(){return _e(J)},get opacity(){return t()},get scale(){return _e(O)}})};Ot(D,V=>{e.visual.geometry.type==="dae"&&V(F)},I)}};Ot(S,D=>{e.visual.geometry.type==="obj"?D(w):D(b,!1)},T)}};Ot(_,S=>{e.visual.geometry.type==="stl"?S(E):S(M,!1)})}Xe(y,x)},g=y=>{var x=pt(),_=je(x);{var E=S=>{var T=pt(),w=je(T);Dt(w,()=>bt.Mesh,(b,D)=>{D(b,{castShadow:!0,receiveShadow:!0,rotation:[Math.PI/2,0,0],onclick:o,children:(I,F)=>{var V=fP(),J=je(V);const O=Mt(()=>[e.visual.geometry.radius,e.visual.geometry.radius,e.visual.geometry.length]);Dt(J,()=>bt.CylinderGeometry,($,U)=>{U($,{get args(){return _e(O)}})});var ee=gt(J,2);{var Y=$=>{var U=pt(),Z=je(U);const K=Mt(r);Dt(Z,()=>bt.MeshBasicMaterial,(k,H)=>{H(k,{get color(){return _e(K)},get opacity(){return t()},transparent:!0})}),Xe($,U)},j=$=>{var U=pt(),Z=je(U);const K=Mt(r);Dt(Z,()=>bt.MeshBasicMaterial,(k,H)=>{H(k,{get color(){return _e(K)}})}),Xe($,U)};Ot(ee,$=>{t()<1?$(Y):$(j,!1)})}Xe(I,V)},$$slots:{default:!0}})}),Xe(S,T)},M=(S,T)=>{{var w=b=>{var D=pt(),I=je(D);const F=Mt(()=>e.visual.geometry.size||[1,1,1]);Dt(I,()=>bt.Mesh,(V,J)=>{J(V,{castShadow:!0,receiveShadow:!0,get scale(){return _e(F)},onclick:o,children:(O,ee)=>{var Y=pP(),j=je(Y);Dt(j,()=>bt.BoxGeometry,(K,k)=>{k(K,{})});var $=gt(j,2);{var U=K=>{var k=pt(),H=je(k);const q=Mt(r);Dt(H,()=>bt.MeshBasicMaterial,(W,ne)=>{ne(W,{get color(){return _e(q)},get opacity(){return t()},transparent:!0})}),Xe(K,k)},Z=K=>{var k=pt(),H=je(k);const q=Mt(r);Dt(H,()=>bt.MeshBasicMaterial,(W,ne)=>{ne(W,{get color(){return _e(q)}})}),Xe(K,k)};Ot($,K=>{t()<1?K(U):K(Z,!1)})}Xe(O,Y)},$$slots:{default:!0}})}),Xe(b,D)};Ot(S,b=>{e.visual.type==="box"&&b(w)},T)}};Ot(_,S=>{e.visual.type==="cylinder"?S(E):S(M,!1)})}Xe(y,x)};Ot(v,y=>{e.visual.type==="mesh"&&e.visual.geometry?y(m):y(g,!1)})}Xe(d,p)},$$slots:{default:!0}})};Ot(l,h=>{e.visual&&h(c)})}Xe(s,a),Ln()}var mP=Jt("<!> <!>",1),gP=Jt("<!> <!>",1),vP=Jt("<!> <!>",1),_P=Jt("<!> <!>",1),yP=Jt("<!> <!>",1),xP=Jt("<!> <!> <!>",1),bP=Jt("<!> <!>",1);function SP(s,e){Dn(e,!0);let t=He(e,"ondatachange",3,void 0),i=.7;const n=c=>{c.stopPropagation(),Le.selectedLink=void 0,Le.selectedJoint=e.joint};Ep();var r=bP(),o=je(r);cl(o,()=>`<!-- Joint ${e.joint.name} (${e.joint.type}) -->`);var a=gt(o,2);{var l=c=>{var h=xP(),u=je(h);{var d=g=>{k_(g,{get"position.x"(){return e.joint.origin_xyz[0]},get"position.y"(){return e.joint.origin_xyz[1]},get"position.z"(){return e.joint.origin_xyz[2]},children:(y,x)=>{const _=Mt(()=>ry(Le.nameHeight)),E=Mt(()=>Le.selectedJoint==e.joint?Le.highlightColor:Le.jointColor);K_(y,{get scale(){return _e(_)},get color(){return _e(E)},get text(){return e.joint.name}})},$$slots:{default:!0}})};Ot(u,g=>{Le.jointNames&&g(d)})}var f=gt(u,2);{var p=g=>{var y=pt(),x=je(y);Dt(x,()=>bt.Line,(_,E)=>{E(_,{children:(M,S)=>{var T=mP(),w=je(T);const b=Mt(()=>[new L(0,0,0),new L(e.joint.origin_xyz[0],e.joint.origin_xyz[1],e.joint.origin_xyz[2])]);qg(w,{get points(){return _e(b)}});var D=gt(w,2);Dt(D,()=>bt.LineBasicMaterial,(I,F)=>{F(I,{get color(){return Le.jointColor}})}),Xe(M,T)},$$slots:{default:!0}})}),Xe(g,y)};Ot(f,g=>{Le.joints&&g(p)})}var v=gt(f,2);const m=Mt(()=>Le.selectedJoint==e.joint);sy(v,{get ondatachange(){return t()},get origin(){return e.joint},get selected(){return _e(m)},children:(g,y)=>{var x=pt(),_=je(x);const E=Mt(()=>e.joint.rotation||[0,0,0]);Dt(_,()=>bt.Group,(M,S)=>{S(M,{get rotation(){return _e(E)},children:(T,w)=>{var b=yP(),D=je(b);{var I=J=>{oy(J,{get link(){return e.joint.child},get ondatachange(){return t()}})};Ot(D,J=>{e.joint.child&&J(I)})}var F=gt(D,2);{var V=J=>{var O=_P(),ee=je(O);Dt(ee,()=>bt.Line,(j,$)=>{$(j,{children:(U,Z)=>{var K=gP(),k=je(K);qg(k,{onclick:n,points:[new L(0,0,0),new L(0,-.02,0)]});var H=gt(k,2);Dt(H,()=>bt.LineBasicMaterial,(q,W)=>{W(q,{get color(){return Le.jointIndicatorColor}})}),Xe(U,K)},$$slots:{default:!0}})});var Y=gt(ee,2);Dt(Y,()=>bt.Mesh,(j,$)=>{$(j,{onclick:n,rotation:[Math.PI/2,0,0],children:(U,Z)=>{var K=vP(),k=je(K);Dt(k,()=>bt.CylinderGeometry,(W,ne)=>{ne(W,{args:[.004,.004,.03]})});var H=gt(k,2);{var q=W=>{var ne=pt(),ge=je(ne);const ye=Mt(()=>Le.selectedJoint==e.joint?Le.highlightColor:Le.jointColor);Dt(ge,()=>bt.MeshBasicMaterial,(Se,pe)=>{pe(Se,{get color(){return _e(ye)},opacity:i,transparent:!0})}),Xe(W,ne)};Ot(H,W=>{W(q)})}Xe(U,K)},$$slots:{default:!0}})}),Xe(J,O)};Ot(F,J=>{Le.joints&&J(V)})}Xe(T,b)},$$slots:{default:!0}})}),Xe(g,x)},$$slots:{default:!0}}),Xe(c,h)};Ot(a,c=>{Le.robot&&c(l)})}Xe(s,r),Ln()}var MP=Jt("<!> <!> <!> <!> <!>",1);function oy(s,e){Dn(e,!0);let t=He(e,"ondatachange",3,void 0);function i(){return e.link.collision&&e.link.collision.length>0?e.link.collision[0].origin_xyz:e.link.visual&&e.link.visual.length>0?e.link.visual[0].origin_xyz:[0,0,0]}var n=pt(),r=je(n);{var o=a=>{var l=MP(),c=je(l);cl(c,()=>`<!-- Link ${e.link.name} -->`);var h=gt(c,2);{var u=g=>{const y=Mt(i);k_(g,{get position(){return _e(y)},children:(x,_)=>{const E=Mt(()=>Le.selectedLink==e.link?Le.highlightColor:Le.linkColor),M=Mt(()=>ry(Le.nameHeight));K_(x,{anchorY:-.2,get color(){return _e(E)},get scale(){return _e(M)},get text(){return e.link.name}})},$$slots:{default:!0}})};Ot(h,g=>{Le.linkNames&&g(u)})}var d=gt(h,2);{var f=g=>{var y=pt(),x=je(y);Lr(x,17,()=>e.link.visual,Dr,(_,E)=>{b0(_,{get ondatachange(){return t()},get opacity(){return Le.visualOpacity},get visual(){return _e(E)},get link(){return e.link}})}),Xe(g,y)};Ot(d,g=>{Le.visual&&g(f)})}var p=gt(d,2);{var v=g=>{var y=pt(),x=je(y);Lr(x,17,()=>e.link.collision,Dr,(_,E)=>{b0(_,{get ondatachange(){return t()},get opacity(){return Le.collisionOpacity},get visual(){return _e(E)},get color(){return Le.collisionColor},get link(){return e.link}})}),Xe(g,y)};Ot(p,g=>{Le.collision&&g(v)})}var m=gt(p,2);Lr(m,17,()=>JR(Le.robot,e.link),Dr,(g,y)=>{SP(g,{get ondatachange(){return t()},get joint(){return _e(y)}})}),Xe(a,l)};Ot(r,a=>{Le.robot&&a(o)})}Xe(s,n),Ln()}function wP(s,e){Dn(e,!0);let t=He(e,"position",19,()=>[0,0,0]),i=He(e,"quaternion",19,()=>[0,0,0,1]),n=He(e,"ondatachange",3,void 0);var r=pt(),o=je(r);{var a=l=>{var c=pt(),h=je(c);Dt(h,()=>bt.Group,(u,d)=>{d(u,{get position(){return t()},get quaternion(){return i()},children:(f,p)=>{var v=pt(),m=je(v);Lr(m,17,()=>ZR(Le.robot),Dr,(g,y)=>{oy(g,{get link(){return _e(y)},get ondatachange(){return n()}})}),Xe(f,v)},$$slots:{default:!0}})}),Xe(l,c)};Ot(o,l=>{Le.robot&&l(a)})}Xe(s,r),Ln()}var EP=Jt("<!> <!> <!> <!>",1);function TP(s,e){let t=He(e,"intensity",3,.5),i=He(e,"radius",3,1),n=He(e,"shadows",3,!0),r=He(e,"preset_name",3,"rembrandt"),o=He(e,"shadowBias",19,()=>-1e-4),a=He(e,"normalBias",3,0),l=He(e,"shadowSize",3,256),c=He(e,"height",3,1),h=He(e,"shadowOffset",3,1);const d={rembrandt:{main:[1,2,1],fill:[-2,-.5,-2]},portrait:{main:[-1,2,.5],fill:[-1,.5,-1.5]},upfront:{main:[0,2,1],fill:[-1,.5,-1.5]},soft:{main:[-2,4,4],fill:[-1,.5,-1.5]}}[r()];var f=EP(),p=je(f);const v=Mt(()=>t()/3);Dt(p,()=>bt.AmbientLight,(S,T)=>{T(S,{get intensity(){return _e(v)}})});var m=gt(p,2);const g=Mt(()=>[d.main[0]*i(),d.main[1]*i(),d.main[2]*i()]),y=Mt(()=>t()*2);Dt(m,()=>bt.SpotLight,(S,T)=>{T(S,{penumbra:1,get position(){return _e(g)},get intensity(){return _e(y)},get castShadow(){return n()},get"shadow-bias"(){return o()},get"shadow-normalBias"(){return a()},get"shadow-mapSize"(){return l()}})});var x=gt(m,2);const _=Mt(()=>[d.fill[0]*i(),d.fill[1]*i(),d.fill[2]*i()]);Dt(x,()=>bt.PointLight,(S,T)=>{T(S,{get position(){return _e(_)},get intensity(){return t()}})});var E=gt(x,2);const M=Mt(()=>[0,-c()/2-h()/2,0]);Dt(E,()=>bt.Group,(S,T)=>{T(S,{get position(){return _e(M)},children:(w,b)=>{var D=pt(),I=je(D);{var F=V=>{const J=Mt(()=>i()*4);cC(V,{get scale(){return _e(J)},get far(){return i()},blur:2})};Ot(I,V=>{n()&&V(F)})}Xe(w,D)},$$slots:{default:!0}})}),Xe(s,f)}var AP=Jt("<!> <!>",1),CP=Jt("<!> <!> <!> <!>",1),RP=Jt('<input type="range" min="0" max="360" step="1"><label> </label>',1),PP=Jt("<h3>Continuous Joints</h3> <!> <br> <button>reset</button><br>",1),IP=Jt('<input type="range" step="1"><label> </label>',1),DP=Jt("<h3>Revolute Joints</h3> <!>",1),LP=Jt(" <br> ",1),UP=Jt(" <br>",1),NP=Jt(" <br>",1),OP=Jt(" <br> visuals: <br> <!> collisions: <br> <!>",1),FP=Jt('<main class="main-content"><div><!></div> <div class="joint_states svelte-tlisrv"><!> <!> <hr> <input type="range" id="_visual_opacity"><br> <label for="_visual_opacity">Visual Opacity</label> <input type="range" id="_collision_opacity"><br> <label for="_collision_opacity">Collision Opacity</label> <hr> <input type="checkbox" id="_urdf_visual"> <label for="_urdf_visual">Visual</label> <br> <input type="checkbox" id="_urdf_collision"> <label for="_urdf_collision">Collision</label><br> <input type="checkbox" id="_urdf_linknames"> <label for="_urdf_linknames">Link names</label><br> <input type="checkbox" id="_urdf_joints"> <label for="_urdf_joints">Joints</label><br> <input type="checkbox" id="_urdf_jointnames"> <label for="_urdf_jointnames">Joint names</label><br> <input id="_urdf_jointcolor" type="color"> <label for="_urdf_jointcolor">Joint color</label><br> <input id="_urdf_linkcolor" type="color"> <label for="_urdf_linkcolor">Link color</label><br> <input id="_urdf_jointindicolor" type="color"> <label for="_urdf_jointindicolor">Joint indicator color</label><br> <input id="_urdf_highlightcolor" type="color"> <label for="_urdf_highlightcolor">Highlight color</label><br> <input id="_urdf_collisioncolor" type="color"> <label for="_urdf_collisioncolor">Collision color</label><br> <input id="_urdf_bgcolor" type="color"> <label for="_urdf_bgcolor">Background color</label><br> <hr> Selected:<br> <!> <!></div></main>');function JP(s,e){Dn(e,!0),Lt.DEFAULT_UP=new L(0,0,1);let t=Ni(0),i=Ni(0),n=Ni(void 0),r=Ni(void 0),o=By.url.href;o=o.endsWith("/")?o.substring(0,o.length-1):o;const l="turtlebot3_description/turtlebot3_waffle.xml",c=new QR(`${o}/${l}`,o);yf(async()=>{let Z=await c.load();const K=c.fromString(Z),k={},H={};for(let q=0;q<K.joints.length;q++){const W=K.joints[q];W.type=="continuous"&&W.name?k[W.name]=q:W.type=="revolute"&&W.name&&(H[W.name]=q)}Le.continuousJoints=k,Le.revoluteJoints=H,Le.robot=K});const h=rs({});var u=FP(),d=Bs(u);let f;var p=Bs(d);DA(p,{createRenderer:U=>new up({canvas:U,alpha:!0,powerPreference:"high-performance",logarithmicDepthBuffer:!0}),shadows:!0,children:(U,Z)=>{var K=CP(),k=je(K);Dt(k,()=>bt.PerspectiveCamera,(ge,ye)=>{ye(ge,{makeDefault:!0,position:[.6,.6,.6],fov:25,get ref(){return _e(n)},set ref(Se){Si(n,Se,!0)},children:(Se,pe)=>{TC(Se,{onchange:()=>{if(!_e(r)||!_e(n))return;const Ie=_e(n).position;Le.zoom=Ie.distanceTo(_e(r).target)},enableZoom:!0,get ref(){return _e(r)},set ref(Ie){Si(r,Ie,!0)},children:(Ie,X)=>{sC(Ie,{})},$$slots:{default:!0}})},$$slots:{default:!0}})});var H=gt(k,2);Dt(H,()=>bt.Group,(ge,ye)=>{ye(ge,{rotation:[-Math.PI/2,0,0],children:(Se,pe)=>{var Ie=AP(),X=je(Ie);Dt(X,()=>bt.HemisphereLight,(he,ue)=>{ue(he,{skycolor:11657727,groundColor:12155424,intensity:.2})});var Oe=gt(X,2);pC(Oe,{cellSize:.1}),Xe(Se,Ie)},$$slots:{default:!0}})});var q=gt(H,2);TP(q,{preset_name:"soft"});var W=gt(q,2);{var ne=ge=>{wP(ge,{})};Ot(W,ge=>{Le.robot&&ge(ne)})}Xe(U,K)},$$slots:{default:!0}}),zs(d);var v=gt(d,2),m=Bs(v);{var g=U=>{var Z=PP(),K=gt(je(Z),2);Lr(K,17,()=>Object.entries(Le.continuousJoints),Dr,(H,q)=>{let W=()=>_e(q)[0],ne=()=>_e(q)[1];var ge=RP(),ye=je(ge);si(ye),ye.__input=Ie=>{if(!Ie.target||!Le.robot)return;const X=Le.robot.joints[ne()],he=h[W()]*Math.PI/180-Math.PI;X.rotation=[he*X.axis_xyz[0],he*X.axis_xyz[1],he*X.axis_xyz[2]]};var Se=gt(ye),pe=Bs(Se,!0);zs(Se),es(()=>{vi(ye,"id",W()),vi(Se,"for",W()),gs(pe,W())}),Sr(ye,()=>h[W()],Ie=>h[W()]=Ie),Xe(H,ge)});var k=gt(K,4);k.__click=()=>{var H;for(let q of Object.values(Le.continuousJoints)){const W=(H=Le.robot)==null?void 0:H.joints[q];!W||!Le.robot||!W.name||(W.rotation=[0,0,0],h[W.name]=180)}},ia(),Xe(U,Z)};Ot(m,U=>{Le.robot&&Le.continuousJoints&&U(g)})}var y=gt(m,2);{var x=U=>{var Z=DP(),K=gt(je(Z),2);Lr(K,17,()=>Object.entries(Le.revoluteJoints),Dr,(k,H)=>{let q=()=>_e(H)[0],W=()=>_e(H)[1];var ne=IP(),ge=je(ne);si(ge),ge.__input=pe=>{if(!pe.target||!Le.robot)return;const Ie=Le.robot.joints[W()],Oe=pe.target.value*Math.PI/180-Math.PI;Ie.rotation=[Oe*Ie.axis_xyz[0],Oe*Ie.axis_xyz[1],Oe*Ie.axis_xyz[2]]};var ye=gt(ge),Se=Bs(ye,!0);zs(ye),es((pe,Ie,X)=>{vi(ge,"id",q()),vi(ge,"min",pe),vi(ge,"max",Ie),qy(ge,X),vi(ye,"for",q()),gs(Se,q())},[()=>{var pe,Ie;return Nd(((Ie=(pe=Le.robot)==null?void 0:pe.joints[W()].limit)==null?void 0:Ie.lower)||0)},()=>{var pe,Ie;return Nd(((Ie=(pe=Le.robot)==null?void 0:pe.joints[W()].limit)==null?void 0:Ie.upper)||2*Math.PI)},()=>{var pe,Ie;return Nd(((Ie=(pe=Le.robot)==null?void 0:pe.joints[W()].limit)==null?void 0:Ie.lower)||0)}]),Xe(k,ne)}),Xe(U,Z)};Ot(y,U=>{Le.revoluteJoints&&U(x)})}var _=gt(y,4);si(_),_.__input=()=>{Le.visualOpacity=Number(Le.visualOpacity)},vi(_,"min",.1),vi(_,"max",1),vi(_,"step",.1);var E=gt(_,5);si(E),E.__input=()=>{Le.collisionOpacity=Number(Le.collisionOpacity)},vi(E,"min",.1),vi(E,"max",1),vi(E,"step",.1);var M=gt(E,7);si(M);var S=gt(M,6);si(S);var T=gt(S,5);si(T);var w=gt(T,5);si(w);var b=gt(w,5);si(b);var D=gt(b,5);si(D);var I=gt(D,5);si(I);var F=gt(I,5);si(F);var V=gt(F,5);si(V);var J=gt(V,5);si(J);var O=gt(J,5);si(O);var ee=gt(O,9);{var Y=U=>{var Z=LP(),K=je(Z),k=gt(K,2);es(()=>{gs(K,`joint: ${Le.selectedJoint.name??""}`),gs(k,` origin: ${Le.selectedJoint.origin_xyz??""}`)}),Xe(U,Z)};Ot(ee,U=>{Le.selectedJoint&&U(Y)})}var j=gt(ee,2);{var $=U=>{var Z=OP(),K=je(Z),k=gt(K,5);{var H=ne=>{var ge=pt(),ye=je(ge);Lr(ye,17,()=>Le.selectedLink.visual,Dr,(Se,pe)=>{ia();var Ie=UP(),X=je(Ie);ia(),es(()=>gs(X,` - origin: ${_e(pe).origin_xyz??""} (${_e(pe).type??""}) `)),Xe(Se,Ie)}),Xe(ne,ge)};Ot(k,ne=>{Le.selectedLink.visual&&ne(H)})}var q=gt(k,4);{var W=ne=>{var ge=pt(),ye=je(ge);Lr(ye,17,()=>Le.selectedLink.collision,Dr,(Se,pe)=>{ia();var Ie=NP(),X=je(Ie);ia(),es(()=>gs(X,` - origin: ${_e(pe).origin_xyz??""} (${_e(pe).type??""}) `)),Xe(Se,Ie)}),Xe(ne,ge)};Ot(q,ne=>{Le.selectedLink.collision&&ne(W)})}es(()=>gs(K,`link: ${Le.selectedLink.name??""}`)),Xe(U,Z)};Ot(j,U=>{Le.selectedLink&&U($)})}zs(v),zs(u),es(()=>f=Xy(d,"",f,{width:_e(i)-250+"px",height:_e(t)+"px","background-color":Le.backgroundColor})),zp("innerHeight",U=>Si(t,U,!0)),zp("innerWidth",U=>Si(i,U,!0)),Sr(_,()=>Le.visualOpacity,U=>Le.visualOpacity=U),Sr(E,()=>Le.collisionOpacity,U=>Le.collisionOpacity=U),ra(M,()=>Le.visual,U=>Le.visual=U),ra(S,()=>Le.collision,U=>Le.collision=U),ra(T,()=>Le.linkNames,U=>Le.linkNames=U),ra(w,()=>Le.joints,U=>Le.joints=U),ra(b,()=>Le.jointNames,U=>Le.jointNames=U),Sr(D,()=>Le.jointColor,U=>Le.jointColor=U),Sr(I,()=>Le.linkColor,U=>Le.linkColor=U),Sr(F,()=>Le.jointIndicatorColor,U=>Le.jointIndicatorColor=U),Sr(V,()=>Le.highlightColor,U=>Le.highlightColor=U),Sr(J,()=>Le.collisionColor,U=>Le.collisionColor=U),Sr(O,()=>Le.backgroundColor,U=>Le.backgroundColor=U),Xe(s,u),Ln()}ky(["input","click"]);export{JP as component};
