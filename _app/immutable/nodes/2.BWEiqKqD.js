var _0=Object.defineProperty;var y0=(s,e,t)=>e in s?_0(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var Jt=(s,e,t)=>y0(s,typeof e!="symbol"?e+"":e,t);import{b as Qf,e as x0,c as Pt,a as it,t as rn}from"../chunks/BFnuBdn9.js";import{ai as b0,y as $f,z as ep,B as S0,C as rd,h as Ui,L as sd,b as Ug,k as xe,at as M0,ab as w0,ac as tp,K as od,J as Kh,c as xs,M as E0,ad as Lg,a as Ld,ae as T0,Q as Ng,A as A0,$ as C0,a5 as ad,av as Qh,aw as R0,ax as P0,ay as I0,P as D0,az as U0,d as Og,aA as L0,aB as N0,G as Fg,N as O0,I as F0,F as k0,aC as B0,aa as z0,aD as V0,aE as G0,aF as H0,i as nh,ag as Nd,Y as tr,aG as kg,a1 as Od,aH as gi,aI as Yn,u as Sn,g as hi,m as xt,p as qn,f as ot,o as jn,q as bs,a0 as _r,s as Ss,n as Ws,v as _t,t as Ks,aJ as np}from"../chunks/DqWMM8mF.js";import{d as W0,s as Qs}from"../chunks/Dwl5u5ts.js";import{r as Wr,i as Xt,b as ip,s as Uo,p as ut,d as Ao,e as ih,c as Ot,a as wi}from"../chunks/BHNpK4m8.js";import{g as ld,w as pi,d as Ha,a as ji,o as Fd,r as kd}from"../chunks/BTNufpyZ.js";import{p as X0}from"../chunks/QNkgTqB_.js";import{s as Xr}from"../chunks/Yin0G9Hm.js";let rp=!1;function Bg(){rp||(rp=!0,document.addEventListener("reset",s=>{Promise.resolve().then(()=>{var e;if(!s.defaultPrevented)for(const t of s.target.elements)(e=t.__on_r)==null||e.call(t)})},{capture:!0}))}function Y0(s,e,t,n=!0){n&&t();for(var i of e)s.addEventListener(i,t);b0(()=>{for(var r of e)s.removeEventListener(r,t)})}function zg(s){var e=S0,t=rd;$f(null),ep(null);try{return s()}finally{$f(e),ep(t)}}function Vg(s,e,t,n=t){s.addEventListener(e,()=>zg(t));const i=s.__on_r;i?s.__on_r=()=>{i(),n(!0)}:s.__on_r=()=>n(!0),Bg()}function Vr(s,e){return e}function q0(s,e,t,n){for(var i=[],r=e.length,o=0;o<r;o++)I0(e[o].e,i,!0);var a=r>0&&i.length===0&&t!==null;if(a){var l=t.parentNode;D0(l),l.append(t),n.clear(),kr(s,e[0].prev,e[r-1].next)}U0(i,()=>{for(var c=0;c<r;c++){var h=e[c];a||(n.delete(h.k),kr(s,h.prev,h.next)),Og(h.e,!a)}})}function Gr(s,e,t,n,i,r=null){var o=s,a={items:new Map,first:null};Ui&&sd();var l=null,c=!1,h=M0(()=>{var u=t();return A0(u)?u:u==null?[]:Ng(u)});Ug(()=>{var u=xe(h),d=u.length;if(c&&d===0)return;c=d===0;let f=!1;if(Ui){var p=o.data===w0;p!==(d===0)&&(o=tp(),od(o),Kh(!1),f=!0)}if(Ui){for(var v=null,m,g=0;g<d;g++){if(xs.nodeType===8&&xs.data===E0){o=xs,f=!0,Kh(!1);break}var x=u[g],y=n(x,g);m=Gg(xs,a,v,null,x,y,g,i,e,t),a.items.set(y,m),v=m}d>0&&od(tp())}Ui||j0(u,a,o,i,e,n,t),r!==null&&(d===0?l?Lg(l):l=Ld(()=>r(o)):l!==null&&T0(l,()=>{l=null})),f&&Kh(!0),xe(h)}),Ui&&(o=xs)}function j0(s,e,t,n,i,r,o){var a=s.length,l=e.items,c=e.first,h=c,u,d=null,f=[],p=[],v,m,g,x;for(x=0;x<a;x+=1){if(v=s[x],m=r(v,x),g=l.get(m),g===void 0){var y=h?h.e.nodes_start:t;d=Gg(y,e,d,d===null?e.first:d.next,v,m,x,n,i,o),l.set(m,d),f=[],p=[],h=d.next;continue}if(Z0(g,v,x),(g.e.f&Qh)!==0&&Lg(g.e),g!==h){if(u!==void 0&&u.has(g)){if(f.length<p.length){var _=p[0],E;d=_.prev;var w=f[0],M=f[f.length-1];for(E=0;E<f.length;E+=1)sp(f[E],_,t);for(E=0;E<p.length;E+=1)u.delete(p[E]);kr(e,w.prev,M.next),kr(e,d,w),kr(e,M,_),h=_,d=M,x-=1,f=[],p=[]}else u.delete(g),sp(g,h,t),kr(e,g.prev,g.next),kr(e,g,d===null?e.first:d.next),kr(e,d,g),d=g;continue}for(f=[],p=[];h!==null&&h.k!==m;)(h.e.f&Qh)===0&&(u??(u=new Set)).add(h),p.push(h),h=h.next;if(h===null)continue;g=h}f.push(g),d=g,h=g.next}if(h!==null||u!==void 0){for(var T=u===void 0?[]:Ng(u);h!==null;)(h.e.f&Qh)===0&&T.push(h),h=h.next;var S=T.length;if(S>0){var b=null;q0(e,T,b,l)}}rd.first=e.first&&e.first.e,rd.last=d&&d.e}function Z0(s,e,t,n){P0(s.v,e),s.i=t}function Gg(s,e,t,n,i,r,o,a,l,c){var h=(l&L0)!==0,u=(l&N0)===0,d=h?u?C0(i):ad(i):i,f=(l&R0)===0?o:ad(o),p={i:f,v:d,k:r,a:null,e:null,prev:t,next:n};try{return p.e=Ld(()=>a(s,d,f,c),Ui),p.e.prev=t&&t.e,p.e.next=n&&n.e,t===null?e.first=p:(t.next=p,t.e.next=p.e),n!==null&&(n.prev=p,n.e.prev=p.e),p}finally{}}function sp(s,e,t){for(var n=s.next?s.next.e.nodes_start:t,i=e?e.e.nodes_start:t,r=s.e.nodes_start;r!==n;){var o=Fg(r);i.before(r),r=o}}function kr(s,e,t){e===null?s.first=t:(e.next=t,e.e.next=t&&t.e),t!==null&&(t.prev=e,t.e.prev=e&&e.e)}function rh(s,e,t,n,i){var r=s,o="",a;Ug(()=>{if(o===(o=e()??"")){Ui&&sd();return}a!==void 0&&(Og(a),a=void 0),o!==""&&(a=Ld(()=>{if(Ui){xs.data;for(var l=sd(),c=l;l!==null&&(l.nodeType!==8||l.data!=="");)c=l,l=Fg(l);if(l===null)throw O0(),F0;Qf(xs,c),r=od(l);return}var h=o+"",u=x0(h);Qf(k0(u),u.lastChild),r.before(u)}))})}function bi(s){if(Ui){var e=!1,t=()=>{if(!e){if(e=!0,s.hasAttribute("value")){var n=s.value;li(s,"value",null),s.value=n}if(s.hasAttribute("checked")){var i=s.checked;li(s,"checked",null),s.checked=i}}};s.__on_r=t,G0(t),Bg()}}function J0(s,e){var t=s.__attributes??(s.__attributes={});t.value===(t.value=e??void 0)||s.value===e&&(e!==0||s.nodeName!=="PROGRESS")||(s.value=e??"")}function li(s,e,t,n){var i=s.__attributes??(s.__attributes={});Ui&&(i[e]=s.getAttribute(e),e==="src"||e==="srcset"||e==="href"&&s.nodeName==="LINK")||i[e]!==(i[e]=t)&&(e==="style"&&"__styles"in s&&(s.__styles={}),e==="loading"&&(s[B0]=t),t==null?s.removeAttribute(e):typeof t!="string"&&K0(s).includes(e)?s[e]=t:s.setAttribute(e,t))}var op=new Map;function K0(s){var e=op.get(s.nodeName);if(e)return e;op.set(s.nodeName,e=[]);for(var t,n=s,i=Element.prototype;i!==n;){t=V0(n);for(var r in t)t[r].set&&e.push(r);n=z0(n)}return e}function ap(s,e,t,n){var i=s.__styles??(s.__styles={});i[e]!==t&&(i[e]=t,t==null?s.style.removeProperty(e):s.style.setProperty(e,t,""))}function ts(s,e,t=e){var n=H0();Vg(s,"input",i=>{var r=i?s.defaultValue:s.value;if(r=$h(s)?eu(r):r,t(r),n&&r!==(r=e())){var o=s.selectionStart,a=s.selectionEnd;s.value=r??"",a!==null&&(s.selectionStart=o,s.selectionEnd=Math.min(a,s.value.length))}}),(Ui&&s.defaultValue!==s.value||nh(e)==null&&s.value)&&t($h(s)?eu(s.value):s.value),Nd(()=>{var i=e();$h(s)&&i===eu(s.value)||s.type==="date"&&!i&&!s.value||i!==s.value&&(s.value=i??"")})}function Yo(s,e,t=e){Vg(s,"change",n=>{var i=n?s.defaultChecked:s.checked;t(i)}),(Ui&&s.defaultChecked!==s.checked||nh(e)==null)&&t(s.checked),Nd(()=>{var n=e();s.checked=!!n})}function $h(s){var e=s.type;return e==="number"||e==="range"}function eu(s){return s===""?null:+s}function lp(s,e){Y0(window,["resize"],()=>zg(()=>e(window[s])))}function Q0(s){tr(s,s.v+1)}function $0(s){let e=0,t=ad(0),n;return()=>{kg()&&(xe(t),Nd(()=>(e===0&&(n=nh(()=>s(()=>Q0(t)))),e+=1,()=>{Od().then(()=>{e-=1,e===0&&(n==null||n(),n=void 0)})})))}}function ey(s){let e;const t=$0(i=>{let r=!1;const o=s.subscribe(a=>{e=a,r&&i()});return r=!0,o});function n(){return kg()?(t(),e):ld(s)}return"set"in s?{get current(){return n()},set current(i){s.set(i)}}:{get current(){return n()}}}/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const sh="173",Ai={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},ws={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Hg=0,cd=1,Wg=2,ty=3,ny=0,Bd=1,ha=2,er=3,ar=0,Wn=1,Li=2,Sr=0,Rs=1,hd=2,ud=3,dd=4,Xg=5,zr=100,Yg=101,qg=102,jg=103,Zg=104,Jg=200,Kg=201,Qg=202,$g=203,dc=204,fc=205,ev=206,tv=207,nv=208,iv=209,rv=210,sv=211,ov=212,av=213,lv=214,pc=0,mc=1,gc=2,Ns=3,vc=4,_c=5,yc=6,xc=7,Wa=0,cv=1,hv=2,rr=0,uv=1,dv=2,fv=3,pv=4,mv=5,bc=6,gv=7,fd="attached",vv="detached",oh=300,wr=301,Hr=302,Ma=303,wa=304,Lo=306,Hi=1e3,di=1001,Ea=1002,On=1003,zd=1004,iy=1004,So=1005,ry=1005,_n=1006,ua=1007,sy=1007,Wi=1008,oy=1008,lr=1009,Vd=1010,Gd=1011,Ro=1012,ah=1013,Er=1014,fi=1015,No=1016,lh=1017,ch=1018,Os=1020,Hd=35902,Wd=1021,Xd=1022,ti=1023,Yd=1024,qd=1025,Ps=1026,Fs=1027,hh=1028,Xa=1029,jd=1030,uh=1031,ay=1032,dh=1033,da=33776,fa=33777,pa=33778,ma=33779,Sc=35840,Mc=35841,wc=35842,Ec=35843,Tc=36196,Ac=37492,Cc=37496,Rc=37808,Pc=37809,Ic=37810,Dc=37811,Uc=37812,Lc=37813,Nc=37814,Oc=37815,Fc=37816,kc=37817,Bc=37818,zc=37819,Vc=37820,Gc=37821,ga=36492,Hc=36494,Wc=36495,Zd=36283,Xc=36284,Yc=36285,qc=36286,_v=2200,yv=2201,xv=2202,Ta=2300,jc=2301,ac=2302,Es=2400,Ts=2401,Aa=2402,fh=2500,Jd=2501,ly=0,cy=1,hy=2,bv=3200,Kd=3201,uy=3202,dy=3203,Yr=0,Sv=1,yr="",nn="srgb",ks="srgb-linear",Ca="linear",qt="srgb",fy=0,_s=7680,py=7681,my=7682,gy=7683,vy=34055,_y=34056,yy=5386,xy=512,by=513,Sy=514,My=515,wy=516,Ey=517,Ty=518,pd=519,Mv=512,wv=513,Ev=514,Qd=515,Tv=516,Av=517,Cv=518,Rv=519,Ra=35044,Ay=35048,Cy=35040,Ry=35045,Py=35049,Iy=35041,Dy=35046,Uy=35050,Ly=35042,Ny="100",md="300 es",Xi=2e3,Pa=2001,Oy={COMPUTE:"compute",RENDER:"render"};class cr{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){const n=this._listeners;return n===void 0?!1:n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){const n=this._listeners;if(n===void 0)return;const i=n[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const n=t[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,o=i.length;r<o;r++)i[r].call(this,e);e.target=null}}}const Vn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let cp=1234567;const Is=Math.PI/180,Po=180/Math.PI;function Ci(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Vn[s&255]+Vn[s>>8&255]+Vn[s>>16&255]+Vn[s>>24&255]+"-"+Vn[e&255]+Vn[e>>8&255]+"-"+Vn[e>>16&15|64]+Vn[e>>24&255]+"-"+Vn[t&63|128]+Vn[t>>8&255]+"-"+Vn[t>>16&255]+Vn[t>>24&255]+Vn[n&255]+Vn[n>>8&255]+Vn[n>>16&255]+Vn[n>>24&255]).toLowerCase()}function Mt(s,e,t){return Math.max(e,Math.min(t,s))}function $d(s,e){return(s%e+e)%e}function Fy(s,e,t,n,i){return n+(s-e)*(i-n)/(t-e)}function ky(s,e,t){return s!==e?(t-s)/(e-s):0}function va(s,e,t){return(1-t)*s+t*e}function By(s,e,t,n){return va(s,e,1-Math.exp(-t*n))}function zy(s,e=1){return e-Math.abs($d(s,e*2)-e)}function Vy(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*(3-2*s))}function Gy(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*s*(s*(s*6-15)+10))}function Hy(s,e){return s+Math.floor(Math.random()*(e-s+1))}function Wy(s,e){return s+Math.random()*(e-s)}function Xy(s){return s*(.5-Math.random())}function Yy(s){s!==void 0&&(cp=s);let e=cp+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function qy(s){return s*Is}function jy(s){return s*Po}function Zy(s){return(s&s-1)===0&&s!==0}function Jy(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function Ky(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function Qy(s,e,t,n,i){const r=Math.cos,o=Math.sin,a=r(t/2),l=o(t/2),c=r((e+n)/2),h=o((e+n)/2),u=r((e-n)/2),d=o((e-n)/2),f=r((n-e)/2),p=o((n-e)/2);switch(i){case"XYX":s.set(a*h,l*u,l*d,a*c);break;case"YZY":s.set(l*d,a*h,l*u,a*c);break;case"ZXZ":s.set(l*u,l*d,a*h,a*c);break;case"XZX":s.set(a*h,l*p,l*f,a*c);break;case"YXY":s.set(l*f,a*h,l*p,a*c);break;case"ZYZ":s.set(l*p,l*f,a*h,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function ei(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function At(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const nr={DEG2RAD:Is,RAD2DEG:Po,generateUUID:Ci,clamp:Mt,euclideanModulo:$d,mapLinear:Fy,inverseLerp:ky,lerp:va,damp:By,pingpong:zy,smoothstep:Vy,smootherstep:Gy,randInt:Hy,randFloat:Wy,randFloatSpread:Xy,seededRandom:Yy,degToRad:qy,radToDeg:jy,isPowerOfTwo:Zy,ceilPowerOfTwo:Jy,floorPowerOfTwo:Ky,setQuaternionFromProperEuler:Qy,normalize:At,denormalize:ei};class ve{constructor(e=0,t=0){ve.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Mt(this.x,e.x,t.x),this.y=Mt(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=Mt(this.x,e,t),this.y=Mt(this.y,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Mt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Mt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,o=this.y-e.y;return this.x=r*n-o*i+e.x,this.y=r*i+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class St{constructor(e,t,n,i,r,o,a,l,c){St.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,o,a,l,c)}set(e,t,n,i,r,o,a,l,c){const h=this.elements;return h[0]=e,h[1]=i,h[2]=a,h[3]=t,h[4]=r,h[5]=l,h[6]=n,h[7]=o,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],h=n[4],u=n[7],d=n[2],f=n[5],p=n[8],v=i[0],m=i[3],g=i[6],x=i[1],y=i[4],_=i[7],E=i[2],w=i[5],M=i[8];return r[0]=o*v+a*x+l*E,r[3]=o*m+a*y+l*w,r[6]=o*g+a*_+l*M,r[1]=c*v+h*x+u*E,r[4]=c*m+h*y+u*w,r[7]=c*g+h*_+u*M,r[2]=d*v+f*x+p*E,r[5]=d*m+f*y+p*w,r[8]=d*g+f*_+p*M,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],a=e[5],l=e[6],c=e[7],h=e[8];return t*o*h-t*a*c-n*r*h+n*a*l+i*r*c-i*o*l}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],a=e[5],l=e[6],c=e[7],h=e[8],u=h*o-a*c,d=a*l-h*r,f=c*r-o*l,p=t*u+n*d+i*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const v=1/p;return e[0]=u*v,e[1]=(i*c-h*n)*v,e[2]=(a*n-i*o)*v,e[3]=d*v,e[4]=(h*t-i*l)*v,e[5]=(i*r-a*t)*v,e[6]=f*v,e[7]=(n*l-c*t)*v,e[8]=(o*t-n*r)*v,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,o,a){const l=Math.cos(r),c=Math.sin(r);return this.set(n*l,n*c,-n*(l*o+c*a)+o+e,-i*c,i*l,-i*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(tu.makeScale(e,t)),this}rotate(e){return this.premultiply(tu.makeRotation(-e)),this}translate(e,t){return this.premultiply(tu.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const tu=new St;function Pv(s){for(let e=s.length-1;e>=0;--e)if(s[e]>=65535)return!0;return!1}const $y={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Mo(s,e){return new $y[s](e)}function Ia(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function Iv(){const s=Ia("canvas");return s.style.display="block",s}const hp={};function bo(s){s in hp||(hp[s]=!0,console.warn(s))}function ex(s,e,t){return new Promise(function(n,i){function r(){switch(s.clientWaitSync(e,s.SYNC_FLUSH_COMMANDS_BIT,0)){case s.WAIT_FAILED:i();break;case s.TIMEOUT_EXPIRED:setTimeout(r,t);break;default:n()}}setTimeout(r,t)})}function tx(s){const e=s.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function nx(s){const e=s.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const up=new St().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),dp=new St().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function ix(){const s={enabled:!0,workingColorSpace:ks,spaces:{},convert:function(i,r,o){return this.enabled===!1||r===o||!r||!o||(this.spaces[r].transfer===qt&&(i.r=Mr(i.r),i.g=Mr(i.g),i.b=Mr(i.b)),this.spaces[r].primaries!==this.spaces[o].primaries&&(i.applyMatrix3(this.spaces[r].toXYZ),i.applyMatrix3(this.spaces[o].fromXYZ)),this.spaces[o].transfer===qt&&(i.r=Co(i.r),i.g=Co(i.g),i.b=Co(i.b))),i},fromWorkingColorSpace:function(i,r){return this.convert(i,this.workingColorSpace,r)},toWorkingColorSpace:function(i,r){return this.convert(i,r,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===yr?Ca:this.spaces[i].transfer},getLuminanceCoefficients:function(i,r=this.workingColorSpace){return i.fromArray(this.spaces[r].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,r,o){return i.copy(this.spaces[r].toXYZ).multiply(this.spaces[o].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],n=[.3127,.329];return s.define({[ks]:{primaries:e,whitePoint:n,transfer:Ca,toXYZ:up,fromXYZ:dp,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:nn},outputColorSpaceConfig:{drawingBufferColorSpace:nn}},[nn]:{primaries:e,whitePoint:n,transfer:qt,toXYZ:up,fromXYZ:dp,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:nn}}}),s}const It=ix();function Mr(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function Co(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}let $s;class Dv{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{$s===void 0&&($s=Ia("canvas")),$s.width=e.width,$s.height=e.height;const n=$s.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=$s}return t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Ia("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let o=0;o<r.length;o++)r[o]=Mr(r[o]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Mr(t[n]/255)*255):t[n]=Mr(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let rx=0;class As{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:rx++}),this.uuid=Ci(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?r.push(nu(i[o].image)):r.push(nu(i[o]))}else r=nu(i);n.url=r}return t||(e.images[this.uuid]=n),n}}function nu(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?Dv.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let sx=0;class cn extends cr{constructor(e=cn.DEFAULT_IMAGE,t=cn.DEFAULT_MAPPING,n=di,i=di,r=_n,o=Wi,a=ti,l=lr,c=cn.DEFAULT_ANISOTROPY,h=yr){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:sx++}),this.uuid=Ci(),this.name="",this.source=new As(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new ve(0,0),this.repeat=new ve(1,1),this.center=new ve(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new St,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==oh)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Hi:e.x=e.x-Math.floor(e.x);break;case di:e.x=e.x<0?0:1;break;case Ea:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Hi:e.y=e.y-Math.floor(e.y);break;case di:e.y=e.y<0?0:1;break;case Ea:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}cn.DEFAULT_IMAGE=null;cn.DEFAULT_MAPPING=oh;cn.DEFAULT_ANISOTROPY=1;class Tt{constructor(e=0,t=0,n=0,i=1){Tt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*i+o[12]*r,this.y=o[1]*t+o[5]*n+o[9]*i+o[13]*r,this.z=o[2]*t+o[6]*n+o[10]*i+o[14]*r,this.w=o[3]*t+o[7]*n+o[11]*i+o[15]*r,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const l=e.elements,c=l[0],h=l[4],u=l[8],d=l[1],f=l[5],p=l[9],v=l[2],m=l[6],g=l[10];if(Math.abs(h-d)<.01&&Math.abs(u-v)<.01&&Math.abs(p-m)<.01){if(Math.abs(h+d)<.1&&Math.abs(u+v)<.1&&Math.abs(p+m)<.1&&Math.abs(c+f+g-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const y=(c+1)/2,_=(f+1)/2,E=(g+1)/2,w=(h+d)/4,M=(u+v)/4,T=(p+m)/4;return y>_&&y>E?y<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(y),i=w/n,r=M/n):_>E?_<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(_),n=w/i,r=T/i):E<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(E),n=M/r,i=T/r),this.set(n,i,r,t),this}let x=Math.sqrt((m-p)*(m-p)+(u-v)*(u-v)+(d-h)*(d-h));return Math.abs(x)<.001&&(x=1),this.x=(m-p)/x,this.y=(u-v)/x,this.z=(d-h)/x,this.w=Math.acos((c+f+g-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Mt(this.x,e.x,t.x),this.y=Mt(this.y,e.y,t.y),this.z=Mt(this.z,e.z,t.z),this.w=Mt(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=Mt(this.x,e,t),this.y=Mt(this.y,e,t),this.z=Mt(this.z,e,t),this.w=Mt(this.w,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Mt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class ph extends cr{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Tt(0,0,e,t),this.scissorTest=!1,this.viewport=new Tt(0,0,e,t);const i={width:e,height:t,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:_n,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},n);const r=new cn(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);r.flipY=!1,r.generateMipmaps=n.generateMipmaps,r.internalFormat=n.internalFormat,this.textures=[];const o=n.count;for(let a=0;a<o;a++)this.textures[a]=r.clone(),this.textures[a].isRenderTargetTexture=!0,this.textures[a].renderTarget=this;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,r=this.textures.length;i<r;i++)this.textures[i].image.width=e,this.textures[i].image.height=t,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let n=0,i=e.textures.length;n<i;n++)this.textures[n]=e.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0,this.textures[n].renderTarget=this;const t=Object.assign({},e.texture.image);return this.texture.source=new As(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Ni extends ph{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class Ya extends cn{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=On,this.minFilter=On,this.wrapR=di,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class ox extends Ni{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new Ya(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class mh extends cn{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=On,this.minFilter=On,this.wrapR=di,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ax extends Ni{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new mh(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class hn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,r,o,a){let l=n[i+0],c=n[i+1],h=n[i+2],u=n[i+3];const d=r[o+0],f=r[o+1],p=r[o+2],v=r[o+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=h,e[t+3]=u;return}if(a===1){e[t+0]=d,e[t+1]=f,e[t+2]=p,e[t+3]=v;return}if(u!==v||l!==d||c!==f||h!==p){let m=1-a;const g=l*d+c*f+h*p+u*v,x=g>=0?1:-1,y=1-g*g;if(y>Number.EPSILON){const E=Math.sqrt(y),w=Math.atan2(E,g*x);m=Math.sin(m*w)/E,a=Math.sin(a*w)/E}const _=a*x;if(l=l*m+d*_,c=c*m+f*_,h=h*m+p*_,u=u*m+v*_,m===1-a){const E=1/Math.sqrt(l*l+c*c+h*h+u*u);l*=E,c*=E,h*=E,u*=E}}e[t]=l,e[t+1]=c,e[t+2]=h,e[t+3]=u}static multiplyQuaternionsFlat(e,t,n,i,r,o){const a=n[i],l=n[i+1],c=n[i+2],h=n[i+3],u=r[o],d=r[o+1],f=r[o+2],p=r[o+3];return e[t]=a*p+h*u+l*f-c*d,e[t+1]=l*p+h*d+c*u-a*f,e[t+2]=c*p+h*f+a*d-l*u,e[t+3]=h*p-a*u-l*d-c*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,i=e._y,r=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(n/2),h=a(i/2),u=a(r/2),d=l(n/2),f=l(i/2),p=l(r/2);switch(o){case"XYZ":this._x=d*h*u+c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u-d*f*p;break;case"YXZ":this._x=d*h*u+c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u+d*f*p;break;case"ZXY":this._x=d*h*u-c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u-d*f*p;break;case"ZYX":this._x=d*h*u-c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u+d*f*p;break;case"YZX":this._x=d*h*u+c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u-d*f*p;break;case"XZY":this._x=d*h*u-c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],o=t[1],a=t[5],l=t[9],c=t[2],h=t[6],u=t[10],d=n+a+u;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(h-l)*f,this._y=(r-c)*f,this._z=(o-i)*f}else if(n>a&&n>u){const f=2*Math.sqrt(1+n-a-u);this._w=(h-l)/f,this._x=.25*f,this._y=(i+o)/f,this._z=(r+c)/f}else if(a>u){const f=2*Math.sqrt(1+a-n-u);this._w=(r-c)/f,this._x=(i+o)/f,this._y=.25*f,this._z=(l+h)/f}else{const f=2*Math.sqrt(1+u-n-a);this._w=(o-i)/f,this._x=(r+c)/f,this._y=(l+h)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Mt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,o=e._w,a=t._x,l=t._y,c=t._z,h=t._w;return this._x=n*h+o*a+i*c-r*l,this._y=i*h+o*l+r*a-n*c,this._z=r*h+o*c+n*l-i*a,this._w=o*h-n*a-i*l-r*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,r=this._z,o=this._w;let a=o*e._w+n*e._x+i*e._y+r*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=n,this._y=i,this._z=r,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-t;return this._w=f*o+t*this._w,this._x=f*n+t*this._x,this._y=f*i+t*this._y,this._z=f*r+t*this._z,this.normalize(),this}const c=Math.sqrt(l),h=Math.atan2(c,a),u=Math.sin((1-t)*h)/c,d=Math.sin(t*h)/c;return this._w=o*u+this._w*d,this._x=n*u+this._x*d,this._y=i*u+this._y*d,this._z=r*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),r=Math.sqrt(n);return this.set(i*Math.sin(e),i*Math.cos(e),r*Math.sin(t),r*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class N{constructor(e=0,t=0,n=0){N.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(fp.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(fp.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,o=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*o,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*o,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,o=e.y,a=e.z,l=e.w,c=2*(o*i-a*n),h=2*(a*t-r*i),u=2*(r*n-o*t);return this.x=t+l*c+o*u-a*h,this.y=n+l*h+a*c-r*u,this.z=i+l*u+r*h-o*c,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Mt(this.x,e.x,t.x),this.y=Mt(this.y,e.y,t.y),this.z=Mt(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=Mt(this.x,e,t),this.y=Mt(this.y,e,t),this.z=Mt(this.z,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Mt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,o=t.x,a=t.y,l=t.z;return this.x=i*l-r*a,this.y=r*o-n*l,this.z=n*a-i*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return iu.copy(this).projectOnVector(e),this.sub(iu)}reflect(e){return this.sub(iu.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Mt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const iu=new N,fp=new hn;class yn{constructor(e=new N(1/0,1/0,1/0),t=new N(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(zi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(zi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=zi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const r=n.getAttribute("position");if(t===!0&&r!==void 0&&e.isInstancedMesh!==!0)for(let o=0,a=r.count;o<a;o++)e.isMesh===!0?e.getVertexPosition(o,zi):zi.fromBufferAttribute(r,o),zi.applyMatrix4(e.matrixWorld),this.expandByPoint(zi);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),rl.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),rl.copy(n.boundingBox)),rl.applyMatrix4(e.matrixWorld),this.union(rl)}const i=e.children;for(let r=0,o=i.length;r<o;r++)this.expandByObject(i[r],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,zi),zi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(qo),sl.subVectors(this.max,qo),eo.subVectors(e.a,qo),to.subVectors(e.b,qo),no.subVectors(e.c,qo),Pr.subVectors(to,eo),Ir.subVectors(no,to),ns.subVectors(eo,no);let t=[0,-Pr.z,Pr.y,0,-Ir.z,Ir.y,0,-ns.z,ns.y,Pr.z,0,-Pr.x,Ir.z,0,-Ir.x,ns.z,0,-ns.x,-Pr.y,Pr.x,0,-Ir.y,Ir.x,0,-ns.y,ns.x,0];return!ru(t,eo,to,no,sl)||(t=[1,0,0,0,1,0,0,0,1],!ru(t,eo,to,no,sl))?!1:(ol.crossVectors(Pr,Ir),t=[ol.x,ol.y,ol.z],ru(t,eo,to,no,sl))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,zi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(zi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(ur[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),ur[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),ur[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),ur[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),ur[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),ur[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),ur[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),ur[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(ur),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const ur=[new N,new N,new N,new N,new N,new N,new N,new N],zi=new N,rl=new yn,eo=new N,to=new N,no=new N,Pr=new N,Ir=new N,ns=new N,qo=new N,sl=new N,ol=new N,is=new N;function ru(s,e,t,n,i){for(let r=0,o=s.length-3;r<=o;r+=3){is.fromArray(s,r);const a=i.x*Math.abs(is.x)+i.y*Math.abs(is.y)+i.z*Math.abs(is.z),l=e.dot(is),c=t.dot(is),h=n.dot(is);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>a)return!1}return!0}const lx=new yn,jo=new N,su=new N;class Mn{constructor(e=new N,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):lx.setFromPoints(e).getCenter(n);let i=0;for(let r=0,o=e.length;r<o;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;jo.subVectors(e,this.center);const t=jo.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(jo,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(su.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(jo.copy(e.center).add(su)),this.expandByPoint(jo.copy(e.center).sub(su))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const dr=new N,ou=new N,al=new N,Dr=new N,au=new N,ll=new N,lu=new N;class qr{constructor(e=new N,t=new N(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,dr)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=dr.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(dr.copy(this.origin).addScaledVector(this.direction,t),dr.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){ou.copy(e).add(t).multiplyScalar(.5),al.copy(t).sub(e).normalize(),Dr.copy(this.origin).sub(ou);const r=e.distanceTo(t)*.5,o=-this.direction.dot(al),a=Dr.dot(this.direction),l=-Dr.dot(al),c=Dr.lengthSq(),h=Math.abs(1-o*o);let u,d,f,p;if(h>0)if(u=o*l-a,d=o*a-l,p=r*h,u>=0)if(d>=-p)if(d<=p){const v=1/h;u*=v,d*=v,f=u*(u+o*d+2*a)+d*(o*u+d+2*l)+c}else d=r,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*l)+c;else d=-r,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*l)+c;else d<=-p?(u=Math.max(0,-(-o*r+a)),d=u>0?-r:Math.min(Math.max(-r,-l),r),f=-u*u+d*(d+2*l)+c):d<=p?(u=0,d=Math.min(Math.max(-r,-l),r),f=d*(d+2*l)+c):(u=Math.max(0,-(o*r+a)),d=u>0?r:Math.min(Math.max(-r,-l),r),f=-u*u+d*(d+2*l)+c);else d=o>0?-r:r,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*l)+c;return n&&n.copy(this.origin).addScaledVector(this.direction,u),i&&i.copy(ou).addScaledVector(al,d),f}intersectSphere(e,t){dr.subVectors(e.center,this.origin);const n=dr.dot(this.direction),i=dr.dot(dr)-n*n,r=e.radius*e.radius;if(i>r)return null;const o=Math.sqrt(r-i),a=n-o,l=n+o;return l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,o,a,l;const c=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,d=this.origin;return c>=0?(n=(e.min.x-d.x)*c,i=(e.max.x-d.x)*c):(n=(e.max.x-d.x)*c,i=(e.min.x-d.x)*c),h>=0?(r=(e.min.y-d.y)*h,o=(e.max.y-d.y)*h):(r=(e.max.y-d.y)*h,o=(e.min.y-d.y)*h),n>o||r>i||((r>n||isNaN(n))&&(n=r),(o<i||isNaN(i))&&(i=o),u>=0?(a=(e.min.z-d.z)*u,l=(e.max.z-d.z)*u):(a=(e.max.z-d.z)*u,l=(e.min.z-d.z)*u),n>l||a>i)||((a>n||n!==n)&&(n=a),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,dr)!==null}intersectTriangle(e,t,n,i,r){au.subVectors(t,e),ll.subVectors(n,e),lu.crossVectors(au,ll);let o=this.direction.dot(lu),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Dr.subVectors(this.origin,e);const l=a*this.direction.dot(ll.crossVectors(Dr,ll));if(l<0)return null;const c=a*this.direction.dot(au.cross(Dr));if(c<0||l+c>o)return null;const h=-a*Dr.dot(lu);return h<0?null:this.at(h/o,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class rt{constructor(e,t,n,i,r,o,a,l,c,h,u,d,f,p,v,m){rt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,o,a,l,c,h,u,d,f,p,v,m)}set(e,t,n,i,r,o,a,l,c,h,u,d,f,p,v,m){const g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=i,g[1]=r,g[5]=o,g[9]=a,g[13]=l,g[2]=c,g[6]=h,g[10]=u,g[14]=d,g[3]=f,g[7]=p,g[11]=v,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new rt().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/io.setFromMatrixColumn(e,0).length(),r=1/io.setFromMatrixColumn(e,1).length(),o=1/io.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,r=e.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(i),c=Math.sin(i),h=Math.cos(r),u=Math.sin(r);if(e.order==="XYZ"){const d=o*h,f=o*u,p=a*h,v=a*u;t[0]=l*h,t[4]=-l*u,t[8]=c,t[1]=f+p*c,t[5]=d-v*c,t[9]=-a*l,t[2]=v-d*c,t[6]=p+f*c,t[10]=o*l}else if(e.order==="YXZ"){const d=l*h,f=l*u,p=c*h,v=c*u;t[0]=d+v*a,t[4]=p*a-f,t[8]=o*c,t[1]=o*u,t[5]=o*h,t[9]=-a,t[2]=f*a-p,t[6]=v+d*a,t[10]=o*l}else if(e.order==="ZXY"){const d=l*h,f=l*u,p=c*h,v=c*u;t[0]=d-v*a,t[4]=-o*u,t[8]=p+f*a,t[1]=f+p*a,t[5]=o*h,t[9]=v-d*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const d=o*h,f=o*u,p=a*h,v=a*u;t[0]=l*h,t[4]=p*c-f,t[8]=d*c+v,t[1]=l*u,t[5]=v*c+d,t[9]=f*c-p,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const d=o*l,f=o*c,p=a*l,v=a*c;t[0]=l*h,t[4]=v-d*u,t[8]=p*u+f,t[1]=u,t[5]=o*h,t[9]=-a*h,t[2]=-c*h,t[6]=f*u+p,t[10]=d-v*u}else if(e.order==="XZY"){const d=o*l,f=o*c,p=a*l,v=a*c;t[0]=l*h,t[4]=-u,t[8]=c*h,t[1]=d*u+v,t[5]=o*h,t[9]=f*u-p,t[2]=p*u-f,t[6]=a*h,t[10]=v*u+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(cx,e,hx)}lookAt(e,t,n){const i=this.elements;return Si.subVectors(e,t),Si.lengthSq()===0&&(Si.z=1),Si.normalize(),Ur.crossVectors(n,Si),Ur.lengthSq()===0&&(Math.abs(n.z)===1?Si.x+=1e-4:Si.z+=1e-4,Si.normalize(),Ur.crossVectors(n,Si)),Ur.normalize(),cl.crossVectors(Si,Ur),i[0]=Ur.x,i[4]=cl.x,i[8]=Si.x,i[1]=Ur.y,i[5]=cl.y,i[9]=Si.y,i[2]=Ur.z,i[6]=cl.z,i[10]=Si.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],h=n[1],u=n[5],d=n[9],f=n[13],p=n[2],v=n[6],m=n[10],g=n[14],x=n[3],y=n[7],_=n[11],E=n[15],w=i[0],M=i[4],T=i[8],S=i[12],b=i[1],I=i[5],D=i[9],G=i[13],H=i[2],$=i[6],F=i[10],Z=i[14],q=i[3],j=i[7],J=i[11],B=i[15];return r[0]=o*w+a*b+l*H+c*q,r[4]=o*M+a*I+l*$+c*j,r[8]=o*T+a*D+l*F+c*J,r[12]=o*S+a*G+l*Z+c*B,r[1]=h*w+u*b+d*H+f*q,r[5]=h*M+u*I+d*$+f*j,r[9]=h*T+u*D+d*F+f*J,r[13]=h*S+u*G+d*Z+f*B,r[2]=p*w+v*b+m*H+g*q,r[6]=p*M+v*I+m*$+g*j,r[10]=p*T+v*D+m*F+g*J,r[14]=p*S+v*G+m*Z+g*B,r[3]=x*w+y*b+_*H+E*q,r[7]=x*M+y*I+_*$+E*j,r[11]=x*T+y*D+_*F+E*J,r[15]=x*S+y*G+_*Z+E*B,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],o=e[1],a=e[5],l=e[9],c=e[13],h=e[2],u=e[6],d=e[10],f=e[14],p=e[3],v=e[7],m=e[11],g=e[15];return p*(+r*l*u-i*c*u-r*a*d+n*c*d+i*a*f-n*l*f)+v*(+t*l*f-t*c*d+r*o*d-i*o*f+i*c*h-r*l*h)+m*(+t*c*u-t*a*f-r*o*u+n*o*f+r*a*h-n*c*h)+g*(-i*a*h-t*l*u+t*a*d+i*o*u-n*o*d+n*l*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],a=e[5],l=e[6],c=e[7],h=e[8],u=e[9],d=e[10],f=e[11],p=e[12],v=e[13],m=e[14],g=e[15],x=u*m*c-v*d*c+v*l*f-a*m*f-u*l*g+a*d*g,y=p*d*c-h*m*c-p*l*f+o*m*f+h*l*g-o*d*g,_=h*v*c-p*u*c+p*a*f-o*v*f-h*a*g+o*u*g,E=p*u*l-h*v*l-p*a*d+o*v*d+h*a*m-o*u*m,w=t*x+n*y+i*_+r*E;if(w===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/w;return e[0]=x*M,e[1]=(v*d*r-u*m*r-v*i*f+n*m*f+u*i*g-n*d*g)*M,e[2]=(a*m*r-v*l*r+v*i*c-n*m*c-a*i*g+n*l*g)*M,e[3]=(u*l*r-a*d*r-u*i*c+n*d*c+a*i*f-n*l*f)*M,e[4]=y*M,e[5]=(h*m*r-p*d*r+p*i*f-t*m*f-h*i*g+t*d*g)*M,e[6]=(p*l*r-o*m*r-p*i*c+t*m*c+o*i*g-t*l*g)*M,e[7]=(o*d*r-h*l*r+h*i*c-t*d*c-o*i*f+t*l*f)*M,e[8]=_*M,e[9]=(p*u*r-h*v*r-p*n*f+t*v*f+h*n*g-t*u*g)*M,e[10]=(o*v*r-p*a*r+p*n*c-t*v*c-o*n*g+t*a*g)*M,e[11]=(h*a*r-o*u*r-h*n*c+t*u*c+o*n*f-t*a*f)*M,e[12]=E*M,e[13]=(h*v*i-p*u*i+p*n*d-t*v*d-h*n*m+t*u*m)*M,e[14]=(p*a*i-o*v*i-p*n*l+t*v*l+o*n*m-t*a*m)*M,e[15]=(o*u*i-h*a*i+h*n*l-t*u*l-o*n*d+t*a*d)*M,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,o=e.x,a=e.y,l=e.z,c=r*o,h=r*a;return this.set(c*o+n,c*a-i*l,c*l+i*a,0,c*a+i*l,h*a+n,h*l-i*o,0,c*l-i*a,h*l+i*o,r*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,o){return this.set(1,n,r,0,e,1,o,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,o=t._y,a=t._z,l=t._w,c=r+r,h=o+o,u=a+a,d=r*c,f=r*h,p=r*u,v=o*h,m=o*u,g=a*u,x=l*c,y=l*h,_=l*u,E=n.x,w=n.y,M=n.z;return i[0]=(1-(v+g))*E,i[1]=(f+_)*E,i[2]=(p-y)*E,i[3]=0,i[4]=(f-_)*w,i[5]=(1-(d+g))*w,i[6]=(m+x)*w,i[7]=0,i[8]=(p+y)*M,i[9]=(m-x)*M,i[10]=(1-(d+v))*M,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=io.set(i[0],i[1],i[2]).length();const o=io.set(i[4],i[5],i[6]).length(),a=io.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],Vi.copy(this);const c=1/r,h=1/o,u=1/a;return Vi.elements[0]*=c,Vi.elements[1]*=c,Vi.elements[2]*=c,Vi.elements[4]*=h,Vi.elements[5]*=h,Vi.elements[6]*=h,Vi.elements[8]*=u,Vi.elements[9]*=u,Vi.elements[10]*=u,t.setFromRotationMatrix(Vi),n.x=r,n.y=o,n.z=a,this}makePerspective(e,t,n,i,r,o,a=Xi){const l=this.elements,c=2*r/(t-e),h=2*r/(n-i),u=(t+e)/(t-e),d=(n+i)/(n-i);let f,p;if(a===Xi)f=-(o+r)/(o-r),p=-2*o*r/(o-r);else if(a===Pa)f=-o/(o-r),p=-o*r/(o-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return l[0]=c,l[4]=0,l[8]=u,l[12]=0,l[1]=0,l[5]=h,l[9]=d,l[13]=0,l[2]=0,l[6]=0,l[10]=f,l[14]=p,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,n,i,r,o,a=Xi){const l=this.elements,c=1/(t-e),h=1/(n-i),u=1/(o-r),d=(t+e)*c,f=(n+i)*h;let p,v;if(a===Xi)p=(o+r)*u,v=-2*u;else if(a===Pa)p=r*u,v=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-d,l[1]=0,l[5]=2*h,l[9]=0,l[13]=-f,l[2]=0,l[6]=0,l[10]=v,l[14]=-p,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const io=new N,Vi=new rt,cx=new N(0,0,0),hx=new N(1,1,1),Ur=new N,cl=new N,Si=new N,pp=new rt,mp=new hn;class Ri{constructor(e=0,t=0,n=0,i=Ri.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],o=i[4],a=i[8],l=i[1],c=i[5],h=i[9],u=i[2],d=i[6],f=i[10];switch(t){case"XYZ":this._y=Math.asin(Mt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,f),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-Mt(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(Mt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,f),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-Mt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(Mt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-Mt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-h,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return pp.makeRotationFromQuaternion(e),this.setFromRotationMatrix(pp,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return mp.setFromEuler(this),this.setFromQuaternion(mp,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ri.DEFAULT_ORDER="XYZ";class gh{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let ux=0;const gp=new N,ro=new hn,fr=new rt,hl=new N,Zo=new N,dx=new N,fx=new hn,vp=new N(1,0,0),_p=new N(0,1,0),yp=new N(0,0,1),xp={type:"added"},px={type:"removed"},so={type:"childadded",child:null},cu={type:"childremoved",child:null};class Ft extends cr{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:ux++}),this.uuid=Ci(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ft.DEFAULT_UP.clone();const e=new N,t=new Ri,n=new hn,i=new N(1,1,1);function r(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new rt},normalMatrix:{value:new St}}),this.matrix=new rt,this.matrixWorld=new rt,this.matrixAutoUpdate=Ft.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Ft.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new gh,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return ro.setFromAxisAngle(e,t),this.quaternion.multiply(ro),this}rotateOnWorldAxis(e,t){return ro.setFromAxisAngle(e,t),this.quaternion.premultiply(ro),this}rotateX(e){return this.rotateOnAxis(vp,e)}rotateY(e){return this.rotateOnAxis(_p,e)}rotateZ(e){return this.rotateOnAxis(yp,e)}translateOnAxis(e,t){return gp.copy(e).applyQuaternion(this.quaternion),this.position.add(gp.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(vp,e)}translateY(e){return this.translateOnAxis(_p,e)}translateZ(e){return this.translateOnAxis(yp,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(fr.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?hl.copy(e):hl.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Zo.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?fr.lookAt(Zo,hl,this.up):fr.lookAt(hl,Zo,this.up),this.quaternion.setFromRotationMatrix(fr),i&&(fr.extractRotation(i.matrixWorld),ro.setFromRotationMatrix(fr),this.quaternion.premultiply(ro.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(xp),so.child=e,this.dispatchEvent(so),so.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(px),cu.child=e,this.dispatchEvent(cu),cu.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),fr.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),fr.multiply(e.parent.matrixWorld)),e.applyMatrix4(fr),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(xp),so.child=e,this.dispatchEvent(so),so.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const i=this.children;for(let r=0,o=i.length;r<o;r++)i[r].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Zo,e,dx),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Zo,fx,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const i=this.children;for(let r=0,o=i.length;r<o;r++)i[r].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function r(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,h=l.length;c<h;c++){const u=l[c];r(e.shapes,u)}else r(e.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(r(e.materials,this.material[l]));i.material=a}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];i.animations.push(r(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),h=o(e.images),u=o(e.shapes),d=o(e.skeletons),f=o(e.animations),p=o(e.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),h.length>0&&(n.images=h),u.length>0&&(n.shapes=u),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),p.length>0&&(n.nodes=p)}return n.object=i,n;function o(a){const l=[];for(const c in a){const h=a[c];delete h.metadata,l.push(h)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Ft.DEFAULT_UP=new N(0,1,0);Ft.DEFAULT_MATRIX_AUTO_UPDATE=!0;Ft.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Gi=new N,pr=new N,hu=new N,mr=new N,oo=new N,ao=new N,bp=new N,uu=new N,du=new N,fu=new N,pu=new Tt,mu=new Tt,gu=new Tt;class ui{constructor(e=new N,t=new N,n=new N){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),Gi.subVectors(e,t),i.cross(Gi);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){Gi.subVectors(i,t),pr.subVectors(n,t),hu.subVectors(e,t);const o=Gi.dot(Gi),a=Gi.dot(pr),l=Gi.dot(hu),c=pr.dot(pr),h=pr.dot(hu),u=o*c-a*a;if(u===0)return r.set(0,0,0),null;const d=1/u,f=(c*l-a*h)*d,p=(o*h-a*l)*d;return r.set(1-f-p,p,f)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,mr)===null?!1:mr.x>=0&&mr.y>=0&&mr.x+mr.y<=1}static getInterpolation(e,t,n,i,r,o,a,l){return this.getBarycoord(e,t,n,i,mr)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(r,mr.x),l.addScaledVector(o,mr.y),l.addScaledVector(a,mr.z),l)}static getInterpolatedAttribute(e,t,n,i,r,o){return pu.setScalar(0),mu.setScalar(0),gu.setScalar(0),pu.fromBufferAttribute(e,t),mu.fromBufferAttribute(e,n),gu.fromBufferAttribute(e,i),o.setScalar(0),o.addScaledVector(pu,r.x),o.addScaledVector(mu,r.y),o.addScaledVector(gu,r.z),o}static isFrontFacing(e,t,n,i){return Gi.subVectors(n,t),pr.subVectors(e,t),Gi.cross(pr).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Gi.subVectors(this.c,this.b),pr.subVectors(this.a,this.b),Gi.cross(pr).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ui.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return ui.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,i,r){return ui.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return ui.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ui.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let o,a;oo.subVectors(i,n),ao.subVectors(r,n),uu.subVectors(e,n);const l=oo.dot(uu),c=ao.dot(uu);if(l<=0&&c<=0)return t.copy(n);du.subVectors(e,i);const h=oo.dot(du),u=ao.dot(du);if(h>=0&&u<=h)return t.copy(i);const d=l*u-h*c;if(d<=0&&l>=0&&h<=0)return o=l/(l-h),t.copy(n).addScaledVector(oo,o);fu.subVectors(e,r);const f=oo.dot(fu),p=ao.dot(fu);if(p>=0&&f<=p)return t.copy(r);const v=f*c-l*p;if(v<=0&&c>=0&&p<=0)return a=c/(c-p),t.copy(n).addScaledVector(ao,a);const m=h*p-f*u;if(m<=0&&u-h>=0&&f-p>=0)return bp.subVectors(r,i),a=(u-h)/(u-h+(f-p)),t.copy(i).addScaledVector(bp,a);const g=1/(m+v+d);return o=v*g,a=d*g,t.copy(n).addScaledVector(oo,o).addScaledVector(ao,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const Uv={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Lr={h:0,s:0,l:0},ul={h:0,s:0,l:0};function vu(s,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?s+(e-s)*6*t:t<1/2?e:t<2/3?s+(e-s)*6*(2/3-t):s}class ze{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=nn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,It.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=It.workingColorSpace){return this.r=e,this.g=t,this.b=n,It.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=It.workingColorSpace){if(e=$d(e,1),t=Mt(t,0,1),n=Mt(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,o=2*n-r;this.r=vu(o,r,e+1/3),this.g=vu(o,r,e),this.b=vu(o,r,e-1/3)}return It.toWorkingColorSpace(this,i),this}setStyle(e,t=nn){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],o=r.length;if(o===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=nn){const n=Uv[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Mr(e.r),this.g=Mr(e.g),this.b=Mr(e.b),this}copyLinearToSRGB(e){return this.r=Co(e.r),this.g=Co(e.g),this.b=Co(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=nn){return It.fromWorkingColorSpace(Gn.copy(this),e),Math.round(Mt(Gn.r*255,0,255))*65536+Math.round(Mt(Gn.g*255,0,255))*256+Math.round(Mt(Gn.b*255,0,255))}getHexString(e=nn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=It.workingColorSpace){It.fromWorkingColorSpace(Gn.copy(this),t);const n=Gn.r,i=Gn.g,r=Gn.b,o=Math.max(n,i,r),a=Math.min(n,i,r);let l,c;const h=(a+o)/2;if(a===o)l=0,c=0;else{const u=o-a;switch(c=h<=.5?u/(o+a):u/(2-o-a),o){case n:l=(i-r)/u+(i<r?6:0);break;case i:l=(r-n)/u+2;break;case r:l=(n-i)/u+4;break}l/=6}return e.h=l,e.s=c,e.l=h,e}getRGB(e,t=It.workingColorSpace){return It.fromWorkingColorSpace(Gn.copy(this),t),e.r=Gn.r,e.g=Gn.g,e.b=Gn.b,e}getStyle(e=nn){It.fromWorkingColorSpace(Gn.copy(this),e);const t=Gn.r,n=Gn.g,i=Gn.b;return e!==nn?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(Lr),this.setHSL(Lr.h+e,Lr.s+t,Lr.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Lr),e.getHSL(ul);const n=va(Lr.h,ul.h,t),i=va(Lr.s,ul.s,t),r=va(Lr.l,ul.l,t);return this.setHSL(n,i,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,r=e.elements;return this.r=r[0]*t+r[3]*n+r[6]*i,this.g=r[1]*t+r[4]*n+r[7]*i,this.b=r[2]*t+r[5]*n+r[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Gn=new ze;ze.NAMES=Uv;let mx=0;class Zn extends cr{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:mx++}),this.uuid=Ci(),this.name="",this.type="Material",this.blending=Rs,this.side=ar,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=dc,this.blendDst=fc,this.blendEquation=zr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new ze(0,0,0),this.blendAlpha=0,this.depthFunc=Ns,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=pd,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=_s,this.stencilZFail=_s,this.stencilZPass=_s,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Rs&&(n.blending=this.blending),this.side!==ar&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==dc&&(n.blendSrc=this.blendSrc),this.blendDst!==fc&&(n.blendDst=this.blendDst),this.blendEquation!==zr&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==Ns&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==pd&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==_s&&(n.stencilFail=this.stencilFail),this.stencilZFail!==_s&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==_s&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(r){const o=[];for(const a in r){const l=r[a];delete l.metadata,o.push(l)}return o}if(t){const r=i(e.textures),o=i(e.images);r.length>0&&(n.textures=r),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class Xn extends Zn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new ze(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ri,this.combine=Wa,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const xr=gx();function gx(){const s=new ArrayBuffer(4),e=new Float32Array(s),t=new Uint32Array(s),n=new Uint32Array(512),i=new Uint32Array(512);for(let l=0;l<256;++l){const c=l-127;c<-27?(n[l]=0,n[l|256]=32768,i[l]=24,i[l|256]=24):c<-14?(n[l]=1024>>-c-14,n[l|256]=1024>>-c-14|32768,i[l]=-c-1,i[l|256]=-c-1):c<=15?(n[l]=c+15<<10,n[l|256]=c+15<<10|32768,i[l]=13,i[l|256]=13):c<128?(n[l]=31744,n[l|256]=64512,i[l]=24,i[l|256]=24):(n[l]=31744,n[l|256]=64512,i[l]=13,i[l|256]=13)}const r=new Uint32Array(2048),o=new Uint32Array(64),a=new Uint32Array(64);for(let l=1;l<1024;++l){let c=l<<13,h=0;for(;(c&8388608)===0;)c<<=1,h-=8388608;c&=-8388609,h+=947912704,r[l]=c|h}for(let l=1024;l<2048;++l)r[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)o[l]=l<<23;o[31]=1199570944,o[32]=2147483648;for(let l=33;l<63;++l)o[l]=2147483648+(l-32<<23);o[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(a[l]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:r,exponentTable:o,offsetTable:a}}function ai(s){Math.abs(s)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),s=Mt(s,-65504,65504),xr.floatView[0]=s;const e=xr.uint32View[0],t=e>>23&511;return xr.baseTable[t]+((e&8388607)>>xr.shiftTable[t])}function aa(s){const e=s>>10;return xr.uint32View[0]=xr.mantissaTable[xr.offsetTable[e]+(s&1023)]+xr.exponentTable[e],xr.floatView[0]}const vx={toHalfFloat:ai,fromHalfFloat:aa},bn=new N,dl=new ve;let _x=0;class Et{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:_x++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=Ra,this.updateRanges=[],this.gpuType=fi,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)dl.fromBufferAttribute(this,t),dl.applyMatrix3(e),this.setXY(t,dl.x,dl.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)bn.fromBufferAttribute(this,t),bn.applyMatrix3(e),this.setXYZ(t,bn.x,bn.y,bn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)bn.fromBufferAttribute(this,t),bn.applyMatrix4(e),this.setXYZ(t,bn.x,bn.y,bn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)bn.fromBufferAttribute(this,t),bn.applyNormalMatrix(e),this.setXYZ(t,bn.x,bn.y,bn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)bn.fromBufferAttribute(this,t),bn.transformDirection(e),this.setXYZ(t,bn.x,bn.y,bn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=ei(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=At(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=ei(t,this.array)),t}setX(e,t){return this.normalized&&(t=At(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=ei(t,this.array)),t}setY(e,t){return this.normalized&&(t=At(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=ei(t,this.array)),t}setZ(e,t){return this.normalized&&(t=At(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=ei(t,this.array)),t}setW(e,t){return this.normalized&&(t=At(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=At(t,this.array),n=At(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=At(t,this.array),n=At(n,this.array),i=At(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=At(t,this.array),n=At(n,this.array),i=At(i,this.array),r=At(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Ra&&(e.usage=this.usage),e}}class yx extends Et{constructor(e,t,n){super(new Int8Array(e),t,n)}}class xx extends Et{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class bx extends Et{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class Sx extends Et{constructor(e,t,n){super(new Int16Array(e),t,n)}}class ef extends Et{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Mx extends Et{constructor(e,t,n){super(new Int32Array(e),t,n)}}class tf extends Et{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class wx extends Et{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=aa(this.array[e*this.itemSize]);return this.normalized&&(t=ei(t,this.array)),t}setX(e,t){return this.normalized&&(t=At(t,this.array)),this.array[e*this.itemSize]=ai(t),this}getY(e){let t=aa(this.array[e*this.itemSize+1]);return this.normalized&&(t=ei(t,this.array)),t}setY(e,t){return this.normalized&&(t=At(t,this.array)),this.array[e*this.itemSize+1]=ai(t),this}getZ(e){let t=aa(this.array[e*this.itemSize+2]);return this.normalized&&(t=ei(t,this.array)),t}setZ(e,t){return this.normalized&&(t=At(t,this.array)),this.array[e*this.itemSize+2]=ai(t),this}getW(e){let t=aa(this.array[e*this.itemSize+3]);return this.normalized&&(t=ei(t,this.array)),t}setW(e,t){return this.normalized&&(t=At(t,this.array)),this.array[e*this.itemSize+3]=ai(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=At(t,this.array),n=At(n,this.array)),this.array[e+0]=ai(t),this.array[e+1]=ai(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=At(t,this.array),n=At(n,this.array),i=At(i,this.array)),this.array[e+0]=ai(t),this.array[e+1]=ai(n),this.array[e+2]=ai(i),this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=At(t,this.array),n=At(n,this.array),i=At(i,this.array),r=At(r,this.array)),this.array[e+0]=ai(t),this.array[e+1]=ai(n),this.array[e+2]=ai(i),this.array[e+3]=ai(r),this}}class qe extends Et{constructor(e,t,n){super(new Float32Array(e),t,n)}}let Ex=0;const Di=new rt,_u=new Ft,lo=new N,Mi=new yn,Jo=new yn,Pn=new N;class yt extends cr{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Ex++}),this.uuid=Ci(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Pv(e)?tf:ef)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new St().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Di.makeRotationFromQuaternion(e),this.applyMatrix4(Di),this}rotateX(e){return Di.makeRotationX(e),this.applyMatrix4(Di),this}rotateY(e){return Di.makeRotationY(e),this.applyMatrix4(Di),this}rotateZ(e){return Di.makeRotationZ(e),this.applyMatrix4(Di),this}translate(e,t,n){return Di.makeTranslation(e,t,n),this.applyMatrix4(Di),this}scale(e,t,n){return Di.makeScale(e,t,n),this.applyMatrix4(Di),this}lookAt(e){return _u.lookAt(e),_u.updateMatrix(),this.applyMatrix4(_u.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(lo).negate(),this.translate(lo.x,lo.y,lo.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const n=[];for(let i=0,r=e.length;i<r;i++){const o=e[i];n.push(o.x,o.y,o.z||0)}this.setAttribute("position",new qe(n,3))}else{const n=Math.min(e.length,t.count);for(let i=0;i<n;i++){const r=e[i];t.setXYZ(i,r.x,r.y,r.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new yn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new N(-1/0,-1/0,-1/0),new N(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];Mi.setFromBufferAttribute(r),this.morphTargetsRelative?(Pn.addVectors(this.boundingBox.min,Mi.min),this.boundingBox.expandByPoint(Pn),Pn.addVectors(this.boundingBox.max,Mi.max),this.boundingBox.expandByPoint(Pn)):(this.boundingBox.expandByPoint(Mi.min),this.boundingBox.expandByPoint(Mi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Mn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new N,1/0);return}if(e){const n=this.boundingSphere.center;if(Mi.setFromBufferAttribute(e),t)for(let r=0,o=t.length;r<o;r++){const a=t[r];Jo.setFromBufferAttribute(a),this.morphTargetsRelative?(Pn.addVectors(Mi.min,Jo.min),Mi.expandByPoint(Pn),Pn.addVectors(Mi.max,Jo.max),Mi.expandByPoint(Pn)):(Mi.expandByPoint(Jo.min),Mi.expandByPoint(Jo.max))}Mi.getCenter(n);let i=0;for(let r=0,o=e.count;r<o;r++)Pn.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(Pn));if(t)for(let r=0,o=t.length;r<o;r++){const a=t[r],l=this.morphTargetsRelative;for(let c=0,h=a.count;c<h;c++)Pn.fromBufferAttribute(a,c),l&&(lo.fromBufferAttribute(e,c),Pn.add(lo)),i=Math.max(i,n.distanceToSquared(Pn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,i=t.normal,r=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Et(new Float32Array(4*n.count),4));const o=this.getAttribute("tangent"),a=[],l=[];for(let T=0;T<n.count;T++)a[T]=new N,l[T]=new N;const c=new N,h=new N,u=new N,d=new ve,f=new ve,p=new ve,v=new N,m=new N;function g(T,S,b){c.fromBufferAttribute(n,T),h.fromBufferAttribute(n,S),u.fromBufferAttribute(n,b),d.fromBufferAttribute(r,T),f.fromBufferAttribute(r,S),p.fromBufferAttribute(r,b),h.sub(c),u.sub(c),f.sub(d),p.sub(d);const I=1/(f.x*p.y-p.x*f.y);isFinite(I)&&(v.copy(h).multiplyScalar(p.y).addScaledVector(u,-f.y).multiplyScalar(I),m.copy(u).multiplyScalar(f.x).addScaledVector(h,-p.x).multiplyScalar(I),a[T].add(v),a[S].add(v),a[b].add(v),l[T].add(m),l[S].add(m),l[b].add(m))}let x=this.groups;x.length===0&&(x=[{start:0,count:e.count}]);for(let T=0,S=x.length;T<S;++T){const b=x[T],I=b.start,D=b.count;for(let G=I,H=I+D;G<H;G+=3)g(e.getX(G+0),e.getX(G+1),e.getX(G+2))}const y=new N,_=new N,E=new N,w=new N;function M(T){E.fromBufferAttribute(i,T),w.copy(E);const S=a[T];y.copy(S),y.sub(E.multiplyScalar(E.dot(S))).normalize(),_.crossVectors(w,S);const I=_.dot(l[T])<0?-1:1;o.setXYZW(T,y.x,y.y,y.z,I)}for(let T=0,S=x.length;T<S;++T){const b=x[T],I=b.start,D=b.count;for(let G=I,H=I+D;G<H;G+=3)M(e.getX(G+0)),M(e.getX(G+1)),M(e.getX(G+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Et(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const i=new N,r=new N,o=new N,a=new N,l=new N,c=new N,h=new N,u=new N;if(e)for(let d=0,f=e.count;d<f;d+=3){const p=e.getX(d+0),v=e.getX(d+1),m=e.getX(d+2);i.fromBufferAttribute(t,p),r.fromBufferAttribute(t,v),o.fromBufferAttribute(t,m),h.subVectors(o,r),u.subVectors(i,r),h.cross(u),a.fromBufferAttribute(n,p),l.fromBufferAttribute(n,v),c.fromBufferAttribute(n,m),a.add(h),l.add(h),c.add(h),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(v,l.x,l.y,l.z),n.setXYZ(m,c.x,c.y,c.z)}else for(let d=0,f=t.count;d<f;d+=3)i.fromBufferAttribute(t,d+0),r.fromBufferAttribute(t,d+1),o.fromBufferAttribute(t,d+2),h.subVectors(o,r),u.subVectors(i,r),h.cross(u),n.setXYZ(d+0,h.x,h.y,h.z),n.setXYZ(d+1,h.x,h.y,h.z),n.setXYZ(d+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Pn.fromBufferAttribute(e,t),Pn.normalize(),e.setXYZ(t,Pn.x,Pn.y,Pn.z)}toNonIndexed(){function e(a,l){const c=a.array,h=a.itemSize,u=a.normalized,d=new c.constructor(l.length*h);let f=0,p=0;for(let v=0,m=l.length;v<m;v++){a.isInterleavedBufferAttribute?f=l[v]*a.data.stride+a.offset:f=l[v]*h;for(let g=0;g<h;g++)d[p++]=c[f++]}return new Et(d,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new yt,n=this.index.array,i=this.attributes;for(const a in i){const l=i[a],c=e(l,n);t.setAttribute(a,c)}const r=this.morphAttributes;for(const a in r){const l=[],c=r[a];for(let h=0,u=c.length;h<u;h++){const d=c[h],f=e(d,n);l.push(f)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n){const c=n[l];e.data.attributes[l]=c.toJSON(e.data)}const i={};let r=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],h=[];for(let u=0,d=c.length;u<d;u++){const f=c[u];h.push(f.toJSON(e.data))}h.length>0&&(i[l]=h,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const c in i){const h=i[c];this.setAttribute(c,h.clone(t))}const r=e.morphAttributes;for(const c in r){const h=[],u=r[c];for(let d=0,f=u.length;d<f;d++)h.push(u[d].clone(t));this.morphAttributes[c]=h}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,h=o.length;c<h;c++){const u=o[c];this.addGroup(u.start,u.count,u.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Sp=new rt,rs=new qr,fl=new Mn,Mp=new N,pl=new N,ml=new N,gl=new N,yu=new N,vl=new N,wp=new N,_l=new N;class zt extends Ft{constructor(e=new yt,t=new Xn){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,o=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const a=this.morphTargetInfluences;if(r&&a){vl.set(0,0,0);for(let l=0,c=r.length;l<c;l++){const h=a[l],u=r[l];h!==0&&(yu.fromBufferAttribute(u,e),o?vl.addScaledVector(yu,h):vl.addScaledVector(yu.sub(t),h))}t.add(vl)}return t}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),fl.copy(n.boundingSphere),fl.applyMatrix4(r),rs.copy(e.ray).recast(e.near),!(fl.containsPoint(rs.origin)===!1&&(rs.intersectSphere(fl,Mp)===null||rs.origin.distanceToSquared(Mp)>(e.far-e.near)**2))&&(Sp.copy(r).invert(),rs.copy(e.ray).applyMatrix4(Sp),!(n.boundingBox!==null&&rs.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,rs)))}_computeIntersections(e,t,n){let i;const r=this.geometry,o=this.material,a=r.index,l=r.attributes.position,c=r.attributes.uv,h=r.attributes.uv1,u=r.attributes.normal,d=r.groups,f=r.drawRange;if(a!==null)if(Array.isArray(o))for(let p=0,v=d.length;p<v;p++){const m=d[p],g=o[m.materialIndex],x=Math.max(m.start,f.start),y=Math.min(a.count,Math.min(m.start+m.count,f.start+f.count));for(let _=x,E=y;_<E;_+=3){const w=a.getX(_),M=a.getX(_+1),T=a.getX(_+2);i=yl(this,g,e,n,c,h,u,w,M,T),i&&(i.faceIndex=Math.floor(_/3),i.face.materialIndex=m.materialIndex,t.push(i))}}else{const p=Math.max(0,f.start),v=Math.min(a.count,f.start+f.count);for(let m=p,g=v;m<g;m+=3){const x=a.getX(m),y=a.getX(m+1),_=a.getX(m+2);i=yl(this,o,e,n,c,h,u,x,y,_),i&&(i.faceIndex=Math.floor(m/3),t.push(i))}}else if(l!==void 0)if(Array.isArray(o))for(let p=0,v=d.length;p<v;p++){const m=d[p],g=o[m.materialIndex],x=Math.max(m.start,f.start),y=Math.min(l.count,Math.min(m.start+m.count,f.start+f.count));for(let _=x,E=y;_<E;_+=3){const w=_,M=_+1,T=_+2;i=yl(this,g,e,n,c,h,u,w,M,T),i&&(i.faceIndex=Math.floor(_/3),i.face.materialIndex=m.materialIndex,t.push(i))}}else{const p=Math.max(0,f.start),v=Math.min(l.count,f.start+f.count);for(let m=p,g=v;m<g;m+=3){const x=m,y=m+1,_=m+2;i=yl(this,o,e,n,c,h,u,x,y,_),i&&(i.faceIndex=Math.floor(m/3),t.push(i))}}}}function Tx(s,e,t,n,i,r,o,a){let l;if(e.side===Wn?l=n.intersectTriangle(o,r,i,!0,a):l=n.intersectTriangle(i,r,o,e.side===ar,a),l===null)return null;_l.copy(a),_l.applyMatrix4(s.matrixWorld);const c=t.ray.origin.distanceTo(_l);return c<t.near||c>t.far?null:{distance:c,point:_l.clone(),object:s}}function yl(s,e,t,n,i,r,o,a,l,c){s.getVertexPosition(a,pl),s.getVertexPosition(l,ml),s.getVertexPosition(c,gl);const h=Tx(s,e,t,n,pl,ml,gl,wp);if(h){const u=new N;ui.getBarycoord(wp,pl,ml,gl,u),i&&(h.uv=ui.getInterpolatedAttribute(i,a,l,c,u,new ve)),r&&(h.uv1=ui.getInterpolatedAttribute(r,a,l,c,u,new ve)),o&&(h.normal=ui.getInterpolatedAttribute(o,a,l,c,u,new N),h.normal.dot(n.direction)>0&&h.normal.multiplyScalar(-1));const d={a,b:l,c,normal:new N,materialIndex:0};ui.getNormal(pl,ml,gl,d.normal),h.face=d,h.barycoord=u}return h}class Xs extends yt{constructor(e=1,t=1,n=1,i=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:o};const a=this;i=Math.floor(i),r=Math.floor(r),o=Math.floor(o);const l=[],c=[],h=[],u=[];let d=0,f=0;p("z","y","x",-1,-1,n,t,e,o,r,0),p("z","y","x",1,-1,n,t,-e,o,r,1),p("x","z","y",1,1,e,n,t,i,o,2),p("x","z","y",1,-1,e,n,-t,i,o,3),p("x","y","z",1,-1,e,t,n,i,r,4),p("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(l),this.setAttribute("position",new qe(c,3)),this.setAttribute("normal",new qe(h,3)),this.setAttribute("uv",new qe(u,2));function p(v,m,g,x,y,_,E,w,M,T,S){const b=_/M,I=E/T,D=_/2,G=E/2,H=w/2,$=M+1,F=T+1;let Z=0,q=0;const j=new N;for(let J=0;J<F;J++){const B=J*I-G;for(let Y=0;Y<$;Y++){const K=Y*b-D;j[v]=K*x,j[m]=B*y,j[g]=H,c.push(j.x,j.y,j.z),j[v]=0,j[m]=0,j[g]=w>0?1:-1,h.push(j.x,j.y,j.z),u.push(Y/M),u.push(1-J/T),Z+=1}}for(let J=0;J<T;J++)for(let B=0;B<M;B++){const Y=d+B+$*J,K=d+B+$*(J+1),V=d+(B+1)+$*(J+1),W=d+(B+1)+$*J;l.push(Y,K,W),l.push(K,V,W),q+=6}a.addGroup(f,q,S),f+=q,d+=Z}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Xs(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Io(s){const e={};for(const t in s){e[t]={};for(const n in s[t]){const i=s[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Qn(s){const e={};for(let t=0;t<s.length;t++){const n=Io(s[t]);for(const i in n)e[i]=n[i]}return e}function Ax(s){const e=[];for(let t=0;t<s.length;t++)e.push(s[t].clone());return e}function Lv(s){const e=s.getRenderTarget();return e===null?s.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:It.workingColorSpace}const qa={clone:Io,merge:Qn};var Cx=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Rx=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class mi extends Zn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Cx,this.fragmentShader=Rx,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Io(e.uniforms),this.uniformsGroups=Ax(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?t.uniforms[i]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[i]={type:"m4",value:o.toArray()}:t.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class vh extends Ft{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new rt,this.projectionMatrix=new rt,this.projectionMatrixInverse=new rt,this.coordinateSystem=Xi}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const Nr=new N,Ep=new ve,Tp=new ve;class vn extends vh{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Po*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Is*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Po*2*Math.atan(Math.tan(Is*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){Nr.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(Nr.x,Nr.y).multiplyScalar(-e/Nr.z),Nr.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(Nr.x,Nr.y).multiplyScalar(-e/Nr.z)}getViewSize(e,t){return this.getViewBounds(e,Ep,Tp),t.subVectors(Tp,Ep)}setViewOffset(e,t,n,i,r,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Is*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;r+=o.offsetX*i/l,t-=o.offsetY*n/c,i*=o.width/l,n*=o.height/c}const a=this.filmOffset;a!==0&&(r+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const co=-90,ho=1;class Nv extends Ft{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new vn(co,ho,e,t);i.layers=this.layers,this.add(i);const r=new vn(co,ho,e,t);r.layers=this.layers,this.add(r);const o=new vn(co,ho,e,t);o.layers=this.layers,this.add(o);const a=new vn(co,ho,e,t);a.layers=this.layers,this.add(a);const l=new vn(co,ho,e,t);l.layers=this.layers,this.add(l);const c=new vn(co,ho,e,t);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,r,o,a,l]=t;for(const c of t)this.remove(c);if(e===Xi)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===Pa)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const c of t)this.add(c),c.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[r,o,a,l,c,h]=this.children,u=e.getRenderTarget(),d=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const v=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,r),e.setRenderTarget(n,1,i),e.render(t,o),e.setRenderTarget(n,2,i),e.render(t,a),e.setRenderTarget(n,3,i),e.render(t,l),e.setRenderTarget(n,4,i),e.render(t,c),n.texture.generateMipmaps=v,e.setRenderTarget(n,5,i),e.render(t,h),e.setRenderTarget(u,d,f),e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class ja extends cn{constructor(e,t,n,i,r,o,a,l,c,h){e=e!==void 0?e:[],t=t!==void 0?t:wr,super(e,t,n,i,r,o,a,l,c,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Ov extends Ni{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new ja(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:_n}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Xs(5,5,5),r=new mi({name:"CubemapFromEquirect",uniforms:Io(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Wn,blending:Sr});r.uniforms.tEquirect.value=t;const o=new zt(i,r),a=t.minFilter;return t.minFilter===Wi&&(t.minFilter=_n),new Nv(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,i){const r=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,i);e.setRenderTarget(r)}}class Yi extends Ft{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Px={type:"move"};class lc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Yi,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Yi,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new N,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new N),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Yi,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new N,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new N),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){o=!0;for(const v of e.hand.values()){const m=t.getJointPose(v,n),g=this._getHandJoint(c,v);m!==null&&(g.matrix.fromArray(m.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),g.matrixWorldNeedsUpdate=!0,g.jointRadius=m.radius),g.visible=m!==null}const h=c.joints["index-finger-tip"],u=c.joints["thumb-tip"],d=h.position.distanceTo(u.position),f=.02,p=.005;c.inputState.pinching&&d>f+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&d<=f-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(Px)))}return a!==null&&(a.visible=i!==null),l!==null&&(l.visible=r!==null),c!==null&&(c.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new Yi;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class _h{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new ze(e),this.density=t}clone(){return new _h(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class yh{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new ze(e),this.near=t,this.far=n}clone(){return new yh(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class xh extends Ft{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Ri,this.environmentIntensity=1,this.environmentRotation=new Ri,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class bh{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Ra,this.updateRanges=[],this.version=0,this.uuid=Ci()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Ci()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Ci()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Kn=new N;class Ti{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Kn.fromBufferAttribute(this,t),Kn.applyMatrix4(e),this.setXYZ(t,Kn.x,Kn.y,Kn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Kn.fromBufferAttribute(this,t),Kn.applyNormalMatrix(e),this.setXYZ(t,Kn.x,Kn.y,Kn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Kn.fromBufferAttribute(this,t),Kn.transformDirection(e),this.setXYZ(t,Kn.x,Kn.y,Kn.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=ei(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=At(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=At(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=At(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=At(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=At(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=ei(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=ei(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=ei(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=ei(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=At(t,this.array),n=At(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=At(t,this.array),n=At(n,this.array),i=At(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=At(t,this.array),n=At(n,this.array),i=At(i,this.array),r=At(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new Et(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Ti(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Oo extends Zn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new ze(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let uo;const Ko=new N,fo=new N,po=new N,mo=new ve,Qo=new ve,Fv=new rt,xl=new N,$o=new N,bl=new N,Ap=new ve,xu=new ve,Cp=new ve;class Za extends Ft{constructor(e=new Oo){if(super(),this.isSprite=!0,this.type="Sprite",uo===void 0){uo=new yt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new bh(t,5);uo.setIndex([0,1,2,0,2,3]),uo.setAttribute("position",new Ti(n,3,0,!1)),uo.setAttribute("uv",new Ti(n,2,3,!1))}this.geometry=uo,this.material=e,this.center=new ve(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),fo.setFromMatrixScale(this.matrixWorld),Fv.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),po.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&fo.multiplyScalar(-po.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const o=this.center;Sl(xl.set(-.5,-.5,0),po,o,fo,i,r),Sl($o.set(.5,-.5,0),po,o,fo,i,r),Sl(bl.set(.5,.5,0),po,o,fo,i,r),Ap.set(0,0),xu.set(1,0),Cp.set(1,1);let a=e.ray.intersectTriangle(xl,$o,bl,!1,Ko);if(a===null&&(Sl($o.set(-.5,.5,0),po,o,fo,i,r),xu.set(0,1),a=e.ray.intersectTriangle(xl,bl,$o,!1,Ko),a===null))return;const l=e.ray.origin.distanceTo(Ko);l<e.near||l>e.far||t.push({distance:l,point:Ko.clone(),uv:ui.getInterpolation(Ko,xl,$o,bl,Ap,xu,Cp,new ve),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function Sl(s,e,t,n,i,r){mo.subVectors(s,t).addScalar(.5).multiply(n),i!==void 0?(Qo.x=r*mo.x-i*mo.y,Qo.y=i*mo.x+r*mo.y):Qo.copy(mo),s.copy(e),s.x+=Qo.x,s.y+=Qo.y,s.applyMatrix4(Fv)}const Ml=new N,Rp=new N;class kv extends Ft{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const r=t[n];this.addLevel(r.object.clone(),r.distance,r.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let r;for(r=0;r<i.length&&!(t<i[r].distance);r++);return i.splice(r,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}removeLevel(e){const t=this.levels;for(let n=0;n<t.length;n++)if(t[n].distance===e){const i=t.splice(n,1);return this.remove(i[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let r=t[n].distance;if(t[n].object.visible&&(r-=r*t[n].hysteresis),e<r)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){Ml.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(Ml);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){Ml.setFromMatrixPosition(e.matrixWorld),Rp.setFromMatrixPosition(this.matrixWorld);const n=Ml.distanceTo(Rp)/e.zoom;t[0].object.visible=!0;let i,r;for(i=1,r=t.length;i<r;i++){let o=t[i].distance;if(t[i].object.visible&&(o-=o*t[i].hysteresis),n>=o)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<r;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const o=n[i];t.object.levels.push({object:o.object.uuid,distance:o.distance,hysteresis:o.hysteresis})}return t}}const Pp=new N,Ip=new Tt,Dp=new Tt,Ix=new N,Up=new rt,wl=new N,bu=new Mn,Lp=new rt,Su=new qr;class nf extends zt{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=fd,this.bindMatrix=new rt,this.bindMatrixInverse=new rt,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new yn),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,wl),this.boundingBox.expandByPoint(wl)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Mn),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,wl),this.boundingSphere.expandByPoint(wl)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),bu.copy(this.boundingSphere),bu.applyMatrix4(i),e.ray.intersectsSphere(bu)!==!1&&(Lp.copy(i).invert(),Su.copy(e.ray).applyMatrix4(Lp),!(this.boundingBox!==null&&Su.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,Su)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Tt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===fd?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===vv?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;Ip.fromBufferAttribute(i.attributes.skinIndex,e),Dp.fromBufferAttribute(i.attributes.skinWeight,e),Pp.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const o=Dp.getComponent(r);if(o!==0){const a=Ip.getComponent(r);Up.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),t.addScaledVector(Ix.copy(Pp).applyMatrix4(Up),o)}}return t.applyMatrix4(this.bindMatrixInverse)}}class Sh extends Ft{constructor(){super(),this.isBone=!0,this.type="Bone"}}class sr extends cn{constructor(e=null,t=1,n=1,i,r,o,a,l,c=On,h=On,u,d){super(null,o,a,l,c,h,i,r,u,d),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Np=new rt,Dx=new rt;class Ja{constructor(e=[],t=[]){this.uuid=Ci(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new rt)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new rt;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,o=e.length;r<o;r++){const a=e[r]?e[r].matrixWorld:Dx;Np.multiplyMatrices(a,t[r]),Np.toArray(n,r*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new Ja(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new sr(t,e,e,ti,fi);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const r=e.bones[n];let o=t[r];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),o=new Sh),this.bones.push(o),this.boneInverses.push(new rt().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,r=t.length;i<r;i++){const o=t[i];e.bones.push(o.uuid);const a=n[i];e.boneInverses.push(a.toArray())}return e}}class Bs extends Et{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const go=new rt,Op=new rt,El=[],Fp=new yn,Ux=new rt,ea=new zt,ta=new Mn;class Bv extends zt{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Bs(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,Ux)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new yn),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,go),Fp.copy(e.boundingBox).applyMatrix4(go),this.boundingBox.union(Fp)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Mn),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,go),ta.copy(e.boundingSphere).applyMatrix4(go),this.boundingSphere.union(ta)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const n=t.morphTargetInfluences,i=this.morphTexture.source.data.data,r=n.length+1,o=e*r+1;for(let a=0;a<n.length;a++)n[a]=i[o+a]}raycast(e,t){const n=this.matrixWorld,i=this.count;if(ea.geometry=this.geometry,ea.material=this.material,ea.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),ta.copy(this.boundingSphere),ta.applyMatrix4(n),e.ray.intersectsSphere(ta)!==!1))for(let r=0;r<i;r++){this.getMatrixAt(r,go),Op.multiplyMatrices(n,go),ea.matrixWorld=Op,ea.raycast(e,El);for(let o=0,a=El.length;o<a;o++){const l=El[o];l.instanceId=r,l.object=this,t.push(l)}El.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Bs(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const n=t.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new sr(new Float32Array(i*this.count),i,this.count,hh,fi));const r=this.morphTexture.source.data.data;let o=0;for(let c=0;c<n.length;c++)o+=n[c];const a=this.geometry.morphTargetsRelative?1:1-o,l=i*e;r[l]=a,r.set(n,l+1)}updateMorphTargets(){}dispose(){return this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null),this}}const Mu=new N,Lx=new N,Nx=new St;class vr{constructor(e=new N(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Mu.subVectors(n,t).cross(Lx.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Mu),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(e.start).addScaledVector(n,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||Nx.getNormalMatrix(e),i=this.coplanarPoint(Mu).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const ss=new Mn,Tl=new N;class Ka{constructor(e=new vr,t=new vr,n=new vr,i=new vr,r=new vr,o=new vr){this.planes=[e,t,n,i,r,o]}set(e,t,n,i,r,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(i),a[4].copy(r),a[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Xi){const n=this.planes,i=e.elements,r=i[0],o=i[1],a=i[2],l=i[3],c=i[4],h=i[5],u=i[6],d=i[7],f=i[8],p=i[9],v=i[10],m=i[11],g=i[12],x=i[13],y=i[14],_=i[15];if(n[0].setComponents(l-r,d-c,m-f,_-g).normalize(),n[1].setComponents(l+r,d+c,m+f,_+g).normalize(),n[2].setComponents(l+o,d+h,m+p,_+x).normalize(),n[3].setComponents(l-o,d-h,m-p,_-x).normalize(),n[4].setComponents(l-a,d-u,m-v,_-y).normalize(),t===Xi)n[5].setComponents(l+a,d+u,m+v,_+y).normalize();else if(t===Pa)n[5].setComponents(a,u,v,y).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),ss.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),ss.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(ss)}intersectsSprite(e){return ss.center.set(0,0,0),ss.radius=.7071067811865476,ss.applyMatrix4(e.matrixWorld),this.intersectsSphere(ss)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(Tl.x=i.normal.x>0?e.max.x:e.min.x,Tl.y=i.normal.y>0?e.max.y:e.min.y,Tl.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(Tl)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function wu(s,e){return s-e}function Ox(s,e){return s.z-e.z}function Fx(s,e){return e.z-s.z}class kx{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t,n,i){const r=this.pool,o=this.list;this.index>=r.length&&r.push({start:-1,count:-1,z:-1,index:-1});const a=r[this.index];o.push(a),this.index++,a.start=e,a.count=t,a.z=n,a.index=i}reset(){this.list.length=0,this.index=0}}const si=new rt,Bx=new ze(1,1,1),Eu=new Ka,Al=new yn,os=new Mn,na=new N,kp=new N,zx=new N,Tu=new kx,Hn=new zt,Cl=[];function Vx(s,e,t=0){const n=e.itemSize;if(s.isInterleavedBufferAttribute||s.array.constructor!==e.array.constructor){const i=s.count;for(let r=0;r<i;r++)for(let o=0;o<n;o++)e.setComponent(r+t,o,s.getComponent(r,o))}else e.array.set(s.array,t*n);e.needsUpdate=!0}function as(s,e){if(s.constructor!==e.constructor){const t=Math.min(s.length,e.length);for(let n=0;n<t;n++)e[n]=s[n]}else{const t=Math.min(s.length,e.length);e.set(new s.constructor(s.buffer,0,t))}}class zv extends zt{get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}constructor(e,t,n=t*2,i){super(new yt,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=e,this._maxVertexCount=t,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}_initMatricesTexture(){let e=Math.sqrt(this._maxInstanceCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),n=new sr(t,e,e,ti,fi);this._matricesTexture=n}_initIndirectTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Uint32Array(e*e),n=new sr(t,e,e,Xa,Er);this._indirectTexture=n}_initColorsTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Float32Array(e*e*4).fill(1),n=new sr(t,e,e,ti,fi);n.colorSpace=It.workingColorSpace,this._colorsTexture=n}_initializeGeometry(e){const t=this.geometry,n=this._maxVertexCount,i=this._maxIndexCount;if(this._geometryInitialized===!1){for(const r in e.attributes){const o=e.getAttribute(r),{array:a,itemSize:l,normalized:c}=o,h=new a.constructor(n*l),u=new Et(h,l,c);t.setAttribute(r,u)}if(e.getIndex()!==null){const r=n>65535?new Uint32Array(i):new Uint16Array(i);t.setIndex(new Et(r,1))}this._geometryInitialized=!0}}_validateGeometry(e){const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const n in t.attributes){if(!e.hasAttribute(n))throw new Error(`THREE.BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=e.getAttribute(n),r=t.getAttribute(n);if(i.itemSize!==r.itemSize||i.normalized!==r.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(e){const t=this._instanceInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${e}. Instance is either out of range or has been deleted.`)}validateGeometryId(e){const t=this._geometryInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${e}. Geometry is either out of range or has been deleted.`)}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new yn);const e=this.boundingBox,t=this._instanceInfo;e.makeEmpty();for(let n=0,i=t.length;n<i;n++){if(t[n].active===!1)continue;const r=t[n].geometryIndex;this.getMatrixAt(n,si),this.getBoundingBoxAt(r,Al).applyMatrix4(si),e.union(Al)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Mn);const e=this.boundingSphere,t=this._instanceInfo;e.makeEmpty();for(let n=0,i=t.length;n<i;n++){if(t[n].active===!1)continue;const r=t[n].geometryIndex;this.getMatrixAt(n,si),this.getBoundingSphereAt(r,os).applyMatrix4(si),e.union(os)}}addInstance(e){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const n={visible:!0,active:!0,geometryIndex:e};let i=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(wu),i=this._availableInstanceIds.shift(),this._instanceInfo[i]=n):(i=this._instanceInfo.length,this._instanceInfo.push(n));const r=this._matricesTexture;si.identity().toArray(r.image.data,i*16),r.needsUpdate=!0;const o=this._colorsTexture;return o&&(Bx.toArray(o.image.data,i*4),o.needsUpdate=!0),this._visibilityChanged=!0,i}addGeometry(e,t=-1,n=-1){this._initializeGeometry(e),this._validateGeometry(e);const i={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},r=this._geometryInfo;i.vertexStart=this._nextVertexStart,i.reservedVertexCount=t===-1?e.getAttribute("position").count:t;const o=e.getIndex();if(o!==null&&(i.indexStart=this._nextIndexStart,i.reservedIndexCount=n===-1?o.count:n),i.indexStart!==-1&&i.indexStart+i.reservedIndexCount>this._maxIndexCount||i.vertexStart+i.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let l;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(wu),l=this._availableGeometryIds.shift(),r[l]=i):(l=this._geometryCount,this._geometryCount++,r.push(i)),this.setGeometryAt(l,e),this._nextIndexStart=i.indexStart+i.reservedIndexCount,this._nextVertexStart=i.vertexStart+i.reservedVertexCount,l}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const n=this.geometry,i=n.getIndex()!==null,r=n.getIndex(),o=t.getIndex(),a=this._geometryInfo[e];if(i&&o.count>a.reservedIndexCount||t.attributes.position.count>a.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const l=a.vertexStart,c=a.reservedVertexCount;a.vertexCount=t.getAttribute("position").count;for(const h in n.attributes){const u=t.getAttribute(h),d=n.getAttribute(h);Vx(u,d,l);const f=u.itemSize;for(let p=u.count,v=c;p<v;p++){const m=l+p;for(let g=0;g<f;g++)d.setComponent(m,g,0)}d.needsUpdate=!0,d.addUpdateRange(l*f,c*f)}if(i){const h=a.indexStart,u=a.reservedIndexCount;a.indexCount=t.getIndex().count;for(let d=0;d<o.count;d++)r.setX(h+d,l+o.getX(d));for(let d=o.count,f=u;d<f;d++)r.setX(h+d,l);r.needsUpdate=!0,r.addUpdateRange(h,a.reservedIndexCount)}return a.start=i?a.indexStart:a.vertexStart,a.count=i?a.indexCount:a.vertexCount,a.boundingBox=null,t.boundingBox!==null&&(a.boundingBox=t.boundingBox.clone()),a.boundingSphere=null,t.boundingSphere!==null&&(a.boundingSphere=t.boundingSphere.clone()),this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._geometryInfo;if(e>=t.length||t[e].active===!1)return this;const n=this._instanceInfo;for(let i=0,r=n.length;i<r;i++)n[i].active&&n[i].geometryIndex===e&&this.deleteInstance(i);return t[e].active=!1,this._availableGeometryIds.push(e),this._visibilityChanged=!0,this}deleteInstance(e){return this.validateInstanceId(e),this._instanceInfo[e].active=!1,this._availableInstanceIds.push(e),this._visibilityChanged=!0,this}optimize(){let e=0,t=0;const n=this._geometryInfo,i=n.map((o,a)=>a).sort((o,a)=>n[o].vertexStart-n[a].vertexStart),r=this.geometry;for(let o=0,a=n.length;o<a;o++){const l=i[o],c=n[l];if(c.active!==!1){if(r.index!==null){if(c.indexStart!==t){const{indexStart:h,vertexStart:u,reservedIndexCount:d}=c,f=r.index,p=f.array,v=e-u;for(let m=h;m<h+d;m++)p[m]=p[m]+v;f.array.copyWithin(t,h,h+d),f.addUpdateRange(t,d),c.indexStart=t}t+=c.reservedIndexCount}if(c.vertexStart!==e){const{vertexStart:h,reservedVertexCount:u}=c,d=r.attributes;for(const f in d){const p=d[f],{array:v,itemSize:m}=p;v.copyWithin(e*m,h*m,(h+u)*m),p.addUpdateRange(e*m,u*m)}c.vertexStart=e}e+=c.reservedVertexCount,c.start=r.index?c.indexStart:c.vertexStart,this._nextIndexStart=r.index?c.indexStart+c.reservedIndexCount:0,this._nextVertexStart=c.vertexStart+c.reservedVertexCount}}return this}getBoundingBoxAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[e];if(i.boundingBox===null){const r=new yn,o=n.index,a=n.attributes.position;for(let l=i.start,c=i.start+i.count;l<c;l++){let h=l;o&&(h=o.getX(h)),r.expandByPoint(na.fromBufferAttribute(a,h))}i.boundingBox=r}return t.copy(i.boundingBox),t}getBoundingSphereAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[e];if(i.boundingSphere===null){const r=new Mn;this.getBoundingBoxAt(e,Al),Al.getCenter(r.center);const o=n.index,a=n.attributes.position;let l=0;for(let c=i.start,h=i.start+i.count;c<h;c++){let u=c;o&&(u=o.getX(u)),na.fromBufferAttribute(a,u),l=Math.max(l,r.center.distanceToSquared(na))}r.radius=Math.sqrt(l),i.boundingSphere=r}return t.copy(i.boundingSphere),t}setMatrixAt(e,t){this.validateInstanceId(e);const n=this._matricesTexture,i=this._matricesTexture.image.data;return t.toArray(i,e*16),n.needsUpdate=!0,this}getMatrixAt(e,t){return this.validateInstanceId(e),t.fromArray(this._matricesTexture.image.data,e*16)}setColorAt(e,t){return this.validateInstanceId(e),this._colorsTexture===null&&this._initColorsTexture(),t.toArray(this._colorsTexture.image.data,e*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(e,t){return this.validateInstanceId(e),t.fromArray(this._colorsTexture.image.data,e*4)}setVisibleAt(e,t){return this.validateInstanceId(e),this._instanceInfo[e].visible===t?this:(this._instanceInfo[e].visible=t,this._visibilityChanged=!0,this)}getVisibleAt(e){return this.validateInstanceId(e),this._instanceInfo[e].visible}setGeometryIdAt(e,t){return this.validateInstanceId(e),this.validateGeometryId(t),this._instanceInfo[e].geometryIndex=t,this}getGeometryIdAt(e){return this.validateInstanceId(e),this._instanceInfo[e].geometryIndex}getGeometryRangeAt(e,t={}){this.validateGeometryId(e);const n=this._geometryInfo[e];return t.vertexStart=n.vertexStart,t.vertexCount=n.vertexCount,t.reservedVertexCount=n.reservedVertexCount,t.indexStart=n.indexStart,t.indexCount=n.indexCount,t.reservedIndexCount=n.reservedIndexCount,t.start=n.start,t.count=n.count,t}setInstanceCount(e){const t=this._availableInstanceIds,n=this._instanceInfo;for(t.sort(wu);t[t.length-1]===n.length;)n.pop(),t.pop();if(e<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${e} are being used. Cannot shrink instance count.`);const i=new Int32Array(e),r=new Int32Array(e);as(this._multiDrawCounts,i),as(this._multiDrawStarts,r),this._multiDrawCounts=i,this._multiDrawStarts=r,this._maxInstanceCount=e;const o=this._indirectTexture,a=this._matricesTexture,l=this._colorsTexture;o.dispose(),this._initIndirectTexture(),as(o.image.data,this._indirectTexture.image.data),a.dispose(),this._initMatricesTexture(),as(a.image.data,this._matricesTexture.image.data),l&&(l.dispose(),this._initColorsTexture(),as(l.image.data,this._colorsTexture.image.data))}setGeometrySize(e,t){const n=[...this._geometryInfo].filter(a=>a.active);if(Math.max(...n.map(a=>a.vertexStart+a.reservedVertexCount))>e)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${t}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...n.map(l=>l.indexStart+l.reservedIndexCount))>t)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${t}. Cannot shrink further.`);const r=this.geometry;r.dispose(),this._maxVertexCount=e,this._maxIndexCount=t,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new yt,this._initializeGeometry(r));const o=this.geometry;r.index&&as(r.index.array,o.index.array);for(const a in r.attributes)as(r.attributes[a].array,o.attributes[a].array)}raycast(e,t){const n=this._instanceInfo,i=this._geometryInfo,r=this.matrixWorld,o=this.geometry;Hn.material=this.material,Hn.geometry.index=o.index,Hn.geometry.attributes=o.attributes,Hn.geometry.boundingBox===null&&(Hn.geometry.boundingBox=new yn),Hn.geometry.boundingSphere===null&&(Hn.geometry.boundingSphere=new Mn);for(let a=0,l=n.length;a<l;a++){if(!n[a].visible||!n[a].active)continue;const c=n[a].geometryIndex,h=i[c];Hn.geometry.setDrawRange(h.start,h.count),this.getMatrixAt(a,Hn.matrixWorld).premultiply(r),this.getBoundingBoxAt(c,Hn.geometry.boundingBox),this.getBoundingSphereAt(c,Hn.geometry.boundingSphere),Hn.raycast(e,Cl);for(let u=0,d=Cl.length;u<d;u++){const f=Cl[u];f.object=this,f.batchId=a,t.push(f)}Cl.length=0}Hn.material=null,Hn.geometry.index=null,Hn.geometry.attributes={},Hn.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._geometryInfo=e._geometryInfo.map(t=>({...t,boundingBox:t.boundingBox!==null?t.boundingBox.clone():null,boundingSphere:t.boundingSphere!==null?t.boundingSphere.clone():null})),this._instanceInfo=e._instanceInfo.map(t=>({...t})),this._maxInstanceCount=e._maxInstanceCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._geometryCount=e._geometryCount,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=e._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){return this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null),this}onBeforeRender(e,t,n,i,r){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const o=i.getIndex(),a=o===null?1:o.array.BYTES_PER_ELEMENT,l=this._instanceInfo,c=this._multiDrawStarts,h=this._multiDrawCounts,u=this._geometryInfo,d=this.perObjectFrustumCulled,f=this._indirectTexture,p=f.image.data;d&&(si.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),Eu.setFromProjectionMatrix(si,e.coordinateSystem));let v=0;if(this.sortObjects){si.copy(this.matrixWorld).invert(),na.setFromMatrixPosition(n.matrixWorld).applyMatrix4(si),kp.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(si);for(let x=0,y=l.length;x<y;x++)if(l[x].visible&&l[x].active){const _=l[x].geometryIndex;this.getMatrixAt(x,si),this.getBoundingSphereAt(_,os).applyMatrix4(si);let E=!1;if(d&&(E=!Eu.intersectsSphere(os)),!E){const w=u[_],M=zx.subVectors(os.center,na).dot(kp);Tu.push(w.start,w.count,M,x)}}const m=Tu.list,g=this.customSort;g===null?m.sort(r.transparent?Fx:Ox):g.call(this,m,n);for(let x=0,y=m.length;x<y;x++){const _=m[x];c[v]=_.start*a,h[v]=_.count,p[v]=_.index,v++}Tu.reset()}else for(let m=0,g=l.length;m<g;m++)if(l[m].visible&&l[m].active){const x=l[m].geometryIndex;let y=!1;if(d&&(this.getMatrixAt(m,si),this.getBoundingSphereAt(x,os).applyMatrix4(si),y=!Eu.intersectsSphere(os)),!y){const _=u[x];c[v]=_.start*a,h[v]=_.count,p[v]=m,v++}}f.needsUpdate=!0,this._multiDrawCount=v,this._visibilityChanged=!1}onBeforeShadow(e,t,n,i,r,o){this.onBeforeRender(e,null,i,r,o)}}class Fn extends Zn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new ze(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Zc=new N,Jc=new N,Bp=new rt,ia=new qr,Rl=new Mn,Au=new N,zp=new N;class Tr extends Ft{constructor(e=new yt,t=new Fn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)Zc.fromBufferAttribute(t,i-1),Jc.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Zc.distanceTo(Jc);e.setAttribute("lineDistance",new qe(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Rl.copy(n.boundingSphere),Rl.applyMatrix4(i),Rl.radius+=r,e.ray.intersectsSphere(Rl)===!1)return;Bp.copy(i).invert(),ia.copy(e.ray).applyMatrix4(Bp);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=this.isLineSegments?2:1,h=n.index,d=n.attributes.position;if(h!==null){const f=Math.max(0,o.start),p=Math.min(h.count,o.start+o.count);for(let v=f,m=p-1;v<m;v+=c){const g=h.getX(v),x=h.getX(v+1),y=Pl(this,e,ia,l,g,x,v);y&&t.push(y)}if(this.isLineLoop){const v=h.getX(p-1),m=h.getX(f),g=Pl(this,e,ia,l,v,m,p-1);g&&t.push(g)}}else{const f=Math.max(0,o.start),p=Math.min(d.count,o.start+o.count);for(let v=f,m=p-1;v<m;v+=c){const g=Pl(this,e,ia,l,v,v+1,v);g&&t.push(g)}if(this.isLineLoop){const v=Pl(this,e,ia,l,p-1,f,p-1);v&&t.push(v)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}function Pl(s,e,t,n,i,r,o){const a=s.geometry.attributes.position;if(Zc.fromBufferAttribute(a,i),Jc.fromBufferAttribute(a,r),t.distanceSqToSegment(Zc,Jc,Au,zp)>n)return;Au.applyMatrix4(s.matrixWorld);const c=e.ray.origin.distanceTo(Au);if(!(c<e.near||c>e.far))return{distance:c,point:zp.clone().applyMatrix4(s.matrixWorld),index:o,face:null,faceIndex:null,barycoord:null,object:s}}const Vp=new N,Gp=new N;class Zi extends Tr{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)Vp.fromBufferAttribute(t,i),Gp.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Vp.distanceTo(Gp);e.setAttribute("lineDistance",new qe(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Vv extends Tr{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class rf extends Zn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new ze(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const Hp=new rt,gd=new qr,Il=new Mn,Dl=new N;class Gv extends Ft{constructor(e=new yt,t=new rf){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Il.copy(n.boundingSphere),Il.applyMatrix4(i),Il.radius+=r,e.ray.intersectsSphere(Il)===!1)return;Hp.copy(i).invert(),gd.copy(e.ray).applyMatrix4(Hp);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=n.index,u=n.attributes.position;if(c!==null){const d=Math.max(0,o.start),f=Math.min(c.count,o.start+o.count);for(let p=d,v=f;p<v;p++){const m=c.getX(p);Dl.fromBufferAttribute(u,m),Wp(Dl,m,l,i,e,t,this)}}else{const d=Math.max(0,o.start),f=Math.min(u.count,o.start+o.count);for(let p=d,v=f;p<v;p++)Dl.fromBufferAttribute(u,p),Wp(Dl,p,l,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}function Wp(s,e,t,n,i,r,o){const a=gd.distanceSqToPoint(s);if(a<t){const l=new N;gd.closestPointToPoint(s,l),l.applyMatrix4(n);const c=i.ray.origin.distanceTo(l);if(c<i.near||c>i.far)return;r.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,faceIndex:null,barycoord:null,object:o})}}class Hv extends cn{constructor(e,t,n,i,r,o,a,l,c){super(e,t,n,i,r,o,a,l,c),this.isVideoTexture=!0,this.minFilter=o!==void 0?o:_n,this.magFilter=r!==void 0?r:_n,this.generateMipmaps=!1;const h=this;function u(){h.needsUpdate=!0,e.requestVideoFrameCallback(u)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(u)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class Gx extends Hv{constructor(e,t,n,i,r,o,a,l){super({},e,t,n,i,r,o,a,l),this.isVideoFrameTexture=!0}update(){}clone(){return new this.constructor().copy(this)}setFrame(e){this.image=e,this.needsUpdate=!0}}class Hx extends cn{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=On,this.minFilter=On,this.generateMipmaps=!1,this.needsUpdate=!0}}class Mh extends cn{constructor(e,t,n,i,r,o,a,l,c,h,u,d){super(null,o,a,l,c,h,i,r,u,d),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class Wx extends Mh{constructor(e,t,n,i,r,o){super(e,t,n,r,o),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=di,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class Xx extends Mh{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,wr),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class Wv extends cn{constructor(e,t,n,i,r,o,a,l,c){super(e,t,n,i,r,o,a,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}}class sf extends cn{constructor(e,t,n,i,r,o,a,l,c,h=Ps){if(h!==Ps&&h!==Fs)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&h===Ps&&(n=Er),n===void 0&&h===Fs&&(n=Os),super(null,i,r,o,a,l,h,n,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=a!==void 0?a:On,this.minFilter=l!==void 0?l:On,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class Ji{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),r=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),r+=n.distanceTo(i),t.push(r),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const r=n.length;let o;t?o=t:o=e*n[r-1];let a=0,l=r-1,c;for(;a<=l;)if(i=Math.floor(a+(l-a)/2),c=n[i]-o,c<0)a=i+1;else if(c>0)l=i-1;else{l=i;break}if(i=l,n[i]===o)return i/(r-1);const h=n[i],d=n[i+1]-h,f=(o-h)/d;return(i+f)/(r-1)}getTangent(e,t){let i=e-1e-4,r=e+1e-4;i<0&&(i=0),r>1&&(r=1);const o=this.getPoint(i),a=this.getPoint(r),l=t||(o.isVector2?new ve:new N);return l.copy(a).sub(o).normalize(),l}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new N,i=[],r=[],o=[],a=new N,l=new rt;for(let f=0;f<=e;f++){const p=f/e;i[f]=this.getTangentAt(p,new N)}r[0]=new N,o[0]=new N;let c=Number.MAX_VALUE;const h=Math.abs(i[0].x),u=Math.abs(i[0].y),d=Math.abs(i[0].z);h<=c&&(c=h,n.set(1,0,0)),u<=c&&(c=u,n.set(0,1,0)),d<=c&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],a),o[0].crossVectors(i[0],r[0]);for(let f=1;f<=e;f++){if(r[f]=r[f-1].clone(),o[f]=o[f-1].clone(),a.crossVectors(i[f-1],i[f]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(Mt(i[f-1].dot(i[f]),-1,1));r[f].applyMatrix4(l.makeRotationAxis(a,p))}o[f].crossVectors(i[f],r[f])}if(t===!0){let f=Math.acos(Mt(r[0].dot(r[e]),-1,1));f/=e,i[0].dot(a.crossVectors(r[0],r[e]))>0&&(f=-f);for(let p=1;p<=e;p++)r[p].applyMatrix4(l.makeRotationAxis(i[p],f*p)),o[p].crossVectors(i[p],r[p])}return{tangents:i,normals:r,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class wh extends Ji{constructor(e=0,t=0,n=1,i=1,r=0,o=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(e,t=new ve){const n=t,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const o=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(o?r=0:r=i),this.aClockwise===!0&&!o&&(r===i?r=-i:r=r-i);const a=this.aStartAngle+e*r;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const h=Math.cos(this.aRotation),u=Math.sin(this.aRotation),d=l-this.aX,f=c-this.aY;l=d*h-f*u+this.aX,c=d*u+f*h+this.aY}return n.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class Xv extends wh{constructor(e,t,n,i,r,o){super(e,t,n,n,i,r,o),this.isArcCurve=!0,this.type="ArcCurve"}}function of(){let s=0,e=0,t=0,n=0;function i(r,o,a,l){s=r,e=a,t=-3*r+3*o-2*a-l,n=2*r-2*o+a+l}return{initCatmullRom:function(r,o,a,l,c){i(o,a,c*(a-r),c*(l-o))},initNonuniformCatmullRom:function(r,o,a,l,c,h,u){let d=(o-r)/c-(a-r)/(c+h)+(a-o)/h,f=(a-o)/h-(l-o)/(h+u)+(l-a)/u;d*=h,f*=h,i(o,a,d,f)},calc:function(r){const o=r*r,a=o*r;return s+e*r+t*o+n*a}}}const Ul=new N,Cu=new of,Ru=new of,Pu=new of;class Yv extends Ji{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new N){const n=t,i=this.points,r=i.length,o=(r-(this.closed?0:1))*e;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/r)+1)*r:l===0&&a===r-1&&(a=r-2,l=1);let c,h;this.closed||a>0?c=i[(a-1)%r]:(Ul.subVectors(i[0],i[1]).add(i[0]),c=Ul);const u=i[a%r],d=i[(a+1)%r];if(this.closed||a+2<r?h=i[(a+2)%r]:(Ul.subVectors(i[r-1],i[r-2]).add(i[r-1]),h=Ul),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let p=Math.pow(c.distanceToSquared(u),f),v=Math.pow(u.distanceToSquared(d),f),m=Math.pow(d.distanceToSquared(h),f);v<1e-4&&(v=1),p<1e-4&&(p=v),m<1e-4&&(m=v),Cu.initNonuniformCatmullRom(c.x,u.x,d.x,h.x,p,v,m),Ru.initNonuniformCatmullRom(c.y,u.y,d.y,h.y,p,v,m),Pu.initNonuniformCatmullRom(c.z,u.z,d.z,h.z,p,v,m)}else this.curveType==="catmullrom"&&(Cu.initCatmullRom(c.x,u.x,d.x,h.x,this.tension),Ru.initCatmullRom(c.y,u.y,d.y,h.y,this.tension),Pu.initCatmullRom(c.z,u.z,d.z,h.z,this.tension));return n.set(Cu.calc(l),Ru.calc(l),Pu.calc(l)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new N().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function Xp(s,e,t,n,i){const r=(n-e)*.5,o=(i-t)*.5,a=s*s,l=s*a;return(2*t-2*n+r+o)*l+(-3*t+3*n-2*r-o)*a+r*s+t}function Yx(s,e){const t=1-s;return t*t*e}function qx(s,e){return 2*(1-s)*s*e}function jx(s,e){return s*s*e}function _a(s,e,t,n){return Yx(s,e)+qx(s,t)+jx(s,n)}function Zx(s,e){const t=1-s;return t*t*t*e}function Jx(s,e){const t=1-s;return 3*t*t*s*e}function Kx(s,e){return 3*(1-s)*s*s*e}function Qx(s,e){return s*s*s*e}function ya(s,e,t,n,i){return Zx(s,e)+Jx(s,t)+Kx(s,n)+Qx(s,i)}class af extends Ji{constructor(e=new ve,t=new ve,n=new ve,i=new ve){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new ve){const n=t,i=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(ya(e,i.x,r.x,o.x,a.x),ya(e,i.y,r.y,o.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class qv extends Ji{constructor(e=new N,t=new N,n=new N,i=new N){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new N){const n=t,i=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(ya(e,i.x,r.x,o.x,a.x),ya(e,i.y,r.y,o.y,a.y),ya(e,i.z,r.z,o.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class lf extends Ji{constructor(e=new ve,t=new ve){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ve){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new ve){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class jv extends Ji{constructor(e=new N,t=new N){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new N){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new N){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class cf extends Ji{constructor(e=new ve,t=new ve,n=new ve){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new ve){const n=t,i=this.v0,r=this.v1,o=this.v2;return n.set(_a(e,i.x,r.x,o.x),_a(e,i.y,r.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class hf extends Ji{constructor(e=new N,t=new N,n=new N){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new N){const n=t,i=this.v0,r=this.v1,o=this.v2;return n.set(_a(e,i.x,r.x,o.x),_a(e,i.y,r.y,o.y),_a(e,i.z,r.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class uf extends Ji{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new ve){const n=t,i=this.points,r=(i.length-1)*e,o=Math.floor(r),a=r-o,l=i[o===0?o:o-1],c=i[o],h=i[o>i.length-2?i.length-1:o+1],u=i[o>i.length-3?i.length-1:o+2];return n.set(Xp(a,l.x,c.x,h.x,u.x),Xp(a,l.y,c.y,h.y,u.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new ve().fromArray(i))}return this}}var Kc=Object.freeze({__proto__:null,ArcCurve:Xv,CatmullRomCurve3:Yv,CubicBezierCurve:af,CubicBezierCurve3:qv,EllipseCurve:wh,LineCurve:lf,LineCurve3:jv,QuadraticBezierCurve:cf,QuadraticBezierCurve3:hf,SplineCurve:uf});class Zv extends Ji{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Kc[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const o=i[r]-n,a=this.curves[r],l=a.getLength(),c=l===0?0:1-o/l;return a.getPointAt(c,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const o=r[i],a=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,l=o.getPoints(a);for(let c=0;c<l.length;c++){const h=l[c];n&&n.equals(h)||(t.push(h),n=h)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new Kc[i.type]().fromJSON(i))}return this}}class Da extends Zv{constructor(e){super(),this.type="Path",this.currentPoint=new ve,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new lf(this.currentPoint.clone(),new ve(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const r=new cf(this.currentPoint.clone(),new ve(e,t),new ve(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,r,o){const a=new af(this.currentPoint.clone(),new ve(e,t),new ve(n,i),new ve(r,o));return this.curves.push(a),this.currentPoint.set(r,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new uf(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,r,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+a,t+l,n,i,r,o),this}absarc(e,t,n,i,r,o){return this.absellipse(e,t,n,n,i,r,o),this}ellipse(e,t,n,i,r,o,a,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+c,t+h,n,i,r,o,a,l),this}absellipse(e,t,n,i,r,o,a,l){const c=new wh(e,t,n,i,r,o,a,l);if(this.curves.length>0){const u=c.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(c);const h=c.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Qa extends yt{constructor(e=[new ve(0,-.5),new ve(.5,0),new ve(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=Mt(i,0,Math.PI*2);const r=[],o=[],a=[],l=[],c=[],h=1/t,u=new N,d=new ve,f=new N,p=new N,v=new N;let m=0,g=0;for(let x=0;x<=e.length-1;x++)switch(x){case 0:m=e[x+1].x-e[x].x,g=e[x+1].y-e[x].y,f.x=g*1,f.y=-m,f.z=g*0,v.copy(f),f.normalize(),l.push(f.x,f.y,f.z);break;case e.length-1:l.push(v.x,v.y,v.z);break;default:m=e[x+1].x-e[x].x,g=e[x+1].y-e[x].y,f.x=g*1,f.y=-m,f.z=g*0,p.copy(f),f.x+=v.x,f.y+=v.y,f.z+=v.z,f.normalize(),l.push(f.x,f.y,f.z),v.copy(p)}for(let x=0;x<=t;x++){const y=n+x*h*i,_=Math.sin(y),E=Math.cos(y);for(let w=0;w<=e.length-1;w++){u.x=e[w].x*_,u.y=e[w].y,u.z=e[w].x*E,o.push(u.x,u.y,u.z),d.x=x/t,d.y=w/(e.length-1),a.push(d.x,d.y);const M=l[3*w+0]*_,T=l[3*w+1],S=l[3*w+0]*E;c.push(M,T,S)}}for(let x=0;x<t;x++)for(let y=0;y<e.length-1;y++){const _=y+x*e.length,E=_,w=_+e.length,M=_+e.length+1,T=_+1;r.push(E,w,T),r.push(M,T,w)}this.setIndex(r),this.setAttribute("position",new qe(o,3)),this.setAttribute("uv",new qe(a,2)),this.setAttribute("normal",new qe(c,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Qa(e.points,e.segments,e.phiStart,e.phiLength)}}class Eh extends Qa{constructor(e=1,t=1,n=4,i=8){const r=new Da;r.absarc(0,-t/2,e,Math.PI*1.5,0),r.absarc(0,t/2,e,0,Math.PI*.5),super(r.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new Eh(e.radius,e.length,e.capSegments,e.radialSegments)}}class Th extends yt{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const r=[],o=[],a=[],l=[],c=new N,h=new ve;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let u=0,d=3;u<=t;u++,d+=3){const f=n+u/t*i;c.x=e*Math.cos(f),c.y=e*Math.sin(f),o.push(c.x,c.y,c.z),a.push(0,0,1),h.x=(o[d]/e+1)/2,h.y=(o[d+1]/e+1)/2,l.push(h.x,h.y)}for(let u=1;u<=t;u++)r.push(u,u+1,0);this.setIndex(r),this.setAttribute("position",new qe(o,3)),this.setAttribute("normal",new qe(a,3)),this.setAttribute("uv",new qe(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Th(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Fo extends yt{constructor(e=1,t=1,n=1,i=32,r=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:o,thetaStart:a,thetaLength:l};const c=this;i=Math.floor(i),r=Math.floor(r);const h=[],u=[],d=[],f=[];let p=0;const v=[],m=n/2;let g=0;x(),o===!1&&(e>0&&y(!0),t>0&&y(!1)),this.setIndex(h),this.setAttribute("position",new qe(u,3)),this.setAttribute("normal",new qe(d,3)),this.setAttribute("uv",new qe(f,2));function x(){const _=new N,E=new N;let w=0;const M=(t-e)/n;for(let T=0;T<=r;T++){const S=[],b=T/r,I=b*(t-e)+e;for(let D=0;D<=i;D++){const G=D/i,H=G*l+a,$=Math.sin(H),F=Math.cos(H);E.x=I*$,E.y=-b*n+m,E.z=I*F,u.push(E.x,E.y,E.z),_.set($,M,F).normalize(),d.push(_.x,_.y,_.z),f.push(G,1-b),S.push(p++)}v.push(S)}for(let T=0;T<i;T++)for(let S=0;S<r;S++){const b=v[S][T],I=v[S+1][T],D=v[S+1][T+1],G=v[S][T+1];(e>0||S!==0)&&(h.push(b,I,G),w+=3),(t>0||S!==r-1)&&(h.push(I,D,G),w+=3)}c.addGroup(g,w,0),g+=w}function y(_){const E=p,w=new ve,M=new N;let T=0;const S=_===!0?e:t,b=_===!0?1:-1;for(let D=1;D<=i;D++)u.push(0,m*b,0),d.push(0,b,0),f.push(.5,.5),p++;const I=p;for(let D=0;D<=i;D++){const H=D/i*l+a,$=Math.cos(H),F=Math.sin(H);M.x=S*F,M.y=m*b,M.z=S*$,u.push(M.x,M.y,M.z),d.push(0,b,0),w.x=$*.5+.5,w.y=F*.5*b+.5,f.push(w.x,w.y),p++}for(let D=0;D<i;D++){const G=E+D,H=I+D;_===!0?h.push(H,H+1,G):h.push(H+1,H,G),T+=3}c.addGroup(g,T,_===!0?1:2),g+=T}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Fo(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Ah extends Fo{constructor(e=1,t=1,n=32,i=1,r=!1,o=0,a=Math.PI*2){super(0,e,t,n,i,r,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:o,thetaLength:a}}static fromJSON(e){return new Ah(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class jr extends yt{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const r=[],o=[];a(i),c(n),h(),this.setAttribute("position",new qe(r,3)),this.setAttribute("normal",new qe(r.slice(),3)),this.setAttribute("uv",new qe(o,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function a(x){const y=new N,_=new N,E=new N;for(let w=0;w<t.length;w+=3)f(t[w+0],y),f(t[w+1],_),f(t[w+2],E),l(y,_,E,x)}function l(x,y,_,E){const w=E+1,M=[];for(let T=0;T<=w;T++){M[T]=[];const S=x.clone().lerp(_,T/w),b=y.clone().lerp(_,T/w),I=w-T;for(let D=0;D<=I;D++)D===0&&T===w?M[T][D]=S:M[T][D]=S.clone().lerp(b,D/I)}for(let T=0;T<w;T++)for(let S=0;S<2*(w-T)-1;S++){const b=Math.floor(S/2);S%2===0?(d(M[T][b+1]),d(M[T+1][b]),d(M[T][b])):(d(M[T][b+1]),d(M[T+1][b+1]),d(M[T+1][b]))}}function c(x){const y=new N;for(let _=0;_<r.length;_+=3)y.x=r[_+0],y.y=r[_+1],y.z=r[_+2],y.normalize().multiplyScalar(x),r[_+0]=y.x,r[_+1]=y.y,r[_+2]=y.z}function h(){const x=new N;for(let y=0;y<r.length;y+=3){x.x=r[y+0],x.y=r[y+1],x.z=r[y+2];const _=m(x)/2/Math.PI+.5,E=g(x)/Math.PI+.5;o.push(_,1-E)}p(),u()}function u(){for(let x=0;x<o.length;x+=6){const y=o[x+0],_=o[x+2],E=o[x+4],w=Math.max(y,_,E),M=Math.min(y,_,E);w>.9&&M<.1&&(y<.2&&(o[x+0]+=1),_<.2&&(o[x+2]+=1),E<.2&&(o[x+4]+=1))}}function d(x){r.push(x.x,x.y,x.z)}function f(x,y){const _=x*3;y.x=e[_+0],y.y=e[_+1],y.z=e[_+2]}function p(){const x=new N,y=new N,_=new N,E=new N,w=new ve,M=new ve,T=new ve;for(let S=0,b=0;S<r.length;S+=9,b+=6){x.set(r[S+0],r[S+1],r[S+2]),y.set(r[S+3],r[S+4],r[S+5]),_.set(r[S+6],r[S+7],r[S+8]),w.set(o[b+0],o[b+1]),M.set(o[b+2],o[b+3]),T.set(o[b+4],o[b+5]),E.copy(x).add(y).add(_).divideScalar(3);const I=m(E);v(w,b+0,x,I),v(M,b+2,y,I),v(T,b+4,_,I)}}function v(x,y,_,E){E<0&&x.x===1&&(o[y]=x.x-1),_.x===0&&_.z===0&&(o[y]=E/2/Math.PI+.5)}function m(x){return Math.atan2(x.z,-x.x)}function g(x){return Math.atan2(-x.y,Math.sqrt(x.x*x.x+x.z*x.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new jr(e.vertices,e.indices,e.radius,e.details)}}class Ch extends jr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,o,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ch(e.radius,e.detail)}}const Ll=new N,Nl=new N,Iu=new N,Ol=new ui;class Jv extends yt{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),r=Math.cos(Is*t),o=e.getIndex(),a=e.getAttribute("position"),l=o?o.count:a.count,c=[0,0,0],h=["a","b","c"],u=new Array(3),d={},f=[];for(let p=0;p<l;p+=3){o?(c[0]=o.getX(p),c[1]=o.getX(p+1),c[2]=o.getX(p+2)):(c[0]=p,c[1]=p+1,c[2]=p+2);const{a:v,b:m,c:g}=Ol;if(v.fromBufferAttribute(a,c[0]),m.fromBufferAttribute(a,c[1]),g.fromBufferAttribute(a,c[2]),Ol.getNormal(Iu),u[0]=`${Math.round(v.x*i)},${Math.round(v.y*i)},${Math.round(v.z*i)}`,u[1]=`${Math.round(m.x*i)},${Math.round(m.y*i)},${Math.round(m.z*i)}`,u[2]=`${Math.round(g.x*i)},${Math.round(g.y*i)},${Math.round(g.z*i)}`,!(u[0]===u[1]||u[1]===u[2]||u[2]===u[0]))for(let x=0;x<3;x++){const y=(x+1)%3,_=u[x],E=u[y],w=Ol[h[x]],M=Ol[h[y]],T=`${_}_${E}`,S=`${E}_${_}`;S in d&&d[S]?(Iu.dot(d[S].normal)<=r&&(f.push(w.x,w.y,w.z),f.push(M.x,M.y,M.z)),d[S]=null):T in d||(d[T]={index0:c[x],index1:c[y],normal:Iu.clone()})}}for(const p in d)if(d[p]){const{index0:v,index1:m}=d[p];Ll.fromBufferAttribute(a,v),Nl.fromBufferAttribute(a,m),f.push(Ll.x,Ll.y,Ll.z),f.push(Nl.x,Nl.y,Nl.z)}this.setAttribute("position",new qe(f,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Ds extends Da{constructor(e){super(e),this.uuid=Ci(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Da().fromJSON(i))}return this}}const $x={triangulate:function(s,e,t=2){const n=e&&e.length,i=n?e[0]*t:s.length;let r=Kv(s,0,i,t,!0);const o=[];if(!r||r.next===r.prev)return o;let a,l,c,h,u,d,f;if(n&&(r=rb(s,e,r,t)),s.length>80*t){a=c=s[0],l=h=s[1];for(let p=t;p<i;p+=t)u=s[p],d=s[p+1],u<a&&(a=u),d<l&&(l=d),u>c&&(c=u),d>h&&(h=d);f=Math.max(c-a,h-l),f=f!==0?32767/f:0}return Ua(r,o,t,a,l,f,0),o}};function Kv(s,e,t,n,i){let r,o;if(i===mb(s,e,t,n)>0)for(r=e;r<t;r+=n)o=Yp(r,s[r],s[r+1],o);else for(r=t-n;r>=e;r-=n)o=Yp(r,s[r],s[r+1],o);return o&&Rh(o,o.next)&&(Na(o),o=o.next),o}function zs(s,e){if(!s)return s;e||(e=s);let t=s,n;do if(n=!1,!t.steiner&&(Rh(t,t.next)||an(t.prev,t,t.next)===0)){if(Na(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function Ua(s,e,t,n,i,r,o){if(!s)return;!o&&r&&cb(s,n,i,r);let a=s,l,c;for(;s.prev!==s.next;){if(l=s.prev,c=s.next,r?tb(s,n,i,r):eb(s)){e.push(l.i/t|0),e.push(s.i/t|0),e.push(c.i/t|0),Na(s),s=c.next,a=c.next;continue}if(s=c,s===a){o?o===1?(s=nb(zs(s),e,t),Ua(s,e,t,n,i,r,2)):o===2&&ib(s,e,t,n,i,r):Ua(zs(s),e,t,n,i,r,1);break}}}function eb(s){const e=s.prev,t=s,n=s.next;if(an(e,t,n)>=0)return!1;const i=e.x,r=t.x,o=n.x,a=e.y,l=t.y,c=n.y,h=i<r?i<o?i:o:r<o?r:o,u=a<l?a<c?a:c:l<c?l:c,d=i>r?i>o?i:o:r>o?r:o,f=a>l?a>c?a:c:l>c?l:c;let p=n.next;for(;p!==e;){if(p.x>=h&&p.x<=d&&p.y>=u&&p.y<=f&&wo(i,a,r,l,o,c,p.x,p.y)&&an(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function tb(s,e,t,n){const i=s.prev,r=s,o=s.next;if(an(i,r,o)>=0)return!1;const a=i.x,l=r.x,c=o.x,h=i.y,u=r.y,d=o.y,f=a<l?a<c?a:c:l<c?l:c,p=h<u?h<d?h:d:u<d?u:d,v=a>l?a>c?a:c:l>c?l:c,m=h>u?h>d?h:d:u>d?u:d,g=vd(f,p,e,t,n),x=vd(v,m,e,t,n);let y=s.prevZ,_=s.nextZ;for(;y&&y.z>=g&&_&&_.z<=x;){if(y.x>=f&&y.x<=v&&y.y>=p&&y.y<=m&&y!==i&&y!==o&&wo(a,h,l,u,c,d,y.x,y.y)&&an(y.prev,y,y.next)>=0||(y=y.prevZ,_.x>=f&&_.x<=v&&_.y>=p&&_.y<=m&&_!==i&&_!==o&&wo(a,h,l,u,c,d,_.x,_.y)&&an(_.prev,_,_.next)>=0))return!1;_=_.nextZ}for(;y&&y.z>=g;){if(y.x>=f&&y.x<=v&&y.y>=p&&y.y<=m&&y!==i&&y!==o&&wo(a,h,l,u,c,d,y.x,y.y)&&an(y.prev,y,y.next)>=0)return!1;y=y.prevZ}for(;_&&_.z<=x;){if(_.x>=f&&_.x<=v&&_.y>=p&&_.y<=m&&_!==i&&_!==o&&wo(a,h,l,u,c,d,_.x,_.y)&&an(_.prev,_,_.next)>=0)return!1;_=_.nextZ}return!0}function nb(s,e,t){let n=s;do{const i=n.prev,r=n.next.next;!Rh(i,r)&&Qv(i,n,n.next,r)&&La(i,r)&&La(r,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(r.i/t|0),Na(n),Na(n.next),n=s=r),n=n.next}while(n!==s);return zs(n)}function ib(s,e,t,n,i,r){let o=s;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&db(o,a)){let l=$v(o,a);o=zs(o,o.next),l=zs(l,l.next),Ua(o,e,t,n,i,r,0),Ua(l,e,t,n,i,r,0);return}a=a.next}o=o.next}while(o!==s)}function rb(s,e,t,n){const i=[];let r,o,a,l,c;for(r=0,o=e.length;r<o;r++)a=e[r]*n,l=r<o-1?e[r+1]*n:s.length,c=Kv(s,a,l,n,!1),c===c.next&&(c.steiner=!0),i.push(ub(c));for(i.sort(sb),r=0;r<i.length;r++)t=ob(i[r],t);return t}function sb(s,e){return s.x-e.x}function ob(s,e){const t=ab(s,e);if(!t)return e;const n=$v(t,s);return zs(n,n.next),zs(t,t.next)}function ab(s,e){let t=e,n=-1/0,i;const r=s.x,o=s.y;do{if(o<=t.y&&o>=t.next.y&&t.next.y!==t.y){const d=t.x+(o-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(d<=r&&d>n&&(n=d,i=t.x<t.next.x?t:t.next,d===r))return i}t=t.next}while(t!==e);if(!i)return null;const a=i,l=i.x,c=i.y;let h=1/0,u;t=i;do r>=t.x&&t.x>=l&&r!==t.x&&wo(o<c?r:n,o,l,c,o<c?n:r,o,t.x,t.y)&&(u=Math.abs(o-t.y)/(r-t.x),La(t,s)&&(u<h||u===h&&(t.x>i.x||t.x===i.x&&lb(i,t)))&&(i=t,h=u)),t=t.next;while(t!==a);return i}function lb(s,e){return an(s.prev,s,e.prev)<0&&an(e.next,s,s.next)<0}function cb(s,e,t,n){let i=s;do i.z===0&&(i.z=vd(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,hb(i)}function hb(s){let e,t,n,i,r,o,a,l,c=1;do{for(t=s,s=null,r=null,o=0;t;){for(o++,n=t,a=0,e=0;e<c&&(a++,n=n.nextZ,!!n);e++);for(l=c;a>0||l>0&&n;)a!==0&&(l===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,a--):(i=n,n=n.nextZ,l--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;t=n}r.nextZ=null,c*=2}while(o>1);return s}function vd(s,e,t,n,i){return s=(s-t)*i|0,e=(e-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function ub(s){let e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function wo(s,e,t,n,i,r,o,a){return(i-o)*(e-a)>=(s-o)*(r-a)&&(s-o)*(n-a)>=(t-o)*(e-a)&&(t-o)*(r-a)>=(i-o)*(n-a)}function db(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!fb(s,e)&&(La(s,e)&&La(e,s)&&pb(s,e)&&(an(s.prev,s,e.prev)||an(s,e.prev,e))||Rh(s,e)&&an(s.prev,s,s.next)>0&&an(e.prev,e,e.next)>0)}function an(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function Rh(s,e){return s.x===e.x&&s.y===e.y}function Qv(s,e,t,n){const i=kl(an(s,e,t)),r=kl(an(s,e,n)),o=kl(an(t,n,s)),a=kl(an(t,n,e));return!!(i!==r&&o!==a||i===0&&Fl(s,t,e)||r===0&&Fl(s,n,e)||o===0&&Fl(t,s,n)||a===0&&Fl(t,e,n))}function Fl(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function kl(s){return s>0?1:s<0?-1:0}function fb(s,e){let t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&Qv(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function La(s,e){return an(s.prev,s,s.next)<0?an(s,e,s.next)>=0&&an(s,s.prev,e)>=0:an(s,e,s.prev)<0||an(s,s.next,e)<0}function pb(s,e){let t=s,n=!1;const i=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&i<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==s);return n}function $v(s,e){const t=new _d(s.i,s.x,s.y),n=new _d(e.i,e.x,e.y),i=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=i,i.prev=t,n.next=t,t.prev=n,r.next=n,n.prev=r,n}function Yp(s,e,t,n){const i=new _d(s,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Na(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function _d(s,e,t){this.i=s,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function mb(s,e,t,n){let i=0;for(let r=e,o=t-n;r<t;r+=n)i+=(s[o]-s[r])*(s[r+1]+s[o+1]),o=r;return i}class or{static area(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return n*.5}static isClockWise(e){return or.area(e)<0}static triangulateShape(e,t){const n=[],i=[],r=[];qp(e),jp(n,e);let o=e.length;t.forEach(qp);for(let l=0;l<t.length;l++)i.push(o),o+=t[l].length,jp(n,t[l]);const a=$x.triangulate(n,i);for(let l=0;l<a.length;l+=3)r.push(a.slice(l,l+3));return r}}function qp(s){const e=s.length;e>2&&s[e-1].equals(s[0])&&s.pop()}function jp(s,e){for(let t=0;t<e.length;t++)s.push(e[t].x),s.push(e[t].y)}class Ph extends yt{constructor(e=new Ds([new ve(.5,.5),new ve(-.5,.5),new ve(-.5,-.5),new ve(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],r=[];for(let a=0,l=e.length;a<l;a++){const c=e[a];o(c)}this.setAttribute("position",new qe(i,3)),this.setAttribute("uv",new qe(r,2)),this.computeVertexNormals();function o(a){const l=[],c=t.curveSegments!==void 0?t.curveSegments:12,h=t.steps!==void 0?t.steps:1,u=t.depth!==void 0?t.depth:1;let d=t.bevelEnabled!==void 0?t.bevelEnabled:!0,f=t.bevelThickness!==void 0?t.bevelThickness:.2,p=t.bevelSize!==void 0?t.bevelSize:f-.1,v=t.bevelOffset!==void 0?t.bevelOffset:0,m=t.bevelSegments!==void 0?t.bevelSegments:3;const g=t.extrudePath,x=t.UVGenerator!==void 0?t.UVGenerator:gb;let y,_=!1,E,w,M,T;g&&(y=g.getSpacedPoints(h),_=!0,d=!1,E=g.computeFrenetFrames(h,!1),w=new N,M=new N,T=new N),d||(m=0,f=0,p=0,v=0);const S=a.extractPoints(c);let b=S.shape;const I=S.holes;if(!or.isClockWise(b)){b=b.reverse();for(let re=0,me=I.length;re<me;re++){const z=I[re];or.isClockWise(z)&&(I[re]=z.reverse())}}const G=or.triangulateShape(b,I),H=b;for(let re=0,me=I.length;re<me;re++){const z=I[re];b=b.concat(z)}function $(re,me,z){return me||console.error("THREE.ExtrudeGeometry: vec does not exist"),re.clone().addScaledVector(me,z)}const F=b.length,Z=G.length;function q(re,me,z){let Me,de,Ee;const ce=re.x-me.x,Ue=re.y-me.y,_e=z.x-re.x,P=z.y-re.y,R=ce*ce+Ue*Ue,ee=ce*P-Ue*_e;if(Math.abs(ee)>Number.EPSILON){const ae=Math.sqrt(R),le=Math.sqrt(_e*_e+P*P),fe=me.x-Ue/ae,Ae=me.y+ce/ae,ye=z.x-P/le,Ce=z.y+_e/le,He=((ye-fe)*P-(Ce-Ae)*_e)/(ce*P-Ue*_e);Me=fe+ce*He-re.x,de=Ae+Ue*He-re.y;const Re=Me*Me+de*de;if(Re<=2)return new ve(Me,de);Ee=Math.sqrt(Re/2)}else{let ae=!1;ce>Number.EPSILON?_e>Number.EPSILON&&(ae=!0):ce<-Number.EPSILON?_e<-Number.EPSILON&&(ae=!0):Math.sign(Ue)===Math.sign(P)&&(ae=!0),ae?(Me=-Ue,de=ce,Ee=Math.sqrt(R)):(Me=ce,de=Ue,Ee=Math.sqrt(R/2))}return new ve(Me/Ee,de/Ee)}const j=[];for(let re=0,me=H.length,z=me-1,Me=re+1;re<me;re++,z++,Me++)z===me&&(z=0),Me===me&&(Me=0),j[re]=q(H[re],H[z],H[Me]);const J=[];let B,Y=j.concat();for(let re=0,me=I.length;re<me;re++){const z=I[re];B=[];for(let Me=0,de=z.length,Ee=de-1,ce=Me+1;Me<de;Me++,Ee++,ce++)Ee===de&&(Ee=0),ce===de&&(ce=0),B[Me]=q(z[Me],z[Ee],z[ce]);J.push(B),Y=Y.concat(B)}for(let re=0;re<m;re++){const me=re/m,z=f*Math.cos(me*Math.PI/2),Me=p*Math.sin(me*Math.PI/2)+v;for(let de=0,Ee=H.length;de<Ee;de++){const ce=$(H[de],j[de],Me);X(ce.x,ce.y,-z)}for(let de=0,Ee=I.length;de<Ee;de++){const ce=I[de];B=J[de];for(let Ue=0,_e=ce.length;Ue<_e;Ue++){const P=$(ce[Ue],B[Ue],Me);X(P.x,P.y,-z)}}}const K=p+v;for(let re=0;re<F;re++){const me=d?$(b[re],Y[re],K):b[re];_?(M.copy(E.normals[0]).multiplyScalar(me.x),w.copy(E.binormals[0]).multiplyScalar(me.y),T.copy(y[0]).add(M).add(w),X(T.x,T.y,T.z)):X(me.x,me.y,0)}for(let re=1;re<=h;re++)for(let me=0;me<F;me++){const z=d?$(b[me],Y[me],K):b[me];_?(M.copy(E.normals[re]).multiplyScalar(z.x),w.copy(E.binormals[re]).multiplyScalar(z.y),T.copy(y[re]).add(M).add(w),X(T.x,T.y,T.z)):X(z.x,z.y,u/h*re)}for(let re=m-1;re>=0;re--){const me=re/m,z=f*Math.cos(me*Math.PI/2),Me=p*Math.sin(me*Math.PI/2)+v;for(let de=0,Ee=H.length;de<Ee;de++){const ce=$(H[de],j[de],Me);X(ce.x,ce.y,u+z)}for(let de=0,Ee=I.length;de<Ee;de++){const ce=I[de];B=J[de];for(let Ue=0,_e=ce.length;Ue<_e;Ue++){const P=$(ce[Ue],B[Ue],Me);_?X(P.x,P.y+y[h-1].y,y[h-1].x+z):X(P.x,P.y,u+z)}}}V(),W();function V(){const re=i.length/3;if(d){let me=0,z=F*me;for(let Me=0;Me<Z;Me++){const de=G[Me];te(de[2]+z,de[1]+z,de[0]+z)}me=h+m*2,z=F*me;for(let Me=0;Me<Z;Me++){const de=G[Me];te(de[0]+z,de[1]+z,de[2]+z)}}else{for(let me=0;me<Z;me++){const z=G[me];te(z[2],z[1],z[0])}for(let me=0;me<Z;me++){const z=G[me];te(z[0]+F*h,z[1]+F*h,z[2]+F*h)}}n.addGroup(re,i.length/3-re,0)}function W(){const re=i.length/3;let me=0;Q(H,me),me+=H.length;for(let z=0,Me=I.length;z<Me;z++){const de=I[z];Q(de,me),me+=de.length}n.addGroup(re,i.length/3-re,1)}function Q(re,me){let z=re.length;for(;--z>=0;){const Me=z;let de=z-1;de<0&&(de=re.length-1);for(let Ee=0,ce=h+m*2;Ee<ce;Ee++){const Ue=F*Ee,_e=F*(Ee+1),P=me+Me+Ue,R=me+de+Ue,ee=me+de+_e,ae=me+Me+_e;ge(P,R,ee,ae)}}}function X(re,me,z){l.push(re),l.push(me),l.push(z)}function te(re,me,z){be(re),be(me),be(z);const Me=i.length/3,de=x.generateTopUV(n,i,Me-3,Me-2,Me-1);we(de[0]),we(de[1]),we(de[2])}function ge(re,me,z,Me){be(re),be(me),be(Me),be(me),be(z),be(Me);const de=i.length/3,Ee=x.generateSideWallUV(n,i,de-6,de-3,de-2,de-1);we(Ee[0]),we(Ee[1]),we(Ee[3]),we(Ee[1]),we(Ee[2]),we(Ee[3])}function be(re){i.push(l[re*3+0]),i.push(l[re*3+1]),i.push(l[re*3+2])}function we(re){r.push(re.x),r.push(re.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return vb(t,n,e)}static fromJSON(e,t){const n=[];for(let r=0,o=e.shapes.length;r<o;r++){const a=t[e.shapes[r]];n.push(a)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new Kc[i.type]().fromJSON(i)),new Ph(n,e.options)}}const gb={generateTopUV:function(s,e,t,n,i){const r=e[t*3],o=e[t*3+1],a=e[n*3],l=e[n*3+1],c=e[i*3],h=e[i*3+1];return[new ve(r,o),new ve(a,l),new ve(c,h)]},generateSideWallUV:function(s,e,t,n,i,r){const o=e[t*3],a=e[t*3+1],l=e[t*3+2],c=e[n*3],h=e[n*3+1],u=e[n*3+2],d=e[i*3],f=e[i*3+1],p=e[i*3+2],v=e[r*3],m=e[r*3+1],g=e[r*3+2];return Math.abs(a-h)<Math.abs(o-c)?[new ve(o,1-l),new ve(c,1-u),new ve(d,1-p),new ve(v,1-g)]:[new ve(a,1-l),new ve(h,1-u),new ve(f,1-p),new ve(m,1-g)]}};function vb(s,e,t){if(t.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const r=s[n];t.shapes.push(r.uuid)}else t.shapes.push(s.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Ih extends jr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,r,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ih(e.radius,e.detail)}}class $a extends jr{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new $a(e.radius,e.detail)}}class hr extends yt{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,o=t/2,a=Math.floor(n),l=Math.floor(i),c=a+1,h=l+1,u=e/a,d=t/l,f=[],p=[],v=[],m=[];for(let g=0;g<h;g++){const x=g*d-o;for(let y=0;y<c;y++){const _=y*u-r;p.push(_,-x,0),v.push(0,0,1),m.push(y/a),m.push(1-g/l)}}for(let g=0;g<l;g++)for(let x=0;x<a;x++){const y=x+c*g,_=x+c*(g+1),E=x+1+c*(g+1),w=x+1+c*g;f.push(y,_,w),f.push(_,E,w)}this.setIndex(f),this.setAttribute("position",new qe(p,3)),this.setAttribute("normal",new qe(v,3)),this.setAttribute("uv",new qe(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new hr(e.width,e.height,e.widthSegments,e.heightSegments)}}class Dh extends yt{constructor(e=.5,t=1,n=32,i=1,r=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:o},n=Math.max(3,n),i=Math.max(1,i);const a=[],l=[],c=[],h=[];let u=e;const d=(t-e)/i,f=new N,p=new ve;for(let v=0;v<=i;v++){for(let m=0;m<=n;m++){const g=r+m/n*o;f.x=u*Math.cos(g),f.y=u*Math.sin(g),l.push(f.x,f.y,f.z),c.push(0,0,1),p.x=(f.x/t+1)/2,p.y=(f.y/t+1)/2,h.push(p.x,p.y)}u+=d}for(let v=0;v<i;v++){const m=v*(n+1);for(let g=0;g<n;g++){const x=g+m,y=x,_=x+n+1,E=x+n+2,w=x+1;a.push(y,_,w),a.push(_,E,w)}}this.setIndex(a),this.setAttribute("position",new qe(l,3)),this.setAttribute("normal",new qe(c,3)),this.setAttribute("uv",new qe(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Dh(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Uh extends yt{constructor(e=new Ds([new ve(0,.5),new ve(-.5,-.5),new ve(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],r=[],o=[];let a=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let h=0;h<e.length;h++)c(e[h]),this.addGroup(a,l,h),a+=l,l=0;this.setIndex(n),this.setAttribute("position",new qe(i,3)),this.setAttribute("normal",new qe(r,3)),this.setAttribute("uv",new qe(o,2));function c(h){const u=i.length/3,d=h.extractPoints(t);let f=d.shape;const p=d.holes;or.isClockWise(f)===!1&&(f=f.reverse());for(let m=0,g=p.length;m<g;m++){const x=p[m];or.isClockWise(x)===!0&&(p[m]=x.reverse())}const v=or.triangulateShape(f,p);for(let m=0,g=p.length;m<g;m++){const x=p[m];f=f.concat(x)}for(let m=0,g=f.length;m<g;m++){const x=f[m];i.push(x.x,x.y,0),r.push(0,0,1),o.push(x.x,x.y)}for(let m=0,g=v.length;m<g;m++){const x=v[m],y=x[0]+u,_=x[1]+u,E=x[2]+u;n.push(y,_,E),l+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return _b(t,e)}static fromJSON(e,t){const n=[];for(let i=0,r=e.shapes.length;i<r;i++){const o=t[e.shapes[i]];n.push(o)}return new Uh(n,e.curveSegments)}}function _b(s,e){if(e.shapes=[],Array.isArray(s))for(let t=0,n=s.length;t<n;t++){const i=s[t];e.shapes.push(i.uuid)}else e.shapes.push(s.uuid);return e}class ko extends yt{constructor(e=1,t=32,n=16,i=0,r=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const l=Math.min(o+a,Math.PI);let c=0;const h=[],u=new N,d=new N,f=[],p=[],v=[],m=[];for(let g=0;g<=n;g++){const x=[],y=g/n;let _=0;g===0&&o===0?_=.5/t:g===n&&l===Math.PI&&(_=-.5/t);for(let E=0;E<=t;E++){const w=E/t;u.x=-e*Math.cos(i+w*r)*Math.sin(o+y*a),u.y=e*Math.cos(o+y*a),u.z=e*Math.sin(i+w*r)*Math.sin(o+y*a),p.push(u.x,u.y,u.z),d.copy(u).normalize(),v.push(d.x,d.y,d.z),m.push(w+_,1-y),x.push(c++)}h.push(x)}for(let g=0;g<n;g++)for(let x=0;x<t;x++){const y=h[g][x+1],_=h[g][x],E=h[g+1][x],w=h[g+1][x+1];(g!==0||o>0)&&f.push(y,_,w),(g!==n-1||l<Math.PI)&&f.push(_,E,w)}this.setIndex(f),this.setAttribute("position",new qe(p,3)),this.setAttribute("normal",new qe(v,3)),this.setAttribute("uv",new qe(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ko(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Lh extends jr{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Lh(e.radius,e.detail)}}class Nh extends yt{constructor(e=1,t=.4,n=12,i=48,r=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const o=[],a=[],l=[],c=[],h=new N,u=new N,d=new N;for(let f=0;f<=n;f++)for(let p=0;p<=i;p++){const v=p/i*r,m=f/n*Math.PI*2;u.x=(e+t*Math.cos(m))*Math.cos(v),u.y=(e+t*Math.cos(m))*Math.sin(v),u.z=t*Math.sin(m),a.push(u.x,u.y,u.z),h.x=e*Math.cos(v),h.y=e*Math.sin(v),d.subVectors(u,h).normalize(),l.push(d.x,d.y,d.z),c.push(p/i),c.push(f/n)}for(let f=1;f<=n;f++)for(let p=1;p<=i;p++){const v=(i+1)*f+p-1,m=(i+1)*(f-1)+p-1,g=(i+1)*(f-1)+p,x=(i+1)*f+p;o.push(v,m,x),o.push(m,g,x)}this.setIndex(o),this.setAttribute("position",new qe(a,3)),this.setAttribute("normal",new qe(l,3)),this.setAttribute("uv",new qe(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Nh(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Oh extends yt{constructor(e=1,t=.4,n=64,i=8,r=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:o},n=Math.floor(n),i=Math.floor(i);const a=[],l=[],c=[],h=[],u=new N,d=new N,f=new N,p=new N,v=new N,m=new N,g=new N;for(let y=0;y<=n;++y){const _=y/n*r*Math.PI*2;x(_,r,o,e,f),x(_+.01,r,o,e,p),m.subVectors(p,f),g.addVectors(p,f),v.crossVectors(m,g),g.crossVectors(v,m),v.normalize(),g.normalize();for(let E=0;E<=i;++E){const w=E/i*Math.PI*2,M=-t*Math.cos(w),T=t*Math.sin(w);u.x=f.x+(M*g.x+T*v.x),u.y=f.y+(M*g.y+T*v.y),u.z=f.z+(M*g.z+T*v.z),l.push(u.x,u.y,u.z),d.subVectors(u,f).normalize(),c.push(d.x,d.y,d.z),h.push(y/n),h.push(E/i)}}for(let y=1;y<=n;y++)for(let _=1;_<=i;_++){const E=(i+1)*(y-1)+(_-1),w=(i+1)*y+(_-1),M=(i+1)*y+_,T=(i+1)*(y-1)+_;a.push(E,w,T),a.push(w,M,T)}this.setIndex(a),this.setAttribute("position",new qe(l,3)),this.setAttribute("normal",new qe(c,3)),this.setAttribute("uv",new qe(h,2));function x(y,_,E,w,M){const T=Math.cos(y),S=Math.sin(y),b=E/_*y,I=Math.cos(b);M.x=w*(2+I)*.5*T,M.y=w*(2+I)*S*.5,M.z=w*Math.sin(b)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Oh(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Fh extends yt{constructor(e=new hf(new N(-1,-1,0),new N(-1,1,0),new N(1,1,0)),t=64,n=1,i=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r};const o=e.computeFrenetFrames(t,r);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new N,l=new N,c=new ve;let h=new N;const u=[],d=[],f=[],p=[];v(),this.setIndex(p),this.setAttribute("position",new qe(u,3)),this.setAttribute("normal",new qe(d,3)),this.setAttribute("uv",new qe(f,2));function v(){for(let y=0;y<t;y++)m(y);m(r===!1?t:0),x(),g()}function m(y){h=e.getPointAt(y/t,h);const _=o.normals[y],E=o.binormals[y];for(let w=0;w<=i;w++){const M=w/i*Math.PI*2,T=Math.sin(M),S=-Math.cos(M);l.x=S*_.x+T*E.x,l.y=S*_.y+T*E.y,l.z=S*_.z+T*E.z,l.normalize(),d.push(l.x,l.y,l.z),a.x=h.x+n*l.x,a.y=h.y+n*l.y,a.z=h.z+n*l.z,u.push(a.x,a.y,a.z)}}function g(){for(let y=1;y<=t;y++)for(let _=1;_<=i;_++){const E=(i+1)*(y-1)+(_-1),w=(i+1)*y+(_-1),M=(i+1)*y+_,T=(i+1)*(y-1)+_;p.push(E,w,T),p.push(w,M,T)}}function x(){for(let y=0;y<=t;y++)for(let _=0;_<=i;_++)c.x=y/t,c.y=_/i,f.push(c.x,c.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Fh(new Kc[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class df extends yt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new N,r=new N;if(e.index!==null){const o=e.attributes.position,a=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:a.count,materialIndex:0}]);for(let c=0,h=l.length;c<h;++c){const u=l[c],d=u.start,f=u.count;for(let p=d,v=d+f;p<v;p+=3)for(let m=0;m<3;m++){const g=a.getX(p+m),x=a.getX(p+(m+1)%3);i.fromBufferAttribute(o,g),r.fromBufferAttribute(o,x),Zp(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}}else{const o=e.attributes.position;for(let a=0,l=o.count/3;a<l;a++)for(let c=0;c<3;c++){const h=3*a+c,u=3*a+(c+1)%3;i.fromBufferAttribute(o,h),r.fromBufferAttribute(o,u),Zp(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new qe(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function Zp(s,e,t){const n=`${s.x},${s.y},${s.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${s.x},${s.y},${s.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var Jp=Object.freeze({__proto__:null,BoxGeometry:Xs,CapsuleGeometry:Eh,CircleGeometry:Th,ConeGeometry:Ah,CylinderGeometry:Fo,DodecahedronGeometry:Ch,EdgesGeometry:Jv,ExtrudeGeometry:Ph,IcosahedronGeometry:Ih,LatheGeometry:Qa,OctahedronGeometry:$a,PlaneGeometry:hr,PolyhedronGeometry:jr,RingGeometry:Dh,ShapeGeometry:Uh,SphereGeometry:ko,TetrahedronGeometry:Lh,TorusGeometry:Nh,TorusKnotGeometry:Oh,TubeGeometry:Fh,WireframeGeometry:df});class e_ extends Zn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new ze(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class t_ extends mi{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class ff extends Zn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new ze(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ze(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Yr,this.normalScale=new ve(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ri,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class n_ extends ff{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ve(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Mt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new ze(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new ze(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new ze(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class Qc extends Zn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new ze(16777215),this.specular=new ze(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ze(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Yr,this.normalScale=new ve(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ri,this.combine=Wa,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class i_ extends Zn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new ze(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ze(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Yr,this.normalScale=new ve(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class r_ extends Zn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Yr,this.normalScale=new ve(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class pf extends Zn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new ze(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ze(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Yr,this.normalScale=new ve(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ri,this.combine=Wa,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class el extends Zn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=bv,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class kh extends Zn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class s_ extends Zn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new ze(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Yr,this.normalScale=new ve(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class o_ extends Fn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function Cs(s,e,t){return!s||!t&&s.constructor===e?s:typeof e.BYTES_PER_ELEMENT=="number"?new e(s):Array.prototype.slice.call(s)}function a_(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}function l_(s){function e(i,r){return s[i]-s[r]}const t=s.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function yd(s,e,t){const n=s.length,i=new s.constructor(n);for(let r=0,o=0;o!==n;++r){const a=t[r]*e;for(let l=0;l!==e;++l)i[o++]=s[a+l]}return i}function mf(s,e,t,n){let i=1,r=s[0];for(;r!==void 0&&r[n]===void 0;)r=s[i++];if(r===void 0)return;let o=r[n];if(o!==void 0)if(Array.isArray(o))do o=r[n],o!==void 0&&(e.push(r.time),t.push.apply(t,o)),r=s[i++];while(r!==void 0);else if(o.toArray!==void 0)do o=r[n],o!==void 0&&(e.push(r.time),o.toArray(t,t.length)),r=s[i++];while(r!==void 0);else do o=r[n],o!==void 0&&(e.push(r.time),t.push(o)),r=s[i++];while(r!==void 0)}function yb(s,e,t,n,i=30){const r=s.clone();r.name=e;const o=[];for(let l=0;l<r.tracks.length;++l){const c=r.tracks[l],h=c.getValueSize(),u=[],d=[];for(let f=0;f<c.times.length;++f){const p=c.times[f]*i;if(!(p<t||p>=n)){u.push(c.times[f]);for(let v=0;v<h;++v)d.push(c.values[f*h+v])}}u.length!==0&&(c.times=Cs(u,c.times.constructor),c.values=Cs(d,c.values.constructor),o.push(c))}r.tracks=o;let a=1/0;for(let l=0;l<r.tracks.length;++l)a>r.tracks[l].times[0]&&(a=r.tracks[l].times[0]);for(let l=0;l<r.tracks.length;++l)r.tracks[l].shift(-1*a);return r.resetDuration(),r}function xb(s,e=0,t=s,n=30){n<=0&&(n=30);const i=t.tracks.length,r=e/n;for(let o=0;o<i;++o){const a=t.tracks[o],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const c=s.tracks.find(function(g){return g.name===a.name&&g.ValueTypeName===l});if(c===void 0)continue;let h=0;const u=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=u/3);let d=0;const f=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=f/3);const p=a.times.length-1;let v;if(r<=a.times[0]){const g=h,x=u-h;v=a.values.slice(g,x)}else if(r>=a.times[p]){const g=p*u+h,x=g+u-h;v=a.values.slice(g,x)}else{const g=a.createInterpolant(),x=h,y=u-h;g.evaluate(r),v=g.resultBuffer.slice(x,y)}l==="quaternion"&&new hn().fromArray(v).normalize().conjugate().toArray(v);const m=c.times.length;for(let g=0;g<m;++g){const x=g*f+d;if(l==="quaternion")hn.multiplyQuaternionsFlat(c.values,x,v,0,c.values,x);else{const y=f-d*2;for(let _=0;_<y;++_)c.values[x+_]-=v[_]}}}return s.blendMode=Jd,s}const bb={convertArray:Cs,isTypedArray:a_,getKeyframeOrder:l_,sortedArray:yd,flattenJSON:mf,subclip:yb,makeClipAdditive:xb};class tl{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let o;n:{i:if(!(e<i)){for(let a=n+2;;){if(i===void 0){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===a)break;if(r=i,i=t[++n],e<i)break t}o=t.length;break n}if(!(e>=r)){const a=t[1];e<a&&(n=2,r=a);for(let l=n-2;;){if(r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===l)break;if(i=r,r=t[--n-1],e>=r)break t}o=n,n=0;break n}break e}for(;n<o;){const a=n+o>>>1;e<t[a]?o=a:n=a+1}if(i=t[n],r=t[n-1],r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let o=0;o!==i;++o)t[o]=n[r+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class c_ extends tl{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Es,endingEnd:Es}}intervalChanged_(e,t,n){const i=this.parameterPositions;let r=e-2,o=e+1,a=i[r],l=i[o];if(a===void 0)switch(this.getSettings_().endingStart){case Ts:r=e,a=2*t-n;break;case Aa:r=i.length-2,a=t+i[r]-i[r+1];break;default:r=e,a=n}if(l===void 0)switch(this.getSettings_().endingEnd){case Ts:o=e,l=2*n-t;break;case Aa:o=1,l=n+i[1]-i[0];break;default:o=e-1,l=t}const c=(n-t)*.5,h=this.valueSize;this._weightPrev=c/(t-a),this._weightNext=c/(l-n),this._offsetPrev=r*h,this._offsetNext=o*h}interpolate_(e,t,n,i){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,h=this._offsetPrev,u=this._offsetNext,d=this._weightPrev,f=this._weightNext,p=(n-t)/(i-t),v=p*p,m=v*p,g=-d*m+2*d*v-d*p,x=(1+d)*m+(-1.5-2*d)*v+(-.5+d)*p+1,y=(-1-f)*m+(1.5+f)*v+.5*p,_=f*m-f*v;for(let E=0;E!==a;++E)r[E]=g*o[h+E]+x*o[c+E]+y*o[l+E]+_*o[u+E];return r}}class gf extends tl{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,h=(n-t)/(i-t),u=1-h;for(let d=0;d!==a;++d)r[d]=o[c+d]*u+o[l+d]*h;return r}}class h_ extends tl{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Ki{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Cs(t,this.TimeBufferType),this.values=Cs(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Cs(e.times,Array),values:Cs(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new h_(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new gf(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new c_(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Ta:t=this.InterpolantFactoryMethodDiscrete;break;case jc:t=this.InterpolantFactoryMethodLinear;break;case ac:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Ta;case this.InterpolantFactoryMethodLinear:return jc;case this.InterpolantFactoryMethodSmooth:return ac}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let r=0,o=i-1;for(;r!==i&&n[r]<e;)++r;for(;o!==-1&&n[o]>t;)--o;if(++o,r!==0||o!==i){r>=o&&(o=Math.max(o,1),r=o-1);const a=this.getValueSize();this.times=n.slice(r,o),this.values=this.values.slice(r*a,o*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let a=0;a!==r;a++){const l=n[a];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),e=!1;break}if(o!==null&&o>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,o),e=!1;break}o=l}if(i!==void 0&&a_(i))for(let a=0,l=i.length;a!==l;++a){const c=i[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===ac,r=e.length-1;let o=1;for(let a=1;a<r;++a){let l=!1;const c=e[a],h=e[a+1];if(c!==h&&(a!==1||c!==e[0]))if(i)l=!0;else{const u=a*n,d=u-n,f=u+n;for(let p=0;p!==n;++p){const v=t[u+p];if(v!==t[d+p]||v!==t[f+p]){l=!0;break}}}if(l){if(a!==o){e[o]=e[a];const u=a*n,d=o*n;for(let f=0;f!==n;++f)t[d+f]=t[u+f]}++o}}if(r>0){e[o]=e[r];for(let a=r*n,l=o*n,c=0;c!==n;++c)t[l+c]=t[a+c];++o}return o!==e.length?(this.times=e.slice(0,o),this.values=t.slice(0,o*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}Ki.prototype.TimeBufferType=Float32Array;Ki.prototype.ValueBufferType=Float32Array;Ki.prototype.DefaultInterpolation=jc;class Ys extends Ki{constructor(e,t,n){super(e,t,n)}}Ys.prototype.ValueTypeName="bool";Ys.prototype.ValueBufferType=Array;Ys.prototype.DefaultInterpolation=Ta;Ys.prototype.InterpolantFactoryMethodLinear=void 0;Ys.prototype.InterpolantFactoryMethodSmooth=void 0;class vf extends Ki{}vf.prototype.ValueTypeName="color";class Oa extends Ki{}Oa.prototype.ValueTypeName="number";class u_ extends tl{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=(n-t)/(i-t);let c=e*a;for(let h=c+a;c!==h;c+=4)hn.slerpFlat(r,0,o,c-a,o,c,l);return r}}class Bo extends Ki{InterpolantFactoryMethodLinear(e){return new u_(this.times,this.values,this.getValueSize(),e)}}Bo.prototype.ValueTypeName="quaternion";Bo.prototype.InterpolantFactoryMethodSmooth=void 0;class qs extends Ki{constructor(e,t,n){super(e,t,n)}}qs.prototype.ValueTypeName="string";qs.prototype.ValueBufferType=Array;qs.prototype.DefaultInterpolation=Ta;qs.prototype.InterpolantFactoryMethodLinear=void 0;qs.prototype.InterpolantFactoryMethodSmooth=void 0;class Vs extends Ki{}Vs.prototype.ValueTypeName="vector";class Gs{constructor(e="",t=-1,n=[],i=fh){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=Ci(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let o=0,a=n.length;o!==a;++o)t.push(Mb(n[o]).scale(i));const r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,o=n.length;r!==o;++r)t.push(Ki.toJSON(n[r]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const r=t.length,o=[];for(let a=0;a<r;a++){let l=[],c=[];l.push((a+r-1)%r,a,(a+1)%r),c.push(0,1,0);const h=l_(l);l=yd(l,1,h),c=yd(c,1,h),!i&&l[0]===0&&(l.push(r),c.push(c[0])),o.push(new Oa(".morphTargetInfluences["+t[a].name+"]",l,c).scale(1/n))}return new this(e,-1,o)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let a=0,l=e.length;a<l;a++){const c=e[a],h=c.name.match(r);if(h&&h.length>1){const u=h[1];let d=i[u];d||(i[u]=d=[]),d.push(c)}}const o=[];for(const a in i)o.push(this.CreateFromMorphTargetSequence(a,i[a],t,n));return o}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(u,d,f,p,v){if(f.length!==0){const m=[],g=[];mf(f,m,g,p),m.length!==0&&v.push(new u(d,m,g))}},i=[],r=e.name||"default",o=e.fps||30,a=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let u=0;u<c.length;u++){const d=c[u].keys;if(!(!d||d.length===0))if(d[0].morphTargets){const f={};let p;for(p=0;p<d.length;p++)if(d[p].morphTargets)for(let v=0;v<d[p].morphTargets.length;v++)f[d[p].morphTargets[v]]=-1;for(const v in f){const m=[],g=[];for(let x=0;x!==d[p].morphTargets.length;++x){const y=d[p];m.push(y.time),g.push(y.morphTarget===v?1:0)}i.push(new Oa(".morphTargetInfluence["+v+"]",m,g))}l=f.length*o}else{const f=".bones["+t[u].name+"]";n(Vs,f+".position",d,"pos",i),n(Bo,f+".quaternion",d,"rot",i),n(Vs,f+".scale",d,"scl",i)}}return i.length===0?null:new this(r,l,i,a)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const r=this.tracks[n];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Sb(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Oa;case"vector":case"vector2":case"vector3":case"vector4":return Vs;case"color":return vf;case"quaternion":return Bo;case"bool":case"boolean":return Ys;case"string":return qs}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function Mb(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=Sb(s.type);if(s.times===void 0){const t=[],n=[];mf(s.keys,t,n,"value"),s.times=t,s.values=n}return e.parse!==void 0?e.parse(s):new e(s.name,s.times,s.values,s.interpolation)}const br={enabled:!1,files:{},add:function(s,e){this.enabled!==!1&&(this.files[s]=e)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class _f{constructor(e,t,n){const i=this;let r=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(h){a++,r===!1&&i.onStart!==void 0&&i.onStart(h,o,a),r=!0},this.itemEnd=function(h){o++,i.onProgress!==void 0&&i.onProgress(h,o,a),o===a&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(h){i.onError!==void 0&&i.onError(h)},this.resolveURL=function(h){return l?l(h):h},this.setURLModifier=function(h){return l=h,this},this.addHandler=function(h,u){return c.push(h,u),this},this.removeHandler=function(h){const u=c.indexOf(h);return u!==-1&&c.splice(u,2),this},this.getHandler=function(h){for(let u=0,d=c.length;u<d;u+=2){const f=c[u],p=c[u+1];if(f.global&&(f.lastIndex=0),f.test(h))return p}return null}}}const js=new _f;class kn{constructor(e){this.manager=e!==void 0?e:js,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}kn.DEFAULT_MATERIAL_NAME="__DEFAULT";const gr={};class wb extends Error{constructor(e,t){super(e),this.response=t}}class qi extends kn{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=br.get(e);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(gr[e]!==void 0){gr[e].push({onLoad:t,onProgress:n,onError:i});return}gr[e]=[],gr[e].push({onLoad:t,onProgress:n,onError:i});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,l=this.responseType;fetch(o).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const h=gr[e],u=c.body.getReader(),d=c.headers.get("X-File-Size")||c.headers.get("Content-Length"),f=d?parseInt(d):0,p=f!==0;let v=0;const m=new ReadableStream({start(g){x();function x(){u.read().then(({done:y,value:_})=>{if(y)g.close();else{v+=_.byteLength;const E=new ProgressEvent("progress",{lengthComputable:p,loaded:v,total:f});for(let w=0,M=h.length;w<M;w++){const T=h[w];T.onProgress&&T.onProgress(E)}g.enqueue(_),x()}},y=>{g.error(y)})}}});return new Response(m)}else throw new wb(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(h=>new DOMParser().parseFromString(h,a));case"json":return c.json();default:if(a===void 0)return c.text();{const u=/charset="?([^;"\s]*)"?/i.exec(a),d=u&&u[1]?u[1].toLowerCase():void 0,f=new TextDecoder(d);return c.arrayBuffer().then(p=>f.decode(p))}}}).then(c=>{br.add(e,c);const h=gr[e];delete gr[e];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onLoad&&f.onLoad(c)}}).catch(c=>{const h=gr[e];if(h===void 0)throw this.manager.itemError(e),c;delete gr[e];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onError&&f.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Eb extends kn{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new qi(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(r.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=Gs.parse(e[n]);t.push(i)}return t}}class Tb extends kn{constructor(e){super(e)}load(e,t,n,i){const r=this,o=[],a=new Mh,l=new qi(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(r.withCredentials);let c=0;function h(u){l.load(e[u],function(d){const f=r.parse(d,!0);o[u]={width:f.width,height:f.height,format:f.format,mipmaps:f.mipmaps},c+=1,c===6&&(f.mipmapCount===1&&(a.minFilter=_n),a.image=o,a.format=f.format,a.needsUpdate=!0,t&&t(a))},n,i)}if(Array.isArray(e))for(let u=0,d=e.length;u<d;++u)h(u);else l.load(e,function(u){const d=r.parse(u,!0);if(d.isCubemap){const f=d.mipmaps.length/d.mipmapCount;for(let p=0;p<f;p++){o[p]={mipmaps:[]};for(let v=0;v<d.mipmapCount;v++)o[p].mipmaps.push(d.mipmaps[p*d.mipmapCount+v]),o[p].format=d.format,o[p].width=d.width,o[p].height=d.height}a.image=o}else a.image.width=d.width,a.image.height=d.height,a.mipmaps=d.mipmaps;d.mipmapCount===1&&(a.minFilter=_n),a.format=d.format,a.needsUpdate=!0,t&&t(a)},n,i);return a}}class Fa extends kn{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=br.get(e);if(o!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o;const a=Ia("img");function l(){h(),br.add(e,this),t&&t(this),r.manager.itemEnd(e)}function c(u){h(),i&&i(u),r.manager.itemError(e),r.manager.itemEnd(e)}function h(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(e),a.src=e,a}}class Ab extends kn{constructor(e){super(e)}load(e,t,n,i){const r=new ja;r.colorSpace=nn;const o=new Fa(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function l(c){o.load(e[c],function(h){r.images[c]=h,a++,a===6&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}for(let c=0;c<e.length;++c)l(c);return r}}class d_ extends kn{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new sr,a=new qi(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(r.withCredentials),a.load(e,function(l){let c;try{c=r.parse(l)}catch(h){if(i!==void 0)i(h);else{console.error(h);return}}c.image!==void 0?o.image=c.image:c.data!==void 0&&(o.image.width=c.width,o.image.height=c.height,o.image.data=c.data),o.wrapS=c.wrapS!==void 0?c.wrapS:di,o.wrapT=c.wrapT!==void 0?c.wrapT:di,o.magFilter=c.magFilter!==void 0?c.magFilter:_n,o.minFilter=c.minFilter!==void 0?c.minFilter:_n,o.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.colorSpace!==void 0&&(o.colorSpace=c.colorSpace),c.flipY!==void 0&&(o.flipY=c.flipY),c.format!==void 0&&(o.format=c.format),c.type!==void 0&&(o.type=c.type),c.mipmaps!==void 0&&(o.mipmaps=c.mipmaps,o.minFilter=Wi),c.mipmapCount===1&&(o.minFilter=_n),c.generateMipmaps!==void 0&&(o.generateMipmaps=c.generateMipmaps),o.needsUpdate=!0,t&&t(o,c)},n,i),o}}class f_ extends kn{constructor(e){super(e)}load(e,t,n,i){const r=new cn,o=new Fa(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){r.image=a,r.needsUpdate=!0,t!==void 0&&t(r)},n,i),r}}class Zr extends Ft{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new ze(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class p_ extends Zr{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Ft.DEFAULT_UP),this.updateMatrix(),this.groundColor=new ze(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Du=new rt,Kp=new N,Qp=new N;class yf{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ve(512,512),this.map=null,this.mapPass=null,this.matrix=new rt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ka,this._frameExtents=new ve(1,1),this._viewportCount=1,this._viewports=[new Tt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;Kp.setFromMatrixPosition(e.matrixWorld),t.position.copy(Kp),Qp.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Qp),t.updateMatrixWorld(),Du.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Du),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Du)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class Cb extends yf{constructor(){super(new vn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=Po*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(n!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class xf extends Zr{constructor(e,t,n=0,i=Math.PI/3,r=0,o=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Ft.DEFAULT_UP),this.updateMatrix(),this.target=new Ft,this.distance=n,this.angle=i,this.penumbra=r,this.decay=o,this.map=null,this.shadow=new Cb}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const $p=new rt,ra=new N,Uu=new N;class Rb extends yf{constructor(){super(new vn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ve(4,2),this._viewportCount=6,this._viewports=[new Tt(2,1,1,1),new Tt(0,1,1,1),new Tt(3,1,1,1),new Tt(1,1,1,1),new Tt(3,0,1,1),new Tt(1,0,1,1)],this._cubeDirections=[new N(1,0,0),new N(-1,0,0),new N(0,0,1),new N(0,0,-1),new N(0,1,0),new N(0,-1,0)],this._cubeUps=[new N(0,1,0),new N(0,1,0),new N(0,1,0),new N(0,1,0),new N(0,0,1),new N(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),ra.setFromMatrixPosition(e.matrixWorld),n.position.copy(ra),Uu.copy(n.position),Uu.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Uu),n.updateMatrixWorld(),i.makeTranslation(-ra.x,-ra.y,-ra.z),$p.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix($p)}}class bf extends Zr{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new Rb}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class Jr extends vh{constructor(e=-1,t=1,n=1,i=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,o=n+e,a=i+t,l=i-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,o=r+c*this.view.width,a-=h*this.view.offsetY,l=a-h*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class Pb extends yf{constructor(){super(new Jr(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Sf extends Zr{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Ft.DEFAULT_UP),this.updateMatrix(),this.target=new Ft,this.shadow=new Pb}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Mf extends Zr{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class m_ extends Zr{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class g_{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new N)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*i),t.addScaledVector(o[2],.488603*r),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],1.092548*(n*i)),t.addScaledVector(o[5],1.092548*(i*r)),t.addScaledVector(o[6],.315392*(3*r*r-1)),t.addScaledVector(o[7],1.092548*(n*r)),t.addScaledVector(o[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*i),t.addScaledVector(o[2],2*.511664*r),t.addScaledVector(o[3],2*.511664*n),t.addScaledVector(o[4],2*.429043*n*i),t.addScaledVector(o[5],2*.429043*i*r),t.addScaledVector(o[6],.743125*r*r-.247708),t.addScaledVector(o[7],2*.429043*n*r),t.addScaledVector(o[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-i*i)}}class v_ extends Zr{constructor(e=new g_,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Bh extends kn{constructor(e){super(e),this.textures={}}load(e,t,n,i){const r=this,o=new qi(r.manager);o.setPath(r.path),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(e,function(a){try{t(r.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(r){return t[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),t[r]}const i=this.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new ze().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.dispersion!==void 0&&(i.dispersion=e.dispersion),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(i.depthFunc=e.depthFunc),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(i.blendSrc=e.blendSrc),e.blendDst!==void 0&&(i.blendDst=e.blendDst),e.blendEquation!==void 0&&(i.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(i.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(i.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==void 0&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const r in e.uniforms){const o=e.uniforms[r];switch(i.uniforms[r]={},o.type){case"t":i.uniforms[r].value=n(o.value);break;case"c":i.uniforms[r].value=new ze().setHex(o.value);break;case"v2":i.uniforms[r].value=new ve().fromArray(o.value);break;case"v3":i.uniforms[r].value=new N().fromArray(o.value);break;case"v4":i.uniforms[r].value=new Tt().fromArray(o.value);break;case"m3":i.uniforms[r].value=new St().fromArray(o.value);break;case"m4":i.uniforms[r].value=new rt().fromArray(o.value);break;default:i.uniforms[r].value=o.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const r in e.extensions)i.extensions[r]=e.extensions[r];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let r=e.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new ve().fromArray(r)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapRotation!==void 0&&i.envMapRotation.fromArray(e.envMapRotation),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new ve().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}createMaterialFromType(e){return Bh.createMaterialFromType(e)}static createMaterialFromType(e){const t={ShadowMaterial:e_,SpriteMaterial:Oo,RawShaderMaterial:t_,ShaderMaterial:mi,PointsMaterial:rf,MeshPhysicalMaterial:n_,MeshStandardMaterial:ff,MeshPhongMaterial:Qc,MeshToonMaterial:i_,MeshNormalMaterial:r_,MeshLambertMaterial:pf,MeshDepthMaterial:el,MeshDistanceMaterial:kh,MeshBasicMaterial:Xn,MeshMatcapMaterial:s_,LineDashedMaterial:o_,LineBasicMaterial:Fn,Material:Zn};return new t[e]}}class $c{static decodeText(e){if(console.warn("THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead."),typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class zh extends yt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class __ extends kn{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new qi(r.manager);o.setPath(r.path),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(e,function(a){try{t(r.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(f,p){if(t[p]!==void 0)return t[p];const m=f.interleavedBuffers[p],g=r(f,m.buffer),x=Mo(m.type,g),y=new bh(x,m.stride);return y.uuid=m.uuid,t[p]=y,y}function r(f,p){if(n[p]!==void 0)return n[p];const m=f.arrayBuffers[p],g=new Uint32Array(m).buffer;return n[p]=g,g}const o=e.isInstancedBufferGeometry?new zh:new yt,a=e.data.index;if(a!==void 0){const f=Mo(a.type,a.array);o.setIndex(new Et(f,1))}const l=e.data.attributes;for(const f in l){const p=l[f];let v;if(p.isInterleavedBufferAttribute){const m=i(e.data,p.data);v=new Ti(m,p.itemSize,p.offset,p.normalized)}else{const m=Mo(p.type,p.array),g=p.isInstancedBufferAttribute?Bs:Et;v=new g(m,p.itemSize,p.normalized)}p.name!==void 0&&(v.name=p.name),p.usage!==void 0&&v.setUsage(p.usage),o.setAttribute(f,v)}const c=e.data.morphAttributes;if(c)for(const f in c){const p=c[f],v=[];for(let m=0,g=p.length;m<g;m++){const x=p[m];let y;if(x.isInterleavedBufferAttribute){const _=i(e.data,x.data);y=new Ti(_,x.itemSize,x.offset,x.normalized)}else{const _=Mo(x.type,x.array);y=new Et(_,x.itemSize,x.normalized)}x.name!==void 0&&(y.name=x.name),v.push(y)}o.morphAttributes[f]=v}e.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const u=e.data.groups||e.data.drawcalls||e.data.offsets;if(u!==void 0)for(let f=0,p=u.length;f!==p;++f){const v=u[f];o.addGroup(v.start,v.count,v.materialIndex)}const d=e.data.boundingSphere;if(d!==void 0){const f=new N;d.center!==void 0&&f.fromArray(d.center),o.boundingSphere=new Mn(f,d.radius)}return e.name&&(o.name=e.name),e.userData&&(o.userData=e.userData),o}}class Ib extends kn{constructor(e){super(e)}load(e,t,n,i){const r=this,o=this.path===""?$c.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const a=new qi(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){let c=null;try{c=JSON.parse(l)}catch(u){i!==void 0&&i(u),console.error("THREE:ObjectLoader: Can't parse "+e+".",u.message);return}const h=c.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(c,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?$c.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const r=new qi(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);const o=await r.loadAsync(e,t),a=JSON.parse(o),l=a.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(a)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,i),o=this.parseImages(e.images,function(){t!==void 0&&t(c)}),a=this.parseTextures(e.textures,o),l=this.parseMaterials(e.materials,a),c=this.parseObject(e.object,r,l,a,n),h=this.parseSkeletons(e.skeletons,c);if(this.bindSkeletons(c,h),this.bindLightTargets(c),t!==void 0){let u=!1;for(const d in o)if(o[d].data instanceof HTMLImageElement){u=!0;break}u===!1&&t(c)}return c}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),r=await this.parseImagesAsync(e.images),o=this.parseTextures(e.textures,r),a=this.parseMaterials(e.materials,o),l=this.parseObject(e.object,i,a,o,t),c=this.parseSkeletons(e.skeletons,l);return this.bindSkeletons(l,c),this.bindLightTargets(l),l}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const r=new Ds().fromJSON(e[n]);t[r.uuid]=r}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(r){r.isBone&&(i[r.uuid]=r)}),e!==void 0)for(let r=0,o=e.length;r<o;r++){const a=new Ja().fromJSON(e[r],i);n[a.uuid]=a}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new __;for(let r=0,o=e.length;r<o;r++){let a;const l=e[r];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":a=i.parse(l);break;default:l.type in Jp?a=Jp[l.type].fromJSON(l,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}a.uuid=l.uuid,l.name!==void 0&&(a.name=l.name),l.userData!==void 0&&(a.userData=l.userData),n[l.uuid]=a}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const r=new Bh;r.setTextures(t);for(let o=0,a=e.length;o<a;o++){const l=e[o];n[l.uuid]===void 0&&(n[l.uuid]=r.parse(l)),i[l.uuid]=n[l.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],r=Gs.parse(i);t[r.uuid]=r}return t}parseImages(e,t){const n=this,i={};let r;function o(l){return n.manager.itemStart(l),r.load(l,function(){n.manager.itemEnd(l)},void 0,function(){n.manager.itemError(l),n.manager.itemEnd(l)})}function a(l){if(typeof l=="string"){const c=l,h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:n.resourcePath+c;return o(h)}else return l.data?{data:Mo(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new _f(t);r=new Fa(l),r.setCrossOrigin(this.crossOrigin);for(let c=0,h=e.length;c<h;c++){const u=e[c],d=u.url;if(Array.isArray(d)){const f=[];for(let p=0,v=d.length;p<v;p++){const m=d[p],g=a(m);g!==null&&(g instanceof HTMLImageElement?f.push(g):f.push(new sr(g.data,g.width,g.height)))}i[u.uuid]=new As(f)}else{const f=a(u.url);i[u.uuid]=new As(f)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function r(o){if(typeof o=="string"){const a=o,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)?a:t.resourcePath+a;return await i.loadAsync(l)}else return o.data?{data:Mo(o.type,o.data),width:o.width,height:o.height}:null}if(e!==void 0&&e.length>0){i=new Fa(this.manager),i.setCrossOrigin(this.crossOrigin);for(let o=0,a=e.length;o<a;o++){const l=e[o],c=l.url;if(Array.isArray(c)){const h=[];for(let u=0,d=c.length;u<d;u++){const f=c[u],p=await r(f);p!==null&&(p instanceof HTMLImageElement?h.push(p):h.push(new sr(p.data,p.width,p.height)))}n[l.uuid]=new As(h)}else{const h=await r(l.url);n[l.uuid]=new As(h)}}}return n}parseTextures(e,t){function n(r,o){return typeof r=="number"?r:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",r),o[r])}const i={};if(e!==void 0)for(let r=0,o=e.length;r<o;r++){const a=e[r];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),t[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const l=t[a.image],c=l.data;let h;Array.isArray(c)?(h=new ja,c.length===6&&(h.needsUpdate=!0)):(c&&c.data?h=new sr:h=new cn,c&&(h.needsUpdate=!0)),h.source=l,h.uuid=a.uuid,a.name!==void 0&&(h.name=a.name),a.mapping!==void 0&&(h.mapping=n(a.mapping,Db)),a.channel!==void 0&&(h.channel=a.channel),a.offset!==void 0&&h.offset.fromArray(a.offset),a.repeat!==void 0&&h.repeat.fromArray(a.repeat),a.center!==void 0&&h.center.fromArray(a.center),a.rotation!==void 0&&(h.rotation=a.rotation),a.wrap!==void 0&&(h.wrapS=n(a.wrap[0],em),h.wrapT=n(a.wrap[1],em)),a.format!==void 0&&(h.format=a.format),a.internalFormat!==void 0&&(h.internalFormat=a.internalFormat),a.type!==void 0&&(h.type=a.type),a.colorSpace!==void 0&&(h.colorSpace=a.colorSpace),a.minFilter!==void 0&&(h.minFilter=n(a.minFilter,tm)),a.magFilter!==void 0&&(h.magFilter=n(a.magFilter,tm)),a.anisotropy!==void 0&&(h.anisotropy=a.anisotropy),a.flipY!==void 0&&(h.flipY=a.flipY),a.generateMipmaps!==void 0&&(h.generateMipmaps=a.generateMipmaps),a.premultiplyAlpha!==void 0&&(h.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(h.unpackAlignment=a.unpackAlignment),a.compareFunction!==void 0&&(h.compareFunction=a.compareFunction),a.userData!==void 0&&(h.userData=a.userData),i[a.uuid]=h}return i}parseObject(e,t,n,i,r){let o;function a(d){return t[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",d),t[d]}function l(d){if(d!==void 0){if(Array.isArray(d)){const f=[];for(let p=0,v=d.length;p<v;p++){const m=d[p];n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),f.push(n[m])}return f}return n[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",d),n[d]}}function c(d){return i[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",d),i[d]}let h,u;switch(e.type){case"Scene":o=new xh,e.background!==void 0&&(Number.isInteger(e.background)?o.background=new ze(e.background):o.background=c(e.background)),e.environment!==void 0&&(o.environment=c(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?o.fog=new yh(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(o.fog=new _h(e.fog.color,e.fog.density)),e.fog.name!==""&&(o.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(o.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(o.backgroundIntensity=e.backgroundIntensity),e.backgroundRotation!==void 0&&o.backgroundRotation.fromArray(e.backgroundRotation),e.environmentIntensity!==void 0&&(o.environmentIntensity=e.environmentIntensity),e.environmentRotation!==void 0&&o.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":o=new vn(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(o.focus=e.focus),e.zoom!==void 0&&(o.zoom=e.zoom),e.filmGauge!==void 0&&(o.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(o.filmOffset=e.filmOffset),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new Jr(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(o.zoom=e.zoom),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new Mf(e.color,e.intensity);break;case"DirectionalLight":o=new Sf(e.color,e.intensity),o.target=e.target||"";break;case"PointLight":o=new bf(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new m_(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new xf(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay),o.target=e.target||"";break;case"HemisphereLight":o=new p_(e.color,e.groundColor,e.intensity);break;case"LightProbe":o=new v_().fromJSON(e);break;case"SkinnedMesh":h=a(e.geometry),u=l(e.material),o=new nf(h,u),e.bindMode!==void 0&&(o.bindMode=e.bindMode),e.bindMatrix!==void 0&&o.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(o.skeleton=e.skeleton);break;case"Mesh":h=a(e.geometry),u=l(e.material),o=new zt(h,u);break;case"InstancedMesh":h=a(e.geometry),u=l(e.material);const d=e.count,f=e.instanceMatrix,p=e.instanceColor;o=new Bv(h,u,d),o.instanceMatrix=new Bs(new Float32Array(f.array),16),p!==void 0&&(o.instanceColor=new Bs(new Float32Array(p.array),p.itemSize));break;case"BatchedMesh":h=a(e.geometry),u=l(e.material),o=new zv(e.maxInstanceCount,e.maxVertexCount,e.maxIndexCount,u),o.geometry=h,o.perObjectFrustumCulled=e.perObjectFrustumCulled,o.sortObjects=e.sortObjects,o._drawRanges=e.drawRanges,o._reservedRanges=e.reservedRanges,o._visibility=e.visibility,o._active=e.active,o._bounds=e.bounds.map(v=>{const m=new yn;m.min.fromArray(v.boxMin),m.max.fromArray(v.boxMax);const g=new Mn;return g.radius=v.sphereRadius,g.center.fromArray(v.sphereCenter),{boxInitialized:v.boxInitialized,box:m,sphereInitialized:v.sphereInitialized,sphere:g}}),o._maxInstanceCount=e.maxInstanceCount,o._maxVertexCount=e.maxVertexCount,o._maxIndexCount=e.maxIndexCount,o._geometryInitialized=e.geometryInitialized,o._geometryCount=e.geometryCount,o._matricesTexture=c(e.matricesTexture.uuid),e.colorsTexture!==void 0&&(o._colorsTexture=c(e.colorsTexture.uuid));break;case"LOD":o=new kv;break;case"Line":o=new Tr(a(e.geometry),l(e.material));break;case"LineLoop":o=new Vv(a(e.geometry),l(e.material));break;case"LineSegments":o=new Zi(a(e.geometry),l(e.material));break;case"PointCloud":case"Points":o=new Gv(a(e.geometry),l(e.material));break;case"Sprite":o=new Za(l(e.material));break;case"Group":o=new Yi;break;case"Bone":o=new Sh;break;default:o=new Ft}if(o.uuid=e.uuid,e.name!==void 0&&(o.name=e.name),e.matrix!==void 0?(o.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(e.position!==void 0&&o.position.fromArray(e.position),e.rotation!==void 0&&o.rotation.fromArray(e.rotation),e.quaternion!==void 0&&o.quaternion.fromArray(e.quaternion),e.scale!==void 0&&o.scale.fromArray(e.scale)),e.up!==void 0&&o.up.fromArray(e.up),e.castShadow!==void 0&&(o.castShadow=e.castShadow),e.receiveShadow!==void 0&&(o.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.intensity!==void 0&&(o.shadow.intensity=e.shadow.intensity),e.shadow.bias!==void 0&&(o.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(o.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(o.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(o.visible=e.visible),e.frustumCulled!==void 0&&(o.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(o.renderOrder=e.renderOrder),e.userData!==void 0&&(o.userData=e.userData),e.layers!==void 0&&(o.layers.mask=e.layers),e.children!==void 0){const d=e.children;for(let f=0;f<d.length;f++)o.add(this.parseObject(d[f],t,n,i,r))}if(e.animations!==void 0){const d=e.animations;for(let f=0;f<d.length;f++){const p=d[f];o.animations.push(r[p])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(o.autoUpdate=e.autoUpdate);const d=e.levels;for(let f=0;f<d.length;f++){const p=d[f],v=o.getObjectByProperty("uuid",p.object);v!==void 0&&o.addLevel(v,p.distance,p.hysteresis)}}return o}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}bindLightTargets(e){e.traverse(function(t){if(t.isDirectionalLight||t.isSpotLight){const n=t.target,i=e.getObjectByProperty("uuid",n);i!==void 0?t.target=i:t.target=new Ft}})}}const Db={UVMapping:oh,CubeReflectionMapping:wr,CubeRefractionMapping:Hr,EquirectangularReflectionMapping:Ma,EquirectangularRefractionMapping:wa,CubeUVReflectionMapping:Lo},em={RepeatWrapping:Hi,ClampToEdgeWrapping:di,MirroredRepeatWrapping:Ea},tm={NearestFilter:On,NearestMipmapNearestFilter:zd,NearestMipmapLinearFilter:So,LinearFilter:_n,LinearMipmapNearestFilter:ua,LinearMipmapLinearFilter:Wi};class Ub extends kn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=br.get(e);if(o!==void 0){if(r.manager.itemStart(e),o.then){o.then(c=>{t&&t(c),r.manager.itemEnd(e)}).catch(c=>{i&&i(c)});return}return setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o}const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader;const l=fetch(e,a).then(function(c){return c.blob()}).then(function(c){return createImageBitmap(c,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(c){return br.add(e,c),t&&t(c),r.manager.itemEnd(e),c}).catch(function(c){i&&i(c),br.remove(e),r.manager.itemError(e),r.manager.itemEnd(e)});br.add(e,l),r.manager.itemStart(e)}}let Bl;class wf{static getContext(){return Bl===void 0&&(Bl=new(window.AudioContext||window.webkitAudioContext)),Bl}static setContext(e){Bl=e}}class Lb extends kn{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new qi(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(l){try{const c=l.slice(0);wf.getContext().decodeAudioData(c,function(u){t(u)}).catch(a)}catch(c){a(c)}},n,i);function a(l){i?i(l):console.error(l),r.manager.itemError(e)}}}const nm=new rt,im=new rt,ls=new rt;class Nb{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new vn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new vn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,ls.copy(e.projectionMatrix);const i=t.eyeSep/2,r=i*t.near/t.focus,o=t.near*Math.tan(Is*t.fov*.5)/t.zoom;let a,l;im.elements[12]=-i,nm.elements[12]=i,a=-o*t.aspect+r,l=o*t.aspect+r,ls.elements[0]=2*t.near/(l-a),ls.elements[8]=(l+a)/(l-a),this.cameraL.projectionMatrix.copy(ls),a=-o*t.aspect-r,l=o*t.aspect-r,ls.elements[0]=2*t.near/(l-a),ls.elements[8]=(l+a)/(l-a),this.cameraR.projectionMatrix.copy(ls)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(im),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(nm)}}class y_ extends vn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e,this.index=0}}class Ef{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=rm(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=rm();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function rm(){return performance.now()}const cs=new N,sm=new hn,Ob=new N,hs=new N;class Fb extends Ft{constructor(){super(),this.type="AudioListener",this.context=wf.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Ef}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(cs,sm,Ob),hs.set(0,0,-1).applyQuaternion(sm),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(cs.x,i),t.positionY.linearRampToValueAtTime(cs.y,i),t.positionZ.linearRampToValueAtTime(cs.z,i),t.forwardX.linearRampToValueAtTime(hs.x,i),t.forwardY.linearRampToValueAtTime(hs.y,i),t.forwardZ.linearRampToValueAtTime(hs.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(cs.x,cs.y,cs.z),t.setOrientation(hs.x,hs.y,hs.z,n.x,n.y,n.z)}}class x_ extends Ft{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(e=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+e),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}copy(e,t){return super.copy(e,t),e.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=e.autoplay,this.buffer=e.buffer,this.detune=e.detune,this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this.offset=e.offset,this.duration=e.duration,this.playbackRate=e.playbackRate,this.hasPlaybackControl=e.hasPlaybackControl,this.sourceType=e.sourceType,this.filters=e.filters.slice(),this)}clone(e){return new this.constructor(this.listener).copy(this,e)}}const us=new N,om=new hn,kb=new N,ds=new N;class Bb extends x_{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(us,om,kb),ds.set(0,0,1).applyQuaternion(om);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(us.x,n),t.positionY.linearRampToValueAtTime(us.y,n),t.positionZ.linearRampToValueAtTime(us.z,n),t.orientationX.linearRampToValueAtTime(ds.x,n),t.orientationY.linearRampToValueAtTime(ds.y,n),t.orientationZ.linearRampToValueAtTime(ds.z,n)}else t.setPosition(us.x,us.y,us.z),t.setOrientation(ds.x,ds.y,ds.z)}}class zb{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class b_{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,r,o;switch(t){case"quaternion":i=this._slerp,r=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let o=this.cumulativeWeight;if(o===0){for(let a=0;a!==i;++a)n[r+a]=n[a];o=t}else{o+=t;const a=t/o;this._mixBufferRegion(n,r,0,a,i)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const l=t*this._origIndex;this._mixBufferRegion(n,i,l,1-r,t)}o>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let l=t,c=t+t;l!==c;++l)if(n[l]!==n[l+t]){a.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let r=n,o=i;r!==o;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,r){if(i>=.5)for(let o=0;o!==r;++o)e[t+o]=e[n+o]}_slerp(e,t,n,i){hn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,r){const o=this._workIndex*r;hn.multiplyQuaternionsFlat(e,o,e,t,e,n),hn.slerpFlat(e,t,e,t,e,o,i)}_lerp(e,t,n,i,r){const o=1-i;for(let a=0;a!==r;++a){const l=t+a;e[l]=e[l]*o+e[n+a]*i}}_lerpAdditive(e,t,n,i,r){for(let o=0;o!==r;++o){const a=t+o;e[a]=e[a]+e[n+o]*i}}}const Tf="\\[\\]\\.:\\/",Vb=new RegExp("["+Tf+"]","g"),Af="[^"+Tf+"]",Gb="[^"+Tf.replace("\\.","")+"]",Hb=/((?:WC+[\/:])*)/.source.replace("WC",Af),Wb=/(WCOD+)?/.source.replace("WCOD",Gb),Xb=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Af),Yb=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Af),qb=new RegExp("^"+Hb+Wb+Xb+Yb+"$"),jb=["material","materials","bones","map"];class Zb{constructor(e,t,n){const i=n||kt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class kt{constructor(e,t,n){this.path=t,this.parsedPath=n||kt.parseTrackName(t),this.node=kt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new kt.Composite(e,t,n):new kt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(Vb,"")}static parseTrackName(e){const t=qb.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);jb.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(r){for(let o=0;o<r.length;o++){const a=r[o];if(a.name===t||a.uuid===t)return a;const l=n(a.children);if(l)return l}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=kt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let c=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let h=0;h<e.length;h++)if(e[h].name===c){c=h;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const o=e[i];if(o===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+i+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.isMaterial===!0?a=this.Versioning.NeedsUpdate:e.isObject3D===!0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}l=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else o.fromArray!==void 0&&o.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(l=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}kt.Composite=Zb;kt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};kt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};kt.prototype.GetterByBindingType=[kt.prototype._getValue_direct,kt.prototype._getValue_array,kt.prototype._getValue_arrayElement,kt.prototype._getValue_toArray];kt.prototype.SetterByBindingTypeAndVersioning=[[kt.prototype._setValue_direct,kt.prototype._setValue_direct_setNeedsUpdate,kt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[kt.prototype._setValue_array,kt.prototype._setValue_array_setNeedsUpdate,kt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[kt.prototype._setValue_arrayElement,kt.prototype._setValue_arrayElement_setNeedsUpdate,kt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[kt.prototype._setValue_fromArray,kt.prototype._setValue_fromArray_setNeedsUpdate,kt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Jb{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Ci(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,o=r.length;let a,l=e.length,c=this.nCachedObjects_;for(let h=0,u=arguments.length;h!==u;++h){const d=arguments[h],f=d.uuid;let p=t[f];if(p===void 0){p=l++,t[f]=p,e.push(d);for(let v=0,m=o;v!==m;++v)r[v].push(new kt(d,n[v],i[v]))}else if(p<c){a=e[p];const v=--c,m=e[v];t[m.uuid]=p,e[p]=m,t[f]=v,e[v]=d;for(let g=0,x=o;g!==x;++g){const y=r[g],_=y[v];let E=y[p];y[p]=_,E===void 0&&(E=new kt(d,n[g],i[g])),y[v]=E}}else e[p]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let o=0,a=arguments.length;o!==a;++o){const l=arguments[o],c=l.uuid,h=t[c];if(h!==void 0&&h>=r){const u=r++,d=e[u];t[d.uuid]=h,e[h]=d,t[c]=u,e[u]=l;for(let f=0,p=i;f!==p;++f){const v=n[f],m=v[u],g=v[h];v[h]=m,v[u]=g}}}this.nCachedObjects_=r}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,o=e.length;for(let a=0,l=arguments.length;a!==l;++a){const c=arguments[a],h=c.uuid,u=t[h];if(u!==void 0)if(delete t[h],u<r){const d=--r,f=e[d],p=--o,v=e[p];t[f.uuid]=u,e[u]=f,t[v.uuid]=d,e[d]=v,e.pop();for(let m=0,g=i;m!==g;++m){const x=n[m],y=x[d],_=x[p];x[u]=y,x[d]=_,x.pop()}}else{const d=--o,f=e[d];d>0&&(t[f.uuid]=u),e[u]=f,e.pop();for(let p=0,v=i;p!==v;++p){const m=n[p];m[u]=m[d],m.pop()}}}this.nCachedObjects_=r}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const r=this._bindings;if(i!==void 0)return r[i];const o=this._paths,a=this._parsedPaths,l=this._objects,c=l.length,h=this.nCachedObjects_,u=new Array(c);i=r.length,n[e]=i,o.push(e),a.push(t),r.push(u);for(let d=h,f=l.length;d!==f;++d){const p=l[d];u[d]=new kt(p,e,t)}return u}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,r=this._parsedPaths,o=this._bindings,a=o.length-1,l=o[a],c=e[a];t[c]=n,o[n]=l,o.pop(),r[n]=r[a],r.pop(),i[n]=i[a],i.pop()}}}class S_{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const r=t.tracks,o=r.length,a=new Array(o),l={endingStart:Es,endingEnd:Es};for(let c=0;c!==o;++c){const h=r[c].createInterpolant(null);a[c]=h,h.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=yv,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,r=e._clip.duration,o=r/i,a=i/r;e.warp(1,o,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,r=i.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,c=a.sampleValues;return l[0]=r,l[1]=r+n,c[0]=e/o,c[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const l=(e-r)*n;l<0||n===0?t=0:(this._startTime=null,t=n*l)}t*=this._updateTimeScale(e);const o=this._updateTime(t),a=this._updateWeight(e);if(a>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case Jd:for(let h=0,u=l.length;h!==u;++h)l[h].evaluate(o),c[h].accumulateAdditive(a);break;case fh:default:for(let h=0,u=l.length;h!==u;++h)l[h].evaluate(o),c[h].accumulate(i,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,r=this._loopCount;const o=n===xv;if(e===0)return r===-1?i:o&&(r&1)===1?t-i:i;if(n===_v){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),i>=t||i<0){const a=Math.floor(i/t);i-=t*a,r+=Math.abs(a);const l=this.repetitions-r;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=i;if(o&&(r&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=Ts,i.endingEnd=Ts):(e?i.endingStart=this.zeroSlopeAtStart?Ts:Es:i.endingStart=Aa,t?i.endingEnd=this.zeroSlopeAtEnd?Ts:Es:i.endingEnd=Aa)}_scheduleFading(e,t,n){const i=this._mixer,r=i.time;let o=this._weightInterpolant;o===null&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=r,l[0]=t,a[1]=r+e,l[1]=n,this}}const Kb=new Float32Array(1);class Qb extends cr{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,o=e._propertyBindings,a=e._interpolants,l=n.uuid,c=this._bindingsByRootAndName;let h=c[l];h===void 0&&(h={},c[l]=h);for(let u=0;u!==r;++u){const d=i[u],f=d.name;let p=h[f];if(p!==void 0)++p.referenceCount,o[u]=p;else{if(p=o[u],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,l,f));continue}const v=t&&t._propertyBindings[u].binding.parsedPath;p=new b_(kt.create(n,f,v),d.ValueTypeName,d.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,l,f),o[u]=p}a[u].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,r=this._actionsByClip;let o=r[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=o;else{const a=o.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=i.length,i.push(e),o.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,o=this._actionsByClip,a=o[r],l=a.knownActions,c=l[l.length-1],h=e._byClipCacheIndex;c._byClipCacheIndex=h,l[h]=c,l.pop(),e._byClipCacheIndex=null;const u=a.actionByRoot,d=(e._localRoot||this._root).uuid;delete u[d],l.length===0&&delete o[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let o=i[t];o===void 0&&(o={},i[t]=o),o[n]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,o=this._bindingsByRootAndName,a=o[i],l=t[t.length-1],c=e._cacheIndex;l._cacheIndex=c,t[c]=l,t.pop(),delete a[r],Object.keys(a).length===0&&delete o[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new gf(new Float32Array(2),new Float32Array(2),1,Kb),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r}clipAction(e,t,n){const i=t||this._root,r=i.uuid;let o=typeof e=="string"?Gs.findByName(i,e):e;const a=o!==null?o.uuid:e,l=this._actionsByClip[a];let c=null;if(n===void 0&&(o!==null?n=o.blendMode:n=fh),l!==void 0){const u=l.actionByRoot[r];if(u!==void 0&&u.blendMode===n)return u;c=l.knownActions[0],o===null&&(o=c._clip)}if(o===null)return null;const h=new S_(this,o,t,n);return this._bindAction(h,c),this._addInactiveAction(h,a,r),h}existingAction(e,t){const n=t||this._root,i=n.uuid,r=typeof e=="string"?Gs.findByName(n,e):e,o=r?r.uuid:e,a=this._actionsByClip[o];return a!==void 0&&a.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),o=this._accuIndex^=1;for(let c=0;c!==n;++c)t[c]._update(i,e,r,o);const a=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)a[c].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const o=r.knownActions;for(let a=0,l=o.length;a!==l;++a){const c=o[a];this._deactivateAction(c);const h=c._cacheIndex,u=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,u._cacheIndex=h,t[h]=u,t.pop(),this._removeInactiveBindingsForAction(c)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const o in n){const a=n[o].actionByRoot,l=a[t];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const i=this._bindingsByRootAndName,r=i[t];if(r!==void 0)for(const o in r){const a=r[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class $b extends ph{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isRenderTarget3D=!0,this.depth=n,this.texture=new mh(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class e1 extends ph{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isRenderTargetArray=!0,this.depth=n,this.texture=new Ya(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Cf{constructor(e){this.value=e}clone(){return new Cf(this.value.clone===void 0?this.value:this.value.clone())}}let t1=0;class n1 extends cr{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:t1++}),this.name="",this.usage=Ra,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++){const r=Array.isArray(t[n])?t[n]:[t[n]];for(let o=0;o<r.length;o++)this.uniforms.push(r[o].clone())}return this}clone(){return new this.constructor().copy(this)}}class eh extends bh{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class i1{constructor(e,t,n,i,r){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const am=new rt;class Rf{constructor(e,t,n=0,i=1/0){this.ray=new qr(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new gh,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return am.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(am),this}intersectObject(e,t=!0,n=[]){return xd(e,this,n,t),n.sort(lm),n}intersectObjects(e,t=!0,n=[]){for(let i=0,r=e.length;i<r;i++)xd(e[i],this,n,t);return n.sort(lm),n}}function lm(s,e){return s.distance-e.distance}function xd(s,e,t,n){let i=!0;if(s.layers.test(e.layers)&&s.raycast(e,t)===!1&&(i=!1),i===!0&&n===!0){const r=s.children;for(let o=0,a=r.length;o<a;o++)xd(r[o],e,t,!0)}}class ka{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Mt(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Mt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class r1{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}class Pf{constructor(e,t,n,i){Pf.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,t,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let n=0;n<4;n++)this.elements[n]=e[n+t];return this}set(e,t,n,i){const r=this.elements;return r[0]=e,r[2]=t,r[1]=n,r[3]=i,this}}const cm=new ve;class s1{constructor(e=new ve(1/0,1/0),t=new ve(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=cm.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,cm).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const hm=new N,zl=new N;class M_{constructor(e=new N,t=new N){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){hm.subVectors(e,this.start),zl.subVectors(this.end,this.start);const n=zl.dot(zl);let r=zl.dot(hm)/n;return t&&(r=Mt(r,0,1)),r}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const um=new N;class o1 extends Ft{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new yt,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,l=32;o<l;o++,a++){const c=o/l*Math.PI*2,h=a/l*Math.PI*2;i.push(Math.cos(c),Math.sin(c),1,Math.cos(h),Math.sin(h),1)}n.setAttribute("position",new qe(i,3));const r=new Fn({fog:!1,toneMapped:!1});this.cone=new Zi(n,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),um.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(um),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Or=new N,Vl=new rt,Lu=new rt;class a1 extends Zi{constructor(e){const t=w_(e),n=new yt,i=[],r=[],o=new ze(0,0,1),a=new ze(0,1,0);for(let c=0;c<t.length;c++){const h=t[c];h.parent&&h.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(o.r,o.g,o.b),r.push(a.r,a.g,a.b))}n.setAttribute("position",new qe(i,3)),n.setAttribute("color",new qe(r,3));const l=new Fn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Lu.copy(this.root.matrixWorld).invert();for(let r=0,o=0;r<t.length;r++){const a=t[r];a.parent&&a.parent.isBone&&(Vl.multiplyMatrices(Lu,a.matrixWorld),Or.setFromMatrixPosition(Vl),i.setXYZ(o,Or.x,Or.y,Or.z),Vl.multiplyMatrices(Lu,a.parent.matrixWorld),Or.setFromMatrixPosition(Vl),i.setXYZ(o+1,Or.x,Or.y,Or.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function w_(s){const e=[];s.isBone===!0&&e.push(s);for(let t=0;t<s.children.length;t++)e.push.apply(e,w_(s.children[t]));return e}class l1 extends zt{constructor(e,t,n){const i=new ko(t,4,2),r=new Xn({wireframe:!0,fog:!1,toneMapped:!1});super(i,r),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const c1=new N,dm=new ze,fm=new ze;class h1 extends Ft{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new $a(t);i.rotateY(Math.PI*.5),this.material=new Xn({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const r=i.getAttribute("position"),o=new Float32Array(r.count*3);i.setAttribute("color",new Et(o,3)),this.add(new zt(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");dm.copy(this.light.color),fm.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const r=n<i/2?dm:fm;t.setXYZ(n,r.r,r.g,r.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(c1.setFromMatrixPosition(this.light.matrixWorld).negate())}}class E_ extends Zi{constructor(e=10,t=10,n=4473924,i=8947848){n=new ze(n),i=new ze(i);const r=t/2,o=e/t,a=e/2,l=[],c=[];for(let d=0,f=0,p=-a;d<=t;d++,p+=o){l.push(-a,0,p,a,0,p),l.push(p,0,-a,p,0,a);const v=d===r?n:i;v.toArray(c,f),f+=3,v.toArray(c,f),f+=3,v.toArray(c,f),f+=3,v.toArray(c,f),f+=3}const h=new yt;h.setAttribute("position",new qe(l,3)),h.setAttribute("color",new qe(c,3));const u=new Fn({vertexColors:!0,toneMapped:!1});super(h,u),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class u1 extends Zi{constructor(e=10,t=16,n=8,i=64,r=4473924,o=8947848){r=new ze(r),o=new ze(o);const a=[],l=[];if(t>1)for(let u=0;u<t;u++){const d=u/t*(Math.PI*2),f=Math.sin(d)*e,p=Math.cos(d)*e;a.push(0,0,0),a.push(f,0,p);const v=u&1?r:o;l.push(v.r,v.g,v.b),l.push(v.r,v.g,v.b)}for(let u=0;u<n;u++){const d=u&1?r:o,f=e-e/n*u;for(let p=0;p<i;p++){let v=p/i*(Math.PI*2),m=Math.sin(v)*f,g=Math.cos(v)*f;a.push(m,0,g),l.push(d.r,d.g,d.b),v=(p+1)/i*(Math.PI*2),m=Math.sin(v)*f,g=Math.cos(v)*f,a.push(m,0,g),l.push(d.r,d.g,d.b)}}const c=new yt;c.setAttribute("position",new qe(a,3)),c.setAttribute("color",new qe(l,3));const h=new Fn({vertexColors:!0,toneMapped:!1});super(c,h),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const pm=new N,Gl=new N,mm=new N;class d1 extends Ft{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new yt;i.setAttribute("position",new qe([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new Fn({fog:!1,toneMapped:!1});this.lightPlane=new Tr(i,r),this.add(this.lightPlane),i=new yt,i.setAttribute("position",new qe([0,0,0,0,0,1],3)),this.targetLine=new Tr(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),pm.setFromMatrixPosition(this.light.matrixWorld),Gl.setFromMatrixPosition(this.light.target.matrixWorld),mm.subVectors(Gl,pm),this.lightPlane.lookAt(Gl),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Gl),this.targetLine.scale.z=mm.length()}}const Hl=new N,dn=new vh;class f1 extends Zi{constructor(e){const t=new yt,n=new Fn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],o={};a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4");function a(p,v){l(p),l(v)}function l(p){i.push(0,0,0),r.push(0,0,0),o[p]===void 0&&(o[p]=[]),o[p].push(i.length/3-1)}t.setAttribute("position",new qe(i,3)),t.setAttribute("color",new qe(r,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update();const c=new ze(16755200),h=new ze(16711680),u=new ze(43775),d=new ze(16777215),f=new ze(3355443);this.setColors(c,h,u,d,f)}setColors(e,t,n,i,r){const a=this.geometry.getAttribute("color");a.setXYZ(0,e.r,e.g,e.b),a.setXYZ(1,e.r,e.g,e.b),a.setXYZ(2,e.r,e.g,e.b),a.setXYZ(3,e.r,e.g,e.b),a.setXYZ(4,e.r,e.g,e.b),a.setXYZ(5,e.r,e.g,e.b),a.setXYZ(6,e.r,e.g,e.b),a.setXYZ(7,e.r,e.g,e.b),a.setXYZ(8,e.r,e.g,e.b),a.setXYZ(9,e.r,e.g,e.b),a.setXYZ(10,e.r,e.g,e.b),a.setXYZ(11,e.r,e.g,e.b),a.setXYZ(12,e.r,e.g,e.b),a.setXYZ(13,e.r,e.g,e.b),a.setXYZ(14,e.r,e.g,e.b),a.setXYZ(15,e.r,e.g,e.b),a.setXYZ(16,e.r,e.g,e.b),a.setXYZ(17,e.r,e.g,e.b),a.setXYZ(18,e.r,e.g,e.b),a.setXYZ(19,e.r,e.g,e.b),a.setXYZ(20,e.r,e.g,e.b),a.setXYZ(21,e.r,e.g,e.b),a.setXYZ(22,e.r,e.g,e.b),a.setXYZ(23,e.r,e.g,e.b),a.setXYZ(24,t.r,t.g,t.b),a.setXYZ(25,t.r,t.g,t.b),a.setXYZ(26,t.r,t.g,t.b),a.setXYZ(27,t.r,t.g,t.b),a.setXYZ(28,t.r,t.g,t.b),a.setXYZ(29,t.r,t.g,t.b),a.setXYZ(30,t.r,t.g,t.b),a.setXYZ(31,t.r,t.g,t.b),a.setXYZ(32,n.r,n.g,n.b),a.setXYZ(33,n.r,n.g,n.b),a.setXYZ(34,n.r,n.g,n.b),a.setXYZ(35,n.r,n.g,n.b),a.setXYZ(36,n.r,n.g,n.b),a.setXYZ(37,n.r,n.g,n.b),a.setXYZ(38,i.r,i.g,i.b),a.setXYZ(39,i.r,i.g,i.b),a.setXYZ(40,r.r,r.g,r.b),a.setXYZ(41,r.r,r.g,r.b),a.setXYZ(42,r.r,r.g,r.b),a.setXYZ(43,r.r,r.g,r.b),a.setXYZ(44,r.r,r.g,r.b),a.setXYZ(45,r.r,r.g,r.b),a.setXYZ(46,r.r,r.g,r.b),a.setXYZ(47,r.r,r.g,r.b),a.setXYZ(48,r.r,r.g,r.b),a.setXYZ(49,r.r,r.g,r.b),a.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;dn.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);const r=this.camera.coordinateSystem===Xi?-1:0;gn("c",t,e,dn,0,0,r),gn("t",t,e,dn,0,0,1),gn("n1",t,e,dn,-1,-1,r),gn("n2",t,e,dn,n,-1,r),gn("n3",t,e,dn,-1,i,r),gn("n4",t,e,dn,n,i,r),gn("f1",t,e,dn,-1,-1,1),gn("f2",t,e,dn,n,-1,1),gn("f3",t,e,dn,-1,i,1),gn("f4",t,e,dn,n,i,1),gn("u1",t,e,dn,n*.7,i*1.1,r),gn("u2",t,e,dn,-1*.7,i*1.1,r),gn("u3",t,e,dn,0,i*2,r),gn("cf1",t,e,dn,-1,0,1),gn("cf2",t,e,dn,n,0,1),gn("cf3",t,e,dn,0,-1,1),gn("cf4",t,e,dn,0,i,1),gn("cn1",t,e,dn,-1,0,r),gn("cn2",t,e,dn,n,0,r),gn("cn3",t,e,dn,0,-1,r),gn("cn4",t,e,dn,0,i,r),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function gn(s,e,t,n,i,r,o){Hl.set(i,r,o).unproject(n);const a=e[s];if(a!==void 0){const l=t.getAttribute("position");for(let c=0,h=a.length;c<h;c++)l.setXYZ(a[c],Hl.x,Hl.y,Hl.z)}}const Wl=new yn;class p1 extends Zi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),r=new yt;r.setIndex(new Et(n,1)),r.setAttribute("position",new Et(i,3)),super(r,new Fn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Wl.setFromObject(this.object),Wl.isEmpty())return;const t=Wl.min,n=Wl.max,i=this.geometry.attributes.position,r=i.array;r[0]=n.x,r[1]=n.y,r[2]=n.z,r[3]=t.x,r[4]=n.y,r[5]=n.z,r[6]=t.x,r[7]=t.y,r[8]=n.z,r[9]=n.x,r[10]=t.y,r[11]=n.z,r[12]=n.x,r[13]=n.y,r[14]=t.z,r[15]=t.x,r[16]=n.y,r[17]=t.z,r[18]=t.x,r[19]=t.y,r[20]=t.z,r[21]=n.x,r[22]=t.y,r[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class m1 extends Zi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],r=new yt;r.setIndex(new Et(n,1)),r.setAttribute("position",new qe(i,3)),super(r,new Fn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class g1 extends Tr{constructor(e,t=1,n=16776960){const i=n,r=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],o=new yt;o.setAttribute("position",new qe(r,3)),o.computeBoundingSphere(),super(o,new Fn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const a=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],l=new yt;l.setAttribute("position",new qe(a,3)),l.computeBoundingSphere(),this.add(new zt(l,new Xn({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const gm=new N;let Xl,Nu;class v1 extends Ft{constructor(e=new N(0,0,1),t=new N(0,0,0),n=1,i=16776960,r=n*.2,o=r*.2){super(),this.type="ArrowHelper",Xl===void 0&&(Xl=new yt,Xl.setAttribute("position",new qe([0,0,0,0,1,0],3)),Nu=new Fo(0,.5,1,5,1),Nu.translate(0,-.5,0)),this.position.copy(t),this.line=new Tr(Xl,new Fn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new zt(Nu,new Xn({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,r,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{gm.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(gm,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class _1 extends Zi{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new yt;i.setAttribute("position",new qe(t,3)),i.setAttribute("color",new qe(n,3));const r=new Fn({vertexColors:!0,toneMapped:!1});super(i,r),this.type="AxesHelper"}setColors(e,t,n){const i=new ze,r=this.geometry.attributes.color.array;return i.set(e),i.toArray(r,0),i.toArray(r,3),i.set(t),i.toArray(r,6),i.toArray(r,9),i.set(n),i.toArray(r,12),i.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class y1{constructor(){this.type="ShapePath",this.color=new ze,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Da,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,r,o){return this.currentPath.bezierCurveTo(e,t,n,i,r,o),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(g){const x=[];for(let y=0,_=g.length;y<_;y++){const E=g[y],w=new Ds;w.curves=E.curves,x.push(w)}return x}function n(g,x){const y=x.length;let _=!1;for(let E=y-1,w=0;w<y;E=w++){let M=x[E],T=x[w],S=T.x-M.x,b=T.y-M.y;if(Math.abs(b)>Number.EPSILON){if(b<0&&(M=x[w],S=-S,T=x[E],b=-b),g.y<M.y||g.y>T.y)continue;if(g.y===M.y){if(g.x===M.x)return!0}else{const I=b*(g.x-M.x)-S*(g.y-M.y);if(I===0)return!0;if(I<0)continue;_=!_}}else{if(g.y!==M.y)continue;if(T.x<=g.x&&g.x<=M.x||M.x<=g.x&&g.x<=T.x)return!0}}return _}const i=or.isClockWise,r=this.subPaths;if(r.length===0)return[];let o,a,l;const c=[];if(r.length===1)return a=r[0],l=new Ds,l.curves=a.curves,c.push(l),c;let h=!i(r[0].getPoints());h=e?!h:h;const u=[],d=[];let f=[],p=0,v;d[p]=void 0,f[p]=[];for(let g=0,x=r.length;g<x;g++)a=r[g],v=a.getPoints(),o=i(v),o=e?!o:o,o?(!h&&d[p]&&p++,d[p]={s:new Ds,p:v},d[p].s.curves=a.curves,h&&p++,f[p]=[]):f[p].push({h:a,p:v[0]});if(!d[0])return t(r);if(d.length>1){let g=!1,x=0;for(let y=0,_=d.length;y<_;y++)u[y]=[];for(let y=0,_=d.length;y<_;y++){const E=f[y];for(let w=0;w<E.length;w++){const M=E[w];let T=!0;for(let S=0;S<d.length;S++)n(M.p,d[S].p)&&(y!==S&&x++,T?(T=!1,u[S].push(M)):g=!0);T&&u[y].push(M)}}x>0&&g===!1&&(f=u)}let m;for(let g=0,x=d.length;g<x;g++){l=d[g].s,c.push(l),m=f[g];for(let y=0,_=m.length;y<_;y++)l.holes.push(m[y].h)}return c}}class If extends cr{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(){}disconnect(){}dispose(){}update(){}}function x1(s,e){const t=s.image&&s.image.width?s.image.width/s.image.height:1;return t>e?(s.repeat.x=1,s.repeat.y=t/e,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2):(s.repeat.x=e/t,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0),s}function b1(s,e){const t=s.image&&s.image.width?s.image.width/s.image.height:1;return t>e?(s.repeat.x=e/t,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0):(s.repeat.x=1,s.repeat.y=t/e,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2),s}function S1(s){return s.repeat.x=1,s.repeat.y=1,s.offset.x=0,s.offset.y=0,s}function bd(s,e,t,n){const i=M1(n);switch(t){case Wd:return s*e;case Yd:return s*e;case qd:return s*e*2;case hh:return s*e/i.components*i.byteLength;case Xa:return s*e/i.components*i.byteLength;case jd:return s*e*2/i.components*i.byteLength;case uh:return s*e*2/i.components*i.byteLength;case Xd:return s*e*3/i.components*i.byteLength;case ti:return s*e*4/i.components*i.byteLength;case dh:return s*e*4/i.components*i.byteLength;case da:case fa:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*8;case pa:case ma:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case Mc:case Ec:return Math.max(s,16)*Math.max(e,8)/4;case Sc:case wc:return Math.max(s,8)*Math.max(e,8)/2;case Tc:case Ac:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*8;case Cc:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case Rc:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case Pc:return Math.floor((s+4)/5)*Math.floor((e+3)/4)*16;case Ic:return Math.floor((s+4)/5)*Math.floor((e+4)/5)*16;case Dc:return Math.floor((s+5)/6)*Math.floor((e+4)/5)*16;case Uc:return Math.floor((s+5)/6)*Math.floor((e+5)/6)*16;case Lc:return Math.floor((s+7)/8)*Math.floor((e+4)/5)*16;case Nc:return Math.floor((s+7)/8)*Math.floor((e+5)/6)*16;case Oc:return Math.floor((s+7)/8)*Math.floor((e+7)/8)*16;case Fc:return Math.floor((s+9)/10)*Math.floor((e+4)/5)*16;case kc:return Math.floor((s+9)/10)*Math.floor((e+5)/6)*16;case Bc:return Math.floor((s+9)/10)*Math.floor((e+7)/8)*16;case zc:return Math.floor((s+9)/10)*Math.floor((e+9)/10)*16;case Vc:return Math.floor((s+11)/12)*Math.floor((e+9)/10)*16;case Gc:return Math.floor((s+11)/12)*Math.floor((e+11)/12)*16;case ga:case Hc:case Wc:return Math.ceil(s/4)*Math.ceil(e/4)*16;case Zd:case Xc:return Math.ceil(s/4)*Math.ceil(e/4)*8;case Yc:case qc:return Math.ceil(s/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function M1(s){switch(s){case lr:case Vd:return{byteLength:1,components:1};case Ro:case Gd:case No:return{byteLength:2,components:1};case lh:case ch:return{byteLength:2,components:4};case Er:case ah:case fi:return{byteLength:4,components:1};case Hd:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${s}.`)}const w1={contain:x1,cover:b1,fill:S1,getByteLength:bd};typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:sh}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=sh);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function T_(){let s=null,e=!1,t=null,n=null;function i(r,o){t(r,o),n=s.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=s.requestAnimationFrame(i),e=!0)},stop:function(){s.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){s=r}}}function E1(s){const e=new WeakMap;function t(a,l){const c=a.array,h=a.usage,u=c.byteLength,d=s.createBuffer();s.bindBuffer(l,d),s.bufferData(l,c,h),a.onUploadCallback();let f;if(c instanceof Float32Array)f=s.FLOAT;else if(c instanceof Uint16Array)a.isFloat16BufferAttribute?f=s.HALF_FLOAT:f=s.UNSIGNED_SHORT;else if(c instanceof Int16Array)f=s.SHORT;else if(c instanceof Uint32Array)f=s.UNSIGNED_INT;else if(c instanceof Int32Array)f=s.INT;else if(c instanceof Int8Array)f=s.BYTE;else if(c instanceof Uint8Array)f=s.UNSIGNED_BYTE;else if(c instanceof Uint8ClampedArray)f=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+c);return{buffer:d,type:f,bytesPerElement:c.BYTES_PER_ELEMENT,version:a.version,size:u}}function n(a,l,c){const h=l.array,u=l.updateRanges;if(s.bindBuffer(c,a),u.length===0)s.bufferSubData(c,0,h);else{u.sort((f,p)=>f.start-p.start);let d=0;for(let f=1;f<u.length;f++){const p=u[d],v=u[f];v.start<=p.start+p.count+1?p.count=Math.max(p.count,v.start+v.count-p.start):(++d,u[d]=v)}u.length=d+1;for(let f=0,p=u.length;f<p;f++){const v=u[f];s.bufferSubData(c,v.start*h.BYTES_PER_ELEMENT,h,v.start,v.count)}l.clearUpdateRanges()}l.onUploadCallback()}function i(a){return a.isInterleavedBufferAttribute&&(a=a.data),e.get(a)}function r(a){a.isInterleavedBufferAttribute&&(a=a.data);const l=e.get(a);l&&(s.deleteBuffer(l.buffer),e.delete(a))}function o(a,l){if(a.isInterleavedBufferAttribute&&(a=a.data),a.isGLBufferAttribute){const h=e.get(a);(!h||h.version<a.version)&&e.set(a,{buffer:a.buffer,type:a.type,bytesPerElement:a.elementSize,version:a.version});return}const c=e.get(a);if(c===void 0)e.set(a,t(a,l));else if(c.version<a.version){if(c.size!==a.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(c.buffer,a,l),c.version=a.version}}return{get:i,remove:r,update:o}}var T1=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,A1=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,C1=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,R1=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,P1=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,I1=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,D1=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,U1=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,L1=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,N1=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,O1=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,F1=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,k1=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,B1=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,z1=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,V1=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,G1=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,H1=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,W1=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,X1=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Y1=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,q1=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,j1=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,Z1=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,J1=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,K1=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Q1=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,$1=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,eS=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,tS=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,nS="gl_FragColor = linearToOutputTexel( gl_FragColor );",iS=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,rS=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,sS=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,oS=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,aS=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,lS=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,cS=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,hS=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,uS=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,dS=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,fS=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,pS=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,mS=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,gS=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,vS=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,_S=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,yS=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,xS=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,bS=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,SS=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,MS=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,wS=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,ES=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,TS=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,AS=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,CS=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,RS=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,PS=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,IS=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,DS=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,US=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,LS=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,NS=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,OS=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,FS=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,kS=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,BS=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,zS=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,VS=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,GS=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,HS=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,WS=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,XS=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,YS=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,qS=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,jS=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,ZS=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,JS=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,KS=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,QS=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,$S=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,eM=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,tM=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,nM=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,iM=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,rM=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,sM=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,oM=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,aM=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,lM=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,cM=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,hM=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,uM=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,dM=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,fM=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,pM=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,mM=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,gM=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,vM=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,_M=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,yM=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,xM=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,bM=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,SM=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,MM=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,wM=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const EM=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,TM=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,AM=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,CM=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,RM=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,PM=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,IM=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,DM=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,UM=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,LM=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,NM=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,OM=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,FM=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,kM=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,BM=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,zM=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,VM=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,GM=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,HM=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,WM=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,XM=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,YM=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,qM=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,jM=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,ZM=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,JM=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,KM=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,QM=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,$M=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,ew=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,tw=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,nw=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,iw=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,rw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,mt={alphahash_fragment:T1,alphahash_pars_fragment:A1,alphamap_fragment:C1,alphamap_pars_fragment:R1,alphatest_fragment:P1,alphatest_pars_fragment:I1,aomap_fragment:D1,aomap_pars_fragment:U1,batching_pars_vertex:L1,batching_vertex:N1,begin_vertex:O1,beginnormal_vertex:F1,bsdfs:k1,iridescence_fragment:B1,bumpmap_pars_fragment:z1,clipping_planes_fragment:V1,clipping_planes_pars_fragment:G1,clipping_planes_pars_vertex:H1,clipping_planes_vertex:W1,color_fragment:X1,color_pars_fragment:Y1,color_pars_vertex:q1,color_vertex:j1,common:Z1,cube_uv_reflection_fragment:J1,defaultnormal_vertex:K1,displacementmap_pars_vertex:Q1,displacementmap_vertex:$1,emissivemap_fragment:eS,emissivemap_pars_fragment:tS,colorspace_fragment:nS,colorspace_pars_fragment:iS,envmap_fragment:rS,envmap_common_pars_fragment:sS,envmap_pars_fragment:oS,envmap_pars_vertex:aS,envmap_physical_pars_fragment:_S,envmap_vertex:lS,fog_vertex:cS,fog_pars_vertex:hS,fog_fragment:uS,fog_pars_fragment:dS,gradientmap_pars_fragment:fS,lightmap_pars_fragment:pS,lights_lambert_fragment:mS,lights_lambert_pars_fragment:gS,lights_pars_begin:vS,lights_toon_fragment:yS,lights_toon_pars_fragment:xS,lights_phong_fragment:bS,lights_phong_pars_fragment:SS,lights_physical_fragment:MS,lights_physical_pars_fragment:wS,lights_fragment_begin:ES,lights_fragment_maps:TS,lights_fragment_end:AS,logdepthbuf_fragment:CS,logdepthbuf_pars_fragment:RS,logdepthbuf_pars_vertex:PS,logdepthbuf_vertex:IS,map_fragment:DS,map_pars_fragment:US,map_particle_fragment:LS,map_particle_pars_fragment:NS,metalnessmap_fragment:OS,metalnessmap_pars_fragment:FS,morphinstance_vertex:kS,morphcolor_vertex:BS,morphnormal_vertex:zS,morphtarget_pars_vertex:VS,morphtarget_vertex:GS,normal_fragment_begin:HS,normal_fragment_maps:WS,normal_pars_fragment:XS,normal_pars_vertex:YS,normal_vertex:qS,normalmap_pars_fragment:jS,clearcoat_normal_fragment_begin:ZS,clearcoat_normal_fragment_maps:JS,clearcoat_pars_fragment:KS,iridescence_pars_fragment:QS,opaque_fragment:$S,packing:eM,premultiplied_alpha_fragment:tM,project_vertex:nM,dithering_fragment:iM,dithering_pars_fragment:rM,roughnessmap_fragment:sM,roughnessmap_pars_fragment:oM,shadowmap_pars_fragment:aM,shadowmap_pars_vertex:lM,shadowmap_vertex:cM,shadowmask_pars_fragment:hM,skinbase_vertex:uM,skinning_pars_vertex:dM,skinning_vertex:fM,skinnormal_vertex:pM,specularmap_fragment:mM,specularmap_pars_fragment:gM,tonemapping_fragment:vM,tonemapping_pars_fragment:_M,transmission_fragment:yM,transmission_pars_fragment:xM,uv_pars_fragment:bM,uv_pars_vertex:SM,uv_vertex:MM,worldpos_vertex:wM,background_vert:EM,background_frag:TM,backgroundCube_vert:AM,backgroundCube_frag:CM,cube_vert:RM,cube_frag:PM,depth_vert:IM,depth_frag:DM,distanceRGBA_vert:UM,distanceRGBA_frag:LM,equirect_vert:NM,equirect_frag:OM,linedashed_vert:FM,linedashed_frag:kM,meshbasic_vert:BM,meshbasic_frag:zM,meshlambert_vert:VM,meshlambert_frag:GM,meshmatcap_vert:HM,meshmatcap_frag:WM,meshnormal_vert:XM,meshnormal_frag:YM,meshphong_vert:qM,meshphong_frag:jM,meshphysical_vert:ZM,meshphysical_frag:JM,meshtoon_vert:KM,meshtoon_frag:QM,points_vert:$M,points_frag:ew,shadow_vert:tw,shadow_frag:nw,sprite_vert:iw,sprite_frag:rw},We={common:{diffuse:{value:new ze(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new St},alphaMap:{value:null},alphaMapTransform:{value:new St},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new St}},envmap:{envMap:{value:null},envMapRotation:{value:new St},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new St}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new St}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new St},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new St},normalScale:{value:new ve(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new St},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new St}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new St}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new St}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ze(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ze(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new St},alphaTest:{value:0},uvTransform:{value:new St}},sprite:{diffuse:{value:new ze(16777215)},opacity:{value:1},center:{value:new ve(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new St},alphaMap:{value:null},alphaMapTransform:{value:new St},alphaTest:{value:0}}},$n={basic:{uniforms:Qn([We.common,We.specularmap,We.envmap,We.aomap,We.lightmap,We.fog]),vertexShader:mt.meshbasic_vert,fragmentShader:mt.meshbasic_frag},lambert:{uniforms:Qn([We.common,We.specularmap,We.envmap,We.aomap,We.lightmap,We.emissivemap,We.bumpmap,We.normalmap,We.displacementmap,We.fog,We.lights,{emissive:{value:new ze(0)}}]),vertexShader:mt.meshlambert_vert,fragmentShader:mt.meshlambert_frag},phong:{uniforms:Qn([We.common,We.specularmap,We.envmap,We.aomap,We.lightmap,We.emissivemap,We.bumpmap,We.normalmap,We.displacementmap,We.fog,We.lights,{emissive:{value:new ze(0)},specular:{value:new ze(1118481)},shininess:{value:30}}]),vertexShader:mt.meshphong_vert,fragmentShader:mt.meshphong_frag},standard:{uniforms:Qn([We.common,We.envmap,We.aomap,We.lightmap,We.emissivemap,We.bumpmap,We.normalmap,We.displacementmap,We.roughnessmap,We.metalnessmap,We.fog,We.lights,{emissive:{value:new ze(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:mt.meshphysical_vert,fragmentShader:mt.meshphysical_frag},toon:{uniforms:Qn([We.common,We.aomap,We.lightmap,We.emissivemap,We.bumpmap,We.normalmap,We.displacementmap,We.gradientmap,We.fog,We.lights,{emissive:{value:new ze(0)}}]),vertexShader:mt.meshtoon_vert,fragmentShader:mt.meshtoon_frag},matcap:{uniforms:Qn([We.common,We.bumpmap,We.normalmap,We.displacementmap,We.fog,{matcap:{value:null}}]),vertexShader:mt.meshmatcap_vert,fragmentShader:mt.meshmatcap_frag},points:{uniforms:Qn([We.points,We.fog]),vertexShader:mt.points_vert,fragmentShader:mt.points_frag},dashed:{uniforms:Qn([We.common,We.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:mt.linedashed_vert,fragmentShader:mt.linedashed_frag},depth:{uniforms:Qn([We.common,We.displacementmap]),vertexShader:mt.depth_vert,fragmentShader:mt.depth_frag},normal:{uniforms:Qn([We.common,We.bumpmap,We.normalmap,We.displacementmap,{opacity:{value:1}}]),vertexShader:mt.meshnormal_vert,fragmentShader:mt.meshnormal_frag},sprite:{uniforms:Qn([We.sprite,We.fog]),vertexShader:mt.sprite_vert,fragmentShader:mt.sprite_frag},background:{uniforms:{uvTransform:{value:new St},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:mt.background_vert,fragmentShader:mt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new St}},vertexShader:mt.backgroundCube_vert,fragmentShader:mt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:mt.cube_vert,fragmentShader:mt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:mt.equirect_vert,fragmentShader:mt.equirect_frag},distanceRGBA:{uniforms:Qn([We.common,We.displacementmap,{referencePosition:{value:new N},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:mt.distanceRGBA_vert,fragmentShader:mt.distanceRGBA_frag},shadow:{uniforms:Qn([We.lights,We.fog,{color:{value:new ze(0)},opacity:{value:1}}]),vertexShader:mt.shadow_vert,fragmentShader:mt.shadow_frag}};$n.physical={uniforms:Qn([$n.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new St},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new St},clearcoatNormalScale:{value:new ve(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new St},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new St},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new St},sheen:{value:0},sheenColor:{value:new ze(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new St},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new St},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new St},transmissionSamplerSize:{value:new ve},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new St},attenuationDistance:{value:0},attenuationColor:{value:new ze(0)},specularColor:{value:new ze(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new St},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new St},anisotropyVector:{value:new ve},anisotropyMap:{value:null},anisotropyMapTransform:{value:new St}}]),vertexShader:mt.meshphysical_vert,fragmentShader:mt.meshphysical_frag};const Yl={r:0,b:0,g:0},fs=new Ri,sw=new rt;function ow(s,e,t,n,i,r,o){const a=new ze(0);let l=r===!0?0:1,c,h,u=null,d=0,f=null;function p(y){let _=y.isScene===!0?y.background:null;return _&&_.isTexture&&(_=(y.backgroundBlurriness>0?t:e).get(_)),_}function v(y){let _=!1;const E=p(y);E===null?g(a,l):E&&E.isColor&&(g(E,1),_=!0);const w=s.xr.getEnvironmentBlendMode();w==="additive"?n.buffers.color.setClear(0,0,0,1,o):w==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,o),(s.autoClear||_)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil))}function m(y,_){const E=p(_);E&&(E.isCubeTexture||E.mapping===Lo)?(h===void 0&&(h=new zt(new Xs(1,1,1),new mi({name:"BackgroundCubeMaterial",uniforms:Io($n.backgroundCube.uniforms),vertexShader:$n.backgroundCube.vertexShader,fragmentShader:$n.backgroundCube.fragmentShader,side:Wn,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(w,M,T){this.matrixWorld.copyPosition(T.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(h)),fs.copy(_.backgroundRotation),fs.x*=-1,fs.y*=-1,fs.z*=-1,E.isCubeTexture&&E.isRenderTargetTexture===!1&&(fs.y*=-1,fs.z*=-1),h.material.uniforms.envMap.value=E,h.material.uniforms.flipEnvMap.value=E.isCubeTexture&&E.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=_.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(sw.makeRotationFromEuler(fs)),h.material.toneMapped=It.getTransfer(E.colorSpace)!==qt,(u!==E||d!==E.version||f!==s.toneMapping)&&(h.material.needsUpdate=!0,u=E,d=E.version,f=s.toneMapping),h.layers.enableAll(),y.unshift(h,h.geometry,h.material,0,0,null)):E&&E.isTexture&&(c===void 0&&(c=new zt(new hr(2,2),new mi({name:"BackgroundMaterial",uniforms:Io($n.background.uniforms),vertexShader:$n.background.vertexShader,fragmentShader:$n.background.fragmentShader,side:ar,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(c)),c.material.uniforms.t2D.value=E,c.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,c.material.toneMapped=It.getTransfer(E.colorSpace)!==qt,E.matrixAutoUpdate===!0&&E.updateMatrix(),c.material.uniforms.uvTransform.value.copy(E.matrix),(u!==E||d!==E.version||f!==s.toneMapping)&&(c.material.needsUpdate=!0,u=E,d=E.version,f=s.toneMapping),c.layers.enableAll(),y.unshift(c,c.geometry,c.material,0,0,null))}function g(y,_){y.getRGB(Yl,Lv(s)),n.buffers.color.setClear(Yl.r,Yl.g,Yl.b,_,o)}function x(){h!==void 0&&(h.geometry.dispose(),h.material.dispose(),h=void 0),c!==void 0&&(c.geometry.dispose(),c.material.dispose(),c=void 0)}return{getClearColor:function(){return a},setClearColor:function(y,_=1){a.set(y),l=_,g(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(y){l=y,g(a,l)},render:v,addToRenderList:m,dispose:x}}function aw(s,e){const t=s.getParameter(s.MAX_VERTEX_ATTRIBS),n={},i=d(null);let r=i,o=!1;function a(b,I,D,G,H){let $=!1;const F=u(G,D,I);r!==F&&(r=F,c(r.object)),$=f(b,G,D,H),$&&p(b,G,D,H),H!==null&&e.update(H,s.ELEMENT_ARRAY_BUFFER),($||o)&&(o=!1,_(b,I,D,G),H!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,e.get(H).buffer))}function l(){return s.createVertexArray()}function c(b){return s.bindVertexArray(b)}function h(b){return s.deleteVertexArray(b)}function u(b,I,D){const G=D.wireframe===!0;let H=n[b.id];H===void 0&&(H={},n[b.id]=H);let $=H[I.id];$===void 0&&($={},H[I.id]=$);let F=$[G];return F===void 0&&(F=d(l()),$[G]=F),F}function d(b){const I=[],D=[],G=[];for(let H=0;H<t;H++)I[H]=0,D[H]=0,G[H]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:I,enabledAttributes:D,attributeDivisors:G,object:b,attributes:{},index:null}}function f(b,I,D,G){const H=r.attributes,$=I.attributes;let F=0;const Z=D.getAttributes();for(const q in Z)if(Z[q].location>=0){const J=H[q];let B=$[q];if(B===void 0&&(q==="instanceMatrix"&&b.instanceMatrix&&(B=b.instanceMatrix),q==="instanceColor"&&b.instanceColor&&(B=b.instanceColor)),J===void 0||J.attribute!==B||B&&J.data!==B.data)return!0;F++}return r.attributesNum!==F||r.index!==G}function p(b,I,D,G){const H={},$=I.attributes;let F=0;const Z=D.getAttributes();for(const q in Z)if(Z[q].location>=0){let J=$[q];J===void 0&&(q==="instanceMatrix"&&b.instanceMatrix&&(J=b.instanceMatrix),q==="instanceColor"&&b.instanceColor&&(J=b.instanceColor));const B={};B.attribute=J,J&&J.data&&(B.data=J.data),H[q]=B,F++}r.attributes=H,r.attributesNum=F,r.index=G}function v(){const b=r.newAttributes;for(let I=0,D=b.length;I<D;I++)b[I]=0}function m(b){g(b,0)}function g(b,I){const D=r.newAttributes,G=r.enabledAttributes,H=r.attributeDivisors;D[b]=1,G[b]===0&&(s.enableVertexAttribArray(b),G[b]=1),H[b]!==I&&(s.vertexAttribDivisor(b,I),H[b]=I)}function x(){const b=r.newAttributes,I=r.enabledAttributes;for(let D=0,G=I.length;D<G;D++)I[D]!==b[D]&&(s.disableVertexAttribArray(D),I[D]=0)}function y(b,I,D,G,H,$,F){F===!0?s.vertexAttribIPointer(b,I,D,H,$):s.vertexAttribPointer(b,I,D,G,H,$)}function _(b,I,D,G){v();const H=G.attributes,$=D.getAttributes(),F=I.defaultAttributeValues;for(const Z in $){const q=$[Z];if(q.location>=0){let j=H[Z];if(j===void 0&&(Z==="instanceMatrix"&&b.instanceMatrix&&(j=b.instanceMatrix),Z==="instanceColor"&&b.instanceColor&&(j=b.instanceColor)),j!==void 0){const J=j.normalized,B=j.itemSize,Y=e.get(j);if(Y===void 0)continue;const K=Y.buffer,V=Y.type,W=Y.bytesPerElement,Q=V===s.INT||V===s.UNSIGNED_INT||j.gpuType===ah;if(j.isInterleavedBufferAttribute){const X=j.data,te=X.stride,ge=j.offset;if(X.isInstancedInterleavedBuffer){for(let be=0;be<q.locationSize;be++)g(q.location+be,X.meshPerAttribute);b.isInstancedMesh!==!0&&G._maxInstanceCount===void 0&&(G._maxInstanceCount=X.meshPerAttribute*X.count)}else for(let be=0;be<q.locationSize;be++)m(q.location+be);s.bindBuffer(s.ARRAY_BUFFER,K);for(let be=0;be<q.locationSize;be++)y(q.location+be,B/q.locationSize,V,J,te*W,(ge+B/q.locationSize*be)*W,Q)}else{if(j.isInstancedBufferAttribute){for(let X=0;X<q.locationSize;X++)g(q.location+X,j.meshPerAttribute);b.isInstancedMesh!==!0&&G._maxInstanceCount===void 0&&(G._maxInstanceCount=j.meshPerAttribute*j.count)}else for(let X=0;X<q.locationSize;X++)m(q.location+X);s.bindBuffer(s.ARRAY_BUFFER,K);for(let X=0;X<q.locationSize;X++)y(q.location+X,B/q.locationSize,V,J,B*W,B/q.locationSize*X*W,Q)}}else if(F!==void 0){const J=F[Z];if(J!==void 0)switch(J.length){case 2:s.vertexAttrib2fv(q.location,J);break;case 3:s.vertexAttrib3fv(q.location,J);break;case 4:s.vertexAttrib4fv(q.location,J);break;default:s.vertexAttrib1fv(q.location,J)}}}}x()}function E(){T();for(const b in n){const I=n[b];for(const D in I){const G=I[D];for(const H in G)h(G[H].object),delete G[H];delete I[D]}delete n[b]}}function w(b){if(n[b.id]===void 0)return;const I=n[b.id];for(const D in I){const G=I[D];for(const H in G)h(G[H].object),delete G[H];delete I[D]}delete n[b.id]}function M(b){for(const I in n){const D=n[I];if(D[b.id]===void 0)continue;const G=D[b.id];for(const H in G)h(G[H].object),delete G[H];delete D[b.id]}}function T(){S(),o=!0,r!==i&&(r=i,c(r.object))}function S(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:a,reset:T,resetDefaultState:S,dispose:E,releaseStatesOfGeometry:w,releaseStatesOfProgram:M,initAttributes:v,enableAttribute:m,disableUnusedAttributes:x}}function lw(s,e,t){let n;function i(c){n=c}function r(c,h){s.drawArrays(n,c,h),t.update(h,n,1)}function o(c,h,u){u!==0&&(s.drawArraysInstanced(n,c,h,u),t.update(h,n,u))}function a(c,h,u){if(u===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,c,0,h,0,u);let f=0;for(let p=0;p<u;p++)f+=h[p];t.update(f,n,1)}function l(c,h,u,d){if(u===0)return;const f=e.get("WEBGL_multi_draw");if(f===null)for(let p=0;p<c.length;p++)o(c[p],h[p],d[p]);else{f.multiDrawArraysInstancedWEBGL(n,c,0,h,0,d,0,u);let p=0;for(let v=0;v<u;v++)p+=h[v]*d[v];t.update(p,n,1)}}this.setMode=i,this.render=r,this.renderInstances=o,this.renderMultiDraw=a,this.renderMultiDrawInstances=l}function cw(s,e,t,n){let i;function r(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const M=e.get("EXT_texture_filter_anisotropic");i=s.getParameter(M.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function o(M){return!(M!==ti&&n.convert(M)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_FORMAT))}function a(M){const T=M===No&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(M!==lr&&n.convert(M)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_TYPE)&&M!==fi&&!T)}function l(M){if(M==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";M="mediump"}return M==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let c=t.precision!==void 0?t.precision:"highp";const h=l(c);h!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",h,"instead."),c=h);const u=t.logarithmicDepthBuffer===!0,d=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),f=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),p=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),v=s.getParameter(s.MAX_TEXTURE_SIZE),m=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),g=s.getParameter(s.MAX_VERTEX_ATTRIBS),x=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),y=s.getParameter(s.MAX_VARYING_VECTORS),_=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),E=p>0,w=s.getParameter(s.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:r,getMaxPrecision:l,textureFormatReadable:o,textureTypeReadable:a,precision:c,logarithmicDepthBuffer:u,reverseDepthBuffer:d,maxTextures:f,maxVertexTextures:p,maxTextureSize:v,maxCubemapSize:m,maxAttributes:g,maxVertexUniforms:x,maxVaryings:y,maxFragmentUniforms:_,vertexTextures:E,maxSamples:w}}function hw(s){const e=this;let t=null,n=0,i=!1,r=!1;const o=new vr,a=new St,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(u,d){const f=u.length!==0||d||n!==0||i;return i=d,n=u.length,f},this.beginShadows=function(){r=!0,h(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(u,d){t=h(u,d,0)},this.setState=function(u,d,f){const p=u.clippingPlanes,v=u.clipIntersection,m=u.clipShadows,g=s.get(u);if(!i||p===null||p.length===0||r&&!m)r?h(null):c();else{const x=r?0:n,y=x*4;let _=g.clippingState||null;l.value=_,_=h(p,d,y,f);for(let E=0;E!==y;++E)_[E]=t[E];g.clippingState=_,this.numIntersection=v?this.numPlanes:0,this.numPlanes+=x}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function h(u,d,f,p){const v=u!==null?u.length:0;let m=null;if(v!==0){if(m=l.value,p!==!0||m===null){const g=f+v*4,x=d.matrixWorldInverse;a.getNormalMatrix(x),(m===null||m.length<g)&&(m=new Float32Array(g));for(let y=0,_=f;y!==v;++y,_+=4)o.copy(u[y]).applyMatrix4(x,a),o.normal.toArray(m,_),m[_+3]=o.constant}l.value=m,l.needsUpdate=!0}return e.numPlanes=v,e.numIntersection=0,m}}function uw(s){let e=new WeakMap;function t(o,a){return a===Ma?o.mapping=wr:a===wa&&(o.mapping=Hr),o}function n(o){if(o&&o.isTexture){const a=o.mapping;if(a===Ma||a===wa)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new Ov(l.height);return c.fromEquirectangularTexture(s,o),e.set(o,c),o.addEventListener("dispose",i),t(c.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function r(){e=new WeakMap}return{get:n,dispose:r}}const Eo=4,vm=[.125,.215,.35,.446,.526,.582],Ms=20,Ou=new Jr,_m=new ze;let Fu=null,ku=0,Bu=0,zu=!1;const ys=(1+Math.sqrt(5))/2,vo=1/ys,ym=[new N(-ys,vo,0),new N(ys,vo,0),new N(-vo,0,ys),new N(vo,0,ys),new N(0,ys,-vo),new N(0,ys,vo),new N(-1,1,-1),new N(1,1,-1),new N(-1,1,1),new N(1,1,1)];class Sd{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Fu=this._renderer.getRenderTarget(),ku=this._renderer.getActiveCubeFace(),Bu=this._renderer.getActiveMipmapLevel(),zu=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Sm(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=bm(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Fu,ku,Bu),this._renderer.xr.enabled=zu,e.scissorTest=!1,ql(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===wr||e.mapping===Hr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Fu=this._renderer.getRenderTarget(),ku=this._renderer.getActiveCubeFace(),Bu=this._renderer.getActiveMipmapLevel(),zu=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:_n,minFilter:_n,generateMipmaps:!1,type:No,format:ti,colorSpace:ks,depthBuffer:!1},i=xm(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=xm(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=dw(r)),this._blurMaterial=fw(r,e,t)}return i}_compileMaterial(e){const t=new zt(this._lodPlanes[0],e);this._renderer.compile(t,Ou)}_sceneToCubeUV(e,t,n,i){const a=new vn(90,1,t,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],h=this._renderer,u=h.autoClear,d=h.toneMapping;h.getClearColor(_m),h.toneMapping=rr,h.autoClear=!1;const f=new Xn({name:"PMREM.Background",side:Wn,depthWrite:!1,depthTest:!1}),p=new zt(new Xs,f);let v=!1;const m=e.background;m?m.isColor&&(f.color.copy(m),e.background=null,v=!0):(f.color.copy(_m),v=!0);for(let g=0;g<6;g++){const x=g%3;x===0?(a.up.set(0,l[g],0),a.lookAt(c[g],0,0)):x===1?(a.up.set(0,0,l[g]),a.lookAt(0,c[g],0)):(a.up.set(0,l[g],0),a.lookAt(0,0,c[g]));const y=this._cubeSize;ql(i,x*y,g>2?y:0,y,y),h.setRenderTarget(i),v&&h.render(p,a),h.render(e,a)}p.geometry.dispose(),p.material.dispose(),h.toneMapping=d,h.autoClear=u,e.background=m}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===wr||e.mapping===Hr;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=Sm()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=bm());const r=i?this._cubemapMaterial:this._equirectMaterial,o=new zt(this._lodPlanes[0],r),a=r.uniforms;a.envMap.value=e;const l=this._cubeSize;ql(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(o,Ou)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const i=this._lodPlanes.length;for(let r=1;r<i;r++){const o=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),a=ym[(i-r-1)%ym.length];this._blur(e,r-1,r,o,a)}t.autoClear=n}_blur(e,t,n,i,r){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,i,"latitudinal",r),this._halfBlur(o,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=new zt(this._lodPlanes[i],c),d=c.uniforms,f=this._sizeLods[n]-1,p=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*Ms-1),v=r/p,m=isFinite(r)?1+Math.floor(h*v):Ms;m>Ms&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${Ms}`);const g=[];let x=0;for(let M=0;M<Ms;++M){const T=M/v,S=Math.exp(-T*T/2);g.push(S),M===0?x+=S:M<m&&(x+=2*S)}for(let M=0;M<g.length;M++)g[M]=g[M]/x;d.envMap.value=e.texture,d.samples.value=m,d.weights.value=g,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:y}=this;d.dTheta.value=p,d.mipInt.value=y-n;const _=this._sizeLods[i],E=3*_*(i>y-Eo?i-y+Eo:0),w=4*(this._cubeSize-_);ql(t,E,w,3*_,2*_),l.setRenderTarget(t),l.render(u,Ou)}}function dw(s){const e=[],t=[],n=[];let i=s;const r=s-Eo+1+vm.length;for(let o=0;o<r;o++){const a=Math.pow(2,i);t.push(a);let l=1/a;o>s-Eo?l=vm[o-s+Eo-1]:o===0&&(l=0),n.push(l);const c=1/(a-2),h=-c,u=1+c,d=[h,h,u,h,u,u,h,h,u,u,h,u],f=6,p=6,v=3,m=2,g=1,x=new Float32Array(v*p*f),y=new Float32Array(m*p*f),_=new Float32Array(g*p*f);for(let w=0;w<f;w++){const M=w%3*2/3-1,T=w>2?0:-1,S=[M,T,0,M+2/3,T,0,M+2/3,T+1,0,M,T,0,M+2/3,T+1,0,M,T+1,0];x.set(S,v*p*w),y.set(d,m*p*w);const b=[w,w,w,w,w,w];_.set(b,g*p*w)}const E=new yt;E.setAttribute("position",new Et(x,v)),E.setAttribute("uv",new Et(y,m)),E.setAttribute("faceIndex",new Et(_,g)),e.push(E),i>Eo&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function xm(s,e,t){const n=new Ni(s,e,t);return n.texture.mapping=Lo,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function ql(s,e,t,n,i){s.viewport.set(e,t,n,i),s.scissor.set(e,t,n,i)}function fw(s,e,t){const n=new Float32Array(Ms),i=new N(0,1,0);return new mi({name:"SphericalGaussianBlur",defines:{n:Ms,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Df(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Sr,depthTest:!1,depthWrite:!1})}function bm(){return new mi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Df(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Sr,depthTest:!1,depthWrite:!1})}function Sm(){return new mi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Df(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Sr,depthTest:!1,depthWrite:!1})}function Df(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function pw(s){let e=new WeakMap,t=null;function n(a){if(a&&a.isTexture){const l=a.mapping,c=l===Ma||l===wa,h=l===wr||l===Hr;if(c||h){let u=e.get(a);const d=u!==void 0?u.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==d)return t===null&&(t=new Sd(s)),u=c?t.fromEquirectangular(a,u):t.fromCubemap(a,u),u.texture.pmremVersion=a.pmremVersion,e.set(a,u),u.texture;if(u!==void 0)return u.texture;{const f=a.image;return c&&f&&f.height>0||h&&f&&i(f)?(t===null&&(t=new Sd(s)),u=c?t.fromEquirectangular(a):t.fromCubemap(a),u.texture.pmremVersion=a.pmremVersion,e.set(a,u),a.addEventListener("dispose",r),u.texture):null}}}return a}function i(a){let l=0;const c=6;for(let h=0;h<c;h++)a[h]!==void 0&&l++;return l===c}function r(a){const l=a.target;l.removeEventListener("dispose",r);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function mw(s){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const i=t(n);return i===null&&bo("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function gw(s,e,t,n){const i={},r=new WeakMap;function o(u){const d=u.target;d.index!==null&&e.remove(d.index);for(const p in d.attributes)e.remove(d.attributes[p]);d.removeEventListener("dispose",o),delete i[d.id];const f=r.get(d);f&&(e.remove(f),r.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function a(u,d){return i[d.id]===!0||(d.addEventListener("dispose",o),i[d.id]=!0,t.memory.geometries++),d}function l(u){const d=u.attributes;for(const f in d)e.update(d[f],s.ARRAY_BUFFER)}function c(u){const d=[],f=u.index,p=u.attributes.position;let v=0;if(f!==null){const x=f.array;v=f.version;for(let y=0,_=x.length;y<_;y+=3){const E=x[y+0],w=x[y+1],M=x[y+2];d.push(E,w,w,M,M,E)}}else if(p!==void 0){const x=p.array;v=p.version;for(let y=0,_=x.length/3-1;y<_;y+=3){const E=y+0,w=y+1,M=y+2;d.push(E,w,w,M,M,E)}}else return;const m=new(Pv(d)?tf:ef)(d,1);m.version=v;const g=r.get(u);g&&e.remove(g),r.set(u,m)}function h(u){const d=r.get(u);if(d){const f=u.index;f!==null&&d.version<f.version&&c(u)}else c(u);return r.get(u)}return{get:a,update:l,getWireframeAttribute:h}}function vw(s,e,t){let n;function i(d){n=d}let r,o;function a(d){r=d.type,o=d.bytesPerElement}function l(d,f){s.drawElements(n,f,r,d*o),t.update(f,n,1)}function c(d,f,p){p!==0&&(s.drawElementsInstanced(n,f,r,d*o,p),t.update(f,n,p))}function h(d,f,p){if(p===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,f,0,r,d,0,p);let m=0;for(let g=0;g<p;g++)m+=f[g];t.update(m,n,1)}function u(d,f,p,v){if(p===0)return;const m=e.get("WEBGL_multi_draw");if(m===null)for(let g=0;g<d.length;g++)c(d[g]/o,f[g],v[g]);else{m.multiDrawElementsInstancedWEBGL(n,f,0,r,d,0,v,0,p);let g=0;for(let x=0;x<p;x++)g+=f[x]*v[x];t.update(g,n,1)}}this.setMode=i,this.setIndex=a,this.render=l,this.renderInstances=c,this.renderMultiDraw=h,this.renderMultiDrawInstances=u}function _w(s){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,o,a){switch(t.calls++,o){case s.TRIANGLES:t.triangles+=a*(r/3);break;case s.LINES:t.lines+=a*(r/2);break;case s.LINE_STRIP:t.lines+=a*(r-1);break;case s.LINE_LOOP:t.lines+=a*r;break;case s.POINTS:t.points+=a*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function yw(s,e,t){const n=new WeakMap,i=new Tt;function r(o,a,l){const c=o.morphTargetInfluences,h=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,u=h!==void 0?h.length:0;let d=n.get(a);if(d===void 0||d.count!==u){let S=function(){M.dispose(),n.delete(a),a.removeEventListener("dispose",S)};d!==void 0&&d.texture.dispose();const f=a.morphAttributes.position!==void 0,p=a.morphAttributes.normal!==void 0,v=a.morphAttributes.color!==void 0,m=a.morphAttributes.position||[],g=a.morphAttributes.normal||[],x=a.morphAttributes.color||[];let y=0;f===!0&&(y=1),p===!0&&(y=2),v===!0&&(y=3);let _=a.attributes.position.count*y,E=1;_>e.maxTextureSize&&(E=Math.ceil(_/e.maxTextureSize),_=e.maxTextureSize);const w=new Float32Array(_*E*4*u),M=new Ya(w,_,E,u);M.type=fi,M.needsUpdate=!0;const T=y*4;for(let b=0;b<u;b++){const I=m[b],D=g[b],G=x[b],H=_*E*4*b;for(let $=0;$<I.count;$++){const F=$*T;f===!0&&(i.fromBufferAttribute(I,$),w[H+F+0]=i.x,w[H+F+1]=i.y,w[H+F+2]=i.z,w[H+F+3]=0),p===!0&&(i.fromBufferAttribute(D,$),w[H+F+4]=i.x,w[H+F+5]=i.y,w[H+F+6]=i.z,w[H+F+7]=0),v===!0&&(i.fromBufferAttribute(G,$),w[H+F+8]=i.x,w[H+F+9]=i.y,w[H+F+10]=i.z,w[H+F+11]=G.itemSize===4?i.w:1)}}d={count:u,texture:M,size:new ve(_,E)},n.set(a,d),a.addEventListener("dispose",S)}if(o.isInstancedMesh===!0&&o.morphTexture!==null)l.getUniforms().setValue(s,"morphTexture",o.morphTexture,t);else{let f=0;for(let v=0;v<c.length;v++)f+=c[v];const p=a.morphTargetsRelative?1:1-f;l.getUniforms().setValue(s,"morphTargetBaseInfluence",p),l.getUniforms().setValue(s,"morphTargetInfluences",c)}l.getUniforms().setValue(s,"morphTargetsTexture",d.texture,t),l.getUniforms().setValue(s,"morphTargetsTextureSize",d.size)}return{update:r}}function xw(s,e,t,n){let i=new WeakMap;function r(l){const c=n.render.frame,h=l.geometry,u=e.get(l,h);if(i.get(u)!==c&&(e.update(u),i.set(u,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),i.get(l)!==c&&(t.update(l.instanceMatrix,s.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,s.ARRAY_BUFFER),i.set(l,c))),l.isSkinnedMesh){const d=l.skeleton;i.get(d)!==c&&(d.update(),i.set(d,c))}return u}function o(){i=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:r,dispose:o}}const A_=new cn,Mm=new sf(1,1),C_=new Ya,R_=new mh,P_=new ja,wm=[],Em=[],Tm=new Float32Array(16),Am=new Float32Array(9),Cm=new Float32Array(4);function zo(s,e,t){const n=s[0];if(n<=0||n>0)return s;const i=e*t;let r=wm[i];if(r===void 0&&(r=new Float32Array(i),wm[i]=r),e!==0){n.toArray(r,0);for(let o=1,a=0;o!==e;++o)a+=t,s[o].toArray(r,a)}return r}function En(s,e){if(s.length!==e.length)return!1;for(let t=0,n=s.length;t<n;t++)if(s[t]!==e[t])return!1;return!0}function Tn(s,e){for(let t=0,n=e.length;t<n;t++)s[t]=e[t]}function Vh(s,e){let t=Em[e];t===void 0&&(t=new Int32Array(e),Em[e]=t);for(let n=0;n!==e;++n)t[n]=s.allocateTextureUnit();return t}function bw(s,e){const t=this.cache;t[0]!==e&&(s.uniform1f(this.addr,e),t[0]=e)}function Sw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(En(t,e))return;s.uniform2fv(this.addr,e),Tn(t,e)}}function Mw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(En(t,e))return;s.uniform3fv(this.addr,e),Tn(t,e)}}function ww(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(En(t,e))return;s.uniform4fv(this.addr,e),Tn(t,e)}}function Ew(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(En(t,e))return;s.uniformMatrix2fv(this.addr,!1,e),Tn(t,e)}else{if(En(t,n))return;Cm.set(n),s.uniformMatrix2fv(this.addr,!1,Cm),Tn(t,n)}}function Tw(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(En(t,e))return;s.uniformMatrix3fv(this.addr,!1,e),Tn(t,e)}else{if(En(t,n))return;Am.set(n),s.uniformMatrix3fv(this.addr,!1,Am),Tn(t,n)}}function Aw(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(En(t,e))return;s.uniformMatrix4fv(this.addr,!1,e),Tn(t,e)}else{if(En(t,n))return;Tm.set(n),s.uniformMatrix4fv(this.addr,!1,Tm),Tn(t,n)}}function Cw(s,e){const t=this.cache;t[0]!==e&&(s.uniform1i(this.addr,e),t[0]=e)}function Rw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(En(t,e))return;s.uniform2iv(this.addr,e),Tn(t,e)}}function Pw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(En(t,e))return;s.uniform3iv(this.addr,e),Tn(t,e)}}function Iw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(En(t,e))return;s.uniform4iv(this.addr,e),Tn(t,e)}}function Dw(s,e){const t=this.cache;t[0]!==e&&(s.uniform1ui(this.addr,e),t[0]=e)}function Uw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(En(t,e))return;s.uniform2uiv(this.addr,e),Tn(t,e)}}function Lw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(En(t,e))return;s.uniform3uiv(this.addr,e),Tn(t,e)}}function Nw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(En(t,e))return;s.uniform4uiv(this.addr,e),Tn(t,e)}}function Ow(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i);let r;this.type===s.SAMPLER_2D_SHADOW?(Mm.compareFunction=Qd,r=Mm):r=A_,t.setTexture2D(e||r,i)}function Fw(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||R_,i)}function kw(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||P_,i)}function Bw(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||C_,i)}function zw(s){switch(s){case 5126:return bw;case 35664:return Sw;case 35665:return Mw;case 35666:return ww;case 35674:return Ew;case 35675:return Tw;case 35676:return Aw;case 5124:case 35670:return Cw;case 35667:case 35671:return Rw;case 35668:case 35672:return Pw;case 35669:case 35673:return Iw;case 5125:return Dw;case 36294:return Uw;case 36295:return Lw;case 36296:return Nw;case 35678:case 36198:case 36298:case 36306:case 35682:return Ow;case 35679:case 36299:case 36307:return Fw;case 35680:case 36300:case 36308:case 36293:return kw;case 36289:case 36303:case 36311:case 36292:return Bw}}function Vw(s,e){s.uniform1fv(this.addr,e)}function Gw(s,e){const t=zo(e,this.size,2);s.uniform2fv(this.addr,t)}function Hw(s,e){const t=zo(e,this.size,3);s.uniform3fv(this.addr,t)}function Ww(s,e){const t=zo(e,this.size,4);s.uniform4fv(this.addr,t)}function Xw(s,e){const t=zo(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,t)}function Yw(s,e){const t=zo(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,t)}function qw(s,e){const t=zo(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,t)}function jw(s,e){s.uniform1iv(this.addr,e)}function Zw(s,e){s.uniform2iv(this.addr,e)}function Jw(s,e){s.uniform3iv(this.addr,e)}function Kw(s,e){s.uniform4iv(this.addr,e)}function Qw(s,e){s.uniform1uiv(this.addr,e)}function $w(s,e){s.uniform2uiv(this.addr,e)}function eE(s,e){s.uniform3uiv(this.addr,e)}function tE(s,e){s.uniform4uiv(this.addr,e)}function nE(s,e,t){const n=this.cache,i=e.length,r=Vh(t,i);En(n,r)||(s.uniform1iv(this.addr,r),Tn(n,r));for(let o=0;o!==i;++o)t.setTexture2D(e[o]||A_,r[o])}function iE(s,e,t){const n=this.cache,i=e.length,r=Vh(t,i);En(n,r)||(s.uniform1iv(this.addr,r),Tn(n,r));for(let o=0;o!==i;++o)t.setTexture3D(e[o]||R_,r[o])}function rE(s,e,t){const n=this.cache,i=e.length,r=Vh(t,i);En(n,r)||(s.uniform1iv(this.addr,r),Tn(n,r));for(let o=0;o!==i;++o)t.setTextureCube(e[o]||P_,r[o])}function sE(s,e,t){const n=this.cache,i=e.length,r=Vh(t,i);En(n,r)||(s.uniform1iv(this.addr,r),Tn(n,r));for(let o=0;o!==i;++o)t.setTexture2DArray(e[o]||C_,r[o])}function oE(s){switch(s){case 5126:return Vw;case 35664:return Gw;case 35665:return Hw;case 35666:return Ww;case 35674:return Xw;case 35675:return Yw;case 35676:return qw;case 5124:case 35670:return jw;case 35667:case 35671:return Zw;case 35668:case 35672:return Jw;case 35669:case 35673:return Kw;case 5125:return Qw;case 36294:return $w;case 36295:return eE;case 36296:return tE;case 35678:case 36198:case 36298:case 36306:case 35682:return nE;case 35679:case 36299:case 36307:return iE;case 35680:case 36300:case 36308:case 36293:return rE;case 36289:case 36303:case 36311:case 36292:return sE}}class aE{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=zw(t.type)}}class lE{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=oE(t.type)}}class cE{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let r=0,o=i.length;r!==o;++r){const a=i[r];a.setValue(e,t[a.id],n)}}}const Vu=/(\w+)(\])?(\[|\.)?/g;function Rm(s,e){s.seq.push(e),s.map[e.id]=e}function hE(s,e,t){const n=s.name,i=n.length;for(Vu.lastIndex=0;;){const r=Vu.exec(n),o=Vu.lastIndex;let a=r[1];const l=r[2]==="]",c=r[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===i){Rm(t,c===void 0?new aE(a,s,e):new lE(a,s,e));break}else{let u=t.map[a];u===void 0&&(u=new cE(a),Rm(t,u)),t=u}}}class cc{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const r=e.getActiveUniform(t,i),o=e.getUniformLocation(t,r.name);hE(r,o,this)}}setValue(e,t,n,i){const r=this.map[t];r!==void 0&&r.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let r=0,o=t.length;r!==o;++r){const a=t[r],l=n[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const o=e[i];o.id in t&&n.push(o)}return n}}function Pm(s,e,t){const n=s.createShader(e);return s.shaderSource(n,t),s.compileShader(n),n}const uE=37297;let dE=0;function fE(s,e){const t=s.split(`
`),n=[],i=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let o=i;o<r;o++){const a=o+1;n.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return n.join(`
`)}const Im=new St;function pE(s){It._getMatrix(Im,It.workingColorSpace,s);const e=`mat3( ${Im.elements.map(t=>t.toFixed(4))} )`;switch(It.getTransfer(s)){case Ca:return[e,"LinearTransferOETF"];case qt:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",s),[e,"LinearTransferOETF"]}}function Dm(s,e,t){const n=s.getShaderParameter(e,s.COMPILE_STATUS),i=s.getShaderInfoLog(e).trim();if(n&&i==="")return"";const r=/ERROR: 0:(\d+)/.exec(i);if(r){const o=parseInt(r[1]);return t.toUpperCase()+`

`+i+`

`+fE(s.getShaderSource(e),o)}else return i}function mE(s,e){const t=pE(e);return[`vec4 ${s}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function gE(s,e){let t;switch(e){case uv:t="Linear";break;case dv:t="Reinhard";break;case fv:t="Cineon";break;case pv:t="ACESFilmic";break;case bc:t="AgX";break;case gv:t="Neutral";break;case mv:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+s+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const jl=new N;function vE(){It.getLuminanceCoefficients(jl);const s=jl.x.toFixed(4),e=jl.y.toFixed(4),t=jl.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${s}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function _E(s){return[s.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",s.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(la).join(`
`)}function yE(s){const e=[];for(const t in s){const n=s[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function xE(s,e){const t={},n=s.getProgramParameter(e,s.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const r=s.getActiveAttrib(e,i),o=r.name;let a=1;r.type===s.FLOAT_MAT2&&(a=2),r.type===s.FLOAT_MAT3&&(a=3),r.type===s.FLOAT_MAT4&&(a=4),t[o]={type:r.type,location:s.getAttribLocation(e,o),locationSize:a}}return t}function la(s){return s!==""}function Um(s,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Lm(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const bE=/^[ \t]*#include +<([\w\d./]+)>/gm;function Md(s){return s.replace(bE,ME)}const SE=new Map;function ME(s,e){let t=mt[e];if(t===void 0){const n=SE.get(e);if(n!==void 0)t=mt[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return Md(t)}const wE=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Nm(s){return s.replace(wE,EE)}function EE(s,e,t,n){let i="";for(let r=parseInt(e);r<parseInt(t);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function Om(s){let e=`precision ${s.precision} float;
	precision ${s.precision} int;
	precision ${s.precision} sampler2D;
	precision ${s.precision} samplerCube;
	precision ${s.precision} sampler3D;
	precision ${s.precision} sampler2DArray;
	precision ${s.precision} sampler2DShadow;
	precision ${s.precision} samplerCubeShadow;
	precision ${s.precision} sampler2DArrayShadow;
	precision ${s.precision} isampler2D;
	precision ${s.precision} isampler3D;
	precision ${s.precision} isamplerCube;
	precision ${s.precision} isampler2DArray;
	precision ${s.precision} usampler2D;
	precision ${s.precision} usampler3D;
	precision ${s.precision} usamplerCube;
	precision ${s.precision} usampler2DArray;
	`;return s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function TE(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===Bd?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===ha?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===er&&(e="SHADOWMAP_TYPE_VSM"),e}function AE(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case wr:case Hr:e="ENVMAP_TYPE_CUBE";break;case Lo:e="ENVMAP_TYPE_CUBE_UV";break}return e}function CE(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case Hr:e="ENVMAP_MODE_REFRACTION";break}return e}function RE(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case Wa:e="ENVMAP_BLENDING_MULTIPLY";break;case cv:e="ENVMAP_BLENDING_MIX";break;case hv:e="ENVMAP_BLENDING_ADD";break}return e}function PE(s){const e=s.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function IE(s,e,t,n){const i=s.getContext(),r=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=TE(t),c=AE(t),h=CE(t),u=RE(t),d=PE(t),f=_E(t),p=yE(r),v=i.createProgram();let m,g,x=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(la).join(`
`),m.length>0&&(m+=`
`),g=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(la).join(`
`),g.length>0&&(g+=`
`)):(m=[Om(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(la).join(`
`),g=[Om(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+h:"",t.envMap?"#define "+u:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==rr?"#define TONE_MAPPING":"",t.toneMapping!==rr?mt.tonemapping_pars_fragment:"",t.toneMapping!==rr?gE("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",mt.colorspace_pars_fragment,mE("linearToOutputTexel",t.outputColorSpace),vE(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(la).join(`
`)),o=Md(o),o=Um(o,t),o=Lm(o,t),a=Md(a),a=Um(a,t),a=Lm(a,t),o=Nm(o),a=Nm(a),t.isRawShaderMaterial!==!0&&(x=`#version 300 es
`,m=[f,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,g=["#define varying in",t.glslVersion===md?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===md?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);const y=x+m+o,_=x+g+a,E=Pm(i,i.VERTEX_SHADER,y),w=Pm(i,i.FRAGMENT_SHADER,_);i.attachShader(v,E),i.attachShader(v,w),t.index0AttributeName!==void 0?i.bindAttribLocation(v,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(v,0,"position"),i.linkProgram(v);function M(I){if(s.debug.checkShaderErrors){const D=i.getProgramInfoLog(v).trim(),G=i.getShaderInfoLog(E).trim(),H=i.getShaderInfoLog(w).trim();let $=!0,F=!0;if(i.getProgramParameter(v,i.LINK_STATUS)===!1)if($=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(i,v,E,w);else{const Z=Dm(i,E,"vertex"),q=Dm(i,w,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(v,i.VALIDATE_STATUS)+`

Material Name: `+I.name+`
Material Type: `+I.type+`

Program Info Log: `+D+`
`+Z+`
`+q)}else D!==""?console.warn("THREE.WebGLProgram: Program Info Log:",D):(G===""||H==="")&&(F=!1);F&&(I.diagnostics={runnable:$,programLog:D,vertexShader:{log:G,prefix:m},fragmentShader:{log:H,prefix:g}})}i.deleteShader(E),i.deleteShader(w),T=new cc(i,v),S=xE(i,v)}let T;this.getUniforms=function(){return T===void 0&&M(this),T};let S;this.getAttributes=function(){return S===void 0&&M(this),S};let b=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return b===!1&&(b=i.getProgramParameter(v,uE)),b},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(v),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=dE++,this.cacheKey=e,this.usedTimes=1,this.program=v,this.vertexShader=E,this.fragmentShader=w,this}let DE=0;class UE{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new LE(e),t.set(e,n)),n}}class LE{constructor(e){this.id=DE++,this.code=e,this.usedTimes=0}}function NE(s,e,t,n,i,r,o){const a=new gh,l=new UE,c=new Set,h=[],u=i.logarithmicDepthBuffer,d=i.vertexTextures;let f=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function v(S){return c.add(S),S===0?"uv":`uv${S}`}function m(S,b,I,D,G){const H=D.fog,$=G.geometry,F=S.isMeshStandardMaterial?D.environment:null,Z=(S.isMeshStandardMaterial?t:e).get(S.envMap||F),q=Z&&Z.mapping===Lo?Z.image.height:null,j=p[S.type];S.precision!==null&&(f=i.getMaxPrecision(S.precision),f!==S.precision&&console.warn("THREE.WebGLProgram.getParameters:",S.precision,"not supported, using",f,"instead."));const J=$.morphAttributes.position||$.morphAttributes.normal||$.morphAttributes.color,B=J!==void 0?J.length:0;let Y=0;$.morphAttributes.position!==void 0&&(Y=1),$.morphAttributes.normal!==void 0&&(Y=2),$.morphAttributes.color!==void 0&&(Y=3);let K,V,W,Q;if(j){const et=$n[j];K=et.vertexShader,V=et.fragmentShader}else K=S.vertexShader,V=S.fragmentShader,l.update(S),W=l.getVertexShaderID(S),Q=l.getFragmentShaderID(S);const X=s.getRenderTarget(),te=s.state.buffers.depth.getReversed(),ge=G.isInstancedMesh===!0,be=G.isBatchedMesh===!0,we=!!S.map,re=!!S.matcap,me=!!Z,z=!!S.aoMap,Me=!!S.lightMap,de=!!S.bumpMap,Ee=!!S.normalMap,ce=!!S.displacementMap,Ue=!!S.emissiveMap,_e=!!S.metalnessMap,P=!!S.roughnessMap,R=S.anisotropy>0,ee=S.clearcoat>0,ae=S.dispersion>0,le=S.iridescence>0,fe=S.sheen>0,Ae=S.transmission>0,ye=R&&!!S.anisotropyMap,Ce=ee&&!!S.clearcoatMap,He=ee&&!!S.clearcoatNormalMap,Re=ee&&!!S.clearcoatRoughnessMap,ke=le&&!!S.iridescenceMap,Fe=le&&!!S.iridescenceThicknessMap,Ve=fe&&!!S.sheenColorMap,Pe=fe&&!!S.sheenRoughnessMap,ct=!!S.specularMap,Ke=!!S.specularColorMap,bt=!!S.specularIntensityMap,ne=Ae&&!!S.transmissionMap,Te=Ae&&!!S.thicknessMap,he=!!S.gradientMap,Ie=!!S.alphaMap,Ne=S.alphaTest>0,De=!!S.alphaHash,tt=!!S.extensions;let vt=rr;S.toneMapped&&(X===null||X.isXRRenderTarget===!0)&&(vt=s.toneMapping);const at={shaderID:j,shaderType:S.type,shaderName:S.name,vertexShader:K,fragmentShader:V,defines:S.defines,customVertexShaderID:W,customFragmentShaderID:Q,isRawShaderMaterial:S.isRawShaderMaterial===!0,glslVersion:S.glslVersion,precision:f,batching:be,batchingColor:be&&G._colorsTexture!==null,instancing:ge,instancingColor:ge&&G.instanceColor!==null,instancingMorph:ge&&G.morphTexture!==null,supportsVertexTextures:d,outputColorSpace:X===null?s.outputColorSpace:X.isXRRenderTarget===!0?X.texture.colorSpace:ks,alphaToCoverage:!!S.alphaToCoverage,map:we,matcap:re,envMap:me,envMapMode:me&&Z.mapping,envMapCubeUVHeight:q,aoMap:z,lightMap:Me,bumpMap:de,normalMap:Ee,displacementMap:d&&ce,emissiveMap:Ue,normalMapObjectSpace:Ee&&S.normalMapType===Sv,normalMapTangentSpace:Ee&&S.normalMapType===Yr,metalnessMap:_e,roughnessMap:P,anisotropy:R,anisotropyMap:ye,clearcoat:ee,clearcoatMap:Ce,clearcoatNormalMap:He,clearcoatRoughnessMap:Re,dispersion:ae,iridescence:le,iridescenceMap:ke,iridescenceThicknessMap:Fe,sheen:fe,sheenColorMap:Ve,sheenRoughnessMap:Pe,specularMap:ct,specularColorMap:Ke,specularIntensityMap:bt,transmission:Ae,transmissionMap:ne,thicknessMap:Te,gradientMap:he,opaque:S.transparent===!1&&S.blending===Rs&&S.alphaToCoverage===!1,alphaMap:Ie,alphaTest:Ne,alphaHash:De,combine:S.combine,mapUv:we&&v(S.map.channel),aoMapUv:z&&v(S.aoMap.channel),lightMapUv:Me&&v(S.lightMap.channel),bumpMapUv:de&&v(S.bumpMap.channel),normalMapUv:Ee&&v(S.normalMap.channel),displacementMapUv:ce&&v(S.displacementMap.channel),emissiveMapUv:Ue&&v(S.emissiveMap.channel),metalnessMapUv:_e&&v(S.metalnessMap.channel),roughnessMapUv:P&&v(S.roughnessMap.channel),anisotropyMapUv:ye&&v(S.anisotropyMap.channel),clearcoatMapUv:Ce&&v(S.clearcoatMap.channel),clearcoatNormalMapUv:He&&v(S.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Re&&v(S.clearcoatRoughnessMap.channel),iridescenceMapUv:ke&&v(S.iridescenceMap.channel),iridescenceThicknessMapUv:Fe&&v(S.iridescenceThicknessMap.channel),sheenColorMapUv:Ve&&v(S.sheenColorMap.channel),sheenRoughnessMapUv:Pe&&v(S.sheenRoughnessMap.channel),specularMapUv:ct&&v(S.specularMap.channel),specularColorMapUv:Ke&&v(S.specularColorMap.channel),specularIntensityMapUv:bt&&v(S.specularIntensityMap.channel),transmissionMapUv:ne&&v(S.transmissionMap.channel),thicknessMapUv:Te&&v(S.thicknessMap.channel),alphaMapUv:Ie&&v(S.alphaMap.channel),vertexTangents:!!$.attributes.tangent&&(Ee||R),vertexColors:S.vertexColors,vertexAlphas:S.vertexColors===!0&&!!$.attributes.color&&$.attributes.color.itemSize===4,pointsUvs:G.isPoints===!0&&!!$.attributes.uv&&(we||Ie),fog:!!H,useFog:S.fog===!0,fogExp2:!!H&&H.isFogExp2,flatShading:S.flatShading===!0,sizeAttenuation:S.sizeAttenuation===!0,logarithmicDepthBuffer:u,reverseDepthBuffer:te,skinning:G.isSkinnedMesh===!0,morphTargets:$.morphAttributes.position!==void 0,morphNormals:$.morphAttributes.normal!==void 0,morphColors:$.morphAttributes.color!==void 0,morphTargetsCount:B,morphTextureStride:Y,numDirLights:b.directional.length,numPointLights:b.point.length,numSpotLights:b.spot.length,numSpotLightMaps:b.spotLightMap.length,numRectAreaLights:b.rectArea.length,numHemiLights:b.hemi.length,numDirLightShadows:b.directionalShadowMap.length,numPointLightShadows:b.pointShadowMap.length,numSpotLightShadows:b.spotShadowMap.length,numSpotLightShadowsWithMaps:b.numSpotLightShadowsWithMaps,numLightProbes:b.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:S.dithering,shadowMapEnabled:s.shadowMap.enabled&&I.length>0,shadowMapType:s.shadowMap.type,toneMapping:vt,decodeVideoTexture:we&&S.map.isVideoTexture===!0&&It.getTransfer(S.map.colorSpace)===qt,decodeVideoTextureEmissive:Ue&&S.emissiveMap.isVideoTexture===!0&&It.getTransfer(S.emissiveMap.colorSpace)===qt,premultipliedAlpha:S.premultipliedAlpha,doubleSided:S.side===Li,flipSided:S.side===Wn,useDepthPacking:S.depthPacking>=0,depthPacking:S.depthPacking||0,index0AttributeName:S.index0AttributeName,extensionClipCullDistance:tt&&S.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(tt&&S.extensions.multiDraw===!0||be)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:S.customProgramCacheKey()};return at.vertexUv1s=c.has(1),at.vertexUv2s=c.has(2),at.vertexUv3s=c.has(3),c.clear(),at}function g(S){const b=[];if(S.shaderID?b.push(S.shaderID):(b.push(S.customVertexShaderID),b.push(S.customFragmentShaderID)),S.defines!==void 0)for(const I in S.defines)b.push(I),b.push(S.defines[I]);return S.isRawShaderMaterial===!1&&(x(b,S),y(b,S),b.push(s.outputColorSpace)),b.push(S.customProgramCacheKey),b.join()}function x(S,b){S.push(b.precision),S.push(b.outputColorSpace),S.push(b.envMapMode),S.push(b.envMapCubeUVHeight),S.push(b.mapUv),S.push(b.alphaMapUv),S.push(b.lightMapUv),S.push(b.aoMapUv),S.push(b.bumpMapUv),S.push(b.normalMapUv),S.push(b.displacementMapUv),S.push(b.emissiveMapUv),S.push(b.metalnessMapUv),S.push(b.roughnessMapUv),S.push(b.anisotropyMapUv),S.push(b.clearcoatMapUv),S.push(b.clearcoatNormalMapUv),S.push(b.clearcoatRoughnessMapUv),S.push(b.iridescenceMapUv),S.push(b.iridescenceThicknessMapUv),S.push(b.sheenColorMapUv),S.push(b.sheenRoughnessMapUv),S.push(b.specularMapUv),S.push(b.specularColorMapUv),S.push(b.specularIntensityMapUv),S.push(b.transmissionMapUv),S.push(b.thicknessMapUv),S.push(b.combine),S.push(b.fogExp2),S.push(b.sizeAttenuation),S.push(b.morphTargetsCount),S.push(b.morphAttributeCount),S.push(b.numDirLights),S.push(b.numPointLights),S.push(b.numSpotLights),S.push(b.numSpotLightMaps),S.push(b.numHemiLights),S.push(b.numRectAreaLights),S.push(b.numDirLightShadows),S.push(b.numPointLightShadows),S.push(b.numSpotLightShadows),S.push(b.numSpotLightShadowsWithMaps),S.push(b.numLightProbes),S.push(b.shadowMapType),S.push(b.toneMapping),S.push(b.numClippingPlanes),S.push(b.numClipIntersection),S.push(b.depthPacking)}function y(S,b){a.disableAll(),b.supportsVertexTextures&&a.enable(0),b.instancing&&a.enable(1),b.instancingColor&&a.enable(2),b.instancingMorph&&a.enable(3),b.matcap&&a.enable(4),b.envMap&&a.enable(5),b.normalMapObjectSpace&&a.enable(6),b.normalMapTangentSpace&&a.enable(7),b.clearcoat&&a.enable(8),b.iridescence&&a.enable(9),b.alphaTest&&a.enable(10),b.vertexColors&&a.enable(11),b.vertexAlphas&&a.enable(12),b.vertexUv1s&&a.enable(13),b.vertexUv2s&&a.enable(14),b.vertexUv3s&&a.enable(15),b.vertexTangents&&a.enable(16),b.anisotropy&&a.enable(17),b.alphaHash&&a.enable(18),b.batching&&a.enable(19),b.dispersion&&a.enable(20),b.batchingColor&&a.enable(21),S.push(a.mask),a.disableAll(),b.fog&&a.enable(0),b.useFog&&a.enable(1),b.flatShading&&a.enable(2),b.logarithmicDepthBuffer&&a.enable(3),b.reverseDepthBuffer&&a.enable(4),b.skinning&&a.enable(5),b.morphTargets&&a.enable(6),b.morphNormals&&a.enable(7),b.morphColors&&a.enable(8),b.premultipliedAlpha&&a.enable(9),b.shadowMapEnabled&&a.enable(10),b.doubleSided&&a.enable(11),b.flipSided&&a.enable(12),b.useDepthPacking&&a.enable(13),b.dithering&&a.enable(14),b.transmission&&a.enable(15),b.sheen&&a.enable(16),b.opaque&&a.enable(17),b.pointsUvs&&a.enable(18),b.decodeVideoTexture&&a.enable(19),b.decodeVideoTextureEmissive&&a.enable(20),b.alphaToCoverage&&a.enable(21),S.push(a.mask)}function _(S){const b=p[S.type];let I;if(b){const D=$n[b];I=qa.clone(D.uniforms)}else I=S.uniforms;return I}function E(S,b){let I;for(let D=0,G=h.length;D<G;D++){const H=h[D];if(H.cacheKey===b){I=H,++I.usedTimes;break}}return I===void 0&&(I=new IE(s,b,S,r),h.push(I)),I}function w(S){if(--S.usedTimes===0){const b=h.indexOf(S);h[b]=h[h.length-1],h.pop(),S.destroy()}}function M(S){l.remove(S)}function T(){l.dispose()}return{getParameters:m,getProgramCacheKey:g,getUniforms:_,acquireProgram:E,releaseProgram:w,releaseShaderCache:M,programs:h,dispose:T}}function OE(){let s=new WeakMap;function e(o){return s.has(o)}function t(o){let a=s.get(o);return a===void 0&&(a={},s.set(o,a)),a}function n(o){s.delete(o)}function i(o,a,l){s.get(o)[a]=l}function r(){s=new WeakMap}return{has:e,get:t,remove:n,update:i,dispose:r}}function FE(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}function Fm(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function km(){const s=[];let e=0;const t=[],n=[],i=[];function r(){e=0,t.length=0,n.length=0,i.length=0}function o(u,d,f,p,v,m){let g=s[e];return g===void 0?(g={id:u.id,object:u,geometry:d,material:f,groupOrder:p,renderOrder:u.renderOrder,z:v,group:m},s[e]=g):(g.id=u.id,g.object=u,g.geometry=d,g.material=f,g.groupOrder=p,g.renderOrder=u.renderOrder,g.z=v,g.group=m),e++,g}function a(u,d,f,p,v,m){const g=o(u,d,f,p,v,m);f.transmission>0?n.push(g):f.transparent===!0?i.push(g):t.push(g)}function l(u,d,f,p,v,m){const g=o(u,d,f,p,v,m);f.transmission>0?n.unshift(g):f.transparent===!0?i.unshift(g):t.unshift(g)}function c(u,d){t.length>1&&t.sort(u||FE),n.length>1&&n.sort(d||Fm),i.length>1&&i.sort(d||Fm)}function h(){for(let u=e,d=s.length;u<d;u++){const f=s[u];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:t,transmissive:n,transparent:i,init:r,push:a,unshift:l,finish:h,sort:c}}function kE(){let s=new WeakMap;function e(n,i){const r=s.get(n);let o;return r===void 0?(o=new km,s.set(n,[o])):i>=r.length?(o=new km,r.push(o)):o=r[i],o}function t(){s=new WeakMap}return{get:e,dispose:t}}function BE(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new N,color:new ze};break;case"SpotLight":t={position:new N,direction:new N,color:new ze,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new N,color:new ze,distance:0,decay:0};break;case"HemisphereLight":t={direction:new N,skyColor:new ze,groundColor:new ze};break;case"RectAreaLight":t={color:new ze,position:new N,halfWidth:new N,halfHeight:new N};break}return s[e.id]=t,t}}}function zE(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ve};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ve};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ve,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=t,t}}}let VE=0;function GE(s,e){return(e.castShadow?2:0)-(s.castShadow?2:0)+(e.map?1:0)-(s.map?1:0)}function HE(s){const e=new BE,t=zE(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let c=0;c<9;c++)n.probe.push(new N);const i=new N,r=new rt,o=new rt;function a(c){let h=0,u=0,d=0;for(let S=0;S<9;S++)n.probe[S].set(0,0,0);let f=0,p=0,v=0,m=0,g=0,x=0,y=0,_=0,E=0,w=0,M=0;c.sort(GE);for(let S=0,b=c.length;S<b;S++){const I=c[S],D=I.color,G=I.intensity,H=I.distance,$=I.shadow&&I.shadow.map?I.shadow.map.texture:null;if(I.isAmbientLight)h+=D.r*G,u+=D.g*G,d+=D.b*G;else if(I.isLightProbe){for(let F=0;F<9;F++)n.probe[F].addScaledVector(I.sh.coefficients[F],G);M++}else if(I.isDirectionalLight){const F=e.get(I);if(F.color.copy(I.color).multiplyScalar(I.intensity),I.castShadow){const Z=I.shadow,q=t.get(I);q.shadowIntensity=Z.intensity,q.shadowBias=Z.bias,q.shadowNormalBias=Z.normalBias,q.shadowRadius=Z.radius,q.shadowMapSize=Z.mapSize,n.directionalShadow[f]=q,n.directionalShadowMap[f]=$,n.directionalShadowMatrix[f]=I.shadow.matrix,x++}n.directional[f]=F,f++}else if(I.isSpotLight){const F=e.get(I);F.position.setFromMatrixPosition(I.matrixWorld),F.color.copy(D).multiplyScalar(G),F.distance=H,F.coneCos=Math.cos(I.angle),F.penumbraCos=Math.cos(I.angle*(1-I.penumbra)),F.decay=I.decay,n.spot[v]=F;const Z=I.shadow;if(I.map&&(n.spotLightMap[E]=I.map,E++,Z.updateMatrices(I),I.castShadow&&w++),n.spotLightMatrix[v]=Z.matrix,I.castShadow){const q=t.get(I);q.shadowIntensity=Z.intensity,q.shadowBias=Z.bias,q.shadowNormalBias=Z.normalBias,q.shadowRadius=Z.radius,q.shadowMapSize=Z.mapSize,n.spotShadow[v]=q,n.spotShadowMap[v]=$,_++}v++}else if(I.isRectAreaLight){const F=e.get(I);F.color.copy(D).multiplyScalar(G),F.halfWidth.set(I.width*.5,0,0),F.halfHeight.set(0,I.height*.5,0),n.rectArea[m]=F,m++}else if(I.isPointLight){const F=e.get(I);if(F.color.copy(I.color).multiplyScalar(I.intensity),F.distance=I.distance,F.decay=I.decay,I.castShadow){const Z=I.shadow,q=t.get(I);q.shadowIntensity=Z.intensity,q.shadowBias=Z.bias,q.shadowNormalBias=Z.normalBias,q.shadowRadius=Z.radius,q.shadowMapSize=Z.mapSize,q.shadowCameraNear=Z.camera.near,q.shadowCameraFar=Z.camera.far,n.pointShadow[p]=q,n.pointShadowMap[p]=$,n.pointShadowMatrix[p]=I.shadow.matrix,y++}n.point[p]=F,p++}else if(I.isHemisphereLight){const F=e.get(I);F.skyColor.copy(I.color).multiplyScalar(G),F.groundColor.copy(I.groundColor).multiplyScalar(G),n.hemi[g]=F,g++}}m>0&&(s.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=We.LTC_FLOAT_1,n.rectAreaLTC2=We.LTC_FLOAT_2):(n.rectAreaLTC1=We.LTC_HALF_1,n.rectAreaLTC2=We.LTC_HALF_2)),n.ambient[0]=h,n.ambient[1]=u,n.ambient[2]=d;const T=n.hash;(T.directionalLength!==f||T.pointLength!==p||T.spotLength!==v||T.rectAreaLength!==m||T.hemiLength!==g||T.numDirectionalShadows!==x||T.numPointShadows!==y||T.numSpotShadows!==_||T.numSpotMaps!==E||T.numLightProbes!==M)&&(n.directional.length=f,n.spot.length=v,n.rectArea.length=m,n.point.length=p,n.hemi.length=g,n.directionalShadow.length=x,n.directionalShadowMap.length=x,n.pointShadow.length=y,n.pointShadowMap.length=y,n.spotShadow.length=_,n.spotShadowMap.length=_,n.directionalShadowMatrix.length=x,n.pointShadowMatrix.length=y,n.spotLightMatrix.length=_+E-w,n.spotLightMap.length=E,n.numSpotLightShadowsWithMaps=w,n.numLightProbes=M,T.directionalLength=f,T.pointLength=p,T.spotLength=v,T.rectAreaLength=m,T.hemiLength=g,T.numDirectionalShadows=x,T.numPointShadows=y,T.numSpotShadows=_,T.numSpotMaps=E,T.numLightProbes=M,n.version=VE++)}function l(c,h){let u=0,d=0,f=0,p=0,v=0;const m=h.matrixWorldInverse;for(let g=0,x=c.length;g<x;g++){const y=c[g];if(y.isDirectionalLight){const _=n.directional[u];_.direction.setFromMatrixPosition(y.matrixWorld),i.setFromMatrixPosition(y.target.matrixWorld),_.direction.sub(i),_.direction.transformDirection(m),u++}else if(y.isSpotLight){const _=n.spot[f];_.position.setFromMatrixPosition(y.matrixWorld),_.position.applyMatrix4(m),_.direction.setFromMatrixPosition(y.matrixWorld),i.setFromMatrixPosition(y.target.matrixWorld),_.direction.sub(i),_.direction.transformDirection(m),f++}else if(y.isRectAreaLight){const _=n.rectArea[p];_.position.setFromMatrixPosition(y.matrixWorld),_.position.applyMatrix4(m),o.identity(),r.copy(y.matrixWorld),r.premultiply(m),o.extractRotation(r),_.halfWidth.set(y.width*.5,0,0),_.halfHeight.set(0,y.height*.5,0),_.halfWidth.applyMatrix4(o),_.halfHeight.applyMatrix4(o),p++}else if(y.isPointLight){const _=n.point[d];_.position.setFromMatrixPosition(y.matrixWorld),_.position.applyMatrix4(m),d++}else if(y.isHemisphereLight){const _=n.hemi[v];_.direction.setFromMatrixPosition(y.matrixWorld),_.direction.transformDirection(m),v++}}}return{setup:a,setupView:l,state:n}}function Bm(s){const e=new HE(s),t=[],n=[];function i(h){c.camera=h,t.length=0,n.length=0}function r(h){t.push(h)}function o(h){n.push(h)}function a(){e.setup(t)}function l(h){e.setupView(t,h)}const c={lightsArray:t,shadowsArray:n,camera:null,lights:e,transmissionRenderTarget:{}};return{init:i,state:c,setupLights:a,setupLightsView:l,pushLight:r,pushShadow:o}}function WE(s){let e=new WeakMap;function t(i,r=0){const o=e.get(i);let a;return o===void 0?(a=new Bm(s),e.set(i,[a])):r>=o.length?(a=new Bm(s),o.push(a)):a=o[r],a}function n(){e=new WeakMap}return{get:t,dispose:n}}const XE=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,YE=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function qE(s,e,t){let n=new Ka;const i=new ve,r=new ve,o=new Tt,a=new el({depthPacking:Kd}),l=new kh,c={},h=t.maxTextureSize,u={[ar]:Wn,[Wn]:ar,[Li]:Li},d=new mi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ve},radius:{value:4}},vertexShader:XE,fragmentShader:YE}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const p=new yt;p.setAttribute("position",new Et(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const v=new zt(p,d),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Bd;let g=this.type;this.render=function(w,M,T){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||w.length===0)return;const S=s.getRenderTarget(),b=s.getActiveCubeFace(),I=s.getActiveMipmapLevel(),D=s.state;D.setBlending(Sr),D.buffers.color.setClear(1,1,1,1),D.buffers.depth.setTest(!0),D.setScissorTest(!1);const G=g!==er&&this.type===er,H=g===er&&this.type!==er;for(let $=0,F=w.length;$<F;$++){const Z=w[$],q=Z.shadow;if(q===void 0){console.warn("THREE.WebGLShadowMap:",Z,"has no shadow.");continue}if(q.autoUpdate===!1&&q.needsUpdate===!1)continue;i.copy(q.mapSize);const j=q.getFrameExtents();if(i.multiply(j),r.copy(q.mapSize),(i.x>h||i.y>h)&&(i.x>h&&(r.x=Math.floor(h/j.x),i.x=r.x*j.x,q.mapSize.x=r.x),i.y>h&&(r.y=Math.floor(h/j.y),i.y=r.y*j.y,q.mapSize.y=r.y)),q.map===null||G===!0||H===!0){const B=this.type!==er?{minFilter:On,magFilter:On}:{};q.map!==null&&q.map.dispose(),q.map=new Ni(i.x,i.y,B),q.map.texture.name=Z.name+".shadowMap",q.camera.updateProjectionMatrix()}s.setRenderTarget(q.map),s.clear();const J=q.getViewportCount();for(let B=0;B<J;B++){const Y=q.getViewport(B);o.set(r.x*Y.x,r.y*Y.y,r.x*Y.z,r.y*Y.w),D.viewport(o),q.updateMatrices(Z,B),n=q.getFrustum(),_(M,T,q.camera,Z,this.type)}q.isPointLightShadow!==!0&&this.type===er&&x(q,T),q.needsUpdate=!1}g=this.type,m.needsUpdate=!1,s.setRenderTarget(S,b,I)};function x(w,M){const T=e.update(v);d.defines.VSM_SAMPLES!==w.blurSamples&&(d.defines.VSM_SAMPLES=w.blurSamples,f.defines.VSM_SAMPLES=w.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),w.mapPass===null&&(w.mapPass=new Ni(i.x,i.y)),d.uniforms.shadow_pass.value=w.map.texture,d.uniforms.resolution.value=w.mapSize,d.uniforms.radius.value=w.radius,s.setRenderTarget(w.mapPass),s.clear(),s.renderBufferDirect(M,null,T,d,v,null),f.uniforms.shadow_pass.value=w.mapPass.texture,f.uniforms.resolution.value=w.mapSize,f.uniforms.radius.value=w.radius,s.setRenderTarget(w.map),s.clear(),s.renderBufferDirect(M,null,T,f,v,null)}function y(w,M,T,S){let b=null;const I=T.isPointLight===!0?w.customDistanceMaterial:w.customDepthMaterial;if(I!==void 0)b=I;else if(b=T.isPointLight===!0?l:a,s.localClippingEnabled&&M.clipShadows===!0&&Array.isArray(M.clippingPlanes)&&M.clippingPlanes.length!==0||M.displacementMap&&M.displacementScale!==0||M.alphaMap&&M.alphaTest>0||M.map&&M.alphaTest>0){const D=b.uuid,G=M.uuid;let H=c[D];H===void 0&&(H={},c[D]=H);let $=H[G];$===void 0&&($=b.clone(),H[G]=$,M.addEventListener("dispose",E)),b=$}if(b.visible=M.visible,b.wireframe=M.wireframe,S===er?b.side=M.shadowSide!==null?M.shadowSide:M.side:b.side=M.shadowSide!==null?M.shadowSide:u[M.side],b.alphaMap=M.alphaMap,b.alphaTest=M.alphaTest,b.map=M.map,b.clipShadows=M.clipShadows,b.clippingPlanes=M.clippingPlanes,b.clipIntersection=M.clipIntersection,b.displacementMap=M.displacementMap,b.displacementScale=M.displacementScale,b.displacementBias=M.displacementBias,b.wireframeLinewidth=M.wireframeLinewidth,b.linewidth=M.linewidth,T.isPointLight===!0&&b.isMeshDistanceMaterial===!0){const D=s.properties.get(b);D.light=T}return b}function _(w,M,T,S,b){if(w.visible===!1)return;if(w.layers.test(M.layers)&&(w.isMesh||w.isLine||w.isPoints)&&(w.castShadow||w.receiveShadow&&b===er)&&(!w.frustumCulled||n.intersectsObject(w))){w.modelViewMatrix.multiplyMatrices(T.matrixWorldInverse,w.matrixWorld);const G=e.update(w),H=w.material;if(Array.isArray(H)){const $=G.groups;for(let F=0,Z=$.length;F<Z;F++){const q=$[F],j=H[q.materialIndex];if(j&&j.visible){const J=y(w,j,S,b);w.onBeforeShadow(s,w,M,T,G,J,q),s.renderBufferDirect(T,null,G,J,w,q),w.onAfterShadow(s,w,M,T,G,J,q)}}}else if(H.visible){const $=y(w,H,S,b);w.onBeforeShadow(s,w,M,T,G,$,null),s.renderBufferDirect(T,null,G,$,w,null),w.onAfterShadow(s,w,M,T,G,$,null)}}const D=w.children;for(let G=0,H=D.length;G<H;G++)_(D[G],M,T,S,b)}function E(w){w.target.removeEventListener("dispose",E);for(const T in c){const S=c[T],b=w.target.uuid;b in S&&(S[b].dispose(),delete S[b])}}}const jE={[pc]:mc,[gc]:yc,[vc]:xc,[Ns]:_c,[mc]:pc,[yc]:gc,[xc]:vc,[_c]:Ns};function ZE(s,e){function t(){let ne=!1;const Te=new Tt;let he=null;const Ie=new Tt(0,0,0,0);return{setMask:function(Ne){he!==Ne&&!ne&&(s.colorMask(Ne,Ne,Ne,Ne),he=Ne)},setLocked:function(Ne){ne=Ne},setClear:function(Ne,De,tt,vt,at){at===!0&&(Ne*=vt,De*=vt,tt*=vt),Te.set(Ne,De,tt,vt),Ie.equals(Te)===!1&&(s.clearColor(Ne,De,tt,vt),Ie.copy(Te))},reset:function(){ne=!1,he=null,Ie.set(-1,0,0,0)}}}function n(){let ne=!1,Te=!1,he=null,Ie=null,Ne=null;return{setReversed:function(De){if(Te!==De){const tt=e.get("EXT_clip_control");Te?tt.clipControlEXT(tt.LOWER_LEFT_EXT,tt.ZERO_TO_ONE_EXT):tt.clipControlEXT(tt.LOWER_LEFT_EXT,tt.NEGATIVE_ONE_TO_ONE_EXT);const vt=Ne;Ne=null,this.setClear(vt)}Te=De},getReversed:function(){return Te},setTest:function(De){De?X(s.DEPTH_TEST):te(s.DEPTH_TEST)},setMask:function(De){he!==De&&!ne&&(s.depthMask(De),he=De)},setFunc:function(De){if(Te&&(De=jE[De]),Ie!==De){switch(De){case pc:s.depthFunc(s.NEVER);break;case mc:s.depthFunc(s.ALWAYS);break;case gc:s.depthFunc(s.LESS);break;case Ns:s.depthFunc(s.LEQUAL);break;case vc:s.depthFunc(s.EQUAL);break;case _c:s.depthFunc(s.GEQUAL);break;case yc:s.depthFunc(s.GREATER);break;case xc:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}Ie=De}},setLocked:function(De){ne=De},setClear:function(De){Ne!==De&&(Te&&(De=1-De),s.clearDepth(De),Ne=De)},reset:function(){ne=!1,he=null,Ie=null,Ne=null,Te=!1}}}function i(){let ne=!1,Te=null,he=null,Ie=null,Ne=null,De=null,tt=null,vt=null,at=null;return{setTest:function(et){ne||(et?X(s.STENCIL_TEST):te(s.STENCIL_TEST))},setMask:function(et){Te!==et&&!ne&&(s.stencilMask(et),Te=et)},setFunc:function(et,Ht,jt){(he!==et||Ie!==Ht||Ne!==jt)&&(s.stencilFunc(et,Ht,jt),he=et,Ie=Ht,Ne=jt)},setOp:function(et,Ht,jt){(De!==et||tt!==Ht||vt!==jt)&&(s.stencilOp(et,Ht,jt),De=et,tt=Ht,vt=jt)},setLocked:function(et){ne=et},setClear:function(et){at!==et&&(s.clearStencil(et),at=et)},reset:function(){ne=!1,Te=null,he=null,Ie=null,Ne=null,De=null,tt=null,vt=null,at=null}}}const r=new t,o=new n,a=new i,l=new WeakMap,c=new WeakMap;let h={},u={},d=new WeakMap,f=[],p=null,v=!1,m=null,g=null,x=null,y=null,_=null,E=null,w=null,M=new ze(0,0,0),T=0,S=!1,b=null,I=null,D=null,G=null,H=null;const $=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let F=!1,Z=0;const q=s.getParameter(s.VERSION);q.indexOf("WebGL")!==-1?(Z=parseFloat(/^WebGL (\d)/.exec(q)[1]),F=Z>=1):q.indexOf("OpenGL ES")!==-1&&(Z=parseFloat(/^OpenGL ES (\d)/.exec(q)[1]),F=Z>=2);let j=null,J={};const B=s.getParameter(s.SCISSOR_BOX),Y=s.getParameter(s.VIEWPORT),K=new Tt().fromArray(B),V=new Tt().fromArray(Y);function W(ne,Te,he,Ie){const Ne=new Uint8Array(4),De=s.createTexture();s.bindTexture(ne,De),s.texParameteri(ne,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(ne,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let tt=0;tt<he;tt++)ne===s.TEXTURE_3D||ne===s.TEXTURE_2D_ARRAY?s.texImage3D(Te,0,s.RGBA,1,1,Ie,0,s.RGBA,s.UNSIGNED_BYTE,Ne):s.texImage2D(Te+tt,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,Ne);return De}const Q={};Q[s.TEXTURE_2D]=W(s.TEXTURE_2D,s.TEXTURE_2D,1),Q[s.TEXTURE_CUBE_MAP]=W(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),Q[s.TEXTURE_2D_ARRAY]=W(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),Q[s.TEXTURE_3D]=W(s.TEXTURE_3D,s.TEXTURE_3D,1,1),r.setClear(0,0,0,1),o.setClear(1),a.setClear(0),X(s.DEPTH_TEST),o.setFunc(Ns),de(!1),Ee(cd),X(s.CULL_FACE),z(Sr);function X(ne){h[ne]!==!0&&(s.enable(ne),h[ne]=!0)}function te(ne){h[ne]!==!1&&(s.disable(ne),h[ne]=!1)}function ge(ne,Te){return u[ne]!==Te?(s.bindFramebuffer(ne,Te),u[ne]=Te,ne===s.DRAW_FRAMEBUFFER&&(u[s.FRAMEBUFFER]=Te),ne===s.FRAMEBUFFER&&(u[s.DRAW_FRAMEBUFFER]=Te),!0):!1}function be(ne,Te){let he=f,Ie=!1;if(ne){he=d.get(Te),he===void 0&&(he=[],d.set(Te,he));const Ne=ne.textures;if(he.length!==Ne.length||he[0]!==s.COLOR_ATTACHMENT0){for(let De=0,tt=Ne.length;De<tt;De++)he[De]=s.COLOR_ATTACHMENT0+De;he.length=Ne.length,Ie=!0}}else he[0]!==s.BACK&&(he[0]=s.BACK,Ie=!0);Ie&&s.drawBuffers(he)}function we(ne){return p!==ne?(s.useProgram(ne),p=ne,!0):!1}const re={[zr]:s.FUNC_ADD,[Yg]:s.FUNC_SUBTRACT,[qg]:s.FUNC_REVERSE_SUBTRACT};re[jg]=s.MIN,re[Zg]=s.MAX;const me={[Jg]:s.ZERO,[Kg]:s.ONE,[Qg]:s.SRC_COLOR,[dc]:s.SRC_ALPHA,[rv]:s.SRC_ALPHA_SATURATE,[nv]:s.DST_COLOR,[ev]:s.DST_ALPHA,[$g]:s.ONE_MINUS_SRC_COLOR,[fc]:s.ONE_MINUS_SRC_ALPHA,[iv]:s.ONE_MINUS_DST_COLOR,[tv]:s.ONE_MINUS_DST_ALPHA,[sv]:s.CONSTANT_COLOR,[ov]:s.ONE_MINUS_CONSTANT_COLOR,[av]:s.CONSTANT_ALPHA,[lv]:s.ONE_MINUS_CONSTANT_ALPHA};function z(ne,Te,he,Ie,Ne,De,tt,vt,at,et){if(ne===Sr){v===!0&&(te(s.BLEND),v=!1);return}if(v===!1&&(X(s.BLEND),v=!0),ne!==Xg){if(ne!==m||et!==S){if((g!==zr||_!==zr)&&(s.blendEquation(s.FUNC_ADD),g=zr,_=zr),et)switch(ne){case Rs:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case hd:s.blendFunc(s.ONE,s.ONE);break;case ud:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case dd:s.blendFuncSeparate(s.ZERO,s.SRC_COLOR,s.ZERO,s.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",ne);break}else switch(ne){case Rs:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case hd:s.blendFunc(s.SRC_ALPHA,s.ONE);break;case ud:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case dd:s.blendFunc(s.ZERO,s.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",ne);break}x=null,y=null,E=null,w=null,M.set(0,0,0),T=0,m=ne,S=et}return}Ne=Ne||Te,De=De||he,tt=tt||Ie,(Te!==g||Ne!==_)&&(s.blendEquationSeparate(re[Te],re[Ne]),g=Te,_=Ne),(he!==x||Ie!==y||De!==E||tt!==w)&&(s.blendFuncSeparate(me[he],me[Ie],me[De],me[tt]),x=he,y=Ie,E=De,w=tt),(vt.equals(M)===!1||at!==T)&&(s.blendColor(vt.r,vt.g,vt.b,at),M.copy(vt),T=at),m=ne,S=!1}function Me(ne,Te){ne.side===Li?te(s.CULL_FACE):X(s.CULL_FACE);let he=ne.side===Wn;Te&&(he=!he),de(he),ne.blending===Rs&&ne.transparent===!1?z(Sr):z(ne.blending,ne.blendEquation,ne.blendSrc,ne.blendDst,ne.blendEquationAlpha,ne.blendSrcAlpha,ne.blendDstAlpha,ne.blendColor,ne.blendAlpha,ne.premultipliedAlpha),o.setFunc(ne.depthFunc),o.setTest(ne.depthTest),o.setMask(ne.depthWrite),r.setMask(ne.colorWrite);const Ie=ne.stencilWrite;a.setTest(Ie),Ie&&(a.setMask(ne.stencilWriteMask),a.setFunc(ne.stencilFunc,ne.stencilRef,ne.stencilFuncMask),a.setOp(ne.stencilFail,ne.stencilZFail,ne.stencilZPass)),Ue(ne.polygonOffset,ne.polygonOffsetFactor,ne.polygonOffsetUnits),ne.alphaToCoverage===!0?X(s.SAMPLE_ALPHA_TO_COVERAGE):te(s.SAMPLE_ALPHA_TO_COVERAGE)}function de(ne){b!==ne&&(ne?s.frontFace(s.CW):s.frontFace(s.CCW),b=ne)}function Ee(ne){ne!==Hg?(X(s.CULL_FACE),ne!==I&&(ne===cd?s.cullFace(s.BACK):ne===Wg?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):te(s.CULL_FACE),I=ne}function ce(ne){ne!==D&&(F&&s.lineWidth(ne),D=ne)}function Ue(ne,Te,he){ne?(X(s.POLYGON_OFFSET_FILL),(G!==Te||H!==he)&&(s.polygonOffset(Te,he),G=Te,H=he)):te(s.POLYGON_OFFSET_FILL)}function _e(ne){ne?X(s.SCISSOR_TEST):te(s.SCISSOR_TEST)}function P(ne){ne===void 0&&(ne=s.TEXTURE0+$-1),j!==ne&&(s.activeTexture(ne),j=ne)}function R(ne,Te,he){he===void 0&&(j===null?he=s.TEXTURE0+$-1:he=j);let Ie=J[he];Ie===void 0&&(Ie={type:void 0,texture:void 0},J[he]=Ie),(Ie.type!==ne||Ie.texture!==Te)&&(j!==he&&(s.activeTexture(he),j=he),s.bindTexture(ne,Te||Q[ne]),Ie.type=ne,Ie.texture=Te)}function ee(){const ne=J[j];ne!==void 0&&ne.type!==void 0&&(s.bindTexture(ne.type,null),ne.type=void 0,ne.texture=void 0)}function ae(){try{s.compressedTexImage2D.apply(s,arguments)}catch(ne){console.error("THREE.WebGLState:",ne)}}function le(){try{s.compressedTexImage3D.apply(s,arguments)}catch(ne){console.error("THREE.WebGLState:",ne)}}function fe(){try{s.texSubImage2D.apply(s,arguments)}catch(ne){console.error("THREE.WebGLState:",ne)}}function Ae(){try{s.texSubImage3D.apply(s,arguments)}catch(ne){console.error("THREE.WebGLState:",ne)}}function ye(){try{s.compressedTexSubImage2D.apply(s,arguments)}catch(ne){console.error("THREE.WebGLState:",ne)}}function Ce(){try{s.compressedTexSubImage3D.apply(s,arguments)}catch(ne){console.error("THREE.WebGLState:",ne)}}function He(){try{s.texStorage2D.apply(s,arguments)}catch(ne){console.error("THREE.WebGLState:",ne)}}function Re(){try{s.texStorage3D.apply(s,arguments)}catch(ne){console.error("THREE.WebGLState:",ne)}}function ke(){try{s.texImage2D.apply(s,arguments)}catch(ne){console.error("THREE.WebGLState:",ne)}}function Fe(){try{s.texImage3D.apply(s,arguments)}catch(ne){console.error("THREE.WebGLState:",ne)}}function Ve(ne){K.equals(ne)===!1&&(s.scissor(ne.x,ne.y,ne.z,ne.w),K.copy(ne))}function Pe(ne){V.equals(ne)===!1&&(s.viewport(ne.x,ne.y,ne.z,ne.w),V.copy(ne))}function ct(ne,Te){let he=c.get(Te);he===void 0&&(he=new WeakMap,c.set(Te,he));let Ie=he.get(ne);Ie===void 0&&(Ie=s.getUniformBlockIndex(Te,ne.name),he.set(ne,Ie))}function Ke(ne,Te){const Ie=c.get(Te).get(ne);l.get(Te)!==Ie&&(s.uniformBlockBinding(Te,Ie,ne.__bindingPointIndex),l.set(Te,Ie))}function bt(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.blendColor(0,0,0,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),o.setReversed(!1),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),h={},j=null,J={},u={},d=new WeakMap,f=[],p=null,v=!1,m=null,g=null,x=null,y=null,_=null,E=null,w=null,M=new ze(0,0,0),T=0,S=!1,b=null,I=null,D=null,G=null,H=null,K.set(0,0,s.canvas.width,s.canvas.height),V.set(0,0,s.canvas.width,s.canvas.height),r.reset(),o.reset(),a.reset()}return{buffers:{color:r,depth:o,stencil:a},enable:X,disable:te,bindFramebuffer:ge,drawBuffers:be,useProgram:we,setBlending:z,setMaterial:Me,setFlipSided:de,setCullFace:Ee,setLineWidth:ce,setPolygonOffset:Ue,setScissorTest:_e,activeTexture:P,bindTexture:R,unbindTexture:ee,compressedTexImage2D:ae,compressedTexImage3D:le,texImage2D:ke,texImage3D:Fe,updateUBOMapping:ct,uniformBlockBinding:Ke,texStorage2D:He,texStorage3D:Re,texSubImage2D:fe,texSubImage3D:Ae,compressedTexSubImage2D:ye,compressedTexSubImage3D:Ce,scissor:Ve,viewport:Pe,reset:bt}}function JE(s,e,t,n,i,r,o){const a=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),c=new ve,h=new WeakMap;let u;const d=new WeakMap;let f=!1;try{f=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function p(P,R){return f?new OffscreenCanvas(P,R):Ia("canvas")}function v(P,R,ee){let ae=1;const le=_e(P);if((le.width>ee||le.height>ee)&&(ae=ee/Math.max(le.width,le.height)),ae<1)if(typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&P instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&P instanceof ImageBitmap||typeof VideoFrame<"u"&&P instanceof VideoFrame){const fe=Math.floor(ae*le.width),Ae=Math.floor(ae*le.height);u===void 0&&(u=p(fe,Ae));const ye=R?p(fe,Ae):u;return ye.width=fe,ye.height=Ae,ye.getContext("2d").drawImage(P,0,0,fe,Ae),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+le.width+"x"+le.height+") to ("+fe+"x"+Ae+")."),ye}else return"data"in P&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+le.width+"x"+le.height+")."),P;return P}function m(P){return P.generateMipmaps}function g(P){s.generateMipmap(P)}function x(P){return P.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:P.isWebGL3DRenderTarget?s.TEXTURE_3D:P.isWebGLArrayRenderTarget||P.isCompressedArrayTexture?s.TEXTURE_2D_ARRAY:s.TEXTURE_2D}function y(P,R,ee,ae,le=!1){if(P!==null){if(s[P]!==void 0)return s[P];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+P+"'")}let fe=R;if(R===s.RED&&(ee===s.FLOAT&&(fe=s.R32F),ee===s.HALF_FLOAT&&(fe=s.R16F),ee===s.UNSIGNED_BYTE&&(fe=s.R8)),R===s.RED_INTEGER&&(ee===s.UNSIGNED_BYTE&&(fe=s.R8UI),ee===s.UNSIGNED_SHORT&&(fe=s.R16UI),ee===s.UNSIGNED_INT&&(fe=s.R32UI),ee===s.BYTE&&(fe=s.R8I),ee===s.SHORT&&(fe=s.R16I),ee===s.INT&&(fe=s.R32I)),R===s.RG&&(ee===s.FLOAT&&(fe=s.RG32F),ee===s.HALF_FLOAT&&(fe=s.RG16F),ee===s.UNSIGNED_BYTE&&(fe=s.RG8)),R===s.RG_INTEGER&&(ee===s.UNSIGNED_BYTE&&(fe=s.RG8UI),ee===s.UNSIGNED_SHORT&&(fe=s.RG16UI),ee===s.UNSIGNED_INT&&(fe=s.RG32UI),ee===s.BYTE&&(fe=s.RG8I),ee===s.SHORT&&(fe=s.RG16I),ee===s.INT&&(fe=s.RG32I)),R===s.RGB_INTEGER&&(ee===s.UNSIGNED_BYTE&&(fe=s.RGB8UI),ee===s.UNSIGNED_SHORT&&(fe=s.RGB16UI),ee===s.UNSIGNED_INT&&(fe=s.RGB32UI),ee===s.BYTE&&(fe=s.RGB8I),ee===s.SHORT&&(fe=s.RGB16I),ee===s.INT&&(fe=s.RGB32I)),R===s.RGBA_INTEGER&&(ee===s.UNSIGNED_BYTE&&(fe=s.RGBA8UI),ee===s.UNSIGNED_SHORT&&(fe=s.RGBA16UI),ee===s.UNSIGNED_INT&&(fe=s.RGBA32UI),ee===s.BYTE&&(fe=s.RGBA8I),ee===s.SHORT&&(fe=s.RGBA16I),ee===s.INT&&(fe=s.RGBA32I)),R===s.RGB&&ee===s.UNSIGNED_INT_5_9_9_9_REV&&(fe=s.RGB9_E5),R===s.RGBA){const Ae=le?Ca:It.getTransfer(ae);ee===s.FLOAT&&(fe=s.RGBA32F),ee===s.HALF_FLOAT&&(fe=s.RGBA16F),ee===s.UNSIGNED_BYTE&&(fe=Ae===qt?s.SRGB8_ALPHA8:s.RGBA8),ee===s.UNSIGNED_SHORT_4_4_4_4&&(fe=s.RGBA4),ee===s.UNSIGNED_SHORT_5_5_5_1&&(fe=s.RGB5_A1)}return(fe===s.R16F||fe===s.R32F||fe===s.RG16F||fe===s.RG32F||fe===s.RGBA16F||fe===s.RGBA32F)&&e.get("EXT_color_buffer_float"),fe}function _(P,R){let ee;return P?R===null||R===Er||R===Os?ee=s.DEPTH24_STENCIL8:R===fi?ee=s.DEPTH32F_STENCIL8:R===Ro&&(ee=s.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):R===null||R===Er||R===Os?ee=s.DEPTH_COMPONENT24:R===fi?ee=s.DEPTH_COMPONENT32F:R===Ro&&(ee=s.DEPTH_COMPONENT16),ee}function E(P,R){return m(P)===!0||P.isFramebufferTexture&&P.minFilter!==On&&P.minFilter!==_n?Math.log2(Math.max(R.width,R.height))+1:P.mipmaps!==void 0&&P.mipmaps.length>0?P.mipmaps.length:P.isCompressedTexture&&Array.isArray(P.image)?R.mipmaps.length:1}function w(P){const R=P.target;R.removeEventListener("dispose",w),T(R),R.isVideoTexture&&h.delete(R)}function M(P){const R=P.target;R.removeEventListener("dispose",M),b(R)}function T(P){const R=n.get(P);if(R.__webglInit===void 0)return;const ee=P.source,ae=d.get(ee);if(ae){const le=ae[R.__cacheKey];le.usedTimes--,le.usedTimes===0&&S(P),Object.keys(ae).length===0&&d.delete(ee)}n.remove(P)}function S(P){const R=n.get(P);s.deleteTexture(R.__webglTexture);const ee=P.source,ae=d.get(ee);delete ae[R.__cacheKey],o.memory.textures--}function b(P){const R=n.get(P);if(P.depthTexture&&(P.depthTexture.dispose(),n.remove(P.depthTexture)),P.isWebGLCubeRenderTarget)for(let ae=0;ae<6;ae++){if(Array.isArray(R.__webglFramebuffer[ae]))for(let le=0;le<R.__webglFramebuffer[ae].length;le++)s.deleteFramebuffer(R.__webglFramebuffer[ae][le]);else s.deleteFramebuffer(R.__webglFramebuffer[ae]);R.__webglDepthbuffer&&s.deleteRenderbuffer(R.__webglDepthbuffer[ae])}else{if(Array.isArray(R.__webglFramebuffer))for(let ae=0;ae<R.__webglFramebuffer.length;ae++)s.deleteFramebuffer(R.__webglFramebuffer[ae]);else s.deleteFramebuffer(R.__webglFramebuffer);if(R.__webglDepthbuffer&&s.deleteRenderbuffer(R.__webglDepthbuffer),R.__webglMultisampledFramebuffer&&s.deleteFramebuffer(R.__webglMultisampledFramebuffer),R.__webglColorRenderbuffer)for(let ae=0;ae<R.__webglColorRenderbuffer.length;ae++)R.__webglColorRenderbuffer[ae]&&s.deleteRenderbuffer(R.__webglColorRenderbuffer[ae]);R.__webglDepthRenderbuffer&&s.deleteRenderbuffer(R.__webglDepthRenderbuffer)}const ee=P.textures;for(let ae=0,le=ee.length;ae<le;ae++){const fe=n.get(ee[ae]);fe.__webglTexture&&(s.deleteTexture(fe.__webglTexture),o.memory.textures--),n.remove(ee[ae])}n.remove(P)}let I=0;function D(){I=0}function G(){const P=I;return P>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+P+" texture units while this GPU supports only "+i.maxTextures),I+=1,P}function H(P){const R=[];return R.push(P.wrapS),R.push(P.wrapT),R.push(P.wrapR||0),R.push(P.magFilter),R.push(P.minFilter),R.push(P.anisotropy),R.push(P.internalFormat),R.push(P.format),R.push(P.type),R.push(P.generateMipmaps),R.push(P.premultiplyAlpha),R.push(P.flipY),R.push(P.unpackAlignment),R.push(P.colorSpace),R.join()}function $(P,R){const ee=n.get(P);if(P.isVideoTexture&&ce(P),P.isRenderTargetTexture===!1&&P.version>0&&ee.__version!==P.version){const ae=P.image;if(ae===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ae.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{V(ee,P,R);return}}t.bindTexture(s.TEXTURE_2D,ee.__webglTexture,s.TEXTURE0+R)}function F(P,R){const ee=n.get(P);if(P.version>0&&ee.__version!==P.version){V(ee,P,R);return}t.bindTexture(s.TEXTURE_2D_ARRAY,ee.__webglTexture,s.TEXTURE0+R)}function Z(P,R){const ee=n.get(P);if(P.version>0&&ee.__version!==P.version){V(ee,P,R);return}t.bindTexture(s.TEXTURE_3D,ee.__webglTexture,s.TEXTURE0+R)}function q(P,R){const ee=n.get(P);if(P.version>0&&ee.__version!==P.version){W(ee,P,R);return}t.bindTexture(s.TEXTURE_CUBE_MAP,ee.__webglTexture,s.TEXTURE0+R)}const j={[Hi]:s.REPEAT,[di]:s.CLAMP_TO_EDGE,[Ea]:s.MIRRORED_REPEAT},J={[On]:s.NEAREST,[zd]:s.NEAREST_MIPMAP_NEAREST,[So]:s.NEAREST_MIPMAP_LINEAR,[_n]:s.LINEAR,[ua]:s.LINEAR_MIPMAP_NEAREST,[Wi]:s.LINEAR_MIPMAP_LINEAR},B={[Mv]:s.NEVER,[Rv]:s.ALWAYS,[wv]:s.LESS,[Qd]:s.LEQUAL,[Ev]:s.EQUAL,[Cv]:s.GEQUAL,[Tv]:s.GREATER,[Av]:s.NOTEQUAL};function Y(P,R){if(R.type===fi&&e.has("OES_texture_float_linear")===!1&&(R.magFilter===_n||R.magFilter===ua||R.magFilter===So||R.magFilter===Wi||R.minFilter===_n||R.minFilter===ua||R.minFilter===So||R.minFilter===Wi)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),s.texParameteri(P,s.TEXTURE_WRAP_S,j[R.wrapS]),s.texParameteri(P,s.TEXTURE_WRAP_T,j[R.wrapT]),(P===s.TEXTURE_3D||P===s.TEXTURE_2D_ARRAY)&&s.texParameteri(P,s.TEXTURE_WRAP_R,j[R.wrapR]),s.texParameteri(P,s.TEXTURE_MAG_FILTER,J[R.magFilter]),s.texParameteri(P,s.TEXTURE_MIN_FILTER,J[R.minFilter]),R.compareFunction&&(s.texParameteri(P,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(P,s.TEXTURE_COMPARE_FUNC,B[R.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(R.magFilter===On||R.minFilter!==So&&R.minFilter!==Wi||R.type===fi&&e.has("OES_texture_float_linear")===!1)return;if(R.anisotropy>1||n.get(R).__currentAnisotropy){const ee=e.get("EXT_texture_filter_anisotropic");s.texParameterf(P,ee.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(R.anisotropy,i.getMaxAnisotropy())),n.get(R).__currentAnisotropy=R.anisotropy}}}function K(P,R){let ee=!1;P.__webglInit===void 0&&(P.__webglInit=!0,R.addEventListener("dispose",w));const ae=R.source;let le=d.get(ae);le===void 0&&(le={},d.set(ae,le));const fe=H(R);if(fe!==P.__cacheKey){le[fe]===void 0&&(le[fe]={texture:s.createTexture(),usedTimes:0},o.memory.textures++,ee=!0),le[fe].usedTimes++;const Ae=le[P.__cacheKey];Ae!==void 0&&(le[P.__cacheKey].usedTimes--,Ae.usedTimes===0&&S(R)),P.__cacheKey=fe,P.__webglTexture=le[fe].texture}return ee}function V(P,R,ee){let ae=s.TEXTURE_2D;(R.isDataArrayTexture||R.isCompressedArrayTexture)&&(ae=s.TEXTURE_2D_ARRAY),R.isData3DTexture&&(ae=s.TEXTURE_3D);const le=K(P,R),fe=R.source;t.bindTexture(ae,P.__webglTexture,s.TEXTURE0+ee);const Ae=n.get(fe);if(fe.version!==Ae.__version||le===!0){t.activeTexture(s.TEXTURE0+ee);const ye=It.getPrimaries(It.workingColorSpace),Ce=R.colorSpace===yr?null:It.getPrimaries(R.colorSpace),He=R.colorSpace===yr||ye===Ce?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,R.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,R.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,He);let Re=v(R.image,!1,i.maxTextureSize);Re=Ue(R,Re);const ke=r.convert(R.format,R.colorSpace),Fe=r.convert(R.type);let Ve=y(R.internalFormat,ke,Fe,R.colorSpace,R.isVideoTexture);Y(ae,R);let Pe;const ct=R.mipmaps,Ke=R.isVideoTexture!==!0,bt=Ae.__version===void 0||le===!0,ne=fe.dataReady,Te=E(R,Re);if(R.isDepthTexture)Ve=_(R.format===Fs,R.type),bt&&(Ke?t.texStorage2D(s.TEXTURE_2D,1,Ve,Re.width,Re.height):t.texImage2D(s.TEXTURE_2D,0,Ve,Re.width,Re.height,0,ke,Fe,null));else if(R.isDataTexture)if(ct.length>0){Ke&&bt&&t.texStorage2D(s.TEXTURE_2D,Te,Ve,ct[0].width,ct[0].height);for(let he=0,Ie=ct.length;he<Ie;he++)Pe=ct[he],Ke?ne&&t.texSubImage2D(s.TEXTURE_2D,he,0,0,Pe.width,Pe.height,ke,Fe,Pe.data):t.texImage2D(s.TEXTURE_2D,he,Ve,Pe.width,Pe.height,0,ke,Fe,Pe.data);R.generateMipmaps=!1}else Ke?(bt&&t.texStorage2D(s.TEXTURE_2D,Te,Ve,Re.width,Re.height),ne&&t.texSubImage2D(s.TEXTURE_2D,0,0,0,Re.width,Re.height,ke,Fe,Re.data)):t.texImage2D(s.TEXTURE_2D,0,Ve,Re.width,Re.height,0,ke,Fe,Re.data);else if(R.isCompressedTexture)if(R.isCompressedArrayTexture){Ke&&bt&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Te,Ve,ct[0].width,ct[0].height,Re.depth);for(let he=0,Ie=ct.length;he<Ie;he++)if(Pe=ct[he],R.format!==ti)if(ke!==null)if(Ke){if(ne)if(R.layerUpdates.size>0){const Ne=bd(Pe.width,Pe.height,R.format,R.type);for(const De of R.layerUpdates){const tt=Pe.data.subarray(De*Ne/Pe.data.BYTES_PER_ELEMENT,(De+1)*Ne/Pe.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,he,0,0,De,Pe.width,Pe.height,1,ke,tt)}R.clearLayerUpdates()}else t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,he,0,0,0,Pe.width,Pe.height,Re.depth,ke,Pe.data)}else t.compressedTexImage3D(s.TEXTURE_2D_ARRAY,he,Ve,Pe.width,Pe.height,Re.depth,0,Pe.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else Ke?ne&&t.texSubImage3D(s.TEXTURE_2D_ARRAY,he,0,0,0,Pe.width,Pe.height,Re.depth,ke,Fe,Pe.data):t.texImage3D(s.TEXTURE_2D_ARRAY,he,Ve,Pe.width,Pe.height,Re.depth,0,ke,Fe,Pe.data)}else{Ke&&bt&&t.texStorage2D(s.TEXTURE_2D,Te,Ve,ct[0].width,ct[0].height);for(let he=0,Ie=ct.length;he<Ie;he++)Pe=ct[he],R.format!==ti?ke!==null?Ke?ne&&t.compressedTexSubImage2D(s.TEXTURE_2D,he,0,0,Pe.width,Pe.height,ke,Pe.data):t.compressedTexImage2D(s.TEXTURE_2D,he,Ve,Pe.width,Pe.height,0,Pe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Ke?ne&&t.texSubImage2D(s.TEXTURE_2D,he,0,0,Pe.width,Pe.height,ke,Fe,Pe.data):t.texImage2D(s.TEXTURE_2D,he,Ve,Pe.width,Pe.height,0,ke,Fe,Pe.data)}else if(R.isDataArrayTexture)if(Ke){if(bt&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Te,Ve,Re.width,Re.height,Re.depth),ne)if(R.layerUpdates.size>0){const he=bd(Re.width,Re.height,R.format,R.type);for(const Ie of R.layerUpdates){const Ne=Re.data.subarray(Ie*he/Re.data.BYTES_PER_ELEMENT,(Ie+1)*he/Re.data.BYTES_PER_ELEMENT);t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,Ie,Re.width,Re.height,1,ke,Fe,Ne)}R.clearLayerUpdates()}else t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,Re.width,Re.height,Re.depth,ke,Fe,Re.data)}else t.texImage3D(s.TEXTURE_2D_ARRAY,0,Ve,Re.width,Re.height,Re.depth,0,ke,Fe,Re.data);else if(R.isData3DTexture)Ke?(bt&&t.texStorage3D(s.TEXTURE_3D,Te,Ve,Re.width,Re.height,Re.depth),ne&&t.texSubImage3D(s.TEXTURE_3D,0,0,0,0,Re.width,Re.height,Re.depth,ke,Fe,Re.data)):t.texImage3D(s.TEXTURE_3D,0,Ve,Re.width,Re.height,Re.depth,0,ke,Fe,Re.data);else if(R.isFramebufferTexture){if(bt)if(Ke)t.texStorage2D(s.TEXTURE_2D,Te,Ve,Re.width,Re.height);else{let he=Re.width,Ie=Re.height;for(let Ne=0;Ne<Te;Ne++)t.texImage2D(s.TEXTURE_2D,Ne,Ve,he,Ie,0,ke,Fe,null),he>>=1,Ie>>=1}}else if(ct.length>0){if(Ke&&bt){const he=_e(ct[0]);t.texStorage2D(s.TEXTURE_2D,Te,Ve,he.width,he.height)}for(let he=0,Ie=ct.length;he<Ie;he++)Pe=ct[he],Ke?ne&&t.texSubImage2D(s.TEXTURE_2D,he,0,0,ke,Fe,Pe):t.texImage2D(s.TEXTURE_2D,he,Ve,ke,Fe,Pe);R.generateMipmaps=!1}else if(Ke){if(bt){const he=_e(Re);t.texStorage2D(s.TEXTURE_2D,Te,Ve,he.width,he.height)}ne&&t.texSubImage2D(s.TEXTURE_2D,0,0,0,ke,Fe,Re)}else t.texImage2D(s.TEXTURE_2D,0,Ve,ke,Fe,Re);m(R)&&g(ae),Ae.__version=fe.version,R.onUpdate&&R.onUpdate(R)}P.__version=R.version}function W(P,R,ee){if(R.image.length!==6)return;const ae=K(P,R),le=R.source;t.bindTexture(s.TEXTURE_CUBE_MAP,P.__webglTexture,s.TEXTURE0+ee);const fe=n.get(le);if(le.version!==fe.__version||ae===!0){t.activeTexture(s.TEXTURE0+ee);const Ae=It.getPrimaries(It.workingColorSpace),ye=R.colorSpace===yr?null:It.getPrimaries(R.colorSpace),Ce=R.colorSpace===yr||Ae===ye?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,R.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,R.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ce);const He=R.isCompressedTexture||R.image[0].isCompressedTexture,Re=R.image[0]&&R.image[0].isDataTexture,ke=[];for(let Ie=0;Ie<6;Ie++)!He&&!Re?ke[Ie]=v(R.image[Ie],!0,i.maxCubemapSize):ke[Ie]=Re?R.image[Ie].image:R.image[Ie],ke[Ie]=Ue(R,ke[Ie]);const Fe=ke[0],Ve=r.convert(R.format,R.colorSpace),Pe=r.convert(R.type),ct=y(R.internalFormat,Ve,Pe,R.colorSpace),Ke=R.isVideoTexture!==!0,bt=fe.__version===void 0||ae===!0,ne=le.dataReady;let Te=E(R,Fe);Y(s.TEXTURE_CUBE_MAP,R);let he;if(He){Ke&&bt&&t.texStorage2D(s.TEXTURE_CUBE_MAP,Te,ct,Fe.width,Fe.height);for(let Ie=0;Ie<6;Ie++){he=ke[Ie].mipmaps;for(let Ne=0;Ne<he.length;Ne++){const De=he[Ne];R.format!==ti?Ve!==null?Ke?ne&&t.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ie,Ne,0,0,De.width,De.height,Ve,De.data):t.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ie,Ne,ct,De.width,De.height,0,De.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Ke?ne&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ie,Ne,0,0,De.width,De.height,Ve,Pe,De.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ie,Ne,ct,De.width,De.height,0,Ve,Pe,De.data)}}}else{if(he=R.mipmaps,Ke&&bt){he.length>0&&Te++;const Ie=_e(ke[0]);t.texStorage2D(s.TEXTURE_CUBE_MAP,Te,ct,Ie.width,Ie.height)}for(let Ie=0;Ie<6;Ie++)if(Re){Ke?ne&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ie,0,0,0,ke[Ie].width,ke[Ie].height,Ve,Pe,ke[Ie].data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ie,0,ct,ke[Ie].width,ke[Ie].height,0,Ve,Pe,ke[Ie].data);for(let Ne=0;Ne<he.length;Ne++){const tt=he[Ne].image[Ie].image;Ke?ne&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ie,Ne+1,0,0,tt.width,tt.height,Ve,Pe,tt.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ie,Ne+1,ct,tt.width,tt.height,0,Ve,Pe,tt.data)}}else{Ke?ne&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ie,0,0,0,Ve,Pe,ke[Ie]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ie,0,ct,Ve,Pe,ke[Ie]);for(let Ne=0;Ne<he.length;Ne++){const De=he[Ne];Ke?ne&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ie,Ne+1,0,0,Ve,Pe,De.image[Ie]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ie,Ne+1,ct,Ve,Pe,De.image[Ie])}}}m(R)&&g(s.TEXTURE_CUBE_MAP),fe.__version=le.version,R.onUpdate&&R.onUpdate(R)}P.__version=R.version}function Q(P,R,ee,ae,le,fe){const Ae=r.convert(ee.format,ee.colorSpace),ye=r.convert(ee.type),Ce=y(ee.internalFormat,Ae,ye,ee.colorSpace),He=n.get(R),Re=n.get(ee);if(Re.__renderTarget=R,!He.__hasExternalTextures){const ke=Math.max(1,R.width>>fe),Fe=Math.max(1,R.height>>fe);le===s.TEXTURE_3D||le===s.TEXTURE_2D_ARRAY?t.texImage3D(le,fe,Ce,ke,Fe,R.depth,0,Ae,ye,null):t.texImage2D(le,fe,Ce,ke,Fe,0,Ae,ye,null)}t.bindFramebuffer(s.FRAMEBUFFER,P),Ee(R)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,ae,le,Re.__webglTexture,0,de(R)):(le===s.TEXTURE_2D||le>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&le<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,ae,le,Re.__webglTexture,fe),t.bindFramebuffer(s.FRAMEBUFFER,null)}function X(P,R,ee){if(s.bindRenderbuffer(s.RENDERBUFFER,P),R.depthBuffer){const ae=R.depthTexture,le=ae&&ae.isDepthTexture?ae.type:null,fe=_(R.stencilBuffer,le),Ae=R.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,ye=de(R);Ee(R)?a.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,ye,fe,R.width,R.height):ee?s.renderbufferStorageMultisample(s.RENDERBUFFER,ye,fe,R.width,R.height):s.renderbufferStorage(s.RENDERBUFFER,fe,R.width,R.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,Ae,s.RENDERBUFFER,P)}else{const ae=R.textures;for(let le=0;le<ae.length;le++){const fe=ae[le],Ae=r.convert(fe.format,fe.colorSpace),ye=r.convert(fe.type),Ce=y(fe.internalFormat,Ae,ye,fe.colorSpace),He=de(R);ee&&Ee(R)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,He,Ce,R.width,R.height):Ee(R)?a.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,He,Ce,R.width,R.height):s.renderbufferStorage(s.RENDERBUFFER,Ce,R.width,R.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function te(P,R){if(R&&R.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(s.FRAMEBUFFER,P),!(R.depthTexture&&R.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const ae=n.get(R.depthTexture);ae.__renderTarget=R,(!ae.__webglTexture||R.depthTexture.image.width!==R.width||R.depthTexture.image.height!==R.height)&&(R.depthTexture.image.width=R.width,R.depthTexture.image.height=R.height,R.depthTexture.needsUpdate=!0),$(R.depthTexture,0);const le=ae.__webglTexture,fe=de(R);if(R.depthTexture.format===Ps)Ee(R)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,le,0,fe):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,le,0);else if(R.depthTexture.format===Fs)Ee(R)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,le,0,fe):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,le,0);else throw new Error("Unknown depthTexture format")}function ge(P){const R=n.get(P),ee=P.isWebGLCubeRenderTarget===!0;if(R.__boundDepthTexture!==P.depthTexture){const ae=P.depthTexture;if(R.__depthDisposeCallback&&R.__depthDisposeCallback(),ae){const le=()=>{delete R.__boundDepthTexture,delete R.__depthDisposeCallback,ae.removeEventListener("dispose",le)};ae.addEventListener("dispose",le),R.__depthDisposeCallback=le}R.__boundDepthTexture=ae}if(P.depthTexture&&!R.__autoAllocateDepthBuffer){if(ee)throw new Error("target.depthTexture not supported in Cube render targets");te(R.__webglFramebuffer,P)}else if(ee){R.__webglDepthbuffer=[];for(let ae=0;ae<6;ae++)if(t.bindFramebuffer(s.FRAMEBUFFER,R.__webglFramebuffer[ae]),R.__webglDepthbuffer[ae]===void 0)R.__webglDepthbuffer[ae]=s.createRenderbuffer(),X(R.__webglDepthbuffer[ae],P,!1);else{const le=P.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,fe=R.__webglDepthbuffer[ae];s.bindRenderbuffer(s.RENDERBUFFER,fe),s.framebufferRenderbuffer(s.FRAMEBUFFER,le,s.RENDERBUFFER,fe)}}else if(t.bindFramebuffer(s.FRAMEBUFFER,R.__webglFramebuffer),R.__webglDepthbuffer===void 0)R.__webglDepthbuffer=s.createRenderbuffer(),X(R.__webglDepthbuffer,P,!1);else{const ae=P.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,le=R.__webglDepthbuffer;s.bindRenderbuffer(s.RENDERBUFFER,le),s.framebufferRenderbuffer(s.FRAMEBUFFER,ae,s.RENDERBUFFER,le)}t.bindFramebuffer(s.FRAMEBUFFER,null)}function be(P,R,ee){const ae=n.get(P);R!==void 0&&Q(ae.__webglFramebuffer,P,P.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,0),ee!==void 0&&ge(P)}function we(P){const R=P.texture,ee=n.get(P),ae=n.get(R);P.addEventListener("dispose",M);const le=P.textures,fe=P.isWebGLCubeRenderTarget===!0,Ae=le.length>1;if(Ae||(ae.__webglTexture===void 0&&(ae.__webglTexture=s.createTexture()),ae.__version=R.version,o.memory.textures++),fe){ee.__webglFramebuffer=[];for(let ye=0;ye<6;ye++)if(R.mipmaps&&R.mipmaps.length>0){ee.__webglFramebuffer[ye]=[];for(let Ce=0;Ce<R.mipmaps.length;Ce++)ee.__webglFramebuffer[ye][Ce]=s.createFramebuffer()}else ee.__webglFramebuffer[ye]=s.createFramebuffer()}else{if(R.mipmaps&&R.mipmaps.length>0){ee.__webglFramebuffer=[];for(let ye=0;ye<R.mipmaps.length;ye++)ee.__webglFramebuffer[ye]=s.createFramebuffer()}else ee.__webglFramebuffer=s.createFramebuffer();if(Ae)for(let ye=0,Ce=le.length;ye<Ce;ye++){const He=n.get(le[ye]);He.__webglTexture===void 0&&(He.__webglTexture=s.createTexture(),o.memory.textures++)}if(P.samples>0&&Ee(P)===!1){ee.__webglMultisampledFramebuffer=s.createFramebuffer(),ee.__webglColorRenderbuffer=[],t.bindFramebuffer(s.FRAMEBUFFER,ee.__webglMultisampledFramebuffer);for(let ye=0;ye<le.length;ye++){const Ce=le[ye];ee.__webglColorRenderbuffer[ye]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,ee.__webglColorRenderbuffer[ye]);const He=r.convert(Ce.format,Ce.colorSpace),Re=r.convert(Ce.type),ke=y(Ce.internalFormat,He,Re,Ce.colorSpace,P.isXRRenderTarget===!0),Fe=de(P);s.renderbufferStorageMultisample(s.RENDERBUFFER,Fe,ke,P.width,P.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+ye,s.RENDERBUFFER,ee.__webglColorRenderbuffer[ye])}s.bindRenderbuffer(s.RENDERBUFFER,null),P.depthBuffer&&(ee.__webglDepthRenderbuffer=s.createRenderbuffer(),X(ee.__webglDepthRenderbuffer,P,!0)),t.bindFramebuffer(s.FRAMEBUFFER,null)}}if(fe){t.bindTexture(s.TEXTURE_CUBE_MAP,ae.__webglTexture),Y(s.TEXTURE_CUBE_MAP,R);for(let ye=0;ye<6;ye++)if(R.mipmaps&&R.mipmaps.length>0)for(let Ce=0;Ce<R.mipmaps.length;Ce++)Q(ee.__webglFramebuffer[ye][Ce],P,R,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+ye,Ce);else Q(ee.__webglFramebuffer[ye],P,R,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+ye,0);m(R)&&g(s.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Ae){for(let ye=0,Ce=le.length;ye<Ce;ye++){const He=le[ye],Re=n.get(He);t.bindTexture(s.TEXTURE_2D,Re.__webglTexture),Y(s.TEXTURE_2D,He),Q(ee.__webglFramebuffer,P,He,s.COLOR_ATTACHMENT0+ye,s.TEXTURE_2D,0),m(He)&&g(s.TEXTURE_2D)}t.unbindTexture()}else{let ye=s.TEXTURE_2D;if((P.isWebGL3DRenderTarget||P.isWebGLArrayRenderTarget)&&(ye=P.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),t.bindTexture(ye,ae.__webglTexture),Y(ye,R),R.mipmaps&&R.mipmaps.length>0)for(let Ce=0;Ce<R.mipmaps.length;Ce++)Q(ee.__webglFramebuffer[Ce],P,R,s.COLOR_ATTACHMENT0,ye,Ce);else Q(ee.__webglFramebuffer,P,R,s.COLOR_ATTACHMENT0,ye,0);m(R)&&g(ye),t.unbindTexture()}P.depthBuffer&&ge(P)}function re(P){const R=P.textures;for(let ee=0,ae=R.length;ee<ae;ee++){const le=R[ee];if(m(le)){const fe=x(P),Ae=n.get(le).__webglTexture;t.bindTexture(fe,Ae),g(fe),t.unbindTexture()}}}const me=[],z=[];function Me(P){if(P.samples>0){if(Ee(P)===!1){const R=P.textures,ee=P.width,ae=P.height;let le=s.COLOR_BUFFER_BIT;const fe=P.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Ae=n.get(P),ye=R.length>1;if(ye)for(let Ce=0;Ce<R.length;Ce++)t.bindFramebuffer(s.FRAMEBUFFER,Ae.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ce,s.RENDERBUFFER,null),t.bindFramebuffer(s.FRAMEBUFFER,Ae.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ce,s.TEXTURE_2D,null,0);t.bindFramebuffer(s.READ_FRAMEBUFFER,Ae.__webglMultisampledFramebuffer),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,Ae.__webglFramebuffer);for(let Ce=0;Ce<R.length;Ce++){if(P.resolveDepthBuffer&&(P.depthBuffer&&(le|=s.DEPTH_BUFFER_BIT),P.stencilBuffer&&P.resolveStencilBuffer&&(le|=s.STENCIL_BUFFER_BIT)),ye){s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,Ae.__webglColorRenderbuffer[Ce]);const He=n.get(R[Ce]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,He,0)}s.blitFramebuffer(0,0,ee,ae,0,0,ee,ae,le,s.NEAREST),l===!0&&(me.length=0,z.length=0,me.push(s.COLOR_ATTACHMENT0+Ce),P.depthBuffer&&P.resolveDepthBuffer===!1&&(me.push(fe),z.push(fe),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,z)),s.invalidateFramebuffer(s.READ_FRAMEBUFFER,me))}if(t.bindFramebuffer(s.READ_FRAMEBUFFER,null),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),ye)for(let Ce=0;Ce<R.length;Ce++){t.bindFramebuffer(s.FRAMEBUFFER,Ae.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ce,s.RENDERBUFFER,Ae.__webglColorRenderbuffer[Ce]);const He=n.get(R[Ce]).__webglTexture;t.bindFramebuffer(s.FRAMEBUFFER,Ae.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ce,s.TEXTURE_2D,He,0)}t.bindFramebuffer(s.DRAW_FRAMEBUFFER,Ae.__webglMultisampledFramebuffer)}else if(P.depthBuffer&&P.resolveDepthBuffer===!1&&l){const R=P.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[R])}}}function de(P){return Math.min(i.maxSamples,P.samples)}function Ee(P){const R=n.get(P);return P.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&R.__useRenderToTexture!==!1}function ce(P){const R=o.render.frame;h.get(P)!==R&&(h.set(P,R),P.update())}function Ue(P,R){const ee=P.colorSpace,ae=P.format,le=P.type;return P.isCompressedTexture===!0||P.isVideoTexture===!0||ee!==ks&&ee!==yr&&(It.getTransfer(ee)===qt?(ae!==ti||le!==lr)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",ee)),R}function _e(P){return typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement?(c.width=P.naturalWidth||P.width,c.height=P.naturalHeight||P.height):typeof VideoFrame<"u"&&P instanceof VideoFrame?(c.width=P.displayWidth,c.height=P.displayHeight):(c.width=P.width,c.height=P.height),c}this.allocateTextureUnit=G,this.resetTextureUnits=D,this.setTexture2D=$,this.setTexture2DArray=F,this.setTexture3D=Z,this.setTextureCube=q,this.rebindTextures=be,this.setupRenderTarget=we,this.updateRenderTargetMipmap=re,this.updateMultisampleRenderTarget=Me,this.setupDepthRenderbuffer=ge,this.setupFrameBufferTexture=Q,this.useMultisampledRTT=Ee}function I_(s,e){function t(n,i=yr){let r;const o=It.getTransfer(i);if(n===lr)return s.UNSIGNED_BYTE;if(n===lh)return s.UNSIGNED_SHORT_4_4_4_4;if(n===ch)return s.UNSIGNED_SHORT_5_5_5_1;if(n===Hd)return s.UNSIGNED_INT_5_9_9_9_REV;if(n===Vd)return s.BYTE;if(n===Gd)return s.SHORT;if(n===Ro)return s.UNSIGNED_SHORT;if(n===ah)return s.INT;if(n===Er)return s.UNSIGNED_INT;if(n===fi)return s.FLOAT;if(n===No)return s.HALF_FLOAT;if(n===Wd)return s.ALPHA;if(n===Xd)return s.RGB;if(n===ti)return s.RGBA;if(n===Yd)return s.LUMINANCE;if(n===qd)return s.LUMINANCE_ALPHA;if(n===Ps)return s.DEPTH_COMPONENT;if(n===Fs)return s.DEPTH_STENCIL;if(n===hh)return s.RED;if(n===Xa)return s.RED_INTEGER;if(n===jd)return s.RG;if(n===uh)return s.RG_INTEGER;if(n===dh)return s.RGBA_INTEGER;if(n===da||n===fa||n===pa||n===ma)if(o===qt)if(r=e.get("WEBGL_compressed_texture_s3tc_srgb"),r!==null){if(n===da)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===fa)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===pa)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===ma)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(r=e.get("WEBGL_compressed_texture_s3tc"),r!==null){if(n===da)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===fa)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===pa)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===ma)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===Sc||n===Mc||n===wc||n===Ec)if(r=e.get("WEBGL_compressed_texture_pvrtc"),r!==null){if(n===Sc)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===Mc)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===wc)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===Ec)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===Tc||n===Ac||n===Cc)if(r=e.get("WEBGL_compressed_texture_etc"),r!==null){if(n===Tc||n===Ac)return o===qt?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(n===Cc)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===Rc||n===Pc||n===Ic||n===Dc||n===Uc||n===Lc||n===Nc||n===Oc||n===Fc||n===kc||n===Bc||n===zc||n===Vc||n===Gc)if(r=e.get("WEBGL_compressed_texture_astc"),r!==null){if(n===Rc)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===Pc)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Ic)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===Dc)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Uc)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===Lc)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===Nc)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Oc)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===Fc)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===kc)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Bc)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===zc)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Vc)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Gc)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===ga||n===Hc||n===Wc)if(r=e.get("EXT_texture_compression_bptc"),r!==null){if(n===ga)return o===qt?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===Hc)return r.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===Wc)return r.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===Zd||n===Xc||n===Yc||n===qc)if(r=e.get("EXT_texture_compression_rgtc"),r!==null){if(n===ga)return r.COMPRESSED_RED_RGTC1_EXT;if(n===Xc)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===Yc)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===qc)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===Os?s.UNSIGNED_INT_24_8:s[n]!==void 0?s[n]:null}return{convert:t}}const KE=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,QE=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class $E{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const i=new cn,r=e.properties.get(i);r.__webglTexture=t.texture,(t.depthNear!==n.depthNear||t.depthFar!==n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=i}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,n=new mi({vertexShader:KE,fragmentShader:QE,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new zt(new hr(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class eT extends cr{constructor(e,t){super();const n=this;let i=null,r=1,o=null,a="local-floor",l=1,c=null,h=null,u=null,d=null,f=null,p=null;const v=new $E,m=t.getContextAttributes();let g=null,x=null;const y=[],_=[],E=new ve;let w=null;const M=new vn;M.viewport=new Tt;const T=new vn;T.viewport=new Tt;const S=[M,T],b=new y_;let I=null,D=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(V){let W=y[V];return W===void 0&&(W=new lc,y[V]=W),W.getTargetRaySpace()},this.getControllerGrip=function(V){let W=y[V];return W===void 0&&(W=new lc,y[V]=W),W.getGripSpace()},this.getHand=function(V){let W=y[V];return W===void 0&&(W=new lc,y[V]=W),W.getHandSpace()};function G(V){const W=_.indexOf(V.inputSource);if(W===-1)return;const Q=y[W];Q!==void 0&&(Q.update(V.inputSource,V.frame,c||o),Q.dispatchEvent({type:V.type,data:V.inputSource}))}function H(){i.removeEventListener("select",G),i.removeEventListener("selectstart",G),i.removeEventListener("selectend",G),i.removeEventListener("squeeze",G),i.removeEventListener("squeezestart",G),i.removeEventListener("squeezeend",G),i.removeEventListener("end",H),i.removeEventListener("inputsourceschange",$);for(let V=0;V<y.length;V++){const W=_[V];W!==null&&(_[V]=null,y[V].disconnect(W))}I=null,D=null,v.reset(),e.setRenderTarget(g),f=null,d=null,u=null,i=null,x=null,K.stop(),n.isPresenting=!1,e.setPixelRatio(w),e.setSize(E.width,E.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(V){r=V,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(V){a=V,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||o},this.setReferenceSpace=function(V){c=V},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return u},this.getFrame=function(){return p},this.getSession=function(){return i},this.setSession=async function(V){if(i=V,i!==null){if(g=e.getRenderTarget(),i.addEventListener("select",G),i.addEventListener("selectstart",G),i.addEventListener("selectend",G),i.addEventListener("squeeze",G),i.addEventListener("squeezestart",G),i.addEventListener("squeezeend",G),i.addEventListener("end",H),i.addEventListener("inputsourceschange",$),m.xrCompatible!==!0&&await t.makeXRCompatible(),w=e.getPixelRatio(),e.getSize(E),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let Q=null,X=null,te=null;m.depth&&(te=m.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,Q=m.stencil?Fs:Ps,X=m.stencil?Os:Er);const ge={colorFormat:t.RGBA8,depthFormat:te,scaleFactor:r};u=new XRWebGLBinding(i,t),d=u.createProjectionLayer(ge),i.updateRenderState({layers:[d]}),e.setPixelRatio(1),e.setSize(d.textureWidth,d.textureHeight,!1),x=new Ni(d.textureWidth,d.textureHeight,{format:ti,type:lr,depthTexture:new sf(d.textureWidth,d.textureHeight,X,void 0,void 0,void 0,void 0,void 0,void 0,Q),stencilBuffer:m.stencil,colorSpace:e.outputColorSpace,samples:m.antialias?4:0,resolveDepthBuffer:d.ignoreDepthValues===!1})}else{const Q={antialias:m.antialias,alpha:!0,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:r};f=new XRWebGLLayer(i,t,Q),i.updateRenderState({baseLayer:f}),e.setPixelRatio(1),e.setSize(f.framebufferWidth,f.framebufferHeight,!1),x=new Ni(f.framebufferWidth,f.framebufferHeight,{format:ti,type:lr,colorSpace:e.outputColorSpace,stencilBuffer:m.stencil})}x.isXRRenderTarget=!0,this.setFoveation(l),c=null,o=await i.requestReferenceSpace(a),K.setContext(i),K.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode},this.getDepthTexture=function(){return v.getDepthTexture()};function $(V){for(let W=0;W<V.removed.length;W++){const Q=V.removed[W],X=_.indexOf(Q);X>=0&&(_[X]=null,y[X].disconnect(Q))}for(let W=0;W<V.added.length;W++){const Q=V.added[W];let X=_.indexOf(Q);if(X===-1){for(let ge=0;ge<y.length;ge++)if(ge>=_.length){_.push(Q),X=ge;break}else if(_[ge]===null){_[ge]=Q,X=ge;break}if(X===-1)break}const te=y[X];te&&te.connect(Q)}}const F=new N,Z=new N;function q(V,W,Q){F.setFromMatrixPosition(W.matrixWorld),Z.setFromMatrixPosition(Q.matrixWorld);const X=F.distanceTo(Z),te=W.projectionMatrix.elements,ge=Q.projectionMatrix.elements,be=te[14]/(te[10]-1),we=te[14]/(te[10]+1),re=(te[9]+1)/te[5],me=(te[9]-1)/te[5],z=(te[8]-1)/te[0],Me=(ge[8]+1)/ge[0],de=be*z,Ee=be*Me,ce=X/(-z+Me),Ue=ce*-z;if(W.matrixWorld.decompose(V.position,V.quaternion,V.scale),V.translateX(Ue),V.translateZ(ce),V.matrixWorld.compose(V.position,V.quaternion,V.scale),V.matrixWorldInverse.copy(V.matrixWorld).invert(),te[10]===-1)V.projectionMatrix.copy(W.projectionMatrix),V.projectionMatrixInverse.copy(W.projectionMatrixInverse);else{const _e=be+ce,P=we+ce,R=de-Ue,ee=Ee+(X-Ue),ae=re*we/P*_e,le=me*we/P*_e;V.projectionMatrix.makePerspective(R,ee,ae,le,_e,P),V.projectionMatrixInverse.copy(V.projectionMatrix).invert()}}function j(V,W){W===null?V.matrixWorld.copy(V.matrix):V.matrixWorld.multiplyMatrices(W.matrixWorld,V.matrix),V.matrixWorldInverse.copy(V.matrixWorld).invert()}this.updateCamera=function(V){if(i===null)return;let W=V.near,Q=V.far;v.texture!==null&&(v.depthNear>0&&(W=v.depthNear),v.depthFar>0&&(Q=v.depthFar)),b.near=T.near=M.near=W,b.far=T.far=M.far=Q,(I!==b.near||D!==b.far)&&(i.updateRenderState({depthNear:b.near,depthFar:b.far}),I=b.near,D=b.far),M.layers.mask=V.layers.mask|2,T.layers.mask=V.layers.mask|4,b.layers.mask=M.layers.mask|T.layers.mask;const X=V.parent,te=b.cameras;j(b,X);for(let ge=0;ge<te.length;ge++)j(te[ge],X);te.length===2?q(b,M,T):b.projectionMatrix.copy(M.projectionMatrix),J(V,b,X)};function J(V,W,Q){Q===null?V.matrix.copy(W.matrixWorld):(V.matrix.copy(Q.matrixWorld),V.matrix.invert(),V.matrix.multiply(W.matrixWorld)),V.matrix.decompose(V.position,V.quaternion,V.scale),V.updateMatrixWorld(!0),V.projectionMatrix.copy(W.projectionMatrix),V.projectionMatrixInverse.copy(W.projectionMatrixInverse),V.isPerspectiveCamera&&(V.fov=Po*2*Math.atan(1/V.projectionMatrix.elements[5]),V.zoom=1)}this.getCamera=function(){return b},this.getFoveation=function(){if(!(d===null&&f===null))return l},this.setFoveation=function(V){l=V,d!==null&&(d.fixedFoveation=V),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=V)},this.hasDepthSensing=function(){return v.texture!==null},this.getDepthSensingMesh=function(){return v.getMesh(b)};let B=null;function Y(V,W){if(h=W.getViewerPose(c||o),p=W,h!==null){const Q=h.views;f!==null&&(e.setRenderTargetFramebuffer(x,f.framebuffer),e.setRenderTarget(x));let X=!1;Q.length!==b.cameras.length&&(b.cameras.length=0,X=!0);for(let be=0;be<Q.length;be++){const we=Q[be];let re=null;if(f!==null)re=f.getViewport(we);else{const z=u.getViewSubImage(d,we);re=z.viewport,be===0&&(e.setRenderTargetTextures(x,z.colorTexture,d.ignoreDepthValues?void 0:z.depthStencilTexture),e.setRenderTarget(x))}let me=S[be];me===void 0&&(me=new vn,me.layers.enable(be),me.viewport=new Tt,S[be]=me),me.matrix.fromArray(we.transform.matrix),me.matrix.decompose(me.position,me.quaternion,me.scale),me.projectionMatrix.fromArray(we.projectionMatrix),me.projectionMatrixInverse.copy(me.projectionMatrix).invert(),me.viewport.set(re.x,re.y,re.width,re.height),be===0&&(b.matrix.copy(me.matrix),b.matrix.decompose(b.position,b.quaternion,b.scale)),X===!0&&b.cameras.push(me)}const te=i.enabledFeatures;if(te&&te.includes("depth-sensing")&&i.depthUsage=="gpu-optimized"&&u){const be=u.getDepthInformation(Q[0]);be&&be.isValid&&be.texture&&v.init(e,be,i.renderState)}}for(let Q=0;Q<y.length;Q++){const X=_[Q],te=y[Q];X!==null&&te!==void 0&&te.update(X,W,c||o)}B&&B(V,W),W.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:W}),p=null}const K=new T_;K.setAnimationLoop(Y),this.setAnimationLoop=function(V){B=V},this.dispose=function(){}}}const ps=new Ri,tT=new rt;function nT(s,e){function t(m,g){m.matrixAutoUpdate===!0&&m.updateMatrix(),g.value.copy(m.matrix)}function n(m,g){g.color.getRGB(m.fogColor.value,Lv(s)),g.isFog?(m.fogNear.value=g.near,m.fogFar.value=g.far):g.isFogExp2&&(m.fogDensity.value=g.density)}function i(m,g,x,y,_){g.isMeshBasicMaterial||g.isMeshLambertMaterial?r(m,g):g.isMeshToonMaterial?(r(m,g),u(m,g)):g.isMeshPhongMaterial?(r(m,g),h(m,g)):g.isMeshStandardMaterial?(r(m,g),d(m,g),g.isMeshPhysicalMaterial&&f(m,g,_)):g.isMeshMatcapMaterial?(r(m,g),p(m,g)):g.isMeshDepthMaterial?r(m,g):g.isMeshDistanceMaterial?(r(m,g),v(m,g)):g.isMeshNormalMaterial?r(m,g):g.isLineBasicMaterial?(o(m,g),g.isLineDashedMaterial&&a(m,g)):g.isPointsMaterial?l(m,g,x,y):g.isSpriteMaterial?c(m,g):g.isShadowMaterial?(m.color.value.copy(g.color),m.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function r(m,g){m.opacity.value=g.opacity,g.color&&m.diffuse.value.copy(g.color),g.emissive&&m.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(m.map.value=g.map,t(g.map,m.mapTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,t(g.alphaMap,m.alphaMapTransform)),g.bumpMap&&(m.bumpMap.value=g.bumpMap,t(g.bumpMap,m.bumpMapTransform),m.bumpScale.value=g.bumpScale,g.side===Wn&&(m.bumpScale.value*=-1)),g.normalMap&&(m.normalMap.value=g.normalMap,t(g.normalMap,m.normalMapTransform),m.normalScale.value.copy(g.normalScale),g.side===Wn&&m.normalScale.value.negate()),g.displacementMap&&(m.displacementMap.value=g.displacementMap,t(g.displacementMap,m.displacementMapTransform),m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias),g.emissiveMap&&(m.emissiveMap.value=g.emissiveMap,t(g.emissiveMap,m.emissiveMapTransform)),g.specularMap&&(m.specularMap.value=g.specularMap,t(g.specularMap,m.specularMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);const x=e.get(g),y=x.envMap,_=x.envMapRotation;y&&(m.envMap.value=y,ps.copy(_),ps.x*=-1,ps.y*=-1,ps.z*=-1,y.isCubeTexture&&y.isRenderTargetTexture===!1&&(ps.y*=-1,ps.z*=-1),m.envMapRotation.value.setFromMatrix4(tT.makeRotationFromEuler(ps)),m.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=g.reflectivity,m.ior.value=g.ior,m.refractionRatio.value=g.refractionRatio),g.lightMap&&(m.lightMap.value=g.lightMap,m.lightMapIntensity.value=g.lightMapIntensity,t(g.lightMap,m.lightMapTransform)),g.aoMap&&(m.aoMap.value=g.aoMap,m.aoMapIntensity.value=g.aoMapIntensity,t(g.aoMap,m.aoMapTransform))}function o(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,g.map&&(m.map.value=g.map,t(g.map,m.mapTransform))}function a(m,g){m.dashSize.value=g.dashSize,m.totalSize.value=g.dashSize+g.gapSize,m.scale.value=g.scale}function l(m,g,x,y){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.size.value=g.size*x,m.scale.value=y*.5,g.map&&(m.map.value=g.map,t(g.map,m.uvTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,t(g.alphaMap,m.alphaMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest)}function c(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.rotation.value=g.rotation,g.map&&(m.map.value=g.map,t(g.map,m.mapTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,t(g.alphaMap,m.alphaMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest)}function h(m,g){m.specular.value.copy(g.specular),m.shininess.value=Math.max(g.shininess,1e-4)}function u(m,g){g.gradientMap&&(m.gradientMap.value=g.gradientMap)}function d(m,g){m.metalness.value=g.metalness,g.metalnessMap&&(m.metalnessMap.value=g.metalnessMap,t(g.metalnessMap,m.metalnessMapTransform)),m.roughness.value=g.roughness,g.roughnessMap&&(m.roughnessMap.value=g.roughnessMap,t(g.roughnessMap,m.roughnessMapTransform)),g.envMap&&(m.envMapIntensity.value=g.envMapIntensity)}function f(m,g,x){m.ior.value=g.ior,g.sheen>0&&(m.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),m.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(m.sheenColorMap.value=g.sheenColorMap,t(g.sheenColorMap,m.sheenColorMapTransform)),g.sheenRoughnessMap&&(m.sheenRoughnessMap.value=g.sheenRoughnessMap,t(g.sheenRoughnessMap,m.sheenRoughnessMapTransform))),g.clearcoat>0&&(m.clearcoat.value=g.clearcoat,m.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(m.clearcoatMap.value=g.clearcoatMap,t(g.clearcoatMap,m.clearcoatMapTransform)),g.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap,t(g.clearcoatRoughnessMap,m.clearcoatRoughnessMapTransform)),g.clearcoatNormalMap&&(m.clearcoatNormalMap.value=g.clearcoatNormalMap,t(g.clearcoatNormalMap,m.clearcoatNormalMapTransform),m.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),g.side===Wn&&m.clearcoatNormalScale.value.negate())),g.dispersion>0&&(m.dispersion.value=g.dispersion),g.iridescence>0&&(m.iridescence.value=g.iridescence,m.iridescenceIOR.value=g.iridescenceIOR,m.iridescenceThicknessMinimum.value=g.iridescenceThicknessRange[0],m.iridescenceThicknessMaximum.value=g.iridescenceThicknessRange[1],g.iridescenceMap&&(m.iridescenceMap.value=g.iridescenceMap,t(g.iridescenceMap,m.iridescenceMapTransform)),g.iridescenceThicknessMap&&(m.iridescenceThicknessMap.value=g.iridescenceThicknessMap,t(g.iridescenceThicknessMap,m.iridescenceThicknessMapTransform))),g.transmission>0&&(m.transmission.value=g.transmission,m.transmissionSamplerMap.value=x.texture,m.transmissionSamplerSize.value.set(x.width,x.height),g.transmissionMap&&(m.transmissionMap.value=g.transmissionMap,t(g.transmissionMap,m.transmissionMapTransform)),m.thickness.value=g.thickness,g.thicknessMap&&(m.thicknessMap.value=g.thicknessMap,t(g.thicknessMap,m.thicknessMapTransform)),m.attenuationDistance.value=g.attenuationDistance,m.attenuationColor.value.copy(g.attenuationColor)),g.anisotropy>0&&(m.anisotropyVector.value.set(g.anisotropy*Math.cos(g.anisotropyRotation),g.anisotropy*Math.sin(g.anisotropyRotation)),g.anisotropyMap&&(m.anisotropyMap.value=g.anisotropyMap,t(g.anisotropyMap,m.anisotropyMapTransform))),m.specularIntensity.value=g.specularIntensity,m.specularColor.value.copy(g.specularColor),g.specularColorMap&&(m.specularColorMap.value=g.specularColorMap,t(g.specularColorMap,m.specularColorMapTransform)),g.specularIntensityMap&&(m.specularIntensityMap.value=g.specularIntensityMap,t(g.specularIntensityMap,m.specularIntensityMapTransform))}function p(m,g){g.matcap&&(m.matcap.value=g.matcap)}function v(m,g){const x=e.get(g).light;m.referencePosition.value.setFromMatrixPosition(x.matrixWorld),m.nearDistance.value=x.shadow.camera.near,m.farDistance.value=x.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function iT(s,e,t,n){let i={},r={},o=[];const a=s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS);function l(x,y){const _=y.program;n.uniformBlockBinding(x,_)}function c(x,y){let _=i[x.id];_===void 0&&(p(x),_=h(x),i[x.id]=_,x.addEventListener("dispose",m));const E=y.program;n.updateUBOMapping(x,E);const w=e.render.frame;r[x.id]!==w&&(d(x),r[x.id]=w)}function h(x){const y=u();x.__bindingPointIndex=y;const _=s.createBuffer(),E=x.__size,w=x.usage;return s.bindBuffer(s.UNIFORM_BUFFER,_),s.bufferData(s.UNIFORM_BUFFER,E,w),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,y,_),_}function u(){for(let x=0;x<a;x++)if(o.indexOf(x)===-1)return o.push(x),x;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(x){const y=i[x.id],_=x.uniforms,E=x.__cache;s.bindBuffer(s.UNIFORM_BUFFER,y);for(let w=0,M=_.length;w<M;w++){const T=Array.isArray(_[w])?_[w]:[_[w]];for(let S=0,b=T.length;S<b;S++){const I=T[S];if(f(I,w,S,E)===!0){const D=I.__offset,G=Array.isArray(I.value)?I.value:[I.value];let H=0;for(let $=0;$<G.length;$++){const F=G[$],Z=v(F);typeof F=="number"||typeof F=="boolean"?(I.__data[0]=F,s.bufferSubData(s.UNIFORM_BUFFER,D+H,I.__data)):F.isMatrix3?(I.__data[0]=F.elements[0],I.__data[1]=F.elements[1],I.__data[2]=F.elements[2],I.__data[3]=0,I.__data[4]=F.elements[3],I.__data[5]=F.elements[4],I.__data[6]=F.elements[5],I.__data[7]=0,I.__data[8]=F.elements[6],I.__data[9]=F.elements[7],I.__data[10]=F.elements[8],I.__data[11]=0):(F.toArray(I.__data,H),H+=Z.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,D,I.__data)}}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function f(x,y,_,E){const w=x.value,M=y+"_"+_;if(E[M]===void 0)return typeof w=="number"||typeof w=="boolean"?E[M]=w:E[M]=w.clone(),!0;{const T=E[M];if(typeof w=="number"||typeof w=="boolean"){if(T!==w)return E[M]=w,!0}else if(T.equals(w)===!1)return T.copy(w),!0}return!1}function p(x){const y=x.uniforms;let _=0;const E=16;for(let M=0,T=y.length;M<T;M++){const S=Array.isArray(y[M])?y[M]:[y[M]];for(let b=0,I=S.length;b<I;b++){const D=S[b],G=Array.isArray(D.value)?D.value:[D.value];for(let H=0,$=G.length;H<$;H++){const F=G[H],Z=v(F),q=_%E,j=q%Z.boundary,J=q+j;_+=j,J!==0&&E-J<Z.storage&&(_+=E-J),D.__data=new Float32Array(Z.storage/Float32Array.BYTES_PER_ELEMENT),D.__offset=_,_+=Z.storage}}}const w=_%E;return w>0&&(_+=E-w),x.__size=_,x.__cache={},this}function v(x){const y={boundary:0,storage:0};return typeof x=="number"||typeof x=="boolean"?(y.boundary=4,y.storage=4):x.isVector2?(y.boundary=8,y.storage=8):x.isVector3||x.isColor?(y.boundary=16,y.storage=12):x.isVector4?(y.boundary=16,y.storage=16):x.isMatrix3?(y.boundary=48,y.storage=48):x.isMatrix4?(y.boundary=64,y.storage=64):x.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",x),y}function m(x){const y=x.target;y.removeEventListener("dispose",m);const _=o.indexOf(y.__bindingPointIndex);o.splice(_,1),s.deleteBuffer(i[y.id]),delete i[y.id],delete r[y.id]}function g(){for(const x in i)s.deleteBuffer(i[x]);o=[],i={},r={}}return{bind:l,update:c,dispose:g}}class Uf{constructor(e={}){const{canvas:t=Iv(),context:n=null,depth:i=!0,stencil:r=!1,alpha:o=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:u=!1,reverseDepthBuffer:d=!1}=e;this.isWebGLRenderer=!0;let f;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");f=n.getContextAttributes().alpha}else f=o;const p=new Uint32Array(4),v=new Int32Array(4);let m=null,g=null;const x=[],y=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=nn,this.toneMapping=rr,this.toneMappingExposure=1;const _=this;let E=!1,w=0,M=0,T=null,S=-1,b=null;const I=new Tt,D=new Tt;let G=null;const H=new ze(0);let $=0,F=t.width,Z=t.height,q=1,j=null,J=null;const B=new Tt(0,0,F,Z),Y=new Tt(0,0,F,Z);let K=!1;const V=new Ka;let W=!1,Q=!1;this.transmissionResolutionScale=1;const X=new rt,te=new rt,ge=new N,be=new Tt,we={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let re=!1;function me(){return T===null?q:1}let z=n;function Me(L,se){return t.getContext(L,se)}try{const L={alpha:!0,depth:i,stencil:r,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:h,failIfMajorPerformanceCaveat:u};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${sh}`),t.addEventListener("webglcontextlost",Ie,!1),t.addEventListener("webglcontextrestored",Ne,!1),t.addEventListener("webglcontextcreationerror",De,!1),z===null){const se="webgl2";if(z=Me(se,L),z===null)throw Me(se)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(L){throw console.error("THREE.WebGLRenderer: "+L.message),L}let de,Ee,ce,Ue,_e,P,R,ee,ae,le,fe,Ae,ye,Ce,He,Re,ke,Fe,Ve,Pe,ct,Ke,bt,ne;function Te(){de=new mw(z),de.init(),Ke=new I_(z,de),Ee=new cw(z,de,e,Ke),ce=new ZE(z,de),Ee.reverseDepthBuffer&&d&&ce.buffers.depth.setReversed(!0),Ue=new _w(z),_e=new OE,P=new JE(z,de,ce,_e,Ee,Ke,Ue),R=new uw(_),ee=new pw(_),ae=new E1(z),bt=new aw(z,ae),le=new gw(z,ae,Ue,bt),fe=new xw(z,le,ae,Ue),Ve=new yw(z,Ee,P),Re=new hw(_e),Ae=new NE(_,R,ee,de,Ee,bt,Re),ye=new nT(_,_e),Ce=new kE,He=new WE(de),Fe=new ow(_,R,ee,ce,fe,f,l),ke=new qE(_,fe,Ee),ne=new iT(z,Ue,Ee,ce),Pe=new lw(z,de,Ue),ct=new vw(z,de,Ue),Ue.programs=Ae.programs,_.capabilities=Ee,_.extensions=de,_.properties=_e,_.renderLists=Ce,_.shadowMap=ke,_.state=ce,_.info=Ue}Te();const he=new eT(_,z);this.xr=he,this.getContext=function(){return z},this.getContextAttributes=function(){return z.getContextAttributes()},this.forceContextLoss=function(){const L=de.get("WEBGL_lose_context");L&&L.loseContext()},this.forceContextRestore=function(){const L=de.get("WEBGL_lose_context");L&&L.restoreContext()},this.getPixelRatio=function(){return q},this.setPixelRatio=function(L){L!==void 0&&(q=L,this.setSize(F,Z,!1))},this.getSize=function(L){return L.set(F,Z)},this.setSize=function(L,se,ue=!0){if(he.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}F=L,Z=se,t.width=Math.floor(L*q),t.height=Math.floor(se*q),ue===!0&&(t.style.width=L+"px",t.style.height=se+"px"),this.setViewport(0,0,L,se)},this.getDrawingBufferSize=function(L){return L.set(F*q,Z*q).floor()},this.setDrawingBufferSize=function(L,se,ue){F=L,Z=se,q=ue,t.width=Math.floor(L*ue),t.height=Math.floor(se*ue),this.setViewport(0,0,L,se)},this.getCurrentViewport=function(L){return L.copy(I)},this.getViewport=function(L){return L.copy(B)},this.setViewport=function(L,se,ue,ie){L.isVector4?B.set(L.x,L.y,L.z,L.w):B.set(L,se,ue,ie),ce.viewport(I.copy(B).multiplyScalar(q).round())},this.getScissor=function(L){return L.copy(Y)},this.setScissor=function(L,se,ue,ie){L.isVector4?Y.set(L.x,L.y,L.z,L.w):Y.set(L,se,ue,ie),ce.scissor(D.copy(Y).multiplyScalar(q).round())},this.getScissorTest=function(){return K},this.setScissorTest=function(L){ce.setScissorTest(K=L)},this.setOpaqueSort=function(L){j=L},this.setTransparentSort=function(L){J=L},this.getClearColor=function(L){return L.copy(Fe.getClearColor())},this.setClearColor=function(){Fe.setClearColor.apply(Fe,arguments)},this.getClearAlpha=function(){return Fe.getClearAlpha()},this.setClearAlpha=function(){Fe.setClearAlpha.apply(Fe,arguments)},this.clear=function(L=!0,se=!0,ue=!0){let ie=0;if(L){let oe=!1;if(T!==null){const Oe=T.texture.format;oe=Oe===dh||Oe===uh||Oe===Xa}if(oe){const Oe=T.texture.type,Ge=Oe===lr||Oe===Er||Oe===Ro||Oe===Os||Oe===lh||Oe===ch,je=Fe.getClearColor(),Je=Fe.getClearAlpha(),gt=je.r,ft=je.g,lt=je.b;Ge?(p[0]=gt,p[1]=ft,p[2]=lt,p[3]=Je,z.clearBufferuiv(z.COLOR,0,p)):(v[0]=gt,v[1]=ft,v[2]=lt,v[3]=Je,z.clearBufferiv(z.COLOR,0,v))}else ie|=z.COLOR_BUFFER_BIT}se&&(ie|=z.DEPTH_BUFFER_BIT),ue&&(ie|=z.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),z.clear(ie)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ie,!1),t.removeEventListener("webglcontextrestored",Ne,!1),t.removeEventListener("webglcontextcreationerror",De,!1),Fe.dispose(),Ce.dispose(),He.dispose(),_e.dispose(),R.dispose(),ee.dispose(),fe.dispose(),bt.dispose(),ne.dispose(),Ae.dispose(),he.dispose(),he.removeEventListener("sessionstart",en),he.removeEventListener("sessionend",Bn),An.stop()};function Ie(L){L.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),E=!0}function Ne(){console.log("THREE.WebGLRenderer: Context Restored."),E=!1;const L=Ue.autoReset,se=ke.enabled,ue=ke.autoUpdate,ie=ke.needsUpdate,oe=ke.type;Te(),Ue.autoReset=L,ke.enabled=se,ke.autoUpdate=ue,ke.needsUpdate=ie,ke.type=oe}function De(L){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",L.statusMessage)}function tt(L){const se=L.target;se.removeEventListener("dispose",tt),vt(se)}function vt(L){at(L),_e.remove(L)}function at(L){const se=_e.get(L).programs;se!==void 0&&(se.forEach(function(ue){Ae.releaseProgram(ue)}),L.isShaderMaterial&&Ae.releaseShaderCache(L))}this.renderBufferDirect=function(L,se,ue,ie,oe,Oe){se===null&&(se=we);const Ge=oe.isMesh&&oe.matrixWorld.determinant()<0,je=Go(L,se,ue,ie,oe);ce.setMaterial(ie,Ge);let Je=ue.index,gt=1;if(ie.wireframe===!0){if(Je=le.getWireframeAttribute(ue),Je===void 0)return;gt=2}const ft=ue.drawRange,lt=ue.attributes.position;let wt=ft.start*gt,Ut=(ft.start+ft.count)*gt;Oe!==null&&(wt=Math.max(wt,Oe.start*gt),Ut=Math.min(Ut,(Oe.start+Oe.count)*gt)),Je!==null?(wt=Math.max(wt,0),Ut=Math.min(Ut,Je.count)):lt!=null&&(wt=Math.max(wt,0),Ut=Math.min(Ut,lt.count));const $t=Ut-wt;if($t<0||$t===1/0)return;bt.setup(oe,ie,je,ue,Je);let Zt,Dt=Pe;if(Je!==null&&(Zt=ae.get(Je),Dt=ct,Dt.setIndex(Zt)),oe.isMesh)ie.wireframe===!0?(ce.setLineWidth(ie.wireframeLinewidth*me()),Dt.setMode(z.LINES)):Dt.setMode(z.TRIANGLES);else if(oe.isLine){let ht=ie.linewidth;ht===void 0&&(ht=1),ce.setLineWidth(ht*me()),oe.isLineSegments?Dt.setMode(z.LINES):oe.isLineLoop?Dt.setMode(z.LINE_LOOP):Dt.setMode(z.LINE_STRIP)}else oe.isPoints?Dt.setMode(z.POINTS):oe.isSprite&&Dt.setMode(z.TRIANGLES);if(oe.isBatchedMesh)if(oe._multiDrawInstances!==null)Dt.renderMultiDrawInstances(oe._multiDrawStarts,oe._multiDrawCounts,oe._multiDrawCount,oe._multiDrawInstances);else if(de.get("WEBGL_multi_draw"))Dt.renderMultiDraw(oe._multiDrawStarts,oe._multiDrawCounts,oe._multiDrawCount);else{const ht=oe._multiDrawStarts,sn=oe._multiDrawCounts,Rt=oe._multiDrawCount,Cn=Je?ae.get(Je).bytesPerElement:1,Wt=_e.get(ie).currentProgram.getUniforms();for(let mn=0;mn<Rt;mn++)Wt.setValue(z,"_gl_DrawID",mn),Dt.render(ht[mn]/Cn,sn[mn])}else if(oe.isInstancedMesh)Dt.renderInstances(wt,$t,oe.count);else if(ue.isInstancedBufferGeometry){const ht=ue._maxInstanceCount!==void 0?ue._maxInstanceCount:1/0,sn=Math.min(ue.instanceCount,ht);Dt.renderInstances(wt,$t,sn)}else Dt.render(wt,$t)};function et(L,se,ue){L.transparent===!0&&L.side===Li&&L.forceSinglePass===!1?(L.side=Wn,L.needsUpdate=!0,ni(L,se,ue),L.side=ar,L.needsUpdate=!0,ni(L,se,ue),L.side=Li):ni(L,se,ue)}this.compile=function(L,se,ue=null){ue===null&&(ue=L),g=He.get(ue),g.init(se),y.push(g),ue.traverseVisible(function(oe){oe.isLight&&oe.layers.test(se.layers)&&(g.pushLight(oe),oe.castShadow&&g.pushShadow(oe))}),L!==ue&&L.traverseVisible(function(oe){oe.isLight&&oe.layers.test(se.layers)&&(g.pushLight(oe),oe.castShadow&&g.pushShadow(oe))}),g.setupLights();const ie=new Set;return L.traverse(function(oe){if(!(oe.isMesh||oe.isPoints||oe.isLine||oe.isSprite))return;const Oe=oe.material;if(Oe)if(Array.isArray(Oe))for(let Ge=0;Ge<Oe.length;Ge++){const je=Oe[Ge];et(je,ue,oe),ie.add(je)}else et(Oe,ue,oe),ie.add(Oe)}),y.pop(),g=null,ie},this.compileAsync=function(L,se,ue=null){const ie=this.compile(L,se,ue);return new Promise(oe=>{function Oe(){if(ie.forEach(function(Ge){_e.get(Ge).currentProgram.isReady()&&ie.delete(Ge)}),ie.size===0){oe(L);return}setTimeout(Oe,10)}de.get("KHR_parallel_shader_compile")!==null?Oe():setTimeout(Oe,10)})};let Ht=null;function jt(L){Ht&&Ht(L)}function en(){An.stop()}function Bn(){An.start()}const An=new T_;An.setAnimationLoop(jt),typeof self<"u"&&An.setContext(self),this.setAnimationLoop=function(L){Ht=L,he.setAnimationLoop(L),L===null?An.stop():An.start()},he.addEventListener("sessionstart",en),he.addEventListener("sessionend",Bn),this.render=function(L,se){if(se!==void 0&&se.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(E===!0)return;if(L.matrixWorldAutoUpdate===!0&&L.updateMatrixWorld(),se.parent===null&&se.matrixWorldAutoUpdate===!0&&se.updateMatrixWorld(),he.enabled===!0&&he.isPresenting===!0&&(he.cameraAutoUpdate===!0&&he.updateCamera(se),se=he.getCamera()),L.isScene===!0&&L.onBeforeRender(_,L,se,T),g=He.get(L,y.length),g.init(se),y.push(g),te.multiplyMatrices(se.projectionMatrix,se.matrixWorldInverse),V.setFromProjectionMatrix(te),Q=this.localClippingEnabled,W=Re.init(this.clippingPlanes,Q),m=Ce.get(L,x.length),m.init(),x.push(m),he.enabled===!0&&he.isPresenting===!0){const Oe=_.xr.getDepthSensingMesh();Oe!==null&&Jn(Oe,se,-1/0,_.sortObjects)}Jn(L,se,0,_.sortObjects),m.finish(),_.sortObjects===!0&&m.sort(j,J),re=he.enabled===!1||he.isPresenting===!1||he.hasDepthSensing()===!1,re&&Fe.addToRenderList(m,L),this.info.render.frame++,W===!0&&Re.beginShadows();const ue=g.state.shadowsArray;ke.render(ue,L,se),W===!0&&Re.endShadows(),this.info.autoReset===!0&&this.info.reset();const ie=m.opaque,oe=m.transmissive;if(g.setupLights(),se.isArrayCamera){const Oe=se.cameras;if(oe.length>0)for(let Ge=0,je=Oe.length;Ge<je;Ge++){const Je=Oe[Ge];_i(ie,oe,L,Je)}re&&Fe.render(L);for(let Ge=0,je=Oe.length;Ge<je;Ge++){const Je=Oe[Ge];vi(m,L,Je,Je.viewport)}}else oe.length>0&&_i(ie,oe,L,se),re&&Fe.render(L),vi(m,L,se);T!==null&&M===0&&(P.updateMultisampleRenderTarget(T),P.updateRenderTargetMipmap(T)),L.isScene===!0&&L.onAfterRender(_,L,se),bt.resetDefaultState(),S=-1,b=null,y.pop(),y.length>0?(g=y[y.length-1],W===!0&&Re.setGlobalState(_.clippingPlanes,g.state.camera)):g=null,x.pop(),x.length>0?m=x[x.length-1]:m=null};function Jn(L,se,ue,ie){if(L.visible===!1)return;if(L.layers.test(se.layers)){if(L.isGroup)ue=L.renderOrder;else if(L.isLOD)L.autoUpdate===!0&&L.update(se);else if(L.isLight)g.pushLight(L),L.castShadow&&g.pushShadow(L);else if(L.isSprite){if(!L.frustumCulled||V.intersectsSprite(L)){ie&&be.setFromMatrixPosition(L.matrixWorld).applyMatrix4(te);const Ge=fe.update(L),je=L.material;je.visible&&m.push(L,Ge,je,ue,be.z,null)}}else if((L.isMesh||L.isLine||L.isPoints)&&(!L.frustumCulled||V.intersectsObject(L))){const Ge=fe.update(L),je=L.material;if(ie&&(L.boundingSphere!==void 0?(L.boundingSphere===null&&L.computeBoundingSphere(),be.copy(L.boundingSphere.center)):(Ge.boundingSphere===null&&Ge.computeBoundingSphere(),be.copy(Ge.boundingSphere.center)),be.applyMatrix4(L.matrixWorld).applyMatrix4(te)),Array.isArray(je)){const Je=Ge.groups;for(let gt=0,ft=Je.length;gt<ft;gt++){const lt=Je[gt],wt=je[lt.materialIndex];wt&&wt.visible&&m.push(L,Ge,wt,ue,be.z,lt)}}else je.visible&&m.push(L,Ge,je,ue,be.z,null)}}const Oe=L.children;for(let Ge=0,je=Oe.length;Ge<je;Ge++)Jn(Oe[Ge],se,ue,ie)}function vi(L,se,ue,ie){const oe=L.opaque,Oe=L.transmissive,Ge=L.transparent;g.setupLightsView(ue),W===!0&&Re.setGlobalState(_.clippingPlanes,ue),ie&&ce.viewport(I.copy(ie)),oe.length>0&&zn(oe,se,ue),Oe.length>0&&zn(Oe,se,ue),Ge.length>0&&zn(Ge,se,ue),ce.buffers.depth.setTest(!0),ce.buffers.depth.setMask(!0),ce.buffers.color.setMask(!0),ce.setPolygonOffset(!1)}function _i(L,se,ue,ie){if((ue.isScene===!0?ue.overrideMaterial:null)!==null)return;g.state.transmissionRenderTarget[ie.id]===void 0&&(g.state.transmissionRenderTarget[ie.id]=new Ni(1,1,{generateMipmaps:!0,type:de.has("EXT_color_buffer_half_float")||de.has("EXT_color_buffer_float")?No:lr,minFilter:Wi,samples:4,stencilBuffer:r,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:It.workingColorSpace}));const Oe=g.state.transmissionRenderTarget[ie.id],Ge=ie.viewport||I;Oe.setSize(Ge.z*_.transmissionResolutionScale,Ge.w*_.transmissionResolutionScale);const je=_.getRenderTarget();_.setRenderTarget(Oe),_.getClearColor(H),$=_.getClearAlpha(),$<1&&_.setClearColor(16777215,.5),_.clear(),re&&Fe.render(ue);const Je=_.toneMapping;_.toneMapping=rr;const gt=ie.viewport;if(ie.viewport!==void 0&&(ie.viewport=void 0),g.setupLightsView(ie),W===!0&&Re.setGlobalState(_.clippingPlanes,ie),zn(L,ue,ie),P.updateMultisampleRenderTarget(Oe),P.updateRenderTargetMipmap(Oe),de.has("WEBGL_multisampled_render_to_texture")===!1){let ft=!1;for(let lt=0,wt=se.length;lt<wt;lt++){const Ut=se[lt],$t=Ut.object,Zt=Ut.geometry,Dt=Ut.material,ht=Ut.group;if(Dt.side===Li&&$t.layers.test(ie.layers)){const sn=Dt.side;Dt.side=Wn,Dt.needsUpdate=!0,pn($t,ue,ie,Zt,Dt,ht),Dt.side=sn,Dt.needsUpdate=!0,ft=!0}}ft===!0&&(P.updateMultisampleRenderTarget(Oe),P.updateRenderTargetMipmap(Oe))}_.setRenderTarget(je),_.setClearColor(H,$),gt!==void 0&&(ie.viewport=gt),_.toneMapping=Je}function zn(L,se,ue){const ie=se.isScene===!0?se.overrideMaterial:null;for(let oe=0,Oe=L.length;oe<Oe;oe++){const Ge=L[oe],je=Ge.object,Je=Ge.geometry,gt=ie===null?Ge.material:ie,ft=Ge.group;je.layers.test(ue.layers)&&pn(je,se,ue,Je,gt,ft)}}function pn(L,se,ue,ie,oe,Oe){L.onBeforeRender(_,se,ue,ie,oe,Oe),L.modelViewMatrix.multiplyMatrices(ue.matrixWorldInverse,L.matrixWorld),L.normalMatrix.getNormalMatrix(L.modelViewMatrix),oe.onBeforeRender(_,se,ue,ie,L,Oe),oe.transparent===!0&&oe.side===Li&&oe.forceSinglePass===!1?(oe.side=Wn,oe.needsUpdate=!0,_.renderBufferDirect(ue,se,ie,oe,L,Oe),oe.side=ar,oe.needsUpdate=!0,_.renderBufferDirect(ue,se,ie,oe,L,Oe),oe.side=Li):_.renderBufferDirect(ue,se,ie,oe,L,Oe),L.onAfterRender(_,se,ue,ie,oe,Oe)}function ni(L,se,ue){se.isScene!==!0&&(se=we);const ie=_e.get(L),oe=g.state.lights,Oe=g.state.shadowsArray,Ge=oe.state.version,je=Ae.getParameters(L,oe.state,Oe,se,ue),Je=Ae.getProgramCacheKey(je);let gt=ie.programs;ie.environment=L.isMeshStandardMaterial?se.environment:null,ie.fog=se.fog,ie.envMap=(L.isMeshStandardMaterial?ee:R).get(L.envMap||ie.environment),ie.envMapRotation=ie.environment!==null&&L.envMap===null?se.environmentRotation:L.envMapRotation,gt===void 0&&(L.addEventListener("dispose",tt),gt=new Map,ie.programs=gt);let ft=gt.get(Je);if(ft!==void 0){if(ie.currentProgram===ft&&ie.lightsStateVersion===Ge)return Ar(L,je),ft}else je.uniforms=Ae.getUniforms(L),L.onBeforeCompile(je,_),ft=Ae.acquireProgram(je,Je),gt.set(Je,ft),ie.uniforms=je.uniforms;const lt=ie.uniforms;return(!L.isShaderMaterial&&!L.isRawShaderMaterial||L.clipping===!0)&&(lt.clippingPlanes=Re.uniform),Ar(L,je),ie.needsLights=Cr(L),ie.lightsStateVersion=Ge,ie.needsLights&&(lt.ambientLightColor.value=oe.state.ambient,lt.lightProbe.value=oe.state.probe,lt.directionalLights.value=oe.state.directional,lt.directionalLightShadows.value=oe.state.directionalShadow,lt.spotLights.value=oe.state.spot,lt.spotLightShadows.value=oe.state.spotShadow,lt.rectAreaLights.value=oe.state.rectArea,lt.ltc_1.value=oe.state.rectAreaLTC1,lt.ltc_2.value=oe.state.rectAreaLTC2,lt.pointLights.value=oe.state.point,lt.pointLightShadows.value=oe.state.pointShadow,lt.hemisphereLights.value=oe.state.hemi,lt.directionalShadowMap.value=oe.state.directionalShadowMap,lt.directionalShadowMatrix.value=oe.state.directionalShadowMatrix,lt.spotShadowMap.value=oe.state.spotShadowMap,lt.spotLightMatrix.value=oe.state.spotLightMatrix,lt.spotLightMap.value=oe.state.spotLightMap,lt.pointShadowMap.value=oe.state.pointShadowMap,lt.pointShadowMatrix.value=oe.state.pointShadowMatrix),ie.currentProgram=ft,ie.uniformsList=null,ft}function Kr(L){if(L.uniformsList===null){const se=L.currentProgram.getUniforms();L.uniformsList=cc.seqWithValue(se.seq,L.uniforms)}return L.uniformsList}function Ar(L,se){const ue=_e.get(L);ue.outputColorSpace=se.outputColorSpace,ue.batching=se.batching,ue.batchingColor=se.batchingColor,ue.instancing=se.instancing,ue.instancingColor=se.instancingColor,ue.instancingMorph=se.instancingMorph,ue.skinning=se.skinning,ue.morphTargets=se.morphTargets,ue.morphNormals=se.morphNormals,ue.morphColors=se.morphColors,ue.morphTargetsCount=se.morphTargetsCount,ue.numClippingPlanes=se.numClippingPlanes,ue.numIntersection=se.numClipIntersection,ue.vertexAlphas=se.vertexAlphas,ue.vertexTangents=se.vertexTangents,ue.toneMapping=se.toneMapping}function Go(L,se,ue,ie,oe){se.isScene!==!0&&(se=we),P.resetTextureUnits();const Oe=se.fog,Ge=ie.isMeshStandardMaterial?se.environment:null,je=T===null?_.outputColorSpace:T.isXRRenderTarget===!0?T.texture.colorSpace:ks,Je=(ie.isMeshStandardMaterial?ee:R).get(ie.envMap||Ge),gt=ie.vertexColors===!0&&!!ue.attributes.color&&ue.attributes.color.itemSize===4,ft=!!ue.attributes.tangent&&(!!ie.normalMap||ie.anisotropy>0),lt=!!ue.morphAttributes.position,wt=!!ue.morphAttributes.normal,Ut=!!ue.morphAttributes.color;let $t=rr;ie.toneMapped&&(T===null||T.isXRRenderTarget===!0)&&($t=_.toneMapping);const Zt=ue.morphAttributes.position||ue.morphAttributes.normal||ue.morphAttributes.color,Dt=Zt!==void 0?Zt.length:0,ht=_e.get(ie),sn=g.state.lights;if(W===!0&&(Q===!0||L!==b)){const on=L===b&&ie.id===S;Re.setState(ie,L,on)}let Rt=!1;ie.version===ht.__version?(ht.needsLights&&ht.lightsStateVersion!==sn.state.version||ht.outputColorSpace!==je||oe.isBatchedMesh&&ht.batching===!1||!oe.isBatchedMesh&&ht.batching===!0||oe.isBatchedMesh&&ht.batchingColor===!0&&oe.colorTexture===null||oe.isBatchedMesh&&ht.batchingColor===!1&&oe.colorTexture!==null||oe.isInstancedMesh&&ht.instancing===!1||!oe.isInstancedMesh&&ht.instancing===!0||oe.isSkinnedMesh&&ht.skinning===!1||!oe.isSkinnedMesh&&ht.skinning===!0||oe.isInstancedMesh&&ht.instancingColor===!0&&oe.instanceColor===null||oe.isInstancedMesh&&ht.instancingColor===!1&&oe.instanceColor!==null||oe.isInstancedMesh&&ht.instancingMorph===!0&&oe.morphTexture===null||oe.isInstancedMesh&&ht.instancingMorph===!1&&oe.morphTexture!==null||ht.envMap!==Je||ie.fog===!0&&ht.fog!==Oe||ht.numClippingPlanes!==void 0&&(ht.numClippingPlanes!==Re.numPlanes||ht.numIntersection!==Re.numIntersection)||ht.vertexAlphas!==gt||ht.vertexTangents!==ft||ht.morphTargets!==lt||ht.morphNormals!==wt||ht.morphColors!==Ut||ht.toneMapping!==$t||ht.morphTargetsCount!==Dt)&&(Rt=!0):(Rt=!0,ht.__version=ie.version);let Cn=ht.currentProgram;Rt===!0&&(Cn=ni(ie,se,oe));let Wt=!1,mn=!1,Rn=!1;const Yt=Cn.getUniforms(),xn=ht.uniforms;if(ce.useProgram(Cn.program)&&(Wt=!0,mn=!0,Rn=!0),ie.id!==S&&(S=ie.id,mn=!0),Wt||b!==L){ce.buffers.depth.getReversed()?(X.copy(L.projectionMatrix),tx(X),nx(X),Yt.setValue(z,"projectionMatrix",X)):Yt.setValue(z,"projectionMatrix",L.projectionMatrix),Yt.setValue(z,"viewMatrix",L.matrixWorldInverse);const tn=Yt.map.cameraPosition;tn!==void 0&&tn.setValue(z,ge.setFromMatrixPosition(L.matrixWorld)),Ee.logarithmicDepthBuffer&&Yt.setValue(z,"logDepthBufFC",2/(Math.log(L.far+1)/Math.LN2)),(ie.isMeshPhongMaterial||ie.isMeshToonMaterial||ie.isMeshLambertMaterial||ie.isMeshBasicMaterial||ie.isMeshStandardMaterial||ie.isShaderMaterial)&&Yt.setValue(z,"isOrthographic",L.isOrthographicCamera===!0),b!==L&&(b=L,mn=!0,Rn=!0)}if(oe.isSkinnedMesh){Yt.setOptional(z,oe,"bindMatrix"),Yt.setOptional(z,oe,"bindMatrixInverse");const on=oe.skeleton;on&&(on.boneTexture===null&&on.computeBoneTexture(),Yt.setValue(z,"boneTexture",on.boneTexture,P))}oe.isBatchedMesh&&(Yt.setOptional(z,oe,"batchingTexture"),Yt.setValue(z,"batchingTexture",oe._matricesTexture,P),Yt.setOptional(z,oe,"batchingIdTexture"),Yt.setValue(z,"batchingIdTexture",oe._indirectTexture,P),Yt.setOptional(z,oe,"batchingColorTexture"),oe._colorsTexture!==null&&Yt.setValue(z,"batchingColorTexture",oe._colorsTexture,P));const un=ue.morphAttributes;if((un.position!==void 0||un.normal!==void 0||un.color!==void 0)&&Ve.update(oe,ue,Cn),(mn||ht.receiveShadow!==oe.receiveShadow)&&(ht.receiveShadow=oe.receiveShadow,Yt.setValue(z,"receiveShadow",oe.receiveShadow)),ie.isMeshGouraudMaterial&&ie.envMap!==null&&(xn.envMap.value=Je,xn.flipEnvMap.value=Je.isCubeTexture&&Je.isRenderTargetTexture===!1?-1:1),ie.isMeshStandardMaterial&&ie.envMap===null&&se.environment!==null&&(xn.envMapIntensity.value=se.environmentIntensity),mn&&(Yt.setValue(z,"toneMappingExposure",_.toneMappingExposure),ht.needsLights&&Zs(xn,Rn),Oe&&ie.fog===!0&&ye.refreshFogUniforms(xn,Oe),ye.refreshMaterialUniforms(xn,ie,q,Z,g.state.transmissionRenderTarget[L.id]),cc.upload(z,Kr(ht),xn,P)),ie.isShaderMaterial&&ie.uniformsNeedUpdate===!0&&(cc.upload(z,Kr(ht),xn,P),ie.uniformsNeedUpdate=!1),ie.isSpriteMaterial&&Yt.setValue(z,"center",oe.center),Yt.setValue(z,"modelViewMatrix",oe.modelViewMatrix),Yt.setValue(z,"normalMatrix",oe.normalMatrix),Yt.setValue(z,"modelMatrix",oe.matrixWorld),ie.isShaderMaterial||ie.isRawShaderMaterial){const on=ie.uniformsGroups;for(let tn=0,Fi=on.length;tn<Fi;tn++){const yi=on[tn];ne.update(yi,Cn),ne.bind(yi,Cn)}}return Cn}function Zs(L,se){L.ambientLightColor.needsUpdate=se,L.lightProbe.needsUpdate=se,L.directionalLights.needsUpdate=se,L.directionalLightShadows.needsUpdate=se,L.pointLights.needsUpdate=se,L.pointLightShadows.needsUpdate=se,L.spotLights.needsUpdate=se,L.spotLightShadows.needsUpdate=se,L.rectAreaLights.needsUpdate=se,L.hemisphereLights.needsUpdate=se}function Cr(L){return L.isMeshLambertMaterial||L.isMeshToonMaterial||L.isMeshPhongMaterial||L.isMeshStandardMaterial||L.isShadowMaterial||L.isShaderMaterial&&L.lights===!0}this.getActiveCubeFace=function(){return w},this.getActiveMipmapLevel=function(){return M},this.getRenderTarget=function(){return T},this.setRenderTargetTextures=function(L,se,ue){_e.get(L.texture).__webglTexture=se,_e.get(L.depthTexture).__webglTexture=ue;const ie=_e.get(L);ie.__hasExternalTextures=!0,ie.__autoAllocateDepthBuffer=ue===void 0,ie.__autoAllocateDepthBuffer||de.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),ie.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(L,se){const ue=_e.get(L);ue.__webglFramebuffer=se,ue.__useDefaultFramebuffer=se===void 0};const Qr=z.createFramebuffer();this.setRenderTarget=function(L,se=0,ue=0){T=L,w=se,M=ue;let ie=!0,oe=null,Oe=!1,Ge=!1;if(L){const Je=_e.get(L);if(Je.__useDefaultFramebuffer!==void 0)ce.bindFramebuffer(z.FRAMEBUFFER,null),ie=!1;else if(Je.__webglFramebuffer===void 0)P.setupRenderTarget(L);else if(Je.__hasExternalTextures)P.rebindTextures(L,_e.get(L.texture).__webglTexture,_e.get(L.depthTexture).__webglTexture);else if(L.depthBuffer){const lt=L.depthTexture;if(Je.__boundDepthTexture!==lt){if(lt!==null&&_e.has(lt)&&(L.width!==lt.image.width||L.height!==lt.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");P.setupDepthRenderbuffer(L)}}const gt=L.texture;(gt.isData3DTexture||gt.isDataArrayTexture||gt.isCompressedArrayTexture)&&(Ge=!0);const ft=_e.get(L).__webglFramebuffer;L.isWebGLCubeRenderTarget?(Array.isArray(ft[se])?oe=ft[se][ue]:oe=ft[se],Oe=!0):L.samples>0&&P.useMultisampledRTT(L)===!1?oe=_e.get(L).__webglMultisampledFramebuffer:Array.isArray(ft)?oe=ft[ue]:oe=ft,I.copy(L.viewport),D.copy(L.scissor),G=L.scissorTest}else I.copy(B).multiplyScalar(q).floor(),D.copy(Y).multiplyScalar(q).floor(),G=K;if(ue!==0&&(oe=Qr),ce.bindFramebuffer(z.FRAMEBUFFER,oe)&&ie&&ce.drawBuffers(L,oe),ce.viewport(I),ce.scissor(D),ce.setScissorTest(G),Oe){const Je=_e.get(L.texture);z.framebufferTexture2D(z.FRAMEBUFFER,z.COLOR_ATTACHMENT0,z.TEXTURE_CUBE_MAP_POSITIVE_X+se,Je.__webglTexture,ue)}else if(Ge){const Je=_e.get(L.texture),gt=se;z.framebufferTextureLayer(z.FRAMEBUFFER,z.COLOR_ATTACHMENT0,Je.__webglTexture,ue,gt)}else if(L!==null&&ue!==0){const Je=_e.get(L.texture);z.framebufferTexture2D(z.FRAMEBUFFER,z.COLOR_ATTACHMENT0,z.TEXTURE_2D,Je.__webglTexture,ue)}S=-1},this.readRenderTargetPixels=function(L,se,ue,ie,oe,Oe,Ge){if(!(L&&L.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let je=_e.get(L).__webglFramebuffer;if(L.isWebGLCubeRenderTarget&&Ge!==void 0&&(je=je[Ge]),je){ce.bindFramebuffer(z.FRAMEBUFFER,je);try{const Je=L.texture,gt=Je.format,ft=Je.type;if(!Ee.textureFormatReadable(gt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!Ee.textureTypeReadable(ft)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}se>=0&&se<=L.width-ie&&ue>=0&&ue<=L.height-oe&&z.readPixels(se,ue,ie,oe,Ke.convert(gt),Ke.convert(ft),Oe)}finally{const Je=T!==null?_e.get(T).__webglFramebuffer:null;ce.bindFramebuffer(z.FRAMEBUFFER,Je)}}},this.readRenderTargetPixelsAsync=async function(L,se,ue,ie,oe,Oe,Ge){if(!(L&&L.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let je=_e.get(L).__webglFramebuffer;if(L.isWebGLCubeRenderTarget&&Ge!==void 0&&(je=je[Ge]),je){const Je=L.texture,gt=Je.format,ft=Je.type;if(!Ee.textureFormatReadable(gt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!Ee.textureTypeReadable(ft))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(se>=0&&se<=L.width-ie&&ue>=0&&ue<=L.height-oe){ce.bindFramebuffer(z.FRAMEBUFFER,je);const lt=z.createBuffer();z.bindBuffer(z.PIXEL_PACK_BUFFER,lt),z.bufferData(z.PIXEL_PACK_BUFFER,Oe.byteLength,z.STREAM_READ),z.readPixels(se,ue,ie,oe,Ke.convert(gt),Ke.convert(ft),0);const wt=T!==null?_e.get(T).__webglFramebuffer:null;ce.bindFramebuffer(z.FRAMEBUFFER,wt);const Ut=z.fenceSync(z.SYNC_GPU_COMMANDS_COMPLETE,0);return z.flush(),await ex(z,Ut,4),z.bindBuffer(z.PIXEL_PACK_BUFFER,lt),z.getBufferSubData(z.PIXEL_PACK_BUFFER,0,Oe),z.deleteBuffer(lt),z.deleteSync(Ut),Oe}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(L,se=null,ue=0){L.isTexture!==!0&&(bo("WebGLRenderer: copyFramebufferToTexture function signature has changed."),se=arguments[0]||null,L=arguments[1]);const ie=Math.pow(2,-ue),oe=Math.floor(L.image.width*ie),Oe=Math.floor(L.image.height*ie),Ge=se!==null?se.x:0,je=se!==null?se.y:0;P.setTexture2D(L,0),z.copyTexSubImage2D(z.TEXTURE_2D,ue,0,0,Ge,je,oe,Oe),ce.unbindTexture()};const Ho=z.createFramebuffer(),Js=z.createFramebuffer();this.copyTextureToTexture=function(L,se,ue=null,ie=null,oe=0,Oe=null){L.isTexture!==!0&&(bo("WebGLRenderer: copyTextureToTexture function signature has changed."),ie=arguments[0]||null,L=arguments[1],se=arguments[2],Oe=arguments[3]||0,ue=null),Oe===null&&(oe!==0?(bo("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),Oe=oe,oe=0):Oe=0);let Ge,je,Je,gt,ft,lt,wt,Ut,$t;const Zt=L.isCompressedTexture?L.mipmaps[Oe]:L.image;if(ue!==null)Ge=ue.max.x-ue.min.x,je=ue.max.y-ue.min.y,Je=ue.isBox3?ue.max.z-ue.min.z:1,gt=ue.min.x,ft=ue.min.y,lt=ue.isBox3?ue.min.z:0;else{const un=Math.pow(2,-oe);Ge=Math.floor(Zt.width*un),je=Math.floor(Zt.height*un),L.isDataArrayTexture?Je=Zt.depth:L.isData3DTexture?Je=Math.floor(Zt.depth*un):Je=1,gt=0,ft=0,lt=0}ie!==null?(wt=ie.x,Ut=ie.y,$t=ie.z):(wt=0,Ut=0,$t=0);const Dt=Ke.convert(se.format),ht=Ke.convert(se.type);let sn;se.isData3DTexture?(P.setTexture3D(se,0),sn=z.TEXTURE_3D):se.isDataArrayTexture||se.isCompressedArrayTexture?(P.setTexture2DArray(se,0),sn=z.TEXTURE_2D_ARRAY):(P.setTexture2D(se,0),sn=z.TEXTURE_2D),z.pixelStorei(z.UNPACK_FLIP_Y_WEBGL,se.flipY),z.pixelStorei(z.UNPACK_PREMULTIPLY_ALPHA_WEBGL,se.premultiplyAlpha),z.pixelStorei(z.UNPACK_ALIGNMENT,se.unpackAlignment);const Rt=z.getParameter(z.UNPACK_ROW_LENGTH),Cn=z.getParameter(z.UNPACK_IMAGE_HEIGHT),Wt=z.getParameter(z.UNPACK_SKIP_PIXELS),mn=z.getParameter(z.UNPACK_SKIP_ROWS),Rn=z.getParameter(z.UNPACK_SKIP_IMAGES);z.pixelStorei(z.UNPACK_ROW_LENGTH,Zt.width),z.pixelStorei(z.UNPACK_IMAGE_HEIGHT,Zt.height),z.pixelStorei(z.UNPACK_SKIP_PIXELS,gt),z.pixelStorei(z.UNPACK_SKIP_ROWS,ft),z.pixelStorei(z.UNPACK_SKIP_IMAGES,lt);const Yt=L.isDataArrayTexture||L.isData3DTexture,xn=se.isDataArrayTexture||se.isData3DTexture;if(L.isDepthTexture){const un=_e.get(L),on=_e.get(se),tn=_e.get(un.__renderTarget),Fi=_e.get(on.__renderTarget);ce.bindFramebuffer(z.READ_FRAMEBUFFER,tn.__webglFramebuffer),ce.bindFramebuffer(z.DRAW_FRAMEBUFFER,Fi.__webglFramebuffer);for(let yi=0;yi<Je;yi++)Yt&&(z.framebufferTextureLayer(z.READ_FRAMEBUFFER,z.COLOR_ATTACHMENT0,_e.get(L).__webglTexture,oe,lt+yi),z.framebufferTextureLayer(z.DRAW_FRAMEBUFFER,z.COLOR_ATTACHMENT0,_e.get(se).__webglTexture,Oe,$t+yi)),z.blitFramebuffer(gt,ft,Ge,je,wt,Ut,Ge,je,z.DEPTH_BUFFER_BIT,z.NEAREST);ce.bindFramebuffer(z.READ_FRAMEBUFFER,null),ce.bindFramebuffer(z.DRAW_FRAMEBUFFER,null)}else if(oe!==0||L.isRenderTargetTexture||_e.has(L)){const un=_e.get(L),on=_e.get(se);ce.bindFramebuffer(z.READ_FRAMEBUFFER,Ho),ce.bindFramebuffer(z.DRAW_FRAMEBUFFER,Js);for(let tn=0;tn<Je;tn++)Yt?z.framebufferTextureLayer(z.READ_FRAMEBUFFER,z.COLOR_ATTACHMENT0,un.__webglTexture,oe,lt+tn):z.framebufferTexture2D(z.READ_FRAMEBUFFER,z.COLOR_ATTACHMENT0,z.TEXTURE_2D,un.__webglTexture,oe),xn?z.framebufferTextureLayer(z.DRAW_FRAMEBUFFER,z.COLOR_ATTACHMENT0,on.__webglTexture,Oe,$t+tn):z.framebufferTexture2D(z.DRAW_FRAMEBUFFER,z.COLOR_ATTACHMENT0,z.TEXTURE_2D,on.__webglTexture,Oe),oe!==0?z.blitFramebuffer(gt,ft,Ge,je,wt,Ut,Ge,je,z.COLOR_BUFFER_BIT,z.NEAREST):xn?z.copyTexSubImage3D(sn,Oe,wt,Ut,$t+tn,gt,ft,Ge,je):z.copyTexSubImage2D(sn,Oe,wt,Ut,gt,ft,Ge,je);ce.bindFramebuffer(z.READ_FRAMEBUFFER,null),ce.bindFramebuffer(z.DRAW_FRAMEBUFFER,null)}else xn?L.isDataTexture||L.isData3DTexture?z.texSubImage3D(sn,Oe,wt,Ut,$t,Ge,je,Je,Dt,ht,Zt.data):se.isCompressedArrayTexture?z.compressedTexSubImage3D(sn,Oe,wt,Ut,$t,Ge,je,Je,Dt,Zt.data):z.texSubImage3D(sn,Oe,wt,Ut,$t,Ge,je,Je,Dt,ht,Zt):L.isDataTexture?z.texSubImage2D(z.TEXTURE_2D,Oe,wt,Ut,Ge,je,Dt,ht,Zt.data):L.isCompressedTexture?z.compressedTexSubImage2D(z.TEXTURE_2D,Oe,wt,Ut,Zt.width,Zt.height,Dt,Zt.data):z.texSubImage2D(z.TEXTURE_2D,Oe,wt,Ut,Ge,je,Dt,ht,Zt);z.pixelStorei(z.UNPACK_ROW_LENGTH,Rt),z.pixelStorei(z.UNPACK_IMAGE_HEIGHT,Cn),z.pixelStorei(z.UNPACK_SKIP_PIXELS,Wt),z.pixelStorei(z.UNPACK_SKIP_ROWS,mn),z.pixelStorei(z.UNPACK_SKIP_IMAGES,Rn),Oe===0&&se.generateMipmaps&&z.generateMipmap(sn),ce.unbindTexture()},this.copyTextureToTexture3D=function(L,se,ue=null,ie=null,oe=0){return L.isTexture!==!0&&(bo("WebGLRenderer: copyTextureToTexture3D function signature has changed."),ue=arguments[0]||null,ie=arguments[1]||null,L=arguments[2],se=arguments[3],oe=arguments[4]||0),bo('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(L,se,ue,ie,oe)},this.initRenderTarget=function(L){_e.get(L).__webglFramebuffer===void 0&&P.setupRenderTarget(L)},this.initTexture=function(L){L.isCubeTexture?P.setTextureCube(L,0):L.isData3DTexture?P.setTexture3D(L,0):L.isDataArrayTexture||L.isCompressedArrayTexture?P.setTexture2DArray(L,0):P.setTexture2D(L,0),ce.unbindTexture()},this.resetState=function(){w=0,M=0,T=null,ce.reset(),bt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Xi}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorspace=It._getDrawingBufferColorSpace(e),t.unpackColorSpace=It._getUnpackColorSpace()}}const rT=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:pv,AddEquation:zr,AddOperation:hv,AdditiveAnimationBlendMode:Jd,AdditiveBlending:hd,AgXToneMapping:bc,AlphaFormat:Wd,AlwaysCompare:Rv,AlwaysDepth:mc,AlwaysStencilFunc:pd,AmbientLight:Mf,AnimationAction:S_,AnimationClip:Gs,AnimationLoader:Eb,AnimationMixer:Qb,AnimationObjectGroup:Jb,AnimationUtils:bb,ArcCurve:Xv,ArrayCamera:y_,ArrowHelper:v1,AttachedBindMode:fd,Audio:x_,AudioAnalyser:zb,AudioContext:wf,AudioListener:Fb,AudioLoader:Lb,AxesHelper:_1,BackSide:Wn,BasicDepthPacking:bv,BasicShadowMap:ny,BatchedMesh:zv,Bone:Sh,BooleanKeyframeTrack:Ys,Box2:s1,Box3:yn,Box3Helper:m1,BoxGeometry:Xs,BoxHelper:p1,BufferAttribute:Et,BufferGeometry:yt,BufferGeometryLoader:__,ByteType:Vd,Cache:br,Camera:vh,CameraHelper:f1,CanvasTexture:Wv,CapsuleGeometry:Eh,CatmullRomCurve3:Yv,CineonToneMapping:fv,CircleGeometry:Th,ClampToEdgeWrapping:di,Clock:Ef,Color:ze,ColorKeyframeTrack:vf,ColorManagement:It,CompressedArrayTexture:Wx,CompressedCubeTexture:Xx,CompressedTexture:Mh,CompressedTextureLoader:Tb,ConeGeometry:Ah,ConstantAlphaFactor:av,ConstantColorFactor:sv,Controls:If,CubeCamera:Nv,CubeReflectionMapping:wr,CubeRefractionMapping:Hr,CubeTexture:ja,CubeTextureLoader:Ab,CubeUVReflectionMapping:Lo,CubicBezierCurve:af,CubicBezierCurve3:qv,CubicInterpolant:c_,CullFaceBack:cd,CullFaceFront:Wg,CullFaceFrontBack:ty,CullFaceNone:Hg,Curve:Ji,CurvePath:Zv,CustomBlending:Xg,CustomToneMapping:mv,CylinderGeometry:Fo,Cylindrical:r1,Data3DTexture:mh,DataArrayTexture:Ya,DataTexture:sr,DataTextureLoader:d_,DataUtils:vx,DecrementStencilOp:gy,DecrementWrapStencilOp:_y,DefaultLoadingManager:js,DepthFormat:Ps,DepthStencilFormat:Fs,DepthTexture:sf,DetachedBindMode:vv,DirectionalLight:Sf,DirectionalLightHelper:d1,DiscreteInterpolant:h_,DodecahedronGeometry:Ch,DoubleSide:Li,DstAlphaFactor:ev,DstColorFactor:nv,DynamicCopyUsage:Uy,DynamicDrawUsage:Ay,DynamicReadUsage:Py,EdgesGeometry:Jv,EllipseCurve:wh,EqualCompare:Ev,EqualDepth:vc,EqualStencilFunc:Sy,EquirectangularReflectionMapping:Ma,EquirectangularRefractionMapping:wa,Euler:Ri,EventDispatcher:cr,ExtrudeGeometry:Ph,FileLoader:qi,Float16BufferAttribute:wx,Float32BufferAttribute:qe,FloatType:fi,Fog:yh,FogExp2:_h,FramebufferTexture:Hx,FrontSide:ar,Frustum:Ka,GLBufferAttribute:i1,GLSL1:Ny,GLSL3:md,GreaterCompare:Tv,GreaterDepth:yc,GreaterEqualCompare:Cv,GreaterEqualDepth:_c,GreaterEqualStencilFunc:Ty,GreaterStencilFunc:wy,GridHelper:E_,Group:Yi,HalfFloatType:No,HemisphereLight:p_,HemisphereLightHelper:h1,IcosahedronGeometry:Ih,ImageBitmapLoader:Ub,ImageLoader:Fa,ImageUtils:Dv,IncrementStencilOp:my,IncrementWrapStencilOp:vy,InstancedBufferAttribute:Bs,InstancedBufferGeometry:zh,InstancedInterleavedBuffer:eh,InstancedMesh:Bv,Int16BufferAttribute:Sx,Int32BufferAttribute:Mx,Int8BufferAttribute:yx,IntType:ah,InterleavedBuffer:bh,InterleavedBufferAttribute:Ti,Interpolant:tl,InterpolateDiscrete:Ta,InterpolateLinear:jc,InterpolateSmooth:ac,InvertStencilOp:yy,KeepStencilOp:_s,KeyframeTrack:Ki,LOD:kv,LatheGeometry:Qa,Layers:gh,LessCompare:wv,LessDepth:gc,LessEqualCompare:Qd,LessEqualDepth:Ns,LessEqualStencilFunc:My,LessStencilFunc:by,Light:Zr,LightProbe:v_,Line:Tr,Line3:M_,LineBasicMaterial:Fn,LineCurve:lf,LineCurve3:jv,LineDashedMaterial:o_,LineLoop:Vv,LineSegments:Zi,LinearFilter:_n,LinearInterpolant:gf,LinearMipMapLinearFilter:oy,LinearMipMapNearestFilter:sy,LinearMipmapLinearFilter:Wi,LinearMipmapNearestFilter:ua,LinearSRGBColorSpace:ks,LinearToneMapping:uv,LinearTransfer:Ca,Loader:kn,LoaderUtils:$c,LoadingManager:_f,LoopOnce:_v,LoopPingPong:xv,LoopRepeat:yv,LuminanceAlphaFormat:qd,LuminanceFormat:Yd,MOUSE:Ai,Material:Zn,MaterialLoader:Bh,MathUtils:nr,Matrix2:Pf,Matrix3:St,Matrix4:rt,MaxEquation:Zg,Mesh:zt,MeshBasicMaterial:Xn,MeshDepthMaterial:el,MeshDistanceMaterial:kh,MeshLambertMaterial:pf,MeshMatcapMaterial:s_,MeshNormalMaterial:r_,MeshPhongMaterial:Qc,MeshPhysicalMaterial:n_,MeshStandardMaterial:ff,MeshToonMaterial:i_,MinEquation:jg,MirroredRepeatWrapping:Ea,MixOperation:cv,MultiplyBlending:dd,MultiplyOperation:Wa,NearestFilter:On,NearestMipMapLinearFilter:ry,NearestMipMapNearestFilter:iy,NearestMipmapLinearFilter:So,NearestMipmapNearestFilter:zd,NeutralToneMapping:gv,NeverCompare:Mv,NeverDepth:pc,NeverStencilFunc:xy,NoBlending:Sr,NoColorSpace:yr,NoToneMapping:rr,NormalAnimationBlendMode:fh,NormalBlending:Rs,NotEqualCompare:Av,NotEqualDepth:xc,NotEqualStencilFunc:Ey,NumberKeyframeTrack:Oa,Object3D:Ft,ObjectLoader:Ib,ObjectSpaceNormalMap:Sv,OctahedronGeometry:$a,OneFactor:Kg,OneMinusConstantAlphaFactor:lv,OneMinusConstantColorFactor:ov,OneMinusDstAlphaFactor:tv,OneMinusDstColorFactor:iv,OneMinusSrcAlphaFactor:fc,OneMinusSrcColorFactor:$g,OrthographicCamera:Jr,PCFShadowMap:Bd,PCFSoftShadowMap:ha,PMREMGenerator:Sd,Path:Da,PerspectiveCamera:vn,Plane:vr,PlaneGeometry:hr,PlaneHelper:g1,PointLight:bf,PointLightHelper:l1,Points:Gv,PointsMaterial:rf,PolarGridHelper:u1,PolyhedronGeometry:jr,PositionalAudio:Bb,PropertyBinding:kt,PropertyMixer:b_,QuadraticBezierCurve:cf,QuadraticBezierCurve3:hf,Quaternion:hn,QuaternionKeyframeTrack:Bo,QuaternionLinearInterpolant:u_,RED_GREEN_RGTC2_Format:Yc,RED_RGTC1_Format:Zd,REVISION:sh,RGBADepthPacking:Kd,RGBAFormat:ti,RGBAIntegerFormat:dh,RGBA_ASTC_10x10_Format:zc,RGBA_ASTC_10x5_Format:Fc,RGBA_ASTC_10x6_Format:kc,RGBA_ASTC_10x8_Format:Bc,RGBA_ASTC_12x10_Format:Vc,RGBA_ASTC_12x12_Format:Gc,RGBA_ASTC_4x4_Format:Rc,RGBA_ASTC_5x4_Format:Pc,RGBA_ASTC_5x5_Format:Ic,RGBA_ASTC_6x5_Format:Dc,RGBA_ASTC_6x6_Format:Uc,RGBA_ASTC_8x5_Format:Lc,RGBA_ASTC_8x6_Format:Nc,RGBA_ASTC_8x8_Format:Oc,RGBA_BPTC_Format:ga,RGBA_ETC2_EAC_Format:Cc,RGBA_PVRTC_2BPPV1_Format:Ec,RGBA_PVRTC_4BPPV1_Format:wc,RGBA_S3TC_DXT1_Format:fa,RGBA_S3TC_DXT3_Format:pa,RGBA_S3TC_DXT5_Format:ma,RGBDepthPacking:uy,RGBFormat:Xd,RGBIntegerFormat:ay,RGB_BPTC_SIGNED_Format:Hc,RGB_BPTC_UNSIGNED_Format:Wc,RGB_ETC1_Format:Tc,RGB_ETC2_Format:Ac,RGB_PVRTC_2BPPV1_Format:Mc,RGB_PVRTC_4BPPV1_Format:Sc,RGB_S3TC_DXT1_Format:da,RGDepthPacking:dy,RGFormat:jd,RGIntegerFormat:uh,RawShaderMaterial:t_,Ray:qr,Raycaster:Rf,RectAreaLight:m_,RedFormat:hh,RedIntegerFormat:Xa,ReinhardToneMapping:dv,RenderTarget:ph,RenderTarget3D:$b,RenderTargetArray:e1,RepeatWrapping:Hi,ReplaceStencilOp:py,ReverseSubtractEquation:qg,RingGeometry:Dh,SIGNED_RED_GREEN_RGTC2_Format:qc,SIGNED_RED_RGTC1_Format:Xc,SRGBColorSpace:nn,SRGBTransfer:qt,Scene:xh,ShaderChunk:mt,ShaderLib:$n,ShaderMaterial:mi,ShadowMaterial:e_,Shape:Ds,ShapeGeometry:Uh,ShapePath:y1,ShapeUtils:or,ShortType:Gd,Skeleton:Ja,SkeletonHelper:a1,SkinnedMesh:nf,Source:As,Sphere:Mn,SphereGeometry:ko,Spherical:ka,SphericalHarmonics3:g_,SplineCurve:uf,SpotLight:xf,SpotLightHelper:o1,Sprite:Za,SpriteMaterial:Oo,SrcAlphaFactor:dc,SrcAlphaSaturateFactor:rv,SrcColorFactor:Qg,StaticCopyUsage:Dy,StaticDrawUsage:Ra,StaticReadUsage:Ry,StereoCamera:Nb,StreamCopyUsage:Ly,StreamDrawUsage:Cy,StreamReadUsage:Iy,StringKeyframeTrack:qs,SubtractEquation:Yg,SubtractiveBlending:ud,TOUCH:ws,TangentSpaceNormalMap:Yr,TetrahedronGeometry:Lh,Texture:cn,TextureLoader:f_,TextureUtils:w1,TimestampQuery:Oy,TorusGeometry:Nh,TorusKnotGeometry:Oh,Triangle:ui,TriangleFanDrawMode:hy,TriangleStripDrawMode:cy,TrianglesDrawMode:ly,TubeGeometry:Fh,UVMapping:oh,Uint16BufferAttribute:ef,Uint32BufferAttribute:tf,Uint8BufferAttribute:xx,Uint8ClampedBufferAttribute:bx,Uniform:Cf,UniformsGroup:n1,UniformsLib:We,UniformsUtils:qa,UnsignedByteType:lr,UnsignedInt248Type:Os,UnsignedInt5999Type:Hd,UnsignedIntType:Er,UnsignedShort4444Type:lh,UnsignedShort5551Type:ch,UnsignedShortType:Ro,VSMShadowMap:er,Vector2:ve,Vector3:N,Vector4:Tt,VectorKeyframeTrack:Vs,VideoFrameTexture:Gx,VideoTexture:Hv,WebGL3DRenderTarget:ax,WebGLArrayRenderTarget:ox,WebGLCoordinateSystem:Xi,WebGLCubeRenderTarget:Ov,WebGLRenderTarget:Ni,WebGLRenderer:Uf,WebGLUtils:I_,WebGPUCoordinateSystem:Pa,WebXRController:lc,WireframeGeometry:df,WrapAroundEnding:Aa,ZeroCurvatureEnding:Es,ZeroFactor:Jg,ZeroSlopeEnding:Ts,ZeroStencilOp:fy,createCanvasElement:Iv},Symbol.toStringTag,{value:"Module"})),zm=(s,e)=>{if(s===e)return!0;if(!s||!e)return!1;const t=s.length;if(e.length!==t)return!1;for(let n=0;n<t;n++)if(s[n]!==e[n])return!1;return!0},sT=()=>{const s=[],n={items:s,remember:(i,r)=>{for(let a=0;a<s.length;a++){const l=s[a];if(zm(r,l.keys)&&l.promise)return l.promise}const o={promise:i(),keys:r};return s.push(o),o.promise},clear:i=>{for(let r=0;r<s.length;r++){const o=s[r];if(zm(i,o.keys)){s.splice(r,1);return}}}};return gi("threlte-cache",n),n},oT=()=>{const s=Yn("threlte-cache");if(!s)throw new Error("No cache found. The cache can only be used in a child component to <Canvas>.");return s},Vm=Symbol(),aT=s=>typeof(s==null?void 0:s.subscribe)=="function",D_=(s,e,t)=>{const n=s().map(o=>aT(o)?ey(o):Vm),i=xt(()=>s().map((o,a)=>n[a]===Vm?o:n[a].current)),r=()=>{xe(i);let o;return nh(()=>{o=e(xe(i))}),o};t?Sn(r):hi(r)},lT=(s,e)=>D_(s,e,!1),cT=(s,e)=>D_(s,e,!0),U_=Object.assign(lT,{pre:cT}),Ei=(s,e)=>(s==null?void 0:s[`is${e}`])===!0,Gu=s=>{const e=pi(void 0),t=pi(void 0);return s.then(n=>{e.set(n)}).catch(n=>{console.error("Error in asyncWritable:",n.message),t.set(n)}),Object.assign(Object.assign(s,e),{error:t,promise:s})},hT=typeof window<"u",ci=(s,e)=>{const t=Ha(s,r=>r);let n;const i=t.subscribe(async r=>{n&&n();const o=await e(r);o&&(n=o)});ji(()=>{i(),n&&n()})},fn=s=>{const e=pi(s),t={set:n=>{t.current=n,e.set(n)},subscribe:e.subscribe,update:n=>{const i=n(t.current);t.current=i,e.set(i)},current:s};return t},uT=s=>({subscribe:s.subscribe,get current(){return s.current}}),L_=(s,e)=>{if(e.includes(".")){const t=e.split("."),n=t.pop();for(let i=0;i<t.length;i+=1)s=s[t[i]];return{target:s,key:n}}else return{target:s,key:e}},dT=s=>{const{dom:e,canvas:t}=s,n=fn({width:e.offsetWidth,height:e.offsetHeight});Fd(()=>{const r=new ResizeObserver(()=>{const{offsetWidth:o,offsetHeight:a}=e;(n.current.width!==o||n.current.height!==a)&&n.set({width:o,height:a})});return r.observe(e),()=>{r.disconnect()}});const i={dom:e,canvas:t,size:uT(n)};return gi("threlte-dom-context",i),i},Gh=()=>{const s=Yn("threlte-dom-context");if(!s)throw new Error("useDOM can only be used in a child component to <Canvas>.");return s};function fT(s){return{all:s=s||new Map,on:function(e,t){var n=s.get(e);n?n.push(t):s.set(e,[t])},off:function(e,t){var n=s.get(e);n&&(t?n.splice(n.indexOf(t)>>>0,1):s.set(e,[]))},emit:function(e,t){var n=s.get(e);n&&n.slice().map(function(i){i(t)}),(n=s.get("*"))&&n.slice().map(function(i){i(e,t)})}}}class Br{constructor(){Jt(this,"allVertices",{});Jt(this,"isolatedVertices",{});Jt(this,"connectedVertices",{});Jt(this,"sortedConnectedValues",[]);Jt(this,"needsSort",!1);Jt(this,"emitter",fT());Jt(this,"emit",this.emitter.emit.bind(this.emitter));Jt(this,"on",this.emitter.on.bind(this.emitter));Jt(this,"off",this.emitter.off.bind(this.emitter));Jt(this,"getKey",e=>typeof e=="object"?e.key:e)}get sortedVertices(){return this.mapNodes(e=>e)}moveToIsolated(e){const t=this.connectedVertices[e];t&&(this.isolatedVertices[e]=t,delete this.connectedVertices[e])}moveToConnected(e){const t=this.isolatedVertices[e];t&&(this.connectedVertices[e]=t,delete this.isolatedVertices[e])}add(e,t,n){if(this.allVertices[e]&&this.allVertices[e].value!==void 0)throw new Error(`A node with the key ${e.toString()} already exists`);let i=this.allVertices[e];i?i.value===void 0&&(i.value=t):(i={value:t,previous:new Set,next:new Set},this.allVertices[e]=i);const r=i.next.size>0||i.previous.size>0;if(!(n!=null&&n.after)&&!(n!=null&&n.before)&&!r){this.isolatedVertices[e]=i,this.emit("node:added",{key:e,type:"isolated",value:t});return}else this.connectedVertices[e]=i;if(n!=null&&n.after){const o=Array.isArray(n.after)?n.after:[n.after];o.forEach(a=>{i.previous.add(this.getKey(a))}),o.forEach(a=>{const l=this.getKey(a),c=this.allVertices[l];c?(c.next.add(e),this.moveToConnected(l)):(this.allVertices[l]={value:void 0,previous:new Set,next:new Set([e])},this.connectedVertices[l]=this.allVertices[l])})}if(n!=null&&n.before){const o=Array.isArray(n.before)?n.before:[n.before];o.forEach(a=>{i.next.add(this.getKey(a))}),o.forEach(a=>{const l=this.getKey(a),c=this.allVertices[l];c?(c.previous.add(e),this.moveToConnected(l)):(this.allVertices[l]={value:void 0,previous:new Set([e]),next:new Set},this.connectedVertices[l]=this.allVertices[l])})}this.emit("node:added",{key:e,type:"connected",value:t}),this.needsSort=!0}remove(e){const t=this.getKey(e);if(this.isolatedVertices[t]){delete this.isolatedVertices[t],delete this.allVertices[t],this.emit("node:removed",{key:t,type:"isolated"});return}const i=this.connectedVertices[t];i&&(i.next.forEach(r=>{const o=this.connectedVertices[r];o&&(o.previous.delete(t),o.previous.size===0&&o.next.size===0&&this.moveToIsolated(r))}),i.previous.forEach(r=>{const o=this.connectedVertices[r];o&&(o.next.delete(t),o.previous.size===0&&o.next.size===0&&this.moveToIsolated(r))}),delete this.connectedVertices[t],delete this.allVertices[t],this.emit("node:removed",{key:t,type:"connected"}),this.needsSort=!0)}mapNodes(e){this.needsSort&&this.sort();const t=[];return this.forEachNode((n,i)=>{t.push(e(n,i))}),t}forEachNode(e){this.needsSort&&this.sort();let t=0;for(;t<this.sortedConnectedValues.length;t++)e(this.sortedConnectedValues[t],t);Reflect.ownKeys(this.isolatedVertices).forEach(n=>{const i=this.isolatedVertices[n];i.value!==void 0&&e(i.value,t++)})}getValueByKey(e){var t;return(t=this.allVertices[e])==null?void 0:t.value}getKeyByValue(e){return Reflect.ownKeys(this.connectedVertices).find(t=>this.connectedVertices[t].value===e)??Reflect.ownKeys(this.isolatedVertices).find(t=>this.isolatedVertices[t].value===e)}sort(){var o;const e=new Map,t=[],n=[],i=Reflect.ownKeys(this.connectedVertices).filter(a=>this.connectedVertices[a].value!==void 0);for(i.forEach(a=>{e.set(a,0)}),i.forEach(a=>{this.connectedVertices[a].next.forEach(c=>{this.connectedVertices[c]&&e.set(c,(e.get(c)||0)+1)})}),e.forEach((a,l)=>{a===0&&t.push(l)});t.length>0;){const a=t.shift();n.push(a);const l=i.find(c=>c===a);l&&((o=this.connectedVertices[l])==null||o.next.forEach(c=>{const h=(e.get(c)||0)-1;e.set(c,h),h===0&&t.push(c)}))}if(n.length!==i.length)throw new Error("The graph contains a cycle, and thus can not be sorted topologically.");const r=a=>a!==void 0;this.sortedConnectedValues=n.map(a=>this.connectedVertices[a].value).filter(r),this.needsSort=!1}clear(){this.allVertices={},this.isolatedVertices={},this.connectedVertices={},this.sortedConnectedValues=[],this.needsSort=!1}static isKey(e){return typeof e=="string"||typeof e=="symbol"}static isValue(e){return typeof e=="object"&&"key"in e}}class pT{constructor(e,t,n){Jt(this,"key");Jt(this,"stage");Jt(this,"callback");Jt(this,"runTask",!0);this.stage=e,this.key=t,this.callback=n}stop(){this.runTask=!1}start(){this.runTask=!0}run(e){this.runTask&&this.callback(e)}}class mT extends Br{constructor(t,n,i){super();Jt(this,"key");Jt(this,"scheduler");Jt(this,"runTask",!0);Jt(this,"callback",(t,n)=>n());Jt(this,"removeTask",this.remove.bind(this));this.scheduler=t,this.key=n,this.start=this.start.bind(this),this.stop=this.stop.bind(this),i&&(this.callback=i.bind(this))}stop(){this.runTask=!1}start(){this.runTask=!0}get tasks(){return this.sortedVertices}createTask(t,n,i){const r=new pT(this,t,n);return this.add(t,r,i),r}getTask(t){return this.getValueByKey(t)}run(t){this.runTask&&this.callback(t,n=>{this.forEachNode(i=>{i.run(n??t)})})}runWithTiming(t){if(!this.runTask)return{};const n={};return this.callback(t,i=>{this.forEachNode(r=>{const o=performance.now();r.run(i??t);const a=performance.now()-o;n[r.key]=a})}),n}getSchedule(){return this.mapNodes(t=>t.key.toString())}}class gT extends Br{constructor(t){super();Jt(this,"lastTime",performance.now());Jt(this,"clampDeltaTo",.1);Jt(this,"removeStage",this.remove.bind(this));t!=null&&t.clampDeltaTo&&(this.clampDeltaTo=t.clampDeltaTo),this.run=this.run.bind(this)}get stages(){return this.sortedVertices}createStage(t,n){const i=new mT(this,t,n==null?void 0:n.callback);return this.add(t,i,{after:n==null?void 0:n.after,before:n==null?void 0:n.before}),i}getStage(t){return this.getValueByKey(t)}run(t){const n=t-this.lastTime;this.forEachNode(i=>{i.run(Math.min(n/1e3,this.clampDeltaTo))}),this.lastTime=t}runWithTiming(t){const n=t-this.lastTime,i={},r=performance.now();return this.forEachNode(o=>{const a=performance.now(),l=o.runWithTiming(Math.min(n/1e3,this.clampDeltaTo)),c=performance.now()-a;i[o.key.toString()]={duration:c,tasks:l}}),{total:performance.now()-r,stages:i}}getSchedule(t={tasks:!0}){return{stages:this.mapNodes(n=>{if(n===void 0)throw new Error("Stage not found");return{key:n.key.toString(),tasks:t.tasks?n.getSchedule():void 0}})}}dispose(){this.clear()}}const vT=s=>{const e=new gT,t=e.createStage(Symbol("threlte-main-stage")),n={scheduler:e,frameInvalidated:!0,autoInvalidations:new Set,shouldAdvance:!1,advance:()=>{n.shouldAdvance=!0},autoRender:fn(s.autoRender??!0),renderMode:fn(s.renderMode??"on-demand"),invalidate(){n.frameInvalidated=!0},mainStage:t,shouldRender:()=>n.renderMode.current==="always"||n.renderMode.current==="on-demand"&&(n.frameInvalidated||n.autoInvalidations.size>0)||n.renderMode.current==="manual"&&n.shouldAdvance,renderStage:e.createStage(Symbol("threlte-render-stage"),{after:t,callback(i,r){n.shouldRender()&&r()}}),resetFrameInvalidation(){n.frameInvalidated=!1,n.shouldAdvance=!1}};return hi(()=>{n.autoRender.set(s.autoRender??!0)}),hi(()=>{n.renderMode.set(s.renderMode??"on-demand")}),ji(()=>{n.scheduler.dispose()}),gi("threlte-scheduler-context",n),n},Hh=()=>{const s=Yn("threlte-scheduler-context");if(!s)throw new Error("useScheduler can only be used in a child component to <Canvas>.");return s},_T=()=>{const{size:s}=Gh(),{invalidate:e}=Hh(),t=new vn(75,0,.1,1e3);t.position.z=5,t.lookAt(0,0,0);const n=fn(t);ci(s,r=>{if(n.current===t){const o=n.current;o.aspect=r.width/r.height,o.updateProjectionMatrix(),e()}});const i={camera:n};return gi("threlte-camera-context",i),i},N_=()=>{const s=Yn("threlte-camera-context");if(!s)throw new Error("useCamera can only be used in a child component to <Canvas>.");return s},yT=()=>{const s={removeObjectFromDisposal:e=>{s.disposableObjects.delete(e)},disposableObjectMounted:e=>{const t=s.disposableObjects.get(e);t?s.disposableObjects.set(e,t+1):s.disposableObjects.set(e,1)},disposableObjectUnmounted:e=>{const t=s.disposableObjects.get(e);t&&t>0&&(s.disposableObjects.set(e,t-1),t-1<=0&&(s.shouldDispose=!0))},disposableObjects:new Map,shouldDispose:!1,dispose:async(e=!1)=>{await Od(),!(!s.shouldDispose&&!e)&&(s.disposableObjects.forEach((t,n)=>{var i;(t===0||e)&&((i=n==null?void 0:n.dispose)==null||i.call(n),s.disposableObjects.delete(n))}),s.shouldDispose=!1)}};return ji(()=>{s.dispose(!0)}),gi("threlte-disposal-context",s),s},O_=()=>{const s=Yn("threlte-disposal-context");if(!s)throw new Error("useDisposal can only be used in a child component to <Canvas>.");return s},F_=Symbol("threlte-parent-context"),k_=s=>{const e=fn(s);return gi(F_,e),e},Lf=()=>Yn(F_),th=Symbol("threlte-parent-object3d-context"),xT=s=>{const e=kd(s);return gi(th,e),e},bT=s=>{const e=Yn(th),t=pi(s),n=Ha([t,e],([i,r])=>i??r);return gi(th,n),t},ST=()=>Yn(th);function Do(s,e,t){if(!hT)return{task:void 0,start:()=>{},stop:()=>{},started:kd(!1)};let n,i,r;Br.isKey(s)?(n=s,i=e,r=t):(n=Symbol("useTask"),i=s,r=e);const o=Hh();let a=o.mainStage;if(r){if(r.stage)if(Br.isValue(r.stage))a=r.stage;else{const d=o.scheduler.getStage(r.stage);if(!d)throw new Error(`No stage found with key ${r.stage.toString()}`);a=d}else if(r.after)if(Array.isArray(r.after))for(let d=0;d<r.after.length;d++){const f=r.after[d];if(Br.isValue(f)){a=f.stage;break}}else Br.isValue(r.after)&&(a=r.after.stage);else if(r.before)if(Array.isArray(r.before))for(let d=0;d<r.before.length;d++){const f=r.before[d];if(Br.isValue(f)){a=f.stage;break}}else Br.isValue(r.before)&&(a=r.before.stage)}const l=pi(!1),c=a.createTask(n,i,r),h=()=>{l.set(!0),((r==null?void 0:r.autoInvalidate)??!0)&&o.autoInvalidations.add(i),c.start()},u=()=>{l.set(!1),((r==null?void 0:r.autoInvalidate)??!0)&&o.autoInvalidations.delete(i),c.stop()};return(r==null?void 0:r.autoStart)??!0?h():u(),ji(()=>{u(),a.removeTask(n)}),{task:c,start:h,stop:u,started:{subscribe:l.subscribe}}}const MT=s=>{const e={scene:new xh};return gi("threlte-scene-context",e),e},B_=()=>{const s=Yn("threlte-scene-context");if(!s)throw new Error("useScene can only be used in a child component to <Canvas>.");return s},wT=s=>{const{dispose:e}=O_(),{camera:t}=N_(),{scene:n}=B_(),{invalidate:i,renderStage:r,autoRender:o,scheduler:a,resetFrameInvalidation:l}=Hh(),{size:c,canvas:h}=Gh(),u=s.createRenderer?s.createRenderer(h):new Uf({canvas:h,powerPreference:"high-performance",antialias:!0,alpha:!0}),d=r.createTask(Symbol("threlte-auto-render-task"),()=>{u.render(n,t.current)}),f={renderer:u,colorManagementEnabled:fn(s.colorManagementEnabled??!0),colorSpace:fn(s.colorSpace??"srgb"),dpr:fn(s.dpr??window.devicePixelRatio),shadows:fn(s.shadows??ha),toneMapping:fn(s.toneMapping??bc),autoRenderTask:d};gi("threlte-renderer-context",f),ci([f.colorManagementEnabled],([m])=>{It.enabled=m}),ci([f.colorSpace],([m])=>{"outputColorSpace"in u&&(u.outputColorSpace=m)}),ci([f.dpr],([m])=>{"setPixelRatio"in u&&u.setPixelRatio(m)});const{start:p,stop:v}=Do(()=>{var m;!("xr"in u)||(m=u.xr)!=null&&m.isPresenting||(u.setSize(c.current.width,c.current.height),i(),v())},{before:d,autoStart:!1,autoInvalidate:!1});return ci([c],()=>{p()}),ci([f.shadows],([m])=>{"shadowMap"in u&&(u.shadowMap.enabled=!!m,m&&m!==!0?u.shadowMap.type=m:m===!0&&(u.shadowMap.type=ha))}),ci([f.toneMapping],([m])=>{"toneMapping"in u&&(u.toneMapping=m)}),ci([o],([m])=>(m?f.autoRenderTask.start():f.autoRenderTask.stop(),()=>{f.autoRenderTask.stop()})),"setAnimationLoop"in f.renderer&&f.renderer.setAnimationLoop(g=>{e(),a.run(g),l()}),ji(()=>{if("dispose"in f.renderer){const m=f.renderer.dispose;m()}}),hi(()=>{f.colorManagementEnabled.set(s.colorManagementEnabled??!0)}),hi(()=>{f.colorSpace.set(s.colorSpace??"srgb")}),hi(()=>{f.toneMapping.set(s.toneMapping??bc)}),hi(()=>{f.shadows.set(s.shadows??ha)}),hi(()=>{f.dpr.set(s.dpr??window.devicePixelRatio)}),f},ET=()=>{const s=Yn("threlte-renderer-context");if(!s)throw new Error("useRenderer can only be used in a child component to <Canvas>.");return s},TT=()=>{const s=fn({});return gi("threlte-user-context",s),s},AT=()=>{const s=Yn("threlte-user-context");if(!s)throw new Error("useUserContext can only be used in a child component to <Canvas>.");return s},CT=s=>{const{scene:e}=MT();return{scene:e,...dT(s),...sT(),...k_(e),...xT(e),...yT(),...vT(s),..._T(),...wT(s),...TT()}};function RT(s,e){qn(e,!0);let t=Wr(e,["$$slots","$$events","$$legacy","children"]);CT(t);var n=Pt(),i=ot(n);Xr(i,()=>e.children),it(s,n),jn()}var PT=rn('<div class="svelte-1osucwe"><canvas class="svelte-1osucwe"><!></canvas></div>');function IT(s,e){let t=Wr(e,["$$slots","$$events","$$legacy","children"]),n=_r(void 0),i=_r(void 0);var r=PT(),o=bs(r),a=bs(o);{var l=c=>{RT(c,Uo({get dom(){return xe(i)},get canvas(){return xe(n)}},()=>t,{children:(h,u)=>{var d=Pt(),f=ot(d);Xr(f,()=>e.children??Ws),it(h,d)},$$slots:{default:!0}}))};Xt(a,c=>{xe(n)&&xe(i)&&c(l)})}Ss(o),ip(o,c=>tr(n,c),()=>xe(n)),Ss(r),ip(r,c=>tr(i,c),()=>xe(i)),it(s,r)}const Oi=()=>{const s=Hh(),e=ET(),t=N_(),n=B_(),i=Gh();return{advance:s.advance,autoRender:s.autoRender,autoRenderTask:e.autoRenderTask,camera:t.camera,colorManagementEnabled:e.colorManagementEnabled,colorSpace:e.colorSpace,dpr:e.dpr,invalidate:s.invalidate,mainStage:s.mainStage,renderer:e.renderer,renderMode:s.renderMode,renderStage:s.renderStage,scheduler:s.scheduler,shadows:e.shadows,shouldRender:s.shouldRender,dom:i.dom,canvas:i.canvas,size:i.size,toneMapping:e.toneMapping,get scene(){return n.scene},set scene(o){n.scene=o}}},DT=s=>typeof s=="object"&&s!==null,UT=()=>{const{invalidate:s}=Oi();let e;const t=pi(),n=Lf(),i=ST(),r=k_(),o=bT();ci([t,r,n,i],([c,h,u,d])=>{if(e==null||e(),e=void 0,!h){s();return}if(c!==void 0){if(c){if(typeof c=="function")e=c({ref:h,parent:u,parentObject3D:d});else if(Ei(c,"Object3D")&&Ei(h,"Object3D"))e=()=>c==null?void 0:c.remove(h),c==null||c.add(h);else if(typeof c=="string"){const{target:f,key:p}=L_(u,c),v=f[p];e=()=>f[p]=v,f[p]=h}}}else Ei(h,"Object3D")?(e=()=>d==null?void 0:d.remove(h),d==null||d.add(h)):DT(u)&&(Ei(h,"Material")?u.material=h:Ei(h,"BufferGeometry")&&(u.geometry=h));s()});const a=c=>{t.set(c)},l=c=>{r.set(c),Ei(c,"Object3D")&&o.set(c)};return ji(()=>{e==null||e(),s()}),{updateRef:l,updateAttach:a}},LT=s=>Ei(s,"PerspectiveCamera")||Ei(s,"OrthographicCamera"),NT=()=>{const{invalidate:s,size:e,camera:t}=Oi(),n=pi(),i=pi(!0),r=pi(!1);return ci([n,r],([c,h])=>{!c||!h||(t.set(c),s())}),ci([n,i,e],([c,h,u])=>{!c||h||(Ei(c,"OrthographicCamera")?(c.left=u.width/-2,c.right=u.width/2,c.top=u.height/2,c.bottom=u.height/-2,c.updateProjectionMatrix(),c.updateMatrixWorld(),s()):Ei(c,"PerspectiveCamera")&&(c.aspect=u.width/u.height,c.updateProjectionMatrix(),c.updateMatrixWorld(),s()))}),{updateRef:c=>{LT(c)&&n.set(c)},updateManual:c=>{i.set(c)},updateMakeDefault:c=>{r.set(c)}}},OT=s=>{let e,t,n=!1;const i=()=>{e==null||e(),e=s==null?void 0:s(t)},r=o=>{t=o,n&&i()};return Fd(()=>{i(),n=!0}),ji(()=>e==null?void 0:e()),{updateRef:r}},Gm=Symbol("threlte-disposable-object-context"),FT=s=>typeof(s==null?void 0:s.dispose)=="function"&&!Ei(s,"Scene"),kT=s=>{let e;const t=pi(void 0),n=pi(s),{disposableObjectMounted:i,disposableObjectUnmounted:r,removeObjectFromDisposal:o}=O_(),a=Yn(Gm),l=Ha([n,a??pi(!0)],([u,d])=>u??d??!0);return gi(Gm,l),ci([t,l],([u,d])=>{u===e?d?e&&i(e):e&&o(e):d&&(e&&r(e),u&&i(u)),e=u}),ji(()=>{if(!ld(l))return;const u=ld(t);u&&r(u)}),{updateRef:u=>{FT(u)&&t.set(u)},updateDispose:u=>{n.set(u)}}},BT=s=>s!==null&&typeof s=="object"&&"addEventListener"in s&&"removeEventListener"in s,zT=(s={})=>{const e=i=>{var r;i!=null&&i.type&&((r=s[`on${i.type}`])==null||r.call(s,i))},t=(i,r)=>{const o=[];for(const a of Object.keys(r))a.startsWith("on")&&(i.addEventListener(a.slice(2),e),o.push(a));return()=>{for(let a=0;a<o.length;a++)i.removeEventListener(o[a],e)}};return{updateRef:i=>{if(BT(i))return t(i,s)}}};let wd;const VT=s=>{wd=s},GT=()=>{const s=wd;return wd=void 0,s},HT=s=>{const t=Yn("threlte-plugin-context");if(!t)return;const n=[],i=Object.values(t);if(i.length){const r=s();for(let o=0;o<i.length;o++){const a=i[o],l=a(r);l&&l.pluginProps&&n.push(...l.pluginProps)}}return{pluginsProps:n}},WT=new Set(["$$scope","$$slots","type","args","attach","instance"]),XT=new Set(["fov","aspect","near","far","left","right","top","bottom","zoom"]),YT=s=>typeof s=="string"||typeof s=="number"||typeof s=="boolean"||typeof s>"u"||s===null,Hm=(s,e,t)=>{var n,i,r;return!Array.isArray(t)&&typeof t=="number"&&typeof((n=s[e])==null?void 0:n.setScalar)=="function"&&!((i=s[e])!=null&&i.isColor)?(o,a,l)=>{o[a].setScalar(l)}:typeof((r=s[e])==null?void 0:r.set)=="function"?Array.isArray(t)?(o,a,l)=>{o[a].set(...l)}:(o,a,l)=>{o[a].set(l)}:(o,a,l)=>{o[a]=l}},qT=()=>{const{invalidate:s}=Oi(),e=new Map,t=new Map,n=(r,o,a,l)=>{if(YT(a)){const u=e.get(o);if(u&&u.instance===r&&u.value===a)return;e.set(o,{instance:r,value:a})}const{key:c,target:h}=L_(r,o);if(a!=null){const u=t.get(o);if(u)u(h,c,a);else{const d=Hm(h,c,a);t.set(o,d),d(h,c,a)}}else Hm(h,c,a)(h,c,a);l.manualCamera||XT.has(c)&&(h.isPerspectiveCamera||h.isOrthographicCamera)&&h.updateProjectionMatrix()};return{updateProp:(r,o,a,l)=>{var c;!WT.has(o)&&!((c=l.pluginsProps)!=null&&c.includes(o))&&n(r,o,a,l),s()}}},jT=/^\s*class\s+/,ZT=s=>typeof s!="function"?!1:jT.test(s.toString()),JT=s=>Array.isArray(s),KT=(s,e)=>ZT(s)?JT(e)?new s(...e):new s:s;function Hu(s,e){qn(e,!0);let t=ut(e,"is",19,GT),n=ut(e,"manual",3,!1),i=ut(e,"makeDefault",3,!1),r=ut(e,"ref",15),o=Wr(e,["$$slots","$$events","$$legacy","is","args","attach","manual","makeDefault","dispose","ref","oncreate","children"]),a=xt(()=>KT(t(),e.args));const l=OT(e.oncreate);Sn(()=>{r()!==xe(a)&&(r(xe(a)),l.updateRef(xe(a)))});const c=HT(()=>({get ref(){return xe(a)},get args(){return e.args},get attach(){return e.attach},get manual(){return n()},get makeDefault(){return i()},get dispose(){return e.dispose},get props(){return o}})),{updateProp:h}=qT();Object.keys(o).forEach(g=>{Sn(()=>{h(xe(a),g,o[g],{manualCamera:n(),pluginsProps:c==null?void 0:c.pluginsProps})})});const u=UT();Sn(()=>u.updateAttach(e.attach)),Sn(()=>u.updateRef(xe(a)));const d=NT();Sn(()=>d.updateRef(xe(a))),Sn(()=>d.updateManual(n())),Sn(()=>d.updateMakeDefault(i()));const f=kT(e.dispose);Sn(()=>f.updateRef(xe(a))),Sn(()=>f.updateDispose(e.dispose));const p=zT(o);Sn(()=>p.updateRef(xe(a)));var v=Pt(),m=ot(v);Xr(m,()=>e.children??Ws,()=>({ref:xe(a)})),it(s,v),jn()}const QT={},Ct=new Proxy(function(){},{apply(s,e,t){return Hu(...t)},get(s,e){if(typeof e!="string")return Hu;const t=QT[e]||rT[e];if(t===void 0)throw new Error(`No Three.js module found for ${e}. Did you forget to extend the catalogue?`);return VT(t),Hu}});function $T(s,e){const t="threlte-plugin-context";e&&gi(t,{...Yn(t),[s]:e})}function eA(s,e){const{scheduler:t}=Oi();return t.getStage(s)??t.createStage(s,e)}function tA(s,e,t){const n=AT();if(!n)throw new Error("No user context store found, did you invoke this function outside of your main <Canvas> component?");return e?(n.update(i=>{if(s in i)return i;const r=typeof e=="function"?e():e;return i[s]=r,i}),n.current[s]):Ha(n,i=>i[s])}function z_(s,e){const{remember:t,clear:n}=oT();let i;const r=()=>new s;return{load:(l,c)=>{const h=async u=>{var d;if(i||(i=r()),"loadAsync"in i){const f=await i.loadAsync(u,c==null?void 0:c.onProgress);return((d=c==null?void 0:c.transform)==null?void 0:d.call(c,f))??f}else return new Promise((f,p)=>{i.load(u,v=>{var m;return f(((m=c==null?void 0:c.transform)==null?void 0:m.call(c,v))??v)},v=>{var m;return(m=c==null?void 0:c.onProgress)==null?void 0:m.call(c,v)},p)})};if(Array.isArray(l)){const u=l.map(f=>t(()=>h(f),[s,f]));return Gu(Promise.all(u))}else if(typeof l=="string"){const u=t(()=>h(l),[s,l]);return Gu(u)}else{const u=Object.values(l).map(f=>t(()=>h(f),[s,f]));return Gu(Promise.all(u).then(f=>Object.fromEntries(Object.entries(l).map(([p],v)=>[p,f[v]]))))}},clear:l=>{Array.isArray(l)?l.forEach(c=>{n([s,c])}):typeof l=="string"?n([s,l]):Object.entries(l).forEach(([c,h])=>{n([s,c,h])})},loader:i}}const ms=s=>({subscribe:s.subscribe,get current(){return s.current}});let xa=0;const Nf=fn(!1),Wh=fn(!1),Of=fn(void 0),Ff=fn(0),kf=fn(0),V_=fn([]),Bf=fn(0),{onStart:Wu,onLoad:Xu,onError:Yu}=js;js.onStart=(s,e,t)=>{Wu==null||Wu(s,e,t),Wh.set(!0),Of.set(s),Ff.set(e),kf.set(t);const n=(e-xa)/(t-xa);Bf.set(n),n===1&&Nf.set(!0)};js.onLoad=()=>{Xu==null||Xu(),Wh.set(!1)};js.onError=s=>{Yu==null||Yu(s),V_.update(e=>[...e,s])};js.onProgress=(s,e,t)=>{e===t&&(xa=t),Wh.set(!0),Of.set(s),Ff.set(e),kf.set(t);const n=(e-xa)/(t-xa)||1;Bf.set(n),n===1&&Nf.set(!0)};ms(Wh),ms(Of),ms(Ff),ms(kf),ms(V_),ms(Bf),ms(Nf);new N;new N;new N;new Mn;new rt;new qr;new N;const nA=Symbol("THRELTE_SUSPENSE_CONTEXT_IDENTIFIER"),iA=()=>{const s=Yn(nA),e=new Set,t=i=>(s&&(s.suspend(i),e.add(i)),i),n={suspended:Ha((s==null?void 0:s.suspended)??kd(!1),i=>i)};return ji(()=>{if(s){for(const i of e)s.onComponentDestroy(i);e.clear()}}),Object.assign(t,n)};new N;new N;new N;new ve;var rA=Object.defineProperty,sA=(s,e,t)=>e in s?rA(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,Vt=(s,e,t)=>sA(s,typeof e!="symbol"?e+"":e,t);const G_=(s,e)=>{const[t,n]=e.split("-");return Object.assign(s.style,{left:n==="left"?"0":n==="center"?"50%":"",right:n==="right"?"0":"",top:t==="top"?"0":t==="bottom"?"":"50%",bottom:t==="bottom"?"0":"",transform:`${n==="center"?"translateX(-50%)":""} ${t==="center"?"translateY(-50%)":""}`}),e},oA=({placement:s,size:e,offset:t,id:n,className:i})=>{const r=document.createElement("div"),{top:o,left:a,right:l,bottom:c}=t;return Object.assign(r.style,{id:n,position:"absolute",zIndex:"1000",height:`${e}px`,width:`${e}px`,margin:`${o}px ${l}px ${c}px ${a}px`,borderRadius:"100%"}),G_(r,s),n&&(r.id=n),i&&(r.className=i),r},aA=s=>{const e=typeof s=="string"?document.querySelector(s):s;if(!e)throw Error("Invalid DOM element");return e};function Ed(s,e,t){return Math.max(e,Math.min(t,s))}const lA=[["x",0,3],["y",1,4],["z",2,5]],Wm=new N;function Xm({isSphere:s},e,t){s&&(Wm.set(0,0,1).applyQuaternion(t.quaternion),lA.forEach(([n,i,r])=>{const o=Wm[n];let a=e[i],l=a.userData.opacity;a.material.opacity=Ed(o>=0?l:l/2,0,1),a=e[r],l=a.userData.opacity,a.material.opacity=Ed(o>=0?l/2:l,0,1)}))}const cA=(s,e,t=10)=>Math.abs(s.clientX-e.x)<t&&Math.abs(s.clientY-e.y)<t,Ym=new Rf,qm=new ve,jm=(s,e,t,n)=>{qm.set((s.clientX-e.left)/e.width*2-1,-((s.clientY-e.top)/e.height)*2+1),Ym.setFromCamera(qm,t);const i=Ym.intersectObjects(n,!1),r=i.length?i[0]:null;return!r||!r.object.visible?null:r},qu=1e-6,hA=2*Math.PI,H_=["x","y","z"],Ba=[...H_,"nx","ny","nz"],uA=["right","top","front","left","bottom","back"],W_=1.3,Zm=(s,e=!0)=>{const{material:t,userData:n}=s,{color:i,opacity:r}=e?n.hover:n;t.color.set(i),t.opacity=r},gs=s=>JSON.parse(JSON.stringify(s)),dA=s=>{const e=s.type||"sphere",t=e==="sphere",n=s.resolution||t?64:128,{container:i}=s;s.container=void 0,s=JSON.parse(JSON.stringify(s)),s.container=i,uA.forEach((l,c)=>{s[l]&&(s[Ba[c]]=s[l])});const r={enabled:!0,color:16777215,opacity:1,scale:.7,labelColor:2236962,line:!1,border:{size:0,color:14540253},hover:{color:t?16777215:9688043,labelColor:2236962,opacity:1,scale:.7,border:{size:0,color:14540253}}},o={line:!1,scale:t?.45:.7,hover:{scale:t?.5:.7}},a={type:e,container:document.body,size:128,placement:"top-right",resolution:n,lineWidth:20,radius:t?1:.2,smoothness:18,animated:!0,speed:1,background:{enabled:!0,color:t?16777215:14739180,opacity:t?0:1,hover:{color:t?16777215:14739180,opacity:t?.2:1}},font:{family:"sans-serif",weight:900},offset:{top:10,left:10,bottom:10,right:10},corners:{enabled:!t,color:t?15915362:16777215,opacity:1,scale:t?.15:.2,radius:1,smoothness:18,hover:{color:t?16777215:9688043,opacity:1,scale:t?.2:.225}},edges:{enabled:!t,color:t?15915362:16777215,opacity:t?1:0,radius:t?1:.125,smoothness:18,scale:t?.15:1,hover:{color:t?16777215:9688043,opacity:1,scale:t?.2:1}},x:{...gs(r),...t?{label:"X",color:16725587,line:!0}:{label:"Right"}},y:{...gs(r),...t?{label:"Y",color:9100032,line:!0}:{label:"Top"}},z:{...gs(r),...t?{label:"Z",color:2920447,line:!0}:{label:"Front"}},nx:{...gs(o),label:t?"":"Left"},ny:{...gs(o),label:t?"":"Bottom"},nz:{...gs(o),label:t?"":"Back"}};return Td(s,a),H_.forEach(l=>Td(s[`n${l}`],gs(s[l]))),{...s,isSphere:t}};function Td(s,...e){if(s instanceof HTMLElement||typeof s!="object"||s===null)return s;for(const t of e)for(const n in t)n!=="container"&&n in t&&(s[n]===void 0?s[n]=t[n]:typeof t[n]=="object"&&!Array.isArray(t[n])&&(s[n]=Td(s[n]||{},t[n])));return s}const fA=(s,e=2)=>{const t=new ze,n=e*2,{isSphere:i,resolution:r,radius:o,font:a,corners:l,edges:c}=s,h=Ba.map(M=>({...s[M],radius:o}));i&&l.enabled&&h.push(l),i&&c.enabled&&h.push(c);const u=document.createElement("canvas"),d=u.getContext("2d");u.width=r*2+n*2,u.height=r*h.length+n*h.length;const[f,p]=E(h,r,a);h.forEach(({radius:M,label:T,color:S,labelColor:b,border:I,hover:{color:D,labelColor:G,border:H}},$)=>{const F=r*$+$*n+e;_(e,F,e,r,M,T,I,S,b),_(r+e*3,F,e,r,M,T,H??I,D??S,G??b)});const v=h.length,m=e/(r*2),g=e/(r*6),x=1/v,y=new Wv(u);return y.repeat.set(.5-2*m,x-2*g),y.offset.set(m,1-g),Object.assign(y,{colorSpace:nn,wrapS:Hi,wrapT:Hi,userData:{offsetX:m,offsetY:g,cellHeight:x}}),y;function _(M,T,S,b,I,D,G,H,$){if(I=I*(b/2),H!=null&&H!==""&&(F(),d.fillStyle=t.set(H).getStyle(),d.fill()),G&&G.size){const Z=G.size*b/2;M+=Z,T+=Z,b-=G.size*b,I=Math.max(0,I-Z),F(),d.strokeStyle=t.set(G.color).getStyle(),d.lineWidth=G.size*b,d.stroke()}D&&w(d,M+b/2,T+(b+S)/2,D,t.set($).getStyle());function F(){d.beginPath(),d.moveTo(M+I,T),d.lineTo(M+b-I,T),d.arcTo(M+b,T,M+b,T+I,I),d.lineTo(M+b,T+b-I),d.arcTo(M+b,T+b,M+b-I,T+b,I),d.lineTo(M+I,T+b),d.arcTo(M,T+b,M,T+b-I,I),d.lineTo(M,T+I),d.arcTo(M,T,M+I,T,I),d.closePath()}}function E(M,T,S){const b=[...M].sort((J,B)=>{var Y,K;return(((Y=J.label)==null?void 0:Y.length)||0)-(((K=B.label)==null?void 0:K.length)||0)}).pop().label,{family:I,weight:D}=S,G=i?Math.sqrt(Math.pow(T*.7,2)/2):T;let H=G,$=0,F=0;do{d.font=`${D} ${H}px ${I}`;const J=d.measureText(b);$=J.width,F=J.fontBoundingBoxDescent,H--}while($>G&&H>0);const Z=G/F,q=Math.min(G/$,Z),j=Math.floor(H*q);return[`${D} ${j}px ${I}`,Z]}function w(M,T,S,b,I){M.font=f,M.textAlign="center",M.textBaseline="middle",M.fillStyle=I,M.fillText(b,T,S+(i?p:0))}},pA=(s,e)=>s.offset.x=(e?.5:0)+s.userData.offsetX,zf=(s,e)=>{const{offset:t,userData:{offsetY:n,cellHeight:i}}=s;t.y=1-(e+1)*i+n};function Vf(s,e,t=2,n=2){const i=t/2-s,r=n/2-s,o=s/t,a=(t-s)/t,l=s/n,c=(n-s)/n,h=[i,r,0,-i,r,0,-i,-r,0,i,-r,0],u=[a,c,o,c,o,l,a,l],d=[3*(e+1)+3,3*(e+1)+4,e+4,e+5,2*(e+1)+4,2,1,2*(e+1)+3,3,4*(e+1)+3,4,0],f=[0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11].map(w=>d[w]);let p,v,m,g,x,y,_,E;for(let w=0;w<4;w++){g=w<1||w>2?i:-i,x=w<2?r:-r,y=w<1||w>2?a:o,_=w<2?c:l;for(let M=0;M<=e;M++)p=Math.PI/2*(w+M/e),v=Math.cos(p),m=Math.sin(p),h.push(g+s*v,x+s*m,0),u.push(y+o*v,_+l*m),M<e&&(E=(e+1)*w+M+4,f.push(w,E,E+1))}return new yt().setIndex(new Et(new Uint32Array(f),1)).setAttribute("position",new Et(new Float32Array(h),3)).setAttribute("uv",new Et(new Float32Array(u),2))}const mA=(s,e)=>{const t=new N,{isSphere:n,radius:i,smoothness:r}=s,o=Vf(i,r);return Ba.map((a,l)=>{const c=l<3,h=Ba[l],u=l?e.clone():e;zf(u,l);const{enabled:d,scale:f,opacity:p,hover:v}=s[h],m={map:u,opacity:p,transparent:!0},g=n?new Za(new Oo(m)):new zt(o,new Xn(m)),x=c?h:h[1];return g.position[x]=(c?1:-1)*(n?W_:1),n||g.lookAt(t.copy(g.position).multiplyScalar(1.7)),g.scale.setScalar(f),g.renderOrder=1,g.visible=d,g.userData={scale:f,opacity:p,hover:v},g})},gA=(s,e)=>{const{isSphere:t,corners:n}=s;if(!n.enabled)return[];const{color:i,opacity:r,scale:o,radius:a,smoothness:l,hover:c}=n,h=t?null:Vf(a,l),u={transparent:!0,opacity:r},d=[1,1,1,-1,1,1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,-1,-1,-1,-1,-1].map(p=>p*.85),f=new N;return Array(d.length/3).fill(0).map((p,v)=>{if(t){const x=e.clone();zf(x,6),u.map=x}else u.color=i;const m=t?new Za(new Oo(u)):new zt(h,new Xn(u)),g=v*3;return m.position.set(d[g],d[g+1],d[g+2]),t&&m.position.normalize().multiplyScalar(1.7),m.scale.setScalar(o),m.lookAt(f.copy(m.position).multiplyScalar(2)),m.renderOrder=1,m.userData={color:i,opacity:r,scale:o,hover:c},m})},vA=(s,e,t)=>{const{isSphere:n,edges:i}=s;if(!i.enabled)return[];const{color:r,opacity:o,scale:a,hover:l,radius:c,smoothness:h}=i,u=n?null:Vf(c,h,1.2,.25),d={transparent:!0,opacity:o},f=[0,1,1,0,-1,1,1,0,1,-1,0,1,0,1,-1,0,-1,-1,1,0,-1,-1,0,-1,1,1,0,1,-1,0,-1,1,0,-1,-1,0].map(v=>v*.925),p=new N;return Array(f.length/3).fill(0).map((v,m)=>{if(n){const y=e.clone();zf(y,t),d.map=y}else d.color=r;const g=n?new Za(new Oo(d)):new zt(u,new Xn(d)),x=m*3;return g.position.set(f[x],f[x+1],f[x+2]),n&&g.position.normalize().multiplyScalar(1.7),g.scale.setScalar(a),g.lookAt(p.copy(g.position).multiplyScalar(2)),!n&&!g.position.y&&(g.rotation.z=Math.PI/2),g.renderOrder=1,g.userData={color:r,opacity:o,scale:a,hover:l},g})};function _A(s,e=!1){const t=s[0].index!==null,n=new Set(Object.keys(s[0].attributes)),i=new Set(Object.keys(s[0].morphAttributes)),r={},o={},a=s[0].morphTargetsRelative,l=new yt;let c=0;for(let h=0;h<s.length;++h){const u=s[h];let d=0;if(t!==(u.index!==null))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(const f in u.attributes){if(!n.has(f))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+'. All geometries must have compatible attributes; make sure "'+f+'" attribute exists among all geometries, or in none of them.'),null;r[f]===void 0&&(r[f]=[]),r[f].push(u.attributes[f]),d++}if(d!==n.size)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". Make sure all geometries have the same number of attributes."),null;if(a!==u.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(const f in u.morphAttributes){if(!i.has(f))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+".  .morphAttributes must be consistent throughout all geometries."),null;o[f]===void 0&&(o[f]=[]),o[f].push(u.morphAttributes[f])}if(e){let f;if(t)f=u.index.count;else if(u.attributes.position!==void 0)f=u.attributes.position.count;else return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". The geometry must have either an index or a position attribute"),null;l.addGroup(c,f,h),c+=f}}if(t){let h=0;const u=[];for(let d=0;d<s.length;++d){const f=s[d].index;for(let p=0;p<f.count;++p)u.push(f.getX(p)+h);h+=s[d].attributes.position.count}l.setIndex(u)}for(const h in r){const u=Jm(r[h]);if(!u)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+h+" attribute."),null;l.setAttribute(h,u)}for(const h in o){const u=o[h][0].length;if(u===0)break;l.morphAttributes=l.morphAttributes||{},l.morphAttributes[h]=[];for(let d=0;d<u;++d){const f=[];for(let v=0;v<o[h].length;++v)f.push(o[h][v][d]);const p=Jm(f);if(!p)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+h+" morphAttribute."),null;l.morphAttributes[h].push(p)}}return l}function Jm(s){let e,t,n,i=-1,r=0;for(let c=0;c<s.length;++c){const h=s[c];if(e===void 0&&(e=h.array.constructor),e!==h.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(t===void 0&&(t=h.itemSize),t!==h.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(n===void 0&&(n=h.normalized),n!==h.normalized)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;if(i===-1&&(i=h.gpuType),i!==h.gpuType)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes."),null;r+=h.count*t}const o=new e(r),a=new Et(o,t,n);let l=0;for(let c=0;c<s.length;++c){const h=s[c];if(h.isInterleavedBufferAttribute){const u=l/t;for(let d=0,f=h.count;d<f;d++)for(let p=0;p<t;p++){const v=h.getComponent(d,p);a.setComponent(d+u,p,v)}}else o.set(h.array,l);l+=h.count*t}return i!==void 0&&(a.gpuType=i),a}const yA=(s,e)=>{const{isSphere:t,background:{enabled:n,color:i,opacity:r,hover:o}}=e;let a;const l=new Xn({color:i,side:Wn,opacity:r,transparent:!0,depthWrite:!1});if(!n)return null;if(t)a=new zt(new ko(1.8,64,64),l);else{let c;s.forEach(h=>{const u=h.scale.x;h.scale.setScalar(.9),h.updateMatrix();const d=h.geometry.clone();d.applyMatrix4(h.matrix),c=c?_A([c,d]):d,h.scale.setScalar(u)}),a=new zt(c,l)}return a.userData={color:i,opacity:r,hover:o},a},Km=new yn,Zl=new N;class X_ extends zh{constructor(){super(),this.isLineSegmentsGeometry=!0,this.type="LineSegmentsGeometry";const e=[-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],t=[-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],n=[0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5];this.setIndex(n),this.setAttribute("position",new qe(e,3)),this.setAttribute("uv",new qe(t,2))}applyMatrix4(e){const t=this.attributes.instanceStart,n=this.attributes.instanceEnd;return t!==void 0&&(t.applyMatrix4(e),n.applyMatrix4(e),t.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}setPositions(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const n=new eh(t,6,1);return this.setAttribute("instanceStart",new Ti(n,3,0)),this.setAttribute("instanceEnd",new Ti(n,3,3)),this.computeBoundingBox(),this.computeBoundingSphere(),this}setColors(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const n=new eh(t,6,1);return this.setAttribute("instanceColorStart",new Ti(n,3,0)),this.setAttribute("instanceColorEnd",new Ti(n,3,3)),this}fromWireframeGeometry(e){return this.setPositions(e.attributes.position.array),this}fromEdgesGeometry(e){return this.setPositions(e.attributes.position.array),this}fromMesh(e){return this.fromWireframeGeometry(new df(e.geometry)),this}fromLineSegments(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new yn);const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;e!==void 0&&t!==void 0&&(this.boundingBox.setFromBufferAttribute(e),Km.setFromBufferAttribute(t),this.boundingBox.union(Km))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Mn),this.boundingBox===null&&this.computeBoundingBox();const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;if(e!==void 0&&t!==void 0){const n=this.boundingSphere.center;this.boundingBox.getCenter(n);let i=0;for(let r=0,o=e.count;r<o;r++)Zl.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(Zl)),Zl.fromBufferAttribute(t,r),i=Math.max(i,n.distanceToSquared(Zl));this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}toJSON(){}applyMatrix(e){return console.warn("THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4()."),this.applyMatrix4(e)}}We.line={worldUnits:{value:1},linewidth:{value:1},resolution:{value:new ve(1,1)},dashOffset:{value:0},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}};$n.line={uniforms:qa.merge([We.common,We.fog,We.line]),vertexShader:`
		#include <common>
		#include <color_pars_vertex>
		#include <fog_pars_vertex>
		#include <logdepthbuf_pars_vertex>
		#include <clipping_planes_pars_vertex>

		uniform float linewidth;
		uniform vec2 resolution;

		attribute vec3 instanceStart;
		attribute vec3 instanceEnd;

		attribute vec3 instanceColorStart;
		attribute vec3 instanceColorEnd;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#ifdef USE_DASH

			uniform float dashScale;
			attribute float instanceDistanceStart;
			attribute float instanceDistanceEnd;
			varying float vLineDistance;

		#endif

		void trimSegment( const in vec4 start, inout vec4 end ) {

			// trim end segment so it terminates between the camera plane and the near plane

			// conservative estimate of the near plane
			float a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column
			float b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column
			float nearEstimate = - 0.5 * b / a;

			float alpha = ( nearEstimate - start.z ) / ( end.z - start.z );

			end.xyz = mix( start.xyz, end.xyz, alpha );

		}

		void main() {

			#ifdef USE_COLOR

				vColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;

			#endif

			#ifdef USE_DASH

				vLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;
				vUv = uv;

			#endif

			float aspect = resolution.x / resolution.y;

			// camera space
			vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );
			vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );

			#ifdef WORLD_UNITS

				worldStart = start.xyz;
				worldEnd = end.xyz;

			#else

				vUv = uv;

			#endif

			// special case for perspective projection, and segments that terminate either in, or behind, the camera plane
			// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space
			// but we need to perform ndc-space calculations in the shader, so we must address this issue directly
			// perhaps there is a more elegant solution -- WestLangley

			bool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column

			if ( perspective ) {

				if ( start.z < 0.0 && end.z >= 0.0 ) {

					trimSegment( start, end );

				} else if ( end.z < 0.0 && start.z >= 0.0 ) {

					trimSegment( end, start );

				}

			}

			// clip space
			vec4 clipStart = projectionMatrix * start;
			vec4 clipEnd = projectionMatrix * end;

			// ndc space
			vec3 ndcStart = clipStart.xyz / clipStart.w;
			vec3 ndcEnd = clipEnd.xyz / clipEnd.w;

			// direction
			vec2 dir = ndcEnd.xy - ndcStart.xy;

			// account for clip-space aspect ratio
			dir.x *= aspect;
			dir = normalize( dir );

			#ifdef WORLD_UNITS

				vec3 worldDir = normalize( end.xyz - start.xyz );
				vec3 tmpFwd = normalize( mix( start.xyz, end.xyz, 0.5 ) );
				vec3 worldUp = normalize( cross( worldDir, tmpFwd ) );
				vec3 worldFwd = cross( worldDir, worldUp );
				worldPos = position.y < 0.5 ? start: end;

				// height offset
				float hw = linewidth * 0.5;
				worldPos.xyz += position.x < 0.0 ? hw * worldUp : - hw * worldUp;

				// don't extend the line if we're rendering dashes because we
				// won't be rendering the endcaps
				#ifndef USE_DASH

					// cap extension
					worldPos.xyz += position.y < 0.5 ? - hw * worldDir : hw * worldDir;

					// add width to the box
					worldPos.xyz += worldFwd * hw;

					// endcaps
					if ( position.y > 1.0 || position.y < 0.0 ) {

						worldPos.xyz -= worldFwd * 2.0 * hw;

					}

				#endif

				// project the worldpos
				vec4 clip = projectionMatrix * worldPos;

				// shift the depth of the projected points so the line
				// segments overlap neatly
				vec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;
				clip.z = clipPose.z * clip.w;

			#else

				vec2 offset = vec2( dir.y, - dir.x );
				// undo aspect ratio adjustment
				dir.x /= aspect;
				offset.x /= aspect;

				// sign flip
				if ( position.x < 0.0 ) offset *= - 1.0;

				// endcaps
				if ( position.y < 0.0 ) {

					offset += - dir;

				} else if ( position.y > 1.0 ) {

					offset += dir;

				}

				// adjust for linewidth
				offset *= linewidth;

				// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...
				offset /= resolution.y;

				// select end
				vec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;

				// back to clip space
				offset *= clip.w;

				clip.xy += offset;

			#endif

			gl_Position = clip;

			vec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation

			#include <logdepthbuf_vertex>
			#include <clipping_planes_vertex>
			#include <fog_vertex>

		}
		`,fragmentShader:`
		uniform vec3 diffuse;
		uniform float opacity;
		uniform float linewidth;

		#ifdef USE_DASH

			uniform float dashOffset;
			uniform float dashSize;
			uniform float gapSize;

		#endif

		varying float vLineDistance;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#include <common>
		#include <color_pars_fragment>
		#include <fog_pars_fragment>
		#include <logdepthbuf_pars_fragment>
		#include <clipping_planes_pars_fragment>

		vec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {

			float mua;
			float mub;

			vec3 p13 = p1 - p3;
			vec3 p43 = p4 - p3;

			vec3 p21 = p2 - p1;

			float d1343 = dot( p13, p43 );
			float d4321 = dot( p43, p21 );
			float d1321 = dot( p13, p21 );
			float d4343 = dot( p43, p43 );
			float d2121 = dot( p21, p21 );

			float denom = d2121 * d4343 - d4321 * d4321;

			float numer = d1343 * d4321 - d1321 * d4343;

			mua = numer / denom;
			mua = clamp( mua, 0.0, 1.0 );
			mub = ( d1343 + d4321 * ( mua ) ) / d4343;
			mub = clamp( mub, 0.0, 1.0 );

			return vec2( mua, mub );

		}

		void main() {

			#include <clipping_planes_fragment>

			#ifdef USE_DASH

				if ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps

				if ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX

			#endif

			float alpha = opacity;

			#ifdef WORLD_UNITS

				// Find the closest points on the view ray and the line segment
				vec3 rayEnd = normalize( worldPos.xyz ) * 1e5;
				vec3 lineDir = worldEnd - worldStart;
				vec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );

				vec3 p1 = worldStart + lineDir * params.x;
				vec3 p2 = rayEnd * params.y;
				vec3 delta = p1 - p2;
				float len = length( delta );
				float norm = len / linewidth;

				#ifndef USE_DASH

					#ifdef USE_ALPHA_TO_COVERAGE

						float dnorm = fwidth( norm );
						alpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );

					#else

						if ( norm > 0.5 ) {

							discard;

						}

					#endif

				#endif

			#else

				#ifdef USE_ALPHA_TO_COVERAGE

					// artifacts appear on some hardware if a derivative is taken within a conditional
					float a = vUv.x;
					float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
					float len2 = a * a + b * b;
					float dlen = fwidth( len2 );

					if ( abs( vUv.y ) > 1.0 ) {

						alpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );

					}

				#else

					if ( abs( vUv.y ) > 1.0 ) {

						float a = vUv.x;
						float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
						float len2 = a * a + b * b;

						if ( len2 > 1.0 ) discard;

					}

				#endif

			#endif

			vec4 diffuseColor = vec4( diffuse, alpha );

			#include <logdepthbuf_fragment>
			#include <color_fragment>

			gl_FragColor = vec4( diffuseColor.rgb, alpha );

			#include <tonemapping_fragment>
			#include <colorspace_fragment>
			#include <fog_fragment>
			#include <premultiplied_alpha_fragment>

		}
		`};let Gf=class extends mi{constructor(e){super({type:"LineMaterial",uniforms:qa.clone($n.line.uniforms),vertexShader:$n.line.vertexShader,fragmentShader:$n.line.fragmentShader,clipping:!0}),this.isLineMaterial=!0,this.setValues(e)}get color(){return this.uniforms.diffuse.value}set color(e){this.uniforms.diffuse.value=e}get worldUnits(){return"WORLD_UNITS"in this.defines}set worldUnits(e){e===!0?this.defines.WORLD_UNITS="":delete this.defines.WORLD_UNITS}get linewidth(){return this.uniforms.linewidth.value}set linewidth(e){this.uniforms.linewidth&&(this.uniforms.linewidth.value=e)}get dashed(){return"USE_DASH"in this.defines}set dashed(e){e===!0!==this.dashed&&(this.needsUpdate=!0),e===!0?this.defines.USE_DASH="":delete this.defines.USE_DASH}get dashScale(){return this.uniforms.dashScale.value}set dashScale(e){this.uniforms.dashScale.value=e}get dashSize(){return this.uniforms.dashSize.value}set dashSize(e){this.uniforms.dashSize.value=e}get dashOffset(){return this.uniforms.dashOffset.value}set dashOffset(e){this.uniforms.dashOffset.value=e}get gapSize(){return this.uniforms.gapSize.value}set gapSize(e){this.uniforms.gapSize.value=e}get opacity(){return this.uniforms.opacity.value}set opacity(e){this.uniforms&&(this.uniforms.opacity.value=e)}get resolution(){return this.uniforms.resolution.value}set resolution(e){this.uniforms.resolution.value.copy(e)}get alphaToCoverage(){return"USE_ALPHA_TO_COVERAGE"in this.defines}set alphaToCoverage(e){this.defines&&(e===!0!==this.alphaToCoverage&&(this.needsUpdate=!0),e===!0?(this.defines.USE_ALPHA_TO_COVERAGE="",this.extensions.derivatives=!0):(delete this.defines.USE_ALPHA_TO_COVERAGE,this.extensions.derivatives=!1))}};const Qm=new N,$m=new N,Dn=new Tt,Un=new Tt,Qi=new Tt,ju=new N,Zu=new rt,Nn=new M_,eg=new N,Jl=new yn,Kl=new Mn,$i=new Tt;let ir,Us;function tg(s,e,t){return $i.set(0,0,-e,1).applyMatrix4(s.projectionMatrix),$i.multiplyScalar(1/$i.w),$i.x=Us/t.width,$i.y=Us/t.height,$i.applyMatrix4(s.projectionMatrixInverse),$i.multiplyScalar(1/$i.w),Math.abs(Math.max($i.x,$i.y))}function xA(s,e){const t=s.matrixWorld,n=s.geometry,i=n.attributes.instanceStart,r=n.attributes.instanceEnd,o=Math.min(n.instanceCount,i.count);for(let a=0,l=o;a<l;a++){Nn.start.fromBufferAttribute(i,a),Nn.end.fromBufferAttribute(r,a),Nn.applyMatrix4(t);const c=new N,h=new N;ir.distanceSqToSegment(Nn.start,Nn.end,h,c),h.distanceTo(c)<Us*.5&&e.push({point:h,pointOnLine:c,distance:ir.origin.distanceTo(h),object:s,face:null,faceIndex:a,uv:null,uv1:null})}}function bA(s,e,t){const n=e.projectionMatrix,i=s.material.resolution,r=s.matrixWorld,o=s.geometry,a=o.attributes.instanceStart,l=o.attributes.instanceEnd,c=Math.min(o.instanceCount,a.count),h=-e.near;ir.at(1,Qi),Qi.w=1,Qi.applyMatrix4(e.matrixWorldInverse),Qi.applyMatrix4(n),Qi.multiplyScalar(1/Qi.w),Qi.x*=i.x/2,Qi.y*=i.y/2,Qi.z=0,ju.copy(Qi),Zu.multiplyMatrices(e.matrixWorldInverse,r);for(let u=0,d=c;u<d;u++){if(Dn.fromBufferAttribute(a,u),Un.fromBufferAttribute(l,u),Dn.w=1,Un.w=1,Dn.applyMatrix4(Zu),Un.applyMatrix4(Zu),Dn.z>h&&Un.z>h)continue;if(Dn.z>h){const g=Dn.z-Un.z,x=(Dn.z-h)/g;Dn.lerp(Un,x)}else if(Un.z>h){const g=Un.z-Dn.z,x=(Un.z-h)/g;Un.lerp(Dn,x)}Dn.applyMatrix4(n),Un.applyMatrix4(n),Dn.multiplyScalar(1/Dn.w),Un.multiplyScalar(1/Un.w),Dn.x*=i.x/2,Dn.y*=i.y/2,Un.x*=i.x/2,Un.y*=i.y/2,Nn.start.copy(Dn),Nn.start.z=0,Nn.end.copy(Un),Nn.end.z=0;const f=Nn.closestPointToPointParameter(ju,!0);Nn.at(f,eg);const p=nr.lerp(Dn.z,Un.z,f),v=p>=-1&&p<=1,m=ju.distanceTo(eg)<Us*.5;if(v&&m){Nn.start.fromBufferAttribute(a,u),Nn.end.fromBufferAttribute(l,u),Nn.start.applyMatrix4(r),Nn.end.applyMatrix4(r);const g=new N,x=new N;ir.distanceSqToSegment(Nn.start,Nn.end,x,g),t.push({point:x,pointOnLine:g,distance:ir.origin.distanceTo(x),object:s,face:null,faceIndex:u,uv:null,uv1:null})}}}class SA extends zt{constructor(e=new X_,t=new Gf({color:Math.random()*16777215})){super(e,t),this.isLineSegments2=!0,this.type="LineSegments2"}computeLineDistances(){const e=this.geometry,t=e.attributes.instanceStart,n=e.attributes.instanceEnd,i=new Float32Array(2*t.count);for(let o=0,a=0,l=t.count;o<l;o++,a+=2)Qm.fromBufferAttribute(t,o),$m.fromBufferAttribute(n,o),i[a]=a===0?0:i[a-1],i[a+1]=i[a]+Qm.distanceTo($m);const r=new eh(i,2,1);return e.setAttribute("instanceDistanceStart",new Ti(r,1,0)),e.setAttribute("instanceDistanceEnd",new Ti(r,1,1)),this}raycast(e,t){const n=this.material.worldUnits,i=e.camera;i===null&&!n&&console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.');const r=e.params.Line2!==void 0&&e.params.Line2.threshold||0;ir=e.ray;const o=this.matrixWorld,a=this.geometry,l=this.material;Us=l.linewidth+r,a.boundingSphere===null&&a.computeBoundingSphere(),Kl.copy(a.boundingSphere).applyMatrix4(o);let c;if(n)c=Us*.5;else{const u=Math.max(i.near,Kl.distanceToPoint(ir.origin));c=tg(i,u,l.resolution)}if(Kl.radius+=c,ir.intersectsSphere(Kl)===!1)return;a.boundingBox===null&&a.computeBoundingBox(),Jl.copy(a.boundingBox).applyMatrix4(o);let h;if(n)h=Us*.5;else{const u=Math.max(i.near,Jl.distanceToPoint(ir.origin));h=tg(i,u,l.resolution)}Jl.expandByScalar(h),ir.intersectsBox(Jl)!==!1&&(n?xA(this,t):bA(this,i,t))}}class Y_ extends X_{constructor(){super(),this.isLineGeometry=!0,this.type="LineGeometry"}setPositions(e){const t=e.length-3,n=new Float32Array(2*t);for(let i=0;i<t;i+=3)n[2*i]=e[i],n[2*i+1]=e[i+1],n[2*i+2]=e[i+2],n[2*i+3]=e[i+3],n[2*i+4]=e[i+4],n[2*i+5]=e[i+5];return super.setPositions(n),this}setColors(e){const t=e.length-3,n=new Float32Array(2*t);for(let i=0;i<t;i+=3)n[2*i]=e[i],n[2*i+1]=e[i+1],n[2*i+2]=e[i+2],n[2*i+3]=e[i+3],n[2*i+4]=e[i+4],n[2*i+5]=e[i+5];return super.setColors(n),this}fromLine(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}}class MA extends SA{constructor(e=new Y_,t=new Gf({color:Math.random()*16777215})){super(e,t),this.isLine2=!0,this.type="Line2"}}const wA=s=>{const e=new ze,t=[],n=[],{isSphere:i}=s;if(Ba.forEach((a,l)=>{const{enabled:c,line:h,scale:u,color:d}=s[a];if(!c||!h)return;const f=l<3?1:-1,p=(i?W_-u/2:.975)*f;t.push(a.includes("x")?p:0,a.includes("y")?p:0,a.includes("z")?p:0,0,0,0);const v=e.set(d).toArray();n.push(...v,...v)}),!t.length)return null;const r=new Y_().setPositions(t).setColors(n),o=new Gf({linewidth:s.lineWidth,vertexColors:!0,resolution:new ve(window.innerWidth,window.innerHeight)});return new MA(r,o).computeLineDistances()},EA=s=>{const{corners:e,edges:t}=s,n=[],i=fA(s),r=mA(s,i);n.push(...r),e.enabled&&n.push(...gA(s,i)),t.enabled&&n.push(...vA(s,i,e.enabled?7:6));const o=yA(r,s),a=wA(s);return[n,o,a]},sa=(s,e=!0)=>{const{material:t,userData:n}=s,{opacity:i,color:r,scale:o}=e?n.hover:n;s.scale.setScalar(o),t.opacity=i,t.map?pA(t.map,e):t.color.set(r)},_o=new rt,TA=new ka,ng=new N,AA=new ve;class ig extends Ft{constructor(e,t,n={}){super(),Vt(this,"type","ViewportGizmo"),Vt(this,"enabled",!0),Vt(this,"camera"),Vt(this,"renderer"),Vt(this,"options"),Vt(this,"target",new N),Vt(this,"animated",!0),Vt(this,"speed",1),Vt(this,"animating",!1),Vt(this,"_options"),Vt(this,"_intersections"),Vt(this,"_background",null),Vt(this,"_viewport",new Tt),Vt(this,"_originalViewport",new Tt),Vt(this,"_originalScissor",new Tt),Vt(this,"_camera"),Vt(this,"_container"),Vt(this,"_domElement"),Vt(this,"_domRect"),Vt(this,"_dragging",!1),Vt(this,"_distance",0),Vt(this,"_clock",new Ef),Vt(this,"_targetPosition",new N),Vt(this,"_targetQuaternion",new hn),Vt(this,"_quaternionStart",new hn),Vt(this,"_quaternionEnd",new hn),Vt(this,"_pointerStart",new ve),Vt(this,"_focus",null),Vt(this,"_placement"),Vt(this,"_controls"),Vt(this,"_controlsListeners"),this.camera=e,this.renderer=t,this.set(n)}get placement(){return this._placement}set placement(e){this._placement=G_(this._domElement,e),this.domUpdate()}set(e={}){this.dispose(),this.options=e,this._options=dA(e),this._camera=this._options.isSphere?new Jr(-1.8,1.8,1.8,-1.8,5,10):new vn(26,1,5,10),this._camera.position.set(0,0,7);const[t,n,i]=EA(this._options);n&&this.add(n),i&&this.add(i),this.add(...t),this._background=n,this._intersections=t;const{container:r,animated:o,speed:a}=this._options;return this.animated=o,this.speed=a,this._container=r?aA(r):document.body,this._domElement=oA(this._options),this._domElement.onpointerdown=l=>this._onPointerDown(l),this._domElement.onpointermove=l=>this._onPointerMove(l),this._domElement.onpointerleave=()=>this._onPointerLeave(),this._container.appendChild(this._domElement),this._controls&&this.attachControls(this._controls),this.update(),this}render(){this.animating&&this._animate();const{renderer:e,_viewport:t}=this,n=e.getScissorTest(),i=e.autoClear;return e.autoClear=!1,e.setViewport(t),n&&e.setScissor(t),e.clear(!1,!0,!1),e.render(this,this._camera),e.setViewport(this._originalViewport),n&&e.setScissor(this._originalScissor),e.autoClear=i,this}domUpdate(){this._domRect=this._domElement.getBoundingClientRect();const e=this.renderer,t=this._domRect,n=e.domElement.getBoundingClientRect();return this._viewport.set(t.left-n.left,e.domElement.clientHeight-(t.top-n.top+t.height),t.width,t.height),e.getViewport(this._originalViewport),e.getScissorTest()&&e.getScissor(this._originalScissor),this}cameraUpdate(){return this._updateOrientation(),this}update(e=!0){return e&&this._controls&&this._controls.update(),this.domUpdate().cameraUpdate()}attachControls(e){return this.detachControls(),this.target=e.target,this._controlsListeners={start:()=>e.enabled=!1,end:()=>e.enabled=!0,change:()=>this.update(!1)},this.addEventListener("start",this._controlsListeners.start),this.addEventListener("end",this._controlsListeners.end),e.addEventListener("change",this._controlsListeners.change),this._controls=e,this}detachControls(){if(!(!this._controlsListeners||!this._controls))return this.target=new N().copy(this._controls.target),this.removeEventListener("start",this._controlsListeners.start),this.removeEventListener("end",this._controlsListeners.end),this._controls.removeEventListener("change",this._controlsListeners.change),this._controlsListeners=void 0,this._controls=void 0,this}dispose(){var e;this.detachControls(),this.children.forEach(t=>{var n,i,r,o;this.remove(t);const a=t;(n=a.material)==null||n.dispose(),(r=(i=a.material)==null?void 0:i.map)==null||r.dispose(),(o=a.geometry)==null||o.dispose()}),(e=this._domElement)==null||e.remove()}_updateOrientation(e=!0){e&&(this.quaternion.copy(this.camera.quaternion).invert(),this.updateMatrixWorld()),Xm(this._options,this._intersections,this.camera)}_animate(){const{position:e,quaternion:t}=this.camera;if(e.set(0,0,1),!this.animated){e.applyQuaternion(this._quaternionEnd).multiplyScalar(this._distance).add(this.target),t.copy(this._targetQuaternion),this._updateOrientation(),this.animating=!1,this.dispatchEvent({type:"change"}),this.dispatchEvent({type:"end"});return}const n=this._clock.getDelta()*hA*this.speed;this._quaternionStart.rotateTowards(this._quaternionEnd,n),e.applyQuaternion(this._quaternionStart).multiplyScalar(this._distance).add(this.target),t.rotateTowards(this._targetQuaternion,n),this._updateOrientation(),requestAnimationFrame(()=>this.dispatchEvent({type:"change"})),this._quaternionStart.angleTo(this._quaternionEnd)<qu&&(this.animating=!1,this.dispatchEvent({type:"end"}))}_setOrientation(e){const t=this.camera,n=this.target;this._targetPosition.copy(e).multiplyScalar(this._distance),_o.setPosition(this._targetPosition).lookAt(this._targetPosition,this.position,this.up),this._targetQuaternion.setFromRotationMatrix(_o),this._targetPosition.add(n),_o.lookAt(this._targetPosition,n,this.up),this._quaternionEnd.setFromRotationMatrix(_o),_o.setPosition(t.position).lookAt(t.position,n,this.up),this._quaternionStart.setFromRotationMatrix(_o),this.animating=!0,this._clock.start(),this.dispatchEvent({type:"start"})}_onPointerDown(e){if(!this.enabled)return;const t=a=>{if(!this._dragging){if(cA(a,this._pointerStart))return;this._dragging=!0}const l=AA.set(a.clientX,a.clientY).sub(this._pointerStart).multiplyScalar(1/this._domRect.width*Math.PI),c=TA.setFromVector3(ng.subVectors(this.camera.position,this.target));c.theta=r-l.x,c.phi=Ed(o-l.y,qu,Math.PI-qu),this.camera.position.setFromSpherical(c).add(this.target),this.camera.lookAt(this.target),this.quaternion.copy(this.camera.quaternion).invert(),this._updateOrientation(!1),this.dispatchEvent({type:"change"})},n=()=>{if(document.removeEventListener("pointermove",t,!1),document.removeEventListener("pointerup",n,!1),!this._dragging)return this._handleClick(e);this._focus&&(sa(this._focus,!1),this._focus=null),this._dragging=!1,this.dispatchEvent({type:"end"})};if(this.animating)return;e.preventDefault(),this._pointerStart.set(e.clientX,e.clientY);const i=new ka().setFromVector3(ng.subVectors(this.camera.position,this.target)),r=i.theta,o=i.phi;this._distance=i.radius,document.addEventListener("pointermove",t,!1),document.addEventListener("pointerup",n,!1),this.dispatchEvent({type:"start"})}_onPointerMove(e){!this.enabled||this._dragging||(this._background&&Zm(this._background,!0),this._handleHover(e))}_onPointerLeave(){!this.enabled||this._dragging||(this._background&&Zm(this._background,!1),this._focus&&sa(this._focus,!1),this._domElement.style.cursor="")}_handleClick(e){const t=jm(e,this._domRect,this._camera,this._intersections);this._focus&&(sa(this._focus,!1),this._focus=null),t&&(this._setOrientation(t.object.position),this.dispatchEvent({type:"change"}))}_handleHover(e){const t=jm(e,this._domRect,this._camera,this._intersections),n=(t==null?void 0:t.object)||null;this._focus!==n&&(this._domElement.style.cursor=n?"pointer":"",this._focus&&sa(this._focus,!1),(this._focus=n)?sa(n,!0):Xm(this._options,this._intersections,this.camera))}}const rg={type:"change"},Hf={type:"start"},q_={type:"end"},Ql=new qr,sg=new vr,CA=Math.cos(70*nr.DEG2RAD),wn=new N,oi=2*Math.PI,Kt={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},Ju=1e-6;let j_=class extends If{constructor(e,t=null){super(e,t),this.state=Kt.NONE,this.enabled=!0,this.target=new N,this.cursor=new N,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.keyRotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:Ai.ROTATE,MIDDLE:Ai.DOLLY,RIGHT:Ai.PAN},this.touches={ONE:ws.ROTATE,TWO:ws.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new N,this._lastQuaternion=new hn,this._lastTargetPosition=new N,this._quat=new hn().setFromUnitVectors(e.up,new N(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new ka,this._sphericalDelta=new ka,this._scale=1,this._panOffset=new N,this._rotateStart=new ve,this._rotateEnd=new ve,this._rotateDelta=new ve,this._panStart=new ve,this._panEnd=new ve,this._panDelta=new ve,this._dollyStart=new ve,this._dollyEnd=new ve,this._dollyDelta=new ve,this._dollyDirection=new N,this._mouse=new ve,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=PA.bind(this),this._onPointerDown=RA.bind(this),this._onPointerUp=IA.bind(this),this._onContextMenu=kA.bind(this),this._onMouseWheel=LA.bind(this),this._onKeyDown=NA.bind(this),this._onTouchStart=OA.bind(this),this._onTouchMove=FA.bind(this),this._onMouseDown=DA.bind(this),this._onMouseMove=UA.bind(this),this._interceptControlDown=BA.bind(this),this._interceptControlUp=zA.bind(this),this.domElement!==null&&this.connect(),this.update()}connect(){this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(e){e.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=e}stopListenToKeyEvents(){this._domElementKeyEvents!==null&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(rg),this.update(),this.state=Kt.NONE}update(e=null){const t=this.object.position;wn.copy(t).sub(this.target),wn.applyQuaternion(this._quat),this._spherical.setFromVector3(wn),this.autoRotate&&this.state===Kt.NONE&&this._rotateLeft(this._getAutoRotationAngle(e)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let n=this.minAzimuthAngle,i=this.maxAzimuthAngle;isFinite(n)&&isFinite(i)&&(n<-Math.PI?n+=oi:n>Math.PI&&(n-=oi),i<-Math.PI?i+=oi:i>Math.PI&&(i-=oi),n<=i?this._spherical.theta=Math.max(n,Math.min(i,this._spherical.theta)):this._spherical.theta=this._spherical.theta>(n+i)/2?Math.max(n,this._spherical.theta):Math.min(i,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),this.enableDamping===!0?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let r=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const o=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),r=o!=this._spherical.radius}if(wn.setFromSpherical(this._spherical),wn.applyQuaternion(this._quatInverse),t.copy(this.target).add(wn),this.object.lookAt(this.target),this.enableDamping===!0?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let o=null;if(this.object.isPerspectiveCamera){const a=wn.length();o=this._clampDistance(a*this._scale);const l=a-o;this.object.position.addScaledVector(this._dollyDirection,l),this.object.updateMatrixWorld(),r=!!l}else if(this.object.isOrthographicCamera){const a=new N(this._mouse.x,this._mouse.y,0);a.unproject(this.object);const l=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),r=l!==this.object.zoom;const c=new N(this._mouse.x,this._mouse.y,0);c.unproject(this.object),this.object.position.sub(c).add(a),this.object.updateMatrixWorld(),o=wn.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;o!==null&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(o).add(this.object.position):(Ql.origin.copy(this.object.position),Ql.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(Ql.direction))<CA?this.object.lookAt(this.target):(sg.setFromNormalAndCoplanarPoint(this.object.up,this.target),Ql.intersectPlane(sg,this.target))))}else if(this.object.isOrthographicCamera){const o=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),o!==this.object.zoom&&(this.object.updateProjectionMatrix(),r=!0)}return this._scale=1,this._performCursorZoom=!1,r||this._lastPosition.distanceToSquared(this.object.position)>Ju||8*(1-this._lastQuaternion.dot(this.object.quaternion))>Ju||this._lastTargetPosition.distanceToSquared(this.target)>Ju?(this.dispatchEvent(rg),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0):!1}_getAutoRotationAngle(e){return e!==null?oi/60*this.autoRotateSpeed*e:oi/60/60*this.autoRotateSpeed}_getZoomScale(e){const t=Math.abs(e*.01);return Math.pow(.95,this.zoomSpeed*t)}_rotateLeft(e){this._sphericalDelta.theta-=e}_rotateUp(e){this._sphericalDelta.phi-=e}_panLeft(e,t){wn.setFromMatrixColumn(t,0),wn.multiplyScalar(-e),this._panOffset.add(wn)}_panUp(e,t){this.screenSpacePanning===!0?wn.setFromMatrixColumn(t,1):(wn.setFromMatrixColumn(t,0),wn.crossVectors(this.object.up,wn)),wn.multiplyScalar(e),this._panOffset.add(wn)}_pan(e,t){const n=this.domElement;if(this.object.isPerspectiveCamera){const i=this.object.position;wn.copy(i).sub(this.target);let r=wn.length();r*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*e*r/n.clientHeight,this.object.matrix),this._panUp(2*t*r/n.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(e*(this.object.right-this.object.left)/this.object.zoom/n.clientWidth,this.object.matrix),this._panUp(t*(this.object.top-this.object.bottom)/this.object.zoom/n.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(e,t){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const n=this.domElement.getBoundingClientRect(),i=e-n.left,r=t-n.top,o=n.width,a=n.height;this._mouse.x=i/o*2-1,this._mouse.y=-(r/a)*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(e){return Math.max(this.minDistance,Math.min(this.maxDistance,e))}_handleMouseDownRotate(e){this._rotateStart.set(e.clientX,e.clientY)}_handleMouseDownDolly(e){this._updateZoomParameters(e.clientX,e.clientX),this._dollyStart.set(e.clientX,e.clientY)}_handleMouseDownPan(e){this._panStart.set(e.clientX,e.clientY)}_handleMouseMoveRotate(e){this._rotateEnd.set(e.clientX,e.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(oi*this._rotateDelta.x/t.clientHeight),this._rotateUp(oi*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(e){this._dollyEnd.set(e.clientX,e.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(e){this._panEnd.set(e.clientX,e.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(e){this._updateZoomParameters(e.clientX,e.clientY),e.deltaY<0?this._dollyIn(this._getZoomScale(e.deltaY)):e.deltaY>0&&this._dollyOut(this._getZoomScale(e.deltaY)),this.update()}_handleKeyDown(e){let t=!1;switch(e.code){case this.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(oi*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),t=!0;break;case this.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(-oi*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),t=!0;break;case this.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(oi*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),t=!0;break;case this.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(-oi*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),t=!0;break}t&&(e.preventDefault(),this.update())}_handleTouchStartRotate(e){if(this._pointers.length===1)this._rotateStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);this._rotateStart.set(n,i)}}_handleTouchStartPan(e){if(this._pointers.length===1)this._panStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);this._panStart.set(n,i)}}_handleTouchStartDolly(e){const t=this._getSecondPointerPosition(e),n=e.pageX-t.x,i=e.pageY-t.y,r=Math.sqrt(n*n+i*i);this._dollyStart.set(0,r)}_handleTouchStartDollyPan(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enablePan&&this._handleTouchStartPan(e)}_handleTouchStartDollyRotate(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enableRotate&&this._handleTouchStartRotate(e)}_handleTouchMoveRotate(e){if(this._pointers.length==1)this._rotateEnd.set(e.pageX,e.pageY);else{const n=this._getSecondPointerPosition(e),i=.5*(e.pageX+n.x),r=.5*(e.pageY+n.y);this._rotateEnd.set(i,r)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(oi*this._rotateDelta.x/t.clientHeight),this._rotateUp(oi*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(e){if(this._pointers.length===1)this._panEnd.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);this._panEnd.set(n,i)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(e){const t=this._getSecondPointerPosition(e),n=e.pageX-t.x,i=e.pageY-t.y,r=Math.sqrt(n*n+i*i);this._dollyEnd.set(0,r),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const o=(e.pageX+t.x)*.5,a=(e.pageY+t.y)*.5;this._updateZoomParameters(o,a)}_handleTouchMoveDollyPan(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enablePan&&this._handleTouchMovePan(e)}_handleTouchMoveDollyRotate(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enableRotate&&this._handleTouchMoveRotate(e)}_addPointer(e){this._pointers.push(e.pointerId)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId){this._pointers.splice(t,1);return}}_isTrackingPointer(e){for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId)return!0;return!1}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new ve,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[t]}_customWheelEvent(e){const t=e.deltaMode,n={clientX:e.clientX,clientY:e.clientY,deltaY:e.deltaY};switch(t){case 1:n.deltaY*=16;break;case 2:n.deltaY*=100;break}return e.ctrlKey&&!this._controlActive&&(n.deltaY*=10),n}};function RA(s){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(s.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),!this._isTrackingPointer(s)&&(this._addPointer(s),s.pointerType==="touch"?this._onTouchStart(s):this._onMouseDown(s)))}function PA(s){this.enabled!==!1&&(s.pointerType==="touch"?this._onTouchMove(s):this._onMouseMove(s))}function IA(s){switch(this._removePointer(s),this._pointers.length){case 0:this.domElement.releasePointerCapture(s.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(q_),this.state=Kt.NONE;break;case 1:const e=this._pointers[0],t=this._pointerPositions[e];this._onTouchStart({pointerId:e,pageX:t.x,pageY:t.y});break}}function DA(s){let e;switch(s.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case Ai.DOLLY:if(this.enableZoom===!1)return;this._handleMouseDownDolly(s),this.state=Kt.DOLLY;break;case Ai.ROTATE:if(s.ctrlKey||s.metaKey||s.shiftKey){if(this.enablePan===!1)return;this._handleMouseDownPan(s),this.state=Kt.PAN}else{if(this.enableRotate===!1)return;this._handleMouseDownRotate(s),this.state=Kt.ROTATE}break;case Ai.PAN:if(s.ctrlKey||s.metaKey||s.shiftKey){if(this.enableRotate===!1)return;this._handleMouseDownRotate(s),this.state=Kt.ROTATE}else{if(this.enablePan===!1)return;this._handleMouseDownPan(s),this.state=Kt.PAN}break;default:this.state=Kt.NONE}this.state!==Kt.NONE&&this.dispatchEvent(Hf)}function UA(s){switch(this.state){case Kt.ROTATE:if(this.enableRotate===!1)return;this._handleMouseMoveRotate(s);break;case Kt.DOLLY:if(this.enableZoom===!1)return;this._handleMouseMoveDolly(s);break;case Kt.PAN:if(this.enablePan===!1)return;this._handleMouseMovePan(s);break}}function LA(s){this.enabled===!1||this.enableZoom===!1||this.state!==Kt.NONE||(s.preventDefault(),this.dispatchEvent(Hf),this._handleMouseWheel(this._customWheelEvent(s)),this.dispatchEvent(q_))}function NA(s){this.enabled!==!1&&this._handleKeyDown(s)}function OA(s){switch(this._trackPointer(s),this._pointers.length){case 1:switch(this.touches.ONE){case ws.ROTATE:if(this.enableRotate===!1)return;this._handleTouchStartRotate(s),this.state=Kt.TOUCH_ROTATE;break;case ws.PAN:if(this.enablePan===!1)return;this._handleTouchStartPan(s),this.state=Kt.TOUCH_PAN;break;default:this.state=Kt.NONE}break;case 2:switch(this.touches.TWO){case ws.DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchStartDollyPan(s),this.state=Kt.TOUCH_DOLLY_PAN;break;case ws.DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchStartDollyRotate(s),this.state=Kt.TOUCH_DOLLY_ROTATE;break;default:this.state=Kt.NONE}break;default:this.state=Kt.NONE}this.state!==Kt.NONE&&this.dispatchEvent(Hf)}function FA(s){switch(this._trackPointer(s),this.state){case Kt.TOUCH_ROTATE:if(this.enableRotate===!1)return;this._handleTouchMoveRotate(s),this.update();break;case Kt.TOUCH_PAN:if(this.enablePan===!1)return;this._handleTouchMovePan(s),this.update();break;case Kt.TOUCH_DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchMoveDollyPan(s),this.update();break;case Kt.TOUCH_DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchMoveDollyRotate(s),this.update();break;default:this.state=Kt.NONE}}function kA(s){this.enabled!==!1&&s.preventDefault()}function BA(s){s.key==="Control"&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function zA(s){s.key==="Control"&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}const Ku={type:"change"},Wf={type:"start"},Xf={type:"end"},og=1e-6,Gt={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM_PAN:4},$l=new ve,Fr=new ve,VA=new N,ec=new N,Qu=new N,yo=new hn,ag=new N,tc=new N,$u=new N,nc=new N;class GA extends If{constructor(e,t=null){super(e,t),this.enabled=!0,this.screen={left:0,top:0,width:0,height:0},this.rotateSpeed=1,this.zoomSpeed=1.2,this.panSpeed=.3,this.noRotate=!1,this.noZoom=!1,this.noPan=!1,this.staticMoving=!1,this.dynamicDampingFactor=.2,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.keys=["KeyA","KeyS","KeyD"],this.mouseButtons={LEFT:Ai.ROTATE,MIDDLE:Ai.DOLLY,RIGHT:Ai.PAN},this.state=Gt.NONE,this.keyState=Gt.NONE,this.target=new N,this._lastPosition=new N,this._lastZoom=1,this._touchZoomDistanceStart=0,this._touchZoomDistanceEnd=0,this._lastAngle=0,this._eye=new N,this._movePrev=new ve,this._moveCurr=new ve,this._lastAxis=new N,this._zoomStart=new ve,this._zoomEnd=new ve,this._panStart=new ve,this._panEnd=new ve,this._pointers=[],this._pointerPositions={},this._onPointerMove=WA.bind(this),this._onPointerDown=HA.bind(this),this._onPointerUp=XA.bind(this),this._onPointerCancel=YA.bind(this),this._onContextMenu=$A.bind(this),this._onMouseWheel=QA.bind(this),this._onKeyDown=jA.bind(this),this._onKeyUp=qA.bind(this),this._onTouchStart=e2.bind(this),this._onTouchMove=t2.bind(this),this._onTouchEnd=n2.bind(this),this._onMouseDown=ZA.bind(this),this._onMouseMove=JA.bind(this),this._onMouseUp=KA.bind(this),this._target0=this.target.clone(),this._position0=this.object.position.clone(),this._up0=this.object.up.clone(),this._zoom0=this.object.zoom,t!==null&&(this.connect(),this.handleResize()),this.update()}connect(){window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerCancel),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="none"}disconnect(){window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("keyup",this._onKeyUp),this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerCancel),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}handleResize(){const e=this.domElement.getBoundingClientRect(),t=this.domElement.ownerDocument.documentElement;this.screen.left=e.left+window.pageXOffset-t.clientLeft,this.screen.top=e.top+window.pageYOffset-t.clientTop,this.screen.width=e.width,this.screen.height=e.height}update(){this._eye.subVectors(this.object.position,this.target),this.noRotate||this._rotateCamera(),this.noZoom||this._zoomCamera(),this.noPan||this._panCamera(),this.object.position.addVectors(this.target,this._eye),this.object.isPerspectiveCamera?(this._checkDistances(),this.object.lookAt(this.target),this._lastPosition.distanceToSquared(this.object.position)>og&&(this.dispatchEvent(Ku),this._lastPosition.copy(this.object.position))):this.object.isOrthographicCamera?(this.object.lookAt(this.target),(this._lastPosition.distanceToSquared(this.object.position)>og||this._lastZoom!==this.object.zoom)&&(this.dispatchEvent(Ku),this._lastPosition.copy(this.object.position),this._lastZoom=this.object.zoom)):console.warn("THREE.TrackballControls: Unsupported camera type.")}reset(){this.state=Gt.NONE,this.keyState=Gt.NONE,this.target.copy(this._target0),this.object.position.copy(this._position0),this.object.up.copy(this._up0),this.object.zoom=this._zoom0,this.object.updateProjectionMatrix(),this._eye.subVectors(this.object.position,this.target),this.object.lookAt(this.target),this.dispatchEvent(Ku),this._lastPosition.copy(this.object.position),this._lastZoom=this.object.zoom}_panCamera(){if(Fr.copy(this._panEnd).sub(this._panStart),Fr.lengthSq()){if(this.object.isOrthographicCamera){const e=(this.object.right-this.object.left)/this.object.zoom/this.domElement.clientWidth,t=(this.object.top-this.object.bottom)/this.object.zoom/this.domElement.clientWidth;Fr.x*=e,Fr.y*=t}Fr.multiplyScalar(this._eye.length()*this.panSpeed),ec.copy(this._eye).cross(this.object.up).setLength(Fr.x),ec.add(VA.copy(this.object.up).setLength(Fr.y)),this.object.position.add(ec),this.target.add(ec),this.staticMoving?this._panStart.copy(this._panEnd):this._panStart.add(Fr.subVectors(this._panEnd,this._panStart).multiplyScalar(this.dynamicDampingFactor))}}_rotateCamera(){nc.set(this._moveCurr.x-this._movePrev.x,this._moveCurr.y-this._movePrev.y,0);let e=nc.length();e?(this._eye.copy(this.object.position).sub(this.target),ag.copy(this._eye).normalize(),tc.copy(this.object.up).normalize(),$u.crossVectors(tc,ag).normalize(),tc.setLength(this._moveCurr.y-this._movePrev.y),$u.setLength(this._moveCurr.x-this._movePrev.x),nc.copy(tc.add($u)),Qu.crossVectors(nc,this._eye).normalize(),e*=this.rotateSpeed,yo.setFromAxisAngle(Qu,e),this._eye.applyQuaternion(yo),this.object.up.applyQuaternion(yo),this._lastAxis.copy(Qu),this._lastAngle=e):!this.staticMoving&&this._lastAngle&&(this._lastAngle*=Math.sqrt(1-this.dynamicDampingFactor),this._eye.copy(this.object.position).sub(this.target),yo.setFromAxisAngle(this._lastAxis,this._lastAngle),this._eye.applyQuaternion(yo),this.object.up.applyQuaternion(yo)),this._movePrev.copy(this._moveCurr)}_zoomCamera(){let e;this.state===Gt.TOUCH_ZOOM_PAN?(e=this._touchZoomDistanceStart/this._touchZoomDistanceEnd,this._touchZoomDistanceStart=this._touchZoomDistanceEnd,this.object.isPerspectiveCamera?this._eye.multiplyScalar(e):this.object.isOrthographicCamera?(this.object.zoom=nr.clamp(this.object.zoom/e,this.minZoom,this.maxZoom),this._lastZoom!==this.object.zoom&&this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")):(e=1+(this._zoomEnd.y-this._zoomStart.y)*this.zoomSpeed,e!==1&&e>0&&(this.object.isPerspectiveCamera?this._eye.multiplyScalar(e):this.object.isOrthographicCamera?(this.object.zoom=nr.clamp(this.object.zoom/e,this.minZoom,this.maxZoom),this._lastZoom!==this.object.zoom&&this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")),this.staticMoving?this._zoomStart.copy(this._zoomEnd):this._zoomStart.y+=(this._zoomEnd.y-this._zoomStart.y)*this.dynamicDampingFactor)}_getMouseOnScreen(e,t){return $l.set((e-this.screen.left)/this.screen.width,(t-this.screen.top)/this.screen.height),$l}_getMouseOnCircle(e,t){return $l.set((e-this.screen.width*.5-this.screen.left)/(this.screen.width*.5),(this.screen.height+2*(this.screen.top-t))/this.screen.width),$l}_addPointer(e){this._pointers.push(e)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t].pointerId==e.pointerId){this._pointers.splice(t,1);return}}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new ve,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0].pointerId?this._pointers[1]:this._pointers[0];return this._pointerPositions[t.pointerId]}_checkDistances(){(!this.noZoom||!this.noPan)&&(this._eye.lengthSq()>this.maxDistance*this.maxDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.maxDistance)),this._zoomStart.copy(this._zoomEnd)),this._eye.lengthSq()<this.minDistance*this.minDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.minDistance)),this._zoomStart.copy(this._zoomEnd)))}}function HA(s){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(s.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),this._addPointer(s),s.pointerType==="touch"?this._onTouchStart(s):this._onMouseDown(s))}function WA(s){this.enabled!==!1&&(s.pointerType==="touch"?this._onTouchMove(s):this._onMouseMove(s))}function XA(s){this.enabled!==!1&&(s.pointerType==="touch"?this._onTouchEnd(s):this._onMouseUp(),this._removePointer(s),this._pointers.length===0&&(this.domElement.releasePointerCapture(s.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp)))}function YA(s){this._removePointer(s)}function qA(){this.enabled!==!1&&(this.keyState=Gt.NONE,window.addEventListener("keydown",this._onKeyDown))}function jA(s){this.enabled!==!1&&(window.removeEventListener("keydown",this._onKeyDown),this.keyState===Gt.NONE&&(s.code===this.keys[Gt.ROTATE]&&!this.noRotate?this.keyState=Gt.ROTATE:s.code===this.keys[Gt.ZOOM]&&!this.noZoom?this.keyState=Gt.ZOOM:s.code===this.keys[Gt.PAN]&&!this.noPan&&(this.keyState=Gt.PAN)))}function ZA(s){let e;switch(s.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case Ai.DOLLY:this.state=Gt.ZOOM;break;case Ai.ROTATE:this.state=Gt.ROTATE;break;case Ai.PAN:this.state=Gt.PAN;break;default:this.state=Gt.NONE}const t=this.keyState!==Gt.NONE?this.keyState:this.state;t===Gt.ROTATE&&!this.noRotate?(this._moveCurr.copy(this._getMouseOnCircle(s.pageX,s.pageY)),this._movePrev.copy(this._moveCurr)):t===Gt.ZOOM&&!this.noZoom?(this._zoomStart.copy(this._getMouseOnScreen(s.pageX,s.pageY)),this._zoomEnd.copy(this._zoomStart)):t===Gt.PAN&&!this.noPan&&(this._panStart.copy(this._getMouseOnScreen(s.pageX,s.pageY)),this._panEnd.copy(this._panStart)),this.dispatchEvent(Wf)}function JA(s){const e=this.keyState!==Gt.NONE?this.keyState:this.state;e===Gt.ROTATE&&!this.noRotate?(this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this._getMouseOnCircle(s.pageX,s.pageY))):e===Gt.ZOOM&&!this.noZoom?this._zoomEnd.copy(this._getMouseOnScreen(s.pageX,s.pageY)):e===Gt.PAN&&!this.noPan&&this._panEnd.copy(this._getMouseOnScreen(s.pageX,s.pageY))}function KA(){this.state=Gt.NONE,this.dispatchEvent(Xf)}function QA(s){if(this.enabled!==!1&&this.noZoom!==!0){switch(s.preventDefault(),s.deltaMode){case 2:this._zoomStart.y-=s.deltaY*.025;break;case 1:this._zoomStart.y-=s.deltaY*.01;break;default:this._zoomStart.y-=s.deltaY*25e-5;break}this.dispatchEvent(Wf),this.dispatchEvent(Xf)}}function $A(s){this.enabled!==!1&&s.preventDefault()}function e2(s){switch(this._trackPointer(s),this._pointers.length){case 1:this.state=Gt.TOUCH_ROTATE,this._moveCurr.copy(this._getMouseOnCircle(this._pointers[0].pageX,this._pointers[0].pageY)),this._movePrev.copy(this._moveCurr);break;default:this.state=Gt.TOUCH_ZOOM_PAN;const e=this._pointers[0].pageX-this._pointers[1].pageX,t=this._pointers[0].pageY-this._pointers[1].pageY;this._touchZoomDistanceEnd=this._touchZoomDistanceStart=Math.sqrt(e*e+t*t);const n=(this._pointers[0].pageX+this._pointers[1].pageX)/2,i=(this._pointers[0].pageY+this._pointers[1].pageY)/2;this._panStart.copy(this._getMouseOnScreen(n,i)),this._panEnd.copy(this._panStart);break}this.dispatchEvent(Wf)}function t2(s){switch(this._trackPointer(s),this._pointers.length){case 1:this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this._getMouseOnCircle(s.pageX,s.pageY));break;default:const e=this._getSecondPointerPosition(s),t=s.pageX-e.x,n=s.pageY-e.y;this._touchZoomDistanceEnd=Math.sqrt(t*t+n*n);const i=(s.pageX+e.x)/2,r=(s.pageY+e.y)/2;this._panEnd.copy(this._getMouseOnScreen(i,r));break}}function n2(s){switch(this._pointers.length){case 0:this.state=Gt.NONE;break;case 1:this.state=Gt.TOUCH_ROTATE,this._moveCurr.copy(this._getMouseOnCircle(s.pageX,s.pageY)),this._movePrev.copy(this._moveCurr);break;case 2:this.state=Gt.TOUCH_ZOOM_PAN;for(let e=0;e<this._pointers.length;e++)if(this._pointers[e].pointerId!==s.pointerId){const t=this._pointerPositions[this._pointers[e].pointerId];this._moveCurr.copy(this._getMouseOnCircle(t.x,t.y)),this._movePrev.copy(this._moveCurr);break}break}this.dispatchEvent(Xf)}function i2(s,e){var y;qn(e,!0);const[t,n]=ih(),i=()=>Ao(c,"$parent",t),r=()=>Ao(h,"$camera",t),o=()=>Ao(v,"$size",t);let a=ut(e,"ref",15),l=Wr(e,["$$slots","$$events","$$legacy","controls","renderTask","ref","onstart","onchange","onend"]);const c=Lf(),{camera:h,renderer:u,dom:d,autoRenderTask:f,shouldRender:p,size:v,invalidate:m}=Oi();a(new ig(h.current,u));const g=new Tt,x=xt(()=>e.controls??i());Do(((y=e.renderTask)==null?void 0:y.key)??Symbol("threlte-extras-gizmo-render"),()=>{if(p()){const _=u.toneMapping;u.getViewport(g),u.toneMapping=rr,a().render(),u.setViewport(g),u.toneMapping=_}},{autoInvalidate:!1,...e.renderTask??{after:f}}),Sn(()=>{a(a().camera=r(),!0)}),hi(()=>{if(xe(x))if(xe(x)instanceof j_||xe(x)instanceof GA){a(a().target=xe(x).target,!0);const _=()=>{a().update(!1)};return xe(x).addEventListener("change",_),()=>xe(x).removeEventListener("change",_)}else{const _=()=>{"getTarget"in xe(x)&&typeof xe(x).getTarget=="function"&&(xe(x).getTarget(a().target),a().update())},E=()=>{xe(x).setPosition(...h.current.position.toArray())};return a().addEventListener("change",E),xe(x).addEventListener("update",_),()=>{a().removeEventListener("change",E),xe(x).removeEventListener("update",_)}}}),hi(()=>{const _=E=>{var w;xe(x).enabled=!1,(w=e.onstart)==null||w.call(e,E)};return a().addEventListener("start",_),()=>a().removeEventListener("start",_)}),hi(()=>{const _=E=>{var w;m(),(w=e.onchange)==null||w.call(e,E)};return a().addEventListener("change",_),()=>a().removeEventListener("change",_)}),hi(()=>{const _=E=>{var w;xe(x).enabled=!0,(w=e.onend)==null||w.call(e,E)};return a().addEventListener("end",_),()=>a().removeEventListener("end",_)}),Sn(()=>{d&&(a().dispose(),a(new ig(h.current,u,{container:d,placement:"bottom-left",size:86,...l})),m())}),hi(()=>{o(),a().update(),m()}),hi(()=>()=>a().dispose()),jn(),n()}const r2={name:"HorizontalBlurShader",uniforms:{tDiffuse:{value:null},h:{value:1/512}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform sampler2D tDiffuse;
		uniform float h;

		varying vec2 vUv;

		void main() {

			vec4 sum = vec4( 0.0 );

			sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;
			sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;
			sum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;

			gl_FragColor = sum;

		}`},s2={name:"VerticalBlurShader",uniforms:{tDiffuse:{value:null},v:{value:1/512}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform sampler2D tDiffuse;
		uniform float v;

		varying vec2 vUv;

		void main() {

			vec4 sum = vec4( 0.0 );

			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;

			gl_FragColor = sum;

		}`};var o2=rn("<!> <!> <!>",1);function a2(s,e){qn(e,!0);let t=ut(e,"opacity",3,1),n=ut(e,"width",3,1),i=ut(e,"height",3,1),r=ut(e,"blur",3,1),o=ut(e,"far",3,10),a=ut(e,"smooth",3,!0),l=ut(e,"resolution",3,512),c=ut(e,"frames",3,1/0),h=ut(e,"scale",3,10),u=ut(e,"color",3,"#000000"),d=ut(e,"depthWrite",3,!1),f=ut(e,"ref",15),p=Wr(e,["$$slots","$$events","$$legacy","opacity","width","height","blur","far","smooth","resolution","frames","scale","color","depthWrite","ref","children"]);const{scene:v,renderer:m}=Oi(),g=new Yi,x=xt(()=>n()*(Array.isArray(h())?h()[0]:h()||1)),y=xt(()=>i()*(Array.isArray(h())?h()[1]:h()||1)),_=xt(()=>{const j=new Ni(l(),l());return j.texture.generateMipmaps=!1,j.texture.colorSpace=m.outputColorSpace,j}),E=xt(()=>{const j=new Ni(l(),l());return j.texture.generateMipmaps=!1,j}),w=xt(()=>new hr(xe(x),xe(y)).rotateX(Math.PI/2)),M=xt(()=>new zt(xe(w))),T=xt(()=>{const j=new el({depthTest:!1,depthWrite:!1});return j.onBeforeCompile=J=>{J.uniforms={...J.uniforms,uColor:{value:new ze(u()).convertSRGBToLinear()}},J.fragmentShader=`uniform vec3 uColor;
${J.fragmentShader}`,J.fragmentShader=J.fragmentShader.replace("vec4( vec3( 1.0 - fragCoordZ ), opacity );","vec4( uColor, ( 1.0 - fragCoordZ ) * 1.0 );"),J.fragmentShader=J.fragmentShader.replace("vec4(vec3(1.0-fragCoordZ),opacity);","vec4(uColor,(1.0-fragCoordZ)*1.0);")},j}),S=new mi({...r2,depthTest:!1}),b=new mi({...s2,depthTest:!1}),I=xt(()=>new Jr(-xe(x)/2,xe(x)/2,xe(y)/2,-xe(y)/2,0,o()));Sn(()=>xe(I).updateProjectionMatrix());const D=xt(()=>new Xn({map:xe(_).texture,transparent:!0,opacity:t(),depthWrite:d()})),G=j=>{xe(M).visible=!0,xe(M).material=S,S.uniforms.tDiffuse.value=xe(_).texture,S.uniforms.h.value=j*1/256,m.setRenderTarget(xe(E)),m.render(xe(M),xe(I)),xe(M).material=b,b.uniforms.tDiffuse.value=xe(E).texture,b.uniforms.v.value=j*1/256,m.setRenderTarget(xe(_)),m.render(xe(M),xe(I)),xe(M).visible=!1},H=()=>{const j=v.background;v.background=null;const J=v.overrideMaterial;v.overrideMaterial=xe(T);const B=m.getClearAlpha();m.setClearAlpha(0),m.setRenderTarget(xe(_)),m.render(v,xe(I)),v.overrideMaterial=J,G(r()),a()&&G(r()*.4),m.setRenderTarget(null),v.background=j,m.setClearAlpha(B)},$=()=>{H()},F=Do(()=>{H()},{autoStart:!1});let Z=0;const q=Do(()=>{H(),Z+=1,Z>=c()&&q.stop()},{autoStart:!1});return Sn(()=>{c()===Number.POSITIVE_INFINITY?F.start():Z<c()&&q.start()}),ji(()=>{xe(_).dispose(),xe(E).dispose(),xe(w).dispose(),xe(T).dispose(),S.dispose(),b.dispose(),xe(D).dispose()}),Ct(s,Uo({is:g},()=>p,{get ref(){return f()},set ref(j){f(j)},children:(j,J)=>{var B=Pt(),Y=ot(B);Ot(Y,()=>Ct.Group,(K,V)=>{V(K,{"rotation.x":Math.PI/2,children:(W,Q)=>{var X=o2(),te=ot(X);Ot(te,()=>Ct.Mesh,(we,re)=>{re(we,{"scale.y":-1,"rotation.x":-Math.PI/2,get material(){return xe(D)},get geometry(){return xe(w)}})});var ge=_t(te,2);Ct(ge,{get is(){return xe(I)},manual:!0});var be=_t(ge,2);Xr(be,()=>e.children??Ws,()=>({ref:g})),it(W,X)},$$slots:{default:!0}})}),it(j,B)},$$slots:{default:!0}})),jn({refresh:$})}const l2=()=>tA("threlte-controls",{orbitControls:pi(void 0),trackballControls:pi(void 0)});function c2(s,e){qn(e,!0);const[t,n]=ih(),i=()=>Ao(a,"$parent",t);let r=ut(e,"ref",15),o=Wr(e,["$$slots","$$events","$$legacy","ref","children"]);const a=Lf(),{dom:l,invalidate:c}=Oi();if(!Ei(i(),"Camera"))throw new Error("Parent missing: <OrbitControls> need to be a child of a <Camera>");const h=new j_(i(),l),{orbitControls:u}=l2(),{start:d,stop:f}=Do(()=>{h.update()},{autoStart:!1,autoInvalidate:!1});Sn(()=>{e.autoRotate||e.enableDamping?d():f()}),Sn(()=>{const p=v=>{var m;c(),(m=e.onchange)==null||m.call(e,v)};return u.set(h),h.addEventListener("change",p),()=>{u.set(void 0),h.removeEventListener("change",p)}}),Ct(s,Uo({is:h},()=>o,{get ref(){return r()},set ref(p){r(p)},children:(p,v)=>{var m=Pt(),g=ot(m);Xr(g,()=>e.children??Ws,()=>({ref:h})),it(p,m)},$$slots:{default:!0}})),jn(),n()}new rt;new rt;new zt;function lg(s,e){qn(e,!0);let t=ut(e,"points",19,()=>[]),n=ut(e,"shape",3,"none"),i=ut(e,"shapeFunction",7,()=>1),r=ut(e,"ref",15),o=t().length;const{invalidate:a}=Oi(),l=new Et(new Float32Array(o*6),3),c=new Et(new Float32Array(o*6),3),h=new Et(new Float32Array(o*6),3),u=new Et(new Float32Array(o*2),1),d=new Et(new Float32Array(o*2),1),f=new Et(new Float32Array(o*2),1),p=new Et(new Float32Array(o*4),2),v=new Et(new Uint16Array(o*6),1);n()==="taper"&&i(x=>1*Math.pow(4*x*(1-x),1));for(let x=0,y=0,_=0,E=0;x<o;x+=1,y+=2,_+=4,E+=6){u.setX(y,x/t().length),u.setX(y+1,x/t().length),d.setX(y,1),d.setX(y+1,-1);const w=n()==="none"?1:i()(x/(o-1));if(f.setX(y,w),f.setX(y+1,w),p.setXYZW(y,x/(o-1),0,x/(o-1),1),x<o-1){const M=x*2;v.setX(E+0,M+0),v.setX(E+1,M+1),v.setX(E+2,M+2),v.setX(E+3,M+2),v.setX(E+4,M+1),v.setX(E+5,M+3)}}const m=new yt;m.setAttribute("position",l),m.setAttribute("previous",c),m.setAttribute("next",h),m.setAttribute("counters",u),m.setAttribute("side",d),m.setAttribute("width",f),m.setAttribute("uv",p),m.setIndex(v);const g=x=>{if(x.length===0||x.length!==o)return;let y=0,_=0,E=0;const w=x[0];c.setXYZ(_,w.x,w.y,w.z),_+=1,c.setXYZ(_,w.x,w.y,w.z),_+=1;for(let T=0;T<o;T++){const S=x[T];l.setXYZ(y,S.x,S.y,S.z),y+=1,l.setXYZ(y,S.x,S.y,S.z),y+=1,T<o-1&&(c.setXYZ(_,S.x,S.y,S.z),_+=1,c.setXYZ(_,S.x,S.y,S.z),_+=1),T>0&&T+1<=o&&(h.setXYZ(E,S.x,S.y,S.z),E+=1,h.setXYZ(E,S.x,S.y,S.z),E+=1)}const M=x[o-1];h.setXYZ(E,M.x,M.y,M.z),E+=1,h.setXYZ(E,M.x,M.y,M.z),E+=1,l.needsUpdate=!0,c.needsUpdate=!0,h.needsUpdate=!0,m.computeBoundingSphere(),a()};Sn(()=>g(t())),Ct(s,Uo({is:m},()=>e.props,{get ref(){return r()},set ref(x){r(x)},children:(x,y)=>{var _=Pt(),E=ot(_);Xr(E,()=>e.children??Ws,()=>({ref:m})),it(x,_)},$$slots:{default:!0}})),jn()}`${mt.logdepthbuf_pars_vertex}${mt.fog_pars_vertex}${mt.logdepthbuf_vertex}${mt.fog_vertex}`;function Z_(s,e){qn(e,!0);const[t,n]=ih(),i=()=>Ao(h,"$camera",t);let r=ut(e,"follow",3,!0),o=ut(e,"ref",15),a=Wr(e,["$$slots","$$events","$$legacy","follow","ref","children"]);const l=new Yi,c=new Yi,{camera:h,renderStage:u}=Oi(),d=new hn;let f=xt(()=>r()===!0?i():r()===!1?void 0:r());const p=eA("<Billboard>",{before:u}),{start:v,stop:m}=Do(()=>{var g;c.updateMatrix(),c.updateWorldMatrix(!1,!1),c.getWorldQuaternion(d),(g=xe(f))==null||g.getWorldQuaternion(l.quaternion).premultiply(d.invert())},{autoStart:!1,stage:p});Sn(()=>{r()?v():m()}),Ct(s,Uo({is:c},()=>a,{get ref(){return o()},set ref(g){o(g)},children:(g,x)=>{Ct(g,{is:l,children:(y,_)=>{var E=Pt(),w=ot(E);Xr(w,()=>e.children??Ws,()=>({ref:c})),it(y,E)},$$slots:{default:!0}})},$$slots:{default:!0}})),jn(),n()}`${mt.tonemapping_fragment}${mt.colorspace_fragment}`;`${mt.tonemapping_fragment}${mt.colorspace_fragment}`;const h2=`

// A stack of uint32 indices can can store the indices for
// a perfectly balanced tree with a depth up to 31. Lower stack
// depth gets higher performance.
//
// However not all trees are balanced. Best value to set this to
// is the trees max depth.
#ifndef BVH_STACK_DEPTH
#define BVH_STACK_DEPTH 60
#endif

#ifndef INFINITY
#define INFINITY 1e20
#endif

// Utilities
uvec4 uTexelFetch1D( usampler2D tex, uint index ) {

	uint width = uint( textureSize( tex, 0 ).x );
	uvec2 uv;
	uv.x = index % width;
	uv.y = index / width;

	return texelFetch( tex, ivec2( uv ), 0 );

}

ivec4 iTexelFetch1D( isampler2D tex, uint index ) {

	uint width = uint( textureSize( tex, 0 ).x );
	uvec2 uv;
	uv.x = index % width;
	uv.y = index / width;

	return texelFetch( tex, ivec2( uv ), 0 );

}

vec4 texelFetch1D( sampler2D tex, uint index ) {

	uint width = uint( textureSize( tex, 0 ).x );
	uvec2 uv;
	uv.x = index % width;
	uv.y = index / width;

	return texelFetch( tex, ivec2( uv ), 0 );

}

vec4 textureSampleBarycoord( sampler2D tex, vec3 barycoord, uvec3 faceIndices ) {

	return
		barycoord.x * texelFetch1D( tex, faceIndices.x ) +
		barycoord.y * texelFetch1D( tex, faceIndices.y ) +
		barycoord.z * texelFetch1D( tex, faceIndices.z );

}

void ndcToCameraRay(
	vec2 coord, mat4 cameraWorld, mat4 invProjectionMatrix,
	out vec3 rayOrigin, out vec3 rayDirection
) {

	// get camera look direction and near plane for camera clipping
	vec4 lookDirection = cameraWorld * vec4( 0.0, 0.0, - 1.0, 0.0 );
	vec4 nearVector = invProjectionMatrix * vec4( 0.0, 0.0, - 1.0, 1.0 );
	float near = abs( nearVector.z / nearVector.w );

	// get the camera direction and position from camera matrices
	vec4 origin = cameraWorld * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec4 direction = invProjectionMatrix * vec4( coord, 0.5, 1.0 );
	direction /= direction.w;
	direction = cameraWorld * direction - origin;

	// slide the origin along the ray until it sits at the near clip plane position
	origin.xyz += direction.xyz * near / dot( direction, lookDirection );

	rayOrigin = origin.xyz;
	rayDirection = direction.xyz;

}
`,u2=`

#ifndef TRI_INTERSECT_EPSILON
#define TRI_INTERSECT_EPSILON 1e-5
#endif

// Raycasting
bool intersectsBounds( vec3 rayOrigin, vec3 rayDirection, vec3 boundsMin, vec3 boundsMax, out float dist ) {

	// https://www.reddit.com/r/opengl/comments/8ntzz5/fast_glsl_ray_box_intersection/
	// https://tavianator.com/2011/ray_box.html
	vec3 invDir = 1.0 / rayDirection;

	// find intersection distances for each plane
	vec3 tMinPlane = invDir * ( boundsMin - rayOrigin );
	vec3 tMaxPlane = invDir * ( boundsMax - rayOrigin );

	// get the min and max distances from each intersection
	vec3 tMinHit = min( tMaxPlane, tMinPlane );
	vec3 tMaxHit = max( tMaxPlane, tMinPlane );

	// get the furthest hit distance
	vec2 t = max( tMinHit.xx, tMinHit.yz );
	float t0 = max( t.x, t.y );

	// get the minimum hit distance
	t = min( tMaxHit.xx, tMaxHit.yz );
	float t1 = min( t.x, t.y );

	// set distance to 0.0 if the ray starts inside the box
	dist = max( t0, 0.0 );

	return t1 >= dist;

}

bool intersectsTriangle(
	vec3 rayOrigin, vec3 rayDirection, vec3 a, vec3 b, vec3 c,
	out vec3 barycoord, out vec3 norm, out float dist, out float side
) {

	// https://stackoverflow.com/questions/42740765/intersection-between-line-and-triangle-in-3d
	vec3 edge1 = b - a;
	vec3 edge2 = c - a;
	norm = cross( edge1, edge2 );

	float det = - dot( rayDirection, norm );
	float invdet = 1.0 / det;

	vec3 AO = rayOrigin - a;
	vec3 DAO = cross( AO, rayDirection );

	vec4 uvt;
	uvt.x = dot( edge2, DAO ) * invdet;
	uvt.y = - dot( edge1, DAO ) * invdet;
	uvt.z = dot( AO, norm ) * invdet;
	uvt.w = 1.0 - uvt.x - uvt.y;

	// set the hit information
	barycoord = uvt.wxy; // arranged in A, B, C order
	dist = uvt.z;
	side = sign( det );
	norm = side * normalize( norm );

	// add an epsilon to avoid misses between triangles
	uvt += vec4( TRI_INTERSECT_EPSILON );

	return all( greaterThanEqual( uvt, vec4( 0.0 ) ) );

}

bool intersectTriangles(
	// geometry info and triangle range
	sampler2D positionAttr, usampler2D indexAttr, uint offset, uint count,

	// ray
	vec3 rayOrigin, vec3 rayDirection,

	// outputs
	inout float minDistance, inout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord,
	inout float side, inout float dist
) {

	bool found = false;
	vec3 localBarycoord, localNormal;
	float localDist, localSide;
	for ( uint i = offset, l = offset + count; i < l; i ++ ) {

		uvec3 indices = uTexelFetch1D( indexAttr, i ).xyz;
		vec3 a = texelFetch1D( positionAttr, indices.x ).rgb;
		vec3 b = texelFetch1D( positionAttr, indices.y ).rgb;
		vec3 c = texelFetch1D( positionAttr, indices.z ).rgb;

		if (
			intersectsTriangle( rayOrigin, rayDirection, a, b, c, localBarycoord, localNormal, localDist, localSide )
			&& localDist < minDistance
		) {

			found = true;
			minDistance = localDist;

			faceIndices = uvec4( indices.xyz, i );
			faceNormal = localNormal;

			side = localSide;
			barycoord = localBarycoord;
			dist = localDist;

		}

	}

	return found;

}

bool intersectsBVHNodeBounds( vec3 rayOrigin, vec3 rayDirection, sampler2D bvhBounds, uint currNodeIndex, out float dist ) {

	uint cni2 = currNodeIndex * 2u;
	vec3 boundsMin = texelFetch1D( bvhBounds, cni2 ).xyz;
	vec3 boundsMax = texelFetch1D( bvhBounds, cni2 + 1u ).xyz;
	return intersectsBounds( rayOrigin, rayDirection, boundsMin, boundsMax, dist );

}

// use a macro to hide the fact that we need to expand the struct into separate fields
#define	bvhIntersectFirstHit(		bvh,		rayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist	)	_bvhIntersectFirstHit(		bvh.position, bvh.index, bvh.bvhBounds, bvh.bvhContents,		rayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist	)

bool _bvhIntersectFirstHit(
	// bvh info
	sampler2D bvh_position, usampler2D bvh_index, sampler2D bvh_bvhBounds, usampler2D bvh_bvhContents,

	// ray
	vec3 rayOrigin, vec3 rayDirection,

	// output variables split into separate variables due to output precision
	inout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord,
	inout float side, inout float dist
) {

	// stack needs to be twice as long as the deepest tree we expect because
	// we push both the left and right child onto the stack every traversal
	int ptr = 0;
	uint stack[ BVH_STACK_DEPTH ];
	stack[ 0 ] = 0u;

	float triangleDistance = INFINITY;
	bool found = false;
	while ( ptr > - 1 && ptr < BVH_STACK_DEPTH ) {

		uint currNodeIndex = stack[ ptr ];
		ptr --;

		// check if we intersect the current bounds
		float boundsHitDistance;
		if (
			! intersectsBVHNodeBounds( rayOrigin, rayDirection, bvh_bvhBounds, currNodeIndex, boundsHitDistance )
			|| boundsHitDistance > triangleDistance
		) {

			continue;

		}

		uvec2 boundsInfo = uTexelFetch1D( bvh_bvhContents, currNodeIndex ).xy;
		bool isLeaf = bool( boundsInfo.x & 0xffff0000u );

		if ( isLeaf ) {

			uint count = boundsInfo.x & 0x0000ffffu;
			uint offset = boundsInfo.y;

			found = intersectTriangles(
				bvh_position, bvh_index, offset, count,
				rayOrigin, rayDirection, triangleDistance,
				faceIndices, faceNormal, barycoord, side, dist
			) || found;

		} else {

			uint leftIndex = currNodeIndex + 1u;
			uint splitAxis = boundsInfo.x & 0x0000ffffu;
			uint rightIndex = boundsInfo.y;

			bool leftToRight = rayDirection[ splitAxis ] >= 0.0;
			uint c1 = leftToRight ? leftIndex : rightIndex;
			uint c2 = leftToRight ? rightIndex : leftIndex;

			// set c2 in the stack so we traverse it later. We need to keep track of a pointer in
			// the stack while we traverse. The second pointer added is the one that will be
			// traversed first
			ptr ++;
			stack[ ptr ] = c2;

			ptr ++;
			stack[ ptr ] = c1;

		}

	}

	return found;

}
`,d2=`
struct BVH {

	usampler2D index;
	sampler2D position;

	sampler2D bvhBounds;
	usampler2D bvhContents;

};
`,f2=d2,p2=`
	${h2}
	${u2}
`;`${f2}${p2}${mt.tonemapping_fragment}${mt.colorspace_fragment}`;function J_(){var s=function(e){function t(j,J,B,Y,K,V,W,Q){var X=1-W;Q.x=X*X*j+2*X*W*B+W*W*K,Q.y=X*X*J+2*X*W*Y+W*W*V}function n(j,J,B,Y,K,V,W,Q,X,te){var ge=1-X;te.x=ge*ge*ge*j+3*ge*ge*X*B+3*ge*X*X*K+X*X*X*W,te.y=ge*ge*ge*J+3*ge*ge*X*Y+3*ge*X*X*V+X*X*X*Q}function i(j,J){for(var B=/([MLQCZ])([^MLQCZ]*)/g,Y,K,V,W,Q;Y=B.exec(j);){var X=Y[2].replace(/^\s*|\s*$/g,"").split(/[,\s]+/).map(function(te){return parseFloat(te)});switch(Y[1]){case"M":W=K=X[0],Q=V=X[1];break;case"L":(X[0]!==W||X[1]!==Q)&&J("L",W,Q,W=X[0],Q=X[1]);break;case"Q":{J("Q",W,Q,W=X[2],Q=X[3],X[0],X[1]);break}case"C":{J("C",W,Q,W=X[4],Q=X[5],X[0],X[1],X[2],X[3]);break}case"Z":(W!==K||Q!==V)&&J("L",W,Q,K,V);break}}}function r(j,J,B){B===void 0&&(B=16);var Y={x:0,y:0};i(j,function(K,V,W,Q,X,te,ge,be,we){switch(K){case"L":J(V,W,Q,X);break;case"Q":{for(var re=V,me=W,z=1;z<B;z++)t(V,W,te,ge,Q,X,z/(B-1),Y),J(re,me,Y.x,Y.y),re=Y.x,me=Y.y;break}case"C":{for(var Me=V,de=W,Ee=1;Ee<B;Ee++)n(V,W,te,ge,be,we,Q,X,Ee/(B-1),Y),J(Me,de,Y.x,Y.y),Me=Y.x,de=Y.y;break}}})}var o="precision highp float;attribute vec2 aUV;varying vec2 vUV;void main(){vUV=aUV;gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}",a="precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){gl_FragColor=texture2D(tex,vUV);}",l=new WeakMap,c={premultipliedAlpha:!1,preserveDrawingBuffer:!0,antialias:!1,depth:!1};function h(j,J){var B=j.getContext?j.getContext("webgl",c):j,Y=l.get(B);if(!Y){let ge=function(Me){var de=V[Me];if(!de&&(de=V[Me]=B.getExtension(Me),!de))throw new Error(Me+" not supported");return de},be=function(Me,de){var Ee=B.createShader(de);return B.shaderSource(Ee,Me),B.compileShader(Ee),Ee},we=function(Me,de,Ee,ce){if(!W[Me]){var Ue={},_e={},P=B.createProgram();B.attachShader(P,be(de,B.VERTEX_SHADER)),B.attachShader(P,be(Ee,B.FRAGMENT_SHADER)),B.linkProgram(P),W[Me]={program:P,transaction:function(ee){B.useProgram(P),ee({setUniform:function(le,fe){for(var Ae=[],ye=arguments.length-2;ye-- >0;)Ae[ye]=arguments[ye+2];var Ce=_e[fe]||(_e[fe]=B.getUniformLocation(P,fe));B["uniform"+le].apply(B,[Ce].concat(Ae))},setAttribute:function(le,fe,Ae,ye,Ce){var He=Ue[le];He||(He=Ue[le]={buf:B.createBuffer(),loc:B.getAttribLocation(P,le),data:null}),B.bindBuffer(B.ARRAY_BUFFER,He.buf),B.vertexAttribPointer(He.loc,fe,B.FLOAT,!1,0,0),B.enableVertexAttribArray(He.loc),K?B.vertexAttribDivisor(He.loc,ye):ge("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(He.loc,ye),Ce!==He.data&&(B.bufferData(B.ARRAY_BUFFER,Ce,Ae),He.data=Ce)}})}}}W[Me].transaction(ce)},re=function(Me,de){X++;try{B.activeTexture(B.TEXTURE0+X);var Ee=Q[Me];Ee||(Ee=Q[Me]=B.createTexture(),B.bindTexture(B.TEXTURE_2D,Ee),B.texParameteri(B.TEXTURE_2D,B.TEXTURE_MIN_FILTER,B.NEAREST),B.texParameteri(B.TEXTURE_2D,B.TEXTURE_MAG_FILTER,B.NEAREST)),B.bindTexture(B.TEXTURE_2D,Ee),de(Ee,X)}finally{X--}},me=function(Me,de,Ee){var ce=B.createFramebuffer();te.push(ce),B.bindFramebuffer(B.FRAMEBUFFER,ce),B.activeTexture(B.TEXTURE0+de),B.bindTexture(B.TEXTURE_2D,Me),B.framebufferTexture2D(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,B.TEXTURE_2D,Me,0);try{Ee(ce)}finally{B.deleteFramebuffer(ce),B.bindFramebuffer(B.FRAMEBUFFER,te[--te.length-1]||null)}},z=function(){V={},W={},Q={},X=-1,te.length=0};var K=typeof WebGL2RenderingContext<"u"&&B instanceof WebGL2RenderingContext,V={},W={},Q={},X=-1,te=[];B.canvas.addEventListener("webglcontextlost",function(Me){z(),Me.preventDefault()},!1),l.set(B,Y={gl:B,isWebGL2:K,getExtension:ge,withProgram:we,withTexture:re,withTextureFramebuffer:me,handleContextLoss:z})}J(Y)}function u(j,J,B,Y,K,V,W,Q){W===void 0&&(W=15),Q===void 0&&(Q=null),h(j,function(X){var te=X.gl,ge=X.withProgram,be=X.withTexture;be("copy",function(we,re){te.texImage2D(te.TEXTURE_2D,0,te.RGBA,K,V,0,te.RGBA,te.UNSIGNED_BYTE,J),ge("copy",o,a,function(me){var z=me.setUniform,Me=me.setAttribute;Me("aUV",2,te.STATIC_DRAW,0,new Float32Array([0,0,2,0,0,2])),z("1i","image",re),te.bindFramebuffer(te.FRAMEBUFFER,Q||null),te.disable(te.BLEND),te.colorMask(W&8,W&4,W&2,W&1),te.viewport(B,Y,K,V),te.scissor(B,Y,K,V),te.drawArrays(te.TRIANGLES,0,3)})})})}function d(j,J,B){var Y=j.width,K=j.height;h(j,function(V){var W=V.gl,Q=new Uint8Array(Y*K*4);W.readPixels(0,0,Y,K,W.RGBA,W.UNSIGNED_BYTE,Q),j.width=J,j.height=B,u(W,Q,0,0,Y,K)})}var f=Object.freeze({__proto__:null,withWebGLContext:h,renderImageData:u,resizeWebGLCanvasWithoutClearing:d});function p(j,J,B,Y,K,V){V===void 0&&(V=1);var W=new Uint8Array(j*J),Q=Y[2]-Y[0],X=Y[3]-Y[1],te=[];r(B,function(Me,de,Ee,ce){te.push({x1:Me,y1:de,x2:Ee,y2:ce,minX:Math.min(Me,Ee),minY:Math.min(de,ce),maxX:Math.max(Me,Ee),maxY:Math.max(de,ce)})}),te.sort(function(Me,de){return Me.maxX-de.maxX});for(var ge=0;ge<j;ge++)for(var be=0;be<J;be++){var we=me(Y[0]+Q*(ge+.5)/j,Y[1]+X*(be+.5)/J),re=Math.pow(1-Math.abs(we)/K,V)/2;we<0&&(re=1-re),re=Math.max(0,Math.min(255,Math.round(re*255))),W[be*j+ge]=re}return W;function me(Me,de){for(var Ee=1/0,ce=1/0,Ue=te.length;Ue--;){var _e=te[Ue];if(_e.maxX+ce<=Me)break;if(Me+ce>_e.minX&&de-ce<_e.maxY&&de+ce>_e.minY){var P=g(Me,de,_e.x1,_e.y1,_e.x2,_e.y2);P<Ee&&(Ee=P,ce=Math.sqrt(Ee))}}return z(Me,de)&&(ce=-ce),ce}function z(Me,de){for(var Ee=0,ce=te.length;ce--;){var Ue=te[ce];if(Ue.maxX<=Me)break;var _e=Ue.y1>de!=Ue.y2>de&&Me<(Ue.x2-Ue.x1)*(de-Ue.y1)/(Ue.y2-Ue.y1)+Ue.x1;_e&&(Ee+=Ue.y1<Ue.y2?1:-1)}return Ee!==0}}function v(j,J,B,Y,K,V,W,Q,X,te){V===void 0&&(V=1),Q===void 0&&(Q=0),X===void 0&&(X=0),te===void 0&&(te=0),m(j,J,B,Y,K,V,W,null,Q,X,te)}function m(j,J,B,Y,K,V,W,Q,X,te,ge){V===void 0&&(V=1),X===void 0&&(X=0),te===void 0&&(te=0),ge===void 0&&(ge=0);for(var be=p(j,J,B,Y,K,V),we=new Uint8Array(be.length*4),re=0;re<be.length;re++)we[re*4+ge]=be[re];u(W,we,X,te,j,J,1<<3-ge,Q)}function g(j,J,B,Y,K,V){var W=K-B,Q=V-Y,X=W*W+Q*Q,te=X?Math.max(0,Math.min(1,((j-B)*W+(J-Y)*Q)/X)):0,ge=j-(B+te*W),be=J-(Y+te*Q);return ge*ge+be*be}var x=Object.freeze({__proto__:null,generate:p,generateIntoCanvas:v,generateIntoFramebuffer:m}),y="precision highp float;uniform vec4 uGlyphBounds;attribute vec2 aUV;attribute vec4 aLineSegment;varying vec4 vLineSegment;varying vec2 vGlyphXY;void main(){vLineSegment=aLineSegment;vGlyphXY=mix(uGlyphBounds.xy,uGlyphBounds.zw,aUV);gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}",_="precision highp float;uniform vec4 uGlyphBounds;uniform float uMaxDistance;uniform float uExponent;varying vec4 vLineSegment;varying vec2 vGlyphXY;float absDistToSegment(vec2 point,vec2 lineA,vec2 lineB){vec2 lineDir=lineB-lineA;float lenSq=dot(lineDir,lineDir);float t=lenSq==0.0 ? 0.0 : clamp(dot(point-lineA,lineDir)/lenSq,0.0,1.0);vec2 linePt=lineA+t*lineDir;return distance(point,linePt);}void main(){vec4 seg=vLineSegment;vec2 p=vGlyphXY;float dist=absDistToSegment(p,seg.xy,seg.zw);float val=pow(1.0-clamp(dist/uMaxDistance,0.0,1.0),uExponent)*0.5;bool crossing=(seg.y>p.y!=seg.w>p.y)&&(p.x<(seg.z-seg.x)*(p.y-seg.y)/(seg.w-seg.y)+seg.x);bool crossingUp=crossing&&vLineSegment.y<vLineSegment.w;gl_FragColor=vec4(crossingUp ? 1.0/255.0 : 0.0,crossing&&!crossingUp ? 1.0/255.0 : 0.0,0.0,val);}",E="precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){vec4 color=texture2D(tex,vUV);bool inside=color.r!=color.g;float val=inside ? 1.0-color.a : color.a;gl_FragColor=vec4(val);}",w=new Float32Array([0,0,2,0,0,2]),M=null,T=!1,S={},b=new WeakMap;function I(j){if(!T&&!$(j))throw new Error("WebGL generation not supported")}function D(j,J,B,Y,K,V,W){if(V===void 0&&(V=1),W===void 0&&(W=null),!W&&(W=M,!W)){var Q=typeof OffscreenCanvas=="function"?new OffscreenCanvas(1,1):typeof document<"u"?document.createElement("canvas"):null;if(!Q)throw new Error("OffscreenCanvas or DOM canvas not supported");W=M=Q.getContext("webgl",{depth:!1})}I(W);var X=new Uint8Array(j*J*4);h(W,function(we){var re=we.gl,me=we.withTexture,z=we.withTextureFramebuffer;me("readable",function(Me,de){re.texImage2D(re.TEXTURE_2D,0,re.RGBA,j,J,0,re.RGBA,re.UNSIGNED_BYTE,null),z(Me,de,function(Ee){H(j,J,B,Y,K,V,re,Ee,0,0,0),re.readPixels(0,0,j,J,re.RGBA,re.UNSIGNED_BYTE,X)})})});for(var te=new Uint8Array(j*J),ge=0,be=0;ge<X.length;ge+=4)te[be++]=X[ge];return te}function G(j,J,B,Y,K,V,W,Q,X,te){V===void 0&&(V=1),Q===void 0&&(Q=0),X===void 0&&(X=0),te===void 0&&(te=0),H(j,J,B,Y,K,V,W,null,Q,X,te)}function H(j,J,B,Y,K,V,W,Q,X,te,ge){V===void 0&&(V=1),X===void 0&&(X=0),te===void 0&&(te=0),ge===void 0&&(ge=0),I(W);var be=[];r(B,function(we,re,me,z){be.push(we,re,me,z)}),be=new Float32Array(be),h(W,function(we){var re=we.gl,me=we.isWebGL2,z=we.getExtension,Me=we.withProgram,de=we.withTexture,Ee=we.withTextureFramebuffer,ce=we.handleContextLoss;if(de("rawDistances",function(Ue,_e){(j!==Ue._lastWidth||J!==Ue._lastHeight)&&re.texImage2D(re.TEXTURE_2D,0,re.RGBA,Ue._lastWidth=j,Ue._lastHeight=J,0,re.RGBA,re.UNSIGNED_BYTE,null),Me("main",y,_,function(P){var R=P.setAttribute,ee=P.setUniform,ae=!me&&z("ANGLE_instanced_arrays"),le=!me&&z("EXT_blend_minmax");R("aUV",2,re.STATIC_DRAW,0,w),R("aLineSegment",4,re.DYNAMIC_DRAW,1,be),ee.apply(void 0,["4f","uGlyphBounds"].concat(Y)),ee("1f","uMaxDistance",K),ee("1f","uExponent",V),Ee(Ue,_e,function(fe){re.enable(re.BLEND),re.colorMask(!0,!0,!0,!0),re.viewport(0,0,j,J),re.scissor(0,0,j,J),re.blendFunc(re.ONE,re.ONE),re.blendEquationSeparate(re.FUNC_ADD,me?re.MAX:le.MAX_EXT),re.clear(re.COLOR_BUFFER_BIT),me?re.drawArraysInstanced(re.TRIANGLES,0,3,be.length/4):ae.drawArraysInstancedANGLE(re.TRIANGLES,0,3,be.length/4)})}),Me("post",o,E,function(P){P.setAttribute("aUV",2,re.STATIC_DRAW,0,w),P.setUniform("1i","tex",_e),re.bindFramebuffer(re.FRAMEBUFFER,Q),re.disable(re.BLEND),re.colorMask(ge===0,ge===1,ge===2,ge===3),re.viewport(X,te,j,J),re.scissor(X,te,j,J),re.drawArrays(re.TRIANGLES,0,3)})}),re.isContextLost())throw ce(),new Error("webgl context lost")})}function $(j){var J=!j||j===M?S:j.canvas||j,B=b.get(J);if(B===void 0){T=!0;var Y=null;try{var K=[97,106,97,61,99,137,118,80,80,118,137,99,61,97,106,97],V=D(4,4,"M8,8L16,8L24,24L16,24Z",[0,0,32,32],24,1,j);B=V&&K.length===V.length&&V.every(function(W,Q){return W===K[Q]}),B||(Y="bad trial run results",console.info(K,V))}catch(W){B=!1,Y=W.message}Y&&console.warn("WebGL SDF generation not supported:",Y),T=!1,b.set(J,B)}return B}var F=Object.freeze({__proto__:null,generate:D,generateIntoCanvas:G,generateIntoFramebuffer:H,isSupported:$});function Z(j,J,B,Y,K,V){K===void 0&&(K=Math.max(Y[2]-Y[0],Y[3]-Y[1])/2),V===void 0&&(V=1);try{return D.apply(F,arguments)}catch(W){return console.info("WebGL SDF generation failed, falling back to JS",W),p.apply(x,arguments)}}function q(j,J,B,Y,K,V,W,Q,X,te){K===void 0&&(K=Math.max(Y[2]-Y[0],Y[3]-Y[1])/2),V===void 0&&(V=1),Q===void 0&&(Q=0),X===void 0&&(X=0),te===void 0&&(te=0);try{return G.apply(F,arguments)}catch(ge){return console.info("WebGL SDF generation failed, falling back to JS",ge),v.apply(x,arguments)}}return e.forEachPathCommand=i,e.generate=Z,e.generateIntoCanvas=q,e.javascript=x,e.pathToLineSegments=r,e.webgl=F,e.webglUtils=f,Object.defineProperty(e,"__esModule",{value:!0}),e}({});return s}function m2(){var s=function(e){var t={R:"13k,1a,2,3,3,2+1j,ch+16,a+1,5+2,2+n,5,a,4,6+16,4+3,h+1b,4mo,179q,2+9,2+11,2i9+7y,2+68,4,3+4,5+13,4+3,2+4k,3+29,8+cf,1t+7z,w+17,3+3m,1t+3z,16o1+5r,8+30,8+mc,29+1r,29+4v,75+73",EN:"1c+9,3d+1,6,187+9,513,4+5,7+9,sf+j,175h+9,qw+q,161f+1d,4xt+a,25i+9",ES:"17,2,6dp+1,f+1,av,16vr,mx+1,4o,2",ET:"z+2,3h+3,b+1,ym,3e+1,2o,p4+1,8,6u,7c,g6,1wc,1n9+4,30+1b,2n,6d,qhx+1,h0m,a+1,49+2,63+1,4+1,6bb+3,12jj",AN:"16o+5,2j+9,2+1,35,ed,1ff2+9,87+u",CS:"18,2+1,b,2u,12k,55v,l,17v0,2,3,53,2+1,b",B:"a,3,f+2,2v,690",S:"9,2,k",WS:"c,k,4f4,1vk+a,u,1j,335",ON:"x+1,4+4,h+5,r+5,r+3,z,5+3,2+1,2+1,5,2+2,3+4,o,w,ci+1,8+d,3+d,6+8,2+g,39+1,9,6+1,2,33,b8,3+1,3c+1,7+1,5r,b,7h+3,sa+5,2,3i+6,jg+3,ur+9,2v,ij+1,9g+9,7+a,8m,4+1,49+x,14u,2+2,c+2,e+2,e+2,e+1,i+n,e+e,2+p,u+2,e+2,36+1,2+3,2+1,b,2+2,6+5,2,2,2,h+1,5+4,6+3,3+f,16+2,5+3l,3+81,1y+p,2+40,q+a,m+13,2r+ch,2+9e,75+hf,3+v,2+2w,6e+5,f+6,75+2a,1a+p,2+2g,d+5x,r+b,6+3,4+o,g,6+1,6+2,2k+1,4,2j,5h+z,1m+1,1e+f,t+2,1f+e,d+3,4o+3,2s+1,w,535+1r,h3l+1i,93+2,2s,b+1,3l+x,2v,4g+3,21+3,kz+1,g5v+1,5a,j+9,n+v,2,3,2+8,2+1,3+2,2,3,46+1,4+4,h+5,r+5,r+a,3h+2,4+6,b+4,78,1r+24,4+c,4,1hb,ey+6,103+j,16j+c,1ux+7,5+g,fsh,jdq+1t,4,57+2e,p1,1m,1m,1m,1m,4kt+1,7j+17,5+2r,d+e,3+e,2+e,2+10,m+4,w,1n+5,1q,4z+5,4b+rb,9+c,4+c,4+37,d+2g,8+b,l+b,5+1j,9+9,7+13,9+t,3+1,27+3c,2+29,2+3q,d+d,3+4,4+2,6+6,a+o,8+6,a+2,e+6,16+42,2+1i",BN:"0+8,6+d,2s+5,2+p,e,4m9,1kt+2,2b+5,5+5,17q9+v,7k,6p+8,6+1,119d+3,440+7,96s+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+75,6p+2rz,1ben+1,1ekf+1,1ekf+1",NSM:"lc+33,7o+6,7c+18,2,2+1,2+1,2,21+a,1d+k,h,2u+6,3+5,3+1,2+3,10,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,g+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+g,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,k1+w,2db+2,3y,2p+v,ff+3,30+1,n9x+3,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,r2,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+5,3+1,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2d+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,f0c+4,1o+6,t5,1s+3,2a,f5l+1,43t+2,i+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,gzhy+6n",AL:"16w,3,2,e+1b,z+2,2+2s,g+1,8+1,b+m,2+t,s+2i,c+e,4h+f,1d+1e,1bwe+dp,3+3z,x+c,2+1,35+3y,2rm+z,5+7,b+5,dt+l,c+u,17nl+27,1t+27,4x+6n,3+d",LRO:"6ct",RLO:"6cu",LRE:"6cq",RLE:"6cr",PDF:"6cs",LRI:"6ee",RLI:"6ef",FSI:"6eg",PDI:"6eh"},n={},i={};n.L=1,i[1]="L",Object.keys(t).forEach(function(ce,Ue){n[ce]=1<<Ue+1,i[n[ce]]=ce}),Object.freeze(n);var r=n.LRI|n.RLI|n.FSI,o=n.L|n.R|n.AL,a=n.B|n.S|n.WS|n.ON|n.FSI|n.LRI|n.RLI|n.PDI,l=n.BN|n.RLE|n.LRE|n.RLO|n.LRO|n.PDF,c=n.S|n.WS|n.B|r|n.PDI|l,h=null;function u(){if(!h){h=new Map;var ce=function(_e){if(t.hasOwnProperty(_e)){var P=0;t[_e].split(",").forEach(function(R){var ee=R.split("+"),ae=ee[0],le=ee[1];ae=parseInt(ae,36),le=le?parseInt(le,36):0,h.set(P+=ae,n[_e]);for(var fe=0;fe<le;fe++)h.set(++P,n[_e])})}};for(var Ue in t)ce(Ue)}}function d(ce){return u(),h.get(ce.codePointAt(0))||n.L}function f(ce){return i[d(ce)]}var p={pairs:"14>1,1e>2,u>2,2wt>1,1>1,1ge>1,1wp>1,1j>1,f>1,hm>1,1>1,u>1,u6>1,1>1,+5,28>1,w>1,1>1,+3,b8>1,1>1,+3,1>3,-1>-1,3>1,1>1,+2,1s>1,1>1,x>1,th>1,1>1,+2,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,4q>1,1e>2,u>2,2>1,+1",canonical:"6f1>-6dx,6dy>-6dx,6ec>-6ed,6ee>-6ed,6ww>2jj,-2ji>2jj,14r4>-1e7l,1e7m>-1e7l,1e7m>-1e5c,1e5d>-1e5b,1e5c>-14qx,14qy>-14qx,14vn>-1ecg,1ech>-1ecg,1edu>-1ecg,1eci>-1ecg,1eda>-1ecg,1eci>-1ecg,1eci>-168q,168r>-168q,168s>-14ye,14yf>-14ye"};function v(ce,Ue){var _e=36,P=0,R=new Map,ee=Ue&&new Map,ae;return ce.split(",").forEach(function le(fe){if(fe.indexOf("+")!==-1)for(var Ae=+fe;Ae--;)le(ae);else{ae=fe;var ye=fe.split(">"),Ce=ye[0],He=ye[1];Ce=String.fromCodePoint(P+=parseInt(Ce,_e)),He=String.fromCodePoint(P+=parseInt(He,_e)),R.set(Ce,He),Ue&&ee.set(He,Ce)}}),{map:R,reverseMap:ee}}var m,g,x;function y(){if(!m){var ce=v(p.pairs,!0),Ue=ce.map,_e=ce.reverseMap;m=Ue,g=_e,x=v(p.canonical,!1).map}}function _(ce){return y(),m.get(ce)||null}function E(ce){return y(),g.get(ce)||null}function w(ce){return y(),x.get(ce)||null}var M=n.L,T=n.R,S=n.EN,b=n.ES,I=n.ET,D=n.AN,G=n.CS,H=n.B,$=n.S,F=n.ON,Z=n.BN,q=n.NSM,j=n.AL,J=n.LRO,B=n.RLO,Y=n.LRE,K=n.RLE,V=n.PDF,W=n.LRI,Q=n.RLI,X=n.FSI,te=n.PDI;function ge(ce,Ue){for(var _e=125,P=new Uint32Array(ce.length),R=0;R<ce.length;R++)P[R]=d(ce[R]);var ee=new Map;function ae(ii,Bi){var ri=P[ii];P[ii]=Bi,ee.set(ri,ee.get(ri)-1),ri&a&&ee.set(a,ee.get(a)-1),ee.set(Bi,(ee.get(Bi)||0)+1),Bi&a&&ee.set(a,(ee.get(a)||0)+1)}for(var le=new Uint8Array(ce.length),fe=new Map,Ae=[],ye=null,Ce=0;Ce<ce.length;Ce++)ye||Ae.push(ye={start:Ce,end:ce.length-1,level:Ue==="rtl"?1:Ue==="ltr"?0:Jf(Ce,!1)}),P[Ce]&H&&(ye.end=Ce,ye=null);for(var He=K|Y|B|J|r|te|V|H,Re=function(ii){return ii+(ii&1?1:2)},ke=function(ii){return ii+(ii&1?2:1)},Fe=0;Fe<Ae.length;Fe++){ye=Ae[Fe];var Ve=[{_level:ye.level,_override:0,_isolate:0}],Pe=void 0,ct=0,Ke=0,bt=0;ee.clear();for(var ne=ye.start;ne<=ye.end;ne++){var Te=P[ne];if(Pe=Ve[Ve.length-1],ee.set(Te,(ee.get(Te)||0)+1),Te&a&&ee.set(a,(ee.get(a)||0)+1),Te&He)if(Te&(K|Y)){le[ne]=Pe._level;var he=(Te===K?ke:Re)(Pe._level);he<=_e&&!ct&&!Ke?Ve.push({_level:he,_override:0,_isolate:0}):ct||Ke++}else if(Te&(B|J)){le[ne]=Pe._level;var Ie=(Te===B?ke:Re)(Pe._level);Ie<=_e&&!ct&&!Ke?Ve.push({_level:Ie,_override:Te&B?T:M,_isolate:0}):ct||Ke++}else if(Te&r){Te&X&&(Te=Jf(ne+1,!0)===1?Q:W),le[ne]=Pe._level,Pe._override&&ae(ne,Pe._override);var Ne=(Te===Q?ke:Re)(Pe._level);Ne<=_e&&ct===0&&Ke===0?(bt++,Ve.push({_level:Ne,_override:0,_isolate:1,_isolInitIndex:ne})):ct++}else if(Te&te){if(ct>0)ct--;else if(bt>0){for(Ke=0;!Ve[Ve.length-1]._isolate;)Ve.pop();var De=Ve[Ve.length-1]._isolInitIndex;De!=null&&(fe.set(De,ne),fe.set(ne,De)),Ve.pop(),bt--}Pe=Ve[Ve.length-1],le[ne]=Pe._level,Pe._override&&ae(ne,Pe._override)}else Te&V?(ct===0&&(Ke>0?Ke--:!Pe._isolate&&Ve.length>1&&(Ve.pop(),Pe=Ve[Ve.length-1])),le[ne]=Pe._level):Te&H&&(le[ne]=ye.level);else le[ne]=Pe._level,Pe._override&&Te!==Z&&ae(ne,Pe._override)}for(var tt=[],vt=null,at=ye.start;at<=ye.end;at++){var et=P[at];if(!(et&l)){var Ht=le[at],jt=et&r,en=et===te;vt&&Ht===vt._level?(vt._end=at,vt._endsWithIsolInit=jt):tt.push(vt={_start:at,_end:at,_level:Ht,_startsWithPDI:en,_endsWithIsolInit:jt})}}for(var Bn=[],An=0;An<tt.length;An++){var Jn=tt[An];if(!Jn._startsWithPDI||Jn._startsWithPDI&&!fe.has(Jn._start)){for(var vi=[vt=Jn],_i=void 0;vt&&vt._endsWithIsolInit&&(_i=fe.get(vt._end))!=null;)for(var zn=An+1;zn<tt.length;zn++)if(tt[zn]._start===_i){vi.push(vt=tt[zn]);break}for(var pn=[],ni=0;ni<vi.length;ni++)for(var Kr=vi[ni],Ar=Kr._start;Ar<=Kr._end;Ar++)pn.push(Ar);for(var Go=le[pn[0]],Zs=ye.level,Cr=pn[0]-1;Cr>=0;Cr--)if(!(P[Cr]&l)){Zs=le[Cr];break}var Qr=pn[pn.length-1],Ho=le[Qr],Js=ye.level;if(!(P[Qr]&r)){for(var L=Qr+1;L<=ye.end;L++)if(!(P[L]&l)){Js=le[L];break}}Bn.push({_seqIndices:pn,_sosType:Math.max(Zs,Go)%2?T:M,_eosType:Math.max(Js,Ho)%2?T:M})}}for(var se=0;se<Bn.length;se++){var ue=Bn[se],ie=ue._seqIndices,oe=ue._sosType,Oe=ue._eosType,Ge=le[ie[0]]&1?T:M;if(ee.get(q))for(var je=0;je<ie.length;je++){var Je=ie[je];if(P[Je]&q){for(var gt=oe,ft=je-1;ft>=0;ft--)if(!(P[ie[ft]]&l)){gt=P[ie[ft]];break}ae(Je,gt&(r|te)?F:gt)}}if(ee.get(S))for(var lt=0;lt<ie.length;lt++){var wt=ie[lt];if(P[wt]&S)for(var Ut=lt-1;Ut>=-1;Ut--){var $t=Ut===-1?oe:P[ie[Ut]];if($t&o){$t===j&&ae(wt,D);break}}}if(ee.get(j))for(var Zt=0;Zt<ie.length;Zt++){var Dt=ie[Zt];P[Dt]&j&&ae(Dt,T)}if(ee.get(b)||ee.get(G))for(var ht=1;ht<ie.length-1;ht++){var sn=ie[ht];if(P[sn]&(b|G)){for(var Rt=0,Cn=0,Wt=ht-1;Wt>=0&&(Rt=P[ie[Wt]],!!(Rt&l));Wt--);for(var mn=ht+1;mn<ie.length&&(Cn=P[ie[mn]],!!(Cn&l));mn++);Rt===Cn&&(P[sn]===b?Rt===S:Rt&(S|D))&&ae(sn,Rt)}}if(ee.get(S))for(var Rn=0;Rn<ie.length;Rn++){var Yt=ie[Rn];if(P[Yt]&S){for(var xn=Rn-1;xn>=0&&P[ie[xn]]&(I|l);xn--)ae(ie[xn],S);for(Rn++;Rn<ie.length&&P[ie[Rn]]&(I|l|S);Rn++)P[ie[Rn]]!==S&&ae(ie[Rn],S)}}if(ee.get(I)||ee.get(b)||ee.get(G))for(var un=0;un<ie.length;un++){var on=ie[un];if(P[on]&(I|b|G)){ae(on,F);for(var tn=un-1;tn>=0&&P[ie[tn]]&l;tn--)ae(ie[tn],F);for(var Fi=un+1;Fi<ie.length&&P[ie[Fi]]&l;Fi++)ae(ie[Fi],F)}}if(ee.get(S))for(var yi=0,pt=oe;yi<ie.length;yi++){var $r=ie[yi],C=P[$r];C&S?pt===M&&ae($r,M):C&o&&(pt=C)}if(ee.get(a)){var A=T|S|D,O=A|M,U=[];{for(var k=[],pe=0;pe<ie.length;pe++)if(P[ie[pe]]&a){var Se=ce[ie[pe]],Ze=void 0;if(_(Se)!==null)if(k.length<63)k.push({char:Se,seqIndex:pe});else break;else if((Ze=E(Se))!==null)for(var Be=k.length-1;Be>=0;Be--){var Ye=k[Be].char;if(Ye===Ze||Ye===E(w(Se))||_(w(Ye))===Se){U.push([k[Be].seqIndex,pe]),k.length=Be;break}}}U.sort(function(ii,Bi){return ii[0]-Bi[0]})}for(var st=0;st<U.length;st++){for(var Le=U[st],nt=Le[0],Qe=Le[1],dt=!1,$e=0,Qt=nt+1;Qt<Qe;Qt++){var Bt=ie[Qt];if(P[Bt]&O){dt=!0;var Nt=P[Bt]&A?T:M;if(Nt===Ge){$e=Nt;break}}}if(dt&&!$e){$e=oe;for(var Lt=nt-1;Lt>=0;Lt--){var Pi=ie[Lt];if(P[Pi]&O){var In=P[Pi]&A?T:M;In!==Ge?$e=In:$e=Ge;break}}}if($e){if(P[ie[nt]]=P[ie[Qe]]=$e,$e!==Ge){for(var Ii=nt+1;Ii<ie.length;Ii++)if(!(P[ie[Ii]]&l)){d(ce[ie[Ii]])&q&&(P[ie[Ii]]=$e);break}}if($e!==Ge){for(var es=Qe+1;es<ie.length;es++)if(!(P[ie[es]]&l)){d(ce[ie[es]])&q&&(P[ie[es]]=$e);break}}}}for(var ki=0;ki<ie.length;ki++)if(P[ie[ki]]&a){for(var jf=ki,jh=ki,Zh=oe,Wo=ki-1;Wo>=0;Wo--)if(P[ie[Wo]]&l)jf=Wo;else{Zh=P[ie[Wo]]&A?T:M;break}for(var Zf=Oe,Xo=ki+1;Xo<ie.length;Xo++)if(P[ie[Xo]]&(a|l))jh=Xo;else{Zf=P[ie[Xo]]&A?T:M;break}for(var Jh=jf;Jh<=jh;Jh++)P[ie[Jh]]=Zh===Zf?Zh:Ge;ki=jh}}}for(var xi=ye.start;xi<=ye.end;xi++){var g0=le[xi],nl=P[xi];if(g0&1?nl&(M|S|D)&&le[xi]++:nl&T?le[xi]++:nl&(D|S)&&(le[xi]+=2),nl&l&&(le[xi]=xi===0?ye.level:le[xi-1]),xi===ye.end||d(ce[xi])&($|H))for(var il=xi;il>=0&&d(ce[il])&c;il--)le[il]=ye.level}}return{levels:le,paragraphs:Ae};function Jf(ii,Bi){for(var ri=ii;ri<ce.length;ri++){var Rr=P[ri];if(Rr&(T|j))return 1;if(Rr&(H|M)||Bi&&Rr===te)return 0;if(Rr&r){var Kf=v0(ri);ri=Kf===-1?ce.length:Kf}}return 0}function v0(ii){for(var Bi=1,ri=ii+1;ri<ce.length;ri++){var Rr=P[ri];if(Rr&H)break;if(Rr&te){if(--Bi===0)return ri}else Rr&r&&Bi++}return-1}}var be="14>1,j>2,t>2,u>2,1a>g,2v3>1,1>1,1ge>1,1wd>1,b>1,1j>1,f>1,ai>3,-2>3,+1,8>1k0,-1jq>1y7,-1y6>1hf,-1he>1h6,-1h5>1ha,-1h8>1qi,-1pu>1,6>3u,-3s>7,6>1,1>1,f>1,1>1,+2,3>1,1>1,+13,4>1,1>1,6>1eo,-1ee>1,3>1mg,-1me>1mk,-1mj>1mi,-1mg>1mi,-1md>1,1>1,+2,1>10k,-103>1,1>1,4>1,5>1,1>1,+10,3>1,1>8,-7>8,+1,-6>7,+1,a>1,1>1,u>1,u6>1,1>1,+5,26>1,1>1,2>1,2>2,8>1,7>1,4>1,1>1,+5,b8>1,1>1,+3,1>3,-2>1,2>1,1>1,+2,c>1,3>1,1>1,+2,h>1,3>1,a>1,1>1,2>1,3>1,1>1,d>1,f>1,3>1,1a>1,1>1,6>1,7>1,13>1,k>1,1>1,+19,4>1,1>1,+2,2>1,1>1,+18,m>1,a>1,1>1,lk>1,1>1,4>1,2>1,f>1,3>1,1>1,+3,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,6>1,4j>1,j>2,t>2,u>2,2>1,+1",we;function re(){if(!we){var ce=v(be,!0),Ue=ce.map,_e=ce.reverseMap;_e.forEach(function(P,R){Ue.set(R,P)}),we=Ue}}function me(ce){return re(),we.get(ce)||null}function z(ce,Ue,_e,P){var R=ce.length;_e=Math.max(0,_e==null?0:+_e),P=Math.min(R-1,P==null?R-1:+P);for(var ee=new Map,ae=_e;ae<=P;ae++)if(Ue[ae]&1){var le=me(ce[ae]);le!==null&&ee.set(ae,le)}return ee}function Me(ce,Ue,_e,P){var R=ce.length;_e=Math.max(0,_e==null?0:+_e),P=Math.min(R-1,P==null?R-1:+P);var ee=[];return Ue.paragraphs.forEach(function(ae){var le=Math.max(_e,ae.start),fe=Math.min(P,ae.end);if(le<fe){for(var Ae=Ue.levels.slice(le,fe+1),ye=fe;ye>=le&&d(ce[ye])&c;ye--)Ae[ye]=ae.level;for(var Ce=ae.level,He=1/0,Re=0;Re<Ae.length;Re++){var ke=Ae[Re];ke>Ce&&(Ce=ke),ke<He&&(He=ke|1)}for(var Fe=Ce;Fe>=He;Fe--)for(var Ve=0;Ve<Ae.length;Ve++)if(Ae[Ve]>=Fe){for(var Pe=Ve;Ve+1<Ae.length&&Ae[Ve+1]>=Fe;)Ve++;Ve>Pe&&ee.push([Pe+le,Ve+le])}}}),ee}function de(ce,Ue,_e,P){var R=Ee(ce,Ue,_e,P),ee=[].concat(ce);return R.forEach(function(ae,le){ee[le]=(Ue.levels[ae]&1?me(ce[ae]):null)||ce[ae]}),ee.join("")}function Ee(ce,Ue,_e,P){for(var R=Me(ce,Ue,_e,P),ee=[],ae=0;ae<ce.length;ae++)ee[ae]=ae;return R.forEach(function(le){for(var fe=le[0],Ae=le[1],ye=ee.slice(fe,Ae+1),Ce=ye.length;Ce--;)ee[Ae-Ce]=ye[Ce]}),ee}return e.closingToOpeningBracket=E,e.getBidiCharType=d,e.getBidiCharTypeName=f,e.getCanonicalBracket=w,e.getEmbeddingLevels=ge,e.getMirroredCharacter=me,e.getMirroredCharactersMap=z,e.getReorderSegments=Me,e.getReorderedIndices=Ee,e.getReorderedString=de,e.openingToClosingBracket=_,Object.defineProperty(e,"__esModule",{value:!0}),e}({});return s}new yn;new ze;typeof window<"u"&&document.createElement("div");function g2(){var s=Object.create(null);function e(i,r){var o=i.id,a=i.name,l=i.dependencies;l===void 0&&(l=[]);var c=i.init;c===void 0&&(c=function(){});var h=i.getTransferables;if(h===void 0&&(h=null),!s[o])try{l=l.map(function(d){return d&&d.isWorkerModule&&(e(d,function(f){if(f instanceof Error)throw f}),d=s[d.id].value),d}),c=n("<"+a+">.init",c),h&&(h=n("<"+a+">.getTransferables",h));var u=null;typeof c=="function"?u=c.apply(void 0,l):console.error("worker module init function failed to rehydrate"),s[o]={id:o,value:u,getTransferables:h},r(u)}catch(d){d&&d.noLog||console.error(d),r(d)}}function t(i,r){var o,a=i.id,l=i.args;(!s[a]||typeof s[a].value!="function")&&r(new Error("Worker module "+a+": not found or its 'init' did not return a function"));try{var c=(o=s[a]).value.apply(o,l);c&&typeof c.then=="function"?c.then(h,function(u){return r(u instanceof Error?u:new Error(""+u))}):h(c)}catch(u){r(u)}function h(u){try{var d=s[a].getTransferables&&s[a].getTransferables(u);(!d||!Array.isArray(d)||!d.length)&&(d=void 0),r(u,d)}catch(f){console.error(f),r(f)}}}function n(i,r){var o=void 0;self.troikaDefine=function(l){return o=l};var a=URL.createObjectURL(new Blob(["/** "+i.replace(/\*/g,"")+` **/

troikaDefine(
`+r+`
)`],{type:"application/javascript"}));try{importScripts(a)}catch(l){console.error(l)}return URL.revokeObjectURL(a),delete self.troikaDefine,o}self.addEventListener("message",function(i){var r=i.data,o=r.messageId,a=r.action,l=r.data;try{a==="registerModule"&&e(l,function(c){c instanceof Error?postMessage({messageId:o,success:!1,error:c.message}):postMessage({messageId:o,success:!0,result:{isCallable:typeof c=="function"}})}),a==="callModule"&&t(l,function(c,h){c instanceof Error?postMessage({messageId:o,success:!1,error:c.message}):postMessage({messageId:o,success:!0,result:c},h||void 0)})}catch(c){postMessage({messageId:o,success:!1,error:c.stack})}})}function v2(s){var e=function(){for(var t=[],n=arguments.length;n--;)t[n]=arguments[n];return e._getInitResult().then(function(i){if(typeof i=="function")return i.apply(void 0,t);throw new Error("Worker module function was called but `init` did not return a callable function")})};return e._getInitResult=function(){var t=s.dependencies,n=s.init;t=Array.isArray(t)?t.map(function(r){return r&&r._getInitResult?r._getInitResult():r}):[];var i=Promise.all(t).then(function(r){return n.apply(null,r)});return e._getInitResult=function(){return i},i},e}var K_=function(){var s=!1;if(typeof window<"u"&&typeof window.document<"u")try{var e=new Worker(URL.createObjectURL(new Blob([""],{type:"application/javascript"})));e.terminate(),s=!0}catch(t){console.log("Troika createWorkerModule: web workers not allowed; falling back to main thread execution. Cause: ["+t.message+"]")}return K_=function(){return s},s},_2=0,y2=0,ed=!1,ba=Object.create(null),Sa=Object.create(null),Ad=Object.create(null);function Vo(s){if((!s||typeof s.init!="function")&&!ed)throw new Error("requires `options.init` function");var e=s.dependencies,t=s.init,n=s.getTransferables,i=s.workerId;if(!K_())return v2(s);i==null&&(i="#default");var r="workerModule"+ ++_2,o=s.name||r,a=null;e=e&&e.map(function(c){return typeof c=="function"&&!c.workerModuleData&&(ed=!0,c=Vo({workerId:i,name:"<"+o+"> function dependency: "+c.name,init:`function(){return (
`+hc(c)+`
)}`}),ed=!1),c&&c.workerModuleData&&(c=c.workerModuleData),c});function l(){for(var c=[],h=arguments.length;h--;)c[h]=arguments[h];if(!a){a=cg(i,"registerModule",l.workerModuleData);var u=function(){a=null,Sa[i].delete(u)};(Sa[i]||(Sa[i]=new Set)).add(u)}return a.then(function(d){var f=d.isCallable;if(f)return cg(i,"callModule",{id:r,args:c});throw new Error("Worker module function was called but `init` did not return a callable function")})}return l.workerModuleData={isWorkerModule:!0,id:r,name:o,dependencies:e,init:hc(t),getTransferables:n&&hc(n)},l}function x2(s){Sa[s]&&Sa[s].forEach(function(e){e()}),ba[s]&&(ba[s].terminate(),delete ba[s])}function hc(s){var e=s.toString();return!/^function/.test(e)&&/^\w+\s*\(/.test(e)&&(e="function "+e),e}function b2(s){var e=ba[s];if(!e){var t=hc(g2);e=ba[s]=new Worker(URL.createObjectURL(new Blob(["/** Worker Module Bootstrap: "+s.replace(/\*/g,"")+` **/

;(`+t+")()"],{type:"application/javascript"}))),e.onmessage=function(n){var i=n.data,r=i.messageId,o=Ad[r];if(!o)throw new Error("WorkerModule response with empty or unknown messageId");delete Ad[r],o(i)}}return e}function cg(s,e,t){return new Promise(function(n,i){var r=++y2;Ad[r]=function(o){o.success?n(o.result):i(new Error("Error in worker "+e+" call: "+o.error))},b2(s).postMessage({messageId:r,action:e,data:t})})}const Q_=/\bvoid\s+main\s*\(\s*\)\s*{/g;function Cd(s){const e=/^[ \t]*#include +<([\w\d./]+)>/gm;function t(n,i){let r=mt[i];return r?Cd(r):n}return s.replace(e,t)}const Ln=[];for(let s=0;s<256;s++)Ln[s]=(s<16?"0":"")+s.toString(16);function S2(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Ln[s&255]+Ln[s>>8&255]+Ln[s>>16&255]+Ln[s>>24&255]+"-"+Ln[e&255]+Ln[e>>8&255]+"-"+Ln[e>>16&15|64]+Ln[e>>24&255]+"-"+Ln[t&63|128]+Ln[t>>8&255]+"-"+Ln[t>>16&255]+Ln[t>>24&255]+Ln[n&255]+Ln[n>>8&255]+Ln[n>>16&255]+Ln[n>>24&255]).toUpperCase()}const vs=Object.assign||function(){let s=arguments[0];for(let e=1,t=arguments.length;e<t;e++){let n=arguments[e];if(n)for(let i in n)Object.prototype.hasOwnProperty.call(n,i)&&(s[i]=n[i])}return s},M2=Date.now(),hg=new WeakMap,ug=new Map;let w2=1e10;function Rd(s,e){const t=C2(e);let n=hg.get(s);if(n||hg.set(s,n=Object.create(null)),n[t])return new n[t];const i=`_onBeforeCompile${t}`,r=function(c,h){s.onBeforeCompile.call(this,c,h);const u=this.customProgramCacheKey()+"|"+c.vertexShader+"|"+c.fragmentShader;let d=ug[u];if(!d){const f=E2(this,c,e,t);d=ug[u]=f}c.vertexShader=d.vertexShader,c.fragmentShader=d.fragmentShader,vs(c.uniforms,this.uniforms),e.timeUniform&&(c.uniforms[e.timeUniform]={get value(){return Date.now()-M2}}),this[i]&&this[i](c)},o=function(){return a(e.chained?s:s.clone())},a=function(c){const h=Object.create(c,l);return Object.defineProperty(h,"baseMaterial",{value:s}),Object.defineProperty(h,"id",{value:w2++}),h.uuid=S2(),h.uniforms=vs({},c.uniforms,e.uniforms),h.defines=vs({},c.defines,e.defines),h.defines[`TROIKA_DERIVED_MATERIAL_${t}`]="",h.extensions=vs({},c.extensions,e.extensions),h._listeners=void 0,h},l={constructor:{value:o},isDerivedMaterial:{value:!0},type:{get:()=>s.type,set:c=>{s.type=c}},isDerivedFrom:{writable:!0,configurable:!0,value:function(c){const h=this.baseMaterial;return c===h||h.isDerivedMaterial&&h.isDerivedFrom(c)||!1}},customProgramCacheKey:{writable:!0,configurable:!0,value:function(){return s.customProgramCacheKey()+"|"+t}},onBeforeCompile:{get(){return r},set(c){this[i]=c}},copy:{writable:!0,configurable:!0,value:function(c){return s.copy.call(this,c),!s.isShaderMaterial&&!s.isDerivedMaterial&&(vs(this.extensions,c.extensions),vs(this.defines,c.defines),vs(this.uniforms,qa.clone(c.uniforms))),this}},clone:{writable:!0,configurable:!0,value:function(){const c=new s.constructor;return a(c).copy(this)}},getDepthMaterial:{writable:!0,configurable:!0,value:function(){let c=this._depthMaterial;return c||(c=this._depthMaterial=Rd(s.isDerivedMaterial?s.getDepthMaterial():new el({depthPacking:Kd}),e),c.defines.IS_DEPTH_MATERIAL="",c.uniforms=this.uniforms),c}},getDistanceMaterial:{writable:!0,configurable:!0,value:function(){let c=this._distanceMaterial;return c||(c=this._distanceMaterial=Rd(s.isDerivedMaterial?s.getDistanceMaterial():new kh,e),c.defines.IS_DISTANCE_MATERIAL="",c.uniforms=this.uniforms),c}},dispose:{writable:!0,configurable:!0,value(){const{_depthMaterial:c,_distanceMaterial:h}=this;c&&c.dispose(),h&&h.dispose(),s.dispose.call(this)}}};return n[t]=o,new o}function E2(s,{vertexShader:e,fragmentShader:t},n,i){let{vertexDefs:r,vertexMainIntro:o,vertexMainOutro:a,vertexTransform:l,fragmentDefs:c,fragmentMainIntro:h,fragmentMainOutro:u,fragmentColorTransform:d,customRewriter:f,timeUniform:p}=n;if(r=r||"",o=o||"",a=a||"",c=c||"",h=h||"",u=u||"",(l||f)&&(e=Cd(e)),(d||f)&&(t=t.replace(/^[ \t]*#include <((?:tonemapping|encodings|colorspace|fog|premultiplied_alpha|dithering)_fragment)>/gm,`
//!BEGIN_POST_CHUNK $1
$&
//!END_POST_CHUNK
`),t=Cd(t)),f){let v=f({vertexShader:e,fragmentShader:t});e=v.vertexShader,t=v.fragmentShader}if(d){let v=[];t=t.replace(/^\/\/!BEGIN_POST_CHUNK[^]+?^\/\/!END_POST_CHUNK/gm,m=>(v.push(m),"")),u=`${d}
${v.join(`
`)}
${u}`}if(p){const v=`
uniform float ${p};
`;r=v+r,c=v+c}return l&&(e=`vec3 troika_position_${i};
vec3 troika_normal_${i};
vec2 troika_uv_${i};
${e}
`,r=`${r}
void troikaVertexTransform${i}(inout vec3 position, inout vec3 normal, inout vec2 uv) {
  ${l}
}
`,o=`
troika_position_${i} = vec3(position);
troika_normal_${i} = vec3(normal);
troika_uv_${i} = vec2(uv);
troikaVertexTransform${i}(troika_position_${i}, troika_normal_${i}, troika_uv_${i});
${o}
`,e=e.replace(/\b(position|normal|uv)\b/g,(v,m,g,x)=>/\battribute\s+vec[23]\s+$/.test(x.substr(0,g))?m:`troika_${m}_${i}`),s.map&&s.map.channel>0||(e=e.replace(/\bMAP_UV\b/g,`troika_uv_${i}`))),e=dg(e,i,r,o,a),t=dg(t,i,c,h,u),{vertexShader:e,fragmentShader:t}}function dg(s,e,t,n,i){return(n||i||t)&&(s=s.replace(Q_,`
${t}
void troikaOrigMain${e}() {`),s+=`
void main() {
  ${n}
  troikaOrigMain${e}();
  ${i}
}`),s}function T2(s,e){return s==="uniforms"?void 0:typeof e=="function"?e.toString():e}let A2=0;const fg=new Map;function C2(s){const e=JSON.stringify(s,T2);let t=fg.get(e);return t==null&&fg.set(e,t=++A2),t}/*!
Custom build of Typr.ts (https://github.com/fredli74/Typr.ts) for use in Troika text rendering.
Original MIT license applies: https://github.com/fredli74/Typr.ts/blob/master/LICENSE
*/function R2(){return typeof window>"u"&&(self.window=self),function(s){var e={parse:function(i){var r=e._bin,o=new Uint8Array(i);if(r.readASCII(o,0,4)=="ttcf"){var a=4;r.readUshort(o,a),a+=2,r.readUshort(o,a),a+=2;var l=r.readUint(o,a);a+=4;for(var c=[],h=0;h<l;h++){var u=r.readUint(o,a);a+=4,c.push(e._readFont(o,u))}return c}return[e._readFont(o,0)]},_readFont:function(i,r){var o=e._bin,a=r;o.readFixed(i,r),r+=4;var l=o.readUshort(i,r);r+=2,o.readUshort(i,r),r+=2,o.readUshort(i,r),r+=2,o.readUshort(i,r),r+=2;for(var c=["cmap","head","hhea","maxp","hmtx","name","OS/2","post","loca","glyf","kern","CFF ","GDEF","GPOS","GSUB","SVG "],h={_data:i,_offset:a},u={},d=0;d<l;d++){var f=o.readASCII(i,r,4);r+=4,o.readUint(i,r),r+=4;var p=o.readUint(i,r);r+=4;var v=o.readUint(i,r);r+=4,u[f]={offset:p,length:v}}for(d=0;d<c.length;d++){var m=c[d];u[m]&&(h[m.trim()]=e[m.trim()].parse(i,u[m].offset,u[m].length,h))}return h},_tabOffset:function(i,r,o){for(var a=e._bin,l=a.readUshort(i,o+4),c=o+12,h=0;h<l;h++){var u=a.readASCII(i,c,4);c+=4,a.readUint(i,c),c+=4;var d=a.readUint(i,c);if(c+=4,a.readUint(i,c),c+=4,u==r)return d}return 0}};e._bin={readFixed:function(i,r){return(i[r]<<8|i[r+1])+(i[r+2]<<8|i[r+3])/65540},readF2dot14:function(i,r){return e._bin.readShort(i,r)/16384},readInt:function(i,r){return e._bin._view(i).getInt32(r)},readInt8:function(i,r){return e._bin._view(i).getInt8(r)},readShort:function(i,r){return e._bin._view(i).getInt16(r)},readUshort:function(i,r){return e._bin._view(i).getUint16(r)},readUshorts:function(i,r,o){for(var a=[],l=0;l<o;l++)a.push(e._bin.readUshort(i,r+2*l));return a},readUint:function(i,r){return e._bin._view(i).getUint32(r)},readUint64:function(i,r){return 4294967296*e._bin.readUint(i,r)+e._bin.readUint(i,r+4)},readASCII:function(i,r,o){for(var a="",l=0;l<o;l++)a+=String.fromCharCode(i[r+l]);return a},readUnicode:function(i,r,o){for(var a="",l=0;l<o;l++){var c=i[r++]<<8|i[r++];a+=String.fromCharCode(c)}return a},_tdec:typeof window<"u"&&window.TextDecoder?new window.TextDecoder:null,readUTF8:function(i,r,o){var a=e._bin._tdec;return a&&r==0&&o==i.length?a.decode(i):e._bin.readASCII(i,r,o)},readBytes:function(i,r,o){for(var a=[],l=0;l<o;l++)a.push(i[r+l]);return a},readASCIIArray:function(i,r,o){for(var a=[],l=0;l<o;l++)a.push(String.fromCharCode(i[r+l]));return a},_view:function(i){return i._dataView||(i._dataView=i.buffer?new DataView(i.buffer,i.byteOffset,i.byteLength):new DataView(new Uint8Array(i).buffer))}},e._lctf={},e._lctf.parse=function(i,r,o,a,l){var c=e._bin,h={},u=r;c.readFixed(i,r),r+=4;var d=c.readUshort(i,r);r+=2;var f=c.readUshort(i,r);r+=2;var p=c.readUshort(i,r);return r+=2,h.scriptList=e._lctf.readScriptList(i,u+d),h.featureList=e._lctf.readFeatureList(i,u+f),h.lookupList=e._lctf.readLookupList(i,u+p,l),h},e._lctf.readLookupList=function(i,r,o){var a=e._bin,l=r,c=[],h=a.readUshort(i,r);r+=2;for(var u=0;u<h;u++){var d=a.readUshort(i,r);r+=2;var f=e._lctf.readLookupTable(i,l+d,o);c.push(f)}return c},e._lctf.readLookupTable=function(i,r,o){var a=e._bin,l=r,c={tabs:[]};c.ltype=a.readUshort(i,r),r+=2,c.flag=a.readUshort(i,r),r+=2;var h=a.readUshort(i,r);r+=2;for(var u=c.ltype,d=0;d<h;d++){var f=a.readUshort(i,r);r+=2;var p=o(i,u,l+f,c);c.tabs.push(p)}return c},e._lctf.numOfOnes=function(i){for(var r=0,o=0;o<32;o++)(i>>>o&1)!=0&&r++;return r},e._lctf.readClassDef=function(i,r){var o=e._bin,a=[],l=o.readUshort(i,r);if(r+=2,l==1){var c=o.readUshort(i,r);r+=2;var h=o.readUshort(i,r);r+=2;for(var u=0;u<h;u++)a.push(c+u),a.push(c+u),a.push(o.readUshort(i,r)),r+=2}if(l==2){var d=o.readUshort(i,r);for(r+=2,u=0;u<d;u++)a.push(o.readUshort(i,r)),r+=2,a.push(o.readUshort(i,r)),r+=2,a.push(o.readUshort(i,r)),r+=2}return a},e._lctf.getInterval=function(i,r){for(var o=0;o<i.length;o+=3){var a=i[o],l=i[o+1];if(i[o+2],a<=r&&r<=l)return o}return-1},e._lctf.readCoverage=function(i,r){var o=e._bin,a={};a.fmt=o.readUshort(i,r),r+=2;var l=o.readUshort(i,r);return r+=2,a.fmt==1&&(a.tab=o.readUshorts(i,r,l)),a.fmt==2&&(a.tab=o.readUshorts(i,r,3*l)),a},e._lctf.coverageIndex=function(i,r){var o=i.tab;if(i.fmt==1)return o.indexOf(r);if(i.fmt==2){var a=e._lctf.getInterval(o,r);if(a!=-1)return o[a+2]+(r-o[a])}return-1},e._lctf.readFeatureList=function(i,r){var o=e._bin,a=r,l=[],c=o.readUshort(i,r);r+=2;for(var h=0;h<c;h++){var u=o.readASCII(i,r,4);r+=4;var d=o.readUshort(i,r);r+=2;var f=e._lctf.readFeatureTable(i,a+d);f.tag=u.trim(),l.push(f)}return l},e._lctf.readFeatureTable=function(i,r){var o=e._bin,a=r,l={},c=o.readUshort(i,r);r+=2,c>0&&(l.featureParams=a+c);var h=o.readUshort(i,r);r+=2,l.tab=[];for(var u=0;u<h;u++)l.tab.push(o.readUshort(i,r+2*u));return l},e._lctf.readScriptList=function(i,r){var o=e._bin,a=r,l={},c=o.readUshort(i,r);r+=2;for(var h=0;h<c;h++){var u=o.readASCII(i,r,4);r+=4;var d=o.readUshort(i,r);r+=2,l[u.trim()]=e._lctf.readScriptTable(i,a+d)}return l},e._lctf.readScriptTable=function(i,r){var o=e._bin,a=r,l={},c=o.readUshort(i,r);r+=2,c>0&&(l.default=e._lctf.readLangSysTable(i,a+c));var h=o.readUshort(i,r);r+=2;for(var u=0;u<h;u++){var d=o.readASCII(i,r,4);r+=4;var f=o.readUshort(i,r);r+=2,l[d.trim()]=e._lctf.readLangSysTable(i,a+f)}return l},e._lctf.readLangSysTable=function(i,r){var o=e._bin,a={};o.readUshort(i,r),r+=2,a.reqFeature=o.readUshort(i,r),r+=2;var l=o.readUshort(i,r);return r+=2,a.features=o.readUshorts(i,r,l),a},e.CFF={},e.CFF.parse=function(i,r,o){var a=e._bin;(i=new Uint8Array(i.buffer,r,o))[r=0],i[++r],i[++r],i[++r],r++;var l=[];r=e.CFF.readIndex(i,r,l);for(var c=[],h=0;h<l.length-1;h++)c.push(a.readASCII(i,r+l[h],l[h+1]-l[h]));r+=l[l.length-1];var u=[];r=e.CFF.readIndex(i,r,u);var d=[];for(h=0;h<u.length-1;h++)d.push(e.CFF.readDict(i,r+u[h],r+u[h+1]));r+=u[u.length-1];var f=d[0],p=[];r=e.CFF.readIndex(i,r,p);var v=[];for(h=0;h<p.length-1;h++)v.push(a.readASCII(i,r+p[h],p[h+1]-p[h]));if(r+=p[p.length-1],e.CFF.readSubrs(i,r,f),f.CharStrings){r=f.CharStrings,p=[],r=e.CFF.readIndex(i,r,p);var m=[];for(h=0;h<p.length-1;h++)m.push(a.readBytes(i,r+p[h],p[h+1]-p[h]));f.CharStrings=m}if(f.ROS){r=f.FDArray;var g=[];for(r=e.CFF.readIndex(i,r,g),f.FDArray=[],h=0;h<g.length-1;h++){var x=e.CFF.readDict(i,r+g[h],r+g[h+1]);e.CFF._readFDict(i,x,v),f.FDArray.push(x)}r+=g[g.length-1],r=f.FDSelect,f.FDSelect=[];var y=i[r];if(r++,y!=3)throw y;var _=a.readUshort(i,r);for(r+=2,h=0;h<_+1;h++)f.FDSelect.push(a.readUshort(i,r),i[r+2]),r+=3}return f.Encoding&&(f.Encoding=e.CFF.readEncoding(i,f.Encoding,f.CharStrings.length)),f.charset&&(f.charset=e.CFF.readCharset(i,f.charset,f.CharStrings.length)),e.CFF._readFDict(i,f,v),f},e.CFF._readFDict=function(i,r,o){var a;for(var l in r.Private&&(a=r.Private[1],r.Private=e.CFF.readDict(i,a,a+r.Private[0]),r.Private.Subrs&&e.CFF.readSubrs(i,a+r.Private.Subrs,r.Private)),r)["FamilyName","FontName","FullName","Notice","version","Copyright"].indexOf(l)!=-1&&(r[l]=o[r[l]-426+35])},e.CFF.readSubrs=function(i,r,o){var a=e._bin,l=[];r=e.CFF.readIndex(i,r,l);var c,h=l.length;c=h<1240?107:h<33900?1131:32768,o.Bias=c,o.Subrs=[];for(var u=0;u<l.length-1;u++)o.Subrs.push(a.readBytes(i,r+l[u],l[u+1]-l[u]))},e.CFF.tableSE=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,0,111,112,113,114,0,115,116,117,118,119,120,121,122,0,123,0,124,125,126,127,128,129,130,131,0,132,133,0,134,135,136,137,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,138,0,139,0,0,0,0,140,141,142,143,0,0,0,0,0,144,0,0,0,145,0,0,146,147,148,149,0,0,0,0],e.CFF.glyphByUnicode=function(i,r){for(var o=0;o<i.charset.length;o++)if(i.charset[o]==r)return o;return-1},e.CFF.glyphBySE=function(i,r){return r<0||r>255?-1:e.CFF.glyphByUnicode(i,e.CFF.tableSE[r])},e.CFF.readEncoding=function(i,r,o){e._bin;var a=[".notdef"],l=i[r];if(r++,l!=0)throw"error: unknown encoding format: "+l;var c=i[r];r++;for(var h=0;h<c;h++)a.push(i[r+h]);return a},e.CFF.readCharset=function(i,r,o){var a=e._bin,l=[".notdef"],c=i[r];if(r++,c==0)for(var h=0;h<o;h++){var u=a.readUshort(i,r);r+=2,l.push(u)}else{if(c!=1&&c!=2)throw"error: format: "+c;for(;l.length<o;){u=a.readUshort(i,r),r+=2;var d=0;for(c==1?(d=i[r],r++):(d=a.readUshort(i,r),r+=2),h=0;h<=d;h++)l.push(u),u++}}return l},e.CFF.readIndex=function(i,r,o){var a=e._bin,l=a.readUshort(i,r)+1,c=i[r+=2];if(r++,c==1)for(var h=0;h<l;h++)o.push(i[r+h]);else if(c==2)for(h=0;h<l;h++)o.push(a.readUshort(i,r+2*h));else if(c==3)for(h=0;h<l;h++)o.push(16777215&a.readUint(i,r+3*h-1));else if(l!=1)throw"unsupported offset size: "+c+", count: "+l;return(r+=l*c)-1},e.CFF.getCharString=function(i,r,o){var a=e._bin,l=i[r],c=i[r+1];i[r+2],i[r+3],i[r+4];var h=1,u=null,d=null;l<=20&&(u=l,h=1),l==12&&(u=100*l+c,h=2),21<=l&&l<=27&&(u=l,h=1),l==28&&(d=a.readShort(i,r+1),h=3),29<=l&&l<=31&&(u=l,h=1),32<=l&&l<=246&&(d=l-139,h=1),247<=l&&l<=250&&(d=256*(l-247)+c+108,h=2),251<=l&&l<=254&&(d=256*-(l-251)-c-108,h=2),l==255&&(d=a.readInt(i,r+1)/65535,h=5),o.val=d??"o"+u,o.size=h},e.CFF.readCharString=function(i,r,o){for(var a=r+o,l=e._bin,c=[];r<a;){var h=i[r],u=i[r+1];i[r+2],i[r+3],i[r+4];var d=1,f=null,p=null;h<=20&&(f=h,d=1),h==12&&(f=100*h+u,d=2),h!=19&&h!=20||(f=h,d=2),21<=h&&h<=27&&(f=h,d=1),h==28&&(p=l.readShort(i,r+1),d=3),29<=h&&h<=31&&(f=h,d=1),32<=h&&h<=246&&(p=h-139,d=1),247<=h&&h<=250&&(p=256*(h-247)+u+108,d=2),251<=h&&h<=254&&(p=256*-(h-251)-u-108,d=2),h==255&&(p=l.readInt(i,r+1)/65535,d=5),c.push(p??"o"+f),r+=d}return c},e.CFF.readDict=function(i,r,o){for(var a=e._bin,l={},c=[];r<o;){var h=i[r],u=i[r+1];i[r+2],i[r+3],i[r+4];var d=1,f=null,p=null;if(h==28&&(p=a.readShort(i,r+1),d=3),h==29&&(p=a.readInt(i,r+1),d=5),32<=h&&h<=246&&(p=h-139,d=1),247<=h&&h<=250&&(p=256*(h-247)+u+108,d=2),251<=h&&h<=254&&(p=256*-(h-251)-u-108,d=2),h==255)throw p=a.readInt(i,r+1)/65535,d=5,"unknown number";if(h==30){var v=[];for(d=1;;){var m=i[r+d];d++;var g=m>>4,x=15&m;if(g!=15&&v.push(g),x!=15&&v.push(x),x==15)break}for(var y="",_=[0,1,2,3,4,5,6,7,8,9,".","e","e-","reserved","-","endOfNumber"],E=0;E<v.length;E++)y+=_[v[E]];p=parseFloat(y)}h<=21&&(f=["version","Notice","FullName","FamilyName","Weight","FontBBox","BlueValues","OtherBlues","FamilyBlues","FamilyOtherBlues","StdHW","StdVW","escape","UniqueID","XUID","charset","Encoding","CharStrings","Private","Subrs","defaultWidthX","nominalWidthX"][h],d=1,h==12&&(f=["Copyright","isFixedPitch","ItalicAngle","UnderlinePosition","UnderlineThickness","PaintType","CharstringType","FontMatrix","StrokeWidth","BlueScale","BlueShift","BlueFuzz","StemSnapH","StemSnapV","ForceBold",0,0,"LanguageGroup","ExpansionFactor","initialRandomSeed","SyntheticBase","PostScript","BaseFontName","BaseFontBlend",0,0,0,0,0,0,"ROS","CIDFontVersion","CIDFontRevision","CIDFontType","CIDCount","UIDBase","FDArray","FDSelect","FontName"][u],d=2)),f!=null?(l[f]=c.length==1?c[0]:c,c=[]):c.push(p),r+=d}return l},e.cmap={},e.cmap.parse=function(i,r,o){i=new Uint8Array(i.buffer,r,o),r=0;var a=e._bin,l={};a.readUshort(i,r),r+=2;var c=a.readUshort(i,r);r+=2;var h=[];l.tables=[];for(var u=0;u<c;u++){var d=a.readUshort(i,r);r+=2;var f=a.readUshort(i,r);r+=2;var p=a.readUint(i,r);r+=4;var v="p"+d+"e"+f,m=h.indexOf(p);if(m==-1){var g;m=l.tables.length,h.push(p);var x=a.readUshort(i,p);x==0?g=e.cmap.parse0(i,p):x==4?g=e.cmap.parse4(i,p):x==6?g=e.cmap.parse6(i,p):x==12?g=e.cmap.parse12(i,p):console.debug("unknown format: "+x,d,f,p),l.tables.push(g)}if(l[v]!=null)throw"multiple tables for one platform+encoding";l[v]=m}return l},e.cmap.parse0=function(i,r){var o=e._bin,a={};a.format=o.readUshort(i,r),r+=2;var l=o.readUshort(i,r);r+=2,o.readUshort(i,r),r+=2,a.map=[];for(var c=0;c<l-6;c++)a.map.push(i[r+c]);return a},e.cmap.parse4=function(i,r){var o=e._bin,a=r,l={};l.format=o.readUshort(i,r),r+=2;var c=o.readUshort(i,r);r+=2,o.readUshort(i,r),r+=2;var h=o.readUshort(i,r);r+=2;var u=h/2;l.searchRange=o.readUshort(i,r),r+=2,l.entrySelector=o.readUshort(i,r),r+=2,l.rangeShift=o.readUshort(i,r),r+=2,l.endCount=o.readUshorts(i,r,u),r+=2*u,r+=2,l.startCount=o.readUshorts(i,r,u),r+=2*u,l.idDelta=[];for(var d=0;d<u;d++)l.idDelta.push(o.readShort(i,r)),r+=2;for(l.idRangeOffset=o.readUshorts(i,r,u),r+=2*u,l.glyphIdArray=[];r<a+c;)l.glyphIdArray.push(o.readUshort(i,r)),r+=2;return l},e.cmap.parse6=function(i,r){var o=e._bin,a={};a.format=o.readUshort(i,r),r+=2,o.readUshort(i,r),r+=2,o.readUshort(i,r),r+=2,a.firstCode=o.readUshort(i,r),r+=2;var l=o.readUshort(i,r);r+=2,a.glyphIdArray=[];for(var c=0;c<l;c++)a.glyphIdArray.push(o.readUshort(i,r)),r+=2;return a},e.cmap.parse12=function(i,r){var o=e._bin,a={};a.format=o.readUshort(i,r),r+=2,r+=2,o.readUint(i,r),r+=4,o.readUint(i,r),r+=4;var l=o.readUint(i,r);r+=4,a.groups=[];for(var c=0;c<l;c++){var h=r+12*c,u=o.readUint(i,h+0),d=o.readUint(i,h+4),f=o.readUint(i,h+8);a.groups.push([u,d,f])}return a},e.glyf={},e.glyf.parse=function(i,r,o,a){for(var l=[],c=0;c<a.maxp.numGlyphs;c++)l.push(null);return l},e.glyf._parseGlyf=function(i,r){var o=e._bin,a=i._data,l=e._tabOffset(a,"glyf",i._offset)+i.loca[r];if(i.loca[r]==i.loca[r+1])return null;var c={};if(c.noc=o.readShort(a,l),l+=2,c.xMin=o.readShort(a,l),l+=2,c.yMin=o.readShort(a,l),l+=2,c.xMax=o.readShort(a,l),l+=2,c.yMax=o.readShort(a,l),l+=2,c.xMin>=c.xMax||c.yMin>=c.yMax)return null;if(c.noc>0){c.endPts=[];for(var h=0;h<c.noc;h++)c.endPts.push(o.readUshort(a,l)),l+=2;var u=o.readUshort(a,l);if(l+=2,a.length-l<u)return null;c.instructions=o.readBytes(a,l,u),l+=u;var d=c.endPts[c.noc-1]+1;for(c.flags=[],h=0;h<d;h++){var f=a[l];if(l++,c.flags.push(f),(8&f)!=0){var p=a[l];l++;for(var v=0;v<p;v++)c.flags.push(f),h++}}for(c.xs=[],h=0;h<d;h++){var m=(2&c.flags[h])!=0,g=(16&c.flags[h])!=0;m?(c.xs.push(g?a[l]:-a[l]),l++):g?c.xs.push(0):(c.xs.push(o.readShort(a,l)),l+=2)}for(c.ys=[],h=0;h<d;h++)m=(4&c.flags[h])!=0,g=(32&c.flags[h])!=0,m?(c.ys.push(g?a[l]:-a[l]),l++):g?c.ys.push(0):(c.ys.push(o.readShort(a,l)),l+=2);var x=0,y=0;for(h=0;h<d;h++)x+=c.xs[h],y+=c.ys[h],c.xs[h]=x,c.ys[h]=y}else{var _;c.parts=[];do{_=o.readUshort(a,l),l+=2;var E={m:{a:1,b:0,c:0,d:1,tx:0,ty:0},p1:-1,p2:-1};if(c.parts.push(E),E.glyphIndex=o.readUshort(a,l),l+=2,1&_){var w=o.readShort(a,l);l+=2;var M=o.readShort(a,l);l+=2}else w=o.readInt8(a,l),l++,M=o.readInt8(a,l),l++;2&_?(E.m.tx=w,E.m.ty=M):(E.p1=w,E.p2=M),8&_?(E.m.a=E.m.d=o.readF2dot14(a,l),l+=2):64&_?(E.m.a=o.readF2dot14(a,l),l+=2,E.m.d=o.readF2dot14(a,l),l+=2):128&_&&(E.m.a=o.readF2dot14(a,l),l+=2,E.m.b=o.readF2dot14(a,l),l+=2,E.m.c=o.readF2dot14(a,l),l+=2,E.m.d=o.readF2dot14(a,l),l+=2)}while(32&_);if(256&_){var T=o.readUshort(a,l);for(l+=2,c.instr=[],h=0;h<T;h++)c.instr.push(a[l]),l++}}return c},e.GDEF={},e.GDEF.parse=function(i,r,o,a){var l=r;r+=4;var c=e._bin.readUshort(i,r);return{glyphClassDef:c===0?null:e._lctf.readClassDef(i,l+c)}},e.GPOS={},e.GPOS.parse=function(i,r,o,a){return e._lctf.parse(i,r,o,a,e.GPOS.subt)},e.GPOS.subt=function(i,r,o,a){var l=e._bin,c=o,h={};if(h.fmt=l.readUshort(i,o),o+=2,r==1||r==2||r==3||r==7||r==8&&h.fmt<=2){var u=l.readUshort(i,o);o+=2,h.coverage=e._lctf.readCoverage(i,u+c)}if(r==1&&h.fmt==1){var d=l.readUshort(i,o);o+=2,d!=0&&(h.pos=e.GPOS.readValueRecord(i,o,d))}else if(r==2&&h.fmt>=1&&h.fmt<=2){d=l.readUshort(i,o),o+=2;var f=l.readUshort(i,o);o+=2;var p=e._lctf.numOfOnes(d),v=e._lctf.numOfOnes(f);if(h.fmt==1){h.pairsets=[];var m=l.readUshort(i,o);o+=2;for(var g=0;g<m;g++){var x=c+l.readUshort(i,o);o+=2;var y=l.readUshort(i,x);x+=2;for(var _=[],E=0;E<y;E++){var w=l.readUshort(i,x);x+=2,d!=0&&(D=e.GPOS.readValueRecord(i,x,d),x+=2*p),f!=0&&(G=e.GPOS.readValueRecord(i,x,f),x+=2*v),_.push({gid2:w,val1:D,val2:G})}h.pairsets.push(_)}}if(h.fmt==2){var M=l.readUshort(i,o);o+=2;var T=l.readUshort(i,o);o+=2;var S=l.readUshort(i,o);o+=2;var b=l.readUshort(i,o);for(o+=2,h.classDef1=e._lctf.readClassDef(i,c+M),h.classDef2=e._lctf.readClassDef(i,c+T),h.matrix=[],g=0;g<S;g++){var I=[];for(E=0;E<b;E++){var D=null,G=null;d!=0&&(D=e.GPOS.readValueRecord(i,o,d),o+=2*p),f!=0&&(G=e.GPOS.readValueRecord(i,o,f),o+=2*v),I.push({val1:D,val2:G})}h.matrix.push(I)}}}else if(r==4&&h.fmt==1)h.markCoverage=e._lctf.readCoverage(i,l.readUshort(i,o)+c),h.baseCoverage=e._lctf.readCoverage(i,l.readUshort(i,o+2)+c),h.markClassCount=l.readUshort(i,o+4),h.markArray=e.GPOS.readMarkArray(i,l.readUshort(i,o+6)+c),h.baseArray=e.GPOS.readBaseArray(i,l.readUshort(i,o+8)+c,h.markClassCount);else if(r==6&&h.fmt==1)h.mark1Coverage=e._lctf.readCoverage(i,l.readUshort(i,o)+c),h.mark2Coverage=e._lctf.readCoverage(i,l.readUshort(i,o+2)+c),h.markClassCount=l.readUshort(i,o+4),h.mark1Array=e.GPOS.readMarkArray(i,l.readUshort(i,o+6)+c),h.mark2Array=e.GPOS.readBaseArray(i,l.readUshort(i,o+8)+c,h.markClassCount);else{if(r==9&&h.fmt==1){var H=l.readUshort(i,o);o+=2;var $=l.readUint(i,o);if(o+=4,a.ltype==9)a.ltype=H;else if(a.ltype!=H)throw"invalid extension substitution";return e.GPOS.subt(i,a.ltype,c+$)}console.debug("unsupported GPOS table LookupType",r,"format",h.fmt)}return h},e.GPOS.readValueRecord=function(i,r,o){var a=e._bin,l=[];return l.push(1&o?a.readShort(i,r):0),r+=1&o?2:0,l.push(2&o?a.readShort(i,r):0),r+=2&o?2:0,l.push(4&o?a.readShort(i,r):0),r+=4&o?2:0,l.push(8&o?a.readShort(i,r):0),r+=8&o?2:0,l},e.GPOS.readBaseArray=function(i,r,o){var a=e._bin,l=[],c=r,h=a.readUshort(i,r);r+=2;for(var u=0;u<h;u++){for(var d=[],f=0;f<o;f++)d.push(e.GPOS.readAnchorRecord(i,c+a.readUshort(i,r))),r+=2;l.push(d)}return l},e.GPOS.readMarkArray=function(i,r){var o=e._bin,a=[],l=r,c=o.readUshort(i,r);r+=2;for(var h=0;h<c;h++){var u=e.GPOS.readAnchorRecord(i,o.readUshort(i,r+2)+l);u.markClass=o.readUshort(i,r),a.push(u),r+=4}return a},e.GPOS.readAnchorRecord=function(i,r){var o=e._bin,a={};return a.fmt=o.readUshort(i,r),a.x=o.readShort(i,r+2),a.y=o.readShort(i,r+4),a},e.GSUB={},e.GSUB.parse=function(i,r,o,a){return e._lctf.parse(i,r,o,a,e.GSUB.subt)},e.GSUB.subt=function(i,r,o,a){var l=e._bin,c=o,h={};if(h.fmt=l.readUshort(i,o),o+=2,r!=1&&r!=2&&r!=4&&r!=5&&r!=6)return null;if(r==1||r==2||r==4||r==5&&h.fmt<=2||r==6&&h.fmt<=2){var u=l.readUshort(i,o);o+=2,h.coverage=e._lctf.readCoverage(i,c+u)}if(r==1&&h.fmt>=1&&h.fmt<=2){if(h.fmt==1)h.delta=l.readShort(i,o),o+=2;else if(h.fmt==2){var d=l.readUshort(i,o);o+=2,h.newg=l.readUshorts(i,o,d),o+=2*h.newg.length}}else if(r==2&&h.fmt==1){d=l.readUshort(i,o),o+=2,h.seqs=[];for(var f=0;f<d;f++){var p=l.readUshort(i,o)+c;o+=2;var v=l.readUshort(i,p);h.seqs.push(l.readUshorts(i,p+2,v))}}else if(r==4)for(h.vals=[],d=l.readUshort(i,o),o+=2,f=0;f<d;f++){var m=l.readUshort(i,o);o+=2,h.vals.push(e.GSUB.readLigatureSet(i,c+m))}else if(r==5&&h.fmt==2){if(h.fmt==2){var g=l.readUshort(i,o);o+=2,h.cDef=e._lctf.readClassDef(i,c+g),h.scset=[];var x=l.readUshort(i,o);for(o+=2,f=0;f<x;f++){var y=l.readUshort(i,o);o+=2,h.scset.push(y==0?null:e.GSUB.readSubClassSet(i,c+y))}}}else if(r==6&&h.fmt==3){if(h.fmt==3){for(f=0;f<3;f++){d=l.readUshort(i,o),o+=2;for(var _=[],E=0;E<d;E++)_.push(e._lctf.readCoverage(i,c+l.readUshort(i,o+2*E)));o+=2*d,f==0&&(h.backCvg=_),f==1&&(h.inptCvg=_),f==2&&(h.ahedCvg=_)}d=l.readUshort(i,o),o+=2,h.lookupRec=e.GSUB.readSubstLookupRecords(i,o,d)}}else{if(r==7&&h.fmt==1){var w=l.readUshort(i,o);o+=2;var M=l.readUint(i,o);if(o+=4,a.ltype==9)a.ltype=w;else if(a.ltype!=w)throw"invalid extension substitution";return e.GSUB.subt(i,a.ltype,c+M)}console.debug("unsupported GSUB table LookupType",r,"format",h.fmt)}return h},e.GSUB.readSubClassSet=function(i,r){var o=e._bin.readUshort,a=r,l=[],c=o(i,r);r+=2;for(var h=0;h<c;h++){var u=o(i,r);r+=2,l.push(e.GSUB.readSubClassRule(i,a+u))}return l},e.GSUB.readSubClassRule=function(i,r){var o=e._bin.readUshort,a={},l=o(i,r),c=o(i,r+=2);r+=2,a.input=[];for(var h=0;h<l-1;h++)a.input.push(o(i,r)),r+=2;return a.substLookupRecords=e.GSUB.readSubstLookupRecords(i,r,c),a},e.GSUB.readSubstLookupRecords=function(i,r,o){for(var a=e._bin.readUshort,l=[],c=0;c<o;c++)l.push(a(i,r),a(i,r+2)),r+=4;return l},e.GSUB.readChainSubClassSet=function(i,r){var o=e._bin,a=r,l=[],c=o.readUshort(i,r);r+=2;for(var h=0;h<c;h++){var u=o.readUshort(i,r);r+=2,l.push(e.GSUB.readChainSubClassRule(i,a+u))}return l},e.GSUB.readChainSubClassRule=function(i,r){for(var o=e._bin,a={},l=["backtrack","input","lookahead"],c=0;c<l.length;c++){var h=o.readUshort(i,r);r+=2,c==1&&h--,a[l[c]]=o.readUshorts(i,r,h),r+=2*a[l[c]].length}return h=o.readUshort(i,r),r+=2,a.subst=o.readUshorts(i,r,2*h),r+=2*a.subst.length,a},e.GSUB.readLigatureSet=function(i,r){var o=e._bin,a=r,l=[],c=o.readUshort(i,r);r+=2;for(var h=0;h<c;h++){var u=o.readUshort(i,r);r+=2,l.push(e.GSUB.readLigature(i,a+u))}return l},e.GSUB.readLigature=function(i,r){var o=e._bin,a={chain:[]};a.nglyph=o.readUshort(i,r),r+=2;var l=o.readUshort(i,r);r+=2;for(var c=0;c<l-1;c++)a.chain.push(o.readUshort(i,r)),r+=2;return a},e.head={},e.head.parse=function(i,r,o){var a=e._bin,l={};return a.readFixed(i,r),r+=4,l.fontRevision=a.readFixed(i,r),r+=4,a.readUint(i,r),r+=4,a.readUint(i,r),r+=4,l.flags=a.readUshort(i,r),r+=2,l.unitsPerEm=a.readUshort(i,r),r+=2,l.created=a.readUint64(i,r),r+=8,l.modified=a.readUint64(i,r),r+=8,l.xMin=a.readShort(i,r),r+=2,l.yMin=a.readShort(i,r),r+=2,l.xMax=a.readShort(i,r),r+=2,l.yMax=a.readShort(i,r),r+=2,l.macStyle=a.readUshort(i,r),r+=2,l.lowestRecPPEM=a.readUshort(i,r),r+=2,l.fontDirectionHint=a.readShort(i,r),r+=2,l.indexToLocFormat=a.readShort(i,r),r+=2,l.glyphDataFormat=a.readShort(i,r),r+=2,l},e.hhea={},e.hhea.parse=function(i,r,o){var a=e._bin,l={};return a.readFixed(i,r),r+=4,l.ascender=a.readShort(i,r),r+=2,l.descender=a.readShort(i,r),r+=2,l.lineGap=a.readShort(i,r),r+=2,l.advanceWidthMax=a.readUshort(i,r),r+=2,l.minLeftSideBearing=a.readShort(i,r),r+=2,l.minRightSideBearing=a.readShort(i,r),r+=2,l.xMaxExtent=a.readShort(i,r),r+=2,l.caretSlopeRise=a.readShort(i,r),r+=2,l.caretSlopeRun=a.readShort(i,r),r+=2,l.caretOffset=a.readShort(i,r),r+=2,r+=8,l.metricDataFormat=a.readShort(i,r),r+=2,l.numberOfHMetrics=a.readUshort(i,r),r+=2,l},e.hmtx={},e.hmtx.parse=function(i,r,o,a){for(var l=e._bin,c={aWidth:[],lsBearing:[]},h=0,u=0,d=0;d<a.maxp.numGlyphs;d++)d<a.hhea.numberOfHMetrics&&(h=l.readUshort(i,r),r+=2,u=l.readShort(i,r),r+=2),c.aWidth.push(h),c.lsBearing.push(u);return c},e.kern={},e.kern.parse=function(i,r,o,a){var l=e._bin,c=l.readUshort(i,r);if(r+=2,c==1)return e.kern.parseV1(i,r-2,o,a);var h=l.readUshort(i,r);r+=2;for(var u={glyph1:[],rval:[]},d=0;d<h;d++){r+=2,o=l.readUshort(i,r),r+=2;var f=l.readUshort(i,r);r+=2;var p=f>>>8;if((p&=15)!=0)throw"unknown kern table format: "+p;r=e.kern.readFormat0(i,r,u)}return u},e.kern.parseV1=function(i,r,o,a){var l=e._bin;l.readFixed(i,r),r+=4;var c=l.readUint(i,r);r+=4;for(var h={glyph1:[],rval:[]},u=0;u<c;u++){l.readUint(i,r),r+=4;var d=l.readUshort(i,r);r+=2,l.readUshort(i,r),r+=2;var f=d>>>8;if((f&=15)!=0)throw"unknown kern table format: "+f;r=e.kern.readFormat0(i,r,h)}return h},e.kern.readFormat0=function(i,r,o){var a=e._bin,l=-1,c=a.readUshort(i,r);r+=2,a.readUshort(i,r),r+=2,a.readUshort(i,r),r+=2,a.readUshort(i,r),r+=2;for(var h=0;h<c;h++){var u=a.readUshort(i,r);r+=2;var d=a.readUshort(i,r);r+=2;var f=a.readShort(i,r);r+=2,u!=l&&(o.glyph1.push(u),o.rval.push({glyph2:[],vals:[]}));var p=o.rval[o.rval.length-1];p.glyph2.push(d),p.vals.push(f),l=u}return r},e.loca={},e.loca.parse=function(i,r,o,a){var l=e._bin,c=[],h=a.head.indexToLocFormat,u=a.maxp.numGlyphs+1;if(h==0)for(var d=0;d<u;d++)c.push(l.readUshort(i,r+(d<<1))<<1);if(h==1)for(d=0;d<u;d++)c.push(l.readUint(i,r+(d<<2)));return c},e.maxp={},e.maxp.parse=function(i,r,o){var a=e._bin,l={},c=a.readUint(i,r);return r+=4,l.numGlyphs=a.readUshort(i,r),r+=2,c==65536&&(l.maxPoints=a.readUshort(i,r),r+=2,l.maxContours=a.readUshort(i,r),r+=2,l.maxCompositePoints=a.readUshort(i,r),r+=2,l.maxCompositeContours=a.readUshort(i,r),r+=2,l.maxZones=a.readUshort(i,r),r+=2,l.maxTwilightPoints=a.readUshort(i,r),r+=2,l.maxStorage=a.readUshort(i,r),r+=2,l.maxFunctionDefs=a.readUshort(i,r),r+=2,l.maxInstructionDefs=a.readUshort(i,r),r+=2,l.maxStackElements=a.readUshort(i,r),r+=2,l.maxSizeOfInstructions=a.readUshort(i,r),r+=2,l.maxComponentElements=a.readUshort(i,r),r+=2,l.maxComponentDepth=a.readUshort(i,r),r+=2),l},e.name={},e.name.parse=function(i,r,o){var a=e._bin,l={};a.readUshort(i,r),r+=2;var c=a.readUshort(i,r);r+=2,a.readUshort(i,r);for(var h,u=["copyright","fontFamily","fontSubfamily","ID","fullName","version","postScriptName","trademark","manufacturer","designer","description","urlVendor","urlDesigner","licence","licenceURL","---","typoFamilyName","typoSubfamilyName","compatibleFull","sampleText","postScriptCID","wwsFamilyName","wwsSubfamilyName","lightPalette","darkPalette"],d=r+=2,f=0;f<c;f++){var p=a.readUshort(i,r);r+=2;var v=a.readUshort(i,r);r+=2;var m=a.readUshort(i,r);r+=2;var g=a.readUshort(i,r);r+=2;var x=a.readUshort(i,r);r+=2;var y=a.readUshort(i,r);r+=2;var _,E=u[g],w=d+12*c+y;if(p==0)_=a.readUnicode(i,w,x/2);else if(p==3&&v==0)_=a.readUnicode(i,w,x/2);else if(v==0)_=a.readASCII(i,w,x);else if(v==1)_=a.readUnicode(i,w,x/2);else if(v==3)_=a.readUnicode(i,w,x/2);else{if(p!=1)throw"unknown encoding "+v+", platformID: "+p;_=a.readASCII(i,w,x),console.debug("reading unknown MAC encoding "+v+" as ASCII")}var M="p"+p+","+m.toString(16);l[M]==null&&(l[M]={}),l[M][E!==void 0?E:g]=_,l[M]._lang=m}for(var T in l)if(l[T].postScriptName!=null&&l[T]._lang==1033)return l[T];for(var T in l)if(l[T].postScriptName!=null&&l[T]._lang==0)return l[T];for(var T in l)if(l[T].postScriptName!=null&&l[T]._lang==3084)return l[T];for(var T in l)if(l[T].postScriptName!=null)return l[T];for(var T in l){h=T;break}return console.debug("returning name table with languageID "+l[h]._lang),l[h]},e["OS/2"]={},e["OS/2"].parse=function(i,r,o){var a=e._bin.readUshort(i,r);r+=2;var l={};if(a==0)e["OS/2"].version0(i,r,l);else if(a==1)e["OS/2"].version1(i,r,l);else if(a==2||a==3||a==4)e["OS/2"].version2(i,r,l);else{if(a!=5)throw"unknown OS/2 table version: "+a;e["OS/2"].version5(i,r,l)}return l},e["OS/2"].version0=function(i,r,o){var a=e._bin;return o.xAvgCharWidth=a.readShort(i,r),r+=2,o.usWeightClass=a.readUshort(i,r),r+=2,o.usWidthClass=a.readUshort(i,r),r+=2,o.fsType=a.readUshort(i,r),r+=2,o.ySubscriptXSize=a.readShort(i,r),r+=2,o.ySubscriptYSize=a.readShort(i,r),r+=2,o.ySubscriptXOffset=a.readShort(i,r),r+=2,o.ySubscriptYOffset=a.readShort(i,r),r+=2,o.ySuperscriptXSize=a.readShort(i,r),r+=2,o.ySuperscriptYSize=a.readShort(i,r),r+=2,o.ySuperscriptXOffset=a.readShort(i,r),r+=2,o.ySuperscriptYOffset=a.readShort(i,r),r+=2,o.yStrikeoutSize=a.readShort(i,r),r+=2,o.yStrikeoutPosition=a.readShort(i,r),r+=2,o.sFamilyClass=a.readShort(i,r),r+=2,o.panose=a.readBytes(i,r,10),r+=10,o.ulUnicodeRange1=a.readUint(i,r),r+=4,o.ulUnicodeRange2=a.readUint(i,r),r+=4,o.ulUnicodeRange3=a.readUint(i,r),r+=4,o.ulUnicodeRange4=a.readUint(i,r),r+=4,o.achVendID=[a.readInt8(i,r),a.readInt8(i,r+1),a.readInt8(i,r+2),a.readInt8(i,r+3)],r+=4,o.fsSelection=a.readUshort(i,r),r+=2,o.usFirstCharIndex=a.readUshort(i,r),r+=2,o.usLastCharIndex=a.readUshort(i,r),r+=2,o.sTypoAscender=a.readShort(i,r),r+=2,o.sTypoDescender=a.readShort(i,r),r+=2,o.sTypoLineGap=a.readShort(i,r),r+=2,o.usWinAscent=a.readUshort(i,r),r+=2,o.usWinDescent=a.readUshort(i,r),r+=2},e["OS/2"].version1=function(i,r,o){var a=e._bin;return r=e["OS/2"].version0(i,r,o),o.ulCodePageRange1=a.readUint(i,r),r+=4,o.ulCodePageRange2=a.readUint(i,r),r+=4},e["OS/2"].version2=function(i,r,o){var a=e._bin;return r=e["OS/2"].version1(i,r,o),o.sxHeight=a.readShort(i,r),r+=2,o.sCapHeight=a.readShort(i,r),r+=2,o.usDefault=a.readUshort(i,r),r+=2,o.usBreak=a.readUshort(i,r),r+=2,o.usMaxContext=a.readUshort(i,r),r+=2},e["OS/2"].version5=function(i,r,o){var a=e._bin;return r=e["OS/2"].version2(i,r,o),o.usLowerOpticalPointSize=a.readUshort(i,r),r+=2,o.usUpperOpticalPointSize=a.readUshort(i,r),r+=2},e.post={},e.post.parse=function(i,r,o){var a=e._bin,l={};return l.version=a.readFixed(i,r),r+=4,l.italicAngle=a.readFixed(i,r),r+=4,l.underlinePosition=a.readShort(i,r),r+=2,l.underlineThickness=a.readShort(i,r),r+=2,l},e==null&&(e={}),e.U==null&&(e.U={}),e.U.codeToGlyph=function(i,r){var o=i.cmap,a=-1;if(o.p0e4!=null?a=o.p0e4:o.p3e1!=null?a=o.p3e1:o.p1e0!=null?a=o.p1e0:o.p0e3!=null&&(a=o.p0e3),a==-1)throw"no familiar platform and encoding!";var l=o.tables[a];if(l.format==0)return r>=l.map.length?0:l.map[r];if(l.format==4){for(var c=-1,h=0;h<l.endCount.length;h++)if(r<=l.endCount[h]){c=h;break}return c==-1||l.startCount[c]>r?0:65535&(l.idRangeOffset[c]!=0?l.glyphIdArray[r-l.startCount[c]+(l.idRangeOffset[c]>>1)-(l.idRangeOffset.length-c)]:r+l.idDelta[c])}if(l.format==12){if(r>l.groups[l.groups.length-1][1])return 0;for(h=0;h<l.groups.length;h++){var u=l.groups[h];if(u[0]<=r&&r<=u[1])return u[2]+(r-u[0])}return 0}throw"unknown cmap table format "+l.format},e.U.glyphToPath=function(i,r){var o={cmds:[],crds:[]};if(i.SVG&&i.SVG.entries[r]){var a=i.SVG.entries[r];return a==null?o:(typeof a=="string"&&(a=e.SVG.toPath(a),i.SVG.entries[r]=a),a)}if(i.CFF){var l={x:0,y:0,stack:[],nStems:0,haveWidth:!1,width:i.CFF.Private?i.CFF.Private.defaultWidthX:0,open:!1},c=i.CFF,h=i.CFF.Private;if(c.ROS){for(var u=0;c.FDSelect[u+2]<=r;)u+=2;h=c.FDArray[c.FDSelect[u+1]].Private}e.U._drawCFF(i.CFF.CharStrings[r],l,c,h,o)}else i.glyf&&e.U._drawGlyf(r,i,o);return o},e.U._drawGlyf=function(i,r,o){var a=r.glyf[i];a==null&&(a=r.glyf[i]=e.glyf._parseGlyf(r,i)),a!=null&&(a.noc>-1?e.U._simpleGlyph(a,o):e.U._compoGlyph(a,r,o))},e.U._simpleGlyph=function(i,r){for(var o=0;o<i.noc;o++){for(var a=o==0?0:i.endPts[o-1]+1,l=i.endPts[o],c=a;c<=l;c++){var h=c==a?l:c-1,u=c==l?a:c+1,d=1&i.flags[c],f=1&i.flags[h],p=1&i.flags[u],v=i.xs[c],m=i.ys[c];if(c==a)if(d){if(!f){e.U.P.moveTo(r,v,m);continue}e.U.P.moveTo(r,i.xs[h],i.ys[h])}else f?e.U.P.moveTo(r,i.xs[h],i.ys[h]):e.U.P.moveTo(r,(i.xs[h]+v)/2,(i.ys[h]+m)/2);d?f&&e.U.P.lineTo(r,v,m):p?e.U.P.qcurveTo(r,v,m,i.xs[u],i.ys[u]):e.U.P.qcurveTo(r,v,m,(v+i.xs[u])/2,(m+i.ys[u])/2)}e.U.P.closePath(r)}},e.U._compoGlyph=function(i,r,o){for(var a=0;a<i.parts.length;a++){var l={cmds:[],crds:[]},c=i.parts[a];e.U._drawGlyf(c.glyphIndex,r,l);for(var h=c.m,u=0;u<l.crds.length;u+=2){var d=l.crds[u],f=l.crds[u+1];o.crds.push(d*h.a+f*h.b+h.tx),o.crds.push(d*h.c+f*h.d+h.ty)}for(u=0;u<l.cmds.length;u++)o.cmds.push(l.cmds[u])}},e.U._getGlyphClass=function(i,r){var o=e._lctf.getInterval(r,i);return o==-1?0:r[o+2]},e.U._applySubs=function(i,r,o,a){for(var l=i.length-r-1,c=0;c<o.tabs.length;c++)if(o.tabs[c]!=null){var h,u=o.tabs[c];if(!u.coverage||(h=e._lctf.coverageIndex(u.coverage,i[r]))!=-1){if(o.ltype==1)i[r],u.fmt==1?i[r]=i[r]+u.delta:i[r]=u.newg[h];else if(o.ltype==4)for(var d=u.vals[h],f=0;f<d.length;f++){var p=d[f],v=p.chain.length;if(!(v>l)){for(var m=!0,g=0,x=0;x<v;x++){for(;i[r+g+(1+x)]==-1;)g++;p.chain[x]!=i[r+g+(1+x)]&&(m=!1)}if(m){for(i[r]=p.nglyph,x=0;x<v+g;x++)i[r+x+1]=-1;break}}}else if(o.ltype==5&&u.fmt==2)for(var y=e._lctf.getInterval(u.cDef,i[r]),_=u.cDef[y+2],E=u.scset[_],w=0;w<E.length;w++){var M=E[w],T=M.input;if(!(T.length>l)){for(m=!0,x=0;x<T.length;x++){var S=e._lctf.getInterval(u.cDef,i[r+1+x]);if(y==-1&&u.cDef[S+2]!=T[x]){m=!1;break}}if(m){var b=M.substLookupRecords;for(f=0;f<b.length;f+=2)b[f],b[f+1]}}}else if(o.ltype==6&&u.fmt==3){if(!e.U._glsCovered(i,u.backCvg,r-u.backCvg.length)||!e.U._glsCovered(i,u.inptCvg,r)||!e.U._glsCovered(i,u.ahedCvg,r+u.inptCvg.length))continue;var I=u.lookupRec;for(w=0;w<I.length;w+=2){y=I[w];var D=a[I[w+1]];e.U._applySubs(i,r+y,D,a)}}}}},e.U._glsCovered=function(i,r,o){for(var a=0;a<r.length;a++)if(e._lctf.coverageIndex(r[a],i[o+a])==-1)return!1;return!0},e.U.glyphsToPath=function(i,r,o){for(var a={cmds:[],crds:[]},l=0,c=0;c<r.length;c++){var h=r[c];if(h!=-1){for(var u=c<r.length-1&&r[c+1]!=-1?r[c+1]:0,d=e.U.glyphToPath(i,h),f=0;f<d.crds.length;f+=2)a.crds.push(d.crds[f]+l),a.crds.push(d.crds[f+1]);for(o&&a.cmds.push(o),f=0;f<d.cmds.length;f++)a.cmds.push(d.cmds[f]);o&&a.cmds.push("X"),l+=i.hmtx.aWidth[h],c<r.length-1&&(l+=e.U.getPairAdjustment(i,h,u))}}return a},e.U.P={},e.U.P.moveTo=function(i,r,o){i.cmds.push("M"),i.crds.push(r,o)},e.U.P.lineTo=function(i,r,o){i.cmds.push("L"),i.crds.push(r,o)},e.U.P.curveTo=function(i,r,o,a,l,c,h){i.cmds.push("C"),i.crds.push(r,o,a,l,c,h)},e.U.P.qcurveTo=function(i,r,o,a,l){i.cmds.push("Q"),i.crds.push(r,o,a,l)},e.U.P.closePath=function(i){i.cmds.push("Z")},e.U._drawCFF=function(i,r,o,a,l){for(var c=r.stack,h=r.nStems,u=r.haveWidth,d=r.width,f=r.open,p=0,v=r.x,m=r.y,g=0,x=0,y=0,_=0,E=0,w=0,M=0,T=0,S=0,b=0,I={val:0,size:0};p<i.length;){e.CFF.getCharString(i,p,I);var D=I.val;if(p+=I.size,D=="o1"||D=="o18")c.length%2!=0&&!u&&(d=c.shift()+a.nominalWidthX),h+=c.length>>1,c.length=0,u=!0;else if(D=="o3"||D=="o23")c.length%2!=0&&!u&&(d=c.shift()+a.nominalWidthX),h+=c.length>>1,c.length=0,u=!0;else if(D=="o4")c.length>1&&!u&&(d=c.shift()+a.nominalWidthX,u=!0),f&&e.U.P.closePath(l),m+=c.pop(),e.U.P.moveTo(l,v,m),f=!0;else if(D=="o5")for(;c.length>0;)v+=c.shift(),m+=c.shift(),e.U.P.lineTo(l,v,m);else if(D=="o6"||D=="o7")for(var G=c.length,H=D=="o6",$=0;$<G;$++){var F=c.shift();H?v+=F:m+=F,H=!H,e.U.P.lineTo(l,v,m)}else if(D=="o8"||D=="o24"){G=c.length;for(var Z=0;Z+6<=G;)g=v+c.shift(),x=m+c.shift(),y=g+c.shift(),_=x+c.shift(),v=y+c.shift(),m=_+c.shift(),e.U.P.curveTo(l,g,x,y,_,v,m),Z+=6;D=="o24"&&(v+=c.shift(),m+=c.shift(),e.U.P.lineTo(l,v,m))}else{if(D=="o11")break;if(D=="o1234"||D=="o1235"||D=="o1236"||D=="o1237")D=="o1234"&&(x=m,y=(g=v+c.shift())+c.shift(),b=_=x+c.shift(),w=_,T=m,v=(M=(E=(S=y+c.shift())+c.shift())+c.shift())+c.shift(),e.U.P.curveTo(l,g,x,y,_,S,b),e.U.P.curveTo(l,E,w,M,T,v,m)),D=="o1235"&&(g=v+c.shift(),x=m+c.shift(),y=g+c.shift(),_=x+c.shift(),S=y+c.shift(),b=_+c.shift(),E=S+c.shift(),w=b+c.shift(),M=E+c.shift(),T=w+c.shift(),v=M+c.shift(),m=T+c.shift(),c.shift(),e.U.P.curveTo(l,g,x,y,_,S,b),e.U.P.curveTo(l,E,w,M,T,v,m)),D=="o1236"&&(g=v+c.shift(),x=m+c.shift(),y=g+c.shift(),b=_=x+c.shift(),w=_,M=(E=(S=y+c.shift())+c.shift())+c.shift(),T=w+c.shift(),v=M+c.shift(),e.U.P.curveTo(l,g,x,y,_,S,b),e.U.P.curveTo(l,E,w,M,T,v,m)),D=="o1237"&&(g=v+c.shift(),x=m+c.shift(),y=g+c.shift(),_=x+c.shift(),S=y+c.shift(),b=_+c.shift(),E=S+c.shift(),w=b+c.shift(),M=E+c.shift(),T=w+c.shift(),Math.abs(M-v)>Math.abs(T-m)?v=M+c.shift():m=T+c.shift(),e.U.P.curveTo(l,g,x,y,_,S,b),e.U.P.curveTo(l,E,w,M,T,v,m));else if(D=="o14"){if(c.length>0&&!u&&(d=c.shift()+o.nominalWidthX,u=!0),c.length==4){var q=c.shift(),j=c.shift(),J=c.shift(),B=c.shift(),Y=e.CFF.glyphBySE(o,J),K=e.CFF.glyphBySE(o,B);e.U._drawCFF(o.CharStrings[Y],r,o,a,l),r.x=q,r.y=j,e.U._drawCFF(o.CharStrings[K],r,o,a,l)}f&&(e.U.P.closePath(l),f=!1)}else if(D=="o19"||D=="o20")c.length%2!=0&&!u&&(d=c.shift()+a.nominalWidthX),h+=c.length>>1,c.length=0,u=!0,p+=h+7>>3;else if(D=="o21")c.length>2&&!u&&(d=c.shift()+a.nominalWidthX,u=!0),m+=c.pop(),v+=c.pop(),f&&e.U.P.closePath(l),e.U.P.moveTo(l,v,m),f=!0;else if(D=="o22")c.length>1&&!u&&(d=c.shift()+a.nominalWidthX,u=!0),v+=c.pop(),f&&e.U.P.closePath(l),e.U.P.moveTo(l,v,m),f=!0;else if(D=="o25"){for(;c.length>6;)v+=c.shift(),m+=c.shift(),e.U.P.lineTo(l,v,m);g=v+c.shift(),x=m+c.shift(),y=g+c.shift(),_=x+c.shift(),v=y+c.shift(),m=_+c.shift(),e.U.P.curveTo(l,g,x,y,_,v,m)}else if(D=="o26")for(c.length%2&&(v+=c.shift());c.length>0;)g=v,x=m+c.shift(),v=y=g+c.shift(),m=(_=x+c.shift())+c.shift(),e.U.P.curveTo(l,g,x,y,_,v,m);else if(D=="o27")for(c.length%2&&(m+=c.shift());c.length>0;)x=m,y=(g=v+c.shift())+c.shift(),_=x+c.shift(),v=y+c.shift(),m=_,e.U.P.curveTo(l,g,x,y,_,v,m);else if(D=="o10"||D=="o29"){var V=D=="o10"?a:o;if(c.length==0)console.debug("error: empty stack");else{var W=c.pop(),Q=V.Subrs[W+V.Bias];r.x=v,r.y=m,r.nStems=h,r.haveWidth=u,r.width=d,r.open=f,e.U._drawCFF(Q,r,o,a,l),v=r.x,m=r.y,h=r.nStems,u=r.haveWidth,d=r.width,f=r.open}}else if(D=="o30"||D=="o31"){var X=c.length,te=(Z=0,D=="o31");for(Z+=X-(G=-3&X);Z<G;)te?(x=m,y=(g=v+c.shift())+c.shift(),m=(_=x+c.shift())+c.shift(),G-Z==5?(v=y+c.shift(),Z++):v=y,te=!1):(g=v,x=m+c.shift(),y=g+c.shift(),_=x+c.shift(),v=y+c.shift(),G-Z==5?(m=_+c.shift(),Z++):m=_,te=!0),e.U.P.curveTo(l,g,x,y,_,v,m),Z+=4}else{if((D+"").charAt(0)=="o")throw console.debug("Unknown operation: "+D,i),D;c.push(D)}}}r.x=v,r.y=m,r.nStems=h,r.haveWidth=u,r.width=d,r.open=f};var t=e,n={Typr:t};return s.Typr=t,s.default=n,Object.defineProperty(s,"__esModule",{value:!0}),s}({}).Typr}/*!
Custom bundle of woff2otf (https://github.com/arty-name/woff2otf) with fflate
(https://github.com/101arrowz/fflate) for use in Troika text rendering. 
Original licenses apply: 
- fflate: https://github.com/101arrowz/fflate/blob/master/LICENSE (MIT)
- woff2otf.js: https://github.com/arty-name/woff2otf/blob/master/woff2otf.js (Apache2)
*/function P2(){return function(s){var e=Uint8Array,t=Uint16Array,n=Uint32Array,i=new e([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),r=new e([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),o=new e([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),a=function(D,G){for(var H=new t(31),$=0;$<31;++$)H[$]=G+=1<<D[$-1];var F=new n(H[30]);for($=1;$<30;++$)for(var Z=H[$];Z<H[$+1];++Z)F[Z]=Z-H[$]<<5|$;return[H,F]},l=a(i,2),c=l[0],h=l[1];c[28]=258,h[258]=28;for(var u=a(r,0)[0],d=new t(32768),f=0;f<32768;++f){var p=(43690&f)>>>1|(21845&f)<<1;p=(61680&(p=(52428&p)>>>2|(13107&p)<<2))>>>4|(3855&p)<<4,d[f]=((65280&p)>>>8|(255&p)<<8)>>>1}var v=function(D,G,H){for(var $=D.length,F=0,Z=new t(G);F<$;++F)++Z[D[F]-1];var q,j=new t(G);for(F=0;F<G;++F)j[F]=j[F-1]+Z[F-1]<<1;{q=new t(1<<G);var J=15-G;for(F=0;F<$;++F)if(D[F])for(var B=F<<4|D[F],Y=G-D[F],K=j[D[F]-1]++<<Y,V=K|(1<<Y)-1;K<=V;++K)q[d[K]>>>J]=B}return q},m=new e(288);for(f=0;f<144;++f)m[f]=8;for(f=144;f<256;++f)m[f]=9;for(f=256;f<280;++f)m[f]=7;for(f=280;f<288;++f)m[f]=8;var g=new e(32);for(f=0;f<32;++f)g[f]=5;var x=v(m,9),y=v(g,5),_=function(D){for(var G=D[0],H=1;H<D.length;++H)D[H]>G&&(G=D[H]);return G},E=function(D,G,H){var $=G/8|0;return(D[$]|D[$+1]<<8)>>(7&G)&H},w=function(D,G){var H=G/8|0;return(D[H]|D[H+1]<<8|D[H+2]<<16)>>(7&G)},M=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],T=function(D,G,H){var $=new Error(G||M[D]);if($.code=D,Error.captureStackTrace&&Error.captureStackTrace($,T),!H)throw $;return $},S=function(D,G,H){var $=D.length;if(!$||H&&!H.l&&$<5)return G||new e(0);var F=!G||H,Z=!H||H.i;H||(H={}),G||(G=new e(3*$));var q,j=function(Pe){var ct=G.length;if(Pe>ct){var Ke=new e(Math.max(2*ct,Pe));Ke.set(G),G=Ke}},J=H.f||0,B=H.p||0,Y=H.b||0,K=H.l,V=H.d,W=H.m,Q=H.n,X=8*$;do{if(!K){H.f=J=E(D,B,1);var te=E(D,B+1,3);if(B+=3,!te){var ge=D[(_e=((q=B)/8|0)+(7&q&&1)+4)-4]|D[_e-3]<<8,be=_e+ge;if(be>$){Z&&T(0);break}F&&j(Y+ge),G.set(D.subarray(_e,be),Y),H.b=Y+=ge,H.p=B=8*be;continue}if(te==1)K=x,V=y,W=9,Q=5;else if(te==2){var we=E(D,B,31)+257,re=E(D,B+10,15)+4,me=we+E(D,B+5,31)+1;B+=14;for(var z=new e(me),Me=new e(19),de=0;de<re;++de)Me[o[de]]=E(D,B+3*de,7);B+=3*re;var Ee=_(Me),ce=(1<<Ee)-1,Ue=v(Me,Ee);for(de=0;de<me;){var _e,P=Ue[E(D,B,ce)];if(B+=15&P,(_e=P>>>4)<16)z[de++]=_e;else{var R=0,ee=0;for(_e==16?(ee=3+E(D,B,3),B+=2,R=z[de-1]):_e==17?(ee=3+E(D,B,7),B+=3):_e==18&&(ee=11+E(D,B,127),B+=7);ee--;)z[de++]=R}}var ae=z.subarray(0,we),le=z.subarray(we);W=_(ae),Q=_(le),K=v(ae,W),V=v(le,Q)}else T(1);if(B>X){Z&&T(0);break}}F&&j(Y+131072);for(var fe=(1<<W)-1,Ae=(1<<Q)-1,ye=B;;ye=B){var Ce=(R=K[w(D,B)&fe])>>>4;if((B+=15&R)>X){Z&&T(0);break}if(R||T(2),Ce<256)G[Y++]=Ce;else{if(Ce==256){ye=B,K=null;break}var He=Ce-254;if(Ce>264){var Re=i[de=Ce-257];He=E(D,B,(1<<Re)-1)+c[de],B+=Re}var ke=V[w(D,B)&Ae],Fe=ke>>>4;if(ke||T(3),B+=15&ke,le=u[Fe],Fe>3&&(Re=r[Fe],le+=w(D,B)&(1<<Re)-1,B+=Re),B>X){Z&&T(0);break}F&&j(Y+131072);for(var Ve=Y+He;Y<Ve;Y+=4)G[Y]=G[Y-le],G[Y+1]=G[Y+1-le],G[Y+2]=G[Y+2-le],G[Y+3]=G[Y+3-le];Y=Ve}}H.l=K,H.p=ye,H.b=Y,K&&(J=1,H.m=W,H.d=V,H.n=Q)}while(!J);return Y==G.length?G:function(Pe,ct,Ke){(Ke==null||Ke>Pe.length)&&(Ke=Pe.length);var bt=new(Pe instanceof t?t:Pe instanceof n?n:e)(Ke-ct);return bt.set(Pe.subarray(ct,Ke)),bt}(G,0,Y)},b=new e(0),I=typeof TextDecoder<"u"&&new TextDecoder;try{I.decode(b,{stream:!0})}catch{}return s.convert_streams=function(D){var G=new DataView(D),H=0;function $(){var we=G.getUint16(H);return H+=2,we}function F(){var we=G.getUint32(H);return H+=4,we}function Z(we){ge.setUint16(be,we),be+=2}function q(we){ge.setUint32(be,we),be+=4}for(var j={signature:F(),flavor:F(),length:F(),numTables:$(),reserved:$(),totalSfntSize:F(),majorVersion:$(),minorVersion:$(),metaOffset:F(),metaLength:F(),metaOrigLength:F(),privOffset:F(),privLength:F()},J=0;Math.pow(2,J)<=j.numTables;)J++;J--;for(var B=16*Math.pow(2,J),Y=16*j.numTables-B,K=12,V=[],W=0;W<j.numTables;W++)V.push({tag:F(),offset:F(),compLength:F(),origLength:F(),origChecksum:F()}),K+=16;var Q,X=new Uint8Array(12+16*V.length+V.reduce(function(we,re){return we+re.origLength+4},0)),te=X.buffer,ge=new DataView(te),be=0;return q(j.flavor),Z(j.numTables),Z(B),Z(J),Z(Y),V.forEach(function(we){q(we.tag),q(we.origChecksum),q(K),q(we.origLength),we.outOffset=K,(K+=we.origLength)%4!=0&&(K+=4-K%4)}),V.forEach(function(we){var re,me=D.slice(we.offset,we.offset+we.compLength);if(we.compLength!=we.origLength){var z=new Uint8Array(we.origLength);re=new Uint8Array(me,2),S(re,z)}else z=new Uint8Array(me);X.set(z,we.outOffset);var Me=0;(K=we.outOffset+we.origLength)%4!=0&&(Me=4-K%4),X.set(new Uint8Array(Me).buffer,we.outOffset+we.origLength),Q=K+Me}),te.slice(0,Q)},Object.defineProperty(s,"__esModule",{value:!0}),s}({}).convert_streams}function I2(s,e){const t={M:2,L:2,Q:4,C:6,Z:0},n={C:"18g,ca,368,1kz",D:"17k,6,2,2+4,5+c,2+6,2+1,10+1,9+f,j+11,2+1,a,2,2+1,15+2,3,j+2,6+3,2+8,2,2,2+1,w+a,4+e,3+3,2,3+2,3+5,23+w,2f+4,3,2+9,2,b,2+3,3,1k+9,6+1,3+1,2+2,2+d,30g,p+y,1,1+1g,f+x,2,sd2+1d,jf3+4,f+3,2+4,2+2,b+3,42,2,4+2,2+1,2,3,t+1,9f+w,2,el+2,2+g,d+2,2l,2+1,5,3+1,2+1,2,3,6,16wm+1v",R:"17m+3,2,2,6+3,m,15+2,2+2,h+h,13,3+8,2,2,3+1,2,p+1,x,5+4,5,a,2,2,3,u,c+2,g+1,5,2+1,4+1,5j,6+1,2,b,2+2,f,2+1,1s+2,2,3+1,7,1ez0,2,2+1,4+4,b,4,3,b,42,2+2,4,3,2+1,2,o+3,ae,ep,x,2o+2,3+1,3,5+1,6",L:"x9u,jff,a,fd,jv",T:"4t,gj+33,7o+4,1+1,7c+18,2,2+1,2+1,2,21+a,2,1b+k,h,2u+6,3+5,3+1,2+3,y,2,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,3,7,6+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+d,1,1+1,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,ek,3+1,r+4,1e+4,6+5,2p+c,1+3,1,1+2,1+b,2db+2,3y,2p+v,ff+3,30+1,n9x,1+2,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,5s,6y+2,ea,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+9,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2,2b+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,470+8,at4+4,1o+6,t5,1s+3,2a,f5l+1,2+3,43o+2,a+7,1+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,1,gzau,v+2n,3l+6n"},i=1,r=2,o=4,a=8,l=16,c=32;let h;function u(M){if(!h){const T={R:r,L:i,D:o,C:l,U:c,T:a};h=new Map;for(let S in n){let b=0;n[S].split(",").forEach(I=>{let[D,G]=I.split("+");D=parseInt(D,36),G=G?parseInt(G,36):0,h.set(b+=D,T[S]);for(let H=G;H--;)h.set(++b,T[S])})}}return h.get(M)||c}const d=1,f=2,p=3,v=4,m=[null,"isol","init","fina","medi"];function g(M){const T=new Uint8Array(M.length);let S=c,b=d,I=-1;for(let D=0;D<M.length;D++){const G=M.codePointAt(D);let H=u(G)|0,$=d;H&a||(S&(i|o|l)?H&(r|o|l)?($=p,(b===d||b===p)&&T[I]++):H&(i|c)&&(b===f||b===v)&&T[I]--:S&(r|c)&&(b===f||b===v)&&T[I]--,b=T[D]=$,S=H,I=D,G>65535&&D++)}return T}function x(M,T){const S=[];for(let I=0;I<T.length;I++){const D=T.codePointAt(I);D>65535&&I++,S.push(s.U.codeToGlyph(M,D))}const b=M.GSUB;if(b){const{lookupList:I,featureList:D}=b;let G;const H=/^(rlig|liga|mset|isol|init|fina|medi|half|pres|blws|ccmp)$/,$=[];D.forEach(F=>{if(H.test(F.tag))for(let Z=0;Z<F.tab.length;Z++){if($[F.tab[Z]])continue;$[F.tab[Z]]=!0;const q=I[F.tab[Z]],j=/^(isol|init|fina|medi)$/.test(F.tag);j&&!G&&(G=g(T));for(let J=0;J<S.length;J++)(!G||!j||m[G[J]]===F.tag)&&s.U._applySubs(S,J,q,I)}})}return S}function y(M,T){const S=new Int16Array(T.length*3);let b=0;for(;b<T.length;b++){const H=T[b];if(H===-1)continue;S[b*3+2]=M.hmtx.aWidth[H];const $=M.GPOS;if($){const F=$.lookupList;for(let Z=0;Z<F.length;Z++){const q=F[Z];for(let j=0;j<q.tabs.length;j++){const J=q.tabs[j];if(q.ltype===1){if(s._lctf.coverageIndex(J.coverage,H)!==-1&&J.pos){G(J.pos,b);break}}else if(q.ltype===2){let B=null,Y=I();if(Y!==-1){const K=s._lctf.coverageIndex(J.coverage,T[Y]);if(K!==-1){if(J.fmt===1){const V=J.pairsets[K];for(let W=0;W<V.length;W++)V[W].gid2===H&&(B=V[W])}else if(J.fmt===2){const V=s.U._getGlyphClass(T[Y],J.classDef1),W=s.U._getGlyphClass(H,J.classDef2);B=J.matrix[V][W]}if(B){B.val1&&G(B.val1,Y),B.val2&&G(B.val2,b);break}}}}else if(q.ltype===4){const B=s._lctf.coverageIndex(J.markCoverage,H);if(B!==-1){const Y=I(D),K=Y===-1?-1:s._lctf.coverageIndex(J.baseCoverage,T[Y]);if(K!==-1){const V=J.markArray[B],W=J.baseArray[K][V.markClass];S[b*3]=W.x-V.x+S[Y*3]-S[Y*3+2],S[b*3+1]=W.y-V.y+S[Y*3+1];break}}}else if(q.ltype===6){const B=s._lctf.coverageIndex(J.mark1Coverage,H);if(B!==-1){const Y=I();if(Y!==-1){const K=T[Y];if(_(M,K)===3){const V=s._lctf.coverageIndex(J.mark2Coverage,K);if(V!==-1){const W=J.mark1Array[B],Q=J.mark2Array[V][W.markClass];S[b*3]=Q.x-W.x+S[Y*3]-S[Y*3+2],S[b*3+1]=Q.y-W.y+S[Y*3+1];break}}}}}}}}else if(M.kern&&!M.cff){const F=I();if(F!==-1){const Z=M.kern.glyph1.indexOf(T[F]);if(Z!==-1){const q=M.kern.rval[Z].glyph2.indexOf(H);q!==-1&&(S[F*3+2]+=M.kern.rval[Z].vals[q])}}}}return S;function I(H){for(let $=b-1;$>=0;$--)if(T[$]!==-1&&(!H||H(T[$])))return $;return-1}function D(H){return _(M,H)===1}function G(H,$){for(let F=0;F<3;F++)S[$*3+F]+=H[F]||0}}function _(M,T){const S=M.GDEF&&M.GDEF.glyphClassDef;return S?s.U._getGlyphClass(T,S):0}function E(...M){for(let T=0;T<M.length;T++)if(typeof M[T]=="number")return M[T]}function w(M){const T=Object.create(null),S=M["OS/2"],b=M.hhea,I=M.head.unitsPerEm,D=E(S&&S.sTypoAscender,b&&b.ascender,I),G={unitsPerEm:I,ascender:D,descender:E(S&&S.sTypoDescender,b&&b.descender,0),capHeight:E(S&&S.sCapHeight,D),xHeight:E(S&&S.sxHeight,D),lineGap:E(S&&S.sTypoLineGap,b&&b.lineGap),supportsCodePoint(H){return s.U.codeToGlyph(M,H)>0},forEachGlyph(H,$,F,Z){let q=0;const j=1/G.unitsPerEm*$,J=x(M,H);let B=0;const Y=y(M,J);return J.forEach((K,V)=>{if(K!==-1){let W=T[K];if(!W){const{cmds:Q,crds:X}=s.U.glyphToPath(M,K);let te="",ge=0;for(let z=0,Me=Q.length;z<Me;z++){const de=t[Q[z]];te+=Q[z];for(let Ee=1;Ee<=de;Ee++)te+=(Ee>1?",":"")+X[ge++]}let be,we,re,me;if(X.length){be=we=1/0,re=me=-1/0;for(let z=0,Me=X.length;z<Me;z+=2){let de=X[z],Ee=X[z+1];de<be&&(be=de),Ee<we&&(we=Ee),de>re&&(re=de),Ee>me&&(me=Ee)}}else be=re=we=me=0;W=T[K]={index:K,advanceWidth:M.hmtx.aWidth[K],xMin:be,yMin:we,xMax:re,yMax:me,path:te}}Z.call(null,W,q+Y[V*3]*j,Y[V*3+1]*j,B),q+=Y[V*3+2]*j,F&&(q+=F*$)}B+=H.codePointAt(B)>65535?2:1}),q}};return G}return function(T){const S=new Uint8Array(T,0,4),b=s._bin.readASCII(S,0,4);if(b==="wOFF")T=e(T);else if(b==="wOF2")throw new Error("woff2 fonts not supported");return w(s.parse(T)[0])}}const D2=Vo({name:"Typr Font Parser",dependencies:[R2,P2,I2],init(s,e,t){const n=s(),i=e();return t(n,i)}});/*!
Custom bundle of @unicode-font-resolver/client v1.0.2 (https://github.com/lojjic/unicode-font-resolver)
for use in Troika text rendering. 
Original MIT license applies
*/function U2(){return function(s){var e=function(){this.buckets=new Map};e.prototype.add=function(y){var _=y>>5;this.buckets.set(_,(this.buckets.get(_)||0)|1<<(31&y))},e.prototype.has=function(y){var _=this.buckets.get(y>>5);return _!==void 0&&(_&1<<(31&y))!=0},e.prototype.serialize=function(){var y=[];return this.buckets.forEach(function(_,E){y.push((+E).toString(36)+":"+_.toString(36))}),y.join(",")},e.prototype.deserialize=function(y){var _=this;this.buckets.clear(),y.split(",").forEach(function(E){var w=E.split(":");_.buckets.set(parseInt(w[0],36),parseInt(w[1],36))})};var t=Math.pow(2,8),n=t-1,i=~n;function r(y){var _=function(w){return w&i}(y).toString(16),E=function(w){return(w&i)+t-1}(y).toString(16);return"codepoint-index/plane"+(y>>16)+"/"+_+"-"+E+".json"}function o(y,_){var E=y&n,w=_.codePointAt(E/6|0);return((w=(w||48)-48)&1<<E%6)!=0}function a(y,_){var E;(E=y,E.replace(/U\+/gi,"").replace(/^,+|,+$/g,"").split(/,+/).map(function(w){return w.split("-").map(function(M){return parseInt(M.trim(),16)})})).forEach(function(w){var M=w[0],T=w[1];T===void 0&&(T=M),_(M,T)})}function l(y,_){a(y,function(E,w){for(var M=E;M<=w;M++)_(M)})}var c={},h={},u=new WeakMap,d="https://cdn.jsdelivr.net/gh/lojjic/unicode-font-resolver@v1.0.1/packages/data";function f(y){var _=u.get(y);return _||(_=new e,l(y.ranges,function(E){return _.add(E)}),u.set(y,_)),_}var p,v=new Map;function m(y,_,E){return y[_]?_:y[E]?E:function(w){for(var M in w)return M}(y)}function g(y,_){var E=_;if(!y.includes(E)){E=1/0;for(var w=0;w<y.length;w++)Math.abs(y[w]-_)<Math.abs(E-_)&&(E=y[w])}return E}function x(y){return p||(p=new Set,l("9-D,20,85,A0,1680,2000-200A,2028-202F,205F,3000",function(_){p.add(_)})),p.has(y)}return s.CodePointSet=e,s.clearCache=function(){c={},h={}},s.getFontsForString=function(y,_){_===void 0&&(_={});var E,w=_.lang;w===void 0&&(w=new RegExp("\\p{Script=Hangul}","u").test(E=y)?"ko":new RegExp("\\p{Script=Hiragana}|\\p{Script=Katakana}","u").test(E)?"ja":"en");var M=_.category;M===void 0&&(M="sans-serif");var T=_.style;T===void 0&&(T="normal");var S=_.weight;S===void 0&&(S=400);var b=(_.dataUrl||d).replace(/\/$/g,""),I=new Map,D=new Uint8Array(y.length),G={},H={},$=new Array(y.length),F=new Map,Z=!1;function q(B){var Y=v.get(B);return Y||(Y=fetch(b+"/"+B).then(function(K){if(!K.ok)throw new Error(K.statusText);return K.json().then(function(V){if(!Array.isArray(V)||V[0]!==1)throw new Error("Incorrect schema version; need 1, got "+V[0]);return V[1]})}).catch(function(K){if(b!==d)return Z||(console.error('unicode-font-resolver: Failed loading from dataUrl "'+b+'", trying default CDN. '+K.message),Z=!0),b=d,v.delete(B),q(B);throw K}),v.set(B,Y)),Y}for(var j=function(B){var Y=y.codePointAt(B),K=r(Y);$[B]=K,c[K]||F.has(K)||F.set(K,q(K).then(function(V){c[K]=V})),Y>65535&&(B++,J=B)},J=0;J<y.length;J++)j(J);return Promise.all(F.values()).then(function(){F.clear();for(var B=function(K){var V=y.codePointAt(K),W=null,Q=c[$[K]],X=void 0;for(var te in Q){var ge=H[te];if(ge===void 0&&(ge=H[te]=new RegExp(te).test(w||"en")),ge){for(var be in X=te,Q[te])if(o(V,Q[te][be])){W=be;break}break}}if(!W){e:for(var we in Q)if(we!==X){for(var re in Q[we])if(o(V,Q[we][re])){W=re;break e}}}W||(console.debug("No font coverage for U+"+V.toString(16)),W="latin"),$[K]=W,h[W]||F.has(W)||F.set(W,q("font-meta/"+W+".json").then(function(me){h[W]=me})),V>65535&&(K++,Y=K)},Y=0;Y<y.length;Y++)B(Y);return Promise.all(F.values())}).then(function(){for(var B,Y=null,K=0;K<y.length;K++){var V=y.codePointAt(K);if(Y&&(x(V)||f(Y).has(V)))D[K]=D[K-1];else{Y=h[$[K]];var W=G[Y.id];if(!W){var Q=Y.typeforms,X=m(Q,M,"sans-serif"),te=m(Q[X],T,"normal"),ge=g((B=Q[X])===null||B===void 0?void 0:B[te],S);W=G[Y.id]=b+"/font-files/"+Y.id+"/"+X+"."+te+"."+ge+".woff"}var be=I.get(W);be==null&&(be=I.size,I.set(W,be)),D[K]=be}V>65535&&(K++,D[K]=D[K-1])}return{fontUrls:Array.from(I.keys()),chars:D}})},Object.defineProperty(s,"__esModule",{value:!0}),s}({})}function L2(s,e){const t=Object.create(null),n=Object.create(null);function i(o,a){const l=c=>{console.error(`Failure loading font ${o}`,c)};try{const c=new XMLHttpRequest;c.open("get",o,!0),c.responseType="arraybuffer",c.onload=function(){if(c.status>=400)l(new Error(c.statusText));else if(c.status>0)try{const h=s(c.response);h.src=o,a(h)}catch(h){l(h)}},c.onerror=l,c.send()}catch(c){l(c)}}function r(o,a){let l=t[o];l?a(l):n[o]?n[o].push(a):(n[o]=[a],i(o,c=>{c.src=o,t[o]=c,n[o].forEach(h=>h(c)),delete n[o]}))}return function(o,a,{lang:l,fonts:c=[],style:h="normal",weight:u="normal",unicodeFontsURL:d}={}){const f=new Uint8Array(o.length),p=[];o.length||x();const v=new Map,m=[];if(h!=="italic"&&(h="normal"),typeof u!="number"&&(u=u==="bold"?700:400),c&&!Array.isArray(c)&&(c=[c]),c=c.slice().filter(_=>!_.lang||_.lang.test(l)).reverse(),c.length){let M=0;(function T(S=0){for(let b=S,I=o.length;b<I;b++){const D=o.codePointAt(b);if(M===1&&p[f[b-1]].supportsCodePoint(D)||/\s/.test(o[b]))f[b]=f[b-1],M===2&&(m[m.length-1][1]=b);else for(let G=f[b],H=c.length;G<=H;G++)if(G===H){const $=M===2?m[m.length-1]:m[m.length]=[b,b];$[1]=b,M=2}else{f[b]=G;const{src:$,unicodeRange:F}=c[G];if(!F||y(D,F)){const Z=t[$];if(!Z){r($,()=>{T(b)});return}if(Z.supportsCodePoint(D)){let q=v.get(Z);typeof q!="number"&&(q=p.length,p.push(Z),v.set(Z,q)),f[b]=q,M=1;break}}}D>65535&&b+1<I&&(f[b+1]=f[b],b++,M===2&&(m[m.length-1][1]=b))}g()})()}else m.push([0,o.length-1]),g();function g(){if(m.length){const _=m.map(E=>o.substring(E[0],E[1]+1)).join(`
`);e.getFontsForString(_,{lang:l||void 0,style:h,weight:u,dataUrl:d}).then(({fontUrls:E,chars:w})=>{const M=p.length;let T=0;m.forEach(b=>{for(let I=0,D=b[1]-b[0];I<=D;I++)f[b[0]+I]=w[T++]+M;T++});let S=0;E.forEach((b,I)=>{r(b,D=>{p[I+M]=D,++S===E.length&&x()})})})}else x()}function x(){a({chars:f,fonts:p})}function y(_,E){for(let w=0;w<E.length;w++){const[M,T=M]=E[w];if(M<=_&&_<=T)return!0}return!1}}}const N2=Vo({name:"FontResolver",dependencies:[L2,D2,U2],init(s,e,t){return s(e,t())}});function O2(s,e){const n=/[\u00AD\u034F\u061C\u115F-\u1160\u17B4-\u17B5\u180B-\u180E\u200B-\u200F\u202A-\u202E\u2060-\u206F\u3164\uFE00-\uFE0F\uFEFF\uFFA0\uFFF0-\uFFF8]/,i="[^\\S\\u00A0]",r=new RegExp(`${i}|[\\-\\u007C\\u00AD\\u2010\\u2012-\\u2014\\u2027\\u2056\\u2E17\\u2E40]`);function o({text:p,lang:v,fonts:m,style:g,weight:x,preResolvedFonts:y,unicodeFontsURL:_},E){const w=({chars:M,fonts:T})=>{let S,b;const I=[];for(let D=0;D<M.length;D++)M[D]!==b?(b=M[D],I.push(S={start:D,end:D,fontObj:T[M[D]]})):S.end=D;E(I)};y?w(y):s(p,w,{lang:v,fonts:m,style:g,weight:x,unicodeFontsURL:_})}function a({text:p="",font:v,lang:m,sdfGlyphSize:g=64,fontSize:x=400,fontWeight:y=1,fontStyle:_="normal",letterSpacing:E=0,lineHeight:w="normal",maxWidth:M=1/0,direction:T,textAlign:S="left",textIndent:b=0,whiteSpace:I="normal",overflowWrap:D="normal",anchorX:G=0,anchorY:H=0,metricsOnly:$=!1,unicodeFontsURL:F,preResolvedFonts:Z=null,includeCaretPositions:q=!1,chunkedBoundsSize:j=8192,colorRanges:J=null},B){const Y=u(),K={fontLoad:0,typesetting:0};p.indexOf("\r")>-1&&(console.info("Typesetter: got text with \\r chars; normalizing to \\n"),p=p.replace(/\r\n/g,`
`).replace(/\r/g,`
`)),x=+x,E=+E,M=+M,w=w||"normal",b=+b,o({text:p,lang:m,style:_,weight:y,fonts:typeof v=="string"?[{src:v}]:v,unicodeFontsURL:F,preResolvedFonts:Z},V=>{K.fontLoad=u()-Y;const W=isFinite(M);let Q=null,X=null,te=null,ge=null,be=null,we=null,re=null,me=null,z=0,Me=0,de=I!=="nowrap";const Ee=new Map,ce=u();let Ue=b,_e=0,P=new d;const R=[P];V.forEach(Ae=>{const{fontObj:ye}=Ae,{ascender:Ce,descender:He,unitsPerEm:Re,lineGap:ke,capHeight:Fe,xHeight:Ve}=ye;let Pe=Ee.get(ye);if(!Pe){const Te=x/Re,he=w==="normal"?(Ce-He+ke)*Te:w*x,Ie=(he-(Ce-He)*Te)/2,Ne=Math.min(he,(Ce-He)*Te),De=(Ce+He)/2*Te+Ne/2;Pe={index:Ee.size,src:ye.src,fontObj:ye,fontSizeMult:Te,unitsPerEm:Re,ascender:Ce*Te,descender:He*Te,capHeight:Fe*Te,xHeight:Ve*Te,lineHeight:he,baseline:-Ie-Ce*Te,caretTop:De,caretBottom:De-Ne},Ee.set(ye,Pe)}const{fontSizeMult:ct}=Pe,Ke=p.slice(Ae.start,Ae.end+1);let bt,ne;ye.forEachGlyph(Ke,x,E,(Te,he,Ie,Ne)=>{he+=_e,Ne+=Ae.start,bt=he,ne=Te;const De=p.charAt(Ne),tt=Te.advanceWidth*ct,vt=P.count;let at;if("isEmpty"in Te||(Te.isWhitespace=!!De&&new RegExp(i).test(De),Te.canBreakAfter=!!De&&r.test(De),Te.isEmpty=Te.xMin===Te.xMax||Te.yMin===Te.yMax||n.test(De)),!Te.isWhitespace&&!Te.isEmpty&&Me++,de&&W&&!Te.isWhitespace&&he+tt+Ue>M&&vt){if(P.glyphAt(vt-1).glyphObj.canBreakAfter)at=new d,Ue=-he;else for(let Ht=vt;Ht--;)if(Ht===0&&D==="break-word"){at=new d,Ue=-he;break}else if(P.glyphAt(Ht).glyphObj.canBreakAfter){at=P.splitAt(Ht+1);const jt=at.glyphAt(0).x;Ue-=jt;for(let en=at.count;en--;)at.glyphAt(en).x-=jt;break}at&&(P.isSoftWrapped=!0,P=at,R.push(P),z=M)}let et=P.glyphAt(P.count);et.glyphObj=Te,et.x=he+Ue,et.y=Ie,et.width=tt,et.charIndex=Ne,et.fontData=Pe,De===`
`&&(P=new d,R.push(P),Ue=-(he+tt+E*x)+b)}),_e=bt+ne.advanceWidth*ct+E*x});let ee=0;R.forEach(Ae=>{let ye=!0;for(let Ce=Ae.count;Ce--;){const He=Ae.glyphAt(Ce);ye&&!He.glyphObj.isWhitespace&&(Ae.width=He.x+He.width,Ae.width>z&&(z=Ae.width),ye=!1);let{lineHeight:Re,capHeight:ke,xHeight:Fe,baseline:Ve}=He.fontData;Re>Ae.lineHeight&&(Ae.lineHeight=Re);const Pe=Ve-Ae.baseline;Pe<0&&(Ae.baseline+=Pe,Ae.cap+=Pe,Ae.ex+=Pe),Ae.cap=Math.max(Ae.cap,Ae.baseline+ke),Ae.ex=Math.max(Ae.ex,Ae.baseline+Fe)}Ae.baseline-=ee,Ae.cap-=ee,Ae.ex-=ee,ee+=Ae.lineHeight});let ae=0,le=0;if(G&&(typeof G=="number"?ae=-G:typeof G=="string"&&(ae=-z*(G==="left"?0:G==="center"?.5:G==="right"?1:c(G)))),H&&(typeof H=="number"?le=-H:typeof H=="string"&&(le=H==="top"?0:H==="top-baseline"?-R[0].baseline:H==="top-cap"?-R[0].cap:H==="top-ex"?-R[0].ex:H==="middle"?ee/2:H==="bottom"?ee:H==="bottom-baseline"?-R[R.length-1].baseline:c(H)*ee)),!$){const Ae=e.getEmbeddingLevels(p,T);Q=new Uint16Array(Me),X=new Uint8Array(Me),te=new Float32Array(Me*2),ge={},re=[1/0,1/0,-1/0,-1/0],me=[],q&&(we=new Float32Array(p.length*4)),J&&(be=new Uint8Array(Me*3));let ye=0,Ce=-1,He=-1,Re,ke;if(R.forEach((Fe,Ve)=>{let{count:Pe,width:ct}=Fe;if(Pe>0){let Ke=0;for(let Ne=Pe;Ne--&&Fe.glyphAt(Ne).glyphObj.isWhitespace;)Ke++;let bt=0,ne=0;if(S==="center")bt=(z-ct)/2;else if(S==="right")bt=z-ct;else if(S==="justify"&&Fe.isSoftWrapped){let Ne=0;for(let De=Pe-Ke;De--;)Fe.glyphAt(De).glyphObj.isWhitespace&&Ne++;ne=(z-ct)/Ne}if(ne||bt){let Ne=0;for(let De=0;De<Pe;De++){let tt=Fe.glyphAt(De);const vt=tt.glyphObj;tt.x+=bt+Ne,ne!==0&&vt.isWhitespace&&De<Pe-Ke&&(Ne+=ne,tt.width+=ne)}}const Te=e.getReorderSegments(p,Ae,Fe.glyphAt(0).charIndex,Fe.glyphAt(Fe.count-1).charIndex);for(let Ne=0;Ne<Te.length;Ne++){const[De,tt]=Te[Ne];let vt=1/0,at=-1/0;for(let et=0;et<Pe;et++)if(Fe.glyphAt(et).charIndex>=De){let Ht=et,jt=et;for(;jt<Pe;jt++){let en=Fe.glyphAt(jt);if(en.charIndex>tt)break;jt<Pe-Ke&&(vt=Math.min(vt,en.x),at=Math.max(at,en.x+en.width))}for(let en=Ht;en<jt;en++){const Bn=Fe.glyphAt(en);Bn.x=at-(Bn.x+Bn.width-vt)}break}}let he;const Ie=Ne=>he=Ne;for(let Ne=0;Ne<Pe;Ne++){const De=Fe.glyphAt(Ne);he=De.glyphObj;const tt=he.index,vt=Ae.levels[De.charIndex]&1;if(vt){const at=e.getMirroredCharacter(p[De.charIndex]);at&&De.fontData.fontObj.forEachGlyph(at,0,0,Ie)}if(q){const{charIndex:at,fontData:et}=De,Ht=De.x+ae,jt=De.x+De.width+ae;we[at*4]=vt?jt:Ht,we[at*4+1]=vt?Ht:jt,we[at*4+2]=Fe.baseline+et.caretBottom+le,we[at*4+3]=Fe.baseline+et.caretTop+le;const en=at-Ce;en>1&&h(we,Ce,en),Ce=at}if(J){const{charIndex:at}=De;for(;at>He;)He++,J.hasOwnProperty(He)&&(ke=J[He])}if(!he.isWhitespace&&!he.isEmpty){const at=ye++,{fontSizeMult:et,src:Ht,index:jt}=De.fontData,en=ge[Ht]||(ge[Ht]={});en[tt]||(en[tt]={path:he.path,pathBounds:[he.xMin,he.yMin,he.xMax,he.yMax]});const Bn=De.x+ae,An=De.y+Fe.baseline+le;te[at*2]=Bn,te[at*2+1]=An;const Jn=Bn+he.xMin*et,vi=An+he.yMin*et,_i=Bn+he.xMax*et,zn=An+he.yMax*et;Jn<re[0]&&(re[0]=Jn),vi<re[1]&&(re[1]=vi),_i>re[2]&&(re[2]=_i),zn>re[3]&&(re[3]=zn),at%j===0&&(Re={start:at,end:at,rect:[1/0,1/0,-1/0,-1/0]},me.push(Re)),Re.end++;const pn=Re.rect;if(Jn<pn[0]&&(pn[0]=Jn),vi<pn[1]&&(pn[1]=vi),_i>pn[2]&&(pn[2]=_i),zn>pn[3]&&(pn[3]=zn),Q[at]=tt,X[at]=jt,J){const ni=at*3;be[ni]=ke>>16&255,be[ni+1]=ke>>8&255,be[ni+2]=ke&255}}}}}),we){const Fe=p.length-Ce;Fe>1&&h(we,Ce,Fe)}}const fe=[];Ee.forEach(({index:Ae,src:ye,unitsPerEm:Ce,ascender:He,descender:Re,lineHeight:ke,capHeight:Fe,xHeight:Ve})=>{fe[Ae]={src:ye,unitsPerEm:Ce,ascender:He,descender:Re,lineHeight:ke,capHeight:Fe,xHeight:Ve}}),K.typesetting=u()-ce,B({glyphIds:Q,glyphFontIndices:X,glyphPositions:te,glyphData:ge,fontData:fe,caretPositions:we,glyphColors:be,chunkedBounds:me,fontSize:x,topBaseline:le+R[0].baseline,blockBounds:[ae,le-ee,ae+z,le],visibleBounds:re,timings:K})})}function l(p,v){a({...p,metricsOnly:!0},m=>{const[g,x,y,_]=m.blockBounds;v({width:y-g,height:_-x})})}function c(p){let v=p.match(/^([\d.]+)%$/),m=v?parseFloat(v[1]):NaN;return isNaN(m)?0:m/100}function h(p,v,m){const g=p[v*4],x=p[v*4+1],y=p[v*4+2],_=p[v*4+3],E=(x-g)/m;for(let w=0;w<m;w++){const M=(v+w)*4;p[M]=g+E*w,p[M+1]=g+E*(w+1),p[M+2]=y,p[M+3]=_}}function u(){return(self.performance||Date).now()}function d(){this.data=[]}const f=["glyphObj","x","y","width","charIndex","fontData"];return d.prototype={width:0,lineHeight:0,baseline:0,cap:0,ex:0,isSoftWrapped:!1,get count(){return Math.ceil(this.data.length/f.length)},glyphAt(p){let v=d.flyweight;return v.data=this.data,v.index=p,v},splitAt(p){let v=new d;return v.data=this.data.splice(p*f.length),v}},d.flyweight=f.reduce((p,v,m,g)=>(Object.defineProperty(p,v,{get(){return this.data[this.index*f.length+m]},set(x){this.data[this.index*f.length+m]=x}}),p),{data:null,index:0}),{typeset:a,measure:l}}const Ls=()=>(self.performance||Date).now(),Xh=J_();let pg;function F2(s,e,t,n,i,r,o,a,l,c,h=!0){return h?B2(s,e,t,n,i,r,o,a,l,c).then(null,u=>(pg||(console.warn("WebGL SDF generation failed, falling back to JS",u),pg=!0),gg(s,e,t,n,i,r,o,a,l,c))):gg(s,e,t,n,i,r,o,a,l,c)}const uc=[],k2=5;let Pd=0;function $_(){const s=Ls();for(;uc.length&&Ls()-s<k2;)uc.shift()();Pd=uc.length?setTimeout($_,0):0}const B2=(...s)=>new Promise((e,t)=>{uc.push(()=>{const n=Ls();try{Xh.webgl.generateIntoCanvas(...s),e({timing:Ls()-n})}catch(i){t(i)}}),Pd||(Pd=setTimeout($_,0))}),z2=4,V2=2e3,mg={};let G2=0;function gg(s,e,t,n,i,r,o,a,l,c){const h="TroikaTextSDFGenerator_JS_"+G2++%z2;let u=mg[h];return u||(u=mg[h]={workerModule:Vo({name:h,workerId:h,dependencies:[J_,Ls],init(d,f){const p=d().javascript.generate;return function(...v){const m=f();return{textureData:p(...v),timing:f()-m}}},getTransferables(d){return[d.textureData.buffer]}}),requests:0,idleTimer:null}),u.requests++,clearTimeout(u.idleTimer),u.workerModule(s,e,t,n,i,r).then(({textureData:d,timing:f})=>{const p=Ls(),v=new Uint8Array(d.length*4);for(let m=0;m<d.length;m++)v[m*4+c]=d[m];return Xh.webglUtils.renderImageData(o,v,a,l,s,e,1<<3-c),f+=Ls()-p,--u.requests===0&&(u.idleTimer=setTimeout(()=>{x2(h)},V2)),{timing:f}})}function H2(s){s._warm||(Xh.webgl.isSupported(s),s._warm=!0)}const W2=Xh.webglUtils.resizeWebGLCanvasWithoutClearing,ca={unicodeFontsURL:null,sdfGlyphSize:64,sdfMargin:1/16,sdfExponent:9,textureWidth:2048},X2=new ze;function xo(){return(self.performance||Date).now()}const vg=Object.create(null);function e0(s,e){s=j2({},s);const t=xo(),n=[];if(s.font&&n.push({label:"user",src:Z2(s.font)}),s.font=n,s.text=""+s.text,s.sdfGlyphSize=s.sdfGlyphSize||ca.sdfGlyphSize,s.unicodeFontsURL=s.unicodeFontsURL||ca.unicodeFontsURL,s.colorRanges!=null){let u={};for(let d in s.colorRanges)if(s.colorRanges.hasOwnProperty(d)){let f=s.colorRanges[d];typeof f!="number"&&(f=X2.set(f).getHex()),u[d]=f}s.colorRanges=u}Object.freeze(s);const{textureWidth:i,sdfExponent:r}=ca,{sdfGlyphSize:o}=s,a=i/o*4;let l=vg[o];if(!l){const u=document.createElement("canvas");u.width=i,u.height=o*256/a,l=vg[o]={glyphCount:0,sdfGlyphSize:o,sdfCanvas:u,sdfTexture:new cn(u,void 0,void 0,void 0,_n,_n),contextLost:!1,glyphsByFont:new Map},l.sdfTexture.generateMipmaps=!1,Y2(l)}const{sdfTexture:c,sdfCanvas:h}=l;K2(s).then(u=>{const{glyphIds:d,glyphFontIndices:f,fontData:p,glyphPositions:v,fontSize:m,timings:g}=u,x=[],y=new Float32Array(d.length*4);let _=0,E=0;const w=xo(),M=p.map(D=>{let G=l.glyphsByFont.get(D.src);return G||l.glyphsByFont.set(D.src,G=new Map),G});d.forEach((D,G)=>{const H=f[G],{src:$,unitsPerEm:F}=p[H];let Z=M[H].get(D);if(!Z){const{path:Y,pathBounds:K}=u.glyphData[$][D],V=Math.max(K[2]-K[0],K[3]-K[1])/o*(ca.sdfMargin*o+.5),W=l.glyphCount++,Q=[K[0]-V,K[1]-V,K[2]+V,K[3]+V];M[H].set(D,Z={path:Y,atlasIndex:W,sdfViewBox:Q}),x.push(Z)}const{sdfViewBox:q}=Z,j=v[E++],J=v[E++],B=m/F;y[_++]=j+q[0]*B,y[_++]=J+q[1]*B,y[_++]=j+q[2]*B,y[_++]=J+q[3]*B,d[G]=Z.atlasIndex}),g.quads=(g.quads||0)+(xo()-w);const T=xo();g.sdf={};const S=h.height,b=Math.ceil(l.glyphCount/a),I=Math.pow(2,Math.ceil(Math.log2(b*o)));I>S&&(console.info(`Increasing SDF texture size ${S}->${I}`),W2(h,i,I),c.dispose()),Promise.all(x.map(D=>t0(D,l,s.gpuAccelerateSDF).then(({timing:G})=>{g.sdf[D.atlasIndex]=G}))).then(()=>{x.length&&!l.contextLost&&(n0(l),c.needsUpdate=!0),g.sdfTotal=xo()-T,g.total=xo()-t,e(Object.freeze({parameters:s,sdfTexture:c,sdfGlyphSize:o,sdfExponent:r,glyphBounds:y,glyphAtlasIndices:d,glyphColors:u.glyphColors,caretPositions:u.caretPositions,chunkedBounds:u.chunkedBounds,ascender:u.ascender,descender:u.descender,lineHeight:u.lineHeight,capHeight:u.capHeight,xHeight:u.xHeight,topBaseline:u.topBaseline,blockBounds:u.blockBounds,visibleBounds:u.visibleBounds,timings:u.timings}))})}),Promise.resolve().then(()=>{l.contextLost||H2(h)})}function t0({path:s,atlasIndex:e,sdfViewBox:t},{sdfGlyphSize:n,sdfCanvas:i,contextLost:r},o){if(r)return Promise.resolve({timing:-1});const{textureWidth:a,sdfExponent:l}=ca,c=Math.max(t[2]-t[0],t[3]-t[1]),h=Math.floor(e/4),u=h%(a/n)*n,d=Math.floor(h/(a/n))*n,f=e%4;return F2(n,n,s,t,c,l,i,u,d,f,o)}function Y2(s){const e=s.sdfCanvas;e.addEventListener("webglcontextlost",t=>{console.log("Context Lost",t),t.preventDefault(),s.contextLost=!0}),e.addEventListener("webglcontextrestored",t=>{console.log("Context Restored",t),s.contextLost=!1;const n=[];s.glyphsByFont.forEach(i=>{i.forEach(r=>{n.push(t0(r,s,!0))})}),Promise.all(n).then(()=>{n0(s),s.sdfTexture.needsUpdate=!0})})}function q2({font:s,characters:e,sdfGlyphSize:t},n){let i=Array.isArray(e)?e.join(`
`):""+e;e0({font:s,sdfGlyphSize:t,text:i},n)}function j2(s,e){for(let t in e)e.hasOwnProperty(t)&&(s[t]=e[t]);return s}let ic;function Z2(s){return ic||(ic=typeof document>"u"?{}:document.createElement("a")),ic.href=s,ic.href}function n0(s){if(typeof createImageBitmap!="function"){console.info("Safari<15: applying SDF canvas workaround");const{sdfCanvas:e,sdfTexture:t}=s,{width:n,height:i}=e,r=s.sdfCanvas.getContext("webgl");let o=t.image.data;(!o||o.length!==n*i*4)&&(o=new Uint8Array(n*i*4),t.image={width:n,height:i,data:o},t.flipY=!1,t.isDataTexture=!0),r.readPixels(0,0,n,i,r.RGBA,r.UNSIGNED_BYTE,o)}}const J2=Vo({name:"Typesetter",dependencies:[O2,N2,m2],init(s,e,t){return s(e,t())}}),K2=Vo({name:"Typesetter",dependencies:[J2],init(s){return function(e){return new Promise(t=>{s.typeset(e,t)})}},getTransferables(s){const e=[];for(let t in s)s[t]&&s[t].buffer&&e.push(s[t].buffer);return e}}),_g={};function Q2(s){let e=_g[s];return e||(e=_g[s]=new hr(1,1,s,s).translate(.5,.5,0)),e}const $2="aTroikaGlyphBounds",yg="aTroikaGlyphIndex",eC="aTroikaGlyphColor";class tC extends zh{constructor(){super(),this.detail=1,this.curveRadius=0,this.groups=[{start:0,count:1/0,materialIndex:0},{start:0,count:1/0,materialIndex:1}],this.boundingSphere=new Mn,this.boundingBox=new yn}computeBoundingSphere(){}computeBoundingBox(){}set detail(e){if(e!==this._detail){this._detail=e,(typeof e!="number"||e<1)&&(e=1);let t=Q2(e);["position","normal","uv"].forEach(n=>{this.attributes[n]=t.attributes[n].clone()}),this.setIndex(t.getIndex().clone())}}get detail(){return this._detail}set curveRadius(e){e!==this._curveRadius&&(this._curveRadius=e,this._updateBounds())}get curveRadius(){return this._curveRadius}updateGlyphs(e,t,n,i,r){this.updateAttributeData($2,e,4),this.updateAttributeData(yg,t,1),this.updateAttributeData(eC,r,3),this._blockBounds=n,this._chunkedBounds=i,this.instanceCount=t.length,this._updateBounds()}_updateBounds(){const e=this._blockBounds;if(e){const{curveRadius:t,boundingBox:n}=this;if(t){const{PI:i,floor:r,min:o,max:a,sin:l,cos:c}=Math,h=i/2,u=i*2,d=Math.abs(t),f=e[0]/d,p=e[2]/d,v=r((f+h)/u)!==r((p+h)/u)?-d:o(l(f)*d,l(p)*d),m=r((f-h)/u)!==r((p-h)/u)?d:a(l(f)*d,l(p)*d),g=r((f+i)/u)!==r((p+i)/u)?d*2:a(d-c(f)*d,d-c(p)*d);n.min.set(v,e[1],t<0?-g:0),n.max.set(m,e[3],t<0?0:g)}else n.min.set(e[0],e[1],0),n.max.set(e[2],e[3],0);n.getBoundingSphere(this.boundingSphere)}}applyClipRect(e){let t=this.getAttribute(yg).count,n=this._chunkedBounds;if(n)for(let i=n.length;i--;){t=n[i].end;let r=n[i].rect;if(r[1]<e.w&&r[3]>e.y&&r[0]<e.z&&r[2]>e.x)break}this.instanceCount=t}updateAttributeData(e,t,n){const i=this.getAttribute(e);t?i&&i.array.length===t.length?(i.array.set(t),i.needsUpdate=!0):(this.setAttribute(e,new Bs(t,n)),delete this._maxInstanceCount,this.dispose()):i&&this.deleteAttribute(e)}}const nC=`
uniform vec2 uTroikaSDFTextureSize;
uniform float uTroikaSDFGlyphSize;
uniform vec4 uTroikaTotalBounds;
uniform vec4 uTroikaClipRect;
uniform mat3 uTroikaOrient;
uniform bool uTroikaUseGlyphColors;
uniform float uTroikaDistanceOffset;
uniform float uTroikaBlurRadius;
uniform vec2 uTroikaPositionOffset;
uniform float uTroikaCurveRadius;
attribute vec4 aTroikaGlyphBounds;
attribute float aTroikaGlyphIndex;
attribute vec3 aTroikaGlyphColor;
varying vec2 vTroikaGlyphUV;
varying vec4 vTroikaTextureUVBounds;
varying float vTroikaTextureChannel;
varying vec3 vTroikaGlyphColor;
varying vec2 vTroikaGlyphDimensions;
`,iC=`
vec4 bounds = aTroikaGlyphBounds;
bounds.xz += uTroikaPositionOffset.x;
bounds.yw -= uTroikaPositionOffset.y;

vec4 outlineBounds = vec4(
  bounds.xy - uTroikaDistanceOffset - uTroikaBlurRadius,
  bounds.zw + uTroikaDistanceOffset + uTroikaBlurRadius
);
vec4 clippedBounds = vec4(
  clamp(outlineBounds.xy, uTroikaClipRect.xy, uTroikaClipRect.zw),
  clamp(outlineBounds.zw, uTroikaClipRect.xy, uTroikaClipRect.zw)
);

vec2 clippedXY = (mix(clippedBounds.xy, clippedBounds.zw, position.xy) - bounds.xy) / (bounds.zw - bounds.xy);

position.xy = mix(bounds.xy, bounds.zw, clippedXY);

uv = (position.xy - uTroikaTotalBounds.xy) / (uTroikaTotalBounds.zw - uTroikaTotalBounds.xy);

float rad = uTroikaCurveRadius;
if (rad != 0.0) {
  float angle = position.x / rad;
  position.xz = vec2(sin(angle) * rad, rad - cos(angle) * rad);
  normal.xz = vec2(sin(angle), cos(angle));
}
  
position = uTroikaOrient * position;
normal = uTroikaOrient * normal;

vTroikaGlyphUV = clippedXY.xy;
vTroikaGlyphDimensions = vec2(bounds[2] - bounds[0], bounds[3] - bounds[1]);


float txCols = uTroikaSDFTextureSize.x / uTroikaSDFGlyphSize;
vec2 txUvPerSquare = uTroikaSDFGlyphSize / uTroikaSDFTextureSize;
vec2 txStartUV = txUvPerSquare * vec2(
  mod(floor(aTroikaGlyphIndex / 4.0), txCols),
  floor(floor(aTroikaGlyphIndex / 4.0) / txCols)
);
vTroikaTextureUVBounds = vec4(txStartUV, vec2(txStartUV) + txUvPerSquare);
vTroikaTextureChannel = mod(aTroikaGlyphIndex, 4.0);
`,rC=`
uniform sampler2D uTroikaSDFTexture;
uniform vec2 uTroikaSDFTextureSize;
uniform float uTroikaSDFGlyphSize;
uniform float uTroikaSDFExponent;
uniform float uTroikaDistanceOffset;
uniform float uTroikaFillOpacity;
uniform float uTroikaOutlineOpacity;
uniform float uTroikaBlurRadius;
uniform vec3 uTroikaStrokeColor;
uniform float uTroikaStrokeWidth;
uniform float uTroikaStrokeOpacity;
uniform bool uTroikaSDFDebug;
varying vec2 vTroikaGlyphUV;
varying vec4 vTroikaTextureUVBounds;
varying float vTroikaTextureChannel;
varying vec2 vTroikaGlyphDimensions;

float troikaSdfValueToSignedDistance(float alpha) {
  // Inverse of exponential encoding in webgl-sdf-generator
  
  float maxDimension = max(vTroikaGlyphDimensions.x, vTroikaGlyphDimensions.y);
  float absDist = (1.0 - pow(2.0 * (alpha > 0.5 ? 1.0 - alpha : alpha), 1.0 / uTroikaSDFExponent)) * maxDimension;
  float signedDist = absDist * (alpha > 0.5 ? -1.0 : 1.0);
  return signedDist;
}

float troikaGlyphUvToSdfValue(vec2 glyphUV) {
  vec2 textureUV = mix(vTroikaTextureUVBounds.xy, vTroikaTextureUVBounds.zw, glyphUV);
  vec4 rgba = texture2D(uTroikaSDFTexture, textureUV);
  float ch = floor(vTroikaTextureChannel + 0.5); //NOTE: can't use round() in WebGL1
  return ch == 0.0 ? rgba.r : ch == 1.0 ? rgba.g : ch == 2.0 ? rgba.b : rgba.a;
}

float troikaGlyphUvToDistance(vec2 uv) {
  return troikaSdfValueToSignedDistance(troikaGlyphUvToSdfValue(uv));
}

float troikaGetAADist() {
  
  #if defined(GL_OES_standard_derivatives) || __VERSION__ >= 300
  return length(fwidth(vTroikaGlyphUV * vTroikaGlyphDimensions)) * 0.5;
  #else
  return vTroikaGlyphDimensions.x / 64.0;
  #endif
}

float troikaGetFragDistValue() {
  vec2 clampedGlyphUV = clamp(vTroikaGlyphUV, 0.5 / uTroikaSDFGlyphSize, 1.0 - 0.5 / uTroikaSDFGlyphSize);
  float distance = troikaGlyphUvToDistance(clampedGlyphUV);
 
  // Extrapolate distance when outside bounds:
  distance += clampedGlyphUV == vTroikaGlyphUV ? 0.0 : 
    length((vTroikaGlyphUV - clampedGlyphUV) * vTroikaGlyphDimensions);

  

  return distance;
}

float troikaGetEdgeAlpha(float distance, float distanceOffset, float aaDist) {
  #if defined(IS_DEPTH_MATERIAL) || defined(IS_DISTANCE_MATERIAL)
  float alpha = step(-distanceOffset, -distance);
  #else

  float alpha = smoothstep(
    distanceOffset + aaDist,
    distanceOffset - aaDist,
    distance
  );
  #endif

  return alpha;
}
`,sC=`
float aaDist = troikaGetAADist();
float fragDistance = troikaGetFragDistValue();
float edgeAlpha = uTroikaSDFDebug ?
  troikaGlyphUvToSdfValue(vTroikaGlyphUV) :
  troikaGetEdgeAlpha(fragDistance, uTroikaDistanceOffset, max(aaDist, uTroikaBlurRadius));

#if !defined(IS_DEPTH_MATERIAL) && !defined(IS_DISTANCE_MATERIAL)
vec4 fillRGBA = gl_FragColor;
fillRGBA.a *= uTroikaFillOpacity;
vec4 strokeRGBA = uTroikaStrokeWidth == 0.0 ? fillRGBA : vec4(uTroikaStrokeColor, uTroikaStrokeOpacity);
if (fillRGBA.a == 0.0) fillRGBA.rgb = strokeRGBA.rgb;
gl_FragColor = mix(fillRGBA, strokeRGBA, smoothstep(
  -uTroikaStrokeWidth - aaDist,
  -uTroikaStrokeWidth + aaDist,
  fragDistance
));
gl_FragColor.a *= edgeAlpha;
#endif

if (edgeAlpha == 0.0) {
  discard;
}
`;function oC(s){const e=Rd(s,{chained:!0,extensions:{derivatives:!0},uniforms:{uTroikaSDFTexture:{value:null},uTroikaSDFTextureSize:{value:new ve},uTroikaSDFGlyphSize:{value:0},uTroikaSDFExponent:{value:0},uTroikaTotalBounds:{value:new Tt(0,0,0,0)},uTroikaClipRect:{value:new Tt(0,0,0,0)},uTroikaDistanceOffset:{value:0},uTroikaOutlineOpacity:{value:0},uTroikaFillOpacity:{value:1},uTroikaPositionOffset:{value:new ve},uTroikaCurveRadius:{value:0},uTroikaBlurRadius:{value:0},uTroikaStrokeWidth:{value:0},uTroikaStrokeColor:{value:new ze},uTroikaStrokeOpacity:{value:1},uTroikaOrient:{value:new St},uTroikaUseGlyphColors:{value:!0},uTroikaSDFDebug:{value:!1}},vertexDefs:nC,vertexTransform:iC,fragmentDefs:rC,fragmentColorTransform:sC,customRewriter({vertexShader:t,fragmentShader:n}){let i=/\buniform\s+vec3\s+diffuse\b/;return i.test(n)&&(n=n.replace(i,"varying vec3 vTroikaGlyphColor").replace(/\bdiffuse\b/g,"vTroikaGlyphColor"),i.test(t)||(t=t.replace(Q_,`uniform vec3 diffuse;
$&
vTroikaGlyphColor = uTroikaUseGlyphColors ? aTroikaGlyphColor / 255.0 : diffuse;
`))),{vertexShader:t,fragmentShader:n}}});return e.transparent=!0,e.forceSinglePass=!0,Object.defineProperties(e,{isTroikaTextMaterial:{value:!0},shadowSide:{get(){return this.side},set(){}}}),e}const Yf=new Xn({color:16777215,side:Li,transparent:!0}),xg=8421504,bg=new rt,rc=new N,td=new N,oa=[],aC=new N,nd="+x+y";function Sg(s){return Array.isArray(s)?s[0]:s}let i0=()=>{const s=new zt(new hr(1,1),Yf);return i0=()=>s,s},r0=()=>{const s=new zt(new hr(1,1,32,1),Yf);return r0=()=>s,s};const lC={type:"syncstart"},cC={type:"synccomplete"},s0=["font","fontSize","fontStyle","fontWeight","lang","letterSpacing","lineHeight","maxWidth","overflowWrap","text","direction","textAlign","textIndent","whiteSpace","anchorX","anchorY","colorRanges","sdfGlyphSize"],hC=s0.concat("material","color","depthOffset","clipRect","curveRadius","orientation","glyphGeometryDetail");let o0=class extends zt{constructor(){const e=new tC;super(e,null),this.text="",this.anchorX=0,this.anchorY=0,this.curveRadius=0,this.direction="auto",this.font=null,this.unicodeFontsURL=null,this.fontSize=.1,this.fontWeight="normal",this.fontStyle="normal",this.lang=null,this.letterSpacing=0,this.lineHeight="normal",this.maxWidth=1/0,this.overflowWrap="normal",this.textAlign="left",this.textIndent=0,this.whiteSpace="normal",this.material=null,this.color=null,this.colorRanges=null,this.outlineWidth=0,this.outlineColor=0,this.outlineOpacity=1,this.outlineBlur=0,this.outlineOffsetX=0,this.outlineOffsetY=0,this.strokeWidth=0,this.strokeColor=xg,this.strokeOpacity=1,this.fillOpacity=1,this.depthOffset=0,this.clipRect=null,this.orientation=nd,this.glyphGeometryDetail=1,this.sdfGlyphSize=null,this.gpuAccelerateSDF=!0,this.debugSDF=!1}sync(e){this._needsSync&&(this._needsSync=!1,this._isSyncing?(this._queuedSyncs||(this._queuedSyncs=[])).push(e):(this._isSyncing=!0,this.dispatchEvent(lC),e0({text:this.text,font:this.font,lang:this.lang,fontSize:this.fontSize||.1,fontWeight:this.fontWeight||"normal",fontStyle:this.fontStyle||"normal",letterSpacing:this.letterSpacing||0,lineHeight:this.lineHeight||"normal",maxWidth:this.maxWidth,direction:this.direction||"auto",textAlign:this.textAlign,textIndent:this.textIndent,whiteSpace:this.whiteSpace,overflowWrap:this.overflowWrap,anchorX:this.anchorX,anchorY:this.anchorY,colorRanges:this.colorRanges,includeCaretPositions:!0,sdfGlyphSize:this.sdfGlyphSize,gpuAccelerateSDF:this.gpuAccelerateSDF,unicodeFontsURL:this.unicodeFontsURL},t=>{this._isSyncing=!1,this._textRenderInfo=t,this.geometry.updateGlyphs(t.glyphBounds,t.glyphAtlasIndices,t.blockBounds,t.chunkedBounds,t.glyphColors);const n=this._queuedSyncs;n&&(this._queuedSyncs=null,this._needsSync=!0,this.sync(()=>{n.forEach(i=>i&&i())})),this.dispatchEvent(cC),e&&e()})))}onBeforeRender(e,t,n,i,r,o){this.sync(),r.isTroikaTextMaterial&&this._prepareForRender(r)}dispose(){this.geometry.dispose()}get textRenderInfo(){return this._textRenderInfo||null}createDerivedMaterial(e){return oC(e)}get material(){let e=this._derivedMaterial;const t=this._baseMaterial||this._defaultMaterial||(this._defaultMaterial=Yf.clone());if((!e||!e.isDerivedFrom(t))&&(e=this._derivedMaterial=this.createDerivedMaterial(t),t.addEventListener("dispose",function n(){t.removeEventListener("dispose",n),e.dispose()})),this.outlineWidth||this.outlineBlur||this.outlineOffsetX||this.outlineOffsetY){let n=e._outlineMtl;return n||(n=e._outlineMtl=Object.create(e,{id:{value:e.id+.1}}),n.isTextOutlineMaterial=!0,n.depthWrite=!1,n.map=null,e.addEventListener("dispose",function i(){e.removeEventListener("dispose",i),n.dispose()})),[n,e]}else return e}set material(e){e&&e.isTroikaTextMaterial?(this._derivedMaterial=e,this._baseMaterial=e.baseMaterial):this._baseMaterial=e}get glyphGeometryDetail(){return this.geometry.detail}set glyphGeometryDetail(e){this.geometry.detail=e}get curveRadius(){return this.geometry.curveRadius}set curveRadius(e){this.geometry.curveRadius=e}get customDepthMaterial(){return Sg(this.material).getDepthMaterial()}get customDistanceMaterial(){return Sg(this.material).getDistanceMaterial()}_prepareForRender(e){const t=e.isTextOutlineMaterial,n=e.uniforms,i=this.textRenderInfo;if(i){const{sdfTexture:a,blockBounds:l}=i;n.uTroikaSDFTexture.value=a,n.uTroikaSDFTextureSize.value.set(a.image.width,a.image.height),n.uTroikaSDFGlyphSize.value=i.sdfGlyphSize,n.uTroikaSDFExponent.value=i.sdfExponent,n.uTroikaTotalBounds.value.fromArray(l),n.uTroikaUseGlyphColors.value=!t&&!!i.glyphColors;let c=0,h=0,u=0,d,f,p,v=0,m=0;if(t){let{outlineWidth:x,outlineOffsetX:y,outlineOffsetY:_,outlineBlur:E,outlineOpacity:w}=this;c=this._parsePercent(x)||0,h=Math.max(0,this._parsePercent(E)||0),d=w,v=this._parsePercent(y)||0,m=this._parsePercent(_)||0}else u=Math.max(0,this._parsePercent(this.strokeWidth)||0),u&&(p=this.strokeColor,n.uTroikaStrokeColor.value.set(p??xg),f=this.strokeOpacity,f==null&&(f=1)),d=this.fillOpacity;n.uTroikaDistanceOffset.value=c,n.uTroikaPositionOffset.value.set(v,m),n.uTroikaBlurRadius.value=h,n.uTroikaStrokeWidth.value=u,n.uTroikaStrokeOpacity.value=f,n.uTroikaFillOpacity.value=d??1,n.uTroikaCurveRadius.value=this.curveRadius||0;let g=this.clipRect;if(g&&Array.isArray(g)&&g.length===4)n.uTroikaClipRect.value.fromArray(g);else{const x=(this.fontSize||.1)*100;n.uTroikaClipRect.value.set(l[0]-x,l[1]-x,l[2]+x,l[3]+x)}this.geometry.applyClipRect(n.uTroikaClipRect.value)}n.uTroikaSDFDebug.value=!!this.debugSDF,e.polygonOffset=!!this.depthOffset,e.polygonOffsetFactor=e.polygonOffsetUnits=this.depthOffset||0;const r=t?this.outlineColor||0:this.color;if(r==null)delete e.color;else{const a=e.hasOwnProperty("color")?e.color:e.color=new ze;(r!==a._input||typeof r=="object")&&a.set(a._input=r)}let o=this.orientation||nd;if(o!==e._orientation){let a=n.uTroikaOrient.value;o=o.replace(/[^-+xyz]/g,"");let l=o!==nd&&o.match(/^([-+])([xyz])([-+])([xyz])$/);if(l){let[,c,h,u,d]=l;rc.set(0,0,0)[h]=c==="-"?1:-1,td.set(0,0,0)[d]=u==="-"?-1:1,bg.lookAt(aC,rc.cross(td),td),a.setFromMatrix4(bg)}else a.identity();e._orientation=o}}_parsePercent(e){if(typeof e=="string"){let t=e.match(/^(-?[\d.]+)%$/),n=t?parseFloat(t[1]):NaN;e=(isNaN(n)?0:n/100)*this.fontSize}return e}localPositionToTextCoords(e,t=new ve){t.copy(e);const n=this.curveRadius;return n&&(t.x=Math.atan2(e.x,Math.abs(n)-Math.abs(e.z))*Math.abs(n)),t}worldPositionToTextCoords(e,t=new ve){return rc.copy(e),this.localPositionToTextCoords(this.worldToLocal(rc),t)}raycast(e,t){const{textRenderInfo:n,curveRadius:i}=this;if(n){const r=n.blockBounds,o=i?r0():i0(),a=o.geometry,{position:l,uv:c}=a.attributes;for(let h=0;h<c.count;h++){let u=r[0]+c.getX(h)*(r[2]-r[0]);const d=r[1]+c.getY(h)*(r[3]-r[1]);let f=0;i&&(f=i-Math.cos(u/i)*i,u=Math.sin(u/i)*i),l.setXYZ(h,u,d,f)}a.boundingSphere=this.geometry.boundingSphere,a.boundingBox=this.geometry.boundingBox,o.matrixWorld=this.matrixWorld,o.material.side=this.material.side,oa.length=0,o.raycast(e,oa);for(let h=0;h<oa.length;h++)oa[h].object=this,t.push(oa[h])}}copy(e){const t=this.geometry;return super.copy(e),this.geometry=t,hC.forEach(n=>{this[n]=e[n]}),this}clone(){return new this.constructor().copy(this)}};s0.forEach(s=>{const e="_private_"+s;Object.defineProperty(o0.prototype,s,{get(){return this[e]},set(t){t!==this[e]&&(this[e]=t,this._needsSync=!0)}})});new yn;new ze;function a0(s,e){qn(e,!0);let t=ut(e,"ref",15),n=Wr(e,["$$slots","$$events","$$legacy","font","characters","sdfGlyphSize","ref","onsync","children"]);const i=new o0,{invalidate:r}=Oi(),o=async()=>{await Od(),i.sync(()=>{var c;r(),(c=e.onsync)==null||c.call(e)})},a=["text","anchorX","anchorY","curveRadius","direction","font","fontSize","letterSpacing","lineHeight","maxWidth","overflowWrap","textAlign","textIndent","whiteSpace","material","color","depthOffset","clipRect","glyphGeometryDetail","sdfGlyphSize","outlineWidth","outlineColor","outlineOpacity","outlineBlur","outlineOffsetX","outlineOffsetY","strokeWidth","strokeColor","strokeOpacity","fillOpacity","characters","colorRanges"];U_(()=>a.map(c=>n[c]),()=>{o()});const l=iA();Sn(()=>{l(new Promise(c=>q2({font:e.font,characters:e.characters,sdfGlyphSize:e.sdfGlyphSize},c)))}),Ct(s,Uo({is:i},()=>n,{get font(){return e.font},get characters(){return e.characters},get sdfGlyphSize(){return e.sdfGlyphSize},get ref(){return t()},set ref(c){t(c)},children:(c,h)=>{var u=Pt(),d=ot(u);Xr(d,()=>e.children??Ws,()=>({ref:i})),it(c,u)},$$slots:{default:!0}})),jn()}const uC=s=>{const{camera:e}=Oi();let t=s.current.clientWidth,n=s.current.clientHeight;const i=new ResizeObserver(([r])=>{t=r.contentRect.width,n=r.contentRect.height});return ci(s,r=>(r&&i.observe(r),()=>{r&&i.unobserve(r)})),(r,o)=>{o.pointer.update(a=>(a.set(r.offsetX/t*2-1,-(r.offsetY/n)*2+1),a)),o.raycaster.setFromCamera(o.pointer.current,e.current)}},l0=Symbol("interactivity-context"),dC=()=>Yn(l0),fC=s=>{const e=fn(Gh().dom),t={enabled:fn(!0),pointer:fn(new ve),pointerOverTarget:fn(!1),lastEvent:void 0,raycaster:new Rf,initialClick:[0,0],initialHits:[],hovered:new Map,interactiveObjects:[],target:e,handlers:new WeakMap,compute:uC(e),filter:s==null?void 0:s.filter,addInteractiveObject:(n,i)=>{t.interactiveObjects.indexOf(n)>-1||(t.handlers.set(n,i),t.interactiveObjects.push(n))},removeInteractiveObject:n=>{const i=t.interactiveObjects.indexOf(n);t.interactiveObjects.splice(i,1),t.handlers.delete(n)}};return gi(l0,t),t},c0=()=>{const s=dC();if(!s)throw new Error("No interactivity context found. Did you forget to implement interactivity()?");return s},Mg=["onclick","oncontextmenu","ondblclick","onwheel","onpointerup","onpointerdown","onpointerover","onpointerout","onpointerenter","onpointerleave","onpointermove","onpointermissed"],pC=()=>{$T("interactivity",s=>{if(!Ei(s.ref,"Object3D")||!Object.entries(s.props).some(([i,r])=>r!==void 0&&Mg.includes(i)))return;const{addInteractiveObject:t,removeInteractiveObject:n}=c0();return U_.pre(()=>[s.ref],([i])=>(t(i,s.props),()=>{n(i)})),{pluginProps:Mg}})};function wg(s){return`${(s.eventObject||s.object).uuid}/${s.index}${s.instanceId}`}const Eg=[["click",!1],["contextmenu",!1],["dblclick",!1],["wheel",!1],["pointerdown",!0],["pointerup",!0],["pointerleave",!0],["pointerenter",!0],["pointermove",!0],["pointercancel",!0]],mC=s=>{const{handlers:e}=c0(),t=c=>{const h=c.offsetX-s.initialClick[0],u=c.offsetY-s.initialClick[1];return Math.round(Math.hypot(h,u))},n=c=>{var h,u;for(const d of s.hovered.values())if(c.length===0||!c.some(f=>f.object===d.object&&f.index===d.index&&f.instanceId===d.instanceId)){const{eventObject:f}=d;s.hovered.delete(wg(d));const p=e.get(f);if(p){const v={...d,intersections:c};(h=p.onpointerout)==null||h.call(p,v),(u=p.onpointerleave)==null||u.call(p,v)}}},i=()=>{if(!s.enabled.current)return[];const c=[],h=s.raycaster.intersectObjects(s.interactiveObjects,!0),u=s.filter===void 0?h:s.filter(h,s);for(const d of u){let f=d.object;for(;f;)e.has(f)&&c.push({...d,eventObject:f}),f=f.parent}return c},r=(c,h)=>{var u,d;for(const f of h)(d=(u=e.get(f))==null?void 0:u.onpointermissed)==null||d.call(u,c)},o=c=>c==="pointerleave"||c==="pointercancel"?()=>{s.pointerOverTarget.set(!1),n([])}:c==="pointerenter"?()=>{s.pointerOverTarget.set(!0)}:h=>{var m,g,x,y;const u=c==="pointermove",d=c==="click"||c==="contextmenu"||c==="dblclick";s.compute(h,s);const f=i(),p=d?t(h):0;c==="pointerdown"&&(s.initialClick=[h.offsetX,h.offsetY],s.initialHits=f.map(_=>_.eventObject)),d&&f.length===0&&p<=2&&r(h,s.interactiveObjects),u&&n(f);let v=!1;e:for(const _ of f){const E={stopped:v,..._,intersections:f,stopPropagation(){if(v=!0,E.stopped=!0,s.hovered.size>0&&Array.from(s.hovered.values()).some(M=>M.eventObject===_.eventObject)){const M=f.slice(0,f.indexOf(_));n([...M,_])}},camera:s.raycaster.camera,delta:p,nativeEvent:h,pointer:s.pointer.current,ray:s.raycaster.ray},w=e.get(_.eventObject);if(!w)return;if(u){if(w.onpointerover||w.onpointerenter||w.onpointerout||w.onpointerleave){const M=wg(E),T=s.hovered.get(M);T?T.stopped&&E.stopPropagation():(s.hovered.set(M,E),(m=w.onpointerover)==null||m.call(w,E),(g=w.onpointerenter)==null||g.call(w,E))}(x=w.onpointermove)==null||x.call(w,E)}else w[`on${c}`]?(!d||s.initialHits.includes(_.eventObject))&&(r(h,s.interactiveObjects.filter(M=>!s.initialHits.includes(M))),(y=w[`on${c}`])==null||y.call(w,E)):d&&s.initialHits.includes(_.eventObject)&&r(h,s.interactiveObjects.filter(M=>!s.initialHits.includes(M)));if(v)break e}},a=c=>{Eg.forEach(([h])=>{c.removeEventListener(h,o(h))})},l=c=>{Eg.forEach(([h,u])=>{c.addEventListener(h,o(h),{passive:u})})};ci(s.target,c=>(c&&l(c),()=>{c&&a(c)}))},h0=s=>{const e=fC(s);return pC(),mC(e),e};for(let s=0;s<256;s++)(s<16?"0":"")+s.toString(16);new Jr(-1,1,1,-1,0,1);class gC extends yt{constructor(){super(),this.setAttribute("position",new qe([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new qe([0,2,0,0,2,0],2))}}new gC;var u0={exports:{}};u0.exports=Yh;u0.exports.default=Yh;function Yh(s,e,t){t=t||2;var n=e&&e.length,i=n?e[0]*t:s.length,r=d0(s,0,i,t,!0),o=[];if(!r||r.next===r.prev)return o;var a,l,c,h,u,d,f;if(n&&(r=bC(s,e,r,t)),s.length>80*t){a=c=s[0],l=h=s[1];for(var p=t;p<i;p+=t)u=s[p],d=s[p+1],u<a&&(a=u),d<l&&(l=d),u>c&&(c=u),d>h&&(h=d);f=Math.max(c-a,h-l),f=f!==0?32767/f:0}return za(r,o,t,a,l,f,0),o}function d0(s,e,t,n,i){var r,o;if(i===Ud(s,e,t,n)>0)for(r=e;r<t;r+=n)o=Tg(r,s[r],s[r+1],o);else for(r=t-n;r>=e;r-=n)o=Tg(r,s[r],s[r+1],o);return o&&qh(o,o.next)&&(Ga(o),o=o.next),o}function Hs(s,e){if(!s)return s;e||(e=s);var t=s,n;do if(n=!1,!t.steiner&&(qh(t,t.next)||ln(t.prev,t,t.next)===0)){if(Ga(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function za(s,e,t,n,i,r,o){if(s){!o&&r&&TC(s,n,i,r);for(var a=s,l,c;s.prev!==s.next;){if(l=s.prev,c=s.next,r?_C(s,n,i,r):vC(s)){e.push(l.i/t|0),e.push(s.i/t|0),e.push(c.i/t|0),Ga(s),s=c.next,a=c.next;continue}if(s=c,s===a){o?o===1?(s=yC(Hs(s),e,t),za(s,e,t,n,i,r,2)):o===2&&xC(s,e,t,n,i,r):za(Hs(s),e,t,n,i,r,1);break}}}}function vC(s){var e=s.prev,t=s,n=s.next;if(ln(e,t,n)>=0)return!1;for(var i=e.x,r=t.x,o=n.x,a=e.y,l=t.y,c=n.y,h=i<r?i<o?i:o:r<o?r:o,u=a<l?a<c?a:c:l<c?l:c,d=i>r?i>o?i:o:r>o?r:o,f=a>l?a>c?a:c:l>c?l:c,p=n.next;p!==e;){if(p.x>=h&&p.x<=d&&p.y>=u&&p.y<=f&&To(i,a,r,l,o,c,p.x,p.y)&&ln(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function _C(s,e,t,n){var i=s.prev,r=s,o=s.next;if(ln(i,r,o)>=0)return!1;for(var a=i.x,l=r.x,c=o.x,h=i.y,u=r.y,d=o.y,f=a<l?a<c?a:c:l<c?l:c,p=h<u?h<d?h:d:u<d?u:d,v=a>l?a>c?a:c:l>c?l:c,m=h>u?h>d?h:d:u>d?u:d,g=Id(f,p,e,t,n),x=Id(v,m,e,t,n),y=s.prevZ,_=s.nextZ;y&&y.z>=g&&_&&_.z<=x;){if(y.x>=f&&y.x<=v&&y.y>=p&&y.y<=m&&y!==i&&y!==o&&To(a,h,l,u,c,d,y.x,y.y)&&ln(y.prev,y,y.next)>=0||(y=y.prevZ,_.x>=f&&_.x<=v&&_.y>=p&&_.y<=m&&_!==i&&_!==o&&To(a,h,l,u,c,d,_.x,_.y)&&ln(_.prev,_,_.next)>=0))return!1;_=_.nextZ}for(;y&&y.z>=g;){if(y.x>=f&&y.x<=v&&y.y>=p&&y.y<=m&&y!==i&&y!==o&&To(a,h,l,u,c,d,y.x,y.y)&&ln(y.prev,y,y.next)>=0)return!1;y=y.prevZ}for(;_&&_.z<=x;){if(_.x>=f&&_.x<=v&&_.y>=p&&_.y<=m&&_!==i&&_!==o&&To(a,h,l,u,c,d,_.x,_.y)&&ln(_.prev,_,_.next)>=0)return!1;_=_.nextZ}return!0}function yC(s,e,t){var n=s;do{var i=n.prev,r=n.next.next;!qh(i,r)&&f0(i,n,n.next,r)&&Va(i,r)&&Va(r,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(r.i/t|0),Ga(n),Ga(n.next),n=s=r),n=n.next}while(n!==s);return Hs(n)}function xC(s,e,t,n,i,r){var o=s;do{for(var a=o.next.next;a!==o.prev;){if(o.i!==a.i&&RC(o,a)){var l=p0(o,a);o=Hs(o,o.next),l=Hs(l,l.next),za(o,e,t,n,i,r,0),za(l,e,t,n,i,r,0);return}a=a.next}o=o.next}while(o!==s)}function bC(s,e,t,n){var i=[],r,o,a,l,c;for(r=0,o=e.length;r<o;r++)a=e[r]*n,l=r<o-1?e[r+1]*n:s.length,c=d0(s,a,l,n,!1),c===c.next&&(c.steiner=!0),i.push(CC(c));for(i.sort(SC),r=0;r<i.length;r++)t=MC(i[r],t);return t}function SC(s,e){return s.x-e.x}function MC(s,e){var t=wC(s,e);if(!t)return e;var n=p0(t,s);return Hs(n,n.next),Hs(t,t.next)}function wC(s,e){var t=e,n=s.x,i=s.y,r=-1/0,o;do{if(i<=t.y&&i>=t.next.y&&t.next.y!==t.y){var a=t.x+(i-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(a<=n&&a>r&&(r=a,o=t.x<t.next.x?t:t.next,a===n))return o}t=t.next}while(t!==e);if(!o)return null;var l=o,c=o.x,h=o.y,u=1/0,d;t=o;do n>=t.x&&t.x>=c&&n!==t.x&&To(i<h?n:r,i,c,h,i<h?r:n,i,t.x,t.y)&&(d=Math.abs(i-t.y)/(n-t.x),Va(t,s)&&(d<u||d===u&&(t.x>o.x||t.x===o.x&&EC(o,t)))&&(o=t,u=d)),t=t.next;while(t!==l);return o}function EC(s,e){return ln(s.prev,s,e.prev)<0&&ln(e.next,s,s.next)<0}function TC(s,e,t,n){var i=s;do i.z===0&&(i.z=Id(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,AC(i)}function AC(s){var e,t,n,i,r,o,a,l,c=1;do{for(t=s,s=null,r=null,o=0;t;){for(o++,n=t,a=0,e=0;e<c&&(a++,n=n.nextZ,!!n);e++);for(l=c;a>0||l>0&&n;)a!==0&&(l===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,a--):(i=n,n=n.nextZ,l--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;t=n}r.nextZ=null,c*=2}while(o>1);return s}function Id(s,e,t,n,i){return s=(s-t)*i|0,e=(e-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function CC(s){var e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function To(s,e,t,n,i,r,o,a){return(i-o)*(e-a)>=(s-o)*(r-a)&&(s-o)*(n-a)>=(t-o)*(e-a)&&(t-o)*(r-a)>=(i-o)*(n-a)}function RC(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!PC(s,e)&&(Va(s,e)&&Va(e,s)&&IC(s,e)&&(ln(s.prev,s,e.prev)||ln(s,e.prev,e))||qh(s,e)&&ln(s.prev,s,s.next)>0&&ln(e.prev,e,e.next)>0)}function ln(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function qh(s,e){return s.x===e.x&&s.y===e.y}function f0(s,e,t,n){var i=oc(ln(s,e,t)),r=oc(ln(s,e,n)),o=oc(ln(t,n,s)),a=oc(ln(t,n,e));return!!(i!==r&&o!==a||i===0&&sc(s,t,e)||r===0&&sc(s,n,e)||o===0&&sc(t,s,n)||a===0&&sc(t,e,n))}function sc(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function oc(s){return s>0?1:s<0?-1:0}function PC(s,e){var t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&f0(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function Va(s,e){return ln(s.prev,s,s.next)<0?ln(s,e,s.next)>=0&&ln(s,s.prev,e)>=0:ln(s,e,s.prev)<0||ln(s,s.next,e)<0}function IC(s,e){var t=s,n=!1,i=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&i<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==s);return n}function p0(s,e){var t=new Dd(s.i,s.x,s.y),n=new Dd(e.i,e.x,e.y),i=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=i,i.prev=t,n.next=t,t.prev=n,r.next=n,n.prev=r,n}function Tg(s,e,t,n){var i=new Dd(s,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Ga(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function Dd(s,e,t){this.i=s,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}Yh.deviation=function(s,e,t,n){var i=e&&e.length,r=i?e[0]*t:s.length,o=Math.abs(Ud(s,0,r,t));if(i)for(var a=0,l=e.length;a<l;a++){var c=e[a]*t,h=a<l-1?e[a+1]*t:s.length;o-=Math.abs(Ud(s,c,h,t))}var u=0;for(a=0;a<n.length;a+=3){var d=n[a]*t,f=n[a+1]*t,p=n[a+2]*t;u+=Math.abs((s[d]-s[p])*(s[f+1]-s[d+1])-(s[d]-s[f])*(s[p+1]-s[d+1]))}return o===0&&u===0?0:Math.abs((u-o)/o)};function Ud(s,e,t,n){for(var i=0,r=e,o=t-n;r<t;r+=n)i+=(s[o]-s[r])*(s[r+1]+s[o+1]),o=r;return i}Yh.flatten=function(s){for(var e=s[0][0].length,t={vertices:[],holes:[],dimensions:e},n=0,i=0;i<s.length;i++){for(var r=0;r<s[i].length;r++)for(var o=0;o<e;o++)t.vertices.push(s[i][r][o]);i>0&&(n+=s[i-1].length,t.holes.push(n))}return t};new ve;new ve;var Ag;(s=>{function e(i){let r=i.slice();return r.sort(s.POINT_COMPARATOR),s.makeHullPresorted(r)}s.makeHull=e;function t(i){if(i.length<=1)return i.slice();let r=[];for(let a=0;a<i.length;a++){const l=i[a];for(;r.length>=2;){const c=r[r.length-1],h=r[r.length-2];if((c.x-h.x)*(l.y-h.y)>=(c.y-h.y)*(l.x-h.x))r.pop();else break}r.push(l)}r.pop();let o=[];for(let a=i.length-1;a>=0;a--){const l=i[a];for(;o.length>=2;){const c=o[o.length-1],h=o[o.length-2];if((c.x-h.x)*(l.y-h.y)>=(c.y-h.y)*(l.x-h.x))o.pop();else break}o.push(l)}return o.pop(),r.length==1&&o.length==1&&r[0].x==o[0].x&&r[0].y==o[0].y?r:r.concat(o)}s.makeHullPresorted=t;function n(i,r){return i.x<r.x?-1:i.x>r.x?1:i.y<r.y?-1:i.y>r.y?1:0}s.POINT_COMPARATOR=n})(Ag||(Ag={}));function id(s){const e=qf(s,"xyz");if(!(!e||e.length!=3))return e}function Cg(s){const e=qf(s,"rpy");if(!(!e||e.length!=3))return e}function Rg(s){const e=qf(s,"rgba");if(!(!e||e.length!=4))return e}function qf(s,e="xyz"){var t;if(s.hasAttribute(e)){const n=(t=s.getAttribute(e))==null?void 0:t.split(" ");if(n){const i=[];for(const r of n)i.push(parseFloat(r));return i}}}function Pg(s){return s*180/Math.PI}function DC(s){return s?new ze(s[0],s[1],s[2]):new ze("white")}function UC(s){const e=[],t=s.joints;for(const n of Object.values(s.links)){let i=!0;for(const r of t)if(r.child.name==n.name){i=!1;break}i&&e.push(n)}return e}function LC(s,e){const t=[],n=s.joints;if(!n)return[];for(const i of n)i.parent.name==e.name&&t.push(i);return t}class NC{constructor(e,t=""){Jt(this,"filename");Jt(this,"colors",{});Jt(this,"robot",{name:"",links:{},joints:[]});Jt(this,"prefix","");Jt(this,"xmlRobotNode");this.filename=e,this.prefix=t}async load(){return fetch(this.filename).then(e=>e.text())}reset(){this.robot={name:"",links:{},joints:[]}}fromString(e){this.reset();let t=new window.DOMParser().parseFromString(e,"text/xml");return this.xmlRobotNode=t.documentElement,this.parseRobotXMLNode(t.documentElement)}parseRobotXMLNode(e){const t=e.nodeName;if(t!=="robot")throw new Error(`Invalid URDF: no root node ${t}`);return this.robot.name=e.getAttribute("name"),this.parseColorsFromRobot(e),this.parseLinks(e),this.parseJoints(e),this.robot}parseColorsFromRobot(e){const t=e.getElementsByTagName("material");for(let n=0;n<t.length;n++){const i=t[n],r=this.colorFromMaterial(i);r&&(this.colors[r.name]=r.rgba)}}colorFromMaterial(e){if(!e.hasAttribute("name")){console.warn("Found material-tag with name without name inside robot tag!");return}const t=e.getAttribute("name"),n=e.getElementsByTagName("color");if(n.length===0)return;const i=n[0];if(!i.hasAttribute("rgba")){console.warn(`Color tag ${t} does not have expected "rgba" attribute!`);return}return{name:t,rgba:Rg(i)||[0,0,0,1]}}getLinkByName(e){if(!this.xmlRobotNode)return;const t=this.xmlRobotNode.getElementsByTagName("link");for(let n=0;n<t.length;n++){const i=t[n];if(i.hasAttribute("name")){const r=i.getAttribute("name");if(e==r)return i}}}parseLinks(e){const t=e.getElementsByTagName("link");for(let n=0;n<t.length;n++){const i=t[n],r={visual:[],collision:[],name:"",elem:i};i.hasAttribute("name")?(r.name=i.getAttribute("name"),this.robot.links[r.name]=r):console.error("No name in xml link node: ",i);const o=i.getElementsByTagName("visual");for(let l=0;l<o.length;l++)r.visual.push(this.parseVisual(o[l]));const a=i.getElementsByTagName("collision");for(let l=0;l<a.length;l++)r.collision.push(this.parseVisual(a[l]))}}parseVisual(e){let t,n,i,r="pink";const o={elem:e};for(let a=0;a<e.childNodes.length;a++){const l=e.childNodes[a];switch(l.nodeName){case"geometry":this.parseGeometry(l,o);break;case"origin":t=id(l),t&&(o.origin_xyz=t),n=Cg(l),n&&(o.origin_rpy=n);break;case"material":i=l.getElementsByTagName("color"),i.length>0&&i[0].hasAttribute("rgba")?o.color_rgba=Rg(i[0]):l.hasAttribute("name")&&(r=l.getAttribute("name"),o.color_rgba=this.colors[r])}}return o}parseGeometry(e,t){for(let n=0;n<e.childNodes.length;n++){const i=e.childNodes[n];switch(i.nodeName){case"mesh":let r=[1,1,1],o=i.getAttribute("scale");if(o){const u=o.split(" ");for(const d in u)r[d]=parseFloat(u[d])}let a=i.getAttribute("filename");a=a.replace("package:/",this.prefix);let l="stl";switch(a.substring(a.length-3).toLocaleLowerCase()){case"fbx":l="fbx";break;case"obj":l="obj";break;case"stl":l="stl";break;case"dae":l="dae";break;default:throw new Error("Unknown type "+a)}t.geometry={filename:a,type:l,scale:r},t.type="mesh";return;case"cylinder":const c={};i.hasAttribute("length")&&(c.length=parseFloat(i.getAttribute("length"))),i.hasAttribute("radius")&&(c.radius=parseFloat(i.getAttribute("radius"))),t.geometry=c,t.type="cylinder";return;case"box":const h={size:[1,1,1]};if(i.hasAttribute("size")){const d=i.getAttribute("size").split(" ");for(const f in d)h.size[f]=parseFloat(d[f])}t.geometry=h,t.type="box";return}}}parseJoints(e){const t=this.robot.links,n=[];this.robot.joints=n;const i=e.getElementsByTagName("joint");for(let r=0;r<i.length;r++){const o=i[r],a=o.getElementsByTagName("origin");let l=[0,0,0],c=[0,0,0];if(a.length===1){let x=id(a[0]);x&&(c=x);let y=Cg(a[0]);y&&(l=y)}let h;const u=o.getElementsByTagName("parent");if(u.length===1){const x=u[0].getAttribute("link");if(!x)throw Error("Name not set for link");const y=this.getLinkByName(x);if(!y)throw Error(`Link with name ${x} not found!`);x&&t[x]?h=t[x]:h={name:x,visual:[],collision:[],elem:y}}let d;const f=o.getElementsByTagName("child");if(f.length===1){const x=f[0].getAttribute("link");if(x&&t[x])d=t[x];else if(x){const y=this.getLinkByName(x);d={name:x,visual:[],collision:[],elem:y}}}let p,v=[0,0,1];const m=o.getElementsByTagName("axis");m.length===1&&(v=id(m[0])||v);const g=o.getElementsByTagName("limit");if(g.length===1){p={lower:0,upper:0,effort:0,velocity:0};const x=g[0].getAttribute("lower");x&&(p.lower=parseInt(x));const y=g[0].getAttribute("upper");y&&(p.upper=parseInt(y));const _=g[0].getAttribute("effort");_&&(p.effort=parseInt(_));const E=g[0].getAttribute("velocity");E&&(p.velocity=parseInt(E))}d&&h&&n.push({name:o.getAttribute("name")||void 0,type:o.getAttribute("type")||void 0,origin_rpy:l,origin_xyz:c,rotation:Object.assign([],l),axis_xyz:v,parent:h,child:d,limit:p,elem:o})}}getURDFXML(){return this.xmlRobotNode?`<?xml version="1.0" ?>
`+this.xmlRobotNode.outerHTML:""}}const Xe=wi({edit:!1,editMode:"translate",selectedLink:void 0,selectedJoint:void 0,robot:void 0,continuousJoints:{},revoluteJoints:{},visual:!0,collision:!1,collisionColor:"#deddda",joints:!0,jointNames:!0,jointColor:"#62a0ea",linkNames:!0,linkColor:"#57e389",jointIndicatorColor:"#f66151",linkOpacity:1,highlightColor:"#ffa348",visualOpacity:1,collisionOpacity:.7});class Ig extends d_{constructor(e){super(e)}parse(e){function t(F){switch(F.image_type){case d:case v:if(F.colormap_length>256||F.colormap_size!==24||F.colormap_type!==1)throw new Error("THREE.TGALoader: Invalid type colormap data for indexed type.");break;case f:case p:case m:case g:if(F.colormap_type)throw new Error("THREE.TGALoader: Invalid type colormap data for colormap type.");break;case u:throw new Error("THREE.TGALoader: No data.");default:throw new Error("THREE.TGALoader: Invalid type "+F.image_type)}if(F.width<=0||F.height<=0)throw new Error("THREE.TGALoader: Invalid image size.");if(F.pixel_size!==8&&F.pixel_size!==16&&F.pixel_size!==24&&F.pixel_size!==32)throw new Error("THREE.TGALoader: Invalid pixel size "+F.pixel_size)}function n(F,Z,q,j,J){let B,Y;const K=q.pixel_size>>3,V=q.width*q.height*K;if(Z&&(Y=J.subarray(j,j+=q.colormap_length*(q.colormap_size>>3))),F){B=new Uint8Array(V);let W,Q,X,te=0;const ge=new Uint8Array(K);for(;te<V;)if(W=J[j++],Q=(W&127)+1,W&128){for(X=0;X<K;++X)ge[X]=J[j++];for(X=0;X<Q;++X)B.set(ge,te+X*K);te+=K*Q}else{for(Q*=K,X=0;X<Q;++X)B[te+X]=J[j++];te+=Q}}else B=J.subarray(j,j+=Z?q.width*q.height:V);return{pixel_data:B,palettes:Y}}function i(F,Z,q,j,J,B,Y,K,V){const W=V;let Q,X=0,te,ge;const be=b.width;for(ge=Z;ge!==j;ge+=q)for(te=J;te!==Y;te+=B,X++)Q=K[X],F[(te+be*ge)*4+3]=255,F[(te+be*ge)*4+2]=W[Q*3+0],F[(te+be*ge)*4+1]=W[Q*3+1],F[(te+be*ge)*4+0]=W[Q*3+2];return F}function r(F,Z,q,j,J,B,Y,K){let V,W=0,Q,X;const te=b.width;for(X=Z;X!==j;X+=q)for(Q=J;Q!==Y;Q+=B,W+=2)V=K[W+0]+(K[W+1]<<8),F[(Q+te*X)*4+0]=(V&31744)>>7,F[(Q+te*X)*4+1]=(V&992)>>2,F[(Q+te*X)*4+2]=(V&31)<<3,F[(Q+te*X)*4+3]=V&32768?0:255;return F}function o(F,Z,q,j,J,B,Y,K){let V=0,W,Q;const X=b.width;for(Q=Z;Q!==j;Q+=q)for(W=J;W!==Y;W+=B,V+=3)F[(W+X*Q)*4+3]=255,F[(W+X*Q)*4+2]=K[V+0],F[(W+X*Q)*4+1]=K[V+1],F[(W+X*Q)*4+0]=K[V+2];return F}function a(F,Z,q,j,J,B,Y,K){let V=0,W,Q;const X=b.width;for(Q=Z;Q!==j;Q+=q)for(W=J;W!==Y;W+=B,V+=4)F[(W+X*Q)*4+2]=K[V+0],F[(W+X*Q)*4+1]=K[V+1],F[(W+X*Q)*4+0]=K[V+2],F[(W+X*Q)*4+3]=K[V+3];return F}function l(F,Z,q,j,J,B,Y,K){let V,W=0,Q,X;const te=b.width;for(X=Z;X!==j;X+=q)for(Q=J;Q!==Y;Q+=B,W++)V=K[W],F[(Q+te*X)*4+0]=V,F[(Q+te*X)*4+1]=V,F[(Q+te*X)*4+2]=V,F[(Q+te*X)*4+3]=255;return F}function c(F,Z,q,j,J,B,Y,K){let V=0,W,Q;const X=b.width;for(Q=Z;Q!==j;Q+=q)for(W=J;W!==Y;W+=B,V+=2)F[(W+X*Q)*4+0]=K[V+0],F[(W+X*Q)*4+1]=K[V+0],F[(W+X*Q)*4+2]=K[V+0],F[(W+X*Q)*4+3]=K[V+1];return F}function h(F,Z,q,j,J){let B,Y,K,V,W,Q;switch((b.flags&x)>>y){default:case w:B=0,K=1,W=Z,Y=0,V=1,Q=q;break;case _:B=0,K=1,W=Z,Y=q-1,V=-1,Q=-1;break;case M:B=Z-1,K=-1,W=-1,Y=0,V=1,Q=q;break;case E:B=Z-1,K=-1,W=-1,Y=q-1,V=-1,Q=-1;break}if(G)switch(b.pixel_size){case 8:l(F,Y,V,Q,B,K,W,j);break;case 16:c(F,Y,V,Q,B,K,W,j);break;default:throw new Error("THREE.TGALoader: Format not supported.")}else switch(b.pixel_size){case 8:i(F,Y,V,Q,B,K,W,j,J);break;case 16:r(F,Y,V,Q,B,K,W,j);break;case 24:o(F,Y,V,Q,B,K,W,j);break;case 32:a(F,Y,V,Q,B,K,W,j);break;default:throw new Error("THREE.TGALoader: Format not supported.")}return F}const u=0,d=1,f=2,p=3,v=9,m=10,g=11,x=48,y=4,_=0,E=1,w=2,M=3;if(e.length<19)throw new Error("THREE.TGALoader: Not enough data to contain header.");let T=0;const S=new Uint8Array(e),b={id_length:S[T++],colormap_type:S[T++],image_type:S[T++],colormap_index:S[T++]|S[T++]<<8,colormap_length:S[T++]|S[T++]<<8,colormap_size:S[T++],origin:[S[T++]|S[T++]<<8,S[T++]|S[T++]<<8],width:S[T++]|S[T++]<<8,height:S[T++]|S[T++]<<8,pixel_size:S[T++],flags:S[T++]};if(t(b),b.id_length+T>e.length)throw new Error("THREE.TGALoader: No data.");T+=b.id_length;let I=!1,D=!1,G=!1;switch(b.image_type){case v:I=!0,D=!0;break;case d:D=!0;break;case m:I=!0;break;case f:break;case g:I=!0,G=!0;break;case p:G=!0;break}const H=new Uint8Array(b.width*b.height*4),$=n(I,D,b,T,S);return h(H,b.width,b.height,$.pixel_data,$.palettes),{data:H,width:b.width,height:b.height,flipY:!0,generateMipmaps:!0,minFilter:Wi}}}class OC extends kn{load(e,t,n,i){const r=this,o=r.path===""?$c.extractUrlBase(e):r.path,a=new qi(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(l){try{t(r.parse(l,o))}catch(c){i?i(c):console.error(c),r.manager.itemError(e)}},n,i)}parse(e,t){function n(C,A){const O=[],U=C.childNodes;for(let k=0,pe=U.length;k<pe;k++){const Se=U[k];Se.nodeName===A&&O.push(Se)}return O}function i(C){if(C.length===0)return[];const A=C.trim().split(/\s+/),O=new Array(A.length);for(let U=0,k=A.length;U<k;U++)O[U]=A[U];return O}function r(C){if(C.length===0)return[];const A=C.trim().split(/\s+/),O=new Array(A.length);for(let U=0,k=A.length;U<k;U++)O[U]=parseFloat(A[U]);return O}function o(C){if(C.length===0)return[];const A=C.trim().split(/\s+/),O=new Array(A.length);for(let U=0,k=A.length;U<k;U++)O[U]=parseInt(A[U]);return O}function a(C){return C.substring(1)}function l(){return"three_default_"+yi++}function c(C){return Object.keys(C).length===0}function h(C){return{unit:u(n(C,"unit")[0]),upAxis:d(n(C,"up_axis")[0])}}function u(C){return C!==void 0&&C.hasAttribute("meter")===!0?parseFloat(C.getAttribute("meter")):1}function d(C){return C!==void 0?C.textContent:"Y_UP"}function f(C,A,O,U){const k=n(C,A)[0];if(k!==void 0){const pe=n(k,O);for(let Se=0;Se<pe.length;Se++)U(pe[Se])}}function p(C,A){for(const O in C){const U=C[O];U.build=A(C[O])}}function v(C,A){return C.build!==void 0||(C.build=A(C)),C.build}function m(C){const A={sources:{},samplers:{},channels:{}};let O=!1;for(let U=0,k=C.childNodes.length;U<k;U++){const pe=C.childNodes[U];if(pe.nodeType!==1)continue;let Se;switch(pe.nodeName){case"source":Se=pe.getAttribute("id"),A.sources[Se]=he(pe);break;case"sampler":Se=pe.getAttribute("id"),A.samplers[Se]=g(pe);break;case"channel":Se=pe.getAttribute("target"),A.channels[Se]=x(pe);break;case"animation":m(pe),O=!0;break;default:console.log(pe)}}O===!1&&(pt.animations[C.getAttribute("id")||nr.generateUUID()]=A)}function g(C){const A={inputs:{}};for(let O=0,U=C.childNodes.length;O<U;O++){const k=C.childNodes[O];if(k.nodeType===1)switch(k.nodeName){case"input":const pe=a(k.getAttribute("source")),Se=k.getAttribute("semantic");A.inputs[Se]=pe;break}}return A}function x(C){const A={};let U=C.getAttribute("target").split("/");const k=U.shift();let pe=U.shift();const Se=pe.indexOf("(")!==-1,Ze=pe.indexOf(".")!==-1;if(Ze)U=pe.split("."),pe=U.shift(),A.member=U.shift();else if(Se){const Be=pe.split("(");pe=Be.shift();for(let Ye=0;Ye<Be.length;Ye++)Be[Ye]=parseInt(Be[Ye].replace(/\)/,""));A.indices=Be}return A.id=k,A.sid=pe,A.arraySyntax=Se,A.memberSyntax=Ze,A.sampler=a(C.getAttribute("source")),A}function y(C){const A=[],O=C.channels,U=C.samplers,k=C.sources;for(const pe in O)if(O.hasOwnProperty(pe)){const Se=O[pe],Ze=U[Se.sampler],Be=Ze.inputs.INPUT,Ye=Ze.inputs.OUTPUT,st=k[Be],Le=k[Ye],nt=E(Se,st,Le);b(nt,A)}return A}function _(C){return v(pt.animations[C],y)}function E(C,A,O){const U=pt.nodes[C.id],k=wt(U.id),pe=U.transforms[C.sid],Se=U.matrix.clone().transpose();let Ze,Be,Ye,st,Le,nt;const Qe={};switch(pe){case"matrix":for(Ye=0,st=A.array.length;Ye<st;Ye++)if(Ze=A.array[Ye],Be=Ye*O.stride,Qe[Ze]===void 0&&(Qe[Ze]={}),C.arraySyntax===!0){const Qt=O.array[Be],Bt=C.indices[0]+4*C.indices[1];Qe[Ze][Bt]=Qt}else for(Le=0,nt=O.stride;Le<nt;Le++)Qe[Ze][Le]=O.array[Be+Le];break;case"translate":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',pe);break;case"rotate":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',pe);break;case"scale":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',pe);break}const dt=w(Qe,Se);return{name:k.uuid,keyframes:dt}}function w(C,A){const O=[];for(const k in C)O.push({time:parseFloat(k),value:C[k]});O.sort(U);for(let k=0;k<16;k++)I(O,k,A.elements[k]);return O;function U(k,pe){return k.time-pe.time}}const M=new N,T=new N,S=new hn;function b(C,A){const O=C.keyframes,U=C.name,k=[],pe=[],Se=[],Ze=[];for(let Be=0,Ye=O.length;Be<Ye;Be++){const st=O[Be],Le=st.time,nt=st.value;se.fromArray(nt).transpose(),se.decompose(M,S,T),k.push(Le),pe.push(M.x,M.y,M.z),Se.push(S.x,S.y,S.z,S.w),Ze.push(T.x,T.y,T.z)}return pe.length>0&&A.push(new Vs(U+".position",k,pe)),Se.length>0&&A.push(new Bo(U+".quaternion",k,Se)),Ze.length>0&&A.push(new Vs(U+".scale",k,Ze)),A}function I(C,A,O){let U,k=!0,pe,Se;for(pe=0,Se=C.length;pe<Se;pe++)U=C[pe],U.value[A]===void 0?U.value[A]=null:k=!1;if(k===!0)for(pe=0,Se=C.length;pe<Se;pe++)U=C[pe],U.value[A]=O;else D(C,A)}function D(C,A){let O,U;for(let k=0,pe=C.length;k<pe;k++){const Se=C[k];if(Se.value[A]===null){if(O=G(C,k,A),U=H(C,k,A),O===null){Se.value[A]=U.value[A];continue}if(U===null){Se.value[A]=O.value[A];continue}$(Se,O,U,A)}}}function G(C,A,O){for(;A>=0;){const U=C[A];if(U.value[O]!==null)return U;A--}return null}function H(C,A,O){for(;A<C.length;){const U=C[A];if(U.value[O]!==null)return U;A++}return null}function $(C,A,O,U){if(O.time-A.time===0){C.value[U]=A.value[U];return}C.value[U]=(C.time-A.time)*(O.value[U]-A.value[U])/(O.time-A.time)+A.value[U]}function F(C){const A={name:C.getAttribute("id")||"default",start:parseFloat(C.getAttribute("start")||0),end:parseFloat(C.getAttribute("end")||0),animations:[]};for(let O=0,U=C.childNodes.length;O<U;O++){const k=C.childNodes[O];if(k.nodeType===1)switch(k.nodeName){case"instance_animation":A.animations.push(a(k.getAttribute("url")));break}}pt.clips[C.getAttribute("id")]=A}function Z(C){const A=[],O=C.name,U=C.end-C.start||-1,k=C.animations;for(let pe=0,Se=k.length;pe<Se;pe++){const Ze=_(k[pe]);for(let Be=0,Ye=Ze.length;Be<Ye;Be++)A.push(Ze[Be])}return new Gs(O,U,A)}function q(C){return v(pt.clips[C],Z)}function j(C){const A={};for(let O=0,U=C.childNodes.length;O<U;O++){const k=C.childNodes[O];if(k.nodeType===1)switch(k.nodeName){case"skin":A.id=a(k.getAttribute("source")),A.skin=J(k);break;case"morph":A.id=a(k.getAttribute("source")),console.warn("THREE.ColladaLoader: Morph target animation not supported yet.");break}}pt.controllers[C.getAttribute("id")]=A}function J(C){const A={sources:{}};for(let O=0,U=C.childNodes.length;O<U;O++){const k=C.childNodes[O];if(k.nodeType===1)switch(k.nodeName){case"bind_shape_matrix":A.bindShapeMatrix=r(k.textContent);break;case"source":const pe=k.getAttribute("id");A.sources[pe]=he(k);break;case"joints":A.joints=B(k);break;case"vertex_weights":A.vertexWeights=Y(k);break}}return A}function B(C){const A={inputs:{}};for(let O=0,U=C.childNodes.length;O<U;O++){const k=C.childNodes[O];if(k.nodeType===1)switch(k.nodeName){case"input":const pe=k.getAttribute("semantic"),Se=a(k.getAttribute("source"));A.inputs[pe]=Se;break}}return A}function Y(C){const A={inputs:{}};for(let O=0,U=C.childNodes.length;O<U;O++){const k=C.childNodes[O];if(k.nodeType===1)switch(k.nodeName){case"input":const pe=k.getAttribute("semantic"),Se=a(k.getAttribute("source")),Ze=parseInt(k.getAttribute("offset"));A.inputs[pe]={id:Se,offset:Ze};break;case"vcount":A.vcount=o(k.textContent);break;case"v":A.v=o(k.textContent);break}}return A}function K(C){const A={id:C.id},O=pt.geometries[A.id];return C.skin!==void 0&&(A.skin=V(C.skin),O.sources.skinIndices=A.skin.indices,O.sources.skinWeights=A.skin.weights),A}function V(C){const O={joints:[],indices:{array:[],stride:4},weights:{array:[],stride:4}},U=C.sources,k=C.vertexWeights,pe=k.vcount,Se=k.v,Ze=k.inputs.JOINT.offset,Be=k.inputs.WEIGHT.offset,Ye=C.sources[C.joints.inputs.JOINT],st=C.sources[C.joints.inputs.INV_BIND_MATRIX],Le=U[k.inputs.WEIGHT.id].array;let nt=0,Qe,dt,$e;for(Qe=0,$e=pe.length;Qe<$e;Qe++){const Bt=pe[Qe],Nt=[];for(dt=0;dt<Bt;dt++){const Lt=Se[nt+Ze],Pi=Se[nt+Be],In=Le[Pi];Nt.push({index:Lt,weight:In}),nt+=2}for(Nt.sort(Qt),dt=0;dt<4;dt++){const Lt=Nt[dt];Lt!==void 0?(O.indices.array.push(Lt.index),O.weights.array.push(Lt.weight)):(O.indices.array.push(0),O.weights.array.push(0))}}for(C.bindShapeMatrix?O.bindMatrix=new rt().fromArray(C.bindShapeMatrix).transpose():O.bindMatrix=new rt().identity(),Qe=0,$e=Ye.array.length;Qe<$e;Qe++){const Bt=Ye.array[Qe],Nt=new rt().fromArray(st.array,Qe*st.stride).transpose();O.joints.push({name:Bt,boneInverse:Nt})}return O;function Qt(Bt,Nt){return Nt.weight-Bt.weight}}function W(C){return v(pt.controllers[C],K)}function Q(C){const A={init_from:n(C,"init_from")[0].textContent};pt.images[C.getAttribute("id")]=A}function X(C){return C.build!==void 0?C.build:C.init_from}function te(C){const A=pt.images[C];return A!==void 0?v(A,X):(console.warn("THREE.ColladaLoader: Couldn't find image with ID:",C),null)}function ge(C){const A={};for(let O=0,U=C.childNodes.length;O<U;O++){const k=C.childNodes[O];if(k.nodeType===1)switch(k.nodeName){case"profile_COMMON":A.profile=be(k);break}}pt.effects[C.getAttribute("id")]=A}function be(C){const A={surfaces:{},samplers:{}};for(let O=0,U=C.childNodes.length;O<U;O++){const k=C.childNodes[O];if(k.nodeType===1)switch(k.nodeName){case"newparam":we(k,A);break;case"technique":A.technique=z(k);break;case"extra":A.extra=_e(k);break}}return A}function we(C,A){const O=C.getAttribute("sid");for(let U=0,k=C.childNodes.length;U<k;U++){const pe=C.childNodes[U];if(pe.nodeType===1)switch(pe.nodeName){case"surface":A.surfaces[O]=re(pe);break;case"sampler2D":A.samplers[O]=me(pe);break}}}function re(C){const A={};for(let O=0,U=C.childNodes.length;O<U;O++){const k=C.childNodes[O];if(k.nodeType===1)switch(k.nodeName){case"init_from":A.init_from=k.textContent;break}}return A}function me(C){const A={};for(let O=0,U=C.childNodes.length;O<U;O++){const k=C.childNodes[O];if(k.nodeType===1)switch(k.nodeName){case"source":A.source=k.textContent;break}}return A}function z(C){const A={};for(let O=0,U=C.childNodes.length;O<U;O++){const k=C.childNodes[O];if(k.nodeType===1)switch(k.nodeName){case"constant":case"lambert":case"blinn":case"phong":A.type=k.nodeName,A.parameters=Me(k);break;case"extra":A.extra=_e(k);break}}return A}function Me(C){const A={};for(let O=0,U=C.childNodes.length;O<U;O++){const k=C.childNodes[O];if(k.nodeType===1)switch(k.nodeName){case"emission":case"diffuse":case"specular":case"bump":case"ambient":case"shininess":case"transparency":A[k.nodeName]=de(k);break;case"transparent":A[k.nodeName]={opaque:k.hasAttribute("opaque")?k.getAttribute("opaque"):"A_ONE",data:de(k)};break}}return A}function de(C){const A={};for(let O=0,U=C.childNodes.length;O<U;O++){const k=C.childNodes[O];if(k.nodeType===1)switch(k.nodeName){case"color":A[k.nodeName]=r(k.textContent);break;case"float":A[k.nodeName]=parseFloat(k.textContent);break;case"texture":A[k.nodeName]={id:k.getAttribute("texture"),extra:Ee(k)};break}}return A}function Ee(C){const A={technique:{}};for(let O=0,U=C.childNodes.length;O<U;O++){const k=C.childNodes[O];if(k.nodeType===1)switch(k.nodeName){case"extra":ce(k,A);break}}return A}function ce(C,A){for(let O=0,U=C.childNodes.length;O<U;O++){const k=C.childNodes[O];if(k.nodeType===1)switch(k.nodeName){case"technique":Ue(k,A);break}}}function Ue(C,A){for(let O=0,U=C.childNodes.length;O<U;O++){const k=C.childNodes[O];if(k.nodeType===1)switch(k.nodeName){case"repeatU":case"repeatV":case"offsetU":case"offsetV":A.technique[k.nodeName]=parseFloat(k.textContent);break;case"wrapU":case"wrapV":k.textContent.toUpperCase()==="TRUE"?A.technique[k.nodeName]=1:k.textContent.toUpperCase()==="FALSE"?A.technique[k.nodeName]=0:A.technique[k.nodeName]=parseInt(k.textContent);break;case"bump":A[k.nodeName]=R(k);break}}}function _e(C){const A={};for(let O=0,U=C.childNodes.length;O<U;O++){const k=C.childNodes[O];if(k.nodeType===1)switch(k.nodeName){case"technique":A.technique=P(k);break}}return A}function P(C){const A={};for(let O=0,U=C.childNodes.length;O<U;O++){const k=C.childNodes[O];if(k.nodeType===1)switch(k.nodeName){case"double_sided":A[k.nodeName]=parseInt(k.textContent);break;case"bump":A[k.nodeName]=R(k);break}}return A}function R(C){const A={};for(let O=0,U=C.childNodes.length;O<U;O++){const k=C.childNodes[O];if(k.nodeType===1)switch(k.nodeName){case"texture":A[k.nodeName]={id:k.getAttribute("texture"),texcoord:k.getAttribute("texcoord"),extra:Ee(k)};break}}return A}function ee(C){return C}function ae(C){return v(pt.effects[C],ee)}function le(C){const A={name:C.getAttribute("name")};for(let O=0,U=C.childNodes.length;O<U;O++){const k=C.childNodes[O];if(k.nodeType===1)switch(k.nodeName){case"instance_effect":A.url=a(k.getAttribute("url"));break}}pt.materials[C.getAttribute("id")]=A}function fe(C){let A,O=C.slice((C.lastIndexOf(".")-1>>>0)+2);switch(O=O.toLowerCase(),O){case"tga":A=un;break;default:A=xn}return A}function Ae(C){const A=ae(C.url),O=A.profile.technique;let U;switch(O.type){case"phong":case"blinn":U=new Qc;break;case"lambert":U=new pf;break;default:U=new Xn;break}U.name=C.name||"";function k(Be,Ye=null){const st=A.profile.samplers[Be.id];let Le=null;if(st!==void 0){const nt=A.profile.surfaces[st.source];Le=te(nt.init_from)}else console.warn("THREE.ColladaLoader: Undefined sampler. Access image directly (see #12530)."),Le=te(Be.id);if(Le!==null){const nt=fe(Le);if(nt!==void 0){const Qe=nt.load(Le),dt=Be.extra;if(dt!==void 0&&dt.technique!==void 0&&c(dt.technique)===!1){const $e=dt.technique;Qe.wrapS=$e.wrapU?Hi:di,Qe.wrapT=$e.wrapV?Hi:di,Qe.offset.set($e.offsetU||0,$e.offsetV||0),Qe.repeat.set($e.repeatU||1,$e.repeatV||1)}else Qe.wrapS=Hi,Qe.wrapT=Hi;return Ye!==null&&(Qe.colorSpace=Ye),Qe}else return console.warn("THREE.ColladaLoader: Loader for texture %s not found.",Le),null}else return console.warn("THREE.ColladaLoader: Couldn't create texture with ID:",Be.id),null}const pe=O.parameters;for(const Be in pe){const Ye=pe[Be];switch(Be){case"diffuse":Ye.color&&U.color.fromArray(Ye.color),Ye.texture&&(U.map=k(Ye.texture,nn));break;case"specular":Ye.color&&U.specular&&U.specular.fromArray(Ye.color),Ye.texture&&(U.specularMap=k(Ye.texture));break;case"bump":Ye.texture&&(U.normalMap=k(Ye.texture));break;case"ambient":Ye.texture&&(U.lightMap=k(Ye.texture,nn));break;case"shininess":Ye.float&&U.shininess&&(U.shininess=Ye.float);break;case"emission":Ye.color&&U.emissive&&U.emissive.fromArray(Ye.color),Ye.texture&&(U.emissiveMap=k(Ye.texture,nn));break}}It.toWorkingColorSpace(U.color,nn),U.specular&&It.toWorkingColorSpace(U.specular,nn),U.emissive&&It.toWorkingColorSpace(U.emissive,nn);let Se=pe.transparent,Ze=pe.transparency;if(Ze===void 0&&Se&&(Ze={float:1}),Se===void 0&&Ze&&(Se={opaque:"A_ONE",data:{color:[1,1,1,1]}}),Se&&Ze)if(Se.data.texture)U.transparent=!0;else{const Be=Se.data.color;switch(Se.opaque){case"A_ONE":U.opacity=Be[3]*Ze.float;break;case"RGB_ZERO":U.opacity=1-Be[0]*Ze.float;break;case"A_ZERO":U.opacity=1-Be[3]*Ze.float;break;case"RGB_ONE":U.opacity=Be[0]*Ze.float;break;default:console.warn('THREE.ColladaLoader: Invalid opaque type "%s" of transparent tag.',Se.opaque)}U.opacity<1&&(U.transparent=!0)}if(O.extra!==void 0&&O.extra.technique!==void 0){const Be=O.extra.technique;for(const Ye in Be){const st=Be[Ye];switch(Ye){case"double_sided":U.side=st===1?Li:ar;break;case"bump":U.normalMap=k(st.texture),U.normalScale=new ve(1,1);break}}}return U}function ye(C){return v(pt.materials[C],Ae)}function Ce(C){const A={name:C.getAttribute("name")};for(let O=0,U=C.childNodes.length;O<U;O++){const k=C.childNodes[O];if(k.nodeType===1)switch(k.nodeName){case"optics":A.optics=He(k);break}}pt.cameras[C.getAttribute("id")]=A}function He(C){for(let A=0;A<C.childNodes.length;A++){const O=C.childNodes[A];switch(O.nodeName){case"technique_common":return Re(O)}}return{}}function Re(C){const A={};for(let O=0;O<C.childNodes.length;O++){const U=C.childNodes[O];switch(U.nodeName){case"perspective":case"orthographic":A.technique=U.nodeName,A.parameters=ke(U);break}}return A}function ke(C){const A={};for(let O=0;O<C.childNodes.length;O++){const U=C.childNodes[O];switch(U.nodeName){case"xfov":case"yfov":case"xmag":case"ymag":case"znear":case"zfar":case"aspect_ratio":A[U.nodeName]=parseFloat(U.textContent);break}}return A}function Fe(C){let A;switch(C.optics.technique){case"perspective":A=new vn(C.optics.parameters.yfov,C.optics.parameters.aspect_ratio,C.optics.parameters.znear,C.optics.parameters.zfar);break;case"orthographic":let O=C.optics.parameters.ymag,U=C.optics.parameters.xmag;const k=C.optics.parameters.aspect_ratio;U=U===void 0?O*k:U,O=O===void 0?U/k:O,U*=.5,O*=.5,A=new Jr(-U,U,O,-O,C.optics.parameters.znear,C.optics.parameters.zfar);break;default:A=new vn;break}return A.name=C.name||"",A}function Ve(C){const A=pt.cameras[C];return A!==void 0?v(A,Fe):(console.warn("THREE.ColladaLoader: Couldn't find camera with ID:",C),null)}function Pe(C){let A={};for(let O=0,U=C.childNodes.length;O<U;O++){const k=C.childNodes[O];if(k.nodeType===1)switch(k.nodeName){case"technique_common":A=ct(k);break}}pt.lights[C.getAttribute("id")]=A}function ct(C){const A={};for(let O=0,U=C.childNodes.length;O<U;O++){const k=C.childNodes[O];if(k.nodeType===1)switch(k.nodeName){case"directional":case"point":case"spot":case"ambient":A.technique=k.nodeName,A.parameters=Ke(k)}}return A}function Ke(C){const A={};for(let O=0,U=C.childNodes.length;O<U;O++){const k=C.childNodes[O];if(k.nodeType===1)switch(k.nodeName){case"color":const pe=r(k.textContent);A.color=new ze().fromArray(pe),It.toWorkingColorSpace(A.color,nn);break;case"falloff_angle":A.falloffAngle=parseFloat(k.textContent);break;case"quadratic_attenuation":const Se=parseFloat(k.textContent);A.distance=Se?Math.sqrt(1/Se):0;break}}return A}function bt(C){let A;switch(C.technique){case"directional":A=new Sf;break;case"point":A=new bf;break;case"spot":A=new xf;break;case"ambient":A=new Mf;break}return C.parameters.color&&A.color.copy(C.parameters.color),C.parameters.distance&&(A.distance=C.parameters.distance),A}function ne(C){const A=pt.lights[C];return A!==void 0?v(A,bt):(console.warn("THREE.ColladaLoader: Couldn't find light with ID:",C),null)}function Te(C){const A={name:C.getAttribute("name"),sources:{},vertices:{},primitives:[]},O=n(C,"mesh")[0];if(O!==void 0){for(let U=0;U<O.childNodes.length;U++){const k=O.childNodes[U];if(k.nodeType!==1)continue;const pe=k.getAttribute("id");switch(k.nodeName){case"source":A.sources[pe]=he(k);break;case"vertices":A.vertices=Ie(k);break;case"polygons":console.warn("THREE.ColladaLoader: Unsupported primitive type: ",k.nodeName);break;case"lines":case"linestrips":case"polylist":case"triangles":A.primitives.push(Ne(k));break;default:console.log(k)}}pt.geometries[C.getAttribute("id")]=A}}function he(C){const A={array:[],stride:3};for(let O=0;O<C.childNodes.length;O++){const U=C.childNodes[O];if(U.nodeType===1)switch(U.nodeName){case"float_array":A.array=r(U.textContent);break;case"Name_array":A.array=i(U.textContent);break;case"technique_common":const k=n(U,"accessor")[0];k!==void 0&&(A.stride=parseInt(k.getAttribute("stride")));break}}return A}function Ie(C){const A={};for(let O=0;O<C.childNodes.length;O++){const U=C.childNodes[O];U.nodeType===1&&(A[U.getAttribute("semantic")]=a(U.getAttribute("source")))}return A}function Ne(C){const A={type:C.nodeName,material:C.getAttribute("material"),count:parseInt(C.getAttribute("count")),inputs:{},stride:0,hasUV:!1};for(let O=0,U=C.childNodes.length;O<U;O++){const k=C.childNodes[O];if(k.nodeType===1)switch(k.nodeName){case"input":const pe=a(k.getAttribute("source")),Se=k.getAttribute("semantic"),Ze=parseInt(k.getAttribute("offset")),Be=parseInt(k.getAttribute("set")),Ye=Be>0?Se+Be:Se;A.inputs[Ye]={id:pe,offset:Ze},A.stride=Math.max(A.stride,Ze+1),Se==="TEXCOORD"&&(A.hasUV=!0);break;case"vcount":A.vcount=o(k.textContent);break;case"p":A.p=o(k.textContent);break}}return A}function De(C){const A={};for(let O=0;O<C.length;O++){const U=C[O];A[U.type]===void 0&&(A[U.type]=[]),A[U.type].push(U)}return A}function tt(C){let A=0;for(let O=0,U=C.length;O<U;O++)C[O].hasUV===!0&&A++;A>0&&A<C.length&&(C.uvsNeedsFix=!0)}function vt(C){const A={},O=C.sources,U=C.vertices,k=C.primitives;if(k.length===0)return{};const pe=De(k);for(const Se in pe){const Ze=pe[Se];tt(Ze),A[Se]=at(Ze,O,U)}return A}function at(C,A,O){const U={},k={array:[],stride:0},pe={array:[],stride:0},Se={array:[],stride:0},Ze={array:[],stride:0},Be={array:[],stride:0},Ye={array:[],stride:4},st={array:[],stride:4},Le=new yt,nt=[];let Qe=0;for(let dt=0;dt<C.length;dt++){const $e=C[dt],Qt=$e.inputs;let Bt=0;switch($e.type){case"lines":case"linestrips":Bt=$e.count*2;break;case"triangles":Bt=$e.count*3;break;case"polylist":for(let Nt=0;Nt<$e.count;Nt++){const Lt=$e.vcount[Nt];switch(Lt){case 3:Bt+=3;break;case 4:Bt+=6;break;default:Bt+=(Lt-2)*3;break}}break;default:console.warn("THREE.ColladaLoader: Unknown primitive type:",$e.type)}Le.addGroup(Qe,Bt,dt),Qe+=Bt,$e.material&&nt.push($e.material);for(const Nt in Qt){const Lt=Qt[Nt];switch(Nt){case"VERTEX":for(const Pi in O){const In=O[Pi];switch(Pi){case"POSITION":const Ii=k.array.length;if(et($e,A[In],Lt.offset,k.array),k.stride=A[In].stride,A.skinWeights&&A.skinIndices&&(et($e,A.skinIndices,Lt.offset,Ye.array),et($e,A.skinWeights,Lt.offset,st.array)),$e.hasUV===!1&&C.uvsNeedsFix===!0){const es=(k.array.length-Ii)/k.stride;for(let ki=0;ki<es;ki++)Se.array.push(0,0)}break;case"NORMAL":et($e,A[In],Lt.offset,pe.array),pe.stride=A[In].stride;break;case"COLOR":et($e,A[In],Lt.offset,Be.array),Be.stride=A[In].stride;break;case"TEXCOORD":et($e,A[In],Lt.offset,Se.array),Se.stride=A[In].stride;break;case"TEXCOORD1":et($e,A[In],Lt.offset,Ze.array),Se.stride=A[In].stride;break;default:console.warn('THREE.ColladaLoader: Semantic "%s" not handled in geometry build process.',Pi)}}break;case"NORMAL":et($e,A[Lt.id],Lt.offset,pe.array),pe.stride=A[Lt.id].stride;break;case"COLOR":et($e,A[Lt.id],Lt.offset,Be.array,!0),Be.stride=A[Lt.id].stride;break;case"TEXCOORD":et($e,A[Lt.id],Lt.offset,Se.array),Se.stride=A[Lt.id].stride;break;case"TEXCOORD1":et($e,A[Lt.id],Lt.offset,Ze.array),Ze.stride=A[Lt.id].stride;break}}}return k.array.length>0&&Le.setAttribute("position",new qe(k.array,k.stride)),pe.array.length>0&&Le.setAttribute("normal",new qe(pe.array,pe.stride)),Be.array.length>0&&Le.setAttribute("color",new qe(Be.array,Be.stride)),Se.array.length>0&&Le.setAttribute("uv",new qe(Se.array,Se.stride)),Ze.array.length>0&&Le.setAttribute("uv1",new qe(Ze.array,Ze.stride)),Ye.array.length>0&&Le.setAttribute("skinIndex",new qe(Ye.array,Ye.stride)),st.array.length>0&&Le.setAttribute("skinWeight",new qe(st.array,st.stride)),U.data=Le,U.type=C[0].type,U.materialKeys=nt,U}function et(C,A,O,U,k=!1){const pe=C.p,Se=C.stride,Ze=C.vcount;function Be(Le){let nt=pe[Le+O]*st;const Qe=nt+st;for(;nt<Qe;nt++)U.push(Ye[nt]);if(k){const dt=U.length-st-1;on.setRGB(U[dt+0],U[dt+1],U[dt+2],nn),U[dt+0]=on.r,U[dt+1]=on.g,U[dt+2]=on.b}}const Ye=A.array,st=A.stride;if(C.vcount!==void 0){let Le=0;for(let nt=0,Qe=Ze.length;nt<Qe;nt++){const dt=Ze[nt];if(dt===4){const $e=Le+Se*0,Qt=Le+Se*1,Bt=Le+Se*2,Nt=Le+Se*3;Be($e),Be(Qt),Be(Nt),Be(Qt),Be(Bt),Be(Nt)}else if(dt===3){const $e=Le+Se*0,Qt=Le+Se*1,Bt=Le+Se*2;Be($e),Be(Qt),Be(Bt)}else if(dt>4)for(let $e=1,Qt=dt-2;$e<=Qt;$e++){const Bt=Le+Se*0,Nt=Le+Se*$e,Lt=Le+Se*($e+1);Be(Bt),Be(Nt),Be(Lt)}Le+=Se*dt}}else for(let Le=0,nt=pe.length;Le<nt;Le+=Se)Be(Le)}function Ht(C){return v(pt.geometries[C],vt)}function jt(C){const A={name:C.getAttribute("name")||"",joints:{},links:[]};for(let O=0;O<C.childNodes.length;O++){const U=C.childNodes[O];if(U.nodeType===1)switch(U.nodeName){case"technique_common":An(U,A);break}}pt.kinematicsModels[C.getAttribute("id")]=A}function en(C){return C.build!==void 0?C.build:C}function Bn(C){return v(pt.kinematicsModels[C],en)}function An(C,A){for(let O=0;O<C.childNodes.length;O++){const U=C.childNodes[O];if(U.nodeType===1)switch(U.nodeName){case"joint":A.joints[U.getAttribute("sid")]=Jn(U);break;case"link":A.links.push(_i(U));break}}}function Jn(C){let A;for(let O=0;O<C.childNodes.length;O++){const U=C.childNodes[O];if(U.nodeType===1)switch(U.nodeName){case"prismatic":case"revolute":A=vi(U);break}}return A}function vi(C){const A={sid:C.getAttribute("sid"),name:C.getAttribute("name")||"",axis:new N,limits:{min:0,max:0},type:C.nodeName,static:!1,zeroPosition:0,middlePosition:0};for(let O=0;O<C.childNodes.length;O++){const U=C.childNodes[O];if(U.nodeType===1)switch(U.nodeName){case"axis":const k=r(U.textContent);A.axis.fromArray(k);break;case"limits":const pe=U.getElementsByTagName("max")[0],Se=U.getElementsByTagName("min")[0];A.limits.max=parseFloat(pe.textContent),A.limits.min=parseFloat(Se.textContent);break}}return A.limits.min>=A.limits.max&&(A.static=!0),A.middlePosition=(A.limits.min+A.limits.max)/2,A}function _i(C){const A={sid:C.getAttribute("sid"),name:C.getAttribute("name")||"",attachments:[],transforms:[]};for(let O=0;O<C.childNodes.length;O++){const U=C.childNodes[O];if(U.nodeType===1)switch(U.nodeName){case"attachment_full":A.attachments.push(zn(U));break;case"matrix":case"translate":case"rotate":A.transforms.push(pn(U));break}}return A}function zn(C){const A={joint:C.getAttribute("joint").split("/").pop(),transforms:[],links:[]};for(let O=0;O<C.childNodes.length;O++){const U=C.childNodes[O];if(U.nodeType===1)switch(U.nodeName){case"link":A.links.push(_i(U));break;case"matrix":case"translate":case"rotate":A.transforms.push(pn(U));break}}return A}function pn(C){const A={type:C.nodeName},O=r(C.textContent);switch(A.type){case"matrix":A.obj=new rt,A.obj.fromArray(O).transpose();break;case"translate":A.obj=new N,A.obj.fromArray(O);break;case"rotate":A.obj=new N,A.obj.fromArray(O),A.angle=nr.degToRad(O[3]);break}return A}function ni(C){const A={name:C.getAttribute("name")||"",rigidBodies:{}};for(let O=0;O<C.childNodes.length;O++){const U=C.childNodes[O];if(U.nodeType===1)switch(U.nodeName){case"rigid_body":A.rigidBodies[U.getAttribute("name")]={},Kr(U,A.rigidBodies[U.getAttribute("name")]);break}}pt.physicsModels[C.getAttribute("id")]=A}function Kr(C,A){for(let O=0;O<C.childNodes.length;O++){const U=C.childNodes[O];if(U.nodeType===1)switch(U.nodeName){case"technique_common":Ar(U,A);break}}}function Ar(C,A){for(let O=0;O<C.childNodes.length;O++){const U=C.childNodes[O];if(U.nodeType===1)switch(U.nodeName){case"inertia":A.inertia=r(U.textContent);break;case"mass":A.mass=r(U.textContent)[0];break}}}function Go(C){const A={bindJointAxis:[]};for(let O=0;O<C.childNodes.length;O++){const U=C.childNodes[O];if(U.nodeType===1)switch(U.nodeName){case"bind_joint_axis":A.bindJointAxis.push(Zs(U));break}}pt.kinematicsScenes[a(C.getAttribute("url"))]=A}function Zs(C){const A={target:C.getAttribute("target").split("/").pop()};for(let O=0;O<C.childNodes.length;O++){const U=C.childNodes[O];if(U.nodeType===1)switch(U.nodeName){case"axis":const k=U.getElementsByTagName("param")[0];A.axis=k.textContent;const pe=A.axis.split("inst_").pop().split("axis")[0];A.jointIndex=pe.substring(0,pe.length-1);break}}return A}function Cr(C){return C.build!==void 0?C.build:C}function Qr(C){return v(pt.kinematicsScenes[C],Cr)}function Ho(){const C=Object.keys(pt.kinematicsModels)[0],A=Object.keys(pt.kinematicsScenes)[0],O=Object.keys(pt.visualScenes)[0];if(C===void 0||A===void 0)return;const U=Bn(C),k=Qr(A),pe=Dt(O),Se=k.bindJointAxis,Ze={};for(let st=0,Le=Se.length;st<Le;st++){const nt=Se[st],Qe=Wt.querySelector('[sid="'+nt.target+'"]');if(Qe){const dt=Qe.parentElement;Be(nt.jointIndex,dt)}}function Be(st,Le){const nt=Le.getAttribute("name"),Qe=U.joints[st];pe.traverse(function(dt){dt.name===nt&&(Ze[st]={object:dt,transforms:Js(Le),joint:Qe,position:Qe.zeroPosition})})}const Ye=new rt;Fi={joints:U&&U.joints,getJointValue:function(st){const Le=Ze[st];if(Le)return Le.position;console.warn("THREE.ColladaLoader: Joint "+st+" doesn't exist.")},setJointValue:function(st,Le){const nt=Ze[st];if(nt){const Qe=nt.joint;if(Le>Qe.limits.max||Le<Qe.limits.min)console.warn("THREE.ColladaLoader: Joint "+st+" value "+Le+" outside of limits (min: "+Qe.limits.min+", max: "+Qe.limits.max+").");else if(Qe.static)console.warn("THREE.ColladaLoader: Joint "+st+" is static.");else{const dt=nt.object,$e=Qe.axis,Qt=nt.transforms;se.identity();for(let Bt=0;Bt<Qt.length;Bt++){const Nt=Qt[Bt];if(Nt.sid&&Nt.sid.indexOf(st)!==-1)switch(Qe.type){case"revolute":se.multiply(Ye.makeRotationAxis($e,nr.degToRad(Le)));break;case"prismatic":se.multiply(Ye.makeTranslation($e.x*Le,$e.y*Le,$e.z*Le));break;default:console.warn("THREE.ColladaLoader: Unknown joint type: "+Qe.type);break}else switch(Nt.type){case"matrix":se.multiply(Nt.obj);break;case"translate":se.multiply(Ye.makeTranslation(Nt.obj.x,Nt.obj.y,Nt.obj.z));break;case"scale":se.scale(Nt.obj);break;case"rotate":se.multiply(Ye.makeRotationAxis(Nt.obj,Nt.angle));break}}dt.matrix.copy(se),dt.matrix.decompose(dt.position,dt.quaternion,dt.scale),Ze[st].position=Le}}else console.log("THREE.ColladaLoader: "+st+" does not exist.")}}}function Js(C){const A=[],O=Wt.querySelector('[id="'+C.id+'"]');for(let U=0;U<O.childNodes.length;U++){const k=O.childNodes[U];if(k.nodeType!==1)continue;let pe,Se;switch(k.nodeName){case"matrix":pe=r(k.textContent);const Ze=new rt().fromArray(pe).transpose();A.push({sid:k.getAttribute("sid"),type:k.nodeName,obj:Ze});break;case"translate":case"scale":pe=r(k.textContent),Se=new N().fromArray(pe),A.push({sid:k.getAttribute("sid"),type:k.nodeName,obj:Se});break;case"rotate":pe=r(k.textContent),Se=new N().fromArray(pe);const Be=nr.degToRad(pe[3]);A.push({sid:k.getAttribute("sid"),type:k.nodeName,obj:Se,angle:Be});break}}return A}function L(C){const A=C.getElementsByTagName("node");for(let O=0;O<A.length;O++){const U=A[O];U.hasAttribute("id")===!1&&U.setAttribute("id",l())}}const se=new rt,ue=new N;function ie(C){const A={name:C.getAttribute("name")||"",type:C.getAttribute("type"),id:C.getAttribute("id"),sid:C.getAttribute("sid"),matrix:new rt,nodes:[],instanceCameras:[],instanceControllers:[],instanceLights:[],instanceGeometries:[],instanceNodes:[],transforms:{}};for(let O=0;O<C.childNodes.length;O++){const U=C.childNodes[O];if(U.nodeType!==1)continue;let k;switch(U.nodeName){case"node":A.nodes.push(U.getAttribute("id")),ie(U);break;case"instance_camera":A.instanceCameras.push(a(U.getAttribute("url")));break;case"instance_controller":A.instanceControllers.push(oe(U));break;case"instance_light":A.instanceLights.push(a(U.getAttribute("url")));break;case"instance_geometry":A.instanceGeometries.push(oe(U));break;case"instance_node":A.instanceNodes.push(a(U.getAttribute("url")));break;case"matrix":k=r(U.textContent),A.matrix.multiply(se.fromArray(k).transpose()),A.transforms[U.getAttribute("sid")]=U.nodeName;break;case"translate":k=r(U.textContent),ue.fromArray(k),A.matrix.multiply(se.makeTranslation(ue.x,ue.y,ue.z)),A.transforms[U.getAttribute("sid")]=U.nodeName;break;case"rotate":k=r(U.textContent);const pe=nr.degToRad(k[3]);A.matrix.multiply(se.makeRotationAxis(ue.fromArray(k),pe)),A.transforms[U.getAttribute("sid")]=U.nodeName;break;case"scale":k=r(U.textContent),A.matrix.scale(ue.fromArray(k)),A.transforms[U.getAttribute("sid")]=U.nodeName;break;case"extra":break;default:console.log(U)}}return lt(A.id)?console.warn("THREE.ColladaLoader: There is already a node with ID %s. Exclude current node from further processing.",A.id):pt.nodes[A.id]=A,A}function oe(C){const A={id:a(C.getAttribute("url")),materials:{},skeletons:[]};for(let O=0;O<C.childNodes.length;O++){const U=C.childNodes[O];switch(U.nodeName){case"bind_material":const k=U.getElementsByTagName("instance_material");for(let pe=0;pe<k.length;pe++){const Se=k[pe],Ze=Se.getAttribute("symbol"),Be=Se.getAttribute("target");A.materials[Ze]=a(Be)}break;case"skeleton":A.skeletons.push(a(U.textContent));break}}return A}function Oe(C,A){const O=[],U=[];let k,pe,Se;for(k=0;k<C.length;k++){const Ye=C[k];let st;if(lt(Ye))st=wt(Ye),Ge(st,A,O);else if(Zt(Ye)){const nt=pt.visualScenes[Ye].children;for(let Qe=0;Qe<nt.length;Qe++){const dt=nt[Qe];if(dt.type==="JOINT"){const $e=wt(dt.id);Ge($e,A,O)}}}else console.error("THREE.ColladaLoader: Unable to find root bone of skeleton with ID:",Ye)}for(k=0;k<A.length;k++)for(pe=0;pe<O.length;pe++)if(Se=O[pe],Se.bone.name===A[k].name){U[k]=Se,Se.processed=!0;break}for(k=0;k<O.length;k++)Se=O[k],Se.processed===!1&&(U.push(Se),Se.processed=!0);const Ze=[],Be=[];for(k=0;k<U.length;k++)Se=U[k],Ze.push(Se.bone),Be.push(Se.boneInverse);return new Ja(Ze,Be)}function Ge(C,A,O){C.traverse(function(U){if(U.isBone===!0){let k;for(let pe=0;pe<A.length;pe++){const Se=A[pe];if(Se.name===U.name){k=Se.boneInverse;break}}k===void 0&&(k=new rt),O.push({bone:U,boneInverse:k,processed:!1})}})}function je(C){const A=[],O=C.matrix,U=C.nodes,k=C.type,pe=C.instanceCameras,Se=C.instanceControllers,Ze=C.instanceLights,Be=C.instanceGeometries,Ye=C.instanceNodes;for(let Le=0,nt=U.length;Le<nt;Le++)A.push(wt(U[Le]));for(let Le=0,nt=pe.length;Le<nt;Le++){const Qe=Ve(pe[Le]);Qe!==null&&A.push(Qe.clone())}for(let Le=0,nt=Se.length;Le<nt;Le++){const Qe=Se[Le],dt=W(Qe.id),$e=Ht(dt.id),Qt=ft($e,Qe.materials),Bt=Qe.skeletons,Nt=dt.skin.joints,Lt=Oe(Bt,Nt);for(let Pi=0,In=Qt.length;Pi<In;Pi++){const Ii=Qt[Pi];Ii.isSkinnedMesh&&(Ii.bind(Lt,dt.skin.bindMatrix),Ii.normalizeSkinWeights()),A.push(Ii)}}for(let Le=0,nt=Ze.length;Le<nt;Le++){const Qe=ne(Ze[Le]);Qe!==null&&A.push(Qe.clone())}for(let Le=0,nt=Be.length;Le<nt;Le++){const Qe=Be[Le],dt=Ht(Qe.id),$e=ft(dt,Qe.materials);for(let Qt=0,Bt=$e.length;Qt<Bt;Qt++)A.push($e[Qt])}for(let Le=0,nt=Ye.length;Le<nt;Le++)A.push(wt(Ye[Le]).clone());let st;if(U.length===0&&A.length===1)st=A[0];else{st=k==="JOINT"?new Sh:new Yi;for(let Le=0;Le<A.length;Le++)st.add(A[Le])}return st.name=k==="JOINT"?C.sid:C.name,st.matrix.copy(O),st.matrix.decompose(st.position,st.quaternion,st.scale),st}const Je=new Xn({name:kn.DEFAULT_MATERIAL_NAME,color:16711935});function gt(C,A){const O=[];for(let U=0,k=C.length;U<k;U++){const pe=A[C[U]];pe===void 0?(console.warn("THREE.ColladaLoader: Material with key %s not found. Apply fallback material.",C[U]),O.push(Je)):O.push(ye(pe))}return O}function ft(C,A){const O=[];for(const U in C){const k=C[U],pe=gt(k.materialKeys,A);if(pe.length===0&&(U==="lines"||U==="linestrips"?pe.push(new Fn):pe.push(new Qc)),U==="lines"||U==="linestrips")for(let Ye=0,st=pe.length;Ye<st;Ye++){const Le=pe[Ye];if(Le.isMeshPhongMaterial===!0||Le.isMeshLambertMaterial===!0){const nt=new Fn;nt.color.copy(Le.color),nt.opacity=Le.opacity,nt.transparent=Le.transparent,pe[Ye]=nt}}const Se=k.data.attributes.skinIndex!==void 0,Ze=pe.length===1?pe[0]:pe;let Be;switch(U){case"lines":Be=new Zi(k.data,Ze);break;case"linestrips":Be=new Tr(k.data,Ze);break;case"triangles":case"polylist":Se?Be=new nf(k.data,Ze):Be=new zt(k.data,Ze);break}O.push(Be)}return O}function lt(C){return pt.nodes[C]!==void 0}function wt(C){return v(pt.nodes[C],je)}function Ut(C){const A={name:C.getAttribute("name"),children:[]};L(C);const O=n(C,"node");for(let U=0;U<O.length;U++)A.children.push(ie(O[U]));pt.visualScenes[C.getAttribute("id")]=A}function $t(C){const A=new Yi;A.name=C.name;const O=C.children;for(let U=0;U<O.length;U++){const k=O[U];A.add(wt(k.id))}return A}function Zt(C){return pt.visualScenes[C]!==void 0}function Dt(C){return v(pt.visualScenes[C],$t)}function ht(C){const A=n(C,"instance_visual_scene")[0];return Dt(a(A.getAttribute("url")))}function sn(){const C=pt.clips;if(c(C)===!0){if(c(pt.animations)===!1){const A=[];for(const O in pt.animations){const U=_(O);for(let k=0,pe=U.length;k<pe;k++)A.push(U[k])}tn.push(new Gs("default",-1,A))}}else for(const A in C)tn.push(q(A))}function Rt(C){let A="";const O=[C];for(;O.length;){const U=O.shift();U.nodeType===Node.TEXT_NODE?A+=U.textContent:(A+=`
`,O.push.apply(O,U.childNodes))}return A.trim()}if(e.length===0)return{scene:new xh};const Cn=new DOMParser().parseFromString(e,"application/xml"),Wt=n(Cn,"COLLADA")[0],mn=Cn.getElementsByTagName("parsererror")[0];if(mn!==void 0){const C=n(mn,"div")[0];let A;return C?A=C.textContent:A=Rt(mn),console.error(`THREE.ColladaLoader: Failed to parse collada file.
`,A),null}const Rn=Wt.getAttribute("version");console.debug("THREE.ColladaLoader: File version",Rn);const Yt=h(n(Wt,"asset")[0]),xn=new f_(this.manager);xn.setPath(this.resourcePath||t).setCrossOrigin(this.crossOrigin);let un;Ig&&(un=new Ig(this.manager),un.setPath(this.resourcePath||t));const on=new ze,tn=[];let Fi={},yi=0;const pt={animations:{},clips:{},controllers:{},images:{},effects:{},materials:{},cameras:{},lights:{},geometries:{},nodes:{},visualScenes:{},kinematicsModels:{},physicsModels:{},kinematicsScenes:{}};f(Wt,"library_animations","animation",m),f(Wt,"library_animation_clips","animation_clip",F),f(Wt,"library_controllers","controller",j),f(Wt,"library_images","image",Q),f(Wt,"library_effects","effect",ge),f(Wt,"library_materials","material",le),f(Wt,"library_cameras","camera",Ce),f(Wt,"library_lights","light",Pe),f(Wt,"library_geometries","geometry",Te),f(Wt,"library_nodes","node",ie),f(Wt,"library_visual_scenes","visual_scene",Ut),f(Wt,"library_kinematics_models","kinematics_model",jt),f(Wt,"library_physics_models","physics_model",ni),f(Wt,"scene","instance_kinematics_scene",Go),p(pt.animations,y),p(pt.clips,Z),p(pt.controllers,K),p(pt.images,X),p(pt.effects,ee),p(pt.materials,Ae),p(pt.cameras,Fe),p(pt.lights,bt),p(pt.geometries,vt),p(pt.visualScenes,$t),sn(),Ho();const $r=ht(n(Wt,"scene")[0]);return $r.animations=tn,Yt.upAxis==="Z_UP"&&(console.warn("THREE.ColladaLoader: You are loading an asset with a Z-UP coordinate system. The loader just rotates the asset to transform it into Y-UP. The vertex data are not converted, see #24289."),$r.rotation.set(-Math.PI/2,0,0)),$r.scale.multiplyScalar(Yt.unit),{get animations(){return console.warn("THREE.ColladaLoader: Please access animations over scene.animations now."),tn},kinematics:Fi,library:pt,scene:$r}}}var FC=rn("<!> <!>",1);function kC(s,e){qn(e,!0),ut(e,"color",19,()=>new ze("pink"));let t=ut(e,"scale",19,()=>[1,1,1]),n=ut(e,"rotation",19,()=>[0,0,0]),i=ut(e,"position",19,()=>[0,0,0]),r=ut(e,"onclick",3,()=>{}),o=_r(wi([1,1,1])),a=_r(wi([0,0,0])),l=_r(wi([0,0,0])),c=_r(wi([0,0,0])),h=_r(wi([]));z_(OC).load(e.filename).subscribe(m=>{if(!m)return;let g=m.scene;tr(o,wi(g.scale.toArray())),tr(a,wi(g.position.toArray())),tr(l,wi(g.rotation?g.rotation.toArray():xe(l))),tr(c,wi(g.up.toArray())),xe(c)[0]*=Math.PI/2,xe(c)[1]*=Math.PI/2,xe(c)[2]*=Math.PI/2;let x=[];m.scene.traverse(y=>{y.type==="Mesh"&&x.push(y)}),tr(h,wi(x))});var f=Pt(),p=ot(f);{var v=m=>{var g=FC(),x=ot(g);rh(x,()=>`<!-- include dae: ${e.filename} ${t()} -->`);var y=_t(x,2);Ot(y,()=>Ct.Group,(_,E)=>{E(_,{get scale(){return t()},get position(){return i()},get rotation(){return n()},children:(w,M)=>{var T=Pt(),S=ot(T);Ot(S,()=>Ct.Group,(b,I)=>{I(b,{get rotation(){return xe(c)},children:(D,G)=>{var H=Pt(),$=ot(H);Ot($,()=>Ct.Group,(F,Z)=>{Z(F,{get scale(){return xe(o)},get position(){return xe(a)},get rotation(){return xe(l)},children:(q,j)=>{var J=Pt(),B=ot(J);Gr(B,17,()=>xe(h),Vr,(Y,K)=>{var V=Pt(),W=ot(V);const Q=xt(()=>xe(K).scale?xe(K).scale.toArray():[1,1,1]),X=xt(()=>xe(K).position?xe(K).position.toArray():[0,0,0]);Ot(W,()=>Ct.Mesh,(te,ge)=>{ge(te,{castShadow:!0,receiveShadow:!0,get geometry(){return xe(K).geometry},get scale(){return xe(Q)},get position(){return xe(X)},get material(){return xe(K).material},get onclick(){return r()}})}),it(Y,V)}),it(q,J)},$$slots:{default:!0}})}),it(D,H)},$$slots:{default:!0}})}),it(w,T)},$$slots:{default:!0}})}),it(m,g)};Xt(p,m=>{xe(h).length>0&&m(v)})}it(s,f),jn()}class BC extends kn{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new qi(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(r.parse(a))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}parse(e){function t(c){const h=new DataView(c),u=32/8*3+32/8*3*3+16/8,d=h.getUint32(80,!0);if(80+32/8+d*u===h.byteLength)return!0;const p=[115,111,108,105,100];for(let v=0;v<5;v++)if(n(p,h,v))return!1;return!0}function n(c,h,u){for(let d=0,f=c.length;d<f;d++)if(c[d]!==h.getUint8(u+d))return!1;return!0}function i(c){const h=new DataView(c),u=h.getUint32(80,!0);let d,f,p,v=!1,m,g,x,y,_;for(let I=0;I<70;I++)h.getUint32(I,!1)==1129270351&&h.getUint8(I+4)==82&&h.getUint8(I+5)==61&&(v=!0,m=new Float32Array(u*3*3),g=h.getUint8(I+6)/255,x=h.getUint8(I+7)/255,y=h.getUint8(I+8)/255,_=h.getUint8(I+9)/255);const E=84,w=12*4+2,M=new yt,T=new Float32Array(u*3*3),S=new Float32Array(u*3*3),b=new ze;for(let I=0;I<u;I++){const D=E+I*w,G=h.getFloat32(D,!0),H=h.getFloat32(D+4,!0),$=h.getFloat32(D+8,!0);if(v){const F=h.getUint16(D+48,!0);(F&32768)===0?(d=(F&31)/31,f=(F>>5&31)/31,p=(F>>10&31)/31):(d=g,f=x,p=y)}for(let F=1;F<=3;F++){const Z=D+F*12,q=I*3*3+(F-1)*3;T[q]=h.getFloat32(Z,!0),T[q+1]=h.getFloat32(Z+4,!0),T[q+2]=h.getFloat32(Z+8,!0),S[q]=G,S[q+1]=H,S[q+2]=$,v&&(b.setRGB(d,f,p,nn),m[q]=b.r,m[q+1]=b.g,m[q+2]=b.b)}}return M.setAttribute("position",new Et(T,3)),M.setAttribute("normal",new Et(S,3)),v&&(M.setAttribute("color",new Et(m,3)),M.hasColors=!0,M.alpha=_),M}function r(c){const h=new yt,u=/solid([\s\S]*?)endsolid/g,d=/facet([\s\S]*?)endfacet/g,f=/solid\s(.+)/;let p=0;const v=/[\s]+([+-]?(?:\d*)(?:\.\d*)?(?:[eE][+-]?\d+)?)/.source,m=new RegExp("vertex"+v+v+v,"g"),g=new RegExp("normal"+v+v+v,"g"),x=[],y=[],_=[],E=new N;let w,M=0,T=0,S=0;for(;(w=u.exec(c))!==null;){T=S;const b=w[0],I=(w=f.exec(b))!==null?w[1]:"";for(_.push(I);(w=d.exec(b))!==null;){let H=0,$=0;const F=w[0];for(;(w=g.exec(F))!==null;)E.x=parseFloat(w[1]),E.y=parseFloat(w[2]),E.z=parseFloat(w[3]),$++;for(;(w=m.exec(F))!==null;)x.push(parseFloat(w[1]),parseFloat(w[2]),parseFloat(w[3])),y.push(E.x,E.y,E.z),H++,S++;$!==1&&console.error("THREE.STLLoader: Something isn't right with the normal of face number "+p),H!==3&&console.error("THREE.STLLoader: Something isn't right with the vertices of face number "+p),p++}const D=T,G=S-T;h.userData.groupNames=_,h.addGroup(D,G,M),M++}return h.setAttribute("position",new qe(x,3)),h.setAttribute("normal",new qe(y,3)),h}function o(c){return typeof c!="string"?new TextDecoder().decode(c):c}function a(c){if(typeof c=="string"){const h=new Uint8Array(c.length);for(let u=0;u<c.length;u++)h[u]=c.charCodeAt(u)&255;return h.buffer||h}else return c}const l=a(e);return t(l)?i(l):r(o(e))}}var zC=rn("<!> <!>",1);function VC(s,e){qn(e,!0);const[t,n]=ih(),i=()=>Ao(xe(d),"$stl",t);let r=ut(e,"color",19,()=>new ze("pink")),o=ut(e,"scale",19,()=>[1,1,1]),a=ut(e,"rotation",19,()=>[0,0,0]),l=ut(e,"position",19,()=>[0,0,0]),c=ut(e,"onclick",3,()=>{}),h=ut(e,"opacity",3,1);const u=z_(BC);let d=xt(()=>u.load(e.filename));var f=Pt(),p=ot(f);{var v=m=>{var g=zC(),x=ot(g);rh(x,()=>`<!-- include stl: ${e.filename} ${o()} -->`);var y=_t(x,2);Ot(y,()=>Ct.Mesh,(_,E)=>{E(_,{castShadow:!0,receiveShadow:!0,get geometry(){return i()},get scale(){return o()},get onclick(){return c()},get position(){return l()},get rotation(){return a()},children:(w,M)=>{var T=Pt(),S=ot(T);{var b=D=>{var G=Pt(),H=ot(G);Ot(H,()=>Ct.MeshLambertMaterial,($,F)=>{F($,{get color(){return r()},get opacity(){return h()},transparent:!0})}),it(D,G)},I=D=>{var G=Pt(),H=ot(G);Ot(H,()=>Ct.MeshLambertMaterial,($,F)=>{F($,{get color(){return r()}})}),it(D,G)};Xt(S,D=>{h()<1?D(b):D(I,!1)})}it(w,T)},$$slots:{default:!0}})}),it(m,g)};Xt(p,m=>{i()&&m(v)})}it(s,f),jn(),n()}var GC=rn("<!> <!>",1),HC=rn("<!> <!>",1);function Dg(s,e){qn(e,!0);let t=ut(e,"onselectionchange",3,void 0),n=ut(e,"opacity",3,1),i=ut(e,"color",3,void 0);function r(){var u;return Xe.selectedLink==e.link?new ze(Xe.highlightColor):(u=e.visual)!=null&&u.color_rgba?DC(e.visual.color_rgba):new ze(i()||"gray")}const o=u=>{u.stopPropagation(),t()&&t()(Xe.selectedLink,e.link),Xe.selectedLink=e.link,Xe.selectedJoint=void 0};h0();const a=u=>[u[0]+Math.PI/2,u[1],u[2]];var l=Pt(),c=ot(l);{var h=u=>{var d=Pt(),f=ot(d);{var p=m=>{var g=Pt(),x=ot(g);{var y=E=>{const w=xt(()=>e.visual.origin_xyz||[0,0,0]),M=xt(()=>e.visual.origin_rpy||[0,0,0]),T=xt(r),S=xt(()=>e.visual.geometry.scale||[1,1,1]);VC(E,{onclick:o,get filename(){return e.visual.geometry.filename},get position(){return xe(w)},get rotation(){return xe(M)},get color(){return xe(T)},get opacity(){return n()},get scale(){return xe(S)}})},_=E=>{var w=Pt(),M=ot(w);{var T=S=>{const b=xt(()=>e.visual.origin_xyz||[0,0,0]),I=xt(()=>e.visual.origin_rpy||[0,0,0]),D=xt(r),G=xt(()=>e.visual.geometry.scale||[1,1,1]);kC(S,{onclick:o,get filename(){return e.visual.geometry.filename},get position(){return xe(b)},get rotation(){return xe(I)},get color(){return xe(D)},get scale(){return xe(G)}})};Xt(M,S=>{e.visual.geometry.type==="dae"&&S(T)},!0)}it(E,w)};Xt(x,E=>{e.visual.geometry.type==="stl"?E(y):E(_,!1)})}it(m,g)},v=m=>{var g=Pt(),x=ot(g);{var y=E=>{var w=Pt(),M=ot(w);const T=xt(()=>e.visual.origin_xyz||[0,0,0]),S=xt(()=>a(e.visual.origin_rpy||[0,0,0]));Ot(M,()=>Ct.Mesh,(b,I)=>{I(b,{castShadow:!0,receiveShadow:!0,onclick:o,get position(){return xe(T)},get rotation(){return xe(S)},children:(D,G)=>{var H=GC(),$=ot(H);const F=xt(()=>[e.visual.geometry.radius,e.visual.geometry.radius,e.visual.geometry.length]);Ot($,()=>Ct.CylinderGeometry,(J,B)=>{B(J,{get args(){return xe(F)}})});var Z=_t($,2);{var q=J=>{var B=Pt(),Y=ot(B);const K=xt(r);Ot(Y,()=>Ct.MeshBasicMaterial,(V,W)=>{W(V,{get color(){return xe(K)},get opacity(){return n()},transparent:!0})}),it(J,B)},j=J=>{var B=Pt(),Y=ot(B);const K=xt(r);Ot(Y,()=>Ct.MeshBasicMaterial,(V,W)=>{W(V,{get color(){return xe(K)}})}),it(J,B)};Xt(Z,J=>{n()<1?J(q):J(j,!1)})}it(D,H)},$$slots:{default:!0}})}),it(E,w)},_=E=>{var w=Pt(),M=ot(w);{var T=S=>{var b=Pt(),I=ot(b);const D=xt(()=>e.visual.geometry.size||[1,1,1]),G=xt(()=>e.visual.origin_xyz||[0,0,0]),H=xt(()=>e.visual.origin_rpy||[0,0,0]);Ot(I,()=>Ct.Mesh,($,F)=>{F($,{castShadow:!0,receiveShadow:!0,get scale(){return xe(D)},onclick:o,get position(){return xe(G)},get rotation(){return xe(H)},children:(Z,q)=>{var j=HC(),J=ot(j);Ot(J,()=>Ct.BoxGeometry,(V,W)=>{W(V,{})});var B=_t(J,2);{var Y=V=>{var W=Pt(),Q=ot(W);const X=xt(r);Ot(Q,()=>Ct.MeshBasicMaterial,(te,ge)=>{ge(te,{get color(){return xe(X)},get opacity(){return n()},transparent:!0})}),it(V,W)},K=V=>{var W=Pt(),Q=ot(W);const X=xt(r);Ot(Q,()=>Ct.MeshBasicMaterial,(te,ge)=>{ge(te,{get color(){return xe(X)}})}),it(V,W)};Xt(B,V=>{n()<1?V(Y):V(K,!1)})}it(Z,j)},$$slots:{default:!0}})}),it(S,b)};Xt(M,S=>{e.visual.type==="box"&&S(T)},!0)}it(E,w)};Xt(x,E=>{e.visual.type==="cylinder"?E(y):E(_,!1)})}it(m,g)};Xt(f,m=>{e.visual.type==="mesh"&&e.visual.geometry?m(p):m(v,!1)})}it(u,d)};Xt(c,u=>{e.visual&&u(h)})}it(s,l),jn()}var WC=rn("<!> <!>",1),XC=rn("<!> <!>",1),YC=rn("<!> <!>",1),qC=rn("<!> <!>",1),jC=rn("<!> <!>",1),ZC=rn("<!> <!> <!>",1),JC=rn("<!> <!>",1);function KC(s,e){qn(e,!0),ut(e,"onselectionchange",3,void 0),ut(e,"onchange",3,void 0);const t=c=>[c[0]+Math.PI/2,c[1],c[2]];let n=.7;const i=()=>{Xe.selectedLink=void 0,Xe.selectedJoint=e.joint};h0();var r=JC(),o=ot(r);rh(o,()=>`<!-- Joint ${e.joint.name} (${e.joint.type}) -->`);var a=_t(o,2);{var l=c=>{var h=ZC(),u=ot(h);{var d=m=>{Z_(m,{get"position.x"(){return e.joint.origin_xyz[0]},get"position.y"(){return e.joint.origin_xyz[1]},get"position.z"(){return e.joint.origin_xyz[2]},children:(g,x)=>{const y=xt(()=>Xe.selectedJoint==e.joint?Xe.highlightColor:Xe.jointColor);a0(g,{get color(){return xe(y)},scale:[.1,.1,.1],get text(){return e.joint.name}})},$$slots:{default:!0}})};Xt(u,m=>{Xe.jointNames&&m(d)})}var f=_t(u,2);{var p=m=>{var g=Pt(),x=ot(g);Ot(x,()=>Ct.Line,(y,_)=>{_(y,{children:(E,w)=>{var M=WC(),T=ot(M);const S=xt(()=>[new N(0,0,0),new N(e.joint.origin_xyz[0],e.joint.origin_xyz[1],e.joint.origin_xyz[2])]);lg(T,{get points(){return xe(S)}});var b=_t(T,2);Ot(b,()=>Ct.LineBasicMaterial,(I,D)=>{D(I,{get color(){return Xe.jointColor}})}),it(E,M)},$$slots:{default:!0}})}),it(m,g)};Xt(f,m=>{Xe.joints&&m(p)})}var v=_t(f,2);Ot(v,()=>Ct.Group,(m,g)=>{g(m,{get rotation(){return e.joint.rotation},get position(){return e.joint.origin_xyz},children:(x,y)=>{var _=jC(),E=ot(_);{var w=S=>{var b=qC(),I=ot(b);Ot(I,()=>Ct.Line,(H,$)=>{$(H,{children:(F,Z)=>{var q=XC(),j=ot(q);lg(j,{onclick:i,points:[new N(0,0,0),new N(0,-.02,0)]});var J=_t(j,2);Ot(J,()=>Ct.LineBasicMaterial,(B,Y)=>{Y(B,{get color(){return Xe.jointIndicatorColor}})}),it(F,q)},$$slots:{default:!0}})});var D=_t(I,2);const G=xt(()=>t([0,0,0]));Ot(D,()=>Ct.Mesh,(H,$)=>{$(H,{onclick:i,get rotation(){return xe(G)},children:(F,Z)=>{var q=YC(),j=ot(q);Ot(j,()=>Ct.CylinderGeometry,(Y,K)=>{K(Y,{args:[.004,.004,.03]})});var J=_t(j,2);{var B=Y=>{var K=Pt(),V=ot(K);const W=xt(()=>Xe.selectedJoint==e.joint?Xe.highlightColor:Xe.jointColor);Ot(V,()=>Ct.MeshBasicMaterial,(Q,X)=>{X(Q,{get color(){return xe(W)},opacity:n,transparent:!0})}),it(Y,K)};Xt(J,Y=>{Y(B)})}it(F,q)},$$slots:{default:!0}})}),it(S,b)};Xt(E,S=>{Xe.joints&&S(w)})}var M=_t(E,2);{var T=S=>{m0(S,{get link(){return e.joint.child}})};Xt(M,S=>{e.joint.child&&S(T)})}it(x,_)},$$slots:{default:!0}})}),it(c,h)};Xt(a,c=>{Xe.robot&&c(l)})}it(s,r),jn()}var QC=rn("<!> <!> <!> <!> <!>",1);function m0(s,e){qn(e,!0);var t=Pt(),n=ot(t);{var i=r=>{var o=QC(),a=ot(o);rh(a,()=>`<!-- Link ${e.link.name} -->`);var l=_t(a,2);{var c=v=>{Z_(v,{position:[0,0,0],children:(m,g)=>{const x=xt(()=>Xe.selectedLink==e.link?Xe.highlightColor:Xe.linkColor);a0(m,{anchorY:-.2,get color(){return xe(x)},scale:[.1,.1,.1],get text(){return e.link.name}})},$$slots:{default:!0}})};Xt(l,v=>{Xe.linkNames&&v(c)})}var h=_t(l,2);{var u=v=>{var m=Pt(),g=ot(m);Gr(g,17,()=>e.link.visual,Vr,(x,y)=>{Dg(x,{get opacity(){return Xe.visualOpacity},get visual(){return xe(y)},get link(){return e.link}})}),it(v,m)};Xt(h,v=>{Xe.visual&&v(u)})}var d=_t(h,2);{var f=v=>{var m=Pt(),g=ot(m);Gr(g,17,()=>e.link.collision,Vr,(x,y)=>{Dg(x,{get opacity(){return Xe.collisionOpacity},get visual(){return xe(y)},get color(){return Xe.collisionColor},get link(){return e.link}})}),it(v,m)};Xt(d,v=>{Xe.collision&&v(f)})}var p=_t(d,2);Gr(p,17,()=>LC(Xe.robot,e.link),Vr,(v,m)=>{KC(v,{get joint(){return xe(m)}})}),it(r,o)};Xt(n,r=>{Xe.robot&&r(i)})}it(s,t),jn()}function $C(s,e){qn(e,!0);let t=ut(e,"position",19,()=>[0,0,0]),n=ut(e,"quaternion",7);if(ut(e,"onselectionchange",3,void 0),ut(e,"onchange",3,void 0),!n()){const a=new hn;a.setFromAxisAngle(new N(-1,0,0),Math.PI*.5),n([a.x,a.y,a.z,a.w])}var i=Pt(),r=ot(i);{var o=a=>{var l=Pt(),c=ot(l);Ot(c,()=>Ct.Group,(h,u)=>{u(h,{get position(){return t()},get quaternion(){return n()},children:(d,f)=>{var p=Pt(),v=ot(p);Gr(v,17,()=>UC(Xe.robot),Vr,(m,g)=>{m0(m,{get link(){return xe(g)},parentJoint:void 0})}),it(d,p)},$$slots:{default:!0}})}),it(a,l)};Xt(r,a=>{Xe.robot&&a(o)})}it(s,i),jn()}var eR=rn("<!> <!> <!> <!>",1);function tR(s,e){let t=ut(e,"intensity",3,.5),n=ut(e,"radius",3,1),i=ut(e,"shadows",3,!0),r=ut(e,"preset_name",3,"rembrandt"),o=ut(e,"shadowBias",19,()=>-1e-4),a=ut(e,"normalBias",3,0),l=ut(e,"shadowSize",3,256),c=ut(e,"height",3,1),h=ut(e,"shadowOffset",3,1);const d={rembrandt:{main:[1,2,1],fill:[-2,-.5,-2]},portrait:{main:[-1,2,.5],fill:[-1,.5,-1.5]},upfront:{main:[0,2,1],fill:[-1,.5,-1.5]},soft:{main:[-2,4,4],fill:[-1,.5,-1.5]}}[r()];var f=eR(),p=ot(f);const v=xt(()=>t()/3);Ot(p,()=>Ct.AmbientLight,(M,T)=>{T(M,{get intensity(){return xe(v)}})});var m=_t(p,2);const g=xt(()=>[d.main[0]*n(),d.main[1]*n(),d.main[2]*n()]),x=xt(()=>t()*2);Ot(m,()=>Ct.SpotLight,(M,T)=>{T(M,{penumbra:1,get position(){return xe(g)},get intensity(){return xe(x)},get castShadow(){return i()},get"shadow-bias"(){return o()},get"shadow-normalBias"(){return a()},get"shadow-mapSize"(){return l()}})});var y=_t(m,2);const _=xt(()=>[d.fill[0]*n(),d.fill[1]*n(),d.fill[2]*n()]);Ot(y,()=>Ct.PointLight,(M,T)=>{T(M,{get position(){return xe(_)},get intensity(){return t()}})});var E=_t(y,2);const w=xt(()=>[0,-c()/2-h()/2,0]);Ot(E,()=>Ct.Group,(M,T)=>{T(M,{get position(){return xe(w)},children:(S,b)=>{var I=Pt(),D=ot(I);{var G=H=>{const $=xt(()=>n()*4);a2(H,{get scale(){return xe($)},get far(){return n()},blur:2})};Xt(D,H=>{i()&&H(G)})}it(S,I)},$$slots:{default:!0}})}),it(s,f)}function nR(s,e){qn(e,!0);let t=ut(e,"position",19,()=>[0,0,0]),n=ut(e,"size",3,10),i=ut(e,"divisions",3,10);const{scene:r}=Oi(),o=new E_(n(),i());o.position.x=t()[0],o.position.y=t()[1],o.position.z=t()[2],r.add(o),ji(()=>{r.remove(o)}),jn()}var iR=rn("<!> <!> <!> <!> <!> <!> <!>",1),rR=rn('<input type="range" min="0" max="360" step="1" value="180"><label> </label>',1),sR=rn("<h3>Continuous Joints</h3> <!>",1),oR=(s,e)=>{if(!s.target)return;const n=s.target.value*Math.PI/180-Math.PI;e().rotation=[n*e().axis_xyz[0]+e().origin_rpy[0],n*e().axis_xyz[1]+e().origin_rpy[1],n*e().axis_xyz[2]+e().origin_rpy[2]]},aR=rn('<input type="range" step="1"><label> </label>',1),lR=rn("<h3>Revolute Joints</h3> <!>",1),cR=rn(" <br> ",1),hR=rn(" <br>",1),uR=rn(" <br> visuals: <br> <!>",1),dR=rn('<main class="main-content"><div><!></div> <div class="joint_states svelte-tlisrv"><!> <!> <hr> <input type="range" id="_visual_opacity"><br> <label for="_visual_opacity">Visual Opacity</label> <input type="range" id="_collision_opacity"><br> <label for="_collision_opacity">Collision Opacity</label> <hr> <input type="checkbox" id="_urdf_visual"> <label for="_urdf_visual">Visual</label> <br> <input type="checkbox" id="_urdf_collision"> <label for="_urdf_collision">Collision</label><br> <label for="_urdf_links">Links</label><br> <input type="checkbox" id="_urdf_linknames"> <label for="_urdf_linknames">Link names</label><br> <input type="checkbox" id="_urdf_joints"> <label for="_urdf_joints">Joints</label><br> <input type="checkbox" id="_urdf_jointnames"> <label for="_urdf_jointnames">Joint names</label><br> <input id="_urdf_jointcolor" type="color"> <label for="_urdf_jointcolor">Joint color</label><br> <input id="_urdf_linkcolor" type="color"> <label for="_urdf_linkcolor">Link color</label><br> <input id="_urdf_jointindicolor" type="color"> <label for="_urdf_jointindicolor">Joint indicator color</label><br> <input id="_urdf_highlightcolor" type="color"> <label for="_urdf_highlightcolor">Highlight color</label><br> <input id="_urdf_collisioncolor" type="color"> <label for="_urdf_collisioncolor">Collision color</label><br> <br> Selected:<br> <!> <!></div></main>');function wR(s,e){qn(e,!0);let t=_r(0),n=_r(0),i=X0.url.href;i=i.endsWith("/")?i.substring(0,i.length-1):i;const o="turtlebot3_description/turtlebot3_burger.xml",a=new NC(`${i}/${o}`,i);Fd(async()=>{let q=await a.load();const j=a.fromString(q),J={},B={};for(let Y=0;Y<j.joints.length;Y++){const K=j.joints[Y];K.type=="continuous"&&K.name?J[K.name]=Y:K.type=="revolute"&&K.name&&(B[K.name]=Y)}Xe.continuousJoints=J,Xe.revoluteJoints=B,Xe.robot=j});let l=(Z,q)=>{};var c=dR(),h=bs(c),u=bs(h);IT(u,{createRenderer:Z=>new Uf({canvas:Z,alpha:!0,powerPreference:"high-performance",logarithmicDepthBuffer:!0}),shadows:!0,children:(Z,q)=>{var j=iR(),J=ot(j);Ot(J,()=>Ct.PointLight,(te,ge)=>{ge(te,{color:"white",intensity:.2,position:[0,5,0]})});var B=_t(J,2);Ot(B,()=>Ct.PointLight,(te,ge)=>{ge(te,{color:"blue",intensity:.5,position:[5,5,0]})});var Y=_t(B,2);Ot(Y,()=>Ct.PointLight,(te,ge)=>{ge(te,{color:"yellow",intensity:.5,position:[-5,-5,0]})});var K=_t(Y,2);Ot(K,()=>Ct.PerspectiveCamera,(te,ge)=>{ge(te,{makeDefault:!0,position:[.6,.6,.6],fov:25,children:(be,we)=>{c2(be,{enableZoom:!0,children:(re,me)=>{i2(re,{})},$$slots:{default:!0}})},$$slots:{default:!0}})});var V=_t(K,2);tR(V,{preset_name:"soft"});var W=_t(V,2);nR(W,{});var Q=_t(W,2);{var X=te=>{$C(te,{onselectionchange:l})};Xt(Q,te=>{Xe.robot&&te(X)})}it(Z,j)},$$slots:{default:!0}}),Ss(h);var d=_t(h,2),f=bs(d);{var p=Z=>{var q=sR(),j=_t(ot(q),2);Gr(j,17,()=>Object.entries(Xe.continuousJoints),Vr,(J,B)=>{let Y=()=>xe(B)[0],K=()=>xe(B)[1];var V=rR(),W=ot(V);W.__input=te=>{if(!te.target||!Xe.robot)return;const ge=Xe.robot.joints[K()],we=te.target.value*Math.PI/180-Math.PI;ge.rotation=[we*ge.axis_xyz[0]+ge.origin_rpy[0],we*ge.axis_xyz[1]+ge.origin_rpy[1],we*ge.axis_xyz[2]+ge.origin_rpy[2]]};var Q=_t(W),X=bs(Q,!0);Ss(Q),Ks(()=>{li(W,"id",Y()),li(Q,"for",Y()),Qs(X,Y())}),it(J,V)}),it(Z,q)};Xt(f,Z=>{Xe.robot&&Xe.continuousJoints&&Z(p)})}var v=_t(f,2);{var m=Z=>{var q=lR(),j=_t(ot(q),2);Gr(j,17,()=>Object.entries(Xe.revoluteJoints),Vr,(J,B)=>{let Y=()=>xe(B)[0],K=()=>xe(B)[1];var V=aR(),W=ot(V);bi(W),W.__input=[oR,K];var Q=_t(W),X=bs(Q,!0);Ss(Q),Ks((te,ge)=>{li(W,"id",Y()),li(W,"min",te),li(W,"max",ge),J0(W,te),li(Q,"for",Y()),Qs(X,Y())},[()=>{var te;return Pg(((te=K().limit)==null?void 0:te.lower)||0)},()=>{var te;return Pg(((te=K().limit)==null?void 0:te.upper)||2*Math.PI)}]),it(J,V)}),it(Z,q)};Xt(v,Z=>{Xe.revoluteJoints&&Z(m)})}var g=_t(v,4);bi(g),g.__input=()=>{Xe.visualOpacity=Number(Xe.visualOpacity)},li(g,"min",.1),li(g,"max",1),li(g,"step",.1);var x=_t(g,5);bi(x),x.__input=()=>{Xe.collisionOpacity=Number(Xe.collisionOpacity)},li(x,"min",.1),li(x,"max",1),li(x,"step",.1);var y=_t(x,7);bi(y);var _=_t(y,6);bi(_);var E=_t(_,8);bi(E);var w=_t(E,5);bi(w);var M=_t(w,5);bi(M);var T=_t(M,5);bi(T);var S=_t(T,5);bi(S);var b=_t(S,5);bi(b);var I=_t(b,5);bi(I);var D=_t(I,5);bi(D);var G=_t(D,9);{var H=Z=>{var q=cR(),j=ot(q),J=_t(j,2);Ks(()=>{Qs(j,`joint: ${Xe.selectedJoint.name??""}`),Qs(J,` origin: ${Xe.selectedJoint.origin_xyz??""}`)}),it(Z,q)};Xt(G,Z=>{Xe.selectedJoint&&Z(H)})}var $=_t(G,2);{var F=Z=>{var q=uR(),j=ot(q),J=_t(j,5);{var B=Y=>{var K=Pt(),V=ot(K);Gr(V,17,()=>Xe.selectedLink.visual,Vr,(W,Q)=>{np();var X=hR(),te=ot(X);np(),Ks(()=>Qs(te,` - origin: ${xe(Q).origin_xyz??""} (${xe(Q).type??""}) `)),it(W,X)}),it(Y,K)};Xt(J,Y=>{Xe.selectedLink.visual&&Y(B)})}Ks(()=>Qs(j,`link: ${Xe.selectedLink.name??""}`)),it(Z,q)};Xt($,Z=>{Xe.selectedLink&&Z(F)})}Ss(d),Ss(c),Ks(()=>{ap(h,"width",xe(n)-250+"px"),ap(h,"height",xe(t)+"px")}),lp("innerHeight",Z=>tr(t,wi(Z))),lp("innerWidth",Z=>tr(n,wi(Z))),ts(g,()=>Xe.visualOpacity,Z=>Xe.visualOpacity=Z),ts(x,()=>Xe.collisionOpacity,Z=>Xe.collisionOpacity=Z),Yo(y,()=>Xe.visual,Z=>Xe.visual=Z),Yo(_,()=>Xe.collision,Z=>Xe.collision=Z),Yo(E,()=>Xe.linkNames,Z=>Xe.linkNames=Z),Yo(w,()=>Xe.joints,Z=>Xe.joints=Z),Yo(M,()=>Xe.jointNames,Z=>Xe.jointNames=Z),ts(T,()=>Xe.jointColor,Z=>Xe.jointColor=Z),ts(S,()=>Xe.linkColor,Z=>Xe.linkColor=Z),ts(b,()=>Xe.jointIndicatorColor,Z=>Xe.jointIndicatorColor=Z),ts(I,()=>Xe.highlightColor,Z=>Xe.highlightColor=Z),ts(D,()=>Xe.collisionColor,Z=>Xe.collisionColor=Z),it(s,c),jn()}W0(["input"]);export{wR as component};
